; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\ExLicenseConfig.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??0CExLicenseConfig@@QAE@XZ			; CExLicenseConfig::CExLicenseConfig
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\exlicenseconfig.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CExLicenseConfig@@QAE@XZ PROC			; CExLicenseConfig::CExLicenseConfig
; _this$ = ecx

; 8    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 9    : }

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0CExLicenseConfig@@QAE@XZ ENDP			; CExLicenseConfig::CExLicenseConfig
_TEXT	ENDS
PUBLIC	??1CExLicenseConfig@@QAE@XZ			; CExLicenseConfig::~CExLicenseConfig
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CExLicenseConfig@@QAE@XZ PROC			; CExLicenseConfig::~CExLicenseConfig
; _this$ = ecx

; 12   : {

  00020	55		 push	 ebp
  00021	8b ec		 mov	 ebp, esp
  00023	83 ec 44	 sub	 esp, 68			; 00000044H
  00026	53		 push	 ebx
  00027	56		 push	 esi
  00028	57		 push	 edi
  00029	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 13   : }

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??1CExLicenseConfig@@QAE@XZ ENDP			; CExLicenseConfig::~CExLicenseConfig
_TEXT	ENDS
PUBLIC	?Load@CExLicenseConfig@@QAEXXZ			; CExLicenseConfig::Load
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Load@CExLicenseConfig@@QAEXXZ PROC			; CExLicenseConfig::Load
; _this$ = ecx

; 16   : {

  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
  00043	83 ec 44	 sub	 esp, 68			; 00000044H
  00046	53		 push	 ebx
  00047	56		 push	 esi
  00048	57		 push	 edi
  00049	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 17   : 
; 18   : }

  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5b		 pop	 ebx
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
?Load@CExLicenseConfig@@QAEXXZ ENDP			; CExLicenseConfig::Load
_TEXT	ENDS
PUBLIC	?ReadMedoniAndrei@CExLicenseConfig@@QAEXPAD@Z	; CExLicenseConfig::ReadMedoniAndrei
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_filename$ = 8						; size = 4
?ReadMedoniAndrei@CExLicenseConfig@@QAEXPAD@Z PROC	; CExLicenseConfig::ReadMedoniAndrei
; _this$ = ecx

; 21   : {

  00060	55		 push	 ebp
  00061	8b ec		 mov	 ebp, esp
  00063	83 ec 44	 sub	 esp, 68			; 00000044H
  00066	53		 push	 ebx
  00067	56		 push	 esi
  00068	57		 push	 edi
  00069	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 22   : 
; 23   : }

  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c2 04 00	 ret	 4
?ReadMedoniAndrei@CExLicenseConfig@@QAEXPAD@Z ENDP	; CExLicenseConfig::ReadMedoniAndrei
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ??__Eg_ExLicenseConfig@@YAXXZ
text$yc	SEGMENT
??__Eg_ExLicenseConfig@@YAXXZ PROC			; `dynamic initializer for 'g_ExLicenseConfig'', COMDAT

; 5    : CExLicenseConfig g_ExLicenseConfig;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicenseConfig@@3VCExLicenseConfig@@A ; g_ExLicenseConfig
  0000e	e8 00 00 00 00	 call	 ??0CExLicenseConfig@@QAE@XZ ; CExLicenseConfig::CExLicenseConfig
  00013	68 00 00 00 00	 push	 OFFSET ??__Fg_ExLicenseConfig@@YAXXZ ; `dynamic atexit destructor for 'g_ExLicenseConfig''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__Eg_ExLicenseConfig@@YAXXZ ENDP			; `dynamic initializer for 'g_ExLicenseConfig''
; Function compile flags: /Odtp /ZI
text$yc	ENDS
;	COMDAT ??__Fg_ExLicenseConfig@@YAXXZ
text$yd	SEGMENT
??__Fg_ExLicenseConfig@@YAXXZ PROC			; `dynamic atexit destructor for 'g_ExLicenseConfig'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicenseConfig@@3VCExLicenseConfig@@A ; g_ExLicenseConfig
  0000e	e8 00 00 00 00	 call	 ??1CExLicenseConfig@@QAE@XZ ; CExLicenseConfig::~CExLicenseConfig
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__Fg_ExLicenseConfig@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_ExLicenseConfig''
text$yd	ENDS
PUBLIC	?g_ExLicenseConfig@@3VCExLicenseConfig@@A	; g_ExLicenseConfig
_BSS	SEGMENT
?g_ExLicenseConfig@@3VCExLicenseConfig@@A DB 0cH DUP (?) ; g_ExLicenseConfig
_BSS	ENDS
CRT$XCU	SEGMENT
_g_ExLicenseConfig$initializer$ DD FLAT:??__Eg_ExLicenseConfig@@YAXXZ
CRT$XCU	ENDS
END
