; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\CrywolfAltar.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??0CCrywolfAltarInfo@@QAE@XZ			; CCrywolfAltarInfo::CCrywolfAltarInfo
PUBLIC	??_7CCrywolfAltar@@6B@				; CCrywolfAltar::`vftable'
PUBLIC	??0CCrywolfAltar@@QAE@XZ			; CCrywolfAltar::CCrywolfAltar
PUBLIC	??_R4CCrywolfAltar@@6B@				; CCrywolfAltar::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCrywolfAltar@@@8			; CCrywolfAltar `RTTI Type Descriptor'
PUBLIC	??_R3CCrywolfAltar@@8				; CCrywolfAltar::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCrywolfAltar@@8				; CCrywolfAltar::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCrywolfAltar@@8			; CCrywolfAltar::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECCrywolfAltar@@UAEPAXI@Z:PROC		; CCrywolfAltar::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CCrywolfAltar@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\crywolfaltar.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CCrywolfAltar@@8 DD FLAT:??_R0?AVCCrywolfAltar@@@8 ; CCrywolfAltar::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCrywolfAltar@@8
rdata$r	ENDS
;	COMDAT ??_R2CCrywolfAltar@@8
rdata$r	SEGMENT
??_R2CCrywolfAltar@@8 DD FLAT:??_R1A@?0A@EA@CCrywolfAltar@@8 ; CCrywolfAltar::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CCrywolfAltar@@8
rdata$r	SEGMENT
??_R3CCrywolfAltar@@8 DD 00H				; CCrywolfAltar::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CCrywolfAltar@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCrywolfAltar@@@8
_DATA	SEGMENT
??_R0?AVCCrywolfAltar@@@8 DD FLAT:??_7type_info@@6B@	; CCrywolfAltar `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCrywolfAltar@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CCrywolfAltar@@6B@
rdata$r	SEGMENT
??_R4CCrywolfAltar@@6B@ DD 00H				; CCrywolfAltar::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCrywolfAltar@@@8
	DD	FLAT:??_R3CCrywolfAltar@@8
rdata$r	ENDS
;	COMDAT ??_7CCrywolfAltar@@6B@
CONST	SEGMENT
??_7CCrywolfAltar@@6B@ DD FLAT:??_R4CCrywolfAltar@@6B@	; CCrywolfAltar::`vftable'
	DD	FLAT:??_ECCrywolfAltar@@UAEPAXI@Z
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CCrywolfAltar@@QAE@XZ PROC				; CCrywolfAltar::CCrywolfAltar
; _this$ = ecx

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CCrywolfAltar@@6B@
  00015	68 00 00 00 00	 push	 OFFSET ??0CCrywolfAltarInfo@@QAE@XZ ; CCrywolfAltarInfo::CCrywolfAltarInfo
  0001a	6a 05		 push	 5
  0001c	6a 1c		 push	 28			; 0000001cH
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 c0 04	 add	 eax, 4
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??_H@YGXPAXIHP6EPAX0@Z@Z

; 19   : 	return;
; 20   : }

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
??0CCrywolfAltar@@QAE@XZ ENDP				; CCrywolfAltar::CCrywolfAltar
_TEXT	ENDS
PUBLIC	?Reset@CCrywolfAltarInfo@@QAEXXZ		; CCrywolfAltarInfo::Reset
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\crywolfaltar.h
;	COMDAT ??0CCrywolfAltarInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CCrywolfAltarInfo@@QAE@XZ PROC			; CCrywolfAltarInfo::CCrywolfAltarInfo, COMDAT
; _this$ = ecx

; 23   : 	CCrywolfAltarInfo()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 24   : 	{
; 25   : 		this->Reset();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?Reset@CCrywolfAltarInfo@@QAEXXZ ; CCrywolfAltarInfo::Reset

; 26   : 	}

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0CCrywolfAltarInfo@@QAE@XZ ENDP			; CCrywolfAltarInfo::CCrywolfAltarInfo
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?Reset@CCrywolfAltarInfo@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Reset@CCrywolfAltarInfo@@QAEXXZ PROC			; CCrywolfAltarInfo::Reset, COMDAT
; _this$ = ecx

; 30   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 31   : 		this->m_iAltarState = 0;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 32   : 		this->m_iUserIndex = -1;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 08 ff ff
	ff ff		 mov	 DWORD PTR [eax+8], -1

; 33   : 		this->m_iAltarIndex = -1;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 04 ff ff
	ff ff		 mov	 DWORD PTR [eax+4], -1

; 34   : 		this->m_iContractCount = 0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 35   : 		this->m_dwAppliedContractTime =0 ;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 36   : 		this->m_dwValidContractTime =0 ;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 37   : 		this->m_dwLastValidContractTime =0 ;

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 38   : 	}

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
?Reset@CCrywolfAltarInfo@@QAEXXZ ENDP			; CCrywolfAltarInfo::Reset
_TEXT	ENDS
PUBLIC	??1CCrywolfAltar@@UAE@XZ			; CCrywolfAltar::~CCrywolfAltar
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCCrywolfAltar@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCCrywolfAltar@@UAEPAXI@Z PROC			; CCrywolfAltar::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CCrywolfAltar@@UAE@XZ ; CCrywolfAltar::~CCrywolfAltar
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCCrywolfAltar@@UAEPAXI@Z ENDP			; CCrywolfAltar::`scalar deleting destructor'
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\crywolfaltar.cpp
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CCrywolfAltar@@UAE@XZ PROC				; CCrywolfAltar::~CCrywolfAltar
; _this$ = ecx

; 23   : {

  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
  00043	83 ec 44	 sub	 esp, 68			; 00000044H
  00046	53		 push	 ebx
  00047	56		 push	 esi
  00048	57		 push	 edi
  00049	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CCrywolfAltar@@6B@

; 24   : 	return;
; 25   : }

  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
??1CCrywolfAltar@@UAE@XZ ENDP				; CCrywolfAltar::~CCrywolfAltar
_TEXT	ENDS
PUBLIC	?GetAltarState@CCrywolfAltarInfo@@QAEHXZ	; CCrywolfAltarInfo::GetAltarState
PUBLIC	?GetAltarState@CCrywolfAltar@@QAEHH@Z		; CCrywolfAltar::GetAltarState
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv64 = -76						; size = 4
_iAltarState$ = -8					; size = 4
_this$ = -4						; size = 4
_iClass$ = 8						; size = 4
?GetAltarState@CCrywolfAltar@@QAEHH@Z PROC		; CCrywolfAltar::GetAltarState
; _this$ = ecx

; 28   : {

  00060	55		 push	 ebp
  00061	8b ec		 mov	 ebp, esp
  00063	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00066	53		 push	 ebx
  00067	56		 push	 esi
  00068	57		 push	 edi
  00069	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 29   : 	int iAltarState = 0;

  0006c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iAltarState$[ebp], 0

; 30   : 
; 31   : 	switch ( iClass )

  00073	8b 45 08	 mov	 eax, DWORD PTR _iClass$[ebp]
  00076	89 45 b4	 mov	 DWORD PTR tv64[ebp], eax
  00079	8b 4d b4	 mov	 ecx, DWORD PTR tv64[ebp]
  0007c	81 e9 cd 00 00
	00		 sub	 ecx, 205		; 000000cdH
  00082	89 4d b4	 mov	 DWORD PTR tv64[ebp], ecx
  00085	83 7d b4 04	 cmp	 DWORD PTR tv64[ebp], 4
  00089	77 58		 ja	 SHORT $LN6@GetAltarSt
  0008b	8b 55 b4	 mov	 edx, DWORD PTR tv64[ebp]
  0008e	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN10@GetAltarSt[edx*4]
$LN5@GetAltarSt:

; 32   : 	{
; 33   : 		case 205:
; 34   : 			iAltarState = this->m_AltarInfo[0].GetAltarState();

  00095	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	83 c1 04	 add	 ecx, 4
  0009b	e8 00 00 00 00	 call	 ?GetAltarState@CCrywolfAltarInfo@@QAEHXZ ; CCrywolfAltarInfo::GetAltarState
  000a0	89 45 f8	 mov	 DWORD PTR _iAltarState$[ebp], eax

; 35   : 			break;

  000a3	eb 3e		 jmp	 SHORT $LN6@GetAltarSt
$LN4@GetAltarSt:

; 36   : 		case 206:
; 37   : 			iAltarState = this->m_AltarInfo[1].GetAltarState();

  000a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	83 c1 20	 add	 ecx, 32			; 00000020H
  000ab	e8 00 00 00 00	 call	 ?GetAltarState@CCrywolfAltarInfo@@QAEHXZ ; CCrywolfAltarInfo::GetAltarState
  000b0	89 45 f8	 mov	 DWORD PTR _iAltarState$[ebp], eax

; 38   : 			break;

  000b3	eb 2e		 jmp	 SHORT $LN6@GetAltarSt
$LN3@GetAltarSt:

; 39   : 		case 207:
; 40   : 			iAltarState = this->m_AltarInfo[2].GetAltarState();

  000b5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b8	83 c1 3c	 add	 ecx, 60			; 0000003cH
  000bb	e8 00 00 00 00	 call	 ?GetAltarState@CCrywolfAltarInfo@@QAEHXZ ; CCrywolfAltarInfo::GetAltarState
  000c0	89 45 f8	 mov	 DWORD PTR _iAltarState$[ebp], eax

; 41   : 			break;

  000c3	eb 1e		 jmp	 SHORT $LN6@GetAltarSt
$LN2@GetAltarSt:

; 42   : 		case 208:
; 43   : 			iAltarState = this->m_AltarInfo[3].GetAltarState();

  000c5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c8	83 c1 58	 add	 ecx, 88			; 00000058H
  000cb	e8 00 00 00 00	 call	 ?GetAltarState@CCrywolfAltarInfo@@QAEHXZ ; CCrywolfAltarInfo::GetAltarState
  000d0	89 45 f8	 mov	 DWORD PTR _iAltarState$[ebp], eax

; 44   : 			break;

  000d3	eb 0e		 jmp	 SHORT $LN6@GetAltarSt
$LN1@GetAltarSt:

; 45   : 		case 209:
; 46   : 			iAltarState = this->m_AltarInfo[4].GetAltarState();

  000d5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d8	83 c1 74	 add	 ecx, 116		; 00000074H
  000db	e8 00 00 00 00	 call	 ?GetAltarState@CCrywolfAltarInfo@@QAEHXZ ; CCrywolfAltarInfo::GetAltarState
  000e0	89 45 f8	 mov	 DWORD PTR _iAltarState$[ebp], eax
$LN6@GetAltarSt:

; 47   : 			break;
; 48   : 	}
; 49   : 
; 50   : 	return iAltarState;

  000e3	8b 45 f8	 mov	 eax, DWORD PTR _iAltarState$[ebp]

; 51   : }

  000e6	5f		 pop	 edi
  000e7	5e		 pop	 esi
  000e8	5b		 pop	 ebx
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c2 04 00	 ret	 4
  000ef	90		 npad	 1
$LN10@GetAltarSt:
  000f0	00 00 00 00	 DD	 $LN5@GetAltarSt
  000f4	00 00 00 00	 DD	 $LN4@GetAltarSt
  000f8	00 00 00 00	 DD	 $LN3@GetAltarSt
  000fc	00 00 00 00	 DD	 $LN2@GetAltarSt
  00100	00 00 00 00	 DD	 $LN1@GetAltarSt
?GetAltarState@CCrywolfAltar@@QAEHH@Z ENDP		; CCrywolfAltar::GetAltarState
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\crywolfaltar.h
_TEXT	ENDS
;	COMDAT ?GetAltarState@CCrywolfAltarInfo@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAltarState@CCrywolfAltarInfo@@QAEHXZ PROC		; CCrywolfAltarInfo::GetAltarState, COMDAT
; _this$ = ecx

; 52   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 53   : 		return this->m_iAltarState;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 00		 mov	 eax, DWORD PTR [eax]

; 54   : 	}

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetAltarState@CCrywolfAltarInfo@@QAEHXZ ENDP		; CCrywolfAltarInfo::GetAltarState
_TEXT	ENDS
PUBLIC	?GetRemainContractCount@CCrywolfAltarInfo@@QAEHXZ ; CCrywolfAltarInfo::GetRemainContractCount
PUBLIC	?GetAltarRemainContractCount@CCrywolfAltar@@QAEHH@Z ; CCrywolfAltar::GetAltarRemainContractCount
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\crywolfaltar.cpp
_TEXT	SEGMENT
tv64 = -76						; size = 4
_iAltarRemainContractCount$ = -8			; size = 4
_this$ = -4						; size = 4
_iClass$ = 8						; size = 4
?GetAltarRemainContractCount@CCrywolfAltar@@QAEHH@Z PROC ; CCrywolfAltar::GetAltarRemainContractCount
; _this$ = ecx

; 54   : {

  00110	55		 push	 ebp
  00111	8b ec		 mov	 ebp, esp
  00113	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00116	53		 push	 ebx
  00117	56		 push	 esi
  00118	57		 push	 edi
  00119	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 55   : 	int iAltarRemainContractCount = 0;

  0011c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iAltarRemainContractCount$[ebp], 0

; 56   : 
; 57   : 	switch ( iClass )

  00123	8b 45 08	 mov	 eax, DWORD PTR _iClass$[ebp]
  00126	89 45 b4	 mov	 DWORD PTR tv64[ebp], eax
  00129	8b 4d b4	 mov	 ecx, DWORD PTR tv64[ebp]
  0012c	81 e9 cd 00 00
	00		 sub	 ecx, 205		; 000000cdH
  00132	89 4d b4	 mov	 DWORD PTR tv64[ebp], ecx
  00135	83 7d b4 04	 cmp	 DWORD PTR tv64[ebp], 4
  00139	77 58		 ja	 SHORT $LN6@GetAltarRe
  0013b	8b 55 b4	 mov	 edx, DWORD PTR tv64[ebp]
  0013e	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN10@GetAltarRe[edx*4]
$LN5@GetAltarRe:

; 58   : 	{
; 59   : 		case 205:
; 60   : 			iAltarRemainContractCount = this->m_AltarInfo[0].GetRemainContractCount();

  00145	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00148	83 c1 04	 add	 ecx, 4
  0014b	e8 00 00 00 00	 call	 ?GetRemainContractCount@CCrywolfAltarInfo@@QAEHXZ ; CCrywolfAltarInfo::GetRemainContractCount
  00150	89 45 f8	 mov	 DWORD PTR _iAltarRemainContractCount$[ebp], eax

; 61   : 			break;

  00153	eb 3e		 jmp	 SHORT $LN6@GetAltarRe
$LN4@GetAltarRe:

; 62   : 		case 206:
; 63   : 			iAltarRemainContractCount = this->m_AltarInfo[1].GetRemainContractCount();

  00155	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00158	83 c1 20	 add	 ecx, 32			; 00000020H
  0015b	e8 00 00 00 00	 call	 ?GetRemainContractCount@CCrywolfAltarInfo@@QAEHXZ ; CCrywolfAltarInfo::GetRemainContractCount
  00160	89 45 f8	 mov	 DWORD PTR _iAltarRemainContractCount$[ebp], eax

; 64   : 			break;

  00163	eb 2e		 jmp	 SHORT $LN6@GetAltarRe
$LN3@GetAltarRe:

; 65   : 		case 207:
; 66   : 			iAltarRemainContractCount = this->m_AltarInfo[2].GetRemainContractCount();

  00165	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00168	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0016b	e8 00 00 00 00	 call	 ?GetRemainContractCount@CCrywolfAltarInfo@@QAEHXZ ; CCrywolfAltarInfo::GetRemainContractCount
  00170	89 45 f8	 mov	 DWORD PTR _iAltarRemainContractCount$[ebp], eax

; 67   : 			break;

  00173	eb 1e		 jmp	 SHORT $LN6@GetAltarRe
$LN2@GetAltarRe:

; 68   : 		case 208:
; 69   : 			iAltarRemainContractCount = this->m_AltarInfo[3].GetRemainContractCount();

  00175	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00178	83 c1 58	 add	 ecx, 88			; 00000058H
  0017b	e8 00 00 00 00	 call	 ?GetRemainContractCount@CCrywolfAltarInfo@@QAEHXZ ; CCrywolfAltarInfo::GetRemainContractCount
  00180	89 45 f8	 mov	 DWORD PTR _iAltarRemainContractCount$[ebp], eax

; 70   : 			break;

  00183	eb 0e		 jmp	 SHORT $LN6@GetAltarRe
$LN1@GetAltarRe:

; 71   : 		case 209:
; 72   : 			iAltarRemainContractCount = this->m_AltarInfo[4].GetRemainContractCount();

  00185	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00188	83 c1 74	 add	 ecx, 116		; 00000074H
  0018b	e8 00 00 00 00	 call	 ?GetRemainContractCount@CCrywolfAltarInfo@@QAEHXZ ; CCrywolfAltarInfo::GetRemainContractCount
  00190	89 45 f8	 mov	 DWORD PTR _iAltarRemainContractCount$[ebp], eax
$LN6@GetAltarRe:

; 73   : 			break;
; 74   : 	}
; 75   : 
; 76   : 	return iAltarRemainContractCount;

  00193	8b 45 f8	 mov	 eax, DWORD PTR _iAltarRemainContractCount$[ebp]

; 77   : }

  00196	5f		 pop	 edi
  00197	5e		 pop	 esi
  00198	5b		 pop	 ebx
  00199	8b e5		 mov	 esp, ebp
  0019b	5d		 pop	 ebp
  0019c	c2 04 00	 ret	 4
  0019f	90		 npad	 1
$LN10@GetAltarRe:
  001a0	00 00 00 00	 DD	 $LN5@GetAltarRe
  001a4	00 00 00 00	 DD	 $LN4@GetAltarRe
  001a8	00 00 00 00	 DD	 $LN3@GetAltarRe
  001ac	00 00 00 00	 DD	 $LN2@GetAltarRe
  001b0	00 00 00 00	 DD	 $LN1@GetAltarRe
?GetAltarRemainContractCount@CCrywolfAltar@@QAEHH@Z ENDP ; CCrywolfAltar::GetAltarRemainContractCount
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\crywolfaltar.h
_TEXT	ENDS
;	COMDAT ?GetRemainContractCount@CCrywolfAltarInfo@@QAEHXZ
_TEXT	SEGMENT
_iRemainCount$ = -8					; size = 4
_this$ = -4						; size = 4
?GetRemainContractCount@CCrywolfAltarInfo@@QAEHXZ PROC	; CCrywolfAltarInfo::GetRemainContractCount, COMDAT
; _this$ = ecx

; 41   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 42   : 		int iRemainCount = MAX_ALTAR_CONTRACTS - this->m_iContractCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	b9 02 00 00 00	 mov	 ecx, 2
  00014	2b 48 0c	 sub	 ecx, DWORD PTR [eax+12]
  00017	89 4d f8	 mov	 DWORD PTR _iRemainCount$[ebp], ecx

; 43   : 		return (iRemainCount<0)?0:iRemainCount;

  0001a	33 c0		 xor	 eax, eax
  0001c	83 7d f8 00	 cmp	 DWORD PTR _iRemainCount$[ebp], 0
  00020	0f 9c c0	 setl	 al
  00023	83 e8 01	 sub	 eax, 1
  00026	23 45 f8	 and	 eax, DWORD PTR _iRemainCount$[ebp]

; 44   : 	}

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?GetRemainContractCount@CCrywolfAltarInfo@@QAEHXZ ENDP	; CCrywolfAltarInfo::GetRemainContractCount
_TEXT	ENDS
PUBLIC	?GetAlatarNumber@CCrywolfAltar@@QAEHH@Z		; CCrywolfAltar::GetAlatarNumber
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\crywolfaltar.cpp
_TEXT	SEGMENT
tv64 = -76						; size = 4
_iAltarNumber$ = -8					; size = 4
_this$ = -4						; size = 4
_iClass$ = 8						; size = 4
?GetAlatarNumber@CCrywolfAltar@@QAEHH@Z PROC		; CCrywolfAltar::GetAlatarNumber
; _this$ = ecx

; 80   : {

  001c0	55		 push	 ebp
  001c1	8b ec		 mov	 ebp, esp
  001c3	83 ec 4c	 sub	 esp, 76			; 0000004cH
  001c6	53		 push	 ebx
  001c7	56		 push	 esi
  001c8	57		 push	 edi
  001c9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 81   : 	int iAltarNumber = 0;

  001cc	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iAltarNumber$[ebp], 0

; 82   : 
; 83   : 	switch ( iClass )

  001d3	8b 45 08	 mov	 eax, DWORD PTR _iClass$[ebp]
  001d6	89 45 b4	 mov	 DWORD PTR tv64[ebp], eax
  001d9	8b 4d b4	 mov	 ecx, DWORD PTR tv64[ebp]
  001dc	81 e9 cd 00 00
	00		 sub	 ecx, 205		; 000000cdH
  001e2	89 4d b4	 mov	 DWORD PTR tv64[ebp], ecx
  001e5	83 7d b4 04	 cmp	 DWORD PTR tv64[ebp], 4
  001e9	77 35		 ja	 SHORT $LN6@GetAlatarN
  001eb	8b 55 b4	 mov	 edx, DWORD PTR tv64[ebp]
  001ee	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN10@GetAlatarN[edx*4]
$LN5@GetAlatarN:

; 84   : 	{
; 85   : 		case 205:
; 86   : 			iAltarNumber = 0;

  001f5	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iAltarNumber$[ebp], 0

; 87   : 			break;

  001fc	eb 22		 jmp	 SHORT $LN6@GetAlatarN
$LN4@GetAlatarN:

; 88   : 		case 206:
; 89   : 			iAltarNumber = 1;

  001fe	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _iAltarNumber$[ebp], 1

; 90   : 			break;

  00205	eb 19		 jmp	 SHORT $LN6@GetAlatarN
$LN3@GetAlatarN:

; 91   : 		case 207:
; 92   : 			iAltarNumber = 2;

  00207	c7 45 f8 02 00
	00 00		 mov	 DWORD PTR _iAltarNumber$[ebp], 2

; 93   : 			break;

  0020e	eb 10		 jmp	 SHORT $LN6@GetAlatarN
$LN2@GetAlatarN:

; 94   : 		case 208:
; 95   : 			iAltarNumber = 3;

  00210	c7 45 f8 03 00
	00 00		 mov	 DWORD PTR _iAltarNumber$[ebp], 3

; 96   : 			break;

  00217	eb 07		 jmp	 SHORT $LN6@GetAlatarN
$LN1@GetAlatarN:

; 97   : 		case 209:
; 98   : 			iAltarNumber = 4;

  00219	c7 45 f8 04 00
	00 00		 mov	 DWORD PTR _iAltarNumber$[ebp], 4
$LN6@GetAlatarN:

; 99   : 			break;
; 100  : 	}
; 101  : 
; 102  : 	return iAltarNumber;

  00220	8b 45 f8	 mov	 eax, DWORD PTR _iAltarNumber$[ebp]

; 103  : }

  00223	5f		 pop	 edi
  00224	5e		 pop	 esi
  00225	5b		 pop	 ebx
  00226	8b e5		 mov	 esp, ebp
  00228	5d		 pop	 ebp
  00229	c2 04 00	 ret	 4
$LN10@GetAlatarN:
  0022c	00 00 00 00	 DD	 $LN5@GetAlatarN
  00230	00 00 00 00	 DD	 $LN4@GetAlatarN
  00234	00 00 00 00	 DD	 $LN3@GetAlatarN
  00238	00 00 00 00	 DD	 $LN2@GetAlatarN
  0023c	00 00 00 00	 DD	 $LN1@GetAlatarN
?GetAlatarNumber@CCrywolfAltar@@QAEHH@Z ENDP		; CCrywolfAltar::GetAlatarNumber
_TEXT	ENDS
PUBLIC	?GetAltarUserIndex@CCrywolfAltar@@QAEHH@Z	; CCrywolfAltar::GetAltarUserIndex
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv64 = -76						; size = 4
_iUserIndex$ = -8					; size = 4
_this$ = -4						; size = 4
_iClass$ = 8						; size = 4
?GetAltarUserIndex@CCrywolfAltar@@QAEHH@Z PROC		; CCrywolfAltar::GetAltarUserIndex
; _this$ = ecx

; 106  : {

  00240	55		 push	 ebp
  00241	8b ec		 mov	 ebp, esp
  00243	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00246	53		 push	 ebx
  00247	56		 push	 esi
  00248	57		 push	 edi
  00249	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 107  : 	int iUserIndex = -1;

  0024c	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR _iUserIndex$[ebp], -1

; 108  : 
; 109  : 	switch ( iClass )

  00253	8b 45 08	 mov	 eax, DWORD PTR _iClass$[ebp]
  00256	89 45 b4	 mov	 DWORD PTR tv64[ebp], eax
  00259	8b 4d b4	 mov	 ecx, DWORD PTR tv64[ebp]
  0025c	81 e9 cd 00 00
	00		 sub	 ecx, 205		; 000000cdH
  00262	89 4d b4	 mov	 DWORD PTR tv64[ebp], ecx
  00265	83 7d b4 04	 cmp	 DWORD PTR tv64[ebp], 4
  00269	77 3f		 ja	 SHORT $LN6@GetAltarUs
  0026b	8b 55 b4	 mov	 edx, DWORD PTR tv64[ebp]
  0026e	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN10@GetAltarUs[edx*4]
$LN5@GetAltarUs:

; 110  : 	{
; 111  : 		case 205:
; 112  : 			iUserIndex = this->m_AltarInfo[0].m_iUserIndex;

  00275	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00278	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0027b	89 4d f8	 mov	 DWORD PTR _iUserIndex$[ebp], ecx

; 113  : 			break;

  0027e	eb 2a		 jmp	 SHORT $LN6@GetAltarUs
$LN4@GetAltarUs:

; 114  : 		case 206:
; 115  : 			iUserIndex = this->m_AltarInfo[1].m_iUserIndex;

  00280	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00283	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00286	89 4d f8	 mov	 DWORD PTR _iUserIndex$[ebp], ecx

; 116  : 			break;

  00289	eb 1f		 jmp	 SHORT $LN6@GetAltarUs
$LN3@GetAltarUs:

; 117  : 		case 207:
; 118  : 			iUserIndex = this->m_AltarInfo[2].m_iUserIndex;

  0028b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0028e	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00291	89 4d f8	 mov	 DWORD PTR _iUserIndex$[ebp], ecx

; 119  : 			break;

  00294	eb 14		 jmp	 SHORT $LN6@GetAltarUs
$LN2@GetAltarUs:

; 120  : 		case 208:
; 121  : 			iUserIndex = this->m_AltarInfo[3].m_iUserIndex;

  00296	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00299	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  0029c	89 4d f8	 mov	 DWORD PTR _iUserIndex$[ebp], ecx

; 122  : 			break;

  0029f	eb 09		 jmp	 SHORT $LN6@GetAltarUs
$LN1@GetAltarUs:

; 123  : 		case 209:
; 124  : 			iUserIndex = this->m_AltarInfo[4].m_iUserIndex;

  002a1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002a4	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  002a7	89 4d f8	 mov	 DWORD PTR _iUserIndex$[ebp], ecx
$LN6@GetAltarUs:

; 125  : 			break;
; 126  : 	}
; 127  : 
; 128  : 	return iUserIndex;

  002aa	8b 45 f8	 mov	 eax, DWORD PTR _iUserIndex$[ebp]

; 129  : }

  002ad	5f		 pop	 edi
  002ae	5e		 pop	 esi
  002af	5b		 pop	 ebx
  002b0	8b e5		 mov	 esp, ebp
  002b2	5d		 pop	 ebp
  002b3	c2 04 00	 ret	 4
  002b6	8b ff		 npad	 2
$LN10@GetAltarUs:
  002b8	00 00 00 00	 DD	 $LN5@GetAltarUs
  002bc	00 00 00 00	 DD	 $LN4@GetAltarUs
  002c0	00 00 00 00	 DD	 $LN3@GetAltarUs
  002c4	00 00 00 00	 DD	 $LN2@GetAltarUs
  002c8	00 00 00 00	 DD	 $LN1@GetAltarUs
?GetAltarUserIndex@CCrywolfAltar@@QAEHH@Z ENDP		; CCrywolfAltar::GetAltarUserIndex
_TEXT	ENDS
PUBLIC	?SetAltarState@CCrywolfAltarInfo@@QAEXH@Z	; CCrywolfAltarInfo::SetAltarState
PUBLIC	??_C@_0DO@EHCJPHEK@?$FL?5Crywolf?5?$FN?$FLAltar?5Op?4?$FN?5?5?$FL?$CFs?$FN?$FL?$CFs?$FN@ ; `string'
PUBLIC	?SetAltarValidContract@CCrywolfAltar@@QAEXHH@Z	; CCrywolfAltar::SetAltarValidContract
EXTRN	?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z:PROC ; gObjApplyBuffEffectDuration
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?SendCrywolfUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ:PROC ; CCrywolfUtil::SendCrywolfUserAnyMsg
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?MsgOutput@@YAXHPADZZ:PROC			; MsgOutput
EXTRN	?Get@CMsg@@QAEPADH@Z:PROC			; CMsg::Get
EXTRN	?lMsg@@3VCMsg@@A:BYTE				; lMsg
EXTRN	__imp__GetTickCount@0:PROC
;	COMDAT ??_C@_0DO@EHCJPHEK@?$FL?5Crywolf?5?$FN?$FLAltar?5Op?4?$FN?5?5?$FL?$CFs?$FN?$FL?$CFs?$FN@
CONST	SEGMENT
??_C@_0DO@EHCJPHEK@?$FL?5Crywolf?5?$FN?$FLAltar?5Op?4?$FN?5?5?$FL?$CFs?$FN?$FL?$CFs?$FN@ DB '['
	DB	' Crywolf ][Altar Op.]  [%s][%s] Set Valid Contract Altar[%d]', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_AltarInfo$ = -12					; size = 4
_iAltarNumber$ = -8					; size = 4
_this$ = -4						; size = 4
_iAltarObjIndex$ = 8					; size = 4
_iClass$ = 12						; size = 4
?SetAltarValidContract@CCrywolfAltar@@QAEXHH@Z PROC	; CCrywolfAltar::SetAltarValidContract
; _this$ = ecx

; 132  : {

  002d0	55		 push	 ebp
  002d1	8b ec		 mov	 ebp, esp
  002d3	83 ec 4c	 sub	 esp, 76			; 0000004cH
  002d6	53		 push	 ebx
  002d7	56		 push	 esi
  002d8	57		 push	 edi
  002d9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 133  : 	int iAltarNumber = this->GetAlatarNumber(iClass);

  002dc	8b 45 0c	 mov	 eax, DWORD PTR _iClass$[ebp]
  002df	50		 push	 eax
  002e0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002e3	e8 00 00 00 00	 call	 ?GetAlatarNumber@CCrywolfAltar@@QAEHH@Z ; CCrywolfAltar::GetAlatarNumber
  002e8	89 45 f8	 mov	 DWORD PTR _iAltarNumber$[ebp], eax

; 134  : 	CCrywolfAltarInfo * AltarInfo = &this->m_AltarInfo[iAltarNumber];

  002eb	8b 45 f8	 mov	 eax, DWORD PTR _iAltarNumber$[ebp]
  002ee	6b c0 1c	 imul	 eax, 28			; 0000001cH
  002f1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002f4	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  002f8	89 55 f4	 mov	 DWORD PTR _AltarInfo$[ebp], edx

; 135  : 
; 136  : 	if ( AltarInfo->GetAltarState() != 2 )

  002fb	8b 4d f4	 mov	 ecx, DWORD PTR _AltarInfo$[ebp]
  002fe	e8 00 00 00 00	 call	 ?GetAltarState@CCrywolfAltarInfo@@QAEHXZ ; CCrywolfAltarInfo::GetAltarState
  00303	83 f8 02	 cmp	 eax, 2
  00306	74 05		 je	 SHORT $LN2@SetAltarVa

; 137  : 	{
; 138  : 		return;

  00308	e9 db 00 00 00	 jmp	 $LN3@SetAltarVa
$LN2@SetAltarVa:

; 139  : 	}
; 140  : 
; 141  : 	if ( AltarInfo->m_dwValidContractTime < GetTickCount() )

  0030d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00313	8b 4d f4	 mov	 ecx, DWORD PTR _AltarInfo$[ebp]
  00316	39 41 14	 cmp	 DWORD PTR [ecx+20], eax
  00319	0f 83 c9 00 00
	00		 jae	 $LN3@SetAltarVa

; 142  : 	{
; 143  : 		MsgOutput(AltarInfo->m_iUserIndex, lMsg.Get(MSGGET(12, 251)), iAltarNumber);

  0031f	8b 45 f8	 mov	 eax, DWORD PTR _iAltarNumber$[ebp]
  00322	50		 push	 eax
  00323	68 fb 0c 00 00	 push	 3323			; 00000cfbH
  00328	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0032d	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00332	50		 push	 eax
  00333	8b 4d f4	 mov	 ecx, DWORD PTR _AltarInfo$[ebp]
  00336	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00339	52		 push	 edx
  0033a	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  0033f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 144  : 
; 145  : 		UTIL.SendCrywolfUserAnyMsg(2, lMsg.Get(MSGGET(12, 252)), gObj[AltarInfo->m_iUserIndex].Name, iAltarNumber);

  00342	8b 45 f8	 mov	 eax, DWORD PTR _iAltarNumber$[ebp]
  00345	50		 push	 eax
  00346	8b 4d f4	 mov	 ecx, DWORD PTR _AltarInfo$[ebp]
  00349	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0034c	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  00352	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00357	8d 4c 10 77	 lea	 ecx, DWORD PTR [eax+edx+119]
  0035b	51		 push	 ecx
  0035c	68 fc 0c 00 00	 push	 3324			; 00000cfcH
  00361	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00366	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0036b	50		 push	 eax
  0036c	6a 02		 push	 2
  0036e	68 00 00 00 00	 push	 OFFSET _UTIL
  00373	e8 00 00 00 00	 call	 ?SendCrywolfUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ ; CCrywolfUtil::SendCrywolfUserAnyMsg
  00378	83 c4 14	 add	 esp, 20			; 00000014H

; 146  : 
; 147  : 		LogAddTD("[ Crywolf ][Altar Op.]  [%s][%s] Set Valid Contract Altar[%d]", gObj[AltarInfo->m_iUserIndex].AccountID, gObj[AltarInfo->m_iUserIndex].Name, iAltarNumber);

  0037b	8b 45 f8	 mov	 eax, DWORD PTR _iAltarNumber$[ebp]
  0037e	50		 push	 eax
  0037f	8b 4d f4	 mov	 ecx, DWORD PTR _AltarInfo$[ebp]
  00382	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00385	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  0038b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00390	8d 4c 10 77	 lea	 ecx, DWORD PTR [eax+edx+119]
  00394	51		 push	 ecx
  00395	8b 55 f4	 mov	 edx, DWORD PTR _AltarInfo$[ebp]
  00398	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0039b	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  003a1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  003a7	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  003ab	52		 push	 edx
  003ac	68 00 00 00 00	 push	 OFFSET ??_C@_0DO@EHCJPHEK@?$FL?5Crywolf?5?$FN?$FLAltar?5Op?4?$FN?5?5?$FL?$CFs?$FN?$FL?$CFs?$FN@
  003b1	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  003b7	83 c4 10	 add	 esp, 16			; 00000010H

; 148  : 
; 149  : 		AltarInfo->SetAltarState(1);

  003ba	6a 01		 push	 1
  003bc	8b 4d f4	 mov	 ecx, DWORD PTR _AltarInfo$[ebp]
  003bf	e8 00 00 00 00	 call	 ?SetAltarState@CCrywolfAltarInfo@@QAEXH@Z ; CCrywolfAltarInfo::SetAltarState

; 150  : 
; 151  : 		gObjApplyBuffEffectDuration(&gObj[iAltarObjIndex], AT_CW_ALTAR_STATUS, 0, 0, 0, 0, -10);

  003c4	6a f6		 push	 -10			; fffffff6H
  003c6	6a 00		 push	 0
  003c8	6a 00		 push	 0
  003ca	6a 00		 push	 0
  003cc	6a 00		 push	 0
  003ce	6a 17		 push	 23			; 00000017H
  003d0	8b 45 08	 mov	 eax, DWORD PTR _iAltarObjIndex$[ebp]
  003d3	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  003d9	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  003df	50		 push	 eax
  003e0	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration
  003e5	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN3@SetAltarVa:

; 152  : 	}
; 153  : }

  003e8	5f		 pop	 edi
  003e9	5e		 pop	 esi
  003ea	5b		 pop	 ebx
  003eb	8b e5		 mov	 esp, ebp
  003ed	5d		 pop	 ebp
  003ee	c2 08 00	 ret	 8
?SetAltarValidContract@CCrywolfAltar@@QAEXHH@Z ENDP	; CCrywolfAltar::SetAltarValidContract
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\crywolfaltar.h
_TEXT	ENDS
;	COMDAT ?SetAltarState@CCrywolfAltarInfo@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iState$ = 8						; size = 4
?SetAltarState@CCrywolfAltarInfo@@QAEXH@Z PROC		; CCrywolfAltarInfo::SetAltarState, COMDAT
; _this$ = ecx

; 47   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 48   : 		this->m_iAltarState = iState;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _iState$[ebp]
  00012	89 08		 mov	 DWORD PTR [eax], ecx

; 49   : 	}

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?SetAltarState@CCrywolfAltarInfo@@QAEXH@Z ENDP		; CCrywolfAltarInfo::SetAltarState
_TEXT	ENDS
PUBLIC	?CheckAltarValidContract@CCrywolfAltar@@QAEHH@Z	; CCrywolfAltar::CheckAltarValidContract
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\crywolfaltar.cpp
_TEXT	SEGMENT
_AltarInfo$ = -12					; size = 4
_iAltarNumber$ = -8					; size = 4
_this$ = -4						; size = 4
_iClass$ = 8						; size = 4
?CheckAltarValidContract@CCrywolfAltar@@QAEHH@Z PROC	; CCrywolfAltar::CheckAltarValidContract
; _this$ = ecx

; 156  : {

  00400	55		 push	 ebp
  00401	8b ec		 mov	 ebp, esp
  00403	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00406	53		 push	 ebx
  00407	56		 push	 esi
  00408	57		 push	 edi
  00409	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 157  : 	int iAltarNumber = this->GetAlatarNumber(iClass);

  0040c	8b 45 08	 mov	 eax, DWORD PTR _iClass$[ebp]
  0040f	50		 push	 eax
  00410	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00413	e8 00 00 00 00	 call	 ?GetAlatarNumber@CCrywolfAltar@@QAEHH@Z ; CCrywolfAltar::GetAlatarNumber
  00418	89 45 f8	 mov	 DWORD PTR _iAltarNumber$[ebp], eax

; 158  : 	CCrywolfAltarInfo * AltarInfo = &this->m_AltarInfo[iAltarNumber];

  0041b	8b 45 f8	 mov	 eax, DWORD PTR _iAltarNumber$[ebp]
  0041e	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00421	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00424	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  00428	89 55 f4	 mov	 DWORD PTR _AltarInfo$[ebp], edx

; 159  : 
; 160  : 	if ( AltarInfo->GetAltarState() == 1 )

  0042b	8b 4d f4	 mov	 ecx, DWORD PTR _AltarInfo$[ebp]
  0042e	e8 00 00 00 00	 call	 ?GetAltarState@CCrywolfAltarInfo@@QAEHXZ ; CCrywolfAltarInfo::GetAltarState
  00433	83 f8 01	 cmp	 eax, 1
  00436	75 07		 jne	 SHORT $LN1@CheckAltar

; 161  : 	{
; 162  : 		return TRUE;

  00438	b8 01 00 00 00	 mov	 eax, 1
  0043d	eb 02		 jmp	 SHORT $LN2@CheckAltar
$LN1@CheckAltar:

; 163  : 	}
; 164  : 
; 165  : 	return FALSE;

  0043f	33 c0		 xor	 eax, eax
$LN2@CheckAltar:

; 166  : }

  00441	5f		 pop	 edi
  00442	5e		 pop	 esi
  00443	5b		 pop	 ebx
  00444	8b e5		 mov	 esp, ebp
  00446	5d		 pop	 ebp
  00447	c2 04 00	 ret	 4
?CheckAltarValidContract@CCrywolfAltar@@QAEHH@Z ENDP	; CCrywolfAltar::CheckAltarValidContract
_TEXT	ENDS
PUBLIC	??_C@_0DO@MHEPMOPO@?$FL?5Crywolf?5?$FN?$FLAltar?5Op?4?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5@ ; `string'
PUBLIC	?SetAltarUserIndex@CCrywolfAltar@@QAEHHHH@Z	; CCrywolfAltar::SetAltarUserIndex
EXTRN	_abs:PROC
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
;	COMDAT ??_C@_0DO@MHEPMOPO@?$FL?5Crywolf?5?$FN?$FLAltar?5Op?4?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5@
CONST	SEGMENT
??_C@_0DO@MHEPMOPO@?$FL?5Crywolf?5?$FN?$FLAltar?5Op?4?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5@ DB '['
	DB	' Crywolf ][Altar Op.] [%s][%s] Attempt to contract Altar[%d]', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_dwCurrentTime$ = -16					; size = 4
_AltarInfo$ = -12					; size = 4
_iAltarNumber$ = -8					; size = 4
_this$ = -4						; size = 4
_iAltarObjIndex$ = 8					; size = 4
_iClass$ = 12						; size = 4
_iUserIndex$ = 16					; size = 4
?SetAltarUserIndex@CCrywolfAltar@@QAEHHHH@Z PROC	; CCrywolfAltar::SetAltarUserIndex
; _this$ = ecx

; 169  : {

  00450	55		 push	 ebp
  00451	8b ec		 mov	 ebp, esp
  00453	83 ec 50	 sub	 esp, 80			; 00000050H
  00456	53		 push	 ebx
  00457	56		 push	 esi
  00458	57		 push	 edi
  00459	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 170  : 	int iAltarNumber = this->GetAlatarNumber(iClass);

  0045c	8b 45 0c	 mov	 eax, DWORD PTR _iClass$[ebp]
  0045f	50		 push	 eax
  00460	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00463	e8 00 00 00 00	 call	 ?GetAlatarNumber@CCrywolfAltar@@QAEHH@Z ; CCrywolfAltar::GetAlatarNumber
  00468	89 45 f8	 mov	 DWORD PTR _iAltarNumber$[ebp], eax

; 171  : 	CCrywolfAltarInfo * AltarInfo = &this->m_AltarInfo[iAltarNumber];

  0046b	8b 45 f8	 mov	 eax, DWORD PTR _iAltarNumber$[ebp]
  0046e	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00471	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00474	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  00478	89 55 f4	 mov	 DWORD PTR _AltarInfo$[ebp], edx

; 172  : 	DWORD dwCurrentTime = GetTickCount();

  0047b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00481	89 45 f0	 mov	 DWORD PTR _dwCurrentTime$[ebp], eax

; 173  : 
; 174  : 	if ( gObjIsConnected(AltarInfo->m_iUserIndex) != FALSE )

  00484	8b 45 f4	 mov	 eax, DWORD PTR _AltarInfo$[ebp]
  00487	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0048a	51		 push	 ecx
  0048b	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00490	83 c4 04	 add	 esp, 4
  00493	85 c0		 test	 eax, eax
  00495	74 27		 je	 SHORT $LN5@SetAltarUs

; 175  : 	{
; 176  : 		MsgOutput(iUserIndex, lMsg.Get(MSGGET(12, 253)), iAltarNumber);

  00497	8b 45 f8	 mov	 eax, DWORD PTR _iAltarNumber$[ebp]
  0049a	50		 push	 eax
  0049b	68 fd 0c 00 00	 push	 3325			; 00000cfdH
  004a0	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  004a5	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  004aa	50		 push	 eax
  004ab	8b 4d 10	 mov	 ecx, DWORD PTR _iUserIndex$[ebp]
  004ae	51		 push	 ecx
  004af	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  004b4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 177  : 		return FALSE;

  004b7	33 c0		 xor	 eax, eax
  004b9	e9 24 02 00 00	 jmp	 $LN6@SetAltarUs
$LN5@SetAltarUs:

; 178  : 	}
; 179  : 
; 180  : 	if ( (dwCurrentTime-AltarInfo->m_dwLastValidContractTime) < 10000 )

  004be	8b 45 f4	 mov	 eax, DWORD PTR _AltarInfo$[ebp]
  004c1	8b 4d f0	 mov	 ecx, DWORD PTR _dwCurrentTime$[ebp]
  004c4	2b 48 18	 sub	 ecx, DWORD PTR [eax+24]
  004c7	81 f9 10 27 00
	00		 cmp	 ecx, 10000		; 00002710H
  004cd	73 27		 jae	 SHORT $LN4@SetAltarUs

; 181  : 	{
; 182  : 		MsgOutput(iUserIndex, lMsg.Get(MSGGET(12, 254)), iAltarNumber);

  004cf	8b 45 f8	 mov	 eax, DWORD PTR _iAltarNumber$[ebp]
  004d2	50		 push	 eax
  004d3	68 fe 0c 00 00	 push	 3326			; 00000cfeH
  004d8	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  004dd	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  004e2	50		 push	 eax
  004e3	8b 4d 10	 mov	 ecx, DWORD PTR _iUserIndex$[ebp]
  004e6	51		 push	 ecx
  004e7	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  004ec	83 c4 0c	 add	 esp, 12			; 0000000cH

; 183  : 		return FALSE;

  004ef	33 c0		 xor	 eax, eax
  004f1	e9 ec 01 00 00	 jmp	 $LN6@SetAltarUs
$LN4@SetAltarUs:

; 184  : 	}
; 185  : 
; 186  : 	if ( AltarInfo->m_iContractCount > MAX_ALTAR_CONTRACTS ) 

  004f6	8b 45 f4	 mov	 eax, DWORD PTR _AltarInfo$[ebp]
  004f9	83 78 0c 02	 cmp	 DWORD PTR [eax+12], 2
  004fd	7e 27		 jle	 SHORT $LN3@SetAltarUs

; 187  : 	{
; 188  : 		MsgOutput(iUserIndex, lMsg.Get(MSGGET(12, 255)), iAltarNumber);

  004ff	8b 45 f8	 mov	 eax, DWORD PTR _iAltarNumber$[ebp]
  00502	50		 push	 eax
  00503	68 ff 0c 00 00	 push	 3327			; 00000cffH
  00508	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0050d	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00512	50		 push	 eax
  00513	8b 4d 10	 mov	 ecx, DWORD PTR _iUserIndex$[ebp]
  00516	51		 push	 ecx
  00517	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  0051c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 189  : 		return FALSE;

  0051f	33 c0		 xor	 eax, eax
  00521	e9 bc 01 00 00	 jmp	 $LN6@SetAltarUs
$LN3@SetAltarUs:

; 190  : 	}
; 191  : 
; 192  : 	if ( abs(gObj[iAltarObjIndex].Y - gObj[iUserIndex].Y) > 0 || abs(gObj[iAltarObjIndex].X - gObj[iUserIndex].X) > 0 )

  00526	8b 45 08	 mov	 eax, DWORD PTR _iAltarObjIndex$[ebp]
  00529	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0052f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00535	0f bf 94 01 46
	01 00 00	 movsx	 edx, WORD PTR [ecx+eax+326]
  0053d	8b 45 10	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00540	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00546	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0054c	0f bf 84 01 46
	01 00 00	 movsx	 eax, WORD PTR [ecx+eax+326]
  00554	2b d0		 sub	 edx, eax
  00556	52		 push	 edx
  00557	e8 00 00 00 00	 call	 _abs
  0055c	83 c4 04	 add	 esp, 4
  0055f	85 c0		 test	 eax, eax
  00561	7f 3d		 jg	 SHORT $LN1@SetAltarUs
  00563	8b 45 08	 mov	 eax, DWORD PTR _iAltarObjIndex$[ebp]
  00566	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0056c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00572	0f bf 94 01 44
	01 00 00	 movsx	 edx, WORD PTR [ecx+eax+324]
  0057a	8b 45 10	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  0057d	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00583	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00589	0f bf 84 01 44
	01 00 00	 movsx	 eax, WORD PTR [ecx+eax+324]
  00591	2b d0		 sub	 edx, eax
  00593	52		 push	 edx
  00594	e8 00 00 00 00	 call	 _abs
  00599	83 c4 04	 add	 esp, 4
  0059c	85 c0		 test	 eax, eax
  0059e	7e 27		 jle	 SHORT $LN2@SetAltarUs
$LN1@SetAltarUs:

; 193  : 	{
; 194  : 		MsgOutput(iUserIndex, lMsg.Get(MSGGET(13, 0)), iAltarNumber);

  005a0	8b 45 f8	 mov	 eax, DWORD PTR _iAltarNumber$[ebp]
  005a3	50		 push	 eax
  005a4	68 00 0d 00 00	 push	 3328			; 00000d00H
  005a9	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  005ae	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  005b3	50		 push	 eax
  005b4	8b 4d 10	 mov	 ecx, DWORD PTR _iUserIndex$[ebp]
  005b7	51		 push	 ecx
  005b8	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  005bd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 195  : 		return FALSE;

  005c0	33 c0		 xor	 eax, eax
  005c2	e9 1b 01 00 00	 jmp	 $LN6@SetAltarUs
$LN2@SetAltarUs:

; 196  : 	}
; 197  : 
; 198  : 	AltarInfo->SetAltarState(2);

  005c7	6a 02		 push	 2
  005c9	8b 4d f4	 mov	 ecx, DWORD PTR _AltarInfo$[ebp]
  005cc	e8 00 00 00 00	 call	 ?SetAltarState@CCrywolfAltarInfo@@QAEXH@Z ; CCrywolfAltarInfo::SetAltarState

; 199  : 	AltarInfo->m_iUserIndex = iUserIndex;

  005d1	8b 45 f4	 mov	 eax, DWORD PTR _AltarInfo$[ebp]
  005d4	8b 4d 10	 mov	 ecx, DWORD PTR _iUserIndex$[ebp]
  005d7	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 200  : 	AltarInfo->m_dwAppliedContractTime = dwCurrentTime;

  005da	8b 45 f4	 mov	 eax, DWORD PTR _AltarInfo$[ebp]
  005dd	8b 4d f0	 mov	 ecx, DWORD PTR _dwCurrentTime$[ebp]
  005e0	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 201  : 	AltarInfo->m_dwValidContractTime = dwCurrentTime + 5000;

  005e3	8b 45 f0	 mov	 eax, DWORD PTR _dwCurrentTime$[ebp]
  005e6	05 88 13 00 00	 add	 eax, 5000		; 00001388H
  005eb	8b 4d f4	 mov	 ecx, DWORD PTR _AltarInfo$[ebp]
  005ee	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 202  : 	AltarInfo->m_dwLastValidContractTime = dwCurrentTime;

  005f1	8b 45 f4	 mov	 eax, DWORD PTR _AltarInfo$[ebp]
  005f4	8b 4d f0	 mov	 ecx, DWORD PTR _dwCurrentTime$[ebp]
  005f7	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 203  : 	AltarInfo->m_iContractCount++;

  005fa	8b 45 f4	 mov	 eax, DWORD PTR _AltarInfo$[ebp]
  005fd	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00600	83 c1 01	 add	 ecx, 1
  00603	8b 55 f4	 mov	 edx, DWORD PTR _AltarInfo$[ebp]
  00606	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 204  : 
; 205  : 	gObjApplyBuffEffectDuration(&gObj[iAltarObjIndex], AT_CW_ALTAR_ATTEMPT, 0, 0, 0, 0, -10);

  00609	6a f6		 push	 -10			; fffffff6H
  0060b	6a 00		 push	 0
  0060d	6a 00		 push	 0
  0060f	6a 00		 push	 0
  00611	6a 00		 push	 0
  00613	6a 18		 push	 24			; 00000018H
  00615	8b 45 08	 mov	 eax, DWORD PTR _iAltarObjIndex$[ebp]
  00618	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0061e	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00624	50		 push	 eax
  00625	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration
  0062a	83 c4 1c	 add	 esp, 28			; 0000001cH

; 206  : 
; 207  : 	UTIL.SendCrywolfUserAnyMsg(2, lMsg.Get(MSGGET(13, 1)), gObj[AltarInfo->m_iUserIndex].Name, iAltarNumber);

  0062d	8b 45 f8	 mov	 eax, DWORD PTR _iAltarNumber$[ebp]
  00630	50		 push	 eax
  00631	8b 4d f4	 mov	 ecx, DWORD PTR _AltarInfo$[ebp]
  00634	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00637	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  0063d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00642	8d 4c 10 77	 lea	 ecx, DWORD PTR [eax+edx+119]
  00646	51		 push	 ecx
  00647	68 01 0d 00 00	 push	 3329			; 00000d01H
  0064c	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00651	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00656	50		 push	 eax
  00657	6a 02		 push	 2
  00659	68 00 00 00 00	 push	 OFFSET _UTIL
  0065e	e8 00 00 00 00	 call	 ?SendCrywolfUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ ; CCrywolfUtil::SendCrywolfUserAnyMsg
  00663	83 c4 14	 add	 esp, 20			; 00000014H

; 208  : 
; 209  : 	LogAddTD("[ Crywolf ][Altar Op.] [%s][%s] Attempt to contract Altar[%d]", gObj[AltarInfo->m_iUserIndex].AccountID, gObj[AltarInfo->m_iUserIndex].Name, iAltarNumber);

  00666	8b 45 f8	 mov	 eax, DWORD PTR _iAltarNumber$[ebp]
  00669	50		 push	 eax
  0066a	8b 4d f4	 mov	 ecx, DWORD PTR _AltarInfo$[ebp]
  0066d	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00670	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  00676	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0067b	8d 4c 10 77	 lea	 ecx, DWORD PTR [eax+edx+119]
  0067f	51		 push	 ecx
  00680	8b 55 f4	 mov	 edx, DWORD PTR _AltarInfo$[ebp]
  00683	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00686	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0068c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00692	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  00696	52		 push	 edx
  00697	68 00 00 00 00	 push	 OFFSET ??_C@_0DO@MHEPMOPO@?$FL?5Crywolf?5?$FN?$FLAltar?5Op?4?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5@
  0069c	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  006a2	83 c4 10	 add	 esp, 16			; 00000010H

; 210  : 
; 211  : 	MsgOutput(iUserIndex, lMsg.Get(MSGGET(13, 2)));

  006a5	68 02 0d 00 00	 push	 3330			; 00000d02H
  006aa	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  006af	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  006b4	50		 push	 eax
  006b5	8b 45 10	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  006b8	50		 push	 eax
  006b9	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  006be	83 c4 08	 add	 esp, 8

; 212  : 	MsgOutput(iUserIndex, lMsg.Get(MSGGET(13, 3)));

  006c1	68 03 0d 00 00	 push	 3331			; 00000d03H
  006c6	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  006cb	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  006d0	50		 push	 eax
  006d1	8b 45 10	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  006d4	50		 push	 eax
  006d5	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  006da	83 c4 08	 add	 esp, 8

; 213  : 
; 214  : 	return TRUE;

  006dd	b8 01 00 00 00	 mov	 eax, 1
$LN6@SetAltarUs:

; 215  : }

  006e2	5f		 pop	 edi
  006e3	5e		 pop	 esi
  006e4	5b		 pop	 ebx
  006e5	8b e5		 mov	 esp, ebp
  006e7	5d		 pop	 ebp
  006e8	c2 0c 00	 ret	 12			; 0000000cH
?SetAltarUserIndex@CCrywolfAltar@@QAEHHHH@Z ENDP	; CCrywolfAltar::SetAltarUserIndex
_TEXT	ENDS
PUBLIC	??_C@_0DK@INEKOOFN@?$FL?5Crywolf?5?$FN?$FLAltar?5Op?4?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5@ ; `string'
PUBLIC	?ResetAltarUserIndex@CCrywolfAltar@@QAEXHH@Z	; CCrywolfAltar::ResetAltarUserIndex
;	COMDAT ??_C@_0DK@INEKOOFN@?$FL?5Crywolf?5?$FN?$FLAltar?5Op?4?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5@
CONST	SEGMENT
??_C@_0DK@INEKOOFN@?$FL?5Crywolf?5?$FN?$FLAltar?5Op?4?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5@ DB '['
	DB	' Crywolf ][Altar Op.] [%s][%s] Remove contract Altar[%d]', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_AltarInfo$ = -12					; size = 4
_iAltarNumber$ = -8					; size = 4
_this$ = -4						; size = 4
_iAltarObjIndex$ = 8					; size = 4
_iClass$ = 12						; size = 4
?ResetAltarUserIndex@CCrywolfAltar@@QAEXHH@Z PROC	; CCrywolfAltar::ResetAltarUserIndex
; _this$ = ecx

; 218  : {

  006f0	55		 push	 ebp
  006f1	8b ec		 mov	 ebp, esp
  006f3	83 ec 4c	 sub	 esp, 76			; 0000004cH
  006f6	53		 push	 ebx
  006f7	56		 push	 esi
  006f8	57		 push	 edi
  006f9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 219  : 	int iAltarNumber = this->GetAlatarNumber(iClass);

  006fc	8b 45 0c	 mov	 eax, DWORD PTR _iClass$[ebp]
  006ff	50		 push	 eax
  00700	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00703	e8 00 00 00 00	 call	 ?GetAlatarNumber@CCrywolfAltar@@QAEHH@Z ; CCrywolfAltar::GetAlatarNumber
  00708	89 45 f8	 mov	 DWORD PTR _iAltarNumber$[ebp], eax

; 220  : 	CCrywolfAltarInfo * AltarInfo = &this->m_AltarInfo[iAltarNumber];

  0070b	8b 45 f8	 mov	 eax, DWORD PTR _iAltarNumber$[ebp]
  0070e	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00711	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00714	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  00718	89 55 f4	 mov	 DWORD PTR _AltarInfo$[ebp], edx

; 221  : 
; 222  : 	if ( gObjIsConnected(AltarInfo->m_iUserIndex) != FALSE )

  0071b	8b 45 f4	 mov	 eax, DWORD PTR _AltarInfo$[ebp]
  0071e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00721	51		 push	 ecx
  00722	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00727	83 c4 04	 add	 esp, 4
  0072a	85 c0		 test	 eax, eax
  0072c	74 62		 je	 SHORT $LN3@ResetAltar

; 223  : 	{
; 224  : 		MsgOutput(AltarInfo->m_iUserIndex, lMsg.Get(MSGGET(13, 4)), iAltarNumber);

  0072e	8b 45 f8	 mov	 eax, DWORD PTR _iAltarNumber$[ebp]
  00731	50		 push	 eax
  00732	68 04 0d 00 00	 push	 3332			; 00000d04H
  00737	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0073c	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00741	50		 push	 eax
  00742	8b 4d f4	 mov	 ecx, DWORD PTR _AltarInfo$[ebp]
  00745	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00748	52		 push	 edx
  00749	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  0074e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 225  : 		LogAddTD("[ Crywolf ][Altar Op.] [%s][%s] Remove contract Altar[%d]", gObj[AltarInfo->m_iUserIndex].AccountID, gObj[AltarInfo->m_iUserIndex].Name, iAltarNumber);

  00751	8b 45 f8	 mov	 eax, DWORD PTR _iAltarNumber$[ebp]
  00754	50		 push	 eax
  00755	8b 4d f4	 mov	 ecx, DWORD PTR _AltarInfo$[ebp]
  00758	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0075b	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  00761	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00766	8d 4c 10 77	 lea	 ecx, DWORD PTR [eax+edx+119]
  0076a	51		 push	 ecx
  0076b	8b 55 f4	 mov	 edx, DWORD PTR _AltarInfo$[ebp]
  0076e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00771	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00777	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0077d	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  00781	52		 push	 edx
  00782	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@INEKOOFN@?$FL?5Crywolf?5?$FN?$FLAltar?5Op?4?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5@
  00787	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0078d	83 c4 10	 add	 esp, 16			; 00000010H
$LN3@ResetAltar:

; 226  : 	}
; 227  : 
; 228  : 	if ( AltarInfo->m_iContractCount >= MAX_ALTAR_CONTRACTS )

  00790	8b 45 f4	 mov	 eax, DWORD PTR _AltarInfo$[ebp]
  00793	83 78 0c 02	 cmp	 DWORD PTR [eax+12], 2
  00797	7c 30		 jl	 SHORT $LN2@ResetAltar

; 229  : 	{
; 230  : 		AltarInfo->SetAltarState(3);

  00799	6a 03		 push	 3
  0079b	8b 4d f4	 mov	 ecx, DWORD PTR _AltarInfo$[ebp]
  0079e	e8 00 00 00 00	 call	 ?SetAltarState@CCrywolfAltarInfo@@QAEXH@Z ; CCrywolfAltarInfo::SetAltarState

; 231  : 		gObjApplyBuffEffectDuration(&gObj[iAltarObjIndex], AT_CW_ALTAR_INACTIVE, 0, 0, 0, 0, -10);

  007a3	6a f6		 push	 -10			; fffffff6H
  007a5	6a 00		 push	 0
  007a7	6a 00		 push	 0
  007a9	6a 00		 push	 0
  007ab	6a 00		 push	 0
  007ad	6a 16		 push	 22			; 00000016H
  007af	8b 45 08	 mov	 eax, DWORD PTR _iAltarObjIndex$[ebp]
  007b2	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  007b8	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  007be	50		 push	 eax
  007bf	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration
  007c4	83 c4 1c	 add	 esp, 28			; 0000001cH

; 232  : 	}
; 233  : 	else

  007c7	eb 2e		 jmp	 SHORT $LN1@ResetAltar
$LN2@ResetAltar:

; 234  : 	{
; 235  : 		gObjApplyBuffEffectDuration(&gObj[iAltarObjIndex], AT_CW_ALTAR_ACTIVE, 0, 0, 0, 0, -10);

  007c9	6a f6		 push	 -10			; fffffff6H
  007cb	6a 00		 push	 0
  007cd	6a 00		 push	 0
  007cf	6a 00		 push	 0
  007d1	6a 00		 push	 0
  007d3	6a 15		 push	 21			; 00000015H
  007d5	8b 45 08	 mov	 eax, DWORD PTR _iAltarObjIndex$[ebp]
  007d8	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  007de	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  007e4	50		 push	 eax
  007e5	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration
  007ea	83 c4 1c	 add	 esp, 28			; 0000001cH

; 236  : 		AltarInfo->SetAltarState(0);

  007ed	6a 00		 push	 0
  007ef	8b 4d f4	 mov	 ecx, DWORD PTR _AltarInfo$[ebp]
  007f2	e8 00 00 00 00	 call	 ?SetAltarState@CCrywolfAltarInfo@@QAEXH@Z ; CCrywolfAltarInfo::SetAltarState
$LN1@ResetAltar:

; 237  : 	}
; 238  : 
; 239  : 	AltarInfo->m_iUserIndex = -1;

  007f7	8b 45 f4	 mov	 eax, DWORD PTR _AltarInfo$[ebp]
  007fa	c7 40 08 ff ff
	ff ff		 mov	 DWORD PTR [eax+8], -1

; 240  : 	AltarInfo->m_dwAppliedContractTime = 0;

  00801	8b 45 f4	 mov	 eax, DWORD PTR _AltarInfo$[ebp]
  00804	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 241  : 	AltarInfo->m_dwValidContractTime = 0;

  0080b	8b 45 f4	 mov	 eax, DWORD PTR _AltarInfo$[ebp]
  0080e	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 242  : 	AltarInfo->m_dwLastValidContractTime = GetTickCount();

  00815	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0081b	8b 4d f4	 mov	 ecx, DWORD PTR _AltarInfo$[ebp]
  0081e	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 243  : }

  00821	5f		 pop	 edi
  00822	5e		 pop	 esi
  00823	5b		 pop	 ebx
  00824	8b e5		 mov	 esp, ebp
  00826	5d		 pop	 ebp
  00827	c2 08 00	 ret	 8
?ResetAltarUserIndex@CCrywolfAltar@@QAEXHH@Z ENDP	; CCrywolfAltar::ResetAltarUserIndex
_TEXT	ENDS
PUBLIC	?SetAltarIndex@CCrywolfAltarInfo@@QAEXH@Z	; CCrywolfAltarInfo::SetAltarIndex
PUBLIC	?ResetAltar@CCrywolfAltar@@QAEXH@Z		; CCrywolfAltar::ResetAltar
PUBLIC	?SetAltarObjIndex@CCrywolfAltar@@QAEXHH@Z	; CCrywolfAltar::SetAltarObjIndex
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_AltarInfo$ = -12					; size = 4
_iAltarNumber$ = -8					; size = 4
_this$ = -4						; size = 4
_iClass$ = 8						; size = 4
_iObjIndex$ = 12					; size = 4
?SetAltarObjIndex@CCrywolfAltar@@QAEXHH@Z PROC		; CCrywolfAltar::SetAltarObjIndex
; _this$ = ecx

; 246  : {

  00830	55		 push	 ebp
  00831	8b ec		 mov	 ebp, esp
  00833	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00836	53		 push	 ebx
  00837	56		 push	 esi
  00838	57		 push	 edi
  00839	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 247  : 	int iAltarNumber = this->GetAlatarNumber(iClass);

  0083c	8b 45 08	 mov	 eax, DWORD PTR _iClass$[ebp]
  0083f	50		 push	 eax
  00840	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00843	e8 00 00 00 00	 call	 ?GetAlatarNumber@CCrywolfAltar@@QAEHH@Z ; CCrywolfAltar::GetAlatarNumber
  00848	89 45 f8	 mov	 DWORD PTR _iAltarNumber$[ebp], eax

; 248  : 
; 249  : 	this->ResetAltar(iClass);

  0084b	8b 45 08	 mov	 eax, DWORD PTR _iClass$[ebp]
  0084e	50		 push	 eax
  0084f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00852	e8 00 00 00 00	 call	 ?ResetAltar@CCrywolfAltar@@QAEXH@Z ; CCrywolfAltar::ResetAltar

; 250  : 
; 251  : 	CCrywolfAltarInfo * AltarInfo = &this->m_AltarInfo[iAltarNumber];

  00857	8b 45 f8	 mov	 eax, DWORD PTR _iAltarNumber$[ebp]
  0085a	6b c0 1c	 imul	 eax, 28			; 0000001cH
  0085d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00860	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  00864	89 55 f4	 mov	 DWORD PTR _AltarInfo$[ebp], edx

; 252  : 
; 253  : 	AltarInfo->SetAltarIndex(iObjIndex);

  00867	8b 45 0c	 mov	 eax, DWORD PTR _iObjIndex$[ebp]
  0086a	50		 push	 eax
  0086b	8b 4d f4	 mov	 ecx, DWORD PTR _AltarInfo$[ebp]
  0086e	e8 00 00 00 00	 call	 ?SetAltarIndex@CCrywolfAltarInfo@@QAEXH@Z ; CCrywolfAltarInfo::SetAltarIndex

; 254  : }

  00873	5f		 pop	 edi
  00874	5e		 pop	 esi
  00875	5b		 pop	 ebx
  00876	8b e5		 mov	 esp, ebp
  00878	5d		 pop	 ebp
  00879	c2 08 00	 ret	 8
?SetAltarObjIndex@CCrywolfAltar@@QAEXHH@Z ENDP		; CCrywolfAltar::SetAltarObjIndex
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\crywolfaltar.h
_TEXT	ENDS
;	COMDAT ?SetAltarIndex@CCrywolfAltarInfo@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iAltarIndex$ = 8					; size = 4
?SetAltarIndex@CCrywolfAltarInfo@@QAEXH@Z PROC		; CCrywolfAltarInfo::SetAltarIndex, COMDAT
; _this$ = ecx

; 57   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 58   : 		this->m_iAltarIndex = iAltarIndex;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _iAltarIndex$[ebp]
  00012	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 59   : 	}

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetAltarIndex@CCrywolfAltarInfo@@QAEXH@Z ENDP		; CCrywolfAltarInfo::SetAltarIndex
_TEXT	ENDS
PUBLIC	?SetAllAltarObjectIndex@CCrywolfAltar@@QAEXXZ	; CCrywolfAltar::SetAllAltarObjectIndex
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\crywolfaltar.cpp
_TEXT	SEGMENT
tv85 = -76						; size = 4
_i$227776 = -8						; size = 4
_this$ = -4						; size = 4
?SetAllAltarObjectIndex@CCrywolfAltar@@QAEXXZ PROC	; CCrywolfAltar::SetAllAltarObjectIndex
; _this$ = ecx

; 257  : {

  00880	55		 push	 ebp
  00881	8b ec		 mov	 ebp, esp
  00883	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00886	53		 push	 ebx
  00887	56		 push	 esi
  00888	57		 push	 edi
  00889	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 258  : 	for ( int i=0;i<OBJ_MAXMONSTER;i++)

  0088c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$227776[ebp], 0
  00893	eb 09		 jmp	 SHORT $LN6@SetAllAlta
$LN5@SetAllAlta:
  00895	8b 45 f8	 mov	 eax, DWORD PTR _i$227776[ebp]
  00898	83 c0 01	 add	 eax, 1
  0089b	89 45 f8	 mov	 DWORD PTR _i$227776[ebp], eax
$LN6@SetAllAlta:
  0089e	81 7d f8 c8 32
	00 00		 cmp	 DWORD PTR _i$227776[ebp], 13000 ; 000032c8H
  008a5	0f 8d ae 00 00
	00		 jge	 $LN7@SetAllAlta

; 259  : 	{
; 260  : 		if ( !gObjIsConnected(i) )

  008ab	8b 45 f8	 mov	 eax, DWORD PTR _i$227776[ebp]
  008ae	50		 push	 eax
  008af	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  008b4	83 c4 04	 add	 esp, 4
  008b7	85 c0		 test	 eax, eax
  008b9	75 02		 jne	 SHORT $LN3@SetAllAlta

; 261  : 		{
; 262  : 			continue;

  008bb	eb d8		 jmp	 SHORT $LN5@SetAllAlta
$LN3@SetAllAlta:

; 263  : 		}
; 264  : 
; 265  : 		if ( gObj[i].MapNumber != MAP_INDEX_CRYWOLF_FIRSTZONE )

  008bd	8b 45 f8	 mov	 eax, DWORD PTR _i$227776[ebp]
  008c0	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  008c6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  008cc	0f b6 94 01 49
	01 00 00	 movzx	 edx, BYTE PTR [ecx+eax+329]
  008d4	83 fa 22	 cmp	 edx, 34			; 00000022H
  008d7	74 02		 je	 SHORT $LN2@SetAllAlta

; 266  : 		{
; 267  : 			continue;

  008d9	eb ba		 jmp	 SHORT $LN5@SetAllAlta
$LN2@SetAllAlta:

; 268  : 		}
; 269  : 
; 270  : 		if ( CRYWOLF_ALTAR_CLASS_RANGE(gObj[i].Class ) != FALSE )

  008db	8b 45 f8	 mov	 eax, DWORD PTR _i$227776[ebp]
  008de	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  008e4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  008ea	0f b7 94 01 b8
	00 00 00	 movzx	 edx, WORD PTR [ecx+eax+184]
  008f2	81 fa cd 00 00
	00		 cmp	 edx, 205		; 000000cdH
  008f8	7d 09		 jge	 SHORT $LN9@SetAllAlta
  008fa	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
  00901	eb 25		 jmp	 SHORT $LN10@SetAllAlta
$LN9@SetAllAlta:
  00903	8b 45 f8	 mov	 eax, DWORD PTR _i$227776[ebp]
  00906	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0090c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00912	0f b7 94 01 b8
	00 00 00	 movzx	 edx, WORD PTR [ecx+eax+184]
  0091a	33 c0		 xor	 eax, eax
  0091c	81 fa d1 00 00
	00		 cmp	 edx, 209		; 000000d1H
  00922	0f 9e c0	 setle	 al
  00925	89 45 b4	 mov	 DWORD PTR tv85[ebp], eax
$LN10@SetAllAlta:
  00928	83 7d b4 00	 cmp	 DWORD PTR tv85[ebp], 0
  0092c	74 26		 je	 SHORT $LN1@SetAllAlta

; 271  : 		{
; 272  : 			g_CrywolfNPC_Altar.SetAltarObjIndex(gObj[i].Class, i);

  0092e	8b 45 f8	 mov	 eax, DWORD PTR _i$227776[ebp]
  00931	50		 push	 eax
  00932	8b 4d f8	 mov	 ecx, DWORD PTR _i$227776[ebp]
  00935	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0093b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00941	0f b7 84 0a b8
	00 00 00	 movzx	 eax, WORD PTR [edx+ecx+184]
  00949	50		 push	 eax
  0094a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CrywolfNPC_Altar@@3VCCrywolfAltar@@A ; g_CrywolfNPC_Altar
  0094f	e8 00 00 00 00	 call	 ?SetAltarObjIndex@CCrywolfAltar@@QAEXHH@Z ; CCrywolfAltar::SetAltarObjIndex
$LN1@SetAllAlta:

; 273  : 		}
; 274  : 	}

  00954	e9 3c ff ff ff	 jmp	 $LN5@SetAllAlta
$LN7@SetAllAlta:

; 275  : }

  00959	5f		 pop	 edi
  0095a	5e		 pop	 esi
  0095b	5b		 pop	 ebx
  0095c	8b e5		 mov	 esp, ebp
  0095e	5d		 pop	 ebp
  0095f	c3		 ret	 0
?SetAllAltarObjectIndex@CCrywolfAltar@@QAEXXZ ENDP	; CCrywolfAltar::SetAllAltarObjectIndex
_TEXT	ENDS
PUBLIC	?ResetAllAltar@CCrywolfAltar@@QAEXXZ		; CCrywolfAltar::ResetAllAltar
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ResetAllAltar@CCrywolfAltar@@QAEXXZ PROC		; CCrywolfAltar::ResetAllAltar
; _this$ = ecx

; 278  : {

  00960	55		 push	 ebp
  00961	8b ec		 mov	 ebp, esp
  00963	83 ec 44	 sub	 esp, 68			; 00000044H
  00966	53		 push	 ebx
  00967	56		 push	 esi
  00968	57		 push	 edi
  00969	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 279  : 	this->ResetAltar(205);

  0096c	68 cd 00 00 00	 push	 205			; 000000cdH
  00971	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00974	e8 00 00 00 00	 call	 ?ResetAltar@CCrywolfAltar@@QAEXH@Z ; CCrywolfAltar::ResetAltar

; 280  : 	this->ResetAltar(206);

  00979	68 ce 00 00 00	 push	 206			; 000000ceH
  0097e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00981	e8 00 00 00 00	 call	 ?ResetAltar@CCrywolfAltar@@QAEXH@Z ; CCrywolfAltar::ResetAltar

; 281  : 	this->ResetAltar(207);

  00986	68 cf 00 00 00	 push	 207			; 000000cfH
  0098b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0098e	e8 00 00 00 00	 call	 ?ResetAltar@CCrywolfAltar@@QAEXH@Z ; CCrywolfAltar::ResetAltar

; 282  : 	this->ResetAltar(208);

  00993	68 d0 00 00 00	 push	 208			; 000000d0H
  00998	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0099b	e8 00 00 00 00	 call	 ?ResetAltar@CCrywolfAltar@@QAEXH@Z ; CCrywolfAltar::ResetAltar

; 283  : 	this->ResetAltar(209);

  009a0	68 d1 00 00 00	 push	 209			; 000000d1H
  009a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009a8	e8 00 00 00 00	 call	 ?ResetAltar@CCrywolfAltar@@QAEXH@Z ; CCrywolfAltar::ResetAltar

; 284  : }

  009ad	5f		 pop	 edi
  009ae	5e		 pop	 esi
  009af	5b		 pop	 ebx
  009b0	8b e5		 mov	 esp, ebp
  009b2	5d		 pop	 ebp
  009b3	c3		 ret	 0
?ResetAllAltar@CCrywolfAltar@@QAEXXZ ENDP		; CCrywolfAltar::ResetAllAltar
_TEXT	ENDS
EXTRN	?gObjClearStandardBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z:PROC ; gObjClearStandardBuffEffect
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_AltarInfo$ = -12					; size = 4
_iAltarNumber$ = -8					; size = 4
_this$ = -4						; size = 4
_iClass$ = 8						; size = 4
?ResetAltar@CCrywolfAltar@@QAEXH@Z PROC			; CCrywolfAltar::ResetAltar
; _this$ = ecx

; 287  : {

  009c0	55		 push	 ebp
  009c1	8b ec		 mov	 ebp, esp
  009c3	83 ec 4c	 sub	 esp, 76			; 0000004cH
  009c6	53		 push	 ebx
  009c7	56		 push	 esi
  009c8	57		 push	 edi
  009c9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	int iAltarNumber = this->GetAlatarNumber(iClass);

  009cc	8b 45 08	 mov	 eax, DWORD PTR _iClass$[ebp]
  009cf	50		 push	 eax
  009d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009d3	e8 00 00 00 00	 call	 ?GetAlatarNumber@CCrywolfAltar@@QAEHH@Z ; CCrywolfAltar::GetAlatarNumber
  009d8	89 45 f8	 mov	 DWORD PTR _iAltarNumber$[ebp], eax

; 289  : 
; 290  : 	CCrywolfAltarInfo * AltarInfo = &this->m_AltarInfo[iAltarNumber];

  009db	8b 45 f8	 mov	 eax, DWORD PTR _iAltarNumber$[ebp]
  009de	6b c0 1c	 imul	 eax, 28			; 0000001cH
  009e1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009e4	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  009e8	89 55 f4	 mov	 DWORD PTR _AltarInfo$[ebp], edx

; 291  : 
; 292  : 	if ( AltarInfo->m_iAltarIndex == -1 )

  009eb	8b 45 f4	 mov	 eax, DWORD PTR _AltarInfo$[ebp]
  009ee	83 78 04 ff	 cmp	 DWORD PTR [eax+4], -1
  009f2	75 02		 jne	 SHORT $LN1@ResetAltar@2

; 293  : 	{
; 294  : 		return;

  009f4	eb 25		 jmp	 SHORT $LN2@ResetAltar@2
$LN1@ResetAltar@2:

; 295  : 	}
; 296  : 
; 297  : 	gObjClearStandardBuffEffect(&gObj[AltarInfo->m_iAltarIndex], AT_GENERAL);

  009f6	6a 02		 push	 2
  009f8	8b 45 f4	 mov	 eax, DWORD PTR _AltarInfo$[ebp]
  009fb	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  009fe	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00a04	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a0a	51		 push	 ecx
  00a0b	e8 00 00 00 00	 call	 ?gObjClearStandardBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjClearStandardBuffEffect
  00a10	83 c4 08	 add	 esp, 8

; 298  : 
; 299  : 	AltarInfo->Reset();

  00a13	8b 4d f4	 mov	 ecx, DWORD PTR _AltarInfo$[ebp]
  00a16	e8 00 00 00 00	 call	 ?Reset@CCrywolfAltarInfo@@QAEXXZ ; CCrywolfAltarInfo::Reset
$LN2@ResetAltar@2:

; 300  : }

  00a1b	5f		 pop	 edi
  00a1c	5e		 pop	 esi
  00a1d	5b		 pop	 ebx
  00a1e	8b e5		 mov	 esp, ebp
  00a20	5d		 pop	 ebp
  00a21	c2 04 00	 ret	 4
?ResetAltar@CCrywolfAltar@@QAEXH@Z ENDP			; CCrywolfAltar::ResetAltar
_TEXT	ENDS
PUBLIC	?SetAltarViewState@CCrywolfAltar@@QAEXHH@Z	; CCrywolfAltar::SetAltarViewState
PUBLIC	?SetAllAltarViewState@CCrywolfAltar@@QAEXH@Z	; CCrywolfAltar::SetAllAltarViewState
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iAltarState$ = 8					; size = 4
?SetAllAltarViewState@CCrywolfAltar@@QAEXH@Z PROC	; CCrywolfAltar::SetAllAltarViewState
; _this$ = ecx

; 303  : {

  00a30	55		 push	 ebp
  00a31	8b ec		 mov	 ebp, esp
  00a33	83 ec 44	 sub	 esp, 68			; 00000044H
  00a36	53		 push	 ebx
  00a37	56		 push	 esi
  00a38	57		 push	 edi
  00a39	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 304  : 	this->SetAltarViewState(205, iAltarState);

  00a3c	8b 45 08	 mov	 eax, DWORD PTR _iAltarState$[ebp]
  00a3f	50		 push	 eax
  00a40	68 cd 00 00 00	 push	 205			; 000000cdH
  00a45	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a48	e8 00 00 00 00	 call	 ?SetAltarViewState@CCrywolfAltar@@QAEXHH@Z ; CCrywolfAltar::SetAltarViewState

; 305  : 	this->SetAltarViewState(206, iAltarState);

  00a4d	8b 45 08	 mov	 eax, DWORD PTR _iAltarState$[ebp]
  00a50	50		 push	 eax
  00a51	68 ce 00 00 00	 push	 206			; 000000ceH
  00a56	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a59	e8 00 00 00 00	 call	 ?SetAltarViewState@CCrywolfAltar@@QAEXHH@Z ; CCrywolfAltar::SetAltarViewState

; 306  : 	this->SetAltarViewState(207, iAltarState);

  00a5e	8b 45 08	 mov	 eax, DWORD PTR _iAltarState$[ebp]
  00a61	50		 push	 eax
  00a62	68 cf 00 00 00	 push	 207			; 000000cfH
  00a67	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a6a	e8 00 00 00 00	 call	 ?SetAltarViewState@CCrywolfAltar@@QAEXHH@Z ; CCrywolfAltar::SetAltarViewState

; 307  : 	this->SetAltarViewState(208, iAltarState);

  00a6f	8b 45 08	 mov	 eax, DWORD PTR _iAltarState$[ebp]
  00a72	50		 push	 eax
  00a73	68 d0 00 00 00	 push	 208			; 000000d0H
  00a78	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a7b	e8 00 00 00 00	 call	 ?SetAltarViewState@CCrywolfAltar@@QAEXHH@Z ; CCrywolfAltar::SetAltarViewState

; 308  : 	this->SetAltarViewState(209, iAltarState);

  00a80	8b 45 08	 mov	 eax, DWORD PTR _iAltarState$[ebp]
  00a83	50		 push	 eax
  00a84	68 d1 00 00 00	 push	 209			; 000000d1H
  00a89	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a8c	e8 00 00 00 00	 call	 ?SetAltarViewState@CCrywolfAltar@@QAEXHH@Z ; CCrywolfAltar::SetAltarViewState

; 309  : }

  00a91	5f		 pop	 edi
  00a92	5e		 pop	 esi
  00a93	5b		 pop	 ebx
  00a94	8b e5		 mov	 esp, ebp
  00a96	5d		 pop	 ebp
  00a97	c2 04 00	 ret	 4
?SetAllAltarViewState@CCrywolfAltar@@QAEXH@Z ENDP	; CCrywolfAltar::SetAllAltarViewState
; Function compile flags: /Odtp /ZI
_AltarInfo$ = -12					; size = 4
_iAltarNumber$ = -8					; size = 4
_this$ = -4						; size = 4
_iClass$ = 8						; size = 4
_iAltarState$ = 12					; size = 4
?SetAltarViewState@CCrywolfAltar@@QAEXHH@Z PROC		; CCrywolfAltar::SetAltarViewState
; _this$ = ecx

; 312  : {

  00aa0	55		 push	 ebp
  00aa1	8b ec		 mov	 ebp, esp
  00aa3	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00aa6	53		 push	 ebx
  00aa7	56		 push	 esi
  00aa8	57		 push	 edi
  00aa9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 313  : 	int iAltarNumber = this->GetAlatarNumber(iClass);

  00aac	8b 45 08	 mov	 eax, DWORD PTR _iClass$[ebp]
  00aaf	50		 push	 eax
  00ab0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00ab3	e8 00 00 00 00	 call	 ?GetAlatarNumber@CCrywolfAltar@@QAEHH@Z ; CCrywolfAltar::GetAlatarNumber
  00ab8	89 45 f8	 mov	 DWORD PTR _iAltarNumber$[ebp], eax

; 314  : 
; 315  : 	CCrywolfAltarInfo * AltarInfo = &this->m_AltarInfo[iAltarNumber];

  00abb	8b 45 f8	 mov	 eax, DWORD PTR _iAltarNumber$[ebp]
  00abe	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00ac1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00ac4	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  00ac8	89 55 f4	 mov	 DWORD PTR _AltarInfo$[ebp], edx

; 316  : 
; 317  : 	if ( AltarInfo->m_iAltarIndex == -1 )

  00acb	8b 45 f4	 mov	 eax, DWORD PTR _AltarInfo$[ebp]
  00ace	83 78 04 ff	 cmp	 DWORD PTR [eax+4], -1
  00ad2	75 02		 jne	 SHORT $LN1@SetAltarVi

; 318  : 	{
; 319  : 		return;

  00ad4	eb 27		 jmp	 SHORT $LN2@SetAltarVi
$LN1@SetAltarVi:

; 320  : 	}
; 321  : 
; 322  : 	gObjApplyBuffEffectDuration(&gObj[AltarInfo->m_iAltarIndex], AT_CW_ALTAR_ACTIVE, 0, 0, 0, 0, -10);

  00ad6	6a f6		 push	 -10			; fffffff6H
  00ad8	6a 00		 push	 0
  00ada	6a 00		 push	 0
  00adc	6a 00		 push	 0
  00ade	6a 00		 push	 0
  00ae0	6a 15		 push	 21			; 00000015H
  00ae2	8b 45 f4	 mov	 eax, DWORD PTR _AltarInfo$[ebp]
  00ae5	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00ae8	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00aee	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00af4	51		 push	 ecx
  00af5	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration
  00afa	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN2@SetAltarVi:

; 323  : }

  00afd	5f		 pop	 edi
  00afe	5e		 pop	 esi
  00aff	5b		 pop	 ebx
  00b00	8b e5		 mov	 esp, ebp
  00b02	5d		 pop	 ebp
  00b03	c2 08 00	 ret	 8
?SetAltarViewState@CCrywolfAltar@@QAEXHH@Z ENDP		; CCrywolfAltar::SetAltarViewState
_TEXT	ENDS
PUBLIC	?GetContractedAltarCount@CCrywolfAltar@@QAEHXZ	; CCrywolfAltar::GetContractedAltarCount
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_AltarInfo$227829 = -16					; size = 4
_i$227825 = -12						; size = 4
_iContractedAltarCount$ = -8				; size = 4
_this$ = -4						; size = 4
?GetContractedAltarCount@CCrywolfAltar@@QAEHXZ PROC	; CCrywolfAltar::GetContractedAltarCount
; _this$ = ecx

; 326  : {

  00b10	55		 push	 ebp
  00b11	8b ec		 mov	 ebp, esp
  00b13	83 ec 50	 sub	 esp, 80			; 00000050H
  00b16	53		 push	 ebx
  00b17	56		 push	 esi
  00b18	57		 push	 edi
  00b19	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 327  : 	int iContractedAltarCount = 0;

  00b1c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iContractedAltarCount$[ebp], 0

; 328  : 
; 329  : 	for ( int i=0;i<MAX_CRYWOLF_ALTAR;i++)

  00b23	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$227825[ebp], 0
  00b2a	eb 09		 jmp	 SHORT $LN4@GetContrac
$LN3@GetContrac:
  00b2c	8b 45 f4	 mov	 eax, DWORD PTR _i$227825[ebp]
  00b2f	83 c0 01	 add	 eax, 1
  00b32	89 45 f4	 mov	 DWORD PTR _i$227825[ebp], eax
$LN4@GetContrac:
  00b35	83 7d f4 05	 cmp	 DWORD PTR _i$227825[ebp], 5
  00b39	7d 2a		 jge	 SHORT $LN2@GetContrac

; 330  : 	{
; 331  : 		CCrywolfAltarInfo * AltarInfo = &this->m_AltarInfo[i];

  00b3b	8b 45 f4	 mov	 eax, DWORD PTR _i$227825[ebp]
  00b3e	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00b41	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b44	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  00b48	89 55 f0	 mov	 DWORD PTR _AltarInfo$227829[ebp], edx

; 332  : 
; 333  : 		if ( AltarInfo->GetAltarState() != 1 )

  00b4b	8b 4d f0	 mov	 ecx, DWORD PTR _AltarInfo$227829[ebp]
  00b4e	e8 00 00 00 00	 call	 ?GetAltarState@CCrywolfAltarInfo@@QAEHXZ ; CCrywolfAltarInfo::GetAltarState
  00b53	83 f8 01	 cmp	 eax, 1
  00b56	74 02		 je	 SHORT $LN1@GetContrac

; 334  : 		{
; 335  : 			continue;

  00b58	eb d2		 jmp	 SHORT $LN3@GetContrac
$LN1@GetContrac:

; 336  : 		}
; 337  : 
; 338  : 		iContractedAltarCount++;

  00b5a	8b 45 f8	 mov	 eax, DWORD PTR _iContractedAltarCount$[ebp]
  00b5d	83 c0 01	 add	 eax, 1
  00b60	89 45 f8	 mov	 DWORD PTR _iContractedAltarCount$[ebp], eax

; 339  : 	}

  00b63	eb c7		 jmp	 SHORT $LN3@GetContrac
$LN2@GetContrac:

; 340  : 
; 341  : 	return iContractedAltarCount;

  00b65	8b 45 f8	 mov	 eax, DWORD PTR _iContractedAltarCount$[ebp]

; 342  : }

  00b68	5f		 pop	 edi
  00b69	5e		 pop	 esi
  00b6a	5b		 pop	 ebx
  00b6b	8b e5		 mov	 esp, ebp
  00b6d	5d		 pop	 ebp
  00b6e	c3		 ret	 0
?GetContractedAltarCount@CCrywolfAltar@@QAEHXZ ENDP	; CCrywolfAltar::GetContractedAltarCount
_TEXT	ENDS
PUBLIC	?GetPriestHPSum@CCrywolfAltar@@QAEHXZ		; CCrywolfAltar::GetPriestHPSum
EXTRN	__ftol2_sse:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_lpUserObj$227842 = -20					; size = 4
_AltarInfo$227839 = -16					; size = 4
_i$227835 = -12						; size = 4
_iPriestHPSum$ = -8					; size = 4
_this$ = -4						; size = 4
?GetPriestHPSum@CCrywolfAltar@@QAEHXZ PROC		; CCrywolfAltar::GetPriestHPSum
; _this$ = ecx

; 345  : {

  00b70	55		 push	 ebp
  00b71	8b ec		 mov	 ebp, esp
  00b73	83 ec 54	 sub	 esp, 84			; 00000054H
  00b76	53		 push	 ebx
  00b77	56		 push	 esi
  00b78	57		 push	 edi
  00b79	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 346  : 	int iPriestHPSum = 0;

  00b7c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iPriestHPSum$[ebp], 0

; 347  : 
; 348  : 	for ( int i=0;i<MAX_CRYWOLF_ALTAR;i++)

  00b83	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$227835[ebp], 0
  00b8a	eb 09		 jmp	 SHORT $LN5@GetPriestH
$LN4@GetPriestH:
  00b8c	8b 45 f4	 mov	 eax, DWORD PTR _i$227835[ebp]
  00b8f	83 c0 01	 add	 eax, 1
  00b92	89 45 f4	 mov	 DWORD PTR _i$227835[ebp], eax
$LN5@GetPriestH:
  00b95	83 7d f4 05	 cmp	 DWORD PTR _i$227835[ebp], 5
  00b99	7d 5f		 jge	 SHORT $LN3@GetPriestH

; 349  : 	{
; 350  : 		CCrywolfAltarInfo * AltarInfo = &this->m_AltarInfo[i];

  00b9b	8b 45 f4	 mov	 eax, DWORD PTR _i$227835[ebp]
  00b9e	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00ba1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00ba4	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  00ba8	89 55 f0	 mov	 DWORD PTR _AltarInfo$227839[ebp], edx

; 351  : 
; 352  : 		if ( AltarInfo->GetAltarState() != 1 )

  00bab	8b 4d f0	 mov	 ecx, DWORD PTR _AltarInfo$227839[ebp]
  00bae	e8 00 00 00 00	 call	 ?GetAltarState@CCrywolfAltarInfo@@QAEHXZ ; CCrywolfAltarInfo::GetAltarState
  00bb3	83 f8 01	 cmp	 eax, 1
  00bb6	74 02		 je	 SHORT $LN2@GetPriestH

; 353  : 		{
; 354  : 			continue;

  00bb8	eb d2		 jmp	 SHORT $LN4@GetPriestH
$LN2@GetPriestH:

; 355  : 		}
; 356  : 
; 357  : 		if ( !gObjIsConnected(AltarInfo->m_iUserIndex))

  00bba	8b 45 f0	 mov	 eax, DWORD PTR _AltarInfo$227839[ebp]
  00bbd	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00bc0	51		 push	 ecx
  00bc1	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00bc6	83 c4 04	 add	 esp, 4
  00bc9	85 c0		 test	 eax, eax
  00bcb	75 02		 jne	 SHORT $LN1@GetPriestH

; 358  : 		{
; 359  : 			continue;

  00bcd	eb bd		 jmp	 SHORT $LN4@GetPriestH
$LN1@GetPriestH:

; 360  : 		}
; 361  : 
; 362  : 		LPOBJ lpUserObj = &gObj[AltarInfo->m_iUserIndex];

  00bcf	8b 45 f0	 mov	 eax, DWORD PTR _AltarInfo$227839[ebp]
  00bd2	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00bd5	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00bdb	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00be1	89 4d ec	 mov	 DWORD PTR _lpUserObj$227842[ebp], ecx

; 363  : 
; 364  : 		iPriestHPSum += (int)lpUserObj->Life;

  00be4	8b 45 ec	 mov	 eax, DWORD PTR _lpUserObj$227842[ebp]
  00be7	d9 80 fc 00 00
	00		 fld	 DWORD PTR [eax+252]
  00bed	e8 00 00 00 00	 call	 __ftol2_sse
  00bf2	03 45 f8	 add	 eax, DWORD PTR _iPriestHPSum$[ebp]
  00bf5	89 45 f8	 mov	 DWORD PTR _iPriestHPSum$[ebp], eax

; 365  : 	}

  00bf8	eb 92		 jmp	 SHORT $LN4@GetPriestH
$LN3@GetPriestH:

; 366  : 
; 367  : 	return iPriestHPSum;

  00bfa	8b 45 f8	 mov	 eax, DWORD PTR _iPriestHPSum$[ebp]

; 368  : }

  00bfd	5f		 pop	 edi
  00bfe	5e		 pop	 esi
  00bff	5b		 pop	 ebx
  00c00	8b e5		 mov	 esp, ebp
  00c02	5d		 pop	 ebp
  00c03	c3		 ret	 0
?GetPriestHPSum@CCrywolfAltar@@QAEHXZ ENDP		; CCrywolfAltar::GetPriestHPSum
_TEXT	ENDS
PUBLIC	?GetPriestMaxHPSum@CCrywolfAltar@@QAEHXZ	; CCrywolfAltar::GetPriestMaxHPSum
EXTRN	?gObjUpdateAppliedBuffEffect@@YAEPAUOBJECTSTRUCT@@HPAH1@Z:PROC ; gObjUpdateAppliedBuffEffect
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_AddLife$227856 = -24					; size = 4
_lpUserObj$227855 = -20					; size = 4
_AltarInfo$227852 = -16					; size = 4
_i$227848 = -12						; size = 4
_iPriestHPSum$ = -8					; size = 4
_this$ = -4						; size = 4
?GetPriestMaxHPSum@CCrywolfAltar@@QAEHXZ PROC		; CCrywolfAltar::GetPriestMaxHPSum
; _this$ = ecx

; 371  : {

  00c10	55		 push	 ebp
  00c11	8b ec		 mov	 ebp, esp
  00c13	83 ec 58	 sub	 esp, 88			; 00000058H
  00c16	53		 push	 ebx
  00c17	56		 push	 esi
  00c18	57		 push	 edi
  00c19	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 372  : 	int iPriestHPSum = 0;

  00c1c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iPriestHPSum$[ebp], 0

; 373  : 
; 374  : 	for ( int i=0;i<MAX_CRYWOLF_ALTAR;i++)

  00c23	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$227848[ebp], 0
  00c2a	eb 09		 jmp	 SHORT $LN5@GetPriestM
$LN4@GetPriestM:
  00c2c	8b 45 f4	 mov	 eax, DWORD PTR _i$227848[ebp]
  00c2f	83 c0 01	 add	 eax, 1
  00c32	89 45 f4	 mov	 DWORD PTR _i$227848[ebp], eax
$LN5@GetPriestM:
  00c35	83 7d f4 05	 cmp	 DWORD PTR _i$227848[ebp], 5
  00c39	0f 8d 89 00 00
	00		 jge	 $LN3@GetPriestM

; 375  : 	{
; 376  : 		CCrywolfAltarInfo * AltarInfo = &this->m_AltarInfo[i];

  00c3f	8b 45 f4	 mov	 eax, DWORD PTR _i$227848[ebp]
  00c42	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00c45	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c48	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  00c4c	89 55 f0	 mov	 DWORD PTR _AltarInfo$227852[ebp], edx

; 377  : 
; 378  : 		if ( AltarInfo->GetAltarState() != 1 )

  00c4f	8b 4d f0	 mov	 ecx, DWORD PTR _AltarInfo$227852[ebp]
  00c52	e8 00 00 00 00	 call	 ?GetAltarState@CCrywolfAltarInfo@@QAEHXZ ; CCrywolfAltarInfo::GetAltarState
  00c57	83 f8 01	 cmp	 eax, 1
  00c5a	74 02		 je	 SHORT $LN2@GetPriestM

; 379  : 		{
; 380  : 			continue;

  00c5c	eb ce		 jmp	 SHORT $LN4@GetPriestM
$LN2@GetPriestM:

; 381  : 		}
; 382  : 
; 383  : 		if ( !gObjIsConnected(AltarInfo->m_iUserIndex))

  00c5e	8b 45 f0	 mov	 eax, DWORD PTR _AltarInfo$227852[ebp]
  00c61	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00c64	51		 push	 ecx
  00c65	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00c6a	83 c4 04	 add	 esp, 4
  00c6d	85 c0		 test	 eax, eax
  00c6f	75 02		 jne	 SHORT $LN1@GetPriestM

; 384  : 		{
; 385  : 			continue;

  00c71	eb b9		 jmp	 SHORT $LN4@GetPriestM
$LN1@GetPriestM:

; 386  : 		}
; 387  : 
; 388  : 		LPOBJ lpUserObj = &gObj[AltarInfo->m_iUserIndex];

  00c73	8b 45 f0	 mov	 eax, DWORD PTR _AltarInfo$227852[ebp]
  00c76	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00c79	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00c7f	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00c85	89 4d ec	 mov	 DWORD PTR _lpUserObj$227855[ebp], ecx

; 389  : 
; 390  : 		int AddLife = 0;

  00c88	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _AddLife$227856[ebp], 0

; 391  : 
; 392  : 		gObjUpdateAppliedBuffEffect(lpUserObj, AT_SWELL_LIFE, &AddLife, 0); //season 3.0 add-on

  00c8f	6a 00		 push	 0
  00c91	8d 45 e8	 lea	 eax, DWORD PTR _AddLife$227856[ebp]
  00c94	50		 push	 eax
  00c95	6a 08		 push	 8
  00c97	8b 4d ec	 mov	 ecx, DWORD PTR _lpUserObj$227855[ebp]
  00c9a	51		 push	 ecx
  00c9b	e8 00 00 00 00	 call	 ?gObjUpdateAppliedBuffEffect@@YAEPAUOBJECTSTRUCT@@HPAH1@Z ; gObjUpdateAppliedBuffEffect
  00ca0	83 c4 10	 add	 esp, 16			; 00000010H

; 393  : 
; 394  : 		iPriestHPSum += (int)(lpUserObj->AddLife + lpUserObj->MaxLife + AddLife);

  00ca3	8b 45 ec	 mov	 eax, DWORD PTR _lpUserObj$227855[ebp]
  00ca6	db 80 4c 01 00
	00		 fild	 DWORD PTR [eax+332]
  00cac	8b 4d ec	 mov	 ecx, DWORD PTR _lpUserObj$227855[ebp]
  00caf	d8 81 00 01 00
	00		 fadd	 DWORD PTR [ecx+256]
  00cb5	da 45 e8	 fiadd	 DWORD PTR _AddLife$227856[ebp]
  00cb8	e8 00 00 00 00	 call	 __ftol2_sse
  00cbd	03 45 f8	 add	 eax, DWORD PTR _iPriestHPSum$[ebp]
  00cc0	89 45 f8	 mov	 DWORD PTR _iPriestHPSum$[ebp], eax

; 395  : 	}

  00cc3	e9 64 ff ff ff	 jmp	 $LN4@GetPriestM
$LN3@GetPriestM:

; 396  : 
; 397  : 	return iPriestHPSum;

  00cc8	8b 45 f8	 mov	 eax, DWORD PTR _iPriestHPSum$[ebp]

; 398  : }

  00ccb	5f		 pop	 edi
  00ccc	5e		 pop	 esi
  00ccd	5b		 pop	 ebx
  00cce	8b e5		 mov	 esp, ebp
  00cd0	5d		 pop	 ebp
  00cd1	c3		 ret	 0
?GetPriestMaxHPSum@CCrywolfAltar@@QAEHXZ ENDP		; CCrywolfAltar::GetPriestMaxHPSum
_TEXT	ENDS
PUBLIC	?CrywolfAltarAct@CCrywolfAltar@@QAEXH@Z		; CCrywolfAltar::CrywolfAltarAct
EXTRN	?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z:PROC	; gObjIsConnected
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv83 = -84						; size = 4
_lpUserObj$ = -16					; size = 4
_lpObj$ = -12						; size = 4
_iUserIndex$ = -8					; size = 4
_this$ = -4						; size = 4
_iIndex$ = 8						; size = 4
?CrywolfAltarAct@CCrywolfAltar@@QAEXH@Z PROC		; CCrywolfAltar::CrywolfAltarAct
; _this$ = ecx

; 401  : {

  00ce0	55		 push	 ebp
  00ce1	8b ec		 mov	 ebp, esp
  00ce3	83 ec 54	 sub	 esp, 84			; 00000054H
  00ce6	53		 push	 ebx
  00ce7	56		 push	 esi
  00ce8	57		 push	 edi
  00ce9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 402  : 	if ( !gObjIsConnected(iIndex))

  00cec	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00cef	50		 push	 eax
  00cf0	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00cf5	83 c4 04	 add	 esp, 4
  00cf8	85 c0		 test	 eax, eax
  00cfa	75 05		 jne	 SHORT $LN12@CrywolfAlt

; 403  : 	{
; 404  : 		return;

  00cfc	e9 3a 02 00 00	 jmp	 $LN13@CrywolfAlt
$LN12@CrywolfAlt:

; 405  : 	}
; 406  : 
; 407  : 	if ( gObj[iIndex].Type != OBJ_NPC || CRYWOLF_ALTAR_CLASS_RANGE(gObj[iIndex].Class) == FALSE )

  00d01	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00d04	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00d0a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00d10	0f b7 54 01 68	 movzx	 edx, WORD PTR [ecx+eax+104]
  00d15	83 fa 03	 cmp	 edx, 3
  00d18	75 53		 jne	 SHORT $LN10@CrywolfAlt
  00d1a	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00d1d	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00d23	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00d29	0f b7 94 01 b8
	00 00 00	 movzx	 edx, WORD PTR [ecx+eax+184]
  00d31	81 fa cd 00 00
	00		 cmp	 edx, 205		; 000000cdH
  00d37	7d 09		 jge	 SHORT $LN15@CrywolfAlt
  00d39	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
  00d40	eb 25		 jmp	 SHORT $LN16@CrywolfAlt
$LN15@CrywolfAlt:
  00d42	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00d45	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00d4b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00d51	0f b7 94 01 b8
	00 00 00	 movzx	 edx, WORD PTR [ecx+eax+184]
  00d59	33 c0		 xor	 eax, eax
  00d5b	81 fa d1 00 00
	00		 cmp	 edx, 209		; 000000d1H
  00d61	0f 9e c0	 setle	 al
  00d64	89 45 ac	 mov	 DWORD PTR tv83[ebp], eax
$LN16@CrywolfAlt:
  00d67	83 7d ac 00	 cmp	 DWORD PTR tv83[ebp], 0
  00d6b	75 05		 jne	 SHORT $LN11@CrywolfAlt
$LN10@CrywolfAlt:

; 408  : 	{
; 409  : 		return;

  00d6d	e9 c9 01 00 00	 jmp	 $LN13@CrywolfAlt
$LN11@CrywolfAlt:

; 410  : 	}
; 411  : 
; 412  : 	int iUserIndex = this->GetAltarUserIndex(gObj[iIndex].Class);

  00d72	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00d75	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00d7b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00d81	0f b7 94 01 b8
	00 00 00	 movzx	 edx, WORD PTR [ecx+eax+184]
  00d89	52		 push	 edx
  00d8a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d8d	e8 00 00 00 00	 call	 ?GetAltarUserIndex@CCrywolfAltar@@QAEHH@Z ; CCrywolfAltar::GetAltarUserIndex
  00d92	89 45 f8	 mov	 DWORD PTR _iUserIndex$[ebp], eax

; 413  : 
; 414  : 	if ( gObjIsConnected(iUserIndex) == FALSE )

  00d95	8b 45 f8	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00d98	50		 push	 eax
  00d99	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00d9e	83 c4 04	 add	 esp, 4
  00da1	85 c0		 test	 eax, eax
  00da3	75 2f		 jne	 SHORT $LN9@CrywolfAlt

; 415  : 	{
; 416  : 		if ( iUserIndex != -1 )

  00da5	83 7d f8 ff	 cmp	 DWORD PTR _iUserIndex$[ebp], -1
  00da9	74 24		 je	 SHORT $LN8@CrywolfAlt

; 417  : 		{
; 418  : 			this->ResetAltarUserIndex(iIndex, gObj[iIndex].Class);

  00dab	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00dae	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00db4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00dba	0f b7 94 01 b8
	00 00 00	 movzx	 edx, WORD PTR [ecx+eax+184]
  00dc2	52		 push	 edx
  00dc3	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00dc6	50		 push	 eax
  00dc7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00dca	e8 00 00 00 00	 call	 ?ResetAltarUserIndex@CCrywolfAltar@@QAEXHH@Z ; CCrywolfAltar::ResetAltarUserIndex
$LN8@CrywolfAlt:

; 419  : 		}
; 420  : 
; 421  : 		return;

  00dcf	e9 67 01 00 00	 jmp	 $LN13@CrywolfAlt
$LN9@CrywolfAlt:

; 422  : 	}
; 423  : 
; 424  : 	if ( gObjIsConnected(&gObj[iUserIndex]) == FALSE )

  00dd4	8b 45 f8	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00dd7	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00ddd	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00de3	50		 push	 eax
  00de4	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z ; gObjIsConnected
  00de9	83 c4 04	 add	 esp, 4
  00dec	85 c0		 test	 eax, eax
  00dee	75 29		 jne	 SHORT $LN7@CrywolfAlt

; 425  : 	{
; 426  : 		this->ResetAltarUserIndex(iIndex, gObj[iIndex].Class);

  00df0	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00df3	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00df9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00dff	0f b7 94 01 b8
	00 00 00	 movzx	 edx, WORD PTR [ecx+eax+184]
  00e07	52		 push	 edx
  00e08	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00e0b	50		 push	 eax
  00e0c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e0f	e8 00 00 00 00	 call	 ?ResetAltarUserIndex@CCrywolfAltar@@QAEXHH@Z ; CCrywolfAltar::ResetAltarUserIndex

; 427  : 		return;

  00e14	e9 22 01 00 00	 jmp	 $LN13@CrywolfAlt
$LN7@CrywolfAlt:

; 428  : 	}
; 429  : 
; 430  : 	LPOBJ lpObj = &gObj[iIndex];

  00e19	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00e1c	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00e22	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00e28	89 45 f4	 mov	 DWORD PTR _lpObj$[ebp], eax

; 431  : 	LPOBJ lpUserObj = &gObj[iUserIndex];

  00e2b	8b 45 f8	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00e2e	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00e34	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00e3a	89 45 f0	 mov	 DWORD PTR _lpUserObj$[ebp], eax

; 432  : 
; 433  : 	if ( lpUserObj->Live != FALSE && lpUserObj->MapNumber == MAP_INDEX_CRYWOLF_FIRSTZONE )

  00e3d	8b 45 f0	 mov	 eax, DWORD PTR _lpUserObj$[ebp]
  00e40	0f b6 48 6a	 movzx	 ecx, BYTE PTR [eax+106]
  00e44	85 c9		 test	 ecx, ecx
  00e46	0f 84 cb 00 00
	00		 je	 $LN6@CrywolfAlt
  00e4c	8b 45 f0	 mov	 eax, DWORD PTR _lpUserObj$[ebp]
  00e4f	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  00e56	83 f9 22	 cmp	 ecx, 34			; 00000022H
  00e59	0f 85 b8 00 00
	00		 jne	 $LN6@CrywolfAlt

; 434  : 	{
; 435  : 		if ( abs(lpObj->Y-lpUserObj->Y) <= 0 && abs(lpObj->X - lpUserObj->X) <= 0 )

  00e5f	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00e62	0f bf 88 46 01
	00 00		 movsx	 ecx, WORD PTR [eax+326]
  00e69	8b 55 f0	 mov	 edx, DWORD PTR _lpUserObj$[ebp]
  00e6c	0f bf 82 46 01
	00 00		 movsx	 eax, WORD PTR [edx+326]
  00e73	2b c8		 sub	 ecx, eax
  00e75	51		 push	 ecx
  00e76	e8 00 00 00 00	 call	 _abs
  00e7b	83 c4 04	 add	 esp, 4
  00e7e	85 c0		 test	 eax, eax
  00e80	7f 6f		 jg	 SHORT $LN5@CrywolfAlt
  00e82	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00e85	0f bf 88 44 01
	00 00		 movsx	 ecx, WORD PTR [eax+324]
  00e8c	8b 55 f0	 mov	 edx, DWORD PTR _lpUserObj$[ebp]
  00e8f	0f bf 82 44 01
	00 00		 movsx	 eax, WORD PTR [edx+324]
  00e96	2b c8		 sub	 ecx, eax
  00e98	51		 push	 ecx
  00e99	e8 00 00 00 00	 call	 _abs
  00e9e	83 c4 04	 add	 esp, 4
  00ea1	85 c0		 test	 eax, eax
  00ea3	7f 4c		 jg	 SHORT $LN5@CrywolfAlt

; 436  : 		{
; 437  : 			if ( this->CheckAltarValidContract(gObj[iIndex].Class) != FALSE )

  00ea5	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00ea8	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00eae	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00eb4	0f b7 94 01 b8
	00 00 00	 movzx	 edx, WORD PTR [ecx+eax+184]
  00ebc	52		 push	 edx
  00ebd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00ec0	e8 00 00 00 00	 call	 ?CheckAltarValidContract@CCrywolfAltar@@QAEHH@Z ; CCrywolfAltar::CheckAltarValidContract
  00ec5	85 c0		 test	 eax, eax
  00ec7	74 02		 je	 SHORT $LN4@CrywolfAlt

; 438  : 			{
; 439  : 				//Empty ;D
; 440  : 			}
; 441  : 			else

  00ec9	eb 24		 jmp	 SHORT $LN3@CrywolfAlt
$LN4@CrywolfAlt:

; 442  : 			{
; 443  : 				this->SetAltarValidContract(iIndex, gObj[iIndex].Class);

  00ecb	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00ece	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00ed4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00eda	0f b7 94 01 b8
	00 00 00	 movzx	 edx, WORD PTR [ecx+eax+184]
  00ee2	52		 push	 edx
  00ee3	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00ee6	50		 push	 eax
  00ee7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00eea	e8 00 00 00 00	 call	 ?SetAltarValidContract@CCrywolfAltar@@QAEXHH@Z ; CCrywolfAltar::SetAltarValidContract
$LN3@CrywolfAlt:

; 444  : 			}
; 445  : 		}
; 446  : 		else

  00eef	eb 24		 jmp	 SHORT $LN2@CrywolfAlt
$LN5@CrywolfAlt:

; 447  : 		{
; 448  : 			this->ResetAltarUserIndex(iIndex, gObj[iIndex].Class);

  00ef1	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00ef4	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00efa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00f00	0f b7 94 01 b8
	00 00 00	 movzx	 edx, WORD PTR [ecx+eax+184]
  00f08	52		 push	 edx
  00f09	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00f0c	50		 push	 eax
  00f0d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f10	e8 00 00 00 00	 call	 ?ResetAltarUserIndex@CCrywolfAltar@@QAEXHH@Z ; CCrywolfAltar::ResetAltarUserIndex
$LN2@CrywolfAlt:

; 449  : 		}
; 450  : 	}
; 451  : 	else

  00f15	eb 24		 jmp	 SHORT $LN13@CrywolfAlt
$LN6@CrywolfAlt:

; 452  : 	{
; 453  : 		this->ResetAltarUserIndex(iIndex, gObj[iIndex].Class);

  00f17	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00f1a	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00f20	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00f26	0f b7 94 01 b8
	00 00 00	 movzx	 edx, WORD PTR [ecx+eax+184]
  00f2e	52		 push	 edx
  00f2f	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00f32	50		 push	 eax
  00f33	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f36	e8 00 00 00 00	 call	 ?ResetAltarUserIndex@CCrywolfAltar@@QAEXHH@Z ; CCrywolfAltar::ResetAltarUserIndex
$LN13@CrywolfAlt:

; 454  : 	}
; 455  : }

  00f3b	5f		 pop	 edi
  00f3c	5e		 pop	 esi
  00f3d	5b		 pop	 ebx
  00f3e	8b e5		 mov	 esp, ebp
  00f40	5d		 pop	 ebp
  00f41	c2 04 00	 ret	 4
?CrywolfAltarAct@CCrywolfAltar@@QAEXH@Z ENDP		; CCrywolfAltar::CrywolfAltarAct
_TEXT	ENDS
EXTRN	_atexit:PROC
EXTRN	??0CCrywolfUtil@@QAE@XZ:PROC			; CCrywolfUtil::CCrywolfUtil
; Function compile flags: /Odtp /ZI
;	COMDAT ??__EUTIL@@YAXXZ
text$yc	SEGMENT
??__EUTIL@@YAXXZ PROC					; `dynamic initializer for 'UTIL'', COMDAT

; 11   : static CCrywolfUtil UTIL;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET _UTIL
  0000e	e8 00 00 00 00	 call	 ??0CCrywolfUtil@@QAE@XZ	; CCrywolfUtil::CCrywolfUtil
  00013	68 00 00 00 00	 push	 OFFSET ??__FUTIL@@YAXXZ	; `dynamic atexit destructor for 'UTIL''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__EUTIL@@YAXXZ ENDP					; `dynamic initializer for 'UTIL''
; Function compile flags: /Odtp /ZI
text$yc	ENDS
;	COMDAT ??__Eg_CrywolfNPC_Altar@@YAXXZ
text$yc	SEGMENT
??__Eg_CrywolfNPC_Altar@@YAXXZ PROC			; `dynamic initializer for 'g_CrywolfNPC_Altar'', COMDAT

; 12   : CCrywolfAltar g_CrywolfNPC_Altar;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CrywolfNPC_Altar@@3VCCrywolfAltar@@A ; g_CrywolfNPC_Altar
  0000e	e8 00 00 00 00	 call	 ??0CCrywolfAltar@@QAE@XZ ; CCrywolfAltar::CCrywolfAltar
  00013	68 00 00 00 00	 push	 OFFSET ??__Fg_CrywolfNPC_Altar@@YAXXZ ; `dynamic atexit destructor for 'g_CrywolfNPC_Altar''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__Eg_CrywolfNPC_Altar@@YAXXZ ENDP			; `dynamic initializer for 'g_CrywolfNPC_Altar''
text$yc	ENDS
EXTRN	??1CCrywolfUtil@@UAE@XZ:PROC			; CCrywolfUtil::~CCrywolfUtil
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FUTIL@@YAXXZ
text$yd	SEGMENT
??__FUTIL@@YAXXZ PROC					; `dynamic atexit destructor for 'UTIL'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET _UTIL
  0000e	e8 00 00 00 00	 call	 ??1CCrywolfUtil@@UAE@XZ	; CCrywolfUtil::~CCrywolfUtil
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__FUTIL@@YAXXZ ENDP					; `dynamic atexit destructor for 'UTIL''
; Function compile flags: /Odtp /ZI
text$yd	ENDS
;	COMDAT ??__Fg_CrywolfNPC_Altar@@YAXXZ
text$yd	SEGMENT
??__Fg_CrywolfNPC_Altar@@YAXXZ PROC			; `dynamic atexit destructor for 'g_CrywolfNPC_Altar'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CrywolfNPC_Altar@@3VCCrywolfAltar@@A ; g_CrywolfNPC_Altar
  0000e	e8 00 00 00 00	 call	 ??1CCrywolfAltar@@UAE@XZ ; CCrywolfAltar::~CCrywolfAltar
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__Fg_CrywolfNPC_Altar@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_CrywolfNPC_Altar''
text$yd	ENDS
PUBLIC	?g_CrywolfNPC_Altar@@3VCCrywolfAltar@@A		; g_CrywolfNPC_Altar
_BSS	SEGMENT
?g_CrywolfNPC_Altar@@3VCCrywolfAltar@@A DB 090H DUP (?)	; g_CrywolfNPC_Altar
_UTIL	DD	01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_UTIL$initializer$ DD FLAT:??__EUTIL@@YAXXZ
_g_CrywolfNPC_Altar$initializer$ DD FLAT:??__Eg_CrywolfNPC_Altar@@YAXXZ
CRT$XCU	ENDS
END
