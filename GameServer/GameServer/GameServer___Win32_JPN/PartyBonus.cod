; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\PartyBonus.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?gPartyBonus@@3VPartyBonus@@A			; gPartyBonus
_BSS	SEGMENT
?gPartyBonus@@3VPartyBonus@@A DB 029cH DUP (?)		; gPartyBonus
_BSS	ENDS
_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?Init@PartyBonus@@QAEXXZ			; PartyBonus::Init
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\partybonus.cpp
_TEXT	SEGMENT
_i$227028 = -8						; size = 4
_this$ = -4						; size = 4
?Init@PartyBonus@@QAEXXZ PROC				; PartyBonus::Init
; _this$ = ecx

; 11   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 12   : 	this->Enable = 0;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 13   : 	for (int i = 0; i < MAX_CLASS_BONUS; i++)

  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$227028[ebp], 0
  0001c	eb 09		 jmp	 SHORT $LN3@Init
$LN2@Init:
  0001e	8b 45 f8	 mov	 eax, DWORD PTR _i$227028[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 f8	 mov	 DWORD PTR _i$227028[ebp], eax
$LN3@Init:
  00027	83 7d f8 14	 cmp	 DWORD PTR _i$227028[ebp], 20 ; 00000014H
  0002b	0f 8d 8d 00 00
	00		 jge	 $LN1@Init

; 14   : 	{
; 15   : 		ClassBonus[i].dw = 0;

  00031	8b 45 f8	 mov	 eax, DWORD PTR _i$227028[ebp]
  00034	c1 e0 05	 shl	 eax, 5
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	c7 44 01 04 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+4], 0

; 16   : 		ClassBonus[i].dk = 0;

  00042	8b 45 f8	 mov	 eax, DWORD PTR _i$227028[ebp]
  00045	c1 e0 05	 shl	 eax, 5
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	c7 44 01 08 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+8], 0

; 17   : 		ClassBonus[i].elf = 0;

  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$227028[ebp]
  00056	c1 e0 05	 shl	 eax, 5
  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	c7 44 01 0c 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+12], 0

; 18   : 		ClassBonus[i].mg = 0;

  00064	8b 45 f8	 mov	 eax, DWORD PTR _i$227028[ebp]
  00067	c1 e0 05	 shl	 eax, 5
  0006a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006d	c7 44 01 10 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+16], 0

; 19   : 		ClassBonus[i].dl = 0;

  00075	8b 45 f8	 mov	 eax, DWORD PTR _i$227028[ebp]
  00078	c1 e0 05	 shl	 eax, 5
  0007b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	c7 44 01 14 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+20], 0

; 20   : 		ClassBonus[i].sum = 0;

  00086	8b 45 f8	 mov	 eax, DWORD PTR _i$227028[ebp]
  00089	c1 e0 05	 shl	 eax, 5
  0008c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	c7 44 01 18 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+24], 0

; 21   : 		ClassBonus[i].rf = 0;

  00097	8b 45 f8	 mov	 eax, DWORD PTR _i$227028[ebp]
  0009a	c1 e0 05	 shl	 eax, 5
  0009d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a0	c7 44 01 1c 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+28], 0

; 22   : 		ClassBonus[i].Bonus = 0;

  000a8	8b 45 f8	 mov	 eax, DWORD PTR _i$227028[ebp]
  000ab	c1 e0 05	 shl	 eax, 5
  000ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	c7 44 01 20 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+32], 0

; 23   : 	}

  000b9	e9 60 ff ff ff	 jmp	 $LN2@Init
$LN1@Init:

; 24   : 	this->nearbycount2  = 0;

  000be	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c1	c7 80 8c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+652], 0

; 25   : 	this->nearbycount3  = 0;

  000cb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ce	c7 80 90 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+656], 0

; 26   : 	this->nearbycount4  = 0;

  000d8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000db	c7 80 94 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+660], 0

; 27   : 	this->nearbycount5  = 0;

  000e5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e8	c7 80 98 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+664], 0

; 28   : 	this->Count = 0;

  000f2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f5	c7 80 84 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+644], 0

; 29   : 
; 30   : }

  000ff	5f		 pop	 edi
  00100	5e		 pop	 esi
  00101	5b		 pop	 ebx
  00102	8b e5		 mov	 esp, ebp
  00104	5d		 pop	 ebp
  00105	c3		 ret	 0
?Init@PartyBonus@@QAEXXZ ENDP				; PartyBonus::Init
_TEXT	ENDS
PUBLIC	??_C@_0BI@HDMMBKBM@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@	; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_0N@EOPNENAN@nearbycount5?$AA@		; `string'
PUBLIC	??_C@_0N@FHOGHMEM@nearbycount4?$AA@		; `string'
PUBLIC	??_C@_0N@BIKHOKIL@nearbycount3?$AA@		; `string'
PUBLIC	??_C@_0N@BLMNLMK@nearbycount2?$AA@		; `string'
PUBLIC	??_C@_0N@CKJBIIAJ@nearbycount1?$AA@		; `string'
PUBLIC	??_C@_06MLPMCPDE@ExTeam?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
PUBLIC	??_C@_0BO@HFDJGIAC@?4?4?2Data?2ExData?2PartyBonus?4ini?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?Load@PartyBonus@@QAEXXZ			; PartyBonus::Load
EXTRN	_fclose:PROC
EXTRN	_sscanf:PROC
EXTRN	?Ex_IsBadFileLine@@YA_NPADAAH@Z:PROC		; Ex_IsBadFileLine
EXTRN	_fgets:PROC
EXTRN	_feof:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	_fopen:PROC
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT ??_C@_0BI@HDMMBKBM@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BI@HDMMBKBM@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@ DB '%'
	DB	'd %d %d %d %d %d %d %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@
CONST	SEGMENT
??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@ DB 'LOAD FILE ERROR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EOPNENAN@nearbycount5?$AA@
CONST	SEGMENT
??_C@_0N@EOPNENAN@nearbycount5?$AA@ DB 'nearbycount5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FHOGHMEM@nearbycount4?$AA@
CONST	SEGMENT
??_C@_0N@FHOGHMEM@nearbycount4?$AA@ DB 'nearbycount4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BIKHOKIL@nearbycount3?$AA@
CONST	SEGMENT
??_C@_0N@BIKHOKIL@nearbycount3?$AA@ DB 'nearbycount3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BLMNLMK@nearbycount2?$AA@
CONST	SEGMENT
??_C@_0N@BLMNLMK@nearbycount2?$AA@ DB 'nearbycount2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CKJBIIAJ@nearbycount1?$AA@
CONST	SEGMENT
??_C@_0N@CKJBIIAJ@nearbycount1?$AA@ DB 'nearbycount1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06MLPMCPDE@ExTeam?$AA@
CONST	SEGMENT
??_C@_06MLPMCPDE@ExTeam?$AA@ DB 'ExTeam', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@HFDJGIAC@?4?4?2Data?2ExData?2PartyBonus?4ini?$AA@
CONST	SEGMENT
??_C@_0BO@HFDJGIAC@?4?4?2Data?2ExData?2PartyBonus?4ini?$AA@ DB '..\Data\E'
	DB	'xData\PartyBonus.ini', 00H			; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_n$227055 = -304					; size = 32
_Flag$ = -272						; size = 4
_Buff$ = -268						; size = 256
_file$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?Load@PartyBonus@@QAEXXZ PROC				; PartyBonus::Load
; _this$ = ecx

; 33   : {

  00110	55		 push	 ebp
  00111	8b ec		 mov	 ebp, esp
  00113	81 ec 70 01 00
	00		 sub	 esp, 368		; 00000170H
  00119	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0011e	33 c5		 xor	 eax, ebp
  00120	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00123	53		 push	 ebx
  00124	56		 push	 esi
  00125	57		 push	 edi
  00126	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 34   : 	this->Init();

  00129	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0012c	e8 00 00 00 00	 call	 ?Init@PartyBonus@@QAEXXZ ; PartyBonus::Init

; 35   : 
; 36   : 
; 37   : 	this->Enable = GetPrivateProfileInt("ExTeam","Enable",0,PartyBonus_DIR);

  00131	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@HFDJGIAC@?4?4?2Data?2ExData?2PartyBonus?4ini?$AA@
  00136	6a 00		 push	 0
  00138	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  0013d	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00142	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00148	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0014b	89 01		 mov	 DWORD PTR [ecx], eax

; 38   : 	
; 39   : 	this->nearbycount1	= GetPrivateProfileInt("ExTeam","nearbycount1",100,PartyBonus_DIR);

  0014d	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@HFDJGIAC@?4?4?2Data?2ExData?2PartyBonus?4ini?$AA@
  00152	6a 64		 push	 100			; 00000064H
  00154	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CKJBIIAJ@nearbycount1?$AA@
  00159	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  0015e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00164	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00167	89 81 88 02 00
	00		 mov	 DWORD PTR [ecx+648], eax

; 40   : 	this->nearbycount2	= GetPrivateProfileInt("ExTeam","nearbycount2",100,PartyBonus_DIR);

  0016d	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@HFDJGIAC@?4?4?2Data?2ExData?2PartyBonus?4ini?$AA@
  00172	6a 64		 push	 100			; 00000064H
  00174	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BLMNLMK@nearbycount2?$AA@
  00179	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  0017e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00184	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00187	89 81 8c 02 00
	00		 mov	 DWORD PTR [ecx+652], eax

; 41   : 	this->nearbycount3  = GetPrivateProfileInt("ExTeam","nearbycount3",100,PartyBonus_DIR);

  0018d	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@HFDJGIAC@?4?4?2Data?2ExData?2PartyBonus?4ini?$AA@
  00192	6a 64		 push	 100			; 00000064H
  00194	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BIKHOKIL@nearbycount3?$AA@
  00199	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  0019e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  001a4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001a7	89 81 90 02 00
	00		 mov	 DWORD PTR [ecx+656], eax

; 42   : 	this->nearbycount4  = GetPrivateProfileInt("ExTeam","nearbycount4",100,PartyBonus_DIR);

  001ad	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@HFDJGIAC@?4?4?2Data?2ExData?2PartyBonus?4ini?$AA@
  001b2	6a 64		 push	 100			; 00000064H
  001b4	68 00 00 00 00	 push	 OFFSET ??_C@_0N@FHOGHMEM@nearbycount4?$AA@
  001b9	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  001be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  001c4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001c7	89 81 94 02 00
	00		 mov	 DWORD PTR [ecx+660], eax

; 43   : 	this->nearbycount5	= GetPrivateProfileInt("ExTeam","nearbycount5",100,PartyBonus_DIR);

  001cd	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@HFDJGIAC@?4?4?2Data?2ExData?2PartyBonus?4ini?$AA@
  001d2	6a 64		 push	 100			; 00000064H
  001d4	68 00 00 00 00	 push	 OFFSET ??_C@_0N@EOPNENAN@nearbycount5?$AA@
  001d9	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  001de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  001e4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001e7	89 81 98 02 00
	00		 mov	 DWORD PTR [ecx+664], eax

; 44   : 
; 45   : 	FILE * file = fopen(PartyBonus_DIR,"r");

  001ed	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  001f2	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@HFDJGIAC@?4?4?2Data?2ExData?2PartyBonus?4ini?$AA@
  001f7	e8 00 00 00 00	 call	 _fopen
  001fc	83 c4 08	 add	 esp, 8
  001ff	89 45 f4	 mov	 DWORD PTR _file$[ebp], eax

; 46   : 	char Buff[256];
; 47   : 	int Flag = 0;

  00202	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _Flag$[ebp], 0

; 48   : 
; 49   : 	if(file == NULL)

  0020c	83 7d f4 00	 cmp	 DWORD PTR _file$[ebp], 0
  00210	75 1d		 jne	 SHORT $LN7@Load

; 50   : 	{
; 51   : 		MessageBoxA(0,PartyBonus_DIR,"LOAD FILE ERROR",0);

  00212	6a 00		 push	 0
  00214	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@
  00219	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@HFDJGIAC@?4?4?2Data?2ExData?2PartyBonus?4ini?$AA@
  0021e	6a 00		 push	 0
  00220	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 52   : 		this->Enable = false;

  00226	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00229	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN7@Load:

; 53   : 	}
; 54   : 
; 55   : 	if(!this->Enable) return;

  0022f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00232	83 38 00	 cmp	 DWORD PTR [eax], 0
  00235	75 05		 jne	 SHORT $LN5@Load
  00237	e9 a0 01 00 00	 jmp	 $LN8@Load
$LN5@Load:

; 56   : 
; 57   : 	while(!feof(file))

  0023c	8b 45 f4	 mov	 eax, DWORD PTR _file$[ebp]
  0023f	50		 push	 eax
  00240	e8 00 00 00 00	 call	 _feof
  00245	83 c4 04	 add	 esp, 4
  00248	85 c0		 test	 eax, eax
  0024a	0f 85 80 01 00
	00		 jne	 $LN4@Load

; 58   : 	{
; 59   : 		fgets(Buff,256,file);

  00250	8b 45 f4	 mov	 eax, DWORD PTR _file$[ebp]
  00253	50		 push	 eax
  00254	68 00 01 00 00	 push	 256			; 00000100H
  00259	8d 8d f4 fe ff
	ff		 lea	 ecx, DWORD PTR _Buff$[ebp]
  0025f	51		 push	 ecx
  00260	e8 00 00 00 00	 call	 _fgets
  00265	83 c4 0c	 add	 esp, 12			; 0000000cH

; 60   : 		if(Ex_IsBadFileLine(Buff, Flag))

  00268	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _Flag$[ebp]
  0026e	50		 push	 eax
  0026f	8d 8d f4 fe ff
	ff		 lea	 ecx, DWORD PTR _Buff$[ebp]
  00275	51		 push	 ecx
  00276	e8 00 00 00 00	 call	 ?Ex_IsBadFileLine@@YA_NPADAAH@Z ; Ex_IsBadFileLine
  0027b	83 c4 08	 add	 esp, 8
  0027e	0f b6 d0	 movzx	 edx, al
  00281	85 d2		 test	 edx, edx
  00283	74 02		 je	 SHORT $LN3@Load

; 61   : 			continue;

  00285	eb b5		 jmp	 SHORT $LN5@Load
$LN3@Load:

; 62   : 		if(Flag == 1)

  00287	83 bd f0 fe ff
	ff 01		 cmp	 DWORD PTR _Flag$[ebp], 1
  0028e	0f 85 37 01 00
	00		 jne	 $LN2@Load

; 63   : 		{
; 64   : 			int n[8];
; 65   : 			sscanf(Buff, "%d %d %d %d %d %d %d %d" , &n[0], &n[1], &n[2], &n[3] , &n[4], &n[5], &n[6], &n[7]);

  00294	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _n$227055[ebp+28]
  0029a	50		 push	 eax
  0029b	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _n$227055[ebp+24]
  002a1	51		 push	 ecx
  002a2	8d 95 e4 fe ff
	ff		 lea	 edx, DWORD PTR _n$227055[ebp+20]
  002a8	52		 push	 edx
  002a9	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _n$227055[ebp+16]
  002af	50		 push	 eax
  002b0	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _n$227055[ebp+12]
  002b6	51		 push	 ecx
  002b7	8d 95 d8 fe ff
	ff		 lea	 edx, DWORD PTR _n$227055[ebp+8]
  002bd	52		 push	 edx
  002be	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _n$227055[ebp+4]
  002c4	50		 push	 eax
  002c5	8d 8d d0 fe ff
	ff		 lea	 ecx, DWORD PTR _n$227055[ebp]
  002cb	51		 push	 ecx
  002cc	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@HDMMBKBM@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@
  002d1	8d 95 f4 fe ff
	ff		 lea	 edx, DWORD PTR _Buff$[ebp]
  002d7	52		 push	 edx
  002d8	e8 00 00 00 00	 call	 _sscanf
  002dd	83 c4 28	 add	 esp, 40			; 00000028H

; 66   : 			ClassBonus[this->Count].dw	=	n[0];

  002e0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002e3	8b 88 84 02 00
	00		 mov	 ecx, DWORD PTR [eax+644]
  002e9	c1 e1 05	 shl	 ecx, 5
  002ec	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002ef	8b 85 d0 fe ff
	ff		 mov	 eax, DWORD PTR _n$227055[ebp]
  002f5	89 44 0a 04	 mov	 DWORD PTR [edx+ecx+4], eax

; 67   : 			ClassBonus[this->Count].dk	=	n[1];

  002f9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002fc	8b 88 84 02 00
	00		 mov	 ecx, DWORD PTR [eax+644]
  00302	c1 e1 05	 shl	 ecx, 5
  00305	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00308	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR _n$227055[ebp+4]
  0030e	89 44 0a 08	 mov	 DWORD PTR [edx+ecx+8], eax

; 68   : 			ClassBonus[this->Count].elf	=	n[2];

  00312	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00315	8b 88 84 02 00
	00		 mov	 ecx, DWORD PTR [eax+644]
  0031b	c1 e1 05	 shl	 ecx, 5
  0031e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00321	8b 85 d8 fe ff
	ff		 mov	 eax, DWORD PTR _n$227055[ebp+8]
  00327	89 44 0a 0c	 mov	 DWORD PTR [edx+ecx+12], eax

; 69   : 			ClassBonus[this->Count].mg	=	n[3];

  0032b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0032e	8b 88 84 02 00
	00		 mov	 ecx, DWORD PTR [eax+644]
  00334	c1 e1 05	 shl	 ecx, 5
  00337	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0033a	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR _n$227055[ebp+12]
  00340	89 44 0a 10	 mov	 DWORD PTR [edx+ecx+16], eax

; 70   : 			ClassBonus[this->Count].dl	=	n[4];

  00344	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00347	8b 88 84 02 00
	00		 mov	 ecx, DWORD PTR [eax+644]
  0034d	c1 e1 05	 shl	 ecx, 5
  00350	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00353	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _n$227055[ebp+16]
  00359	89 44 0a 14	 mov	 DWORD PTR [edx+ecx+20], eax

; 71   : 			ClassBonus[this->Count].sum	=	n[5];

  0035d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00360	8b 88 84 02 00
	00		 mov	 ecx, DWORD PTR [eax+644]
  00366	c1 e1 05	 shl	 ecx, 5
  00369	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0036c	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _n$227055[ebp+20]
  00372	89 44 0a 18	 mov	 DWORD PTR [edx+ecx+24], eax

; 72   : 			ClassBonus[this->Count].rf	=	n[6];

  00376	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00379	8b 88 84 02 00
	00		 mov	 ecx, DWORD PTR [eax+644]
  0037f	c1 e1 05	 shl	 ecx, 5
  00382	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00385	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _n$227055[ebp+24]
  0038b	89 44 0a 1c	 mov	 DWORD PTR [edx+ecx+28], eax

; 73   : 			ClassBonus[this->Count].Bonus	=	n[7];

  0038f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00392	8b 88 84 02 00
	00		 mov	 ecx, DWORD PTR [eax+644]
  00398	c1 e1 05	 shl	 ecx, 5
  0039b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0039e	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _n$227055[ebp+28]
  003a4	89 44 0a 20	 mov	 DWORD PTR [edx+ecx+32], eax

; 74   : 			this->Count++;

  003a8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003ab	8b 88 84 02 00
	00		 mov	 ecx, DWORD PTR [eax+644]
  003b1	83 c1 01	 add	 ecx, 1
  003b4	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003b7	89 8a 84 02 00
	00		 mov	 DWORD PTR [edx+644], ecx

; 75   : 			if (this->Count >= MAX_CLASS_BONUS) return;

  003bd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003c0	83 b8 84 02 00
	00 14		 cmp	 DWORD PTR [eax+644], 20	; 00000014H
  003c7	7c 02		 jl	 SHORT $LN2@Load
  003c9	eb 11		 jmp	 SHORT $LN8@Load
$LN2@Load:

; 76   : 		}
; 77   : 	}

  003cb	e9 6c fe ff ff	 jmp	 $LN5@Load
$LN4@Load:

; 78   : 	fclose(file);

  003d0	8b 45 f4	 mov	 eax, DWORD PTR _file$[ebp]
  003d3	50		 push	 eax
  003d4	e8 00 00 00 00	 call	 _fclose
  003d9	83 c4 04	 add	 esp, 4
$LN8@Load:

; 79   : 
; 80   : }

  003dc	5f		 pop	 edi
  003dd	5e		 pop	 esi
  003de	5b		 pop	 ebx
  003df	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003e2	33 cd		 xor	 ecx, ebp
  003e4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003e9	8b e5		 mov	 esp, ebp
  003eb	5d		 pop	 ebp
  003ec	c3		 ret	 0
?Load@PartyBonus@@QAEXXZ ENDP				; PartyBonus::Load
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ExpNearbyCount@PartyBonus@@QAEHPAUOBJECTSTRUCT@@0H@Z ; PartyBonus::ExpNearbyCount
EXTRN	?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z:PROC	; gObjCalDistance
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?gParty@@3VPartyClass@@A:BYTE			; gParty
EXTRN	?gAddExperience@@3MA:DWORD			; gAddExperience
EXTRN	__ftol2_sse:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_n$227070 = -68						; size = 4
_ViewCount$ = -64					; size = 4
_number$ = -60						; size = 4
_partynum$ = -56					; size = 4
_dis$ = -52						; size = 40
_lpPartyObj$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_lpTargetObj$ = 12					; size = 4
_viewplayer$ = 16					; size = 4
?ExpNearbyCount@PartyBonus@@QAEHPAUOBJECTSTRUCT@@0H@Z PROC ; PartyBonus::ExpNearbyCount
; _this$ = ecx

; 83   : {

  003f0	55		 push	 ebp
  003f1	8b ec		 mov	 ebp, esp
  003f3	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  003f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  003fe	33 c5		 xor	 eax, ebp
  00400	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00403	53		 push	 ebx
  00404	56		 push	 esi
  00405	57		 push	 edi
  00406	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 84   : 	if(!this->Enable) return gAddExperience;

  00409	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0040c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0040f	75 10		 jne	 SHORT $LN14@ExpNearbyC
  00411	d9 05 00 00 00
	00		 fld	 DWORD PTR ?gAddExperience@@3MA ; gAddExperience
  00417	e8 00 00 00 00	 call	 __ftol2_sse
  0041c	e9 03 01 00 00	 jmp	 $LN15@ExpNearbyC
$LN14@ExpNearbyC:

; 85   : 	
; 86   : 	LPOBJ lpPartyObj;
; 87   : 	int dis[MAX_USER_IN_PARTY];
; 88   : 
; 89   : 	
; 90   : 	int partynum = lpObj->PartyNumber;

  00421	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00424	8b 88 2c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1068]
  0042a	89 4d c8	 mov	 DWORD PTR _partynum$[ebp], ecx

; 91   : 	
; 92   : 	int number = 0;

  0042d	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _number$[ebp], 0

; 93   : 	int ViewCount = 0;

  00434	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _ViewCount$[ebp], 0

; 94   : 
; 95   : 	for(int n = 0; n < MAX_USER_IN_PARTY; n++)

  0043b	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _n$227070[ebp], 0
  00442	eb 09		 jmp	 SHORT $LN13@ExpNearbyC
$LN12@ExpNearbyC:
  00444	8b 45 bc	 mov	 eax, DWORD PTR _n$227070[ebp]
  00447	83 c0 01	 add	 eax, 1
  0044a	89 45 bc	 mov	 DWORD PTR _n$227070[ebp], eax
$LN13@ExpNearbyC:
  0044d	83 7d bc 0a	 cmp	 DWORD PTR _n$227070[ebp], 10 ; 0000000aH
  00451	7d 7e		 jge	 SHORT $LN11@ExpNearbyC

; 96   : 	{
; 97   : 		number = gParty.m_PartyS[partynum].Number[n];

  00453	8b 45 c8	 mov	 eax, DWORD PTR _partynum$[ebp]
  00456	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00459	8b 4d bc	 mov	 ecx, DWORD PTR _n$227070[ebp]
  0045c	8b 94 88 0c 00
	00 00		 mov	 edx, DWORD PTR ?gParty@@3VPartyClass@@A[eax+ecx*4+12]
  00463	89 55 c4	 mov	 DWORD PTR _number$[ebp], edx

; 98   : 		if(number >= 0)

  00466	83 7d c4 00	 cmp	 DWORD PTR _number$[ebp], 0
  0046a	7c 60		 jl	 SHORT $LN8@ExpNearbyC

; 99   : 		{
; 100  : 
; 101  : 			lpPartyObj = &gObj[number];

  0046c	8b 45 c4	 mov	 eax, DWORD PTR _number$[ebp]
  0046f	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00475	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0047b	89 45 f4	 mov	 DWORD PTR _lpPartyObj$[ebp], eax

; 102  : 			
; 103  : 			if(lpTargetObj->MapNumber == lpPartyObj->MapNumber)

  0047e	8b 45 0c	 mov	 eax, DWORD PTR _lpTargetObj$[ebp]
  00481	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  00488	8b 55 f4	 mov	 edx, DWORD PTR _lpPartyObj$[ebp]
  0048b	0f b6 82 49 01
	00 00		 movzx	 eax, BYTE PTR [edx+329]
  00492	3b c8		 cmp	 ecx, eax
  00494	75 36		 jne	 SHORT $LN8@ExpNearbyC

; 104  : 			{
; 105  : 				dis[n] = gObjCalDistance(lpTargetObj,&gObj[number]);

  00496	8b 45 c4	 mov	 eax, DWORD PTR _number$[ebp]
  00499	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0049f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  004a5	50		 push	 eax
  004a6	8b 4d 0c	 mov	 ecx, DWORD PTR _lpTargetObj$[ebp]
  004a9	51		 push	 ecx
  004aa	e8 00 00 00 00	 call	 ?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z ; gObjCalDistance
  004af	83 c4 08	 add	 esp, 8
  004b2	8b 55 bc	 mov	 edx, DWORD PTR _n$227070[ebp]
  004b5	89 44 95 cc	 mov	 DWORD PTR _dis$[ebp+edx*4], eax

; 106  : 
; 107  : 				if(dis[n] < 10)

  004b9	8b 45 bc	 mov	 eax, DWORD PTR _n$227070[ebp]
  004bc	83 7c 85 cc 0a	 cmp	 DWORD PTR _dis$[ebp+eax*4], 10 ; 0000000aH
  004c1	7d 09		 jge	 SHORT $LN8@ExpNearbyC

; 108  : 				{
; 109  : 					ViewCount++;

  004c3	8b 45 c0	 mov	 eax, DWORD PTR _ViewCount$[ebp]
  004c6	83 c0 01	 add	 eax, 1
  004c9	89 45 c0	 mov	 DWORD PTR _ViewCount$[ebp], eax
$LN8@ExpNearbyC:

; 110  : 				}
; 111  : 			}
; 112  : 		}
; 113  : 	}

  004cc	e9 73 ff ff ff	 jmp	 $LN12@ExpNearbyC
$LN11@ExpNearbyC:

; 114  : 
; 115  : 
; 116  : 	if (ViewCount == 2)	

  004d1	83 7d c0 02	 cmp	 DWORD PTR _ViewCount$[ebp], 2
  004d5	75 0d		 jne	 SHORT $LN7@ExpNearbyC

; 117  : 	{
; 118  : 		return int(nearbycount2);

  004d7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004da	8b 80 8c 02 00
	00		 mov	 eax, DWORD PTR [eax+652]
  004e0	eb 42		 jmp	 SHORT $LN15@ExpNearbyC
  004e2	eb 37		 jmp	 SHORT $LN1@ExpNearbyC
$LN7@ExpNearbyC:

; 119  : 	}
; 120  : 	else if (ViewCount == 3)

  004e4	83 7d c0 03	 cmp	 DWORD PTR _ViewCount$[ebp], 3
  004e8	75 0d		 jne	 SHORT $LN5@ExpNearbyC

; 121  : 	{
; 122  : 		return int(nearbycount3);

  004ea	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004ed	8b 80 90 02 00
	00		 mov	 eax, DWORD PTR [eax+656]
  004f3	eb 2f		 jmp	 SHORT $LN15@ExpNearbyC
  004f5	eb 24		 jmp	 SHORT $LN1@ExpNearbyC
$LN5@ExpNearbyC:

; 123  : 	}
; 124  : 	else if (ViewCount == 4)

  004f7	83 7d c0 04	 cmp	 DWORD PTR _ViewCount$[ebp], 4
  004fb	75 0d		 jne	 SHORT $LN3@ExpNearbyC

; 125  : 	{
; 126  : 		return int(nearbycount4);

  004fd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00500	8b 80 94 02 00
	00		 mov	 eax, DWORD PTR [eax+660]
  00506	eb 1c		 jmp	 SHORT $LN15@ExpNearbyC
  00508	eb 11		 jmp	 SHORT $LN1@ExpNearbyC
$LN3@ExpNearbyC:

; 127  : 	}
; 128  : 	else if (ViewCount >= 5)

  0050a	83 7d c0 05	 cmp	 DWORD PTR _ViewCount$[ebp], 5
  0050e	7c 0b		 jl	 SHORT $LN1@ExpNearbyC

; 129  : 	{
; 130  : 		return int(nearbycount5);

  00510	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00513	8b 80 98 02 00
	00		 mov	 eax, DWORD PTR [eax+664]
  00519	eb 09		 jmp	 SHORT $LN15@ExpNearbyC
$LN1@ExpNearbyC:

; 131  : 	}
; 132  : 	return this->nearbycount1;

  0051b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0051e	8b 80 88 02 00
	00		 mov	 eax, DWORD PTR [eax+648]
$LN15@ExpNearbyC:

; 133  : }

  00524	5f		 pop	 edi
  00525	5e		 pop	 esi
  00526	5b		 pop	 ebx
  00527	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0052a	33 cd		 xor	 ecx, ebp
  0052c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00531	8b e5		 mov	 esp, ebp
  00533	5d		 pop	 ebp
  00534	c2 0c 00	 ret	 12			; 0000000cH
?ExpNearbyCount@PartyBonus@@QAEHPAUOBJECTSTRUCT@@0H@Z ENDP ; PartyBonus::ExpNearbyCount
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ExpClassBonus@PartyBonus@@QAEHPAUOBJECTSTRUCT@@0H@Z ; PartyBonus::ExpClassBonus
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$227138 = -96						; size = 4
_n$227102 = -92						; size = 4
_partynum$ = -88					; size = 4
_number$ = -84						; size = 4
_rfCount$ = -80						; size = 4
_sumCount$ = -76					; size = 4
_dlCount$ = -72						; size = 4
_mgCount$ = -68						; size = 4
_elfCount$ = -64					; size = 4
_dkCount$ = -60						; size = 4
_dwCount$ = -56						; size = 4
_dis$ = -52						; size = 40
_lpPartyObj$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_lpTargetObj$ = 12					; size = 4
_viewplayer$ = 16					; size = 4
?ExpClassBonus@PartyBonus@@QAEHPAUOBJECTSTRUCT@@0H@Z PROC ; PartyBonus::ExpClassBonus
; _this$ = ecx

; 136  : {

  00540	55		 push	 ebp
  00541	8b ec		 mov	 ebp, esp
  00543	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00549	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0054e	33 c5		 xor	 eax, ebp
  00550	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00553	53		 push	 ebx
  00554	56		 push	 esi
  00555	57		 push	 edi
  00556	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 137  : 	if(!this->Enable) return false;

  00559	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0055c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0055f	75 07		 jne	 SHORT $LN30@ExpClassBo
  00561	33 c0		 xor	 eax, eax
  00563	e9 55 02 00 00	 jmp	 $LN31@ExpClassBo
$LN30@ExpClassBo:

; 138  : 
; 139  : 	LPOBJ lpPartyObj;
; 140  : 	int dis[MAX_USER_IN_PARTY];
; 141  : 	
; 142  : 	int dwCount = 0;

  00568	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _dwCount$[ebp], 0

; 143  : 	int dkCount = 0;

  0056f	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _dkCount$[ebp], 0

; 144  : 	int elfCount = 0;

  00576	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _elfCount$[ebp], 0

; 145  : 	int mgCount = 0;

  0057d	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _mgCount$[ebp], 0

; 146  : 	int dlCount = 0;

  00584	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _dlCount$[ebp], 0

; 147  : 	int sumCount = 0;

  0058b	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _sumCount$[ebp], 0

; 148  : 	int rfCount = 0;

  00592	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR _rfCount$[ebp], 0

; 149  : 	int number = 0;

  00599	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR _number$[ebp], 0

; 150  : 
; 151  : 	int partynum = lpObj->PartyNumber;

  005a0	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  005a3	8b 88 2c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1068]
  005a9	89 4d a8	 mov	 DWORD PTR _partynum$[ebp], ecx

; 152  : 	
; 153  : 	for(int n = 0; n < MAX_USER_IN_PARTY; n++)

  005ac	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _n$227102[ebp], 0
  005b3	eb 09		 jmp	 SHORT $LN29@ExpClassBo
$LN28@ExpClassBo:
  005b5	8b 45 a4	 mov	 eax, DWORD PTR _n$227102[ebp]
  005b8	83 c0 01	 add	 eax, 1
  005bb	89 45 a4	 mov	 DWORD PTR _n$227102[ebp], eax
$LN29@ExpClassBo:
  005be	83 7d a4 0a	 cmp	 DWORD PTR _n$227102[ebp], 10 ; 0000000aH
  005c2	0f 8d 3a 01 00
	00		 jge	 $LN27@ExpClassBo

; 154  : 	{
; 155  : 		number = gParty.m_PartyS[partynum].Number[n];

  005c8	8b 45 a8	 mov	 eax, DWORD PTR _partynum$[ebp]
  005cb	6b c0 6c	 imul	 eax, 108		; 0000006cH
  005ce	8b 4d a4	 mov	 ecx, DWORD PTR _n$227102[ebp]
  005d1	8b 94 88 0c 00
	00 00		 mov	 edx, DWORD PTR ?gParty@@3VPartyClass@@A[eax+ecx*4+12]
  005d8	89 55 ac	 mov	 DWORD PTR _number$[ebp], edx

; 156  : 		if(number >= 0)

  005db	83 7d ac 00	 cmp	 DWORD PTR _number$[ebp], 0
  005df	0f 8c 18 01 00
	00		 jl	 $LN26@ExpClassBo

; 157  : 		{
; 158  : 			lpPartyObj = &gObj[number];

  005e5	8b 45 ac	 mov	 eax, DWORD PTR _number$[ebp]
  005e8	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  005ee	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  005f4	89 45 f4	 mov	 DWORD PTR _lpPartyObj$[ebp], eax

; 159  : 			
; 160  : 			if(lpTargetObj->MapNumber == lpPartyObj->MapNumber)

  005f7	8b 45 0c	 mov	 eax, DWORD PTR _lpTargetObj$[ebp]
  005fa	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  00601	8b 55 f4	 mov	 edx, DWORD PTR _lpPartyObj$[ebp]
  00604	0f b6 82 49 01
	00 00		 movzx	 eax, BYTE PTR [edx+329]
  0060b	3b c8		 cmp	 ecx, eax
  0060d	0f 85 ea 00 00
	00		 jne	 $LN26@ExpClassBo

; 161  : 			{
; 162  : 				dis[n] = gObjCalDistance(lpTargetObj,&gObj[number]);

  00613	8b 45 ac	 mov	 eax, DWORD PTR _number$[ebp]
  00616	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0061c	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00622	50		 push	 eax
  00623	8b 4d 0c	 mov	 ecx, DWORD PTR _lpTargetObj$[ebp]
  00626	51		 push	 ecx
  00627	e8 00 00 00 00	 call	 ?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z ; gObjCalDistance
  0062c	83 c4 08	 add	 esp, 8
  0062f	8b 55 a4	 mov	 edx, DWORD PTR _n$227102[ebp]
  00632	89 44 95 cc	 mov	 DWORD PTR _dis$[ebp+edx*4], eax

; 163  : 
; 164  : 				if(dis[n] < 10)

  00636	8b 45 a4	 mov	 eax, DWORD PTR _n$227102[ebp]
  00639	83 7c 85 cc 0a	 cmp	 DWORD PTR _dis$[ebp+eax*4], 10 ; 0000000aH
  0063e	0f 8d b9 00 00
	00		 jge	 $LN26@ExpClassBo

; 165  : 				{
; 166  : 					if (lpPartyObj->Class == CLASS_WIZARD)

  00644	8b 45 f4	 mov	 eax, DWORD PTR _lpPartyObj$[ebp]
  00647	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  0064e	85 c9		 test	 ecx, ecx
  00650	75 0e		 jne	 SHORT $LN23@ExpClassBo

; 167  : 					{
; 168  : 						dwCount++;

  00652	8b 45 c8	 mov	 eax, DWORD PTR _dwCount$[ebp]
  00655	83 c0 01	 add	 eax, 1
  00658	89 45 c8	 mov	 DWORD PTR _dwCount$[ebp], eax
  0065b	e9 9d 00 00 00	 jmp	 $LN26@ExpClassBo
$LN23@ExpClassBo:

; 169  : 					}	
; 170  : 					else if (lpPartyObj->Class == CLASS_KNIGHT)

  00660	8b 45 f4	 mov	 eax, DWORD PTR _lpPartyObj$[ebp]
  00663	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  0066a	83 f9 01	 cmp	 ecx, 1
  0066d	75 0e		 jne	 SHORT $LN21@ExpClassBo

; 171  : 					{
; 172  : 						dkCount++;

  0066f	8b 45 c4	 mov	 eax, DWORD PTR _dkCount$[ebp]
  00672	83 c0 01	 add	 eax, 1
  00675	89 45 c4	 mov	 DWORD PTR _dkCount$[ebp], eax
  00678	e9 80 00 00 00	 jmp	 $LN26@ExpClassBo
$LN21@ExpClassBo:

; 173  : 					}
; 174  : 					else if (lpPartyObj->Class == CLASS_ELF)

  0067d	8b 45 f4	 mov	 eax, DWORD PTR _lpPartyObj$[ebp]
  00680	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00687	83 f9 02	 cmp	 ecx, 2
  0068a	75 0b		 jne	 SHORT $LN19@ExpClassBo

; 175  : 					{
; 176  : 						elfCount++;

  0068c	8b 45 c0	 mov	 eax, DWORD PTR _elfCount$[ebp]
  0068f	83 c0 01	 add	 eax, 1
  00692	89 45 c0	 mov	 DWORD PTR _elfCount$[ebp], eax
  00695	eb 66		 jmp	 SHORT $LN26@ExpClassBo
$LN19@ExpClassBo:

; 177  : 					}
; 178  : 					else if(lpPartyObj->Class == CLASS_MAGUMSA)

  00697	8b 45 f4	 mov	 eax, DWORD PTR _lpPartyObj$[ebp]
  0069a	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  006a1	83 f9 03	 cmp	 ecx, 3
  006a4	75 0b		 jne	 SHORT $LN17@ExpClassBo

; 179  : 					{
; 180  : 						mgCount++;

  006a6	8b 45 bc	 mov	 eax, DWORD PTR _mgCount$[ebp]
  006a9	83 c0 01	 add	 eax, 1
  006ac	89 45 bc	 mov	 DWORD PTR _mgCount$[ebp], eax
  006af	eb 4c		 jmp	 SHORT $LN26@ExpClassBo
$LN17@ExpClassBo:

; 181  : 					}
; 182  : 					else if(lpPartyObj->Class == CLASS_DARKLORD)

  006b1	8b 45 f4	 mov	 eax, DWORD PTR _lpPartyObj$[ebp]
  006b4	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  006bb	83 f9 04	 cmp	 ecx, 4
  006be	75 0b		 jne	 SHORT $LN15@ExpClassBo

; 183  : 					{
; 184  : 						dlCount++;

  006c0	8b 45 b8	 mov	 eax, DWORD PTR _dlCount$[ebp]
  006c3	83 c0 01	 add	 eax, 1
  006c6	89 45 b8	 mov	 DWORD PTR _dlCount$[ebp], eax
  006c9	eb 32		 jmp	 SHORT $LN26@ExpClassBo
$LN15@ExpClassBo:

; 185  : 					}
; 186  : 					else if (lpPartyObj->Class == CLASS_SUMMONER)

  006cb	8b 45 f4	 mov	 eax, DWORD PTR _lpPartyObj$[ebp]
  006ce	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  006d5	83 f9 05	 cmp	 ecx, 5
  006d8	75 0b		 jne	 SHORT $LN13@ExpClassBo

; 187  : 					{
; 188  : 						sumCount++;

  006da	8b 45 b4	 mov	 eax, DWORD PTR _sumCount$[ebp]
  006dd	83 c0 01	 add	 eax, 1
  006e0	89 45 b4	 mov	 DWORD PTR _sumCount$[ebp], eax
  006e3	eb 18		 jmp	 SHORT $LN26@ExpClassBo
$LN13@ExpClassBo:

; 189  : 					}
; 190  : 					else if (lpPartyObj->Class == CLASS_MONK)

  006e5	8b 45 f4	 mov	 eax, DWORD PTR _lpPartyObj$[ebp]
  006e8	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  006ef	83 f9 06	 cmp	 ecx, 6
  006f2	75 09		 jne	 SHORT $LN26@ExpClassBo

; 191  : 					{
; 192  : 						rfCount++;

  006f4	8b 45 b0	 mov	 eax, DWORD PTR _rfCount$[ebp]
  006f7	83 c0 01	 add	 eax, 1
  006fa	89 45 b0	 mov	 DWORD PTR _rfCount$[ebp], eax
$LN26@ExpClassBo:

; 193  : 					}
; 194  : 				}
; 195  : 			}
; 196  : 		}
; 197  : 	}

  006fd	e9 b3 fe ff ff	 jmp	 $LN28@ExpClassBo
$LN27@ExpClassBo:

; 198  : 	for (int i = 0; i < this->Count; i++)

  00702	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _i$227138[ebp], 0
  00709	eb 09		 jmp	 SHORT $LN10@ExpClassBo
$LN9@ExpClassBo:
  0070b	8b 45 a0	 mov	 eax, DWORD PTR _i$227138[ebp]
  0070e	83 c0 01	 add	 eax, 1
  00711	89 45 a0	 mov	 DWORD PTR _i$227138[ebp], eax
$LN10@ExpClassBo:
  00714	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00717	8b 4d a0	 mov	 ecx, DWORD PTR _i$227138[ebp]
  0071a	3b 88 84 02 00
	00		 cmp	 ecx, DWORD PTR [eax+644]
  00720	0f 8d 92 00 00
	00		 jge	 $LN8@ExpClassBo

; 199  : 	{
; 200  : 		if (ClassBonus[i].dw == dwCount)

  00726	8b 45 a0	 mov	 eax, DWORD PTR _i$227138[ebp]
  00729	c1 e0 05	 shl	 eax, 5
  0072c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0072f	8b 54 01 04	 mov	 edx, DWORD PTR [ecx+eax+4]
  00733	3b 55 c8	 cmp	 edx, DWORD PTR _dwCount$[ebp]
  00736	75 7b		 jne	 SHORT $LN7@ExpClassBo

; 201  : 			if (ClassBonus[i].dk == dkCount)

  00738	8b 45 a0	 mov	 eax, DWORD PTR _i$227138[ebp]
  0073b	c1 e0 05	 shl	 eax, 5
  0073e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00741	8b 54 01 08	 mov	 edx, DWORD PTR [ecx+eax+8]
  00745	3b 55 c4	 cmp	 edx, DWORD PTR _dkCount$[ebp]
  00748	75 69		 jne	 SHORT $LN7@ExpClassBo

; 202  : 				if (ClassBonus[i].elf == elfCount)

  0074a	8b 45 a0	 mov	 eax, DWORD PTR _i$227138[ebp]
  0074d	c1 e0 05	 shl	 eax, 5
  00750	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00753	8b 54 01 0c	 mov	 edx, DWORD PTR [ecx+eax+12]
  00757	3b 55 c0	 cmp	 edx, DWORD PTR _elfCount$[ebp]
  0075a	75 57		 jne	 SHORT $LN7@ExpClassBo

; 203  : 					if (ClassBonus[i].mg == mgCount)

  0075c	8b 45 a0	 mov	 eax, DWORD PTR _i$227138[ebp]
  0075f	c1 e0 05	 shl	 eax, 5
  00762	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00765	8b 54 01 10	 mov	 edx, DWORD PTR [ecx+eax+16]
  00769	3b 55 bc	 cmp	 edx, DWORD PTR _mgCount$[ebp]
  0076c	75 45		 jne	 SHORT $LN7@ExpClassBo

; 204  : 						if (ClassBonus[i].dl == dlCount)

  0076e	8b 45 a0	 mov	 eax, DWORD PTR _i$227138[ebp]
  00771	c1 e0 05	 shl	 eax, 5
  00774	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00777	8b 54 01 14	 mov	 edx, DWORD PTR [ecx+eax+20]
  0077b	3b 55 b8	 cmp	 edx, DWORD PTR _dlCount$[ebp]
  0077e	75 33		 jne	 SHORT $LN7@ExpClassBo

; 205  : 							if (ClassBonus[i].sum == sumCount)

  00780	8b 45 a0	 mov	 eax, DWORD PTR _i$227138[ebp]
  00783	c1 e0 05	 shl	 eax, 5
  00786	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00789	8b 54 01 18	 mov	 edx, DWORD PTR [ecx+eax+24]
  0078d	3b 55 b4	 cmp	 edx, DWORD PTR _sumCount$[ebp]
  00790	75 21		 jne	 SHORT $LN7@ExpClassBo

; 206  : 								if (ClassBonus[i].rf == rfCount)

  00792	8b 45 a0	 mov	 eax, DWORD PTR _i$227138[ebp]
  00795	c1 e0 05	 shl	 eax, 5
  00798	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0079b	8b 54 01 1c	 mov	 edx, DWORD PTR [ecx+eax+28]
  0079f	3b 55 b0	 cmp	 edx, DWORD PTR _rfCount$[ebp]
  007a2	75 0f		 jne	 SHORT $LN7@ExpClassBo

; 207  : 								{
; 208  : 									return int(ClassBonus[i].Bonus);

  007a4	8b 45 a0	 mov	 eax, DWORD PTR _i$227138[ebp]
  007a7	c1 e0 05	 shl	 eax, 5
  007aa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007ad	8b 44 01 20	 mov	 eax, DWORD PTR [ecx+eax+32]
  007b1	eb 0a		 jmp	 SHORT $LN31@ExpClassBo
$LN7@ExpClassBo:

; 209  : 								}
; 210  : 	}

  007b3	e9 53 ff ff ff	 jmp	 $LN9@ExpClassBo
$LN8@ExpClassBo:

; 211  : 	return 100;

  007b8	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
$LN31@ExpClassBo:

; 212  : 			
; 213  : }

  007bd	5f		 pop	 edi
  007be	5e		 pop	 esi
  007bf	5b		 pop	 ebx
  007c0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  007c3	33 cd		 xor	 ecx, ebp
  007c5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  007ca	8b e5		 mov	 esp, ebp
  007cc	5d		 pop	 ebp
  007cd	c2 0c 00	 ret	 12			; 0000000cH
?ExpClassBonus@PartyBonus@@QAEHPAUOBJECTSTRUCT@@0H@Z ENDP ; PartyBonus::ExpClassBonus
_TEXT	ENDS
PUBLIC	?isEnable@PartyBonus@@QAE_NH@Z			; PartyBonus::isEnable
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_viewplayer$ = 8					; size = 4
?isEnable@PartyBonus@@QAE_NH@Z PROC			; PartyBonus::isEnable
; _this$ = ecx

; 216  : {

  007d0	55		 push	 ebp
  007d1	8b ec		 mov	 ebp, esp
  007d3	83 ec 44	 sub	 esp, 68			; 00000044H
  007d6	53		 push	 ebx
  007d7	56		 push	 esi
  007d8	57		 push	 edi
  007d9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 	if(!this->Enable) return false;

  007dc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  007df	83 38 00	 cmp	 DWORD PTR [eax], 0
  007e2	75 06		 jne	 SHORT $LN2@isEnable
  007e4	32 c0		 xor	 al, al
  007e6	eb 04		 jmp	 SHORT $LN3@isEnable
  007e8	eb 02		 jmp	 SHORT $LN3@isEnable
$LN2@isEnable:

; 218  : 	else return true;

  007ea	b0 01		 mov	 al, 1
$LN3@isEnable:

; 219  : }

  007ec	5f		 pop	 edi
  007ed	5e		 pop	 esi
  007ee	5b		 pop	 ebx
  007ef	8b e5		 mov	 esp, ebp
  007f1	5d		 pop	 ebp
  007f2	c2 04 00	 ret	 4
?isEnable@PartyBonus@@QAE_NH@Z ENDP			; PartyBonus::isEnable
_TEXT	ENDS
END
