; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\WinQuestSystem.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??0cWinQuestSystem@@QAE@XZ			; cWinQuestSystem::cWinQuestSystem
EXTRN	_memset:PROC
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\winquestsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0cWinQuestSystem@@QAE@XZ PROC				; cWinQuestSystem::cWinQuestSystem
; _this$ = ecx

; 26   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 27   : 	this->Enable = true;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c6 80 a8 f0 89
	00 01		 mov	 BYTE PTR [eax+9040040], 1

; 28   : 	ZeroMemory(this->Data, sizeof(this->Data));

  00016	68 40 d3 5f 00	 push	 6280000			; 005fd340H
  0001b	6a 00		 push	 0
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 _memset
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH

; 29   : 	ZeroMemory(this->Count, sizeof(this->Count));

  00029	6a 28		 push	 40			; 00000028H
  0002b	6a 00		 push	 0
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	05 80 f0 89 00	 add	 eax, 9040000		; 0089f080H
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 _memset
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 30   : }

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5b		 pop	 ebx
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
??0cWinQuestSystem@@QAE@XZ ENDP				; cWinQuestSystem::cWinQuestSystem
_TEXT	ENDS
PUBLIC	??_C@_0DD@GDPJIMBD@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@ ; `string'
PUBLIC	??_C@_0DC@LEMAFIKJ@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@ ; `string'
PUBLIC	??_C@_0DC@HPJMILAM@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@ ; `string'
PUBLIC	??_C@_0DC@IOMKDJNJ@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@ ; `string'
PUBLIC	??_C@_0DC@EFJGOKHM@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@ ; `string'
PUBLIC	??_C@_0DC@MDACJINC@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@ ; `string'
PUBLIC	??_C@_0DC@IFOELHH@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@ ; `string'
PUBLIC	??_C@_0DC@BFFLHLMP@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@ ; `string'
PUBLIC	??_C@_0DC@NOAHKIGK@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@ ; `string'
PUBLIC	?Load@cWinQuestSystem@@QAEXHPAD@Z		; cWinQuestSystem::Load
PUBLIC	??_C@_0DC@FIJDNKME@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@ ; `string'
PUBLIC	??_C@_03BCJIDNJL@NPC?$AA@			; `string'
PUBLIC	??_C@_06MLPMCPDE@ExTeam?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
PUBLIC	??_C@_0DH@GDKBBHAJ@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@ ; `string'
PUBLIC	?Init@cWinQuestSystem@@QAEXXZ			; cWinQuestSystem::Init
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
EXTRN	?g_ExLicense@@3VCExLicense@@A:BYTE		; g_ExLicense
;	COMDAT ??_C@_0DD@GDPJIMBD@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@
CONST	SEGMENT
??_C@_0DD@GDPJIMBD@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@ DB '..\Data\Ex'
	DB	'Data\WinQuestSystem\WinQuestSystem10.ini', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@LEMAFIKJ@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@
CONST	SEGMENT
??_C@_0DC@LEMAFIKJ@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@ DB '..\Data\Ex'
	DB	'Data\WinQuestSystem\WinQuestSystem9.ini', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@HPJMILAM@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@
CONST	SEGMENT
??_C@_0DC@HPJMILAM@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@ DB '..\Data\Ex'
	DB	'Data\WinQuestSystem\WinQuestSystem8.ini', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@IOMKDJNJ@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@
CONST	SEGMENT
??_C@_0DC@IOMKDJNJ@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@ DB '..\Data\Ex'
	DB	'Data\WinQuestSystem\WinQuestSystem7.ini', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@EFJGOKHM@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@
CONST	SEGMENT
??_C@_0DC@EFJGOKHM@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@ DB '..\Data\Ex'
	DB	'Data\WinQuestSystem\WinQuestSystem6.ini', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@MDACJINC@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@
CONST	SEGMENT
??_C@_0DC@MDACJINC@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@ DB '..\Data\Ex'
	DB	'Data\WinQuestSystem\WinQuestSystem5.ini', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@IFOELHH@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@
CONST	SEGMENT
??_C@_0DC@IFOELHH@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@ DB '..\Data\ExD'
	DB	'ata\WinQuestSystem\WinQuestSystem4.ini', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@BFFLHLMP@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@
CONST	SEGMENT
??_C@_0DC@BFFLHLMP@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@ DB '..\Data\Ex'
	DB	'Data\WinQuestSystem\WinQuestSystem3.ini', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@NOAHKIGK@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@
CONST	SEGMENT
??_C@_0DC@NOAHKIGK@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@ DB '..\Data\Ex'
	DB	'Data\WinQuestSystem\WinQuestSystem2.ini', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@FIJDNKME@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@
CONST	SEGMENT
??_C@_0DC@FIJDNKME@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@ DB '..\Data\Ex'
	DB	'Data\WinQuestSystem\WinQuestSystem1.ini', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03BCJIDNJL@NPC?$AA@
CONST	SEGMENT
??_C@_03BCJIDNJL@NPC?$AA@ DB 'NPC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06MLPMCPDE@ExTeam?$AA@
CONST	SEGMENT
??_C@_06MLPMCPDE@ExTeam?$AA@ DB 'ExTeam', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@GDKBBHAJ@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@
CONST	SEGMENT
??_C@_0DH@GDKBBHAJ@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@ DB '..\Data\Ex'
	DB	'Data\WinQuestSystem\WinQuestSystemConfig.ini', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@cWinQuestSystem@@QAEXXZ PROC			; cWinQuestSystem::Init
; _this$ = ecx

; 35   : {

  00050	55		 push	 ebp
  00051	8b ec		 mov	 ebp, esp
  00053	83 ec 44	 sub	 esp, 68			; 00000044H
  00056	53		 push	 ebx
  00057	56		 push	 esi
  00058	57		 push	 edi
  00059	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 36   : 	if(!g_ExLicense.user.WinQuest)

  0005c	0f b6 05 ca 00
	00 00		 movzx	 eax, BYTE PTR ?g_ExLicense@@3VCExLicense@@A+202
  00063	85 c0		 test	 eax, eax
  00065	75 05		 jne	 SHORT $LN1@Init

; 37   : 	{
; 38   : 		return;

  00067	e9 db 00 00 00	 jmp	 $LN2@Init
$LN1@Init:

; 39   : 	}
; 40   : 
; 41   : 	this->Enable = GetPrivateProfileInt("ExTeam","Enable",0,WIN_QUEST_SYSTEM_CFG);

  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@GDKBBHAJ@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@
  00071	6a 00		 push	 0
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00083	85 c0		 test	 eax, eax
  00085	0f 95 c0	 setne	 al
  00088	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	88 81 a8 f0 89
	00		 mov	 BYTE PTR [ecx+9040040], al

; 42   : 	this->NPC = GetPrivateProfileInt("ExTeam","NPC",0,WIN_QUEST_SYSTEM_CFG);

  00091	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@GDKBBHAJ@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@
  00096	6a 00		 push	 0
  00098	68 00 00 00 00	 push	 OFFSET ??_C@_03BCJIDNJL@NPC?$AA@
  0009d	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  000a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	89 81 ac f0 89
	00		 mov	 DWORD PTR [ecx+9040044], eax

; 43   : 
; 44   : 	this->Load(0, WIN_QUEST_SYSTEM_DIR1);

  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@FIJDNKME@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@
  000b6	6a 00		 push	 0
  000b8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	e8 00 00 00 00	 call	 ?Load@cWinQuestSystem@@QAEXHPAD@Z ; cWinQuestSystem::Load

; 45   : 	this->Load(1, WIN_QUEST_SYSTEM_DIR2);

  000c0	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@NOAHKIGK@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@
  000c5	6a 01		 push	 1
  000c7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ca	e8 00 00 00 00	 call	 ?Load@cWinQuestSystem@@QAEXHPAD@Z ; cWinQuestSystem::Load

; 46   : 	this->Load(2, WIN_QUEST_SYSTEM_DIR3);

  000cf	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@BFFLHLMP@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@
  000d4	6a 02		 push	 2
  000d6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d9	e8 00 00 00 00	 call	 ?Load@cWinQuestSystem@@QAEXHPAD@Z ; cWinQuestSystem::Load

; 47   : 	this->Load(3, WIN_QUEST_SYSTEM_DIR4);

  000de	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@IFOELHH@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@
  000e3	6a 03		 push	 3
  000e5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	e8 00 00 00 00	 call	 ?Load@cWinQuestSystem@@QAEXHPAD@Z ; cWinQuestSystem::Load

; 48   : 	this->Load(4, WIN_QUEST_SYSTEM_DIR5);

  000ed	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@MDACJINC@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@
  000f2	6a 04		 push	 4
  000f4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f7	e8 00 00 00 00	 call	 ?Load@cWinQuestSystem@@QAEXHPAD@Z ; cWinQuestSystem::Load

; 49   : 	this->Load(5, WIN_QUEST_SYSTEM_DIR6);

  000fc	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@EFJGOKHM@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@
  00101	6a 05		 push	 5
  00103	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00106	e8 00 00 00 00	 call	 ?Load@cWinQuestSystem@@QAEXHPAD@Z ; cWinQuestSystem::Load

; 50   : 	this->Load(6, WIN_QUEST_SYSTEM_DIR7);

  0010b	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@IOMKDJNJ@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@
  00110	6a 06		 push	 6
  00112	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00115	e8 00 00 00 00	 call	 ?Load@cWinQuestSystem@@QAEXHPAD@Z ; cWinQuestSystem::Load

; 51   : 	this->Load(7, WIN_QUEST_SYSTEM_DIR8);

  0011a	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@HPJMILAM@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@
  0011f	6a 07		 push	 7
  00121	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00124	e8 00 00 00 00	 call	 ?Load@cWinQuestSystem@@QAEXHPAD@Z ; cWinQuestSystem::Load

; 52   : 	this->Load(8, WIN_QUEST_SYSTEM_DIR9);

  00129	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@LEMAFIKJ@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@
  0012e	6a 08		 push	 8
  00130	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00133	e8 00 00 00 00	 call	 ?Load@cWinQuestSystem@@QAEXHPAD@Z ; cWinQuestSystem::Load

; 53   : 	this->Load(9, WIN_QUEST_SYSTEM_DIR10);

  00138	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@GDPJIMBD@?4?4?2Data?2ExData?2WinQuestSystem?2Wi@
  0013d	6a 09		 push	 9
  0013f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00142	e8 00 00 00 00	 call	 ?Load@cWinQuestSystem@@QAEXHPAD@Z ; cWinQuestSystem::Load
$LN2@Init:

; 54   : }

  00147	5f		 pop	 edi
  00148	5e		 pop	 esi
  00149	5b		 pop	 ebx
  0014a	8b e5		 mov	 esp, ebp
  0014c	5d		 pop	 ebp
  0014d	c3		 ret	 0
?Init@cWinQuestSystem@@QAEXXZ ENDP			; cWinQuestSystem::Init
_TEXT	ENDS
PUBLIC	??_C@_03JBJLGPFL@end?$AA@			; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
EXTRN	_fclose:PROC
EXTRN	_strncpy:PROC
EXTRN	_strcmp:PROC
EXTRN	?MsgBox@@YAXPADZZ:PROC				; MsgBox
EXTRN	_fopen:PROC
EXTRN	__ftol2_sse:PROC
_BSS	SEGMENT
_TokenNumber DD	01H DUP (?)
_TokenString DB	064H DUP (?)
_SMDFile DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_03JBJLGPFL@end?$AA@
CONST	SEGMENT
??_C@_03JBJLGPFL@end?$AA@ DB 'end', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_k$228775 = -20						; size = 4
_k$228771 = -16						; size = 4
_k$228767 = -12						; size = 4
_Token$ = -8						; size = 4
_this$ = -4						; size = 4
_iQuest$ = 8						; size = 4
_Dir$ = 12						; size = 4
?Load@cWinQuestSystem@@QAEXHPAD@Z PROC			; cWinQuestSystem::Load
; _this$ = ecx

; 59   : {

  00150	55		 push	 ebp
  00151	8b ec		 mov	 ebp, esp
  00153	83 ec 54	 sub	 esp, 84			; 00000054H
  00156	53		 push	 ebx
  00157	56		 push	 esi
  00158	57		 push	 edi
  00159	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 60   : 	SMDFile = fopen(Dir, "r");

  0015c	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  00161	8b 45 0c	 mov	 eax, DWORD PTR _Dir$[ebp]
  00164	50		 push	 eax
  00165	e8 00 00 00 00	 call	 _fopen
  0016a	83 c4 08	 add	 esp, 8
  0016d	a3 00 00 00 00	 mov	 DWORD PTR _SMDFile, eax

; 61   : 
; 62   : 	if ( SMDFile == NULL )

  00172	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _SMDFile, 0
  00179	75 1b		 jne	 SHORT $LN14@Load

; 63   : 	{
; 64   : 		MsgBox(Dir);

  0017b	8b 45 0c	 mov	 eax, DWORD PTR _Dir$[ebp]
  0017e	50		 push	 eax
  0017f	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00184	83 c4 04	 add	 esp, 4

; 65   : 		this->Enable = 0;

  00187	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018a	c6 80 a8 f0 89
	00 00		 mov	 BYTE PTR [eax+9040040], 0

; 66   : 		return;

  00191	e9 83 05 00 00	 jmp	 $LN15@Load
$LN14@Load:

; 67   : 	}
; 68   : 
; 69   : 	int Token;
; 70   : 
; 71   : 	while ( true )

  00196	b8 01 00 00 00	 mov	 eax, 1
  0019b	85 c0		 test	 eax, eax
  0019d	0f 84 68 05 00
	00		 je	 $LN12@Load

; 72   : 	{
; 73   : 	    Token = GetToken();

  001a3	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  001a8	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 74   : 
; 75   :         if( Token == END)

  001ab	83 7d f8 02	 cmp	 DWORD PTR _Token$[ebp], 2
  001af	75 05		 jne	 SHORT $LN11@Load

; 76   : 		{
; 77   :             break;

  001b1	e9 55 05 00 00	 jmp	 $LN12@Load
$LN11@Load:

; 78   : 		}
; 79   : 
; 80   : 		if ( strcmp("end", TokenString ) == 0)

  001b6	68 00 00 00 00	 push	 OFFSET _TokenString
  001bb	68 00 00 00 00	 push	 OFFSET ??_C@_03JBJLGPFL@end?$AA@
  001c0	e8 00 00 00 00	 call	 _strcmp
  001c5	83 c4 08	 add	 esp, 8
  001c8	85 c0		 test	 eax, eax
  001ca	75 05		 jne	 SHORT $LN10@Load

; 81   : 		{
; 82   : 			break;

  001cc	e9 3a 05 00 00	 jmp	 $LN12@Load
$LN10@Load:

; 83   : 		}
; 84   : 
; 85   : 		strncpy(this->Data[iQuest][this->Count[iQuest]].Name,TokenString,50);

  001d1	6a 32		 push	 50			; 00000032H
  001d3	68 00 00 00 00	 push	 OFFSET _TokenString
  001d8	8b 45 08	 mov	 eax, DWORD PTR _iQuest$[ebp]
  001db	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  001e1	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  001e4	8b 4d 08	 mov	 ecx, DWORD PTR _iQuest$[ebp]
  001e7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001ea	8b 8c 8a 80 f0
	89 00		 mov	 ecx, DWORD PTR [edx+ecx*4+9040000]
  001f1	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  001f7	8d 54 08 08	 lea	 edx, DWORD PTR [eax+ecx+8]
  001fb	52		 push	 edx
  001fc	e8 00 00 00 00	 call	 _strncpy
  00201	83 c4 0c	 add	 esp, 12			; 0000000cH

; 86   : 
; 87   : 		for (int k=0;k<5;k++)

  00204	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _k$228767[ebp], 0
  0020b	eb 09		 jmp	 SHORT $LN9@Load
$LN8@Load:
  0020d	8b 45 f4	 mov	 eax, DWORD PTR _k$228767[ebp]
  00210	83 c0 01	 add	 eax, 1
  00213	89 45 f4	 mov	 DWORD PTR _k$228767[ebp], eax
$LN9@Load:
  00216	83 7d f4 05	 cmp	 DWORD PTR _k$228767[ebp], 5
  0021a	0f 8d 6d 01 00
	00		 jge	 $LN7@Load

; 88   : 		{
; 89   : 			Token=GetToken();

  00220	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00225	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 90   : 			this->Data[iQuest][this->Count[iQuest]].MissionType[k] = TokenNumber;

  00228	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0022e	e8 00 00 00 00	 call	 __ftol2_sse
  00233	8b 4d 08	 mov	 ecx, DWORD PTR _iQuest$[ebp]
  00236	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  0023c	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  0023f	8b 55 08	 mov	 edx, DWORD PTR _iQuest$[ebp]
  00242	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  00245	8b 94 96 80 f0
	89 00		 mov	 edx, DWORD PTR [esi+edx*4+9040000]
  0024c	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  00252	03 ca		 add	 ecx, edx
  00254	8b 55 f4	 mov	 edx, DWORD PTR _k$228767[ebp]
  00257	89 44 91 3c	 mov	 DWORD PTR [ecx+edx*4+60], eax

; 91   : 
; 92   : 			Token=GetToken();

  0025b	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00260	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 93   : 			this->Data[iQuest][this->Count[iQuest]].MissionMain[k] = TokenNumber;

  00263	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00269	e8 00 00 00 00	 call	 __ftol2_sse
  0026e	8b 4d 08	 mov	 ecx, DWORD PTR _iQuest$[ebp]
  00271	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  00277	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  0027a	8b 55 08	 mov	 edx, DWORD PTR _iQuest$[ebp]
  0027d	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  00280	8b 94 96 80 f0
	89 00		 mov	 edx, DWORD PTR [esi+edx*4+9040000]
  00287	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  0028d	03 ca		 add	 ecx, edx
  0028f	8b 55 f4	 mov	 edx, DWORD PTR _k$228767[ebp]
  00292	89 44 91 50	 mov	 DWORD PTR [ecx+edx*4+80], eax

; 94   : 
; 95   : 			Token=GetToken();

  00296	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  0029b	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 96   : 			this->Data[iQuest][this->Count[iQuest]].MissionLvL[k] = TokenNumber;

  0029e	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  002a4	e8 00 00 00 00	 call	 __ftol2_sse
  002a9	8b 4d 08	 mov	 ecx, DWORD PTR _iQuest$[ebp]
  002ac	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  002b2	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  002b5	8b 55 08	 mov	 edx, DWORD PTR _iQuest$[ebp]
  002b8	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  002bb	8b 94 96 80 f0
	89 00		 mov	 edx, DWORD PTR [esi+edx*4+9040000]
  002c2	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  002c8	03 ca		 add	 ecx, edx
  002ca	8b 55 f4	 mov	 edx, DWORD PTR _k$228767[ebp]
  002cd	89 44 91 64	 mov	 DWORD PTR [ecx+edx*4+100], eax

; 97   : 
; 98   : 			Token=GetToken();

  002d1	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  002d6	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 99   : 			this->Data[iQuest][this->Count[iQuest]].MissionLuck[k] = TokenNumber;

  002d9	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  002df	e8 00 00 00 00	 call	 __ftol2_sse
  002e4	8b 4d 08	 mov	 ecx, DWORD PTR _iQuest$[ebp]
  002e7	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  002ed	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  002f0	8b 55 08	 mov	 edx, DWORD PTR _iQuest$[ebp]
  002f3	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  002f6	8b 94 96 80 f0
	89 00		 mov	 edx, DWORD PTR [esi+edx*4+9040000]
  002fd	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  00303	03 ca		 add	 ecx, edx
  00305	8b 55 f4	 mov	 edx, DWORD PTR _k$228767[ebp]
  00308	89 44 91 78	 mov	 DWORD PTR [ecx+edx*4+120], eax

; 100  : 
; 101  : 			Token=GetToken();

  0030c	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00311	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 102  : 			this->Data[iQuest][this->Count[iQuest]].MissionExl[k] = TokenNumber;

  00314	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0031a	e8 00 00 00 00	 call	 __ftol2_sse
  0031f	8b 4d 08	 mov	 ecx, DWORD PTR _iQuest$[ebp]
  00322	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  00328	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  0032b	8b 55 08	 mov	 edx, DWORD PTR _iQuest$[ebp]
  0032e	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  00331	8b 94 96 80 f0
	89 00		 mov	 edx, DWORD PTR [esi+edx*4+9040000]
  00338	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  0033e	03 ca		 add	 ecx, edx
  00340	8b 55 f4	 mov	 edx, DWORD PTR _k$228767[ebp]
  00343	89 84 91 8c 00
	00 00		 mov	 DWORD PTR [ecx+edx*4+140], eax

; 103  : 
; 104  : 			Token=GetToken();

  0034a	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  0034f	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 105  : 			this->Data[iQuest][this->Count[iQuest]].MissionAnc[k] = TokenNumber;

  00352	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00358	e8 00 00 00 00	 call	 __ftol2_sse
  0035d	8b 4d 08	 mov	 ecx, DWORD PTR _iQuest$[ebp]
  00360	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  00366	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  00369	8b 55 08	 mov	 edx, DWORD PTR _iQuest$[ebp]
  0036c	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  0036f	8b 94 96 80 f0
	89 00		 mov	 edx, DWORD PTR [esi+edx*4+9040000]
  00376	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  0037c	03 ca		 add	 ecx, edx
  0037e	8b 55 f4	 mov	 edx, DWORD PTR _k$228767[ebp]
  00381	89 84 91 a0 00
	00 00		 mov	 DWORD PTR [ecx+edx*4+160], eax

; 106  : 		}

  00388	e9 80 fe ff ff	 jmp	 $LN8@Load
$LN7@Load:

; 107  : 
; 108  : 		for (int k=0;k<5;k++)

  0038d	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _k$228771[ebp], 0
  00394	eb 09		 jmp	 SHORT $LN6@Load
$LN5@Load:
  00396	8b 45 f0	 mov	 eax, DWORD PTR _k$228771[ebp]
  00399	83 c0 01	 add	 eax, 1
  0039c	89 45 f0	 mov	 DWORD PTR _k$228771[ebp], eax
$LN6@Load:
  0039f	83 7d f0 05	 cmp	 DWORD PTR _k$228771[ebp], 5
  003a3	0f 8d 79 01 00
	00		 jge	 $LN4@Load

; 109  : 		{
; 110  : 			Token=GetToken();

  003a9	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  003ae	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 111  : 			this->Data[iQuest][this->Count[iQuest]].RewardType[k] = TokenNumber;

  003b1	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  003b7	e8 00 00 00 00	 call	 __ftol2_sse
  003bc	8b 4d 08	 mov	 ecx, DWORD PTR _iQuest$[ebp]
  003bf	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  003c5	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  003c8	8b 55 08	 mov	 edx, DWORD PTR _iQuest$[ebp]
  003cb	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  003ce	8b 94 96 80 f0
	89 00		 mov	 edx, DWORD PTR [esi+edx*4+9040000]
  003d5	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  003db	03 ca		 add	 ecx, edx
  003dd	8b 55 f0	 mov	 edx, DWORD PTR _k$228771[ebp]
  003e0	89 84 91 b4 00
	00 00		 mov	 DWORD PTR [ecx+edx*4+180], eax

; 112  : 
; 113  : 			Token=GetToken();

  003e7	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  003ec	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 114  : 			this->Data[iQuest][this->Count[iQuest]].RewardMain[k] = TokenNumber;

  003ef	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  003f5	e8 00 00 00 00	 call	 __ftol2_sse
  003fa	8b 4d 08	 mov	 ecx, DWORD PTR _iQuest$[ebp]
  003fd	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  00403	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  00406	8b 55 08	 mov	 edx, DWORD PTR _iQuest$[ebp]
  00409	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  0040c	8b 94 96 80 f0
	89 00		 mov	 edx, DWORD PTR [esi+edx*4+9040000]
  00413	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  00419	03 ca		 add	 ecx, edx
  0041b	8b 55 f0	 mov	 edx, DWORD PTR _k$228771[ebp]
  0041e	89 84 91 c8 00
	00 00		 mov	 DWORD PTR [ecx+edx*4+200], eax

; 115  : 
; 116  : 			Token=GetToken();

  00425	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  0042a	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 117  : 			this->Data[iQuest][this->Count[iQuest]].RewardLvL[k] = TokenNumber;

  0042d	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00433	e8 00 00 00 00	 call	 __ftol2_sse
  00438	8b 4d 08	 mov	 ecx, DWORD PTR _iQuest$[ebp]
  0043b	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  00441	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  00444	8b 55 08	 mov	 edx, DWORD PTR _iQuest$[ebp]
  00447	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  0044a	8b 94 96 80 f0
	89 00		 mov	 edx, DWORD PTR [esi+edx*4+9040000]
  00451	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  00457	03 ca		 add	 ecx, edx
  00459	8b 55 f0	 mov	 edx, DWORD PTR _k$228771[ebp]
  0045c	89 84 91 dc 00
	00 00		 mov	 DWORD PTR [ecx+edx*4+220], eax

; 118  : 
; 119  : 			Token=GetToken();

  00463	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00468	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 120  : 			this->Data[iQuest][this->Count[iQuest]].RewardLuck[k] = TokenNumber;

  0046b	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00471	e8 00 00 00 00	 call	 __ftol2_sse
  00476	8b 4d 08	 mov	 ecx, DWORD PTR _iQuest$[ebp]
  00479	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  0047f	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  00482	8b 55 08	 mov	 edx, DWORD PTR _iQuest$[ebp]
  00485	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  00488	8b 94 96 80 f0
	89 00		 mov	 edx, DWORD PTR [esi+edx*4+9040000]
  0048f	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  00495	03 ca		 add	 ecx, edx
  00497	8b 55 f0	 mov	 edx, DWORD PTR _k$228771[ebp]
  0049a	89 84 91 f0 00
	00 00		 mov	 DWORD PTR [ecx+edx*4+240], eax

; 121  : 
; 122  : 			Token=GetToken();

  004a1	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  004a6	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 123  : 			this->Data[iQuest][this->Count[iQuest]].RewardExl[k] = TokenNumber;

  004a9	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  004af	e8 00 00 00 00	 call	 __ftol2_sse
  004b4	8b 4d 08	 mov	 ecx, DWORD PTR _iQuest$[ebp]
  004b7	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  004bd	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  004c0	8b 55 08	 mov	 edx, DWORD PTR _iQuest$[ebp]
  004c3	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  004c6	8b 94 96 80 f0
	89 00		 mov	 edx, DWORD PTR [esi+edx*4+9040000]
  004cd	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  004d3	03 ca		 add	 ecx, edx
  004d5	8b 55 f0	 mov	 edx, DWORD PTR _k$228771[ebp]
  004d8	89 84 91 04 01
	00 00		 mov	 DWORD PTR [ecx+edx*4+260], eax

; 124  : 
; 125  : 			Token=GetToken();

  004df	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  004e4	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 126  : 			this->Data[iQuest][this->Count[iQuest]].RewardAnc[k] = TokenNumber;

  004e7	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  004ed	e8 00 00 00 00	 call	 __ftol2_sse
  004f2	8b 4d 08	 mov	 ecx, DWORD PTR _iQuest$[ebp]
  004f5	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  004fb	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  004fe	8b 55 08	 mov	 edx, DWORD PTR _iQuest$[ebp]
  00501	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  00504	8b 94 96 80 f0
	89 00		 mov	 edx, DWORD PTR [esi+edx*4+9040000]
  0050b	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  00511	03 ca		 add	 ecx, edx
  00513	8b 55 f0	 mov	 edx, DWORD PTR _k$228771[ebp]
  00516	89 84 91 18 01
	00 00		 mov	 DWORD PTR [ecx+edx*4+280], eax

; 127  : 		}

  0051d	e9 74 fe ff ff	 jmp	 $LN5@Load
$LN4@Load:

; 128  : 
; 129  : 		for (int k=0;k<5;k++)

  00522	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _k$228775[ebp], 0
  00529	eb 09		 jmp	 SHORT $LN3@Load
$LN2@Load:
  0052b	8b 45 ec	 mov	 eax, DWORD PTR _k$228775[ebp]
  0052e	83 c0 01	 add	 eax, 1
  00531	89 45 ec	 mov	 DWORD PTR _k$228775[ebp], eax
$LN3@Load:
  00534	83 7d ec 05	 cmp	 DWORD PTR _k$228775[ebp], 5
  00538	0f 8d bf 00 00
	00		 jge	 $LN1@Load

; 130  : 		{
; 131  : 			Token=GetToken();

  0053e	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00543	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 132  : 			this->Data[iQuest][this->Count[iQuest]].PriceType[k] = TokenNumber;

  00546	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0054c	e8 00 00 00 00	 call	 __ftol2_sse
  00551	8b 4d 08	 mov	 ecx, DWORD PTR _iQuest$[ebp]
  00554	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  0055a	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  0055d	8b 55 08	 mov	 edx, DWORD PTR _iQuest$[ebp]
  00560	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  00563	8b 94 96 80 f0
	89 00		 mov	 edx, DWORD PTR [esi+edx*4+9040000]
  0056a	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  00570	03 ca		 add	 ecx, edx
  00572	8b 55 ec	 mov	 edx, DWORD PTR _k$228775[ebp]
  00575	89 84 91 2c 01
	00 00		 mov	 DWORD PTR [ecx+edx*4+300], eax

; 133  : 
; 134  : 			Token=GetToken();

  0057c	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00581	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 135  : 			this->Data[iQuest][this->Count[iQuest]].PriceMain[k] = TokenNumber;

  00584	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0058a	e8 00 00 00 00	 call	 __ftol2_sse
  0058f	8b 4d 08	 mov	 ecx, DWORD PTR _iQuest$[ebp]
  00592	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  00598	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  0059b	8b 55 08	 mov	 edx, DWORD PTR _iQuest$[ebp]
  0059e	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  005a1	8b 94 96 80 f0
	89 00		 mov	 edx, DWORD PTR [esi+edx*4+9040000]
  005a8	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  005ae	03 ca		 add	 ecx, edx
  005b0	8b 55 ec	 mov	 edx, DWORD PTR _k$228775[ebp]
  005b3	89 84 91 40 01
	00 00		 mov	 DWORD PTR [ecx+edx*4+320], eax

; 136  : 
; 137  : 			Token=GetToken();

  005ba	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  005bf	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 138  : 			this->Data[iQuest][this->Count[iQuest]].PriceLvL[k] = TokenNumber;

  005c2	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  005c8	e8 00 00 00 00	 call	 __ftol2_sse
  005cd	8b 4d 08	 mov	 ecx, DWORD PTR _iQuest$[ebp]
  005d0	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  005d6	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  005d9	8b 55 08	 mov	 edx, DWORD PTR _iQuest$[ebp]
  005dc	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  005df	8b 94 96 80 f0
	89 00		 mov	 edx, DWORD PTR [esi+edx*4+9040000]
  005e6	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  005ec	03 ca		 add	 ecx, edx
  005ee	8b 55 ec	 mov	 edx, DWORD PTR _k$228775[ebp]
  005f1	89 84 91 54 01
	00 00		 mov	 DWORD PTR [ecx+edx*4+340], eax

; 139  : 		}

  005f8	e9 2e ff ff ff	 jmp	 $LN2@Load
$LN1@Load:

; 140  : 
; 141  : 		Token=GetToken();

  005fd	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00602	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 142  : 		this->Data[iQuest][this->Count[iQuest]].NeedLevel = TokenNumber;

  00605	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0060b	e8 00 00 00 00	 call	 __ftol2_sse
  00610	8b 4d 08	 mov	 ecx, DWORD PTR _iQuest$[ebp]
  00613	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  00619	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  0061c	8b 55 08	 mov	 edx, DWORD PTR _iQuest$[ebp]
  0061f	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  00622	8b 94 96 80 f0
	89 00		 mov	 edx, DWORD PTR [esi+edx*4+9040000]
  00629	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  0062f	89 84 11 68 01
	00 00		 mov	 DWORD PTR [ecx+edx+360], eax

; 143  : 
; 144  : 		Token=GetToken();

  00636	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  0063b	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 145  : 		this->Data[iQuest][this->Count[iQuest]].NeedReset = TokenNumber;

  0063e	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00644	e8 00 00 00 00	 call	 __ftol2_sse
  00649	8b 4d 08	 mov	 ecx, DWORD PTR _iQuest$[ebp]
  0064c	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  00652	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  00655	8b 55 08	 mov	 edx, DWORD PTR _iQuest$[ebp]
  00658	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  0065b	8b 94 96 80 f0
	89 00		 mov	 edx, DWORD PTR [esi+edx*4+9040000]
  00662	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  00668	89 84 11 6c 01
	00 00		 mov	 DWORD PTR [ecx+edx+364], eax

; 146  : 
; 147  : 		Token=GetToken();

  0066f	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00674	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 148  : 		this->Data[iQuest][this->Count[iQuest]].NeedGrand = TokenNumber;

  00677	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0067d	e8 00 00 00 00	 call	 __ftol2_sse
  00682	8b 4d 08	 mov	 ecx, DWORD PTR _iQuest$[ebp]
  00685	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  0068b	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  0068e	8b 55 08	 mov	 edx, DWORD PTR _iQuest$[ebp]
  00691	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  00694	8b 94 96 80 f0
	89 00		 mov	 edx, DWORD PTR [esi+edx*4+9040000]
  0069b	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  006a1	89 84 11 70 01
	00 00		 mov	 DWORD PTR [ecx+edx+368], eax

; 149  : 
; 150  : 		Token = GetToken();

  006a8	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  006ad	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 151  : 		strncpy(this->Data[iQuest][this->Count[iQuest]].Info,TokenString,256);

  006b0	68 00 01 00 00	 push	 256			; 00000100H
  006b5	68 00 00 00 00	 push	 OFFSET _TokenString
  006ba	8b 45 08	 mov	 eax, DWORD PTR _iQuest$[ebp]
  006bd	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  006c3	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  006c6	8b 4d 08	 mov	 ecx, DWORD PTR _iQuest$[ebp]
  006c9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  006cc	8b 8c 8a 80 f0
	89 00		 mov	 ecx, DWORD PTR [edx+ecx*4+9040000]
  006d3	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  006d9	8d 94 08 74 01
	00 00		 lea	 edx, DWORD PTR [eax+ecx+372]
  006e0	52		 push	 edx
  006e1	e8 00 00 00 00	 call	 _strncpy
  006e6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 152  : 
; 153  : 		this->Count[iQuest]++;

  006e9	8b 45 08	 mov	 eax, DWORD PTR _iQuest$[ebp]
  006ec	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006ef	8b 94 81 80 f0
	89 00		 mov	 edx, DWORD PTR [ecx+eax*4+9040000]
  006f6	83 c2 01	 add	 edx, 1
  006f9	8b 45 08	 mov	 eax, DWORD PTR _iQuest$[ebp]
  006fc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006ff	89 94 81 80 f0
	89 00		 mov	 DWORD PTR [ecx+eax*4+9040000], edx

; 154  : 
; 155  : 	}

  00706	e9 8b fa ff ff	 jmp	 $LN14@Load
$LN12@Load:

; 156  :     
; 157  : 	fclose(SMDFile);

  0070b	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00710	50		 push	 eax
  00711	e8 00 00 00 00	 call	 _fclose
  00716	83 c4 04	 add	 esp, 4
$LN15@Load:

; 158  : }

  00719	5f		 pop	 edi
  0071a	5e		 pop	 esi
  0071b	5b		 pop	 ebx
  0071c	8b e5		 mov	 esp, ebp
  0071e	5d		 pop	 ebp
  0071f	c2 08 00	 ret	 8
?Load@cWinQuestSystem@@QAEXHPAD@Z ENDP			; cWinQuestSystem::Load
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_isalnum:PROC
EXTRN	_isalpha:PROC
EXTRN	_atof:PROC
EXTRN	_isdigit:PROC
EXTRN	_getc:PROC
EXTRN	_ungetc:PROC
EXTRN	_isspace:PROC
EXTRN	_fgetc:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	@__security_check_cookie@4:PROC
_BSS	SEGMENT
_CurrentToken DD 01H DUP (?)
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\include\readscript.h
_BSS	ENDS
_TEXT	SEGMENT
tv90 = -180						; size = 4
_TempString$ = -112					; size = 100
_p$ = -12						; size = 4
_ch$ = -5						; size = 1
__$ArrayPad$ = -4					; size = 4
?GetToken@@YA?AW4SMDToken@@XZ PROC			; GetToken

; 24   : {

  00730	55		 push	 ebp
  00731	8b ec		 mov	 ebp, esp
  00733	81 ec b4 00 00
	00		 sub	 esp, 180		; 000000b4H
  00739	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0073e	33 c5		 xor	 eax, ebp
  00740	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00743	53		 push	 ebx
  00744	56		 push	 esi
  00745	57		 push	 edi

; 25   : 	char ch;
; 26   : 	char* p;
; 27   : 	char TempString[100];
; 28   : 
; 29   : 	TokenString[0]=0;

  00746	c6 05 00 00 00
	00 00		 mov	 BYTE PTR _TokenString, 0
$LN31@GetToken:

; 30   : 
; 31   : 	do
; 32   : 	{
; 33   : 		if ((ch=fgetc(SMDFile)) == -1)

  0074d	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00752	50		 push	 eax
  00753	e8 00 00 00 00	 call	 _fgetc
  00758	83 c4 04	 add	 esp, 4
  0075b	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  0075e	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00762	83 f9 ff	 cmp	 ecx, -1
  00765	75 0c		 jne	 SHORT $LN28@GetToken

; 34   : 		{
; 35   : 			return END;	// End of FILE (EOF)

  00767	b8 02 00 00 00	 mov	 eax, 2
  0076c	e9 f7 02 00 00	 jmp	 $LN32@GetToken

; 36   : 		}
; 37   : 		else

  00771	eb 5b		 jmp	 SHORT $LN22@GetToken
$LN28@GetToken:

; 38   : 		{	
; 39   : 			if (ch=='/')		// this is /

  00773	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00777	83 f8 2f	 cmp	 eax, 47			; 0000002fH
  0077a	75 52		 jne	 SHORT $LN22@GetToken

; 40   : 			{
; 41   : 				if((ch=fgetc(SMDFile)) == '/')

  0077c	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00781	50		 push	 eax
  00782	e8 00 00 00 00	 call	 _fgetc
  00787	83 c4 04	 add	 esp, 4
  0078a	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  0078d	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00791	83 f9 2f	 cmp	 ecx, 47			; 0000002fH
  00794	75 38		 jne	 SHORT $LN22@GetToken
$LN24@GetToken:

; 42   : 				{
; 43   : 					while ((ch != '\n') && (ch != -1))	// End of Line (EOL)

  00796	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  0079a	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0079d	74 1c		 je	 SHORT $LN23@GetToken
  0079f	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  007a3	83 f8 ff	 cmp	 eax, -1
  007a6	74 13		 je	 SHORT $LN23@GetToken

; 44   : 					{
; 45   : 						ch=fgetc(SMDFile);

  007a8	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  007ad	50		 push	 eax
  007ae	e8 00 00 00 00	 call	 _fgetc
  007b3	83 c4 04	 add	 esp, 4
  007b6	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al

; 46   : 					}

  007b9	eb db		 jmp	 SHORT $LN24@GetToken
$LN23@GetToken:

; 47   : 	
; 48   : 					if (ch == -1)

  007bb	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  007bf	83 f8 ff	 cmp	 eax, -1
  007c2	75 0a		 jne	 SHORT $LN22@GetToken

; 49   : 					{
; 50   : 						return END;	// End of FILE

  007c4	b8 02 00 00 00	 mov	 eax, 2
  007c9	e9 9a 02 00 00	 jmp	 $LN32@GetToken
$LN22@GetToken:

; 51   : 					}
; 52   : 				}
; 53   : 			}
; 54   : 		}
; 55   : 	}
; 56   : 	while (isspace(ch) != 0);

  007ce	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  007d2	50		 push	 eax
  007d3	e8 00 00 00 00	 call	 _isspace
  007d8	83 c4 04	 add	 esp, 4
  007db	85 c0		 test	 eax, eax
  007dd	0f 85 6a ff ff
	ff		 jne	 $LN31@GetToken

; 57   : 
; 58   : 	
; 59   : 	switch(ch)

  007e3	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  007e7	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv90[ebp], eax
  007ed	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR tv90[ebp]
  007f3	83 e9 22	 sub	 ecx, 34			; 00000022H
  007f6	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv90[ebp], ecx
  007fc	83 bd 4c ff ff
	ff 5b		 cmp	 DWORD PTR tv90[ebp], 91	; 0000005bH
  00803	0f 87 a3 01 00
	00		 ja	 $LN6@GetToken
  00809	8b 95 4c ff ff
	ff		 mov	 edx, DWORD PTR tv90[ebp]
  0080f	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN34@GetToken[edx]
  00816	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN35@GetToken[eax*4]
$LN19@GetToken:

; 60   : 	{
; 61   : 
; 62   : 	case 0x23:	// #
; 63   : 		return CurrentToken=COMMAND;

  0081d	c7 05 00 00 00
	00 23 00 00 00	 mov	 DWORD PTR _CurrentToken, 35 ; 00000023H
  00827	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  0082c	e9 37 02 00 00	 jmp	 $LN32@GetToken

; 64   : 		break;

  00831	e9 30 02 00 00	 jmp	 $LN20@GetToken
$LN18@GetToken:

; 65   : 	
; 66   : 	case 0x3B:	// ;
; 67   : 		return CurrentToken=SEMICOLON;

  00836	c7 05 00 00 00
	00 3b 00 00 00	 mov	 DWORD PTR _CurrentToken, 59 ; 0000003bH
  00840	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00845	e9 1e 02 00 00	 jmp	 $LN32@GetToken

; 68   : 		break;

  0084a	e9 17 02 00 00	 jmp	 $LN20@GetToken
$LN17@GetToken:

; 69   : 	
; 70   : 	case 0x2C:	// ,
; 71   : 
; 72   : 		return CurrentToken=COMMA;

  0084f	c7 05 00 00 00
	00 2c 00 00 00	 mov	 DWORD PTR _CurrentToken, 44 ; 0000002cH
  00859	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  0085e	e9 05 02 00 00	 jmp	 $LN32@GetToken

; 73   : 		break;

  00863	e9 fe 01 00 00	 jmp	 $LN20@GetToken
$LN16@GetToken:

; 74   : 	
; 75   : 	case 0x7B:	// {
; 76   : 		return CurrentToken = LP;

  00868	c7 05 00 00 00
	00 7b 00 00 00	 mov	 DWORD PTR _CurrentToken, 123 ; 0000007bH
  00872	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00877	e9 ec 01 00 00	 jmp	 $LN32@GetToken

; 77   : 		break;

  0087c	e9 e5 01 00 00	 jmp	 $LN20@GetToken
$LN15@GetToken:

; 78   : 
; 79   : 	case 0x7D:	// }
; 80   : 		return CurrentToken = RP;

  00881	c7 05 00 00 00
	00 7d 00 00 00	 mov	 DWORD PTR _CurrentToken, 125 ; 0000007dH
  0088b	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00890	e9 d3 01 00 00	 jmp	 $LN32@GetToken

; 81   : 		break;

  00895	e9 cc 01 00 00	 jmp	 $LN20@GetToken
$LN14@GetToken:

; 82   : 	// Nice Index Table :)	by Deathway
; 83   : 	// Numbers Case
; 84   : 	case 0x2D:	//-
; 85   : 	case 0x2E:	//.
; 86   : 	case '0':	//0
; 87   : 	case '1':	//1
; 88   : 	case '2':	//2
; 89   : 	case '3':	//3
; 90   : 	case '4':	//4		
; 91   : 	case '5':	//5
; 92   : 	case '6':	//6
; 93   : 	case '7':	//7
; 94   : 	case '8':	//8
; 95   : 	case '9':	//9
; 96   : 		ungetc(ch, SMDFile);

  0089a	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0089f	50		 push	 eax
  008a0	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  008a4	51		 push	 ecx
  008a5	e8 00 00 00 00	 call	 _ungetc
  008aa	83 c4 08	 add	 esp, 8

; 97   : 		p = TempString;

  008ad	8d 45 90	 lea	 eax, DWORD PTR _TempString$[ebp]
  008b0	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax
$LN13@GetToken:

; 98   : 		
; 99   : 		while (((ch=getc(SMDFile)) != -1) && ((ch == 0x2E) || (isdigit(ch) != 0) || (ch == 0x2D)))  // 2e '.'  2D '-'

  008b3	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  008b8	50		 push	 eax
  008b9	e8 00 00 00 00	 call	 _getc
  008be	83 c4 04	 add	 esp, 4
  008c1	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  008c4	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  008c8	83 f9 ff	 cmp	 ecx, -1
  008cb	74 36		 je	 SHORT $LN12@GetToken
  008cd	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  008d1	83 f8 2e	 cmp	 eax, 46			; 0000002eH
  008d4	74 1a		 je	 SHORT $LN11@GetToken
  008d6	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  008da	50		 push	 eax
  008db	e8 00 00 00 00	 call	 _isdigit
  008e0	83 c4 04	 add	 esp, 4
  008e3	85 c0		 test	 eax, eax
  008e5	75 09		 jne	 SHORT $LN11@GetToken
  008e7	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  008eb	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  008ee	75 13		 jne	 SHORT $LN12@GetToken
$LN11@GetToken:

; 100  : 		{
; 101  : 			*p = ch;	// Construct a String

  008f0	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  008f3	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  008f6	88 08		 mov	 BYTE PTR [eax], cl

; 102  : 			p++;

  008f8	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  008fb	83 c0 01	 add	 eax, 1
  008fe	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 103  : 		}		

  00901	eb b0		 jmp	 SHORT $LN13@GetToken
$LN12@GetToken:

; 104  : 		*p = 0;

  00903	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00906	c6 00 00	 mov	 BYTE PTR [eax], 0

; 105  : 		TokenNumber = atof( TempString);	// Select the first Byte as Main ID

  00909	8d 45 90	 lea	 eax, DWORD PTR _TempString$[ebp]
  0090c	50		 push	 eax
  0090d	e8 00 00 00 00	 call	 _atof
  00912	83 c4 04	 add	 esp, 4
  00915	d9 1d 00 00 00
	00		 fstp	 DWORD PTR _TokenNumber

; 106  : 		return CurrentToken  = NUMBER ;

  0091b	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _CurrentToken, 1
  00925	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  0092a	e9 39 01 00 00	 jmp	 $LN32@GetToken

; 107  : 		break;

  0092f	e9 32 01 00 00	 jmp	 $LN20@GetToken
$LN10@GetToken:

; 108  : 
; 109  : 	case '\"':	// "	String Case
; 110  : 		p=&TokenString[0];

  00934	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], OFFSET _TokenString
$LN9@GetToken:

; 111  : 		
; 112  : 		while (((ch=getc(SMDFile)) != -1 ) && (ch != 0x22))	// nice

  0093b	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00940	50		 push	 eax
  00941	e8 00 00 00 00	 call	 _getc
  00946	83 c4 04	 add	 esp, 4
  00949	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  0094c	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00950	83 f9 ff	 cmp	 ecx, -1
  00953	74 1c		 je	 SHORT $LN8@GetToken
  00955	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00959	83 f8 22	 cmp	 eax, 34			; 00000022H
  0095c	74 13		 je	 SHORT $LN8@GetToken

; 113  : 		{
; 114  : 			*p = ch;

  0095e	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00961	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  00964	88 08		 mov	 BYTE PTR [eax], cl

; 115  : 			p++;

  00966	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00969	83 c0 01	 add	 eax, 1
  0096c	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 116  : 		}

  0096f	eb ca		 jmp	 SHORT $LN9@GetToken
$LN8@GetToken:

; 117  : 		if (ch != 0x22 )

  00971	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00975	83 f8 22	 cmp	 eax, 34			; 00000022H
  00978	74 13		 je	 SHORT $LN7@GetToken

; 118  : 		{
; 119  : 			ungetc(ch, SMDFile);

  0097a	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0097f	50		 push	 eax
  00980	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00984	51		 push	 ecx
  00985	e8 00 00 00 00	 call	 _ungetc
  0098a	83 c4 08	 add	 esp, 8
$LN7@GetToken:

; 120  : 		}
; 121  : 		*p = 0;

  0098d	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00990	c6 00 00	 mov	 BYTE PTR [eax], 0

; 122  : 		return CurrentToken = NAME;

  00993	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _CurrentToken, 0
  0099d	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  009a2	e9 c1 00 00 00	 jmp	 $LN32@GetToken

; 123  : 		break;

  009a7	e9 ba 00 00 00	 jmp	 $LN20@GetToken
$LN6@GetToken:

; 124  : 
; 125  : 	default:	// Others
; 126  : 		if (isalpha(ch))

  009ac	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  009b0	50		 push	 eax
  009b1	e8 00 00 00 00	 call	 _isalpha
  009b6	83 c4 04	 add	 esp, 4
  009b9	85 c0		 test	 eax, eax
  009bb	0f 84 94 00 00
	00		 je	 $LN5@GetToken

; 127  : 		{
; 128  : 			p=&TokenString[0];

  009c1	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], OFFSET _TokenString

; 129  : 			*p=ch;

  009c8	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  009cb	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  009ce	88 08		 mov	 BYTE PTR [eax], cl

; 130  : 			p++;

  009d0	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  009d3	83 c0 01	 add	 eax, 1
  009d6	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax
$LN4@GetToken:

; 131  : 
; 132  : 			while ( ((ch=getc(SMDFile)) != -1) && ( (ch == 0x2E) || (ch == 0x5F) || (isalnum(ch) != 0) ) )

  009d9	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  009de	50		 push	 eax
  009df	e8 00 00 00 00	 call	 _getc
  009e4	83 c4 04	 add	 esp, 4
  009e7	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  009ea	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  009ee	83 f9 ff	 cmp	 ecx, -1
  009f1	74 36		 je	 SHORT $LN3@GetToken
  009f3	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  009f7	83 f8 2e	 cmp	 eax, 46			; 0000002eH
  009fa	74 1a		 je	 SHORT $LN2@GetToken
  009fc	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00a00	83 f8 5f	 cmp	 eax, 95			; 0000005fH
  00a03	74 11		 je	 SHORT $LN2@GetToken
  00a05	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00a09	50		 push	 eax
  00a0a	e8 00 00 00 00	 call	 _isalnum
  00a0f	83 c4 04	 add	 esp, 4
  00a12	85 c0		 test	 eax, eax
  00a14	74 13		 je	 SHORT $LN3@GetToken
$LN2@GetToken:

; 133  : 			{
; 134  : 				*p=ch;

  00a16	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00a19	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  00a1c	88 08		 mov	 BYTE PTR [eax], cl

; 135  : 				p++;

  00a1e	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00a21	83 c0 01	 add	 eax, 1
  00a24	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 136  : 				
; 137  : 			}

  00a27	eb b0		 jmp	 SHORT $LN4@GetToken
$LN3@GetToken:

; 138  : 
; 139  : 			ungetc(ch, SMDFile);

  00a29	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00a2e	50		 push	 eax
  00a2f	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00a33	51		 push	 ecx
  00a34	e8 00 00 00 00	 call	 _ungetc
  00a39	83 c4 08	 add	 esp, 8

; 140  : 			*p=0;

  00a3c	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00a3f	c6 00 00	 mov	 BYTE PTR [eax], 0

; 141  : 			CurrentToken=NAME;

  00a42	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _CurrentToken, 0

; 142  : 			return CurrentToken;

  00a4c	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00a51	eb 15		 jmp	 SHORT $LN32@GetToken

; 143  : 		}
; 144  : 		else

  00a53	eb 11		 jmp	 SHORT $LN1@GetToken
$LN5@GetToken:

; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'

  00a55	c7 05 00 00 00
	00 3c 00 00 00	 mov	 DWORD PTR _CurrentToken, 60 ; 0000003cH
  00a5f	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00a64	eb 02		 jmp	 SHORT $LN32@GetToken
$LN1@GetToken:
$LN20@GetToken:

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;

  00a66	33 c0		 xor	 eax, eax
$LN32@GetToken:

; 153  : }

  00a68	5f		 pop	 edi
  00a69	5e		 pop	 esi
  00a6a	5b		 pop	 ebx
  00a6b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00a6e	33 cd		 xor	 ecx, ebp
  00a70	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00a75	8b e5		 mov	 esp, ebp
  00a77	5d		 pop	 ebp
  00a78	c3		 ret	 0
  00a79	8d 49 00	 npad	 3
$LN35@GetToken:
  00a7c	00 00 00 00	 DD	 $LN10@GetToken
  00a80	00 00 00 00	 DD	 $LN19@GetToken
  00a84	00 00 00 00	 DD	 $LN17@GetToken
  00a88	00 00 00 00	 DD	 $LN14@GetToken
  00a8c	00 00 00 00	 DD	 $LN18@GetToken
  00a90	00 00 00 00	 DD	 $LN16@GetToken
  00a94	00 00 00 00	 DD	 $LN15@GetToken
  00a98	00 00 00 00	 DD	 $LN6@GetToken
$LN34@GetToken:
  00a9c	00		 DB	 0
  00a9d	01		 DB	 1
  00a9e	07		 DB	 7
  00a9f	07		 DB	 7
  00aa0	07		 DB	 7
  00aa1	07		 DB	 7
  00aa2	07		 DB	 7
  00aa3	07		 DB	 7
  00aa4	07		 DB	 7
  00aa5	07		 DB	 7
  00aa6	02		 DB	 2
  00aa7	03		 DB	 3
  00aa8	03		 DB	 3
  00aa9	07		 DB	 7
  00aaa	03		 DB	 3
  00aab	03		 DB	 3
  00aac	03		 DB	 3
  00aad	03		 DB	 3
  00aae	03		 DB	 3
  00aaf	03		 DB	 3
  00ab0	03		 DB	 3
  00ab1	03		 DB	 3
  00ab2	03		 DB	 3
  00ab3	03		 DB	 3
  00ab4	07		 DB	 7
  00ab5	04		 DB	 4
  00ab6	07		 DB	 7
  00ab7	07		 DB	 7
  00ab8	07		 DB	 7
  00ab9	07		 DB	 7
  00aba	07		 DB	 7
  00abb	07		 DB	 7
  00abc	07		 DB	 7
  00abd	07		 DB	 7
  00abe	07		 DB	 7
  00abf	07		 DB	 7
  00ac0	07		 DB	 7
  00ac1	07		 DB	 7
  00ac2	07		 DB	 7
  00ac3	07		 DB	 7
  00ac4	07		 DB	 7
  00ac5	07		 DB	 7
  00ac6	07		 DB	 7
  00ac7	07		 DB	 7
  00ac8	07		 DB	 7
  00ac9	07		 DB	 7
  00aca	07		 DB	 7
  00acb	07		 DB	 7
  00acc	07		 DB	 7
  00acd	07		 DB	 7
  00ace	07		 DB	 7
  00acf	07		 DB	 7
  00ad0	07		 DB	 7
  00ad1	07		 DB	 7
  00ad2	07		 DB	 7
  00ad3	07		 DB	 7
  00ad4	07		 DB	 7
  00ad5	07		 DB	 7
  00ad6	07		 DB	 7
  00ad7	07		 DB	 7
  00ad8	07		 DB	 7
  00ad9	07		 DB	 7
  00ada	07		 DB	 7
  00adb	07		 DB	 7
  00adc	07		 DB	 7
  00add	07		 DB	 7
  00ade	07		 DB	 7
  00adf	07		 DB	 7
  00ae0	07		 DB	 7
  00ae1	07		 DB	 7
  00ae2	07		 DB	 7
  00ae3	07		 DB	 7
  00ae4	07		 DB	 7
  00ae5	07		 DB	 7
  00ae6	07		 DB	 7
  00ae7	07		 DB	 7
  00ae8	07		 DB	 7
  00ae9	07		 DB	 7
  00aea	07		 DB	 7
  00aeb	07		 DB	 7
  00aec	07		 DB	 7
  00aed	07		 DB	 7
  00aee	07		 DB	 7
  00aef	07		 DB	 7
  00af0	07		 DB	 7
  00af1	07		 DB	 7
  00af2	07		 DB	 7
  00af3	07		 DB	 7
  00af4	07		 DB	 7
  00af5	05		 DB	 5
  00af6	07		 DB	 7
  00af7	06		 DB	 6
?GetToken@@YA?AW4SMDToken@@XZ ENDP			; GetToken
_TEXT	ENDS
PUBLIC	?SendPacket@cWinQuestSystem@@QAEXHE@Z		; cWinQuestSystem::SendPacket
PUBLIC	?NPCClicker@cWinQuestSystem@@QAEXPAUOBJECTSTRUCT@@0@Z ; cWinQuestSystem::NPCClicker
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\winquestsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NPCClicker@cWinQuestSystem@@QAEXPAUOBJECTSTRUCT@@0@Z PROC ; cWinQuestSystem::NPCClicker
; _this$ = ecx

; 163  : {

  00b00	55		 push	 ebp
  00b01	8b ec		 mov	 ebp, esp
  00b03	83 ec 44	 sub	 esp, 68			; 00000044H
  00b06	53		 push	 ebx
  00b07	56		 push	 esi
  00b08	57		 push	 edi
  00b09	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  : 	if(!this->Enable) return;

  00b0c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b0f	0f b6 88 a8 f0
	89 00		 movzx	 ecx, BYTE PTR [eax+9040040]
  00b16	85 c9		 test	 ecx, ecx
  00b18	75 02		 jne	 SHORT $LN2@NPCClicker
  00b1a	eb 27		 jmp	 SHORT $LN3@NPCClicker
$LN2@NPCClicker:

; 165  : 
; 166  : 	if(lpNpc->Class != this->NPC) return;

  00b1c	8b 45 08	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  00b1f	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00b26	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00b29	3b 8a ac f0 89
	00		 cmp	 ecx, DWORD PTR [edx+9040044]
  00b2f	74 02		 je	 SHORT $LN1@NPCClicker
  00b31	eb 10		 jmp	 SHORT $LN3@NPCClicker
$LN1@NPCClicker:

; 167  : 
; 168  : 	this->SendPacket(lpObj->m_Index,1);

  00b33	6a 01		 push	 1
  00b35	8b 45 0c	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00b38	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b3a	51		 push	 ecx
  00b3b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b3e	e8 00 00 00 00	 call	 ?SendPacket@cWinQuestSystem@@QAEXHE@Z ; cWinQuestSystem::SendPacket
$LN3@NPCClicker:

; 169  : }

  00b43	5f		 pop	 edi
  00b44	5e		 pop	 esi
  00b45	5b		 pop	 ebx
  00b46	8b e5		 mov	 esp, ebp
  00b48	5d		 pop	 ebp
  00b49	c2 08 00	 ret	 8
?NPCClicker@cWinQuestSystem@@QAEXPAUOBJECTSTRUCT@@0@Z ENDP ; cWinQuestSystem::NPCClicker
_TEXT	ENDS
PUBLIC	?SendInfoPacket@cWinQuestSystem@@QAEXH@Z	; cWinQuestSystem::SendInfoPacket
PUBLIC	?MonsterKiller@cWinQuestSystem@@QAEXPAUOBJECTSTRUCT@@0@Z ; cWinQuestSystem::MonsterKiller
EXTRN	?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z:PROC	; ItemSerialCreateSend
EXTRN	_rand:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_k$228807 = -24						; size = 4
_k$228799 = -20						; size = 4
_n$228797 = -16						; size = 4
_i$228793 = -12						; size = 4
_aIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_lpTargetObj$ = 12					; size = 4
?MonsterKiller@cWinQuestSystem@@QAEXPAUOBJECTSTRUCT@@0@Z PROC ; cWinQuestSystem::MonsterKiller
; _this$ = ecx

; 174  : {

  00b50	55		 push	 ebp
  00b51	8b ec		 mov	 ebp, esp
  00b53	83 ec 58	 sub	 esp, 88			; 00000058H
  00b56	53		 push	 ebx
  00b57	56		 push	 esi
  00b58	57		 push	 edi
  00b59	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 175  : 	if(!this->Enable) return;

  00b5c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b5f	0f b6 88 a8 f0
	89 00		 movzx	 ecx, BYTE PTR [eax+9040040]
  00b66	85 c9		 test	 ecx, ecx
  00b68	75 05		 jne	 SHORT $LN20@MonsterKil
  00b6a	e9 0a 03 00 00	 jmp	 $LN21@MonsterKil
$LN20@MonsterKil:

; 176  : 
; 177  : 	int aIndex = lpTargetObj->m_Index;

  00b6f	8b 45 0c	 mov	 eax, DWORD PTR _lpTargetObj$[ebp]
  00b72	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b74	89 4d f8	 mov	 DWORD PTR _aIndex$[ebp], ecx

; 178  : 
; 179  : 	for(int i=0; i < MAX_WIN_QUEST; i++)

  00b77	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$228793[ebp], 0
  00b7e	eb 09		 jmp	 SHORT $LN19@MonsterKil
$LN18@MonsterKil:
  00b80	8b 45 f4	 mov	 eax, DWORD PTR _i$228793[ebp]
  00b83	83 c0 01	 add	 eax, 1
  00b86	89 45 f4	 mov	 DWORD PTR _i$228793[ebp], eax
$LN19@MonsterKil:
  00b89	83 7d f4 0a	 cmp	 DWORD PTR _i$228793[ebp], 10 ; 0000000aH
  00b8d	0f 8d e6 02 00
	00		 jge	 $LN21@MonsterKil

; 180  : 	{
; 181  : 		int n = this->WinQ[aIndex].Num[i];

  00b93	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00b96	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  00b9c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b9f	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  00ba6	8b 45 f4	 mov	 eax, DWORD PTR _i$228793[ebp]
  00ba9	0f bf 4c 42 14	 movsx	 ecx, WORD PTR [edx+eax*2+20]
  00bae	89 4d f0	 mov	 DWORD PTR _n$228797[ebp], ecx

; 182  : 
; 183  : 		//Monsterr killer
; 184  : 		if(this->WinQ[aIndex].Start[i] == 1)

  00bb1	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00bb4	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  00bba	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00bbd	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  00bc4	8b 45 f4	 mov	 eax, DWORD PTR _i$228793[ebp]
  00bc7	0f bf 0c 42	 movsx	 ecx, WORD PTR [edx+eax*2]
  00bcb	83 f9 01	 cmp	 ecx, 1
  00bce	0f 85 10 01 00
	00		 jne	 $LN16@MonsterKil

; 185  : 		{
; 186  : 			for(int k = 0; k < 5; k++)

  00bd4	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _k$228799[ebp], 0
  00bdb	eb 09		 jmp	 SHORT $LN15@MonsterKil
$LN14@MonsterKil:
  00bdd	8b 45 ec	 mov	 eax, DWORD PTR _k$228799[ebp]
  00be0	83 c0 01	 add	 eax, 1
  00be3	89 45 ec	 mov	 DWORD PTR _k$228799[ebp], eax
$LN15@MonsterKil:
  00be6	83 7d ec 05	 cmp	 DWORD PTR _k$228799[ebp], 5
  00bea	0f 8d f4 00 00
	00		 jge	 $LN16@MonsterKil

; 187  : 			{
; 188  : 				if(this->Data[i][n].MissionType[k] == 1)

  00bf0	8b 45 f4	 mov	 eax, DWORD PTR _i$228793[ebp]
  00bf3	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  00bf9	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  00bfc	8b 4d f0	 mov	 ecx, DWORD PTR _n$228797[ebp]
  00bff	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  00c05	03 c1		 add	 eax, ecx
  00c07	8b 55 ec	 mov	 edx, DWORD PTR _k$228799[ebp]
  00c0a	83 7c 90 3c 01	 cmp	 DWORD PTR [eax+edx*4+60], 1
  00c0f	0f 85 ca 00 00
	00		 jne	 $LN12@MonsterKil

; 189  : 				{
; 190  : 					if(this->Data[i][n].MissionMain[k] == lpObj->Class)

  00c15	8b 45 f4	 mov	 eax, DWORD PTR _i$228793[ebp]
  00c18	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  00c1e	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  00c21	8b 4d f0	 mov	 ecx, DWORD PTR _n$228797[ebp]
  00c24	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  00c2a	03 c1		 add	 eax, ecx
  00c2c	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00c2f	0f b7 8a b8 00
	00 00		 movzx	 ecx, WORD PTR [edx+184]
  00c36	8b 55 ec	 mov	 edx, DWORD PTR _k$228799[ebp]
  00c39	39 4c 90 50	 cmp	 DWORD PTR [eax+edx*4+80], ecx
  00c3d	0f 85 9c 00 00
	00		 jne	 $LN12@MonsterKil

; 191  : 					{
; 192  : 						if(this->Data[i][n].MissionLvL[k] > this->WinQ[aIndex].Count[i][k])

  00c43	8b 45 f4	 mov	 eax, DWORD PTR _i$228793[ebp]
  00c46	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  00c4c	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  00c4f	8b 4d f0	 mov	 ecx, DWORD PTR _n$228797[ebp]
  00c52	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  00c58	03 c1		 add	 eax, ecx
  00c5a	8b 55 f8	 mov	 edx, DWORD PTR _aIndex$[ebp]
  00c5d	69 d2 b8 00 00
	00		 imul	 edx, 184		; 000000b8H
  00c63	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c66	8d 94 11 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+edx+6280000]
  00c6d	8b 4d f4	 mov	 ecx, DWORD PTR _i$228793[ebp]
  00c70	6b c9 0a	 imul	 ecx, 10			; 0000000aH
  00c73	8d 54 0a 28	 lea	 edx, DWORD PTR [edx+ecx+40]
  00c77	8b 4d ec	 mov	 ecx, DWORD PTR _k$228799[ebp]
  00c7a	0f bf 14 4a	 movsx	 edx, WORD PTR [edx+ecx*2]
  00c7e	8b 4d ec	 mov	 ecx, DWORD PTR _k$228799[ebp]
  00c81	39 54 88 64	 cmp	 DWORD PTR [eax+ecx*4+100], edx
  00c85	7e 58		 jle	 SHORT $LN12@MonsterKil

; 193  : 						{
; 194  : 							this->WinQ[aIndex].Count[i][k]++;

  00c87	8b 45 f4	 mov	 eax, DWORD PTR _i$228793[ebp]
  00c8a	6b c0 0a	 imul	 eax, 10			; 0000000aH
  00c8d	8b 4d f8	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  00c90	69 c9 b8 00 00
	00		 imul	 ecx, 184		; 000000b8H
  00c96	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00c99	8d 8c 0a 40 d3
	5f 00		 lea	 ecx, DWORD PTR [edx+ecx+6280000]
  00ca0	8d 54 01 28	 lea	 edx, DWORD PTR [ecx+eax+40]
  00ca4	8b 45 ec	 mov	 eax, DWORD PTR _k$228799[ebp]
  00ca7	66 8b 0c 42	 mov	 cx, WORD PTR [edx+eax*2]
  00cab	66 83 c1 01	 add	 cx, 1
  00caf	8b 55 f4	 mov	 edx, DWORD PTR _i$228793[ebp]
  00cb2	6b d2 0a	 imul	 edx, 10			; 0000000aH
  00cb5	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00cb8	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  00cbe	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  00cc1	8d 84 06 40 d3
	5f 00		 lea	 eax, DWORD PTR [esi+eax+6280000]
  00cc8	8d 54 10 28	 lea	 edx, DWORD PTR [eax+edx+40]
  00ccc	8b 45 ec	 mov	 eax, DWORD PTR _k$228799[ebp]
  00ccf	66 89 0c 42	 mov	 WORD PTR [edx+eax*2], cx

; 195  : 							this->SendInfoPacket(aIndex);

  00cd3	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00cd6	50		 push	 eax
  00cd7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00cda	e8 00 00 00 00	 call	 ?SendInfoPacket@cWinQuestSystem@@QAEXH@Z ; cWinQuestSystem::SendInfoPacket
$LN12@MonsterKil:

; 196  : 						}
; 197  : 					}
; 198  : 				}
; 199  : 			}

  00cdf	e9 f9 fe ff ff	 jmp	 $LN14@MonsterKil
$LN16@MonsterKil:

; 200  : 		}
; 201  : 
; 202  : 		//Item Drop Rate
; 203  : 		if(this->WinQ[aIndex].Start[i] == 1)

  00ce4	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00ce7	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  00ced	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00cf0	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  00cf7	8b 45 f4	 mov	 eax, DWORD PTR _i$228793[ebp]
  00cfa	0f bf 0c 42	 movsx	 ecx, WORD PTR [edx+eax*2]
  00cfe	83 f9 01	 cmp	 ecx, 1
  00d01	0f 85 6d 01 00
	00		 jne	 $LN9@MonsterKil

; 204  : 		{
; 205  : 			for(int k = 0; k < 5; k++)

  00d07	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _k$228807[ebp], 0
  00d0e	eb 09		 jmp	 SHORT $LN8@MonsterKil
$LN7@MonsterKil:
  00d10	8b 45 e8	 mov	 eax, DWORD PTR _k$228807[ebp]
  00d13	83 c0 01	 add	 eax, 1
  00d16	89 45 e8	 mov	 DWORD PTR _k$228807[ebp], eax
$LN8@MonsterKil:
  00d19	83 7d e8 05	 cmp	 DWORD PTR _k$228807[ebp], 5
  00d1d	0f 8d 51 01 00
	00		 jge	 $LN9@MonsterKil

; 206  : 			{
; 207  : 				if(this->Data[i][n].MissionType[k] == 2)

  00d23	8b 45 f4	 mov	 eax, DWORD PTR _i$228793[ebp]
  00d26	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  00d2c	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  00d2f	8b 4d f0	 mov	 ecx, DWORD PTR _n$228797[ebp]
  00d32	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  00d38	03 c1		 add	 eax, ecx
  00d3a	8b 55 e8	 mov	 edx, DWORD PTR _k$228807[ebp]
  00d3d	83 7c 90 3c 02	 cmp	 DWORD PTR [eax+edx*4+60], 2
  00d42	0f 85 27 01 00
	00		 jne	 $LN5@MonsterKil

; 208  : 				{
; 209  : 					if ( lpTargetObj->MapNumber == this->Data[i][n].MissionLuck[k] || this->Data[i][n].MissionLuck[k] == -1 )

  00d48	8b 45 0c	 mov	 eax, DWORD PTR _lpTargetObj$[ebp]
  00d4b	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  00d52	8b 55 f4	 mov	 edx, DWORD PTR _i$228793[ebp]
  00d55	69 d2 20 95 09
	00		 imul	 edx, 628000		; 00099520H
  00d5b	03 55 fc	 add	 edx, DWORD PTR _this$[ebp]
  00d5e	8b 45 f0	 mov	 eax, DWORD PTR _n$228797[ebp]
  00d61	69 c0 74 02 00
	00		 imul	 eax, 628		; 00000274H
  00d67	03 d0		 add	 edx, eax
  00d69	8b 45 e8	 mov	 eax, DWORD PTR _k$228807[ebp]
  00d6c	3b 4c 82 78	 cmp	 ecx, DWORD PTR [edx+eax*4+120]
  00d70	74 25		 je	 SHORT $LN3@MonsterKil
  00d72	8b 45 f4	 mov	 eax, DWORD PTR _i$228793[ebp]
  00d75	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  00d7b	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  00d7e	8b 4d f0	 mov	 ecx, DWORD PTR _n$228797[ebp]
  00d81	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  00d87	03 c1		 add	 eax, ecx
  00d89	8b 55 e8	 mov	 edx, DWORD PTR _k$228807[ebp]
  00d8c	83 7c 90 78 ff	 cmp	 DWORD PTR [eax+edx*4+120], -1
  00d91	0f 85 d8 00 00
	00		 jne	 $LN5@MonsterKil
$LN3@MonsterKil:

; 210  : 					{
; 211  : 						if ( (rand()%10000) < this->Data[i][n].MissionExl[k] )

  00d97	e8 00 00 00 00	 call	 _rand
  00d9c	99		 cdq
  00d9d	b9 10 27 00 00	 mov	 ecx, 10000		; 00002710H
  00da2	f7 f9		 idiv	 ecx
  00da4	8b 45 f4	 mov	 eax, DWORD PTR _i$228793[ebp]
  00da7	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  00dad	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  00db0	8b 4d f0	 mov	 ecx, DWORD PTR _n$228797[ebp]
  00db3	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  00db9	03 c1		 add	 eax, ecx
  00dbb	8b 4d e8	 mov	 ecx, DWORD PTR _k$228807[ebp]
  00dbe	3b 94 88 8c 00
	00 00		 cmp	 edx, DWORD PTR [eax+ecx*4+140]
  00dc5	0f 8d a4 00 00
	00		 jge	 $LN5@MonsterKil

; 212  : 						{
; 213  : 							if(this->Data[i][n].MissionLvL[k] > this->WinQ[aIndex].Count[i][k])

  00dcb	8b 45 f4	 mov	 eax, DWORD PTR _i$228793[ebp]
  00dce	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  00dd4	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  00dd7	8b 4d f0	 mov	 ecx, DWORD PTR _n$228797[ebp]
  00dda	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  00de0	03 c1		 add	 eax, ecx
  00de2	8b 55 f8	 mov	 edx, DWORD PTR _aIndex$[ebp]
  00de5	69 d2 b8 00 00
	00		 imul	 edx, 184		; 000000b8H
  00deb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00dee	8d 94 11 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+edx+6280000]
  00df5	8b 4d f4	 mov	 ecx, DWORD PTR _i$228793[ebp]
  00df8	6b c9 0a	 imul	 ecx, 10			; 0000000aH
  00dfb	8d 54 0a 28	 lea	 edx, DWORD PTR [edx+ecx+40]
  00dff	8b 4d e8	 mov	 ecx, DWORD PTR _k$228807[ebp]
  00e02	0f bf 14 4a	 movsx	 edx, WORD PTR [edx+ecx*2]
  00e06	8b 4d e8	 mov	 ecx, DWORD PTR _k$228807[ebp]
  00e09	39 54 88 64	 cmp	 DWORD PTR [eax+ecx*4+100], edx
  00e0d	7e 60		 jle	 SHORT $LN5@MonsterKil

; 214  : 							{
; 215  : 								//CreateItemDr
; 216  : 								ItemSerialCreateSend(aIndex,lpObj->MapNumber,lpObj->X,lpObj->Y,this->Data[i][n].MissionMain[k],0,0,0,0,0,aIndex,0,0);

  00e0f	6a 00		 push	 0
  00e11	6a 00		 push	 0
  00e13	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00e16	50		 push	 eax
  00e17	6a 00		 push	 0
  00e19	6a 00		 push	 0
  00e1b	6a 00		 push	 0
  00e1d	6a 00		 push	 0
  00e1f	6a 00		 push	 0
  00e21	8b 4d f4	 mov	 ecx, DWORD PTR _i$228793[ebp]
  00e24	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  00e2a	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  00e2d	8b 55 f0	 mov	 edx, DWORD PTR _n$228797[ebp]
  00e30	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  00e36	03 ca		 add	 ecx, edx
  00e38	8b 45 e8	 mov	 eax, DWORD PTR _k$228807[ebp]
  00e3b	8b 4c 81 50	 mov	 ecx, DWORD PTR [ecx+eax*4+80]
  00e3f	51		 push	 ecx
  00e40	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00e43	0f b6 82 46 01
	00 00		 movzx	 eax, BYTE PTR [edx+326]
  00e4a	50		 push	 eax
  00e4b	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00e4e	0f b6 91 44 01
	00 00		 movzx	 edx, BYTE PTR [ecx+324]
  00e55	52		 push	 edx
  00e56	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00e59	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  00e60	51		 push	 ecx
  00e61	8b 55 f8	 mov	 edx, DWORD PTR _aIndex$[ebp]
  00e64	52		 push	 edx
  00e65	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  00e6a	83 c4 34	 add	 esp, 52			; 00000034H

; 217  : 								break;

  00e6d	eb 05		 jmp	 SHORT $LN9@MonsterKil
$LN5@MonsterKil:

; 218  : 							}
; 219  : 						}
; 220  : 					}
; 221  : 				}
; 222  : 			}

  00e6f	e9 9c fe ff ff	 jmp	 $LN7@MonsterKil
$LN9@MonsterKil:

; 223  : 		}
; 224  : 	}

  00e74	e9 07 fd ff ff	 jmp	 $LN18@MonsterKil
$LN21@MonsterKil:

; 225  : }

  00e79	5f		 pop	 edi
  00e7a	5e		 pop	 esi
  00e7b	5b		 pop	 ebx
  00e7c	8b e5		 mov	 esp, ebp
  00e7e	5d		 pop	 ebp
  00e7f	c2 08 00	 ret	 8
?MonsterKiller@cWinQuestSystem@@QAEXPAUOBJECTSTRUCT@@0@Z ENDP ; cWinQuestSystem::MonsterKiller
_TEXT	ENDS
PUBLIC	?CheckItemUser@cWinQuestSystem@@QAE_NHHH@Z	; cWinQuestSystem::CheckItemUser
PUBLIC	__$ArrayPad$
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	?gObjGetItemCountInInventory@@YAHHHH@Z:PROC	; gObjGetItemCountInInventory
EXTRN	?ItemAttribute@@3PAUITEM_ATTRIBUTE@@A:BYTE	; ItemAttribute
EXTRN	?GetAttr@CMonsterAttr@@QAEPAUMONSTER_ATTRIBUTE@@H@Z:PROC ; CMonsterAttr::GetAttr
EXTRN	?gMAttr@@3VCMonsterAttr@@A:BYTE			; gMAttr
EXTRN	?PHeadSubSetW@@YAXPAEEEH@Z:PROC			; PHeadSubSetW
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	__chkstk:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_k$228854 = -5620					; size = 4
_k$228850 = -5616					; size = 4
_pItem$228847 = -5612					; size = 4
_pItem$228843 = -5608					; size = 4
_lpMonsterAttr$228839 = -5604				; size = 4
_k$228834 = -5600					; size = 4
_n$228831 = -5596					; size = 4
_Reward$228830 = -5590					; size = 1
_Accept$228829 = -5589					; size = 1
_i$228825 = -5588					; size = 4
_qSend$ = -5584						; size = 5572
_lpObj$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_OpenWind$ = 12						; size = 1
?SendPacket@cWinQuestSystem@@QAEXHE@Z PROC		; cWinQuestSystem::SendPacket
; _this$ = ecx

; 230  : {

  00e90	55		 push	 ebp
  00e91	8b ec		 mov	 ebp, esp
  00e93	b8 34 16 00 00	 mov	 eax, 5684		; 00001634H
  00e98	e8 00 00 00 00	 call	 __chkstk
  00e9d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00ea2	33 c5		 xor	 eax, ebp
  00ea4	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00ea7	53		 push	 ebx
  00ea8	56		 push	 esi
  00ea9	57		 push	 edi
  00eaa	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 231  : 	if(!this->Enable) return;

  00ead	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00eb0	0f b6 88 a8 f0
	89 00		 movzx	 ecx, BYTE PTR [eax+9040040]
  00eb7	85 c9		 test	 ecx, ecx
  00eb9	75 05		 jne	 SHORT $LN39@SendPacket
  00ebb	e9 84 12 00 00	 jmp	 $LN40@SendPacket
$LN39@SendPacket:

; 232  : 
; 233  : 	LPOBJ lpObj = &gObj[aIndex];

  00ec0	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00ec3	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00ec9	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00ecf	89 45 f4	 mov	 DWORD PTR _lpObj$[ebp], eax

; 234  : 	CGWinQuestSystemTable qSend;
; 235  : 
; 236  : 	memset(&qSend,0,sizeof(qSend));

  00ed2	68 c4 15 00 00	 push	 5572			; 000015c4H
  00ed7	6a 00		 push	 0
  00ed9	8d 85 30 ea ff
	ff		 lea	 eax, DWORD PTR _qSend$[ebp]
  00edf	50		 push	 eax
  00ee0	e8 00 00 00 00	 call	 _memset
  00ee5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 237  : 	PHeadSubSetW((LPBYTE)&qSend, 0xFA, 0x02, sizeof(qSend));

  00ee8	68 c4 15 00 00	 push	 5572			; 000015c4H
  00eed	6a 02		 push	 2
  00eef	68 fa 00 00 00	 push	 250			; 000000faH
  00ef4	8d 85 30 ea ff
	ff		 lea	 eax, DWORD PTR _qSend$[ebp]
  00efa	50		 push	 eax
  00efb	e8 00 00 00 00	 call	 ?PHeadSubSetW@@YAXPAEEEH@Z ; PHeadSubSetW
  00f00	83 c4 10	 add	 esp, 16			; 00000010H

; 238  : 	
; 239  : 	for(int i=0; i < MAX_WIN_QUEST; i++)

  00f03	c7 85 2c ea ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$228825[ebp], 0
  00f0d	eb 0f		 jmp	 SHORT $LN38@SendPacket
$LN37@SendPacket:
  00f0f	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  00f15	83 c0 01	 add	 eax, 1
  00f18	89 85 2c ea ff
	ff		 mov	 DWORD PTR _i$228825[ebp], eax
$LN38@SendPacket:
  00f1e	83 bd 2c ea ff
	ff 0a		 cmp	 DWORD PTR _i$228825[ebp], 10 ; 0000000aH
  00f25	0f 8d e5 10 00
	00		 jge	 $LN36@SendPacket

; 240  : 	{
; 241  : 		BYTE Accept = 1;

  00f2b	c6 85 2b ea ff
	ff 01		 mov	 BYTE PTR _Accept$228829[ebp], 1

; 242  : 		BYTE Reward = 1;

  00f32	c6 85 2a ea ff
	ff 01		 mov	 BYTE PTR _Reward$228830[ebp], 1

; 243  : 
; 244  : 		int n = this->WinQ[aIndex].Num[i];

  00f39	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00f3c	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  00f42	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00f45	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  00f4c	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  00f52	0f bf 4c 42 14	 movsx	 ecx, WORD PTR [edx+eax*2+20]
  00f57	89 8d 24 ea ff
	ff		 mov	 DWORD PTR _n$228831[ebp], ecx

; 245  : 
; 246  : 		strncpy(qSend.exQuest[i].Name,this->Data[i][n].Name,40);

  00f5d	6a 28		 push	 40			; 00000028H
  00f5f	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  00f65	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  00f6b	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  00f6e	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  00f74	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  00f7a	8d 54 08 08	 lea	 edx, DWORD PTR [eax+ecx+8]
  00f7e	52		 push	 edx
  00f7f	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  00f85	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  00f8b	8d 8c 05 6d ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+eax+61]
  00f92	51		 push	 ecx
  00f93	e8 00 00 00 00	 call	 _strncpy
  00f98	83 c4 0c	 add	 esp, 12			; 0000000cH

; 247  : 		strncpy(qSend.exQuest[i].Info,this->Data[i][n].Info,200);

  00f9b	68 c8 00 00 00	 push	 200			; 000000c8H
  00fa0	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  00fa6	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  00fac	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  00faf	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  00fb5	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  00fbb	8d 94 08 74 01
	00 00		 lea	 edx, DWORD PTR [eax+ecx+372]
  00fc2	52		 push	 edx
  00fc3	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  00fc9	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  00fcf	8d 8c 05 a6 eb
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+eax+374]
  00fd6	51		 push	 ecx
  00fd7	e8 00 00 00 00	 call	 _strncpy
  00fdc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 248  : 
; 249  : 		qSend.exQuest[i].n = n;

  00fdf	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  00fe5	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  00feb	66 8b 8d 24 ea
	ff ff		 mov	 cx, WORD PTR _n$228831[ebp]
  00ff2	66 89 8c 05 68
	ea ff ff	 mov	 WORD PTR _qSend$[ebp+eax+56], cx

; 250  : 		qSend.exQuest[i].e = this->Count[i];

  00ffa	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01000	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  01006	8b 8d 2c ea ff
	ff		 mov	 ecx, DWORD PTR _i$228825[ebp]
  0100c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0100f	66 8b 8c 8a 80
	f0 89 00	 mov	 cx, WORD PTR [edx+ecx*4+9040000]
  01017	66 89 8c 05 6a
	ea ff ff	 mov	 WORD PTR _qSend$[ebp+eax+58], cx

; 251  : 
; 252  : 		//MsgNormal(aIndex,"%d / %d",n,this->Count[i]);
; 253  : 
; 254  : 		if(n >= this->Count[i])

  0101f	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01028	8b 95 24 ea ff
	ff		 mov	 edx, DWORD PTR _n$228831[ebp]
  0102e	3b 94 81 80 f0
	89 00		 cmp	 edx, DWORD PTR [ecx+eax*4+9040000]
  01035	7c 16		 jl	 SHORT $LN35@SendPacket

; 255  : 		{
; 256  : 			qSend.exQuest[i].Finish = true;

  01037	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  0103d	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  01043	c6 84 05 6c ea
	ff ff 01	 mov	 BYTE PTR _qSend$[ebp+eax+60], 1

; 257  : 		}
; 258  : 		else

  0104b	eb 14		 jmp	 SHORT $LN34@SendPacket
$LN35@SendPacket:

; 259  : 		{
; 260  : 			qSend.exQuest[i].Finish = false;

  0104d	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01053	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  01059	c6 84 05 6c ea
	ff ff 00	 mov	 BYTE PTR _qSend$[ebp+eax+60], 0
$LN34@SendPacket:

; 261  : 		}
; 262  : 
; 263  : 		qSend.exQuest[i].start = this->WinQ[aIndex].Start[i];

  01061	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  01064	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  0106a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0106d	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  01074	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  0107a	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  01080	8b 8d 2c ea ff
	ff		 mov	 ecx, DWORD PTR _i$228825[ebp]
  01086	8a 14 4a	 mov	 dl, BYTE PTR [edx+ecx*2]
  01089	88 94 05 66 ea
	ff ff		 mov	 BYTE PTR _qSend$[ebp+eax+54], dl

; 264  : 
; 265  : 		// ----
; 266  : 
; 267  : 		for(int k = 0; k < 5; k++)

  01090	c7 85 20 ea ff
	ff 00 00 00 00	 mov	 DWORD PTR _k$228834[ebp], 0
  0109a	eb 0f		 jmp	 SHORT $LN33@SendPacket
$LN32@SendPacket:
  0109c	8b 85 20 ea ff
	ff		 mov	 eax, DWORD PTR _k$228834[ebp]
  010a2	83 c0 01	 add	 eax, 1
  010a5	89 85 20 ea ff
	ff		 mov	 DWORD PTR _k$228834[ebp], eax
$LN33@SendPacket:
  010ab	83 bd 20 ea ff
	ff 05		 cmp	 DWORD PTR _k$228834[ebp], 5
  010b2	0f 8d 6e 05 00
	00		 jge	 $LN31@SendPacket

; 268  : 		{
; 269  : 			qSend.exQuest[i].MissionType[k] = this->Data[i][n].MissionType[k];

  010b8	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  010be	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  010c4	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  010c7	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  010cd	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  010d3	03 c1		 add	 eax, ecx
  010d5	8b 95 2c ea ff
	ff		 mov	 edx, DWORD PTR _i$228825[ebp]
  010db	69 d2 28 02 00
	00		 imul	 edx, 552		; 00000228H
  010e1	8d 8c 15 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+edx+52]
  010e8	8b 95 20 ea ff
	ff		 mov	 edx, DWORD PTR _k$228834[ebp]
  010ee	8b b5 20 ea ff
	ff		 mov	 esi, DWORD PTR _k$228834[ebp]
  010f4	8a 44 b0 3c	 mov	 al, BYTE PTR [eax+esi*4+60]
  010f8	88 44 11 31	 mov	 BYTE PTR [ecx+edx+49], al

; 270  : 			qSend.exQuest[i].MissionMain[k] = this->Data[i][n].MissionMain[k];

  010fc	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01102	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  01108	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  0110b	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  01111	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01117	03 c1		 add	 eax, ecx
  01119	8b 95 2c ea ff
	ff		 mov	 edx, DWORD PTR _i$228825[ebp]
  0111f	69 d2 28 02 00
	00		 imul	 edx, 552		; 00000228H
  01125	8d 8c 15 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+edx+52]
  0112c	8b 95 20 ea ff
	ff		 mov	 edx, DWORD PTR _k$228834[ebp]
  01132	8b b5 20 ea ff
	ff		 mov	 esi, DWORD PTR _k$228834[ebp]
  01138	66 8b 44 b0 50	 mov	 ax, WORD PTR [eax+esi*4+80]
  0113d	66 89 84 51 9a
	00 00 00	 mov	 WORD PTR [ecx+edx*2+154], ax

; 271  : 			qSend.exQuest[i].MissionLvL[k] = this->Data[i][n].MissionLvL[k];

  01145	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  0114b	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  01151	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01154	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  0115a	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01160	03 c1		 add	 eax, ecx
  01162	8b 95 2c ea ff
	ff		 mov	 edx, DWORD PTR _i$228825[ebp]
  01168	69 d2 28 02 00
	00		 imul	 edx, 552		; 00000228H
  0116e	8d 8c 15 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+edx+52]
  01175	8b 95 20 ea ff
	ff		 mov	 edx, DWORD PTR _k$228834[ebp]
  0117b	8b b5 20 ea ff
	ff		 mov	 esi, DWORD PTR _k$228834[ebp]
  01181	66 8b 44 b0 64	 mov	 ax, WORD PTR [eax+esi*4+100]
  01186	66 89 84 51 a4
	00 00 00	 mov	 WORD PTR [ecx+edx*2+164], ax

; 272  : 			qSend.exQuest[i].MissionLuck[k] = this->Data[i][n].MissionLuck[k];

  0118e	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01194	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  0119a	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  0119d	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  011a3	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  011a9	03 c1		 add	 eax, ecx
  011ab	8b 95 2c ea ff
	ff		 mov	 edx, DWORD PTR _i$228825[ebp]
  011b1	69 d2 28 02 00
	00		 imul	 edx, 552		; 00000228H
  011b7	8d 8c 15 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+edx+52]
  011be	8b 95 20 ea ff
	ff		 mov	 edx, DWORD PTR _k$228834[ebp]
  011c4	8b b5 20 ea ff
	ff		 mov	 esi, DWORD PTR _k$228834[ebp]
  011ca	8a 44 b0 78	 mov	 al, BYTE PTR [eax+esi*4+120]
  011ce	88 84 11 ae 00
	00 00		 mov	 BYTE PTR [ecx+edx+174], al

; 273  : 			qSend.exQuest[i].MissionExl[k] = this->Data[i][n].MissionExl[k];

  011d5	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  011db	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  011e1	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  011e4	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  011ea	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  011f0	03 c1		 add	 eax, ecx
  011f2	8b 95 2c ea ff
	ff		 mov	 edx, DWORD PTR _i$228825[ebp]
  011f8	69 d2 28 02 00
	00		 imul	 edx, 552		; 00000228H
  011fe	8d 8c 15 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+edx+52]
  01205	8b 95 20 ea ff
	ff		 mov	 edx, DWORD PTR _k$228834[ebp]
  0120b	8b b5 20 ea ff
	ff		 mov	 esi, DWORD PTR _k$228834[ebp]
  01211	8a 84 b0 8c 00
	00 00		 mov	 al, BYTE PTR [eax+esi*4+140]
  01218	88 84 11 b3 00
	00 00		 mov	 BYTE PTR [ecx+edx+179], al

; 274  : 			qSend.exQuest[i].MissionAnc[k] = this->Data[i][n].MissionAnc[k];

  0121f	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01225	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  0122b	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  0122e	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  01234	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  0123a	03 c1		 add	 eax, ecx
  0123c	8b 95 2c ea ff
	ff		 mov	 edx, DWORD PTR _i$228825[ebp]
  01242	69 d2 28 02 00
	00		 imul	 edx, 552		; 00000228H
  01248	8d 8c 15 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+edx+52]
  0124f	8b 95 20 ea ff
	ff		 mov	 edx, DWORD PTR _k$228834[ebp]
  01255	8b b5 20 ea ff
	ff		 mov	 esi, DWORD PTR _k$228834[ebp]
  0125b	8a 84 b0 a0 00
	00 00		 mov	 al, BYTE PTR [eax+esi*4+160]
  01262	88 84 11 b8 00
	00 00		 mov	 BYTE PTR [ecx+edx+184], al

; 275  : 
; 276  : 			if(this->Data[i][n].MissionType[k] == 1)	//Kill Mission

  01269	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  0126f	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  01275	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01278	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  0127e	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01284	03 c1		 add	 eax, ecx
  01286	8b 95 20 ea ff
	ff		 mov	 edx, DWORD PTR _k$228834[ebp]
  0128c	83 7c 90 3c 01	 cmp	 DWORD PTR [eax+edx*4+60], 1
  01291	0f 85 0b 01 00
	00		 jne	 $LN28@SendPacket

; 277  : 			{
; 278  : 				LPMONSTER_ATTRIBUTE lpMonsterAttr = gMAttr.GetAttr(this->Data[i][n].MissionMain[k]);

  01297	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  0129d	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  012a3	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  012a6	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  012ac	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  012b2	03 c1		 add	 eax, ecx
  012b4	8b 95 20 ea ff
	ff		 mov	 edx, DWORD PTR _k$228834[ebp]
  012ba	8b 44 90 50	 mov	 eax, DWORD PTR [eax+edx*4+80]
  012be	50		 push	 eax
  012bf	b9 00 00 00 00	 mov	 ecx, OFFSET ?gMAttr@@3VCMonsterAttr@@A ; gMAttr
  012c4	e8 00 00 00 00	 call	 ?GetAttr@CMonsterAttr@@QAEPAUMONSTER_ATTRIBUTE@@H@Z ; CMonsterAttr::GetAttr
  012c9	89 85 1c ea ff
	ff		 mov	 DWORD PTR _lpMonsterAttr$228839[ebp], eax

; 279  : 				strncpy(qSend.exQuest[i].MissionName[k], lpMonsterAttr->m_Name,20);

  012cf	6a 14		 push	 20			; 00000014H
  012d1	8b 85 1c ea ff
	ff		 mov	 eax, DWORD PTR _lpMonsterAttr$228839[ebp]
  012d7	83 c0 08	 add	 eax, 8
  012da	50		 push	 eax
  012db	8b 8d 2c ea ff
	ff		 mov	 ecx, DWORD PTR _i$228825[ebp]
  012e1	69 c9 28 02 00
	00		 imul	 ecx, 552		; 00000228H
  012e7	8d 94 0d 64 ea
	ff ff		 lea	 edx, DWORD PTR _qSend$[ebp+ecx+52]
  012ee	8b 85 20 ea ff
	ff		 mov	 eax, DWORD PTR _k$228834[ebp]
  012f4	6b c0 14	 imul	 eax, 20			; 00000014H
  012f7	8d 4c 02 36	 lea	 ecx, DWORD PTR [edx+eax+54]
  012fb	51		 push	 ecx
  012fc	e8 00 00 00 00	 call	 _strncpy
  01301	83 c4 0c	 add	 esp, 12			; 0000000cH

; 280  : 
; 281  : 				if(this->WinQ[aIndex].Count[i][k] < this->Data[i][n].MissionLvL[k])

  01304	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  01307	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  0130d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01310	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  01317	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  0131d	6b c0 0a	 imul	 eax, 10			; 0000000aH
  01320	8d 4c 02 28	 lea	 ecx, DWORD PTR [edx+eax+40]
  01324	8b 95 20 ea ff
	ff		 mov	 edx, DWORD PTR _k$228834[ebp]
  0132a	0f bf 04 51	 movsx	 eax, WORD PTR [ecx+edx*2]
  0132e	8b 8d 2c ea ff
	ff		 mov	 ecx, DWORD PTR _i$228825[ebp]
  01334	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  0133a	03 4d f8	 add	 ecx, DWORD PTR _this$[ebp]
  0133d	8b 95 24 ea ff
	ff		 mov	 edx, DWORD PTR _n$228831[ebp]
  01343	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  01349	03 ca		 add	 ecx, edx
  0134b	8b 95 20 ea ff
	ff		 mov	 edx, DWORD PTR _k$228834[ebp]
  01351	3b 44 91 64	 cmp	 eax, DWORD PTR [ecx+edx*4+100]
  01355	7d 2a		 jge	 SHORT $LN29@SendPacket

; 282  : 				{
; 283  : 					Reward = 0;

  01357	c6 85 2a ea ff
	ff 00		 mov	 BYTE PTR _Reward$228830[ebp], 0

; 284  : 					qSend.exQuest[i].MissionCheck[k] = 0;

  0135e	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01364	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  0136a	8d 8c 05 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+eax+52]
  01371	8b 95 20 ea ff
	ff		 mov	 edx, DWORD PTR _k$228834[ebp]
  01377	c6 84 11 bd 00
	00 00 00	 mov	 BYTE PTR [ecx+edx+189], 0

; 285  : 				}
; 286  : 				else

  0137f	eb 21		 jmp	 SHORT $LN28@SendPacket
$LN29@SendPacket:

; 287  : 				{
; 288  : 					qSend.exQuest[i].MissionCheck[k] = 1;

  01381	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01387	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  0138d	8d 8c 05 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+eax+52]
  01394	8b 95 20 ea ff
	ff		 mov	 edx, DWORD PTR _k$228834[ebp]
  0139a	c6 84 11 bd 00
	00 00 01	 mov	 BYTE PTR [ecx+edx+189], 1
$LN28@SendPacket:

; 289  : 				}
; 290  : 			}
; 291  : 
; 292  : 			if(this->Data[i][n].MissionType[k] == 2)

  013a2	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  013a8	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  013ae	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  013b1	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  013b7	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  013bd	03 c1		 add	 eax, ecx
  013bf	8b 95 20 ea ff
	ff		 mov	 edx, DWORD PTR _k$228834[ebp]
  013c5	83 7c 90 3c 02	 cmp	 DWORD PTR [eax+edx*4+60], 2
  013ca	0f 85 05 01 00
	00		 jne	 $LN25@SendPacket

; 293  : 			{
; 294  : 				LPITEM_ATTRIBUTE pItem = &ItemAttribute[this->Data[i][n].MissionMain[k]];

  013d0	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  013d6	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  013dc	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  013df	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  013e5	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  013eb	03 c1		 add	 eax, ecx
  013ed	8b 95 20 ea ff
	ff		 mov	 edx, DWORD PTR _k$228834[ebp]
  013f3	8b 44 90 50	 mov	 eax, DWORD PTR [eax+edx*4+80]
  013f7	6b c0 70	 imul	 eax, 112		; 00000070H
  013fa	05 00 00 00 00	 add	 eax, OFFSET ?ItemAttribute@@3PAUITEM_ATTRIBUTE@@A ; ItemAttribute
  013ff	89 85 18 ea ff
	ff		 mov	 DWORD PTR _pItem$228843[ebp], eax

; 295  : 				strncpy(qSend.exQuest[i].MissionName[k], pItem->Name,20);

  01405	6a 14		 push	 20			; 00000014H
  01407	8b 85 18 ea ff
	ff		 mov	 eax, DWORD PTR _pItem$228843[ebp]
  0140d	50		 push	 eax
  0140e	8b 8d 2c ea ff
	ff		 mov	 ecx, DWORD PTR _i$228825[ebp]
  01414	69 c9 28 02 00
	00		 imul	 ecx, 552		; 00000228H
  0141a	8d 94 0d 64 ea
	ff ff		 lea	 edx, DWORD PTR _qSend$[ebp+ecx+52]
  01421	8b 85 20 ea ff
	ff		 mov	 eax, DWORD PTR _k$228834[ebp]
  01427	6b c0 14	 imul	 eax, 20			; 00000014H
  0142a	8d 4c 02 36	 lea	 ecx, DWORD PTR [edx+eax+54]
  0142e	51		 push	 ecx
  0142f	e8 00 00 00 00	 call	 _strncpy
  01434	83 c4 0c	 add	 esp, 12			; 0000000cH

; 296  : 				if(this->WinQ[aIndex].Count[i][k] < this->Data[i][n].MissionLvL[k])

  01437	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0143a	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  01440	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01443	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  0144a	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01450	6b c0 0a	 imul	 eax, 10			; 0000000aH
  01453	8d 4c 02 28	 lea	 ecx, DWORD PTR [edx+eax+40]
  01457	8b 95 20 ea ff
	ff		 mov	 edx, DWORD PTR _k$228834[ebp]
  0145d	0f bf 04 51	 movsx	 eax, WORD PTR [ecx+edx*2]
  01461	8b 8d 2c ea ff
	ff		 mov	 ecx, DWORD PTR _i$228825[ebp]
  01467	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  0146d	03 4d f8	 add	 ecx, DWORD PTR _this$[ebp]
  01470	8b 95 24 ea ff
	ff		 mov	 edx, DWORD PTR _n$228831[ebp]
  01476	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  0147c	03 ca		 add	 ecx, edx
  0147e	8b 95 20 ea ff
	ff		 mov	 edx, DWORD PTR _k$228834[ebp]
  01484	3b 44 91 64	 cmp	 eax, DWORD PTR [ecx+edx*4+100]
  01488	7d 2a		 jge	 SHORT $LN26@SendPacket

; 297  : 				{
; 298  : 					Reward = 0;

  0148a	c6 85 2a ea ff
	ff 00		 mov	 BYTE PTR _Reward$228830[ebp], 0

; 299  : 					qSend.exQuest[i].MissionCheck[k] = 0;

  01491	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01497	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  0149d	8d 8c 05 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+eax+52]
  014a4	8b 95 20 ea ff
	ff		 mov	 edx, DWORD PTR _k$228834[ebp]
  014aa	c6 84 11 bd 00
	00 00 00	 mov	 BYTE PTR [ecx+edx+189], 0

; 300  : 				}
; 301  : 				else

  014b2	eb 21		 jmp	 SHORT $LN25@SendPacket
$LN26@SendPacket:

; 302  : 				{
; 303  : 					qSend.exQuest[i].MissionCheck[k] = 1;

  014b4	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  014ba	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  014c0	8d 8c 05 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+eax+52]
  014c7	8b 95 20 ea ff
	ff		 mov	 edx, DWORD PTR _k$228834[ebp]
  014cd	c6 84 11 bd 00
	00 00 01	 mov	 BYTE PTR [ecx+edx+189], 1
$LN25@SendPacket:

; 304  : 				}
; 305  : 			}
; 306  : 
; 307  : 			if(this->Data[i][n].MissionType[k] == 3)

  014d5	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  014db	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  014e1	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  014e4	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  014ea	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  014f0	03 c1		 add	 eax, ecx
  014f2	8b 95 20 ea ff
	ff		 mov	 edx, DWORD PTR _k$228834[ebp]
  014f8	83 7c 90 3c 03	 cmp	 DWORD PTR [eax+edx*4+60], 3
  014fd	0f 85 d3 00 00
	00		 jne	 $LN22@SendPacket

; 308  : 			{
; 309  : 				LPITEM_ATTRIBUTE pItem = &ItemAttribute[this->Data[i][n].MissionMain[k]];

  01503	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01509	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  0150f	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01512	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  01518	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  0151e	03 c1		 add	 eax, ecx
  01520	8b 95 20 ea ff
	ff		 mov	 edx, DWORD PTR _k$228834[ebp]
  01526	8b 44 90 50	 mov	 eax, DWORD PTR [eax+edx*4+80]
  0152a	6b c0 70	 imul	 eax, 112		; 00000070H
  0152d	05 00 00 00 00	 add	 eax, OFFSET ?ItemAttribute@@3PAUITEM_ATTRIBUTE@@A ; ItemAttribute
  01532	89 85 14 ea ff
	ff		 mov	 DWORD PTR _pItem$228847[ebp], eax

; 310  : 				strncpy(qSend.exQuest[i].MissionName[k], pItem->Name,20);

  01538	6a 14		 push	 20			; 00000014H
  0153a	8b 85 14 ea ff
	ff		 mov	 eax, DWORD PTR _pItem$228847[ebp]
  01540	50		 push	 eax
  01541	8b 8d 2c ea ff
	ff		 mov	 ecx, DWORD PTR _i$228825[ebp]
  01547	69 c9 28 02 00
	00		 imul	 ecx, 552		; 00000228H
  0154d	8d 94 0d 64 ea
	ff ff		 lea	 edx, DWORD PTR _qSend$[ebp+ecx+52]
  01554	8b 85 20 ea ff
	ff		 mov	 eax, DWORD PTR _k$228834[ebp]
  0155a	6b c0 14	 imul	 eax, 20			; 00000014H
  0155d	8d 4c 02 36	 lea	 ecx, DWORD PTR [edx+eax+54]
  01561	51		 push	 ecx
  01562	e8 00 00 00 00	 call	 _strncpy
  01567	83 c4 0c	 add	 esp, 12			; 0000000cH

; 311  : 
; 312  : 				if(!CheckItemUser(aIndex, i, k))

  0156a	8b 85 20 ea ff
	ff		 mov	 eax, DWORD PTR _k$228834[ebp]
  01570	50		 push	 eax
  01571	8b 8d 2c ea ff
	ff		 mov	 ecx, DWORD PTR _i$228825[ebp]
  01577	51		 push	 ecx
  01578	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  0157b	52		 push	 edx
  0157c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0157f	e8 00 00 00 00	 call	 ?CheckItemUser@cWinQuestSystem@@QAE_NHHH@Z ; cWinQuestSystem::CheckItemUser
  01584	0f b6 c0	 movzx	 eax, al
  01587	85 c0		 test	 eax, eax
  01589	75 2a		 jne	 SHORT $LN23@SendPacket

; 313  : 				{
; 314  : 					Reward = 0;

  0158b	c6 85 2a ea ff
	ff 00		 mov	 BYTE PTR _Reward$228830[ebp], 0

; 315  : 					qSend.exQuest[i].MissionCheck[k] = 0;

  01592	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01598	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  0159e	8d 8c 05 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+eax+52]
  015a5	8b 95 20 ea ff
	ff		 mov	 edx, DWORD PTR _k$228834[ebp]
  015ab	c6 84 11 bd 00
	00 00 00	 mov	 BYTE PTR [ecx+edx+189], 0

; 316  : 				}
; 317  : 				else

  015b3	eb 21		 jmp	 SHORT $LN22@SendPacket
$LN23@SendPacket:

; 318  : 				{
; 319  : 					qSend.exQuest[i].MissionCheck[k] = 1;

  015b5	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  015bb	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  015c1	8d 8c 05 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+eax+52]
  015c8	8b 95 20 ea ff
	ff		 mov	 edx, DWORD PTR _k$228834[ebp]
  015ce	c6 84 11 bd 00
	00 00 01	 mov	 BYTE PTR [ecx+edx+189], 1
$LN22@SendPacket:

; 320  : 				}
; 321  : 			}
; 322  : 
; 323  : 			qSend.exQuest[i].Count[k] = this->WinQ[aIndex].Count[i][k];

  015d6	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  015d9	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  015df	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  015e2	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  015e9	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  015ef	6b c0 0a	 imul	 eax, 10			; 0000000aH
  015f2	8d 4c 02 28	 lea	 ecx, DWORD PTR [edx+eax+40]
  015f6	8b 95 2c ea ff
	ff		 mov	 edx, DWORD PTR _i$228825[ebp]
  015fc	69 d2 28 02 00
	00		 imul	 edx, 552		; 00000228H
  01602	8d 84 15 64 ea
	ff ff		 lea	 eax, DWORD PTR _qSend$[ebp+edx+52]
  01609	8b 95 20 ea ff
	ff		 mov	 edx, DWORD PTR _k$228834[ebp]
  0160f	8b b5 20 ea ff
	ff		 mov	 esi, DWORD PTR _k$228834[ebp]
  01615	66 8b 0c 71	 mov	 cx, WORD PTR [ecx+esi*2]
  01619	66 89 8c 50 0a
	02 00 00	 mov	 WORD PTR [eax+edx*2+522], cx

; 324  : 		}

  01621	e9 76 fa ff ff	 jmp	 $LN32@SendPacket
$LN31@SendPacket:

; 325  : 
; 326  : 		// ----
; 327  : 
; 328  : 		for(int k = 0; k < 5; k++)

  01626	c7 85 10 ea ff
	ff 00 00 00 00	 mov	 DWORD PTR _k$228850[ebp], 0
  01630	eb 0f		 jmp	 SHORT $LN21@SendPacket
$LN20@SendPacket:
  01632	8b 85 10 ea ff
	ff		 mov	 eax, DWORD PTR _k$228850[ebp]
  01638	83 c0 01	 add	 eax, 1
  0163b	89 85 10 ea ff
	ff		 mov	 DWORD PTR _k$228850[ebp], eax
$LN21@SendPacket:
  01641	83 bd 10 ea ff
	ff 05		 cmp	 DWORD PTR _k$228850[ebp], 5
  01648	0f 8d c3 01 00
	00		 jge	 $LN19@SendPacket

; 329  : 		{
; 330  : 			qSend.exQuest[i].RewardType[k] = this->Data[i][n].RewardType[k];

  0164e	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01654	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  0165a	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  0165d	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  01663	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01669	03 c1		 add	 eax, ecx
  0166b	8b 95 2c ea ff
	ff		 mov	 edx, DWORD PTR _i$228825[ebp]
  01671	69 d2 28 02 00
	00		 imul	 edx, 552		; 00000228H
  01677	8d 8c 15 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+edx+52]
  0167e	8b 95 10 ea ff
	ff		 mov	 edx, DWORD PTR _k$228850[ebp]
  01684	8b b5 10 ea ff
	ff		 mov	 esi, DWORD PTR _k$228850[ebp]
  0168a	8a 84 b0 b4 00
	00 00		 mov	 al, BYTE PTR [eax+esi*4+180]
  01691	88 84 11 c2 00
	00 00		 mov	 BYTE PTR [ecx+edx+194], al

; 331  : 			qSend.exQuest[i].RewardMain[k] = this->Data[i][n].RewardMain[k];

  01698	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  0169e	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  016a4	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  016a7	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  016ad	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  016b3	03 c1		 add	 eax, ecx
  016b5	8b 95 2c ea ff
	ff		 mov	 edx, DWORD PTR _i$228825[ebp]
  016bb	69 d2 28 02 00
	00		 imul	 edx, 552		; 00000228H
  016c1	8d 8c 15 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+edx+52]
  016c8	8b 95 10 ea ff
	ff		 mov	 edx, DWORD PTR _k$228850[ebp]
  016ce	8b b5 10 ea ff
	ff		 mov	 esi, DWORD PTR _k$228850[ebp]
  016d4	8b 84 b0 c8 00
	00 00		 mov	 eax, DWORD PTR [eax+esi*4+200]
  016db	89 84 91 c8 00
	00 00		 mov	 DWORD PTR [ecx+edx*4+200], eax

; 332  : 			qSend.exQuest[i].RewardLvL[k] = this->Data[i][n].RewardLvL[k];

  016e2	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  016e8	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  016ee	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  016f1	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  016f7	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  016fd	03 c1		 add	 eax, ecx
  016ff	8b 95 2c ea ff
	ff		 mov	 edx, DWORD PTR _i$228825[ebp]
  01705	69 d2 28 02 00
	00		 imul	 edx, 552		; 00000228H
  0170b	8d 8c 15 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+edx+52]
  01712	8b 95 10 ea ff
	ff		 mov	 edx, DWORD PTR _k$228850[ebp]
  01718	8b b5 10 ea ff
	ff		 mov	 esi, DWORD PTR _k$228850[ebp]
  0171e	66 8b 84 b0 dc
	00 00 00	 mov	 ax, WORD PTR [eax+esi*4+220]
  01726	66 89 84 51 dc
	00 00 00	 mov	 WORD PTR [ecx+edx*2+220], ax

; 333  : 			qSend.exQuest[i].RewardLuck[k] = this->Data[i][n].RewardLuck[k];

  0172e	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01734	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  0173a	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  0173d	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  01743	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01749	03 c1		 add	 eax, ecx
  0174b	8b 95 2c ea ff
	ff		 mov	 edx, DWORD PTR _i$228825[ebp]
  01751	69 d2 28 02 00
	00		 imul	 edx, 552		; 00000228H
  01757	8d 8c 15 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+edx+52]
  0175e	8b 95 10 ea ff
	ff		 mov	 edx, DWORD PTR _k$228850[ebp]
  01764	8b b5 10 ea ff
	ff		 mov	 esi, DWORD PTR _k$228850[ebp]
  0176a	8a 84 b0 f0 00
	00 00		 mov	 al, BYTE PTR [eax+esi*4+240]
  01771	88 84 11 e6 00
	00 00		 mov	 BYTE PTR [ecx+edx+230], al

; 334  : 			qSend.exQuest[i].RewardExl[k] = this->Data[i][n].RewardExl[k];

  01778	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  0177e	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  01784	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01787	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  0178d	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01793	03 c1		 add	 eax, ecx
  01795	8b 95 2c ea ff
	ff		 mov	 edx, DWORD PTR _i$228825[ebp]
  0179b	69 d2 28 02 00
	00		 imul	 edx, 552		; 00000228H
  017a1	8d 8c 15 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+edx+52]
  017a8	8b 95 10 ea ff
	ff		 mov	 edx, DWORD PTR _k$228850[ebp]
  017ae	8b b5 10 ea ff
	ff		 mov	 esi, DWORD PTR _k$228850[ebp]
  017b4	8a 84 b0 04 01
	00 00		 mov	 al, BYTE PTR [eax+esi*4+260]
  017bb	88 84 11 eb 00
	00 00		 mov	 BYTE PTR [ecx+edx+235], al

; 335  : 			qSend.exQuest[i].RewardAnc[k] = this->Data[i][n].RewardAnc[k];

  017c2	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  017c8	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  017ce	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  017d1	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  017d7	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  017dd	03 c1		 add	 eax, ecx
  017df	8b 95 2c ea ff
	ff		 mov	 edx, DWORD PTR _i$228825[ebp]
  017e5	69 d2 28 02 00
	00		 imul	 edx, 552		; 00000228H
  017eb	8d 8c 15 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+edx+52]
  017f2	8b 95 10 ea ff
	ff		 mov	 edx, DWORD PTR _k$228850[ebp]
  017f8	8b b5 10 ea ff
	ff		 mov	 esi, DWORD PTR _k$228850[ebp]
  017fe	8a 84 b0 18 01
	00 00		 mov	 al, BYTE PTR [eax+esi*4+280]
  01805	88 84 11 f0 00
	00 00		 mov	 BYTE PTR [ecx+edx+240], al

; 336  : 		}

  0180c	e9 21 fe ff ff	 jmp	 $LN20@SendPacket
$LN19@SendPacket:

; 337  : 
; 338  : 		// ----
; 339  : 		
; 340  : 		for(int k = 0; k < 5; k++)

  01811	c7 85 0c ea ff
	ff 00 00 00 00	 mov	 DWORD PTR _k$228854[ebp], 0
  0181b	eb 0f		 jmp	 SHORT $LN18@SendPacket
$LN17@SendPacket:
  0181d	8b 85 0c ea ff
	ff		 mov	 eax, DWORD PTR _k$228854[ebp]
  01823	83 c0 01	 add	 eax, 1
  01826	89 85 0c ea ff
	ff		 mov	 DWORD PTR _k$228854[ebp], eax
$LN18@SendPacket:
  0182c	83 bd 0c ea ff
	ff 05		 cmp	 DWORD PTR _k$228854[ebp], 5
  01833	0f 8d 04 06 00
	00		 jge	 $LN16@SendPacket

; 341  : 		{
; 342  : 			qSend.exQuest[i].PriceType[k] = this->Data[i][n].PriceType[k];

  01839	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  0183f	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  01845	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01848	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  0184e	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01854	03 c1		 add	 eax, ecx
  01856	8b 95 2c ea ff
	ff		 mov	 edx, DWORD PTR _i$228825[ebp]
  0185c	69 d2 28 02 00
	00		 imul	 edx, 552		; 00000228H
  01862	8d 8c 15 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+edx+52]
  01869	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  0186f	8b b5 0c ea ff
	ff		 mov	 esi, DWORD PTR _k$228854[ebp]
  01875	8a 84 b0 2c 01
	00 00		 mov	 al, BYTE PTR [eax+esi*4+300]
  0187c	88 84 11 f5 00
	00 00		 mov	 BYTE PTR [ecx+edx+245], al

; 343  : 			qSend.exQuest[i].PriceMain[k] = this->Data[i][n].PriceMain[k];

  01883	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01889	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  0188f	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01892	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  01898	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  0189e	03 c1		 add	 eax, ecx
  018a0	8b 95 2c ea ff
	ff		 mov	 edx, DWORD PTR _i$228825[ebp]
  018a6	69 d2 28 02 00
	00		 imul	 edx, 552		; 00000228H
  018ac	8d 8c 15 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+edx+52]
  018b3	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  018b9	8b b5 0c ea ff
	ff		 mov	 esi, DWORD PTR _k$228854[ebp]
  018bf	8b 84 b0 40 01
	00 00		 mov	 eax, DWORD PTR [eax+esi*4+320]
  018c6	89 84 91 fc 00
	00 00		 mov	 DWORD PTR [ecx+edx*4+252], eax

; 344  : 			qSend.exQuest[i].PriceLvL[k] = this->Data[i][n].PriceLvL[k];

  018cd	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  018d3	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  018d9	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  018dc	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  018e2	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  018e8	03 c1		 add	 eax, ecx
  018ea	8b 95 2c ea ff
	ff		 mov	 edx, DWORD PTR _i$228825[ebp]
  018f0	69 d2 28 02 00
	00		 imul	 edx, 552		; 00000228H
  018f6	8d 8c 15 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+edx+52]
  018fd	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  01903	8b b5 0c ea ff
	ff		 mov	 esi, DWORD PTR _k$228854[ebp]
  01909	66 8b 84 b0 54
	01 00 00	 mov	 ax, WORD PTR [eax+esi*4+340]
  01911	66 89 84 51 10
	01 00 00	 mov	 WORD PTR [ecx+edx*2+272], ax

; 345  : 
; 346  : 			qSend.exQuest[i].PriceCheck[k] = 1;

  01919	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  0191f	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  01925	8d 8c 05 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+eax+52]
  0192c	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  01932	c6 84 11 30 01
	00 00 01	 mov	 BYTE PTR [ecx+edx+304], 1

; 347  : 
; 348  : 			//0 - off; 1 - zen; 2 - WcoinC; 3 - WcoinP; 4 - Goblin; 5 - Cred; 6 - Item
; 349  : 
; 350  : 			if(this->Data[i][n].PriceType[k] == 1) //1 - zen

  0193a	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01940	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  01946	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01949	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  0194f	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01955	03 c1		 add	 eax, ecx
  01957	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  0195d	83 bc 90 2c 01
	00 00 01	 cmp	 DWORD PTR [eax+edx*4+300], 1
  01965	0f 85 86 00 00
	00		 jne	 $LN14@SendPacket

; 351  : 			{
; 352  : 				qSend.exQuest[i].PriceDone[k] = lpObj->Money;

  0196b	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01971	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  01977	8d 8c 05 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+eax+52]
  0197e	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  01984	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01987	8b 80 f0 00 00
	00		 mov	 eax, DWORD PTR [eax+240]
  0198d	89 84 91 1c 01
	00 00		 mov	 DWORD PTR [ecx+edx*4+284], eax

; 353  : 
; 354  : 				if(this->Data[i][n].PriceMain[k] > lpObj->Money)

  01994	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  0199a	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  019a0	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  019a3	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  019a9	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  019af	03 c1		 add	 eax, ecx
  019b1	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  019b7	8b 4d f4	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  019ba	8b 94 90 40 01
	00 00		 mov	 edx, DWORD PTR [eax+edx*4+320]
  019c1	3b 91 f0 00 00
	00		 cmp	 edx, DWORD PTR [ecx+240]
  019c7	7e 28		 jle	 SHORT $LN14@SendPacket

; 355  : 				{
; 356  : 					Accept = 0;

  019c9	c6 85 2b ea ff
	ff 00		 mov	 BYTE PTR _Accept$228829[ebp], 0

; 357  : 					qSend.exQuest[i].PriceCheck[k] = 0;

  019d0	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  019d6	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  019dc	8d 8c 05 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+eax+52]
  019e3	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  019e9	c6 84 11 30 01
	00 00 00	 mov	 BYTE PTR [ecx+edx+304], 0
$LN14@SendPacket:

; 358  : 				}
; 359  : 			}
; 360  : 			if(this->Data[i][n].PriceType[k] == 2) //2 - WcoinC

  019f1	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  019f7	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  019fd	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01a00	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  01a06	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01a0c	03 c1		 add	 eax, ecx
  01a0e	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  01a14	83 bc 90 2c 01
	00 00 02	 cmp	 DWORD PTR [eax+edx*4+300], 2
  01a1c	0f 85 90 00 00
	00		 jne	 $LN12@SendPacket

; 361  : 			{
; 362  : 				qSend.exQuest[i].PriceDone[k] = lpObj->GameShop.WCoinC;

  01a22	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01a25	dd 80 00 23 00
	00		 fld	 QWORD PTR [eax+8960]
  01a2b	e8 00 00 00 00	 call	 __ftol2_sse
  01a30	8b 8d 2c ea ff
	ff		 mov	 ecx, DWORD PTR _i$228825[ebp]
  01a36	69 c9 28 02 00
	00		 imul	 ecx, 552		; 00000228H
  01a3c	8d 94 0d 64 ea
	ff ff		 lea	 edx, DWORD PTR _qSend$[ebp+ecx+52]
  01a43	8b 8d 0c ea ff
	ff		 mov	 ecx, DWORD PTR _k$228854[ebp]
  01a49	89 84 8a 1c 01
	00 00		 mov	 DWORD PTR [edx+ecx*4+284], eax

; 363  : 				if(this->Data[i][n].PriceMain[k] > lpObj->GameShop.WCoinC)

  01a50	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01a56	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  01a5c	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01a5f	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  01a65	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01a6b	03 c1		 add	 eax, ecx
  01a6d	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  01a73	db 84 90 40 01
	00 00		 fild	 DWORD PTR [eax+edx*4+320]
  01a7a	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01a7d	dc 98 00 23 00
	00		 fcomp	 QWORD PTR [eax+8960]
  01a83	df e0		 fnstsw	 ax
  01a85	f6 c4 41	 test	 ah, 65			; 00000041H
  01a88	75 28		 jne	 SHORT $LN12@SendPacket

; 364  : 				{
; 365  : 					Accept = 0;

  01a8a	c6 85 2b ea ff
	ff 00		 mov	 BYTE PTR _Accept$228829[ebp], 0

; 366  : 					qSend.exQuest[i].PriceCheck[k] = 0;

  01a91	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01a97	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  01a9d	8d 8c 05 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+eax+52]
  01aa4	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  01aaa	c6 84 11 30 01
	00 00 00	 mov	 BYTE PTR [ecx+edx+304], 0
$LN12@SendPacket:

; 367  : 				}
; 368  : 			}
; 369  : 			if(this->Data[i][n].PriceType[k] == 3) //3 - WcoinP

  01ab2	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01ab8	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  01abe	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01ac1	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  01ac7	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01acd	03 c1		 add	 eax, ecx
  01acf	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  01ad5	83 bc 90 2c 01
	00 00 03	 cmp	 DWORD PTR [eax+edx*4+300], 3
  01add	0f 85 90 00 00
	00		 jne	 $LN10@SendPacket

; 370  : 			{
; 371  : 				qSend.exQuest[i].PriceDone[k] = lpObj->GameShop.WCoinP;

  01ae3	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01ae6	dd 80 f8 22 00
	00		 fld	 QWORD PTR [eax+8952]
  01aec	e8 00 00 00 00	 call	 __ftol2_sse
  01af1	8b 8d 2c ea ff
	ff		 mov	 ecx, DWORD PTR _i$228825[ebp]
  01af7	69 c9 28 02 00
	00		 imul	 ecx, 552		; 00000228H
  01afd	8d 94 0d 64 ea
	ff ff		 lea	 edx, DWORD PTR _qSend$[ebp+ecx+52]
  01b04	8b 8d 0c ea ff
	ff		 mov	 ecx, DWORD PTR _k$228854[ebp]
  01b0a	89 84 8a 1c 01
	00 00		 mov	 DWORD PTR [edx+ecx*4+284], eax

; 372  : 				if(this->Data[i][n].PriceMain[k] > lpObj->GameShop.WCoinP)

  01b11	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01b17	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  01b1d	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01b20	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  01b26	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01b2c	03 c1		 add	 eax, ecx
  01b2e	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  01b34	db 84 90 40 01
	00 00		 fild	 DWORD PTR [eax+edx*4+320]
  01b3b	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01b3e	dc 98 f8 22 00
	00		 fcomp	 QWORD PTR [eax+8952]
  01b44	df e0		 fnstsw	 ax
  01b46	f6 c4 41	 test	 ah, 65			; 00000041H
  01b49	75 28		 jne	 SHORT $LN10@SendPacket

; 373  : 				{
; 374  : 					Accept = 0;

  01b4b	c6 85 2b ea ff
	ff 00		 mov	 BYTE PTR _Accept$228829[ebp], 0

; 375  : 					qSend.exQuest[i].PriceCheck[k] = 0;

  01b52	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01b58	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  01b5e	8d 8c 05 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+eax+52]
  01b65	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  01b6b	c6 84 11 30 01
	00 00 00	 mov	 BYTE PTR [ecx+edx+304], 0
$LN10@SendPacket:

; 376  : 				}
; 377  : 			}
; 378  : 			if(this->Data[i][n].PriceType[k] == 4) //4 - Goblin

  01b73	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01b79	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  01b7f	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01b82	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  01b88	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01b8e	03 c1		 add	 eax, ecx
  01b90	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  01b96	83 bc 90 2c 01
	00 00 04	 cmp	 DWORD PTR [eax+edx*4+300], 4
  01b9e	0f 85 90 00 00
	00		 jne	 $LN8@SendPacket

; 379  : 			{
; 380  : 				qSend.exQuest[i].PriceDone[k] = lpObj->GameShop.GoblinPoint;

  01ba4	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01ba7	dd 80 08 23 00
	00		 fld	 QWORD PTR [eax+8968]
  01bad	e8 00 00 00 00	 call	 __ftol2_sse
  01bb2	8b 8d 2c ea ff
	ff		 mov	 ecx, DWORD PTR _i$228825[ebp]
  01bb8	69 c9 28 02 00
	00		 imul	 ecx, 552		; 00000228H
  01bbe	8d 94 0d 64 ea
	ff ff		 lea	 edx, DWORD PTR _qSend$[ebp+ecx+52]
  01bc5	8b 8d 0c ea ff
	ff		 mov	 ecx, DWORD PTR _k$228854[ebp]
  01bcb	89 84 8a 1c 01
	00 00		 mov	 DWORD PTR [edx+ecx*4+284], eax

; 381  : 				if(this->Data[i][n].PriceMain[k] > lpObj->GameShop.GoblinPoint)

  01bd2	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01bd8	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  01bde	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01be1	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  01be7	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01bed	03 c1		 add	 eax, ecx
  01bef	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  01bf5	db 84 90 40 01
	00 00		 fild	 DWORD PTR [eax+edx*4+320]
  01bfc	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01bff	dc 98 08 23 00
	00		 fcomp	 QWORD PTR [eax+8968]
  01c05	df e0		 fnstsw	 ax
  01c07	f6 c4 41	 test	 ah, 65			; 00000041H
  01c0a	75 28		 jne	 SHORT $LN8@SendPacket

; 382  : 				{
; 383  : 					Accept = 0;

  01c0c	c6 85 2b ea ff
	ff 00		 mov	 BYTE PTR _Accept$228829[ebp], 0

; 384  : 					qSend.exQuest[i].PriceCheck[k] = 0;

  01c13	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01c19	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  01c1f	8d 8c 05 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+eax+52]
  01c26	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  01c2c	c6 84 11 30 01
	00 00 00	 mov	 BYTE PTR [ecx+edx+304], 0
$LN8@SendPacket:

; 385  : 				}
; 386  : 			}
; 387  : 			if(this->Data[i][n].PriceType[k] == 5) //5 - Cred

  01c34	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01c3a	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  01c40	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01c43	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  01c49	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01c4f	03 c1		 add	 eax, ecx
  01c51	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  01c57	83 bc 90 2c 01
	00 00 05	 cmp	 DWORD PTR [eax+edx*4+300], 5
  01c5f	0f 85 92 00 00
	00		 jne	 $LN6@SendPacket

; 388  : 			{
; 389  : 				qSend.exQuest[i].PriceDone[k] = lpObj->ExCred;

  01c65	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01c68	d9 80 a8 22 00
	00		 fld	 DWORD PTR [eax+8872]
  01c6e	e8 00 00 00 00	 call	 __ftol2_sse
  01c73	8b 8d 2c ea ff
	ff		 mov	 ecx, DWORD PTR _i$228825[ebp]
  01c79	69 c9 28 02 00
	00		 imul	 ecx, 552		; 00000228H
  01c7f	8d 94 0d 64 ea
	ff ff		 lea	 edx, DWORD PTR _qSend$[ebp+ecx+52]
  01c86	8b 8d 0c ea ff
	ff		 mov	 ecx, DWORD PTR _k$228854[ebp]
  01c8c	89 84 8a 1c 01
	00 00		 mov	 DWORD PTR [edx+ecx*4+284], eax

; 390  : 				if(this->Data[i][n].PriceMain[k] > lpObj->ExCred)

  01c93	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01c99	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  01c9f	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01ca2	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  01ca8	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01cae	03 c1		 add	 eax, ecx
  01cb0	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  01cb6	db 84 90 40 01
	00 00		 fild	 DWORD PTR [eax+edx*4+320]
  01cbd	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01cc0	d9 80 a8 22 00
	00		 fld	 DWORD PTR [eax+8872]
  01cc6	de d9		 fcompp
  01cc8	df e0		 fnstsw	 ax
  01cca	f6 c4 05	 test	 ah, 5
  01ccd	7a 28		 jp	 SHORT $LN6@SendPacket

; 391  : 				{
; 392  : 					Accept = 0;

  01ccf	c6 85 2b ea ff
	ff 00		 mov	 BYTE PTR _Accept$228829[ebp], 0

; 393  : 					qSend.exQuest[i].PriceCheck[k] = 0;

  01cd6	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01cdc	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  01ce2	8d 8c 05 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+eax+52]
  01ce9	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  01cef	c6 84 11 30 01
	00 00 00	 mov	 BYTE PTR [ecx+edx+304], 0
$LN6@SendPacket:

; 394  : 				}
; 395  : 			}
; 396  : 			if(this->Data[i][n].PriceType[k] == 6) //6 - Item

  01cf7	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01cfd	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  01d03	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01d06	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  01d0c	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01d12	03 c1		 add	 eax, ecx
  01d14	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  01d1a	83 bc 90 2c 01
	00 00 06	 cmp	 DWORD PTR [eax+edx*4+300], 6
  01d22	0f 85 10 01 00
	00		 jne	 $LN4@SendPacket

; 397  : 			{
; 398  : 				qSend.exQuest[i].PriceDone[k] = gObjGetItemCountInInventory(aIndex,this->Data[i][n].PriceMain[k],this->Data[i][n].PriceLvL[k]);

  01d28	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01d2e	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  01d34	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01d37	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  01d3d	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01d43	03 c1		 add	 eax, ecx
  01d45	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  01d4b	8b 84 90 54 01
	00 00		 mov	 eax, DWORD PTR [eax+edx*4+340]
  01d52	50		 push	 eax
  01d53	8b 8d 2c ea ff
	ff		 mov	 ecx, DWORD PTR _i$228825[ebp]
  01d59	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  01d5f	03 4d f8	 add	 ecx, DWORD PTR _this$[ebp]
  01d62	8b 95 24 ea ff
	ff		 mov	 edx, DWORD PTR _n$228831[ebp]
  01d68	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  01d6e	03 ca		 add	 ecx, edx
  01d70	8b 85 0c ea ff
	ff		 mov	 eax, DWORD PTR _k$228854[ebp]
  01d76	8b 8c 81 40 01
	00 00		 mov	 ecx, DWORD PTR [ecx+eax*4+320]
  01d7d	51		 push	 ecx
  01d7e	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  01d81	52		 push	 edx
  01d82	e8 00 00 00 00	 call	 ?gObjGetItemCountInInventory@@YAHHHH@Z ; gObjGetItemCountInInventory
  01d87	83 c4 0c	 add	 esp, 12			; 0000000cH
  01d8a	8b 8d 2c ea ff
	ff		 mov	 ecx, DWORD PTR _i$228825[ebp]
  01d90	69 c9 28 02 00
	00		 imul	 ecx, 552		; 00000228H
  01d96	8d 94 0d 64 ea
	ff ff		 lea	 edx, DWORD PTR _qSend$[ebp+ecx+52]
  01d9d	8b 8d 0c ea ff
	ff		 mov	 ecx, DWORD PTR _k$228854[ebp]
  01da3	89 84 8a 1c 01
	00 00		 mov	 DWORD PTR [edx+ecx*4+284], eax

; 399  : 				if(gObjGetItemCountInInventory(aIndex,this->Data[i][n].PriceMain[k],this->Data[i][n].PriceLvL[k]) < 0)

  01daa	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01db0	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  01db6	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01db9	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  01dbf	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01dc5	03 c1		 add	 eax, ecx
  01dc7	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  01dcd	8b 84 90 54 01
	00 00		 mov	 eax, DWORD PTR [eax+edx*4+340]
  01dd4	50		 push	 eax
  01dd5	8b 8d 2c ea ff
	ff		 mov	 ecx, DWORD PTR _i$228825[ebp]
  01ddb	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  01de1	03 4d f8	 add	 ecx, DWORD PTR _this$[ebp]
  01de4	8b 95 24 ea ff
	ff		 mov	 edx, DWORD PTR _n$228831[ebp]
  01dea	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  01df0	03 ca		 add	 ecx, edx
  01df2	8b 85 0c ea ff
	ff		 mov	 eax, DWORD PTR _k$228854[ebp]
  01df8	8b 8c 81 40 01
	00 00		 mov	 ecx, DWORD PTR [ecx+eax*4+320]
  01dff	51		 push	 ecx
  01e00	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  01e03	52		 push	 edx
  01e04	e8 00 00 00 00	 call	 ?gObjGetItemCountInInventory@@YAHHHH@Z ; gObjGetItemCountInInventory
  01e09	83 c4 0c	 add	 esp, 12			; 0000000cH
  01e0c	85 c0		 test	 eax, eax
  01e0e	7d 28		 jge	 SHORT $LN4@SendPacket

; 400  : 				{
; 401  : 					Accept = 0;

  01e10	c6 85 2b ea ff
	ff 00		 mov	 BYTE PTR _Accept$228829[ebp], 0

; 402  : 					qSend.exQuest[i].PriceCheck[k] = 0;

  01e17	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01e1d	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  01e23	8d 8c 05 64 ea
	ff ff		 lea	 ecx, DWORD PTR _qSend$[ebp+eax+52]
  01e2a	8b 95 0c ea ff
	ff		 mov	 edx, DWORD PTR _k$228854[ebp]
  01e30	c6 84 11 30 01
	00 00 00	 mov	 BYTE PTR [ecx+edx+304], 0
$LN4@SendPacket:

; 403  : 				}
; 404  : 			}
; 405  : 		}

  01e38	e9 e0 f9 ff ff	 jmp	 $LN17@SendPacket
$LN16@SendPacket:

; 406  : 
; 407  : 		// ----
; 408  : 
; 409  : 		qSend.exQuest[i].NeedLevel = this->Data[i][n].NeedLevel;

  01e3d	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01e43	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  01e49	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01e4c	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  01e52	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01e58	8b 95 2c ea ff
	ff		 mov	 edx, DWORD PTR _i$228825[ebp]
  01e5e	69 d2 28 02 00
	00		 imul	 edx, 552		; 00000228H
  01e64	66 8b 84 08 68
	01 00 00	 mov	 ax, WORD PTR [eax+ecx+360]
  01e6c	66 89 84 15 9a
	eb ff ff	 mov	 WORD PTR _qSend$[ebp+edx+362], ax

; 410  : 		qSend.exQuest[i].NeedReset = this->Data[i][n].NeedReset;

  01e74	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01e7a	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  01e80	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01e83	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  01e89	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01e8f	8b 95 2c ea ff
	ff		 mov	 edx, DWORD PTR _i$228825[ebp]
  01e95	69 d2 28 02 00
	00		 imul	 edx, 552		; 00000228H
  01e9b	66 8b 84 08 6c
	01 00 00	 mov	 ax, WORD PTR [eax+ecx+364]
  01ea3	66 89 84 15 9e
	eb ff ff	 mov	 WORD PTR _qSend$[ebp+edx+366], ax

; 411  : 		qSend.exQuest[i].NeedGrand = this->Data[i][n].NeedGrand;

  01eab	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01eb1	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  01eb7	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01eba	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  01ec0	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01ec6	8b 95 2c ea ff
	ff		 mov	 edx, DWORD PTR _i$228825[ebp]
  01ecc	69 d2 28 02 00
	00		 imul	 edx, 552		; 00000228H
  01ed2	66 8b 84 08 70
	01 00 00	 mov	 ax, WORD PTR [eax+ecx+368]
  01eda	66 89 84 15 a2
	eb ff ff	 mov	 WORD PTR _qSend$[ebp+edx+370], ax

; 412  : 
; 413  : 		qSend.exQuest[i].LevelDone = lpObj->Level;

  01ee2	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01ee8	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  01eee	8b 4d f4	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01ef1	66 8b 91 be 00
	00 00		 mov	 dx, WORD PTR [ecx+190]
  01ef8	66 89 94 05 9c
	eb ff ff	 mov	 WORD PTR _qSend$[ebp+eax+364], dx

; 414  : 		if(this->Data[i][n].NeedLevel > lpObj->Level)

  01f00	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01f06	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  01f0c	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01f0f	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  01f15	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01f1b	8b 55 f4	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01f1e	0f bf 92 be 00
	00 00		 movsx	 edx, WORD PTR [edx+190]
  01f25	39 94 08 68 01
	00 00		 cmp	 DWORD PTR [eax+ecx+360], edx
  01f2c	7e 07		 jle	 SHORT $LN3@SendPacket

; 415  : 		{
; 416  : 			Accept = 0;

  01f2e	c6 85 2b ea ff
	ff 00		 mov	 BYTE PTR _Accept$228829[ebp], 0
$LN3@SendPacket:

; 417  : 		}
; 418  : 
; 419  : 		qSend.exQuest[i].ResetDone = lpObj->Reset;

  01f35	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01f3b	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  01f41	8b 4d f4	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01f44	66 8b 91 90 22
	00 00		 mov	 dx, WORD PTR [ecx+8848]
  01f4b	66 89 94 05 a0
	eb ff ff	 mov	 WORD PTR _qSend$[ebp+eax+368], dx

; 420  : 		if(this->Data[i][n].NeedReset > lpObj->Reset)

  01f53	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01f59	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  01f5f	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01f62	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  01f68	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01f6e	8b 55 f4	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01f71	8b 84 08 6c 01
	00 00		 mov	 eax, DWORD PTR [eax+ecx+364]
  01f78	3b 82 90 22 00
	00		 cmp	 eax, DWORD PTR [edx+8848]
  01f7e	7e 07		 jle	 SHORT $LN2@SendPacket

; 421  : 		{
; 422  : 			Accept = 0;

  01f80	c6 85 2b ea ff
	ff 00		 mov	 BYTE PTR _Accept$228829[ebp], 0
$LN2@SendPacket:

; 423  : 		}
; 424  : 
; 425  : 		qSend.exQuest[i].GrandDone = lpObj->GReset;

  01f87	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01f8d	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  01f93	8b 4d f4	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01f96	66 8b 91 94 22
	00 00		 mov	 dx, WORD PTR [ecx+8852]
  01f9d	66 89 94 05 a4
	eb ff ff	 mov	 WORD PTR _qSend$[ebp+eax+372], dx

; 426  : 		if(this->Data[i][n].NeedGrand > lpObj->GReset)

  01fa5	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01fab	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  01fb1	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  01fb4	8b 8d 24 ea ff
	ff		 mov	 ecx, DWORD PTR _n$228831[ebp]
  01fba	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  01fc0	8b 55 f4	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01fc3	8b 84 08 70 01
	00 00		 mov	 eax, DWORD PTR [eax+ecx+368]
  01fca	3b 82 94 22 00
	00		 cmp	 eax, DWORD PTR [edx+8852]
  01fd0	7e 07		 jle	 SHORT $LN1@SendPacket

; 427  : 		{
; 428  : 			Accept = 0;

  01fd2	c6 85 2b ea ff
	ff 00		 mov	 BYTE PTR _Accept$228829[ebp], 0
$LN1@SendPacket:

; 429  : 		}
; 430  : 
; 431  : 		qSend.exQuest[i].accept = Accept;

  01fd9	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01fdf	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  01fe5	8a 8d 2b ea ff
	ff		 mov	 cl, BYTE PTR _Accept$228829[ebp]
  01feb	88 8c 05 65 ea
	ff ff		 mov	 BYTE PTR _qSend$[ebp+eax+53], cl

; 432  : 		qSend.exQuest[i].reward = Reward;

  01ff2	8b 85 2c ea ff
	ff		 mov	 eax, DWORD PTR _i$228825[ebp]
  01ff8	69 c0 28 02 00
	00		 imul	 eax, 552		; 00000228H
  01ffe	8a 8d 2a ea ff
	ff		 mov	 cl, BYTE PTR _Reward$228830[ebp]
  02004	88 8c 05 64 ea
	ff ff		 mov	 BYTE PTR _qSend$[ebp+eax+52], cl

; 433  : 	}

  0200b	e9 ff ee ff ff	 jmp	 $LN37@SendPacket
$LN36@SendPacket:

; 434  : 
; 435  : 	qSend.OpenWind = OpenWind;

  02010	8a 45 0c	 mov	 al, BYTE PTR _OpenWind$[ebp]
  02013	88 85 35 ea ff
	ff		 mov	 BYTE PTR _qSend$[ebp+5], al

; 436  : 
; 437  : 	// ----
; 438  : 
; 439  : 	qSend.Damage = this->WinQ[aIndex].Damage;

  02019	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0201c	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  02022	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  02025	8b 94 01 cc d3
	5f 00		 mov	 edx, DWORD PTR [ecx+eax+6280140]
  0202c	89 95 38 ea ff
	ff		 mov	 DWORD PTR _qSend$[ebp+8], edx

; 440  : 	qSend.Defence = this->WinQ[aIndex].Defence;

  02032	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02035	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  0203b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0203e	8b 94 01 d0 d3
	5f 00		 mov	 edx, DWORD PTR [ecx+eax+6280144]
  02045	89 95 3c ea ff
	ff		 mov	 DWORD PTR _qSend$[ebp+12], edx

; 441  : 	qSend.Life = this->WinQ[aIndex].Life;

  0204b	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0204e	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  02054	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  02057	8b 94 01 d4 d3
	5f 00		 mov	 edx, DWORD PTR [ecx+eax+6280148]
  0205e	89 95 40 ea ff
	ff		 mov	 DWORD PTR _qSend$[ebp+16], edx

; 442  : 	qSend.SD = this->WinQ[aIndex].SD;

  02064	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02067	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  0206d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  02070	8b 94 01 d8 d3
	5f 00		 mov	 edx, DWORD PTR [ecx+eax+6280152]
  02077	89 95 44 ea ff
	ff		 mov	 DWORD PTR _qSend$[ebp+20], edx

; 443  : 	qSend.Crit = this->WinQ[aIndex].Crit;

  0207d	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02080	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  02086	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  02089	8b 94 01 dc d3
	5f 00		 mov	 edx, DWORD PTR [ecx+eax+6280156]
  02090	89 95 48 ea ff
	ff		 mov	 DWORD PTR _qSend$[ebp+24], edx

; 444  : 	qSend.Exel = this->WinQ[aIndex].Exel;

  02096	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02099	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  0209f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  020a2	8b 94 01 e0 d3
	5f 00		 mov	 edx, DWORD PTR [ecx+eax+6280160]
  020a9	89 95 4c ea ff
	ff		 mov	 DWORD PTR _qSend$[ebp+28], edx

; 445  : 	qSend.Double = this->WinQ[aIndex].Double;

  020af	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  020b2	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  020b8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  020bb	8b 94 01 e4 d3
	5f 00		 mov	 edx, DWORD PTR [ecx+eax+6280164]
  020c2	89 95 50 ea ff
	ff		 mov	 DWORD PTR _qSend$[ebp+32], edx

; 446  : 	qSend.Ignore = this->WinQ[aIndex].Ignore;

  020c8	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  020cb	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  020d1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  020d4	8b 94 01 e8 d3
	5f 00		 mov	 edx, DWORD PTR [ecx+eax+6280168]
  020db	89 95 54 ea ff
	ff		 mov	 DWORD PTR _qSend$[ebp+36], edx

; 447  : 	qSend.Ref = this->WinQ[aIndex].Ref;

  020e1	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  020e4	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  020ea	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  020ed	8b 94 01 ec d3
	5f 00		 mov	 edx, DWORD PTR [ecx+eax+6280172]
  020f4	89 95 58 ea ff
	ff		 mov	 DWORD PTR _qSend$[ebp+40], edx

; 448  : 	qSend.Exp = this->WinQ[aIndex].Exp;

  020fa	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  020fd	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  02103	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  02106	8b 94 01 f0 d3
	5f 00		 mov	 edx, DWORD PTR [ecx+eax+6280176]
  0210d	89 95 5c ea ff
	ff		 mov	 DWORD PTR _qSend$[ebp+44], edx

; 449  : 	qSend.Drop = this->WinQ[aIndex].Drop;	

  02113	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02116	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  0211c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0211f	8b 94 01 f4 d3
	5f 00		 mov	 edx, DWORD PTR [ecx+eax+6280180]
  02126	89 95 60 ea ff
	ff		 mov	 DWORD PTR _qSend$[ebp+48], edx

; 450  : 
; 451  : 	// ----
; 452  : 
; 453  : 	DataSend(aIndex,(LPBYTE)&qSend,sizeof(qSend));

  0212c	68 c4 15 00 00	 push	 5572			; 000015c4H
  02131	8d 85 30 ea ff
	ff		 lea	 eax, DWORD PTR _qSend$[ebp]
  02137	50		 push	 eax
  02138	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  0213b	51		 push	 ecx
  0213c	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  02141	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN40@SendPacket:

; 454  : }

  02144	5f		 pop	 edi
  02145	5e		 pop	 esi
  02146	5b		 pop	 ebx
  02147	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0214a	33 cd		 xor	 ecx, ebp
  0214c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  02151	8b e5		 mov	 esp, ebp
  02153	5d		 pop	 ebp
  02154	c2 08 00	 ret	 8
?SendPacket@cWinQuestSystem@@QAEXHE@Z ENDP		; cWinQuestSystem::SendPacket
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_k$228885 = -176					; size = 4
_n$228884 = -172					; size = 4
_i$228880 = -168					; size = 4
_rSend$ = -164						; size = 156
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?SendInfoPacket@cWinQuestSystem@@QAEXH@Z PROC		; cWinQuestSystem::SendInfoPacket
; _this$ = ecx

; 459  : {

  02160	55		 push	 ebp
  02161	8b ec		 mov	 ebp, esp
  02163	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  02169	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0216e	33 c5		 xor	 eax, ebp
  02170	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  02173	53		 push	 ebx
  02174	56		 push	 esi
  02175	57		 push	 edi
  02176	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 460  : 	CGWinQuestProcess rSend;
; 461  : 
; 462  : 	ZeroMemory(&rSend,sizeof(rSend));

  02179	68 9c 00 00 00	 push	 156			; 0000009cH
  0217e	6a 00		 push	 0
  02180	8d 85 5c ff ff
	ff		 lea	 eax, DWORD PTR _rSend$[ebp]
  02186	50		 push	 eax
  02187	e8 00 00 00 00	 call	 _memset
  0218c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 463  : 	PHeadSubSetW((LPBYTE)&rSend, 0xFA, 0x03, sizeof(rSend));

  0218f	68 9c 00 00 00	 push	 156			; 0000009cH
  02194	6a 03		 push	 3
  02196	68 fa 00 00 00	 push	 250			; 000000faH
  0219b	8d 85 5c ff ff
	ff		 lea	 eax, DWORD PTR _rSend$[ebp]
  021a1	50		 push	 eax
  021a2	e8 00 00 00 00	 call	 ?PHeadSubSetW@@YAXPAEEEH@Z ; PHeadSubSetW
  021a7	83 c4 10	 add	 esp, 16			; 00000010H

; 464  : 
; 465  : 	for(int i=0; i < MAX_WIN_QUEST; i++)

  021aa	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$228880[ebp], 0
  021b4	eb 0f		 jmp	 SHORT $LN17@SendInfoPa
$LN16@SendInfoPa:
  021b6	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _i$228880[ebp]
  021bc	83 c0 01	 add	 eax, 1
  021bf	89 85 58 ff ff
	ff		 mov	 DWORD PTR _i$228880[ebp], eax
$LN17@SendInfoPa:
  021c5	83 bd 58 ff ff
	ff 0a		 cmp	 DWORD PTR _i$228880[ebp], 10 ; 0000000aH
  021cc	0f 8d fa 02 00
	00		 jge	 $LN15@SendInfoPa

; 466  : 	{
; 467  : 		int n = this->WinQ[aIndex].Num[i];

  021d2	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  021d5	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  021db	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  021de	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  021e5	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _i$228880[ebp]
  021eb	0f bf 4c 42 14	 movsx	 ecx, WORD PTR [edx+eax*2+20]
  021f0	89 8d 54 ff ff
	ff		 mov	 DWORD PTR _n$228884[ebp], ecx

; 468  : 		for(int k=0;k<5;k++)

  021f6	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _k$228885[ebp], 0
  02200	eb 0f		 jmp	 SHORT $LN14@SendInfoPa
$LN13@SendInfoPa:
  02202	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _k$228885[ebp]
  02208	83 c0 01	 add	 eax, 1
  0220b	89 85 50 ff ff
	ff		 mov	 DWORD PTR _k$228885[ebp], eax
$LN14@SendInfoPa:
  02211	83 bd 50 ff ff
	ff 05		 cmp	 DWORD PTR _k$228885[ebp], 5
  02218	0f 8d a9 02 00
	00		 jge	 $LN12@SendInfoPa

; 469  : 		{
; 470  : 			rSend.Count[i][k] = this->WinQ[aIndex].Count[i][k];

  0221e	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02221	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  02227	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0222a	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  02231	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _i$228880[ebp]
  02237	6b c0 0a	 imul	 eax, 10			; 0000000aH
  0223a	8d 4c 02 28	 lea	 ecx, DWORD PTR [edx+eax+40]
  0223e	8b 95 58 ff ff
	ff		 mov	 edx, DWORD PTR _i$228880[ebp]
  02244	6b d2 0a	 imul	 edx, 10			; 0000000aH
  02247	8d 84 15 62 ff
	ff ff		 lea	 eax, DWORD PTR _rSend$[ebp+edx+6]
  0224e	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR _k$228885[ebp]
  02254	8b b5 50 ff ff
	ff		 mov	 esi, DWORD PTR _k$228885[ebp]
  0225a	66 8b 0c 71	 mov	 cx, WORD PTR [ecx+esi*2]
  0225e	66 89 0c 50	 mov	 WORD PTR [eax+edx*2], cx

; 471  : 
; 472  : 			if(this->WinQ[aIndex].Count[i][k] < this->Data[i][n].MissionLvL[k])

  02262	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02265	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  0226b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0226e	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  02275	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _i$228880[ebp]
  0227b	6b c0 0a	 imul	 eax, 10			; 0000000aH
  0227e	8d 4c 02 28	 lea	 ecx, DWORD PTR [edx+eax+40]
  02282	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR _k$228885[ebp]
  02288	0f bf 04 51	 movsx	 eax, WORD PTR [ecx+edx*2]
  0228c	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _i$228880[ebp]
  02292	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  02298	03 4d f8	 add	 ecx, DWORD PTR _this$[ebp]
  0229b	8b 95 54 ff ff
	ff		 mov	 edx, DWORD PTR _n$228884[ebp]
  022a1	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  022a7	03 ca		 add	 ecx, edx
  022a9	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR _k$228885[ebp]
  022af	3b 44 91 64	 cmp	 eax, DWORD PTR [ecx+edx*4+100]
  022b3	7d 19		 jge	 SHORT $LN11@SendInfoPa

; 473  : 			{
; 474  : 				rSend.Check[i][k] = 0;

  022b5	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _i$228880[ebp]
  022bb	6b c0 05	 imul	 eax, 5
  022be	8d 4c 05 c6	 lea	 ecx, DWORD PTR _rSend$[ebp+eax+106]
  022c2	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR _k$228885[ebp]
  022c8	c6 04 11 00	 mov	 BYTE PTR [ecx+edx], 0

; 475  : 			}
; 476  : 			else

  022cc	eb 17		 jmp	 SHORT $LN10@SendInfoPa
$LN11@SendInfoPa:

; 477  : 			{
; 478  : 				rSend.Check[i][k] = 1;

  022ce	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _i$228880[ebp]
  022d4	6b c0 05	 imul	 eax, 5
  022d7	8d 4c 05 c6	 lea	 ecx, DWORD PTR _rSend$[ebp+eax+106]
  022db	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR _k$228885[ebp]
  022e1	c6 04 11 01	 mov	 BYTE PTR [ecx+edx], 1
$LN10@SendInfoPa:

; 479  : 			}
; 480  : 
; 481  : 			if(this->Data[i][n].MissionType[k] == 1)	//Kill Mission

  022e5	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _i$228880[ebp]
  022eb	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  022f1	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  022f4	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR _n$228884[ebp]
  022fa	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02300	03 c1		 add	 eax, ecx
  02302	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR _k$228885[ebp]
  02308	83 7c 90 3c 01	 cmp	 DWORD PTR [eax+edx*4+60], 1
  0230d	0f 85 83 00 00
	00		 jne	 $LN9@SendInfoPa

; 482  : 			{
; 483  : 				if(this->WinQ[aIndex].Count[i][k] < this->Data[i][n].MissionLvL[k])

  02313	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02316	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  0231c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0231f	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  02326	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _i$228880[ebp]
  0232c	6b c0 0a	 imul	 eax, 10			; 0000000aH
  0232f	8d 4c 02 28	 lea	 ecx, DWORD PTR [edx+eax+40]
  02333	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR _k$228885[ebp]
  02339	0f bf 04 51	 movsx	 eax, WORD PTR [ecx+edx*2]
  0233d	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _i$228880[ebp]
  02343	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  02349	03 4d f8	 add	 ecx, DWORD PTR _this$[ebp]
  0234c	8b 95 54 ff ff
	ff		 mov	 edx, DWORD PTR _n$228884[ebp]
  02352	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  02358	03 ca		 add	 ecx, edx
  0235a	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR _k$228885[ebp]
  02360	3b 44 91 64	 cmp	 eax, DWORD PTR [ecx+edx*4+100]
  02364	7d 19		 jge	 SHORT $LN8@SendInfoPa

; 484  : 				{
; 485  : 					rSend.Check[i][k] = 0;

  02366	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _i$228880[ebp]
  0236c	6b c0 05	 imul	 eax, 5
  0236f	8d 4c 05 c6	 lea	 ecx, DWORD PTR _rSend$[ebp+eax+106]
  02373	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR _k$228885[ebp]
  02379	c6 04 11 00	 mov	 BYTE PTR [ecx+edx], 0

; 486  : 				}
; 487  : 				else

  0237d	eb 17		 jmp	 SHORT $LN9@SendInfoPa
$LN8@SendInfoPa:

; 488  : 				{
; 489  : 					rSend.Check[i][k] = 1;

  0237f	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _i$228880[ebp]
  02385	6b c0 05	 imul	 eax, 5
  02388	8d 4c 05 c6	 lea	 ecx, DWORD PTR _rSend$[ebp+eax+106]
  0238c	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR _k$228885[ebp]
  02392	c6 04 11 01	 mov	 BYTE PTR [ecx+edx], 1
$LN9@SendInfoPa:

; 490  : 				}
; 491  : 			}
; 492  : 
; 493  : 			if(this->Data[i][n].MissionType[k] == 2)	//Drop Mission

  02396	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _i$228880[ebp]
  0239c	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  023a2	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  023a5	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR _n$228884[ebp]
  023ab	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  023b1	03 c1		 add	 eax, ecx
  023b3	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR _k$228885[ebp]
  023b9	83 7c 90 3c 02	 cmp	 DWORD PTR [eax+edx*4+60], 2
  023be	0f 85 83 00 00
	00		 jne	 $LN6@SendInfoPa

; 494  : 			{
; 495  : 				if(this->WinQ[aIndex].Count[i][k] < this->Data[i][n].MissionLvL[k])

  023c4	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  023c7	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  023cd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  023d0	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  023d7	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _i$228880[ebp]
  023dd	6b c0 0a	 imul	 eax, 10			; 0000000aH
  023e0	8d 4c 02 28	 lea	 ecx, DWORD PTR [edx+eax+40]
  023e4	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR _k$228885[ebp]
  023ea	0f bf 04 51	 movsx	 eax, WORD PTR [ecx+edx*2]
  023ee	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _i$228880[ebp]
  023f4	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  023fa	03 4d f8	 add	 ecx, DWORD PTR _this$[ebp]
  023fd	8b 95 54 ff ff
	ff		 mov	 edx, DWORD PTR _n$228884[ebp]
  02403	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  02409	03 ca		 add	 ecx, edx
  0240b	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR _k$228885[ebp]
  02411	3b 44 91 64	 cmp	 eax, DWORD PTR [ecx+edx*4+100]
  02415	7d 19		 jge	 SHORT $LN5@SendInfoPa

; 496  : 				{
; 497  : 					rSend.Check[i][k] = 0;

  02417	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _i$228880[ebp]
  0241d	6b c0 05	 imul	 eax, 5
  02420	8d 4c 05 c6	 lea	 ecx, DWORD PTR _rSend$[ebp+eax+106]
  02424	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR _k$228885[ebp]
  0242a	c6 04 11 00	 mov	 BYTE PTR [ecx+edx], 0

; 498  : 				}
; 499  : 				else

  0242e	eb 17		 jmp	 SHORT $LN6@SendInfoPa
$LN5@SendInfoPa:

; 500  : 				{
; 501  : 					rSend.Check[i][k] = 1;

  02430	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _i$228880[ebp]
  02436	6b c0 05	 imul	 eax, 5
  02439	8d 4c 05 c6	 lea	 ecx, DWORD PTR _rSend$[ebp+eax+106]
  0243d	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR _k$228885[ebp]
  02443	c6 04 11 01	 mov	 BYTE PTR [ecx+edx], 1
$LN6@SendInfoPa:

; 502  : 				}
; 503  : 			}
; 504  : 
; 505  : 			if(this->Data[i][n].MissionType[k] == 3)	//Item Mission

  02447	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _i$228880[ebp]
  0244d	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02453	03 45 f8	 add	 eax, DWORD PTR _this$[ebp]
  02456	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR _n$228884[ebp]
  0245c	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02462	03 c1		 add	 eax, ecx
  02464	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR _k$228885[ebp]
  0246a	83 7c 90 3c 03	 cmp	 DWORD PTR [eax+edx*4+60], 3
  0246f	75 51		 jne	 SHORT $LN3@SendInfoPa

; 506  : 			{
; 507  : 
; 508  : 				if(!CheckItemUser(aIndex, i, k))

  02471	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _k$228885[ebp]
  02477	50		 push	 eax
  02478	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _i$228880[ebp]
  0247e	51		 push	 ecx
  0247f	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  02482	52		 push	 edx
  02483	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  02486	e8 00 00 00 00	 call	 ?CheckItemUser@cWinQuestSystem@@QAE_NHHH@Z ; cWinQuestSystem::CheckItemUser
  0248b	0f b6 c0	 movzx	 eax, al
  0248e	85 c0		 test	 eax, eax
  02490	75 19		 jne	 SHORT $LN2@SendInfoPa

; 509  : 				{
; 510  : 					rSend.Check[i][k] = 0;

  02492	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _i$228880[ebp]
  02498	6b c0 05	 imul	 eax, 5
  0249b	8d 4c 05 c6	 lea	 ecx, DWORD PTR _rSend$[ebp+eax+106]
  0249f	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR _k$228885[ebp]
  024a5	c6 04 11 00	 mov	 BYTE PTR [ecx+edx], 0

; 511  : 				}
; 512  : 				else

  024a9	eb 17		 jmp	 SHORT $LN3@SendInfoPa
$LN2@SendInfoPa:

; 513  : 				{
; 514  : 					rSend.Check[i][k] = 1;

  024ab	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _i$228880[ebp]
  024b1	6b c0 05	 imul	 eax, 5
  024b4	8d 4c 05 c6	 lea	 ecx, DWORD PTR _rSend$[ebp+eax+106]
  024b8	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR _k$228885[ebp]
  024be	c6 04 11 01	 mov	 BYTE PTR [ecx+edx], 1
$LN3@SendInfoPa:

; 515  : 				}
; 516  : 			}
; 517  : 
; 518  : 		}

  024c2	e9 3b fd ff ff	 jmp	 $LN13@SendInfoPa
$LN12@SendInfoPa:

; 519  : 	}

  024c7	e9 ea fc ff ff	 jmp	 $LN16@SendInfoPa
$LN15@SendInfoPa:

; 520  : 
; 521  : 	DataSend(aIndex,(LPBYTE)&rSend,sizeof(rSend));

  024cc	68 9c 00 00 00	 push	 156			; 0000009cH
  024d1	8d 85 5c ff ff
	ff		 lea	 eax, DWORD PTR _rSend$[ebp]
  024d7	50		 push	 eax
  024d8	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  024db	51		 push	 ecx
  024dc	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  024e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 522  : }

  024e4	5f		 pop	 edi
  024e5	5e		 pop	 esi
  024e6	5b		 pop	 ebx
  024e7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  024ea	33 cd		 xor	 ecx, ebp
  024ec	e8 00 00 00 00	 call	 @__security_check_cookie@4
  024f1	8b e5		 mov	 esp, ebp
  024f3	5d		 pop	 ebp
  024f4	c2 04 00	 ret	 4
?SendInfoPacket@cWinQuestSystem@@QAEXH@Z ENDP		; cWinQuestSystem::SendInfoPacket
_TEXT	ENDS
PUBLIC	?SendWindowsClose@cWinQuestSystem@@QAEXH@Z	; cWinQuestSystem::SendWindowsClose
PUBLIC	?RecvPacket@cWinQuestSystem@@QAEXHPAUCGSendQuestResult@@@Z ; cWinQuestSystem::RecvPacket
EXTRN	?gObjDeleteItemsCount@@YAHHFFH@Z:PROC		; gObjDeleteItemsCount
EXTRN	?ExUserDataSend@@YAXH@Z:PROC			; ExUserDataSend
EXTRN	?GDSaveUserInfo@GameShop@@QAEXH@Z:PROC		; GameShop::GDSaveUserInfo
EXTRN	?gGameShop@@3VGameShop@@A:BYTE			; gGameShop
EXTRN	?GCMoneySend@@YAXHK@Z:PROC			; GCMoneySend
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_k$228946 = -28						; size = 4
_k$228922 = -24						; size = 4
_k$228911 = -20						; size = 4
_n$ = -16						; size = 4
_i$ = -12						; size = 4
_lpObj$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_Date$ = 12						; size = 4
?RecvPacket@cWinQuestSystem@@QAEXHPAUCGSendQuestResult@@@Z PROC ; cWinQuestSystem::RecvPacket
; _this$ = ecx

; 527  : {

  02500	55		 push	 ebp
  02501	8b ec		 mov	 ebp, esp
  02503	83 ec 5c	 sub	 esp, 92			; 0000005cH
  02506	53		 push	 ebx
  02507	56		 push	 esi
  02508	57		 push	 edi
  02509	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 528  : 	if(!this->Enable) return;

  0250c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0250f	0f b6 88 a8 f0
	89 00		 movzx	 ecx, BYTE PTR [eax+9040040]
  02516	85 c9		 test	 ecx, ecx
  02518	75 05		 jne	 SHORT $LN38@RecvPacket
  0251a	e9 35 0c 00 00	 jmp	 $LN39@RecvPacket
$LN38@RecvPacket:

; 529  : 
; 530  : 	LPOBJ lpObj = &gObj[aIndex];

  0251f	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02522	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  02528	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0252e	89 45 f8	 mov	 DWORD PTR _lpObj$[ebp], eax

; 531  : 
; 532  : 	int i = Date->Num;

  02531	8b 45 0c	 mov	 eax, DWORD PTR _Date$[ebp]
  02534	0f b6 48 05	 movzx	 ecx, BYTE PTR [eax+5]
  02538	89 4d f4	 mov	 DWORD PTR _i$[ebp], ecx

; 533  : 	int n = this->WinQ[aIndex].Num[i];

  0253b	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0253e	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  02544	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02547	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  0254e	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02551	0f bf 4c 42 14	 movsx	 ecx, WORD PTR [edx+eax*2+20]
  02556	89 4d f0	 mov	 DWORD PTR _n$[ebp], ecx

; 534  : 
; 535  : 	//-----------------------------------------------------------------------------------
; 536  : 	//	Quest Price Update
; 537  : 	//-----------------------------------------------------------------------------------
; 538  : 
; 539  : 	if(Date->Result == 1)

  02559	8b 45 0c	 mov	 eax, DWORD PTR _Date$[ebp]
  0255c	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  02560	83 f9 01	 cmp	 ecx, 1
  02563	0f 85 c9 02 00
	00		 jne	 $LN37@RecvPacket

; 540  : 	{
; 541  : 		for(int k = 0; k < 5; k++)

  02569	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _k$228911[ebp], 0
  02570	eb 09		 jmp	 SHORT $LN36@RecvPacket
$LN35@RecvPacket:
  02572	8b 45 ec	 mov	 eax, DWORD PTR _k$228911[ebp]
  02575	83 c0 01	 add	 eax, 1
  02578	89 45 ec	 mov	 DWORD PTR _k$228911[ebp], eax
$LN36@RecvPacket:
  0257b	83 7d ec 05	 cmp	 DWORD PTR _k$228911[ebp], 5
  0257f	0f 8d 7c 02 00
	00		 jge	 $LN34@RecvPacket

; 542  : 		{
; 543  : 			//0 - off; 1 - zen; 2 - WcoinC; 3 - WcoinP; 4 - Goblin; 5 - Cred; 6 - Item
; 544  : 			if(this->Data[i][n].PriceType[k] == 1) //1 - zen

  02585	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02588	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  0258e	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02591	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02594	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  0259a	03 c1		 add	 eax, ecx
  0259c	8b 55 ec	 mov	 edx, DWORD PTR _k$228911[ebp]
  0259f	83 bc 90 2c 01
	00 00 01	 cmp	 DWORD PTR [eax+edx*4+300], 1
  025a7	75 49		 jne	 SHORT $LN33@RecvPacket

; 545  : 			{
; 546  : 				lpObj->Money -= this->Data[i][n].PriceMain[k];

  025a9	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  025ac	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  025b2	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  025b5	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  025b8	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  025be	03 c1		 add	 eax, ecx
  025c0	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  025c3	8b 4d ec	 mov	 ecx, DWORD PTR _k$228911[ebp]
  025c6	8b 92 f0 00 00
	00		 mov	 edx, DWORD PTR [edx+240]
  025cc	2b 94 88 40 01
	00 00		 sub	 edx, DWORD PTR [eax+ecx*4+320]
  025d3	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  025d6	89 90 f0 00 00
	00		 mov	 DWORD PTR [eax+240], edx

; 547  : 				GCMoneySend(aIndex,lpObj->Money);

  025dc	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  025df	8b 88 f0 00 00
	00		 mov	 ecx, DWORD PTR [eax+240]
  025e5	51		 push	 ecx
  025e6	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  025e9	52		 push	 edx
  025ea	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend
  025ef	83 c4 08	 add	 esp, 8
$LN33@RecvPacket:

; 548  : 			}
; 549  : 			if(this->Data[i][n].PriceType[k] == 2) //2 - WcoinC

  025f2	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  025f5	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  025fb	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  025fe	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02601	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02607	03 c1		 add	 eax, ecx
  02609	8b 55 ec	 mov	 edx, DWORD PTR _k$228911[ebp]
  0260c	83 bc 90 2c 01
	00 00 02	 cmp	 DWORD PTR [eax+edx*4+300], 2
  02614	75 41		 jne	 SHORT $LN32@RecvPacket

; 550  : 			{
; 551  : 				lpObj->GameShop.WCoinC -= this->Data[i][n].PriceMain[k];

  02616	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02619	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  0261f	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02622	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02625	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  0262b	03 c1		 add	 eax, ecx
  0262d	8b 55 ec	 mov	 edx, DWORD PTR _k$228911[ebp]
  02630	db 84 90 40 01
	00 00		 fild	 DWORD PTR [eax+edx*4+320]
  02637	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0263a	dc a8 00 23 00
	00		 fsubr	 QWORD PTR [eax+8960]
  02640	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  02643	dd 99 00 23 00
	00		 fstp	 QWORD PTR [ecx+8960]

; 552  : 				gGameShop.GDSaveUserInfo(aIndex);

  02649	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0264c	50		 push	 eax
  0264d	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  02652	e8 00 00 00 00	 call	 ?GDSaveUserInfo@GameShop@@QAEXH@Z ; GameShop::GDSaveUserInfo
$LN32@RecvPacket:

; 553  : 			}
; 554  : 			if(this->Data[i][n].PriceType[k] == 3) //3 - WcoinP

  02657	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  0265a	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02660	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02663	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02666	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  0266c	03 c1		 add	 eax, ecx
  0266e	8b 55 ec	 mov	 edx, DWORD PTR _k$228911[ebp]
  02671	83 bc 90 2c 01
	00 00 03	 cmp	 DWORD PTR [eax+edx*4+300], 3
  02679	75 41		 jne	 SHORT $LN31@RecvPacket

; 555  : 			{
; 556  : 				lpObj->GameShop.WCoinP -= this->Data[i][n].PriceMain[k];

  0267b	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  0267e	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02684	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02687	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  0268a	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02690	03 c1		 add	 eax, ecx
  02692	8b 55 ec	 mov	 edx, DWORD PTR _k$228911[ebp]
  02695	db 84 90 40 01
	00 00		 fild	 DWORD PTR [eax+edx*4+320]
  0269c	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0269f	dc a8 f8 22 00
	00		 fsubr	 QWORD PTR [eax+8952]
  026a5	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  026a8	dd 99 f8 22 00
	00		 fstp	 QWORD PTR [ecx+8952]

; 557  : 				gGameShop.GDSaveUserInfo(aIndex);

  026ae	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  026b1	50		 push	 eax
  026b2	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  026b7	e8 00 00 00 00	 call	 ?GDSaveUserInfo@GameShop@@QAEXH@Z ; GameShop::GDSaveUserInfo
$LN31@RecvPacket:

; 558  : 			}
; 559  : 			if(this->Data[i][n].PriceType[k] == 4) //4 - Goblin

  026bc	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  026bf	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  026c5	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  026c8	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  026cb	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  026d1	03 c1		 add	 eax, ecx
  026d3	8b 55 ec	 mov	 edx, DWORD PTR _k$228911[ebp]
  026d6	83 bc 90 2c 01
	00 00 04	 cmp	 DWORD PTR [eax+edx*4+300], 4
  026de	75 41		 jne	 SHORT $LN30@RecvPacket

; 560  : 			{
; 561  : 				lpObj->GameShop.GoblinPoint -= this->Data[i][n].PriceMain[k];

  026e0	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  026e3	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  026e9	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  026ec	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  026ef	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  026f5	03 c1		 add	 eax, ecx
  026f7	8b 55 ec	 mov	 edx, DWORD PTR _k$228911[ebp]
  026fa	db 84 90 40 01
	00 00		 fild	 DWORD PTR [eax+edx*4+320]
  02701	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  02704	dc a8 08 23 00
	00		 fsubr	 QWORD PTR [eax+8968]
  0270a	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0270d	dd 99 08 23 00
	00		 fstp	 QWORD PTR [ecx+8968]

; 562  : 				gGameShop.GDSaveUserInfo(aIndex);

  02713	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02716	50		 push	 eax
  02717	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  0271c	e8 00 00 00 00	 call	 ?GDSaveUserInfo@GameShop@@QAEXH@Z ; GameShop::GDSaveUserInfo
$LN30@RecvPacket:

; 563  : 			}
; 564  : 			if(this->Data[i][n].PriceType[k] == 5) //5 - Cred

  02721	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02724	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  0272a	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  0272d	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02730	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02736	03 c1		 add	 eax, ecx
  02738	8b 55 ec	 mov	 edx, DWORD PTR _k$228911[ebp]
  0273b	83 bc 90 2c 01
	00 00 05	 cmp	 DWORD PTR [eax+edx*4+300], 5
  02743	75 3f		 jne	 SHORT $LN29@RecvPacket

; 565  : 			{
; 566  : 				lpObj->ExCred -= this->Data[i][n].PriceMain[k];

  02745	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02748	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  0274e	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02751	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02754	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  0275a	03 c1		 add	 eax, ecx
  0275c	8b 55 ec	 mov	 edx, DWORD PTR _k$228911[ebp]
  0275f	db 84 90 40 01
	00 00		 fild	 DWORD PTR [eax+edx*4+320]
  02766	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  02769	d8 a8 a8 22 00
	00		 fsubr	 DWORD PTR [eax+8872]
  0276f	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  02772	d9 99 a8 22 00
	00		 fstp	 DWORD PTR [ecx+8872]

; 567  : 				ExUserDataSend(aIndex);

  02778	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0277b	50		 push	 eax
  0277c	e8 00 00 00 00	 call	 ?ExUserDataSend@@YAXH@Z	; ExUserDataSend
  02781	83 c4 04	 add	 esp, 4
$LN29@RecvPacket:

; 568  : 
; 569  : 			}
; 570  : 			if(this->Data[i][n].PriceType[k] == 6) //6 - Item

  02784	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02787	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  0278d	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02790	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02793	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02799	03 c1		 add	 eax, ecx
  0279b	8b 55 ec	 mov	 edx, DWORD PTR _k$228911[ebp]
  0279e	83 bc 90 2c 01
	00 00 06	 cmp	 DWORD PTR [eax+edx*4+300], 6
  027a6	75 54		 jne	 SHORT $LN28@RecvPacket

; 571  : 			{
; 572  : 				gObjDeleteItemsCount(aIndex,this->Data[i][n].PriceMain[k],this->Data[i][n].PriceLvL[k],1);

  027a8	6a 01		 push	 1
  027aa	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  027ad	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  027b3	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  027b6	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  027b9	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  027bf	03 c1		 add	 eax, ecx
  027c1	8b 55 ec	 mov	 edx, DWORD PTR _k$228911[ebp]
  027c4	0f b7 84 90 54
	01 00 00	 movzx	 eax, WORD PTR [eax+edx*4+340]
  027cc	50		 push	 eax
  027cd	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  027d0	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  027d6	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  027d9	8b 55 f0	 mov	 edx, DWORD PTR _n$[ebp]
  027dc	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  027e2	03 ca		 add	 ecx, edx
  027e4	8b 45 ec	 mov	 eax, DWORD PTR _k$228911[ebp]
  027e7	0f b7 8c 81 40
	01 00 00	 movzx	 ecx, WORD PTR [ecx+eax*4+320]
  027ef	51		 push	 ecx
  027f0	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  027f3	52		 push	 edx
  027f4	e8 00 00 00 00	 call	 ?gObjDeleteItemsCount@@YAHHFFH@Z ; gObjDeleteItemsCount
  027f9	83 c4 10	 add	 esp, 16			; 00000010H
$LN28@RecvPacket:

; 573  : 			}
; 574  : 		}

  027fc	e9 71 fd ff ff	 jmp	 $LN35@RecvPacket
$LN34@RecvPacket:

; 575  : 
; 576  : 		this->WinQ[aIndex].Start[Date->Num] = 1;

  02801	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02804	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  0280a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0280d	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  02814	8b 45 0c	 mov	 eax, DWORD PTR _Date$[ebp]
  02817	0f b6 48 05	 movzx	 ecx, BYTE PTR [eax+5]
  0281b	b8 01 00 00 00	 mov	 eax, 1
  02820	66 89 04 4a	 mov	 WORD PTR [edx+ecx*2], ax

; 577  : 
; 578  : 		this->SendPacket(aIndex,1);	//Need ReCode

  02824	6a 01		 push	 1
  02826	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02829	50		 push	 eax
  0282a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0282d	e8 00 00 00 00	 call	 ?SendPacket@cWinQuestSystem@@QAEXHE@Z ; cWinQuestSystem::SendPacket
$LN37@RecvPacket:

; 579  : 
; 580  : 	}
; 581  : 
; 582  : 	//-----------------------------------------------------------------------------------
; 583  : 	//	Quest Reward Update
; 584  : 	//-----------------------------------------------------------------------------------
; 585  : 
; 586  : 	if(Date->Result == 2)

  02832	8b 45 0c	 mov	 eax, DWORD PTR _Date$[ebp]
  02835	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  02839	83 f9 02	 cmp	 ecx, 2
  0283c	0f 85 12 09 00
	00		 jne	 $LN27@RecvPacket

; 587  : 	{
; 588  : 		for(int k = 0; k < 5; k++)

  02842	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _k$228922[ebp], 0
  02849	eb 09		 jmp	 SHORT $LN26@RecvPacket
$LN25@RecvPacket:
  0284b	8b 45 e8	 mov	 eax, DWORD PTR _k$228922[ebp]
  0284e	83 c0 01	 add	 eax, 1
  02851	89 45 e8	 mov	 DWORD PTR _k$228922[ebp], eax
$LN26@RecvPacket:
  02854	83 7d e8 05	 cmp	 DWORD PTR _k$228922[ebp], 5
  02858	0f 8d 52 08 00
	00		 jge	 $LN24@RecvPacket

; 589  : 		{
; 590  : 			//0-off;1-zen;2-ExFreePoints;3-WcoinC;4-WcoinP;5-Goblin;6-Cred;7-Damage;8-Defence;9-Life;10-SD;11-CritDmg;12-ExlDmg;13-Double;14-Ignore;15-Ref;16-Exp;17-Drop;18-Item
; 591  : 
; 592  : 			if(this->Data[i][n].RewardType[k] == 1)	//1-zen

  0285e	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02861	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02867	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  0286a	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  0286d	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02873	03 c1		 add	 eax, ecx
  02875	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02878	83 bc 90 b4 00
	00 00 01	 cmp	 DWORD PTR [eax+edx*4+180], 1
  02880	0f 85 8a 00 00
	00		 jne	 $LN23@RecvPacket

; 593  : 			{
; 594  : 				if(lpObj->Money + this->Data[i][n].RewardMain[k] > 2000000000 )

  02886	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02889	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  0288f	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02892	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02895	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  0289b	03 c1		 add	 eax, ecx
  0289d	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  028a0	8b 8a f0 00 00
	00		 mov	 ecx, DWORD PTR [edx+240]
  028a6	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  028a9	03 8c 90 c8 00
	00 00		 add	 ecx, DWORD PTR [eax+edx*4+200]
  028b0	81 f9 00 94 35
	77		 cmp	 ecx, 2000000000		; 77359400H
  028b6	7e 0f		 jle	 SHORT $LN22@RecvPacket

; 595  : 				{
; 596  : 					lpObj->Money = 2000000000;

  028b8	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  028bb	c7 80 f0 00 00
	00 00 94 35 77	 mov	 DWORD PTR [eax+240], 2000000000 ; 77359400H

; 597  : 				}
; 598  : 				else

  028c5	eb 33		 jmp	 SHORT $LN21@RecvPacket
$LN22@RecvPacket:

; 599  : 				{
; 600  : 					lpObj->Money += this->Data[i][n].RewardMain[k];

  028c7	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  028ca	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  028d0	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  028d3	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  028d6	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  028dc	03 c1		 add	 eax, ecx
  028de	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  028e1	8b 8a f0 00 00
	00		 mov	 ecx, DWORD PTR [edx+240]
  028e7	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  028ea	03 8c 90 c8 00
	00 00		 add	 ecx, DWORD PTR [eax+edx*4+200]
  028f1	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  028f4	89 88 f0 00 00
	00		 mov	 DWORD PTR [eax+240], ecx
$LN21@RecvPacket:

; 601  : 				}
; 602  : 				GCMoneySend(aIndex,lpObj->Money);

  028fa	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  028fd	8b 88 f0 00 00
	00		 mov	 ecx, DWORD PTR [eax+240]
  02903	51		 push	 ecx
  02904	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  02907	52		 push	 edx
  02908	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend
  0290d	83 c4 08	 add	 esp, 8
$LN23@RecvPacket:

; 603  : 			}
; 604  : 			if(this->Data[i][n].RewardType[k] == 2)	//2-ExFreePoints

  02910	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02913	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02919	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  0291c	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  0291f	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02925	03 c1		 add	 eax, ecx
  02927	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  0292a	83 bc 90 b4 00
	00 00 02	 cmp	 DWORD PTR [eax+edx*4+180], 2
  02932	75 33		 jne	 SHORT $LN20@RecvPacket

; 605  : 			{
; 606  : 				lpObj->ExFreePoints += this->Data[i][n].RewardMain[k];

  02934	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02937	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  0293d	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02940	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02943	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02949	03 c1		 add	 eax, ecx
  0294b	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0294e	8b 8a 8c 22 00
	00		 mov	 ecx, DWORD PTR [edx+8844]
  02954	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02957	03 8c 90 c8 00
	00 00		 add	 ecx, DWORD PTR [eax+edx*4+200]
  0295e	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  02961	89 88 8c 22 00
	00		 mov	 DWORD PTR [eax+8844], ecx
$LN20@RecvPacket:

; 607  : 			}
; 608  : 			if(this->Data[i][n].RewardType[k] == 3)	//3-WcoinC

  02967	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  0296a	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02970	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02973	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02976	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  0297c	03 c1		 add	 eax, ecx
  0297e	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02981	83 bc 90 b4 00
	00 00 03	 cmp	 DWORD PTR [eax+edx*4+180], 3
  02989	75 41		 jne	 SHORT $LN19@RecvPacket

; 609  : 			{
; 610  : 				lpObj->GameShop.WCoinC += this->Data[i][n].RewardMain[k];

  0298b	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  0298e	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02994	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02997	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  0299a	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  029a0	03 c1		 add	 eax, ecx
  029a2	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  029a5	db 84 90 c8 00
	00 00		 fild	 DWORD PTR [eax+edx*4+200]
  029ac	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  029af	dc 80 00 23 00
	00		 fadd	 QWORD PTR [eax+8960]
  029b5	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  029b8	dd 99 00 23 00
	00		 fstp	 QWORD PTR [ecx+8960]

; 611  : 				gGameShop.GDSaveUserInfo(aIndex);

  029be	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  029c1	50		 push	 eax
  029c2	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  029c7	e8 00 00 00 00	 call	 ?GDSaveUserInfo@GameShop@@QAEXH@Z ; GameShop::GDSaveUserInfo
$LN19@RecvPacket:

; 612  : 			}
; 613  : 			if(this->Data[i][n].RewardType[k] == 4)	//4-WcoinP

  029cc	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  029cf	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  029d5	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  029d8	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  029db	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  029e1	03 c1		 add	 eax, ecx
  029e3	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  029e6	83 bc 90 b4 00
	00 00 04	 cmp	 DWORD PTR [eax+edx*4+180], 4
  029ee	75 41		 jne	 SHORT $LN18@RecvPacket

; 614  : 			{
; 615  : 				lpObj->GameShop.WCoinP += this->Data[i][n].RewardMain[k];

  029f0	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  029f3	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  029f9	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  029fc	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  029ff	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02a05	03 c1		 add	 eax, ecx
  02a07	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02a0a	db 84 90 c8 00
	00 00		 fild	 DWORD PTR [eax+edx*4+200]
  02a11	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  02a14	dc 80 f8 22 00
	00		 fadd	 QWORD PTR [eax+8952]
  02a1a	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  02a1d	dd 99 f8 22 00
	00		 fstp	 QWORD PTR [ecx+8952]

; 616  : 				gGameShop.GDSaveUserInfo(aIndex);

  02a23	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02a26	50		 push	 eax
  02a27	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  02a2c	e8 00 00 00 00	 call	 ?GDSaveUserInfo@GameShop@@QAEXH@Z ; GameShop::GDSaveUserInfo
$LN18@RecvPacket:

; 617  : 			}
; 618  : 			if(this->Data[i][n].RewardType[k] == 5)	//5-WcoinP

  02a31	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02a34	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02a3a	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02a3d	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02a40	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02a46	03 c1		 add	 eax, ecx
  02a48	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02a4b	83 bc 90 b4 00
	00 00 05	 cmp	 DWORD PTR [eax+edx*4+180], 5
  02a53	75 41		 jne	 SHORT $LN17@RecvPacket

; 619  : 			{
; 620  : 				lpObj->GameShop.GoblinPoint += this->Data[i][n].RewardMain[k];

  02a55	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02a58	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02a5e	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02a61	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02a64	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02a6a	03 c1		 add	 eax, ecx
  02a6c	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02a6f	db 84 90 c8 00
	00 00		 fild	 DWORD PTR [eax+edx*4+200]
  02a76	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  02a79	dc 80 08 23 00
	00		 fadd	 QWORD PTR [eax+8968]
  02a7f	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  02a82	dd 99 08 23 00
	00		 fstp	 QWORD PTR [ecx+8968]

; 621  : 				gGameShop.GDSaveUserInfo(aIndex);

  02a88	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02a8b	50		 push	 eax
  02a8c	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  02a91	e8 00 00 00 00	 call	 ?GDSaveUserInfo@GameShop@@QAEXH@Z ; GameShop::GDSaveUserInfo
$LN17@RecvPacket:

; 622  : 			}
; 623  : 			if(this->Data[i][n].RewardType[k] == 6)	//6-Cred

  02a96	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02a99	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02a9f	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02aa2	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02aa5	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02aab	03 c1		 add	 eax, ecx
  02aad	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02ab0	83 bc 90 b4 00
	00 00 06	 cmp	 DWORD PTR [eax+edx*4+180], 6
  02ab8	75 3f		 jne	 SHORT $LN16@RecvPacket

; 624  : 			{
; 625  : 				lpObj->GameShop.GoblinPoint += this->Data[i][n].RewardMain[k];

  02aba	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02abd	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02ac3	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02ac6	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02ac9	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02acf	03 c1		 add	 eax, ecx
  02ad1	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02ad4	db 84 90 c8 00
	00 00		 fild	 DWORD PTR [eax+edx*4+200]
  02adb	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  02ade	dc 80 08 23 00
	00		 fadd	 QWORD PTR [eax+8968]
  02ae4	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  02ae7	dd 99 08 23 00
	00		 fstp	 QWORD PTR [ecx+8968]

; 626  : 				ExUserDataSend(aIndex);

  02aed	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02af0	50		 push	 eax
  02af1	e8 00 00 00 00	 call	 ?ExUserDataSend@@YAXH@Z	; ExUserDataSend
  02af6	83 c4 04	 add	 esp, 4
$LN16@RecvPacket:

; 627  : 			}
; 628  : 			if(this->Data[i][n].RewardType[k] == 7)	//7-Damage

  02af9	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02afc	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02b02	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02b05	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02b08	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02b0e	03 c1		 add	 eax, ecx
  02b10	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02b13	83 bc 90 b4 00
	00 00 07	 cmp	 DWORD PTR [eax+edx*4+180], 7
  02b1b	75 47		 jne	 SHORT $LN15@RecvPacket

; 629  : 			{
; 630  : 				this->WinQ[aIndex].Damage += this->Data[i][n].RewardMain[k];

  02b1d	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02b20	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  02b26	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  02b29	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  02b2f	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  02b32	8b 55 f0	 mov	 edx, DWORD PTR _n$[ebp]
  02b35	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  02b3b	03 ca		 add	 ecx, edx
  02b3d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02b40	8b 84 02 cc d3
	5f 00		 mov	 eax, DWORD PTR [edx+eax+6280140]
  02b47	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02b4a	03 84 91 c8 00
	00 00		 add	 eax, DWORD PTR [ecx+edx*4+200]
  02b51	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  02b54	69 c9 b8 00 00
	00		 imul	 ecx, 184		; 000000b8H
  02b5a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02b5d	89 84 0a cc d3
	5f 00		 mov	 DWORD PTR [edx+ecx+6280140], eax
$LN15@RecvPacket:

; 631  : 			}	
; 632  : 			if(this->Data[i][n].RewardType[k] == 8)	//8-Defence

  02b64	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02b67	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02b6d	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02b70	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02b73	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02b79	03 c1		 add	 eax, ecx
  02b7b	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02b7e	83 bc 90 b4 00
	00 00 08	 cmp	 DWORD PTR [eax+edx*4+180], 8
  02b86	75 47		 jne	 SHORT $LN14@RecvPacket

; 633  : 			{
; 634  : 				this->WinQ[aIndex].Defence += this->Data[i][n].RewardMain[k];

  02b88	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02b8b	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  02b91	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  02b94	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  02b9a	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  02b9d	8b 55 f0	 mov	 edx, DWORD PTR _n$[ebp]
  02ba0	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  02ba6	03 ca		 add	 ecx, edx
  02ba8	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02bab	8b 84 02 d0 d3
	5f 00		 mov	 eax, DWORD PTR [edx+eax+6280144]
  02bb2	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02bb5	03 84 91 c8 00
	00 00		 add	 eax, DWORD PTR [ecx+edx*4+200]
  02bbc	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  02bbf	69 c9 b8 00 00
	00		 imul	 ecx, 184		; 000000b8H
  02bc5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02bc8	89 84 0a d0 d3
	5f 00		 mov	 DWORD PTR [edx+ecx+6280144], eax
$LN14@RecvPacket:

; 635  : 			}
; 636  : 			if(this->Data[i][n].RewardType[k] == 9)	//9-Life

  02bcf	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02bd2	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02bd8	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02bdb	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02bde	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02be4	03 c1		 add	 eax, ecx
  02be6	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02be9	83 bc 90 b4 00
	00 00 09	 cmp	 DWORD PTR [eax+edx*4+180], 9
  02bf1	75 47		 jne	 SHORT $LN13@RecvPacket

; 637  : 			{
; 638  : 				this->WinQ[aIndex].Life += this->Data[i][n].RewardMain[k];

  02bf3	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02bf6	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  02bfc	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  02bff	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  02c05	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  02c08	8b 55 f0	 mov	 edx, DWORD PTR _n$[ebp]
  02c0b	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  02c11	03 ca		 add	 ecx, edx
  02c13	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02c16	8b 84 02 d4 d3
	5f 00		 mov	 eax, DWORD PTR [edx+eax+6280148]
  02c1d	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02c20	03 84 91 c8 00
	00 00		 add	 eax, DWORD PTR [ecx+edx*4+200]
  02c27	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  02c2a	69 c9 b8 00 00
	00		 imul	 ecx, 184		; 000000b8H
  02c30	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02c33	89 84 0a d4 d3
	5f 00		 mov	 DWORD PTR [edx+ecx+6280148], eax
$LN13@RecvPacket:

; 639  : 			}
; 640  : 			if(this->Data[i][n].RewardType[k] == 10)	//10-SD

  02c3a	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02c3d	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02c43	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02c46	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02c49	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02c4f	03 c1		 add	 eax, ecx
  02c51	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02c54	83 bc 90 b4 00
	00 00 0a	 cmp	 DWORD PTR [eax+edx*4+180], 10 ; 0000000aH
  02c5c	75 47		 jne	 SHORT $LN12@RecvPacket

; 641  : 			{
; 642  : 				this->WinQ[aIndex].SD += this->Data[i][n].RewardMain[k];

  02c5e	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02c61	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  02c67	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  02c6a	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  02c70	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  02c73	8b 55 f0	 mov	 edx, DWORD PTR _n$[ebp]
  02c76	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  02c7c	03 ca		 add	 ecx, edx
  02c7e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02c81	8b 84 02 d8 d3
	5f 00		 mov	 eax, DWORD PTR [edx+eax+6280152]
  02c88	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02c8b	03 84 91 c8 00
	00 00		 add	 eax, DWORD PTR [ecx+edx*4+200]
  02c92	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  02c95	69 c9 b8 00 00
	00		 imul	 ecx, 184		; 000000b8H
  02c9b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02c9e	89 84 0a d8 d3
	5f 00		 mov	 DWORD PTR [edx+ecx+6280152], eax
$LN12@RecvPacket:

; 643  : 			}
; 644  : 			if(this->Data[i][n].RewardType[k] == 11)	//11-CritDmg

  02ca5	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02ca8	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02cae	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02cb1	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02cb4	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02cba	03 c1		 add	 eax, ecx
  02cbc	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02cbf	83 bc 90 b4 00
	00 00 0b	 cmp	 DWORD PTR [eax+edx*4+180], 11 ; 0000000bH
  02cc7	75 47		 jne	 SHORT $LN11@RecvPacket

; 645  : 			{
; 646  : 				this->WinQ[aIndex].Crit += this->Data[i][n].RewardMain[k];

  02cc9	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02ccc	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  02cd2	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  02cd5	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  02cdb	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  02cde	8b 55 f0	 mov	 edx, DWORD PTR _n$[ebp]
  02ce1	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  02ce7	03 ca		 add	 ecx, edx
  02ce9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02cec	8b 84 02 dc d3
	5f 00		 mov	 eax, DWORD PTR [edx+eax+6280156]
  02cf3	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02cf6	03 84 91 c8 00
	00 00		 add	 eax, DWORD PTR [ecx+edx*4+200]
  02cfd	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  02d00	69 c9 b8 00 00
	00		 imul	 ecx, 184		; 000000b8H
  02d06	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02d09	89 84 0a dc d3
	5f 00		 mov	 DWORD PTR [edx+ecx+6280156], eax
$LN11@RecvPacket:

; 647  : 			}
; 648  : 			if(this->Data[i][n].RewardType[k] == 12)	//12-ExlDmg

  02d10	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02d13	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02d19	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02d1c	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02d1f	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02d25	03 c1		 add	 eax, ecx
  02d27	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02d2a	83 bc 90 b4 00
	00 00 0c	 cmp	 DWORD PTR [eax+edx*4+180], 12 ; 0000000cH
  02d32	75 47		 jne	 SHORT $LN10@RecvPacket

; 649  : 			{
; 650  : 				this->WinQ[aIndex].Exel += this->Data[i][n].RewardMain[k];

  02d34	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02d37	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  02d3d	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  02d40	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  02d46	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  02d49	8b 55 f0	 mov	 edx, DWORD PTR _n$[ebp]
  02d4c	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  02d52	03 ca		 add	 ecx, edx
  02d54	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02d57	8b 84 02 e0 d3
	5f 00		 mov	 eax, DWORD PTR [edx+eax+6280160]
  02d5e	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02d61	03 84 91 c8 00
	00 00		 add	 eax, DWORD PTR [ecx+edx*4+200]
  02d68	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  02d6b	69 c9 b8 00 00
	00		 imul	 ecx, 184		; 000000b8H
  02d71	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02d74	89 84 0a e0 d3
	5f 00		 mov	 DWORD PTR [edx+ecx+6280160], eax
$LN10@RecvPacket:

; 651  : 			}
; 652  : 			if(this->Data[i][n].RewardType[k] == 13)	//13-Double

  02d7b	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02d7e	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02d84	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02d87	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02d8a	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02d90	03 c1		 add	 eax, ecx
  02d92	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02d95	83 bc 90 b4 00
	00 00 0d	 cmp	 DWORD PTR [eax+edx*4+180], 13 ; 0000000dH
  02d9d	75 47		 jne	 SHORT $LN9@RecvPacket

; 653  : 			{
; 654  : 				this->WinQ[aIndex].Double += this->Data[i][n].RewardMain[k];

  02d9f	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02da2	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  02da8	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  02dab	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  02db1	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  02db4	8b 55 f0	 mov	 edx, DWORD PTR _n$[ebp]
  02db7	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  02dbd	03 ca		 add	 ecx, edx
  02dbf	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02dc2	8b 84 02 e4 d3
	5f 00		 mov	 eax, DWORD PTR [edx+eax+6280164]
  02dc9	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02dcc	03 84 91 c8 00
	00 00		 add	 eax, DWORD PTR [ecx+edx*4+200]
  02dd3	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  02dd6	69 c9 b8 00 00
	00		 imul	 ecx, 184		; 000000b8H
  02ddc	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02ddf	89 84 0a e4 d3
	5f 00		 mov	 DWORD PTR [edx+ecx+6280164], eax
$LN9@RecvPacket:

; 655  : 			}
; 656  : 			if(this->Data[i][n].RewardType[k] == 14)	//14-Ignore

  02de6	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02de9	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02def	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02df2	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02df5	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02dfb	03 c1		 add	 eax, ecx
  02dfd	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02e00	83 bc 90 b4 00
	00 00 0e	 cmp	 DWORD PTR [eax+edx*4+180], 14 ; 0000000eH
  02e08	75 47		 jne	 SHORT $LN8@RecvPacket

; 657  : 			{
; 658  : 				this->WinQ[aIndex].Ignore += this->Data[i][n].RewardMain[k];

  02e0a	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02e0d	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  02e13	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  02e16	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  02e1c	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  02e1f	8b 55 f0	 mov	 edx, DWORD PTR _n$[ebp]
  02e22	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  02e28	03 ca		 add	 ecx, edx
  02e2a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02e2d	8b 84 02 e8 d3
	5f 00		 mov	 eax, DWORD PTR [edx+eax+6280168]
  02e34	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02e37	03 84 91 c8 00
	00 00		 add	 eax, DWORD PTR [ecx+edx*4+200]
  02e3e	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  02e41	69 c9 b8 00 00
	00		 imul	 ecx, 184		; 000000b8H
  02e47	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02e4a	89 84 0a e8 d3
	5f 00		 mov	 DWORD PTR [edx+ecx+6280168], eax
$LN8@RecvPacket:

; 659  : 			}
; 660  : 			if(this->Data[i][n].RewardType[k] == 15)	//15-Ref

  02e51	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02e54	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02e5a	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02e5d	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02e60	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02e66	03 c1		 add	 eax, ecx
  02e68	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02e6b	83 bc 90 b4 00
	00 00 0f	 cmp	 DWORD PTR [eax+edx*4+180], 15 ; 0000000fH
  02e73	75 47		 jne	 SHORT $LN7@RecvPacket

; 661  : 			{
; 662  : 				this->WinQ[aIndex].Ref += this->Data[i][n].RewardMain[k];

  02e75	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02e78	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  02e7e	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  02e81	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  02e87	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  02e8a	8b 55 f0	 mov	 edx, DWORD PTR _n$[ebp]
  02e8d	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  02e93	03 ca		 add	 ecx, edx
  02e95	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02e98	8b 84 02 ec d3
	5f 00		 mov	 eax, DWORD PTR [edx+eax+6280172]
  02e9f	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02ea2	03 84 91 c8 00
	00 00		 add	 eax, DWORD PTR [ecx+edx*4+200]
  02ea9	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  02eac	69 c9 b8 00 00
	00		 imul	 ecx, 184		; 000000b8H
  02eb2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02eb5	89 84 0a ec d3
	5f 00		 mov	 DWORD PTR [edx+ecx+6280172], eax
$LN7@RecvPacket:

; 663  : 			}
; 664  : 			if(this->Data[i][n].RewardType[k] == 16)	//16-Exp

  02ebc	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02ebf	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02ec5	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02ec8	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02ecb	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02ed1	03 c1		 add	 eax, ecx
  02ed3	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02ed6	83 bc 90 b4 00
	00 00 10	 cmp	 DWORD PTR [eax+edx*4+180], 16 ; 00000010H
  02ede	75 47		 jne	 SHORT $LN6@RecvPacket

; 665  : 			{
; 666  : 				this->WinQ[aIndex].Exp += this->Data[i][n].RewardMain[k];

  02ee0	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02ee3	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  02ee9	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  02eec	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  02ef2	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  02ef5	8b 55 f0	 mov	 edx, DWORD PTR _n$[ebp]
  02ef8	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  02efe	03 ca		 add	 ecx, edx
  02f00	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02f03	8b 84 02 f0 d3
	5f 00		 mov	 eax, DWORD PTR [edx+eax+6280176]
  02f0a	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02f0d	03 84 91 c8 00
	00 00		 add	 eax, DWORD PTR [ecx+edx*4+200]
  02f14	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  02f17	69 c9 b8 00 00
	00		 imul	 ecx, 184		; 000000b8H
  02f1d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02f20	89 84 0a f0 d3
	5f 00		 mov	 DWORD PTR [edx+ecx+6280176], eax
$LN6@RecvPacket:

; 667  : 			}
; 668  : 			if(this->Data[i][n].RewardType[k] == 17)	//17-Drop

  02f27	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02f2a	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02f30	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02f33	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02f36	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02f3c	03 c1		 add	 eax, ecx
  02f3e	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02f41	83 bc 90 b4 00
	00 00 11	 cmp	 DWORD PTR [eax+edx*4+180], 17 ; 00000011H
  02f49	75 47		 jne	 SHORT $LN5@RecvPacket

; 669  : 			{
; 670  : 				this->WinQ[aIndex].Drop += this->Data[i][n].RewardMain[k];

  02f4b	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  02f4e	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  02f54	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  02f57	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  02f5d	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  02f60	8b 55 f0	 mov	 edx, DWORD PTR _n$[ebp]
  02f63	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  02f69	03 ca		 add	 ecx, edx
  02f6b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02f6e	8b 84 02 f4 d3
	5f 00		 mov	 eax, DWORD PTR [edx+eax+6280180]
  02f75	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02f78	03 84 91 c8 00
	00 00		 add	 eax, DWORD PTR [ecx+edx*4+200]
  02f7f	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  02f82	69 c9 b8 00 00
	00		 imul	 ecx, 184		; 000000b8H
  02f88	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02f8b	89 84 0a f4 d3
	5f 00		 mov	 DWORD PTR [edx+ecx+6280180], eax
$LN5@RecvPacket:

; 671  : 			}		
; 672  : 			if(this->Data[i][n].RewardType[k] == 18)	//18-Item

  02f92	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02f95	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02f9b	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02f9e	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02fa1	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02fa7	03 c1		 add	 eax, ecx
  02fa9	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02fac	83 bc 90 b4 00
	00 00 12	 cmp	 DWORD PTR [eax+edx*4+180], 18 ; 00000012H
  02fb4	0f 85 f1 00 00
	00		 jne	 $LN4@RecvPacket

; 673  : 			{
; 674  : 				ItemSerialCreateSend(aIndex,lpObj->MapNumber,lpObj->X,lpObj->Y,this->Data[i][n].RewardMain[k],this->Data[i][n].RewardLvL[k],0,0,this->Data[i][n].RewardLuck[k],0,aIndex,this->Data[i][n].RewardExl[k],this->Data[i][n].RewardAnc[k]);

  02fba	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  02fbd	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  02fc3	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  02fc6	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  02fc9	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  02fcf	03 c1		 add	 eax, ecx
  02fd1	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  02fd4	0f b6 84 90 18
	01 00 00	 movzx	 eax, BYTE PTR [eax+edx*4+280]
  02fdc	50		 push	 eax
  02fdd	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  02fe0	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  02fe6	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  02fe9	8b 55 f0	 mov	 edx, DWORD PTR _n$[ebp]
  02fec	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  02ff2	03 ca		 add	 ecx, edx
  02ff4	8b 45 e8	 mov	 eax, DWORD PTR _k$228922[ebp]
  02ff7	0f b6 8c 81 04
	01 00 00	 movzx	 ecx, BYTE PTR [ecx+eax*4+260]
  02fff	51		 push	 ecx
  03000	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  03003	52		 push	 edx
  03004	6a 00		 push	 0
  03006	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  03009	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  0300f	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  03012	8b 4d f0	 mov	 ecx, DWORD PTR _n$[ebp]
  03015	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  0301b	03 c1		 add	 eax, ecx
  0301d	8b 55 e8	 mov	 edx, DWORD PTR _k$228922[ebp]
  03020	0f b6 84 90 f0
	00 00 00	 movzx	 eax, BYTE PTR [eax+edx*4+240]
  03028	50		 push	 eax
  03029	6a 00		 push	 0
  0302b	6a 00		 push	 0
  0302d	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  03030	69 c9 20 95 09
	00		 imul	 ecx, 628000		; 00099520H
  03036	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  03039	8b 55 f0	 mov	 edx, DWORD PTR _n$[ebp]
  0303c	69 d2 74 02 00
	00		 imul	 edx, 628		; 00000274H
  03042	03 ca		 add	 ecx, edx
  03044	8b 45 e8	 mov	 eax, DWORD PTR _k$228922[ebp]
  03047	0f b6 8c 81 dc
	00 00 00	 movzx	 ecx, BYTE PTR [ecx+eax*4+220]
  0304f	51		 push	 ecx
  03050	8b 55 f4	 mov	 edx, DWORD PTR _i$[ebp]
  03053	69 d2 20 95 09
	00		 imul	 edx, 628000		; 00099520H
  03059	03 55 fc	 add	 edx, DWORD PTR _this$[ebp]
  0305c	8b 45 f0	 mov	 eax, DWORD PTR _n$[ebp]
  0305f	69 c0 74 02 00
	00		 imul	 eax, 628		; 00000274H
  03065	03 d0		 add	 edx, eax
  03067	8b 4d e8	 mov	 ecx, DWORD PTR _k$228922[ebp]
  0306a	8b 94 8a c8 00
	00 00		 mov	 edx, DWORD PTR [edx+ecx*4+200]
  03071	52		 push	 edx
  03072	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03075	0f b6 88 46 01
	00 00		 movzx	 ecx, BYTE PTR [eax+326]
  0307c	51		 push	 ecx
  0307d	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  03080	0f b6 82 44 01
	00 00		 movzx	 eax, BYTE PTR [edx+324]
  03087	50		 push	 eax
  03088	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0308b	0f b6 91 49 01
	00 00		 movzx	 edx, BYTE PTR [ecx+329]
  03092	52		 push	 edx
  03093	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03096	50		 push	 eax
  03097	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  0309c	83 c4 34	 add	 esp, 52			; 00000034H

; 675  : 
; 676  : 				this->SendWindowsClose(aIndex);

  0309f	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  030a2	50		 push	 eax
  030a3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  030a6	e8 00 00 00 00	 call	 ?SendWindowsClose@cWinQuestSystem@@QAEXH@Z ; cWinQuestSystem::SendWindowsClose
$LN4@RecvPacket:

; 677  : 			}		
; 678  : 		}

  030ab	e9 9b f7 ff ff	 jmp	 $LN25@RecvPacket
$LN24@RecvPacket:

; 679  : 
; 680  : 		this->WinQ[aIndex].Start[i] = 0;

  030b0	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  030b3	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  030b9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  030bc	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  030c3	33 c0		 xor	 eax, eax
  030c5	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  030c8	66 89 04 4a	 mov	 WORD PTR [edx+ecx*2], ax

; 681  : 
; 682  : 		for(int k=0;k<5;k++)

  030cc	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _k$228946[ebp], 0
  030d3	eb 09		 jmp	 SHORT $LN3@RecvPacket
$LN2@RecvPacket:
  030d5	8b 45 e4	 mov	 eax, DWORD PTR _k$228946[ebp]
  030d8	83 c0 01	 add	 eax, 1
  030db	89 45 e4	 mov	 DWORD PTR _k$228946[ebp], eax
$LN3@RecvPacket:
  030de	83 7d e4 05	 cmp	 DWORD PTR _k$228946[ebp], 5
  030e2	7d 28		 jge	 SHORT $LN1@RecvPacket

; 683  : 		{
; 684  : 			this->WinQ[aIndex].Count[i][k] = 0;

  030e4	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  030e7	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  030ed	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  030f0	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  030f7	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  030fa	6b c0 0a	 imul	 eax, 10			; 0000000aH
  030fd	8d 4c 02 28	 lea	 ecx, DWORD PTR [edx+eax+40]
  03101	33 d2		 xor	 edx, edx
  03103	8b 45 e4	 mov	 eax, DWORD PTR _k$228946[ebp]
  03106	66 89 14 41	 mov	 WORD PTR [ecx+eax*2], dx

; 685  : 		}

  0310a	eb c9		 jmp	 SHORT $LN2@RecvPacket
$LN1@RecvPacket:

; 686  : 
; 687  : 		this->WinQ[aIndex].Num[i]++;

  0310c	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0310f	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03115	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03118	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  0311f	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  03122	66 8b 4c 42 14	 mov	 cx, WORD PTR [edx+eax*2+20]
  03127	66 83 c1 01	 add	 cx, 1
  0312b	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  0312e	69 d2 b8 00 00
	00		 imul	 edx, 184		; 000000b8H
  03134	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  03137	8d 94 10 40 d3
	5f 00		 lea	 edx, DWORD PTR [eax+edx+6280000]
  0313e	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  03141	66 89 4c 42 14	 mov	 WORD PTR [edx+eax*2+20], cx

; 688  : 
; 689  : 		SendPacket(aIndex, 0);

  03146	6a 00		 push	 0
  03148	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0314b	50		 push	 eax
  0314c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0314f	e8 00 00 00 00	 call	 ?SendPacket@cWinQuestSystem@@QAEXHE@Z ; cWinQuestSystem::SendPacket
$LN27@RecvPacket:
$LN39@RecvPacket:

; 690  : 	}
; 691  : }

  03154	5f		 pop	 edi
  03155	5e		 pop	 esi
  03156	5b		 pop	 ebx
  03157	8b e5		 mov	 esp, ebp
  03159	5d		 pop	 ebp
  0315a	c2 08 00	 ret	 8
?RecvPacket@cWinQuestSystem@@QAEXHPAUCGSendQuestResult@@@Z ENDP ; cWinQuestSystem::RecvPacket
; Function compile flags: /Odtp /ZI
_rSend$ = -12						; size = 5
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
?SendWindowsClose@cWinQuestSystem@@QAEXH@Z PROC		; cWinQuestSystem::SendWindowsClose
; _this$ = ecx

; 696  : {

  03160	55		 push	 ebp
  03161	8b ec		 mov	 ebp, esp
  03163	83 ec 4c	 sub	 esp, 76			; 0000004cH
  03166	53		 push	 ebx
  03167	56		 push	 esi
  03168	57		 push	 edi
  03169	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 697  : 	CGWinClose rSend;
; 698  : 
; 699  : 	ZeroMemory(&rSend,sizeof(rSend));

  0316c	6a 05		 push	 5
  0316e	6a 00		 push	 0
  03170	8d 45 f4	 lea	 eax, DWORD PTR _rSend$[ebp]
  03173	50		 push	 eax
  03174	e8 00 00 00 00	 call	 _memset
  03179	83 c4 0c	 add	 esp, 12			; 0000000cH

; 700  : 	PHeadSubSetW((LPBYTE)&rSend, 0xFA, 0x04, sizeof(rSend));

  0317c	6a 05		 push	 5
  0317e	6a 04		 push	 4
  03180	68 fa 00 00 00	 push	 250			; 000000faH
  03185	8d 45 f4	 lea	 eax, DWORD PTR _rSend$[ebp]
  03188	50		 push	 eax
  03189	e8 00 00 00 00	 call	 ?PHeadSubSetW@@YAXPAEEEH@Z ; PHeadSubSetW
  0318e	83 c4 10	 add	 esp, 16			; 00000010H

; 701  : 
; 702  : 	rSend.Result = 1;

  03191	c6 45 f8 01	 mov	 BYTE PTR _rSend$[ebp+4], 1

; 703  : 
; 704  : 	DataSend(aIndex,(LPBYTE)&rSend,sizeof(rSend));

  03195	6a 05		 push	 5
  03197	8d 45 f4	 lea	 eax, DWORD PTR _rSend$[ebp]
  0319a	50		 push	 eax
  0319b	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  0319e	51		 push	 ecx
  0319f	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  031a4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 705  : }

  031a7	5f		 pop	 edi
  031a8	5e		 pop	 esi
  031a9	5b		 pop	 ebx
  031aa	8b e5		 mov	 esp, ebp
  031ac	5d		 pop	 ebp
  031ad	c2 04 00	 ret	 4
?SendWindowsClose@cWinQuestSystem@@QAEXH@Z ENDP		; cWinQuestSystem::SendWindowsClose
_TEXT	ENDS
PUBLIC	?MonsterDrop@cWinQuestSystem@@QAE_NHF@Z		; cWinQuestSystem::MonsterDrop
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_k$228969 = -16						; size = 4
_n$228967 = -12						; size = 4
_i$228963 = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_ItemType$ = 12						; size = 2
?MonsterDrop@cWinQuestSystem@@QAE_NHF@Z PROC		; cWinQuestSystem::MonsterDrop
; _this$ = ecx

; 710  : {

  031b0	55		 push	 ebp
  031b1	8b ec		 mov	 ebp, esp
  031b3	83 ec 50	 sub	 esp, 80			; 00000050H
  031b6	53		 push	 ebx
  031b7	56		 push	 esi
  031b8	57		 push	 edi
  031b9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 711  : 	if(!this->Enable) return true;

  031bc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  031bf	0f b6 88 a8 f0
	89 00		 movzx	 ecx, BYTE PTR [eax+9040040]
  031c6	85 c9		 test	 ecx, ecx
  031c8	75 07		 jne	 SHORT $LN11@MonsterDro
  031ca	b0 01		 mov	 al, 1
  031cc	e9 72 01 00 00	 jmp	 $LN12@MonsterDro
$LN11@MonsterDro:

; 712  : 
; 713  : 	for(int i=0; i < MAX_WIN_QUEST; i++)

  031d1	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$228963[ebp], 0
  031d8	eb 09		 jmp	 SHORT $LN10@MonsterDro
$LN9@MonsterDro:
  031da	8b 45 f8	 mov	 eax, DWORD PTR _i$228963[ebp]
  031dd	83 c0 01	 add	 eax, 1
  031e0	89 45 f8	 mov	 DWORD PTR _i$228963[ebp], eax
$LN10@MonsterDro:
  031e3	83 7d f8 0a	 cmp	 DWORD PTR _i$228963[ebp], 10 ; 0000000aH
  031e7	0f 8d 54 01 00
	00		 jge	 $LN8@MonsterDro

; 714  : 	{
; 715  : 		int n = this->WinQ[aIndex].Num[i];

  031ed	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  031f0	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  031f6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  031f9	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  03200	8b 45 f8	 mov	 eax, DWORD PTR _i$228963[ebp]
  03203	0f bf 4c 42 14	 movsx	 ecx, WORD PTR [edx+eax*2+20]
  03208	89 4d f4	 mov	 DWORD PTR _n$228967[ebp], ecx

; 716  : 
; 717  : 		if(this->WinQ[aIndex].Start[i] == 1)

  0320b	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0320e	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03214	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03217	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  0321e	8b 45 f8	 mov	 eax, DWORD PTR _i$228963[ebp]
  03221	0f bf 0c 42	 movsx	 ecx, WORD PTR [edx+eax*2]
  03225	83 f9 01	 cmp	 ecx, 1
  03228	0f 85 0e 01 00
	00		 jne	 $LN7@MonsterDro

; 718  : 		{
; 719  : 			for(int k = 0; k < 5; k++)

  0322e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _k$228969[ebp], 0
  03235	eb 09		 jmp	 SHORT $LN6@MonsterDro
$LN5@MonsterDro:
  03237	8b 45 f0	 mov	 eax, DWORD PTR _k$228969[ebp]
  0323a	83 c0 01	 add	 eax, 1
  0323d	89 45 f0	 mov	 DWORD PTR _k$228969[ebp], eax
$LN6@MonsterDro:
  03240	83 7d f0 05	 cmp	 DWORD PTR _k$228969[ebp], 5
  03244	0f 8d f2 00 00
	00		 jge	 $LN7@MonsterDro

; 720  : 			{
; 721  : 				if(this->Data[i][n].MissionType[k] == 2)	//2-Drop

  0324a	8b 45 f8	 mov	 eax, DWORD PTR _i$228963[ebp]
  0324d	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  03253	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  03256	8b 4d f4	 mov	 ecx, DWORD PTR _n$228967[ebp]
  03259	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  0325f	03 c1		 add	 eax, ecx
  03261	8b 55 f0	 mov	 edx, DWORD PTR _k$228969[ebp]
  03264	83 7c 90 3c 02	 cmp	 DWORD PTR [eax+edx*4+60], 2
  03269	0f 85 c8 00 00
	00		 jne	 $LN3@MonsterDro

; 722  : 				{
; 723  : 					if(this->Data[i][n].MissionMain[k] == ItemType)

  0326f	8b 45 f8	 mov	 eax, DWORD PTR _i$228963[ebp]
  03272	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  03278	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  0327b	8b 4d f4	 mov	 ecx, DWORD PTR _n$228967[ebp]
  0327e	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  03284	03 c1		 add	 eax, ecx
  03286	0f bf 55 0c	 movsx	 edx, WORD PTR _ItemType$[ebp]
  0328a	8b 4d f0	 mov	 ecx, DWORD PTR _k$228969[ebp]
  0328d	39 54 88 50	 cmp	 DWORD PTR [eax+ecx*4+80], edx
  03291	0f 85 a0 00 00
	00		 jne	 $LN3@MonsterDro

; 724  : 					{
; 725  : 						if(this->Data[i][n].MissionLvL[k] > this->WinQ[aIndex].Count[i][k])

  03297	8b 45 f8	 mov	 eax, DWORD PTR _i$228963[ebp]
  0329a	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  032a0	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  032a3	8b 4d f4	 mov	 ecx, DWORD PTR _n$228967[ebp]
  032a6	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  032ac	03 c1		 add	 eax, ecx
  032ae	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  032b1	69 d2 b8 00 00
	00		 imul	 edx, 184		; 000000b8H
  032b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  032ba	8d 94 11 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+edx+6280000]
  032c1	8b 4d f8	 mov	 ecx, DWORD PTR _i$228963[ebp]
  032c4	6b c9 0a	 imul	 ecx, 10			; 0000000aH
  032c7	8d 54 0a 28	 lea	 edx, DWORD PTR [edx+ecx+40]
  032cb	8b 4d f0	 mov	 ecx, DWORD PTR _k$228969[ebp]
  032ce	0f bf 14 4a	 movsx	 edx, WORD PTR [edx+ecx*2]
  032d2	8b 4d f0	 mov	 ecx, DWORD PTR _k$228969[ebp]
  032d5	39 54 88 64	 cmp	 DWORD PTR [eax+ecx*4+100], edx
  032d9	7e 5c		 jle	 SHORT $LN3@MonsterDro

; 726  : 						{
; 727  : 							this->WinQ[aIndex].Count[i][k]++;

  032db	8b 45 f8	 mov	 eax, DWORD PTR _i$228963[ebp]
  032de	6b c0 0a	 imul	 eax, 10			; 0000000aH
  032e1	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  032e4	69 c9 b8 00 00
	00		 imul	 ecx, 184		; 000000b8H
  032ea	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  032ed	8d 8c 0a 40 d3
	5f 00		 lea	 ecx, DWORD PTR [edx+ecx+6280000]
  032f4	8d 54 01 28	 lea	 edx, DWORD PTR [ecx+eax+40]
  032f8	8b 45 f0	 mov	 eax, DWORD PTR _k$228969[ebp]
  032fb	66 8b 0c 42	 mov	 cx, WORD PTR [edx+eax*2]
  032ff	66 83 c1 01	 add	 cx, 1
  03303	8b 55 f8	 mov	 edx, DWORD PTR _i$228963[ebp]
  03306	6b d2 0a	 imul	 edx, 10			; 0000000aH
  03309	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0330c	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03312	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  03315	8d 84 06 40 d3
	5f 00		 lea	 eax, DWORD PTR [esi+eax+6280000]
  0331c	8d 54 10 28	 lea	 edx, DWORD PTR [eax+edx+40]
  03320	8b 45 f0	 mov	 eax, DWORD PTR _k$228969[ebp]
  03323	66 89 0c 42	 mov	 WORD PTR [edx+eax*2], cx

; 728  : 							this->SendInfoPacket(aIndex);

  03327	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0332a	50		 push	 eax
  0332b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0332e	e8 00 00 00 00	 call	 ?SendInfoPacket@cWinQuestSystem@@QAEXH@Z ; cWinQuestSystem::SendInfoPacket

; 729  : 							return false;

  03333	32 c0		 xor	 al, al
  03335	eb 0c		 jmp	 SHORT $LN12@MonsterDro
$LN3@MonsterDro:

; 730  : 						}
; 731  : 					}
; 732  : 				}
; 733  : 			}

  03337	e9 fb fe ff ff	 jmp	 $LN5@MonsterDro
$LN7@MonsterDro:

; 734  : 		}
; 735  : 	}

  0333c	e9 99 fe ff ff	 jmp	 $LN9@MonsterDro
$LN8@MonsterDro:

; 736  : 	return true;

  03341	b0 01		 mov	 al, 1
$LN12@MonsterDro:

; 737  : }

  03343	5f		 pop	 edi
  03344	5e		 pop	 esi
  03345	5b		 pop	 ebx
  03346	8b e5		 mov	 esp, ebp
  03348	5d		 pop	 ebp
  03349	c2 08 00	 ret	 8
?MonsterDrop@cWinQuestSystem@@QAE_NHF@Z ENDP		; cWinQuestSystem::MonsterDrop
_TEXT	ENDS
EXTRN	?CheckOptions@@YA_N_NHH@Z:PROC			; CheckOptions
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$228988 = -24						; size = 4
_iLvl$228987 = -20					; size = 2
_iType$228986 = -16					; size = 2
_lpObj$ = -12						; size = 4
_n$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_QuestNum$ = 12						; size = 4
_k$ = 16						; size = 4
?CheckItemUser@cWinQuestSystem@@QAE_NHHH@Z PROC		; cWinQuestSystem::CheckItemUser
; _this$ = ecx

; 742  : {

  03350	55		 push	 ebp
  03351	8b ec		 mov	 ebp, esp
  03353	83 ec 58	 sub	 esp, 88			; 00000058H
  03356	53		 push	 ebx
  03357	56		 push	 esi
  03358	57		 push	 edi
  03359	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 743  : 	if(aIndex >= OBJMAX)

  0335c	81 7d 08 98 3a
	00 00		 cmp	 DWORD PTR _aIndex$[ebp], 15000 ; 00003a98H
  03363	7c 07		 jl	 SHORT $LN6@CheckItemU

; 744  : 		return 0;

  03365	32 c0		 xor	 al, al
  03367	e9 f6 01 00 00	 jmp	 $LN7@CheckItemU
$LN6@CheckItemU:

; 745  : 
; 746  : 	int n = this->WinQ[aIndex].Num[QuestNum];

  0336c	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0336f	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03375	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03378	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  0337f	8b 45 0c	 mov	 eax, DWORD PTR _QuestNum$[ebp]
  03382	0f bf 4c 42 14	 movsx	 ecx, WORD PTR [edx+eax*2+20]
  03387	89 4d f8	 mov	 DWORD PTR _n$[ebp], ecx

; 747  : 
; 748  : 	LPOBJ lpObj = &gObj[aIndex];

  0338a	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0338d	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  03393	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  03399	89 45 f4	 mov	 DWORD PTR _lpObj$[ebp], eax

; 749  : 
; 750  : 	if(this->Data[QuestNum][n].MissionType[k] == 3)

  0339c	8b 45 0c	 mov	 eax, DWORD PTR _QuestNum$[ebp]
  0339f	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  033a5	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  033a8	8b 4d f8	 mov	 ecx, DWORD PTR _n$[ebp]
  033ab	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  033b1	03 c1		 add	 eax, ecx
  033b3	8b 55 10	 mov	 edx, DWORD PTR _k$[ebp]
  033b6	83 7c 90 3c 03	 cmp	 DWORD PTR [eax+edx*4+60], 3
  033bb	0f 85 9f 01 00
	00		 jne	 $LN5@CheckItemU

; 751  : 	{
; 752  : 		short iType = this->Data[QuestNum][n].MissionMain[k];

  033c1	8b 45 0c	 mov	 eax, DWORD PTR _QuestNum$[ebp]
  033c4	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  033ca	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  033cd	8b 4d f8	 mov	 ecx, DWORD PTR _n$[ebp]
  033d0	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  033d6	03 c1		 add	 eax, ecx
  033d8	8b 55 10	 mov	 edx, DWORD PTR _k$[ebp]
  033db	66 8b 44 90 50	 mov	 ax, WORD PTR [eax+edx*4+80]
  033e0	66 89 45 f0	 mov	 WORD PTR _iType$228986[ebp], ax

; 753  : 		short iLvl = this->Data[QuestNum][n].MissionLvL[k];

  033e4	8b 45 0c	 mov	 eax, DWORD PTR _QuestNum$[ebp]
  033e7	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  033ed	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  033f0	8b 4d f8	 mov	 ecx, DWORD PTR _n$[ebp]
  033f3	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  033f9	03 c1		 add	 eax, ecx
  033fb	8b 55 10	 mov	 edx, DWORD PTR _k$[ebp]
  033fe	66 8b 44 90 64	 mov	 ax, WORD PTR [eax+edx*4+100]
  03403	66 89 45 ec	 mov	 WORD PTR _iLvl$228987[ebp], ax

; 754  : 
; 755  : 		for (int i = INVETORY_WEAR_SIZE; i < INVENTORY_SIZE; i++)

  03407	c7 45 e8 0c 00
	00 00		 mov	 DWORD PTR _i$228988[ebp], 12 ; 0000000cH
  0340e	eb 09		 jmp	 SHORT $LN4@CheckItemU
$LN3@CheckItemU:
  03410	8b 45 e8	 mov	 eax, DWORD PTR _i$228988[ebp]
  03413	83 c0 01	 add	 eax, 1
  03416	89 45 e8	 mov	 DWORD PTR _i$228988[ebp], eax
$LN4@CheckItemU:
  03419	81 7d e8 ec 00
	00 00		 cmp	 DWORD PTR _i$228988[ebp], 236 ; 000000ecH
  03420	0f 8d 3a 01 00
	00		 jge	 $LN5@CheckItemU

; 756  : 		{
; 757  : 			if( lpObj->pInventory[i].m_Type == iType && 
; 758  : 				lpObj->pInventory[i].m_Level >= iLvl &&
; 759  : 				CheckOptions(0,lpObj->pInventory[i].m_Option2, this->Data[QuestNum][n].MissionLuck[k]) &&
; 760  : 				CheckOptions(0,lpObj->pInventory[i].m_NewOption, this->Data[QuestNum][n].MissionExl[k]) &&
; 761  : 				CheckOptions(0,lpObj->pInventory[i].m_SetOption, this->Data[QuestNum][n].MissionAnc[k]) )

  03426	8b 45 e8	 mov	 eax, DWORD PTR _i$228988[ebp]
  03429	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  0342f	8b 4d f4	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  03432	8b 91 24 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3620]
  03438	0f bf 44 02 06	 movsx	 eax, WORD PTR [edx+eax+6]
  0343d	0f bf 4d f0	 movsx	 ecx, WORD PTR _iType$228986[ebp]
  03441	3b c1		 cmp	 eax, ecx
  03443	0f 85 12 01 00
	00		 jne	 $LN1@CheckItemU
  03449	8b 45 e8	 mov	 eax, DWORD PTR _i$228988[ebp]
  0344c	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  03452	8b 4d f4	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  03455	8b 91 24 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3620]
  0345b	0f bf 44 02 08	 movsx	 eax, WORD PTR [edx+eax+8]
  03460	0f bf 4d ec	 movsx	 ecx, WORD PTR _iLvl$228987[ebp]
  03464	3b c1		 cmp	 eax, ecx
  03466	0f 8c ef 00 00
	00		 jl	 $LN1@CheckItemU
  0346c	8b 45 0c	 mov	 eax, DWORD PTR _QuestNum$[ebp]
  0346f	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  03475	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  03478	8b 4d f8	 mov	 ecx, DWORD PTR _n$[ebp]
  0347b	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  03481	03 c1		 add	 eax, ecx
  03483	8b 55 10	 mov	 edx, DWORD PTR _k$[ebp]
  03486	8b 44 90 78	 mov	 eax, DWORD PTR [eax+edx*4+120]
  0348a	50		 push	 eax
  0348b	8b 4d e8	 mov	 ecx, DWORD PTR _i$228988[ebp]
  0348e	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  03494	8b 55 f4	 mov	 edx, DWORD PTR _lpObj$[ebp]
  03497	8b 82 24 0e 00
	00		 mov	 eax, DWORD PTR [edx+3620]
  0349d	0f b6 8c 08 95
	00 00 00	 movzx	 ecx, BYTE PTR [eax+ecx+149]
  034a5	51		 push	 ecx
  034a6	6a 00		 push	 0
  034a8	e8 00 00 00 00	 call	 ?CheckOptions@@YA_N_NHH@Z ; CheckOptions
  034ad	83 c4 0c	 add	 esp, 12			; 0000000cH
  034b0	0f b6 d0	 movzx	 edx, al
  034b3	85 d2		 test	 edx, edx
  034b5	0f 84 a0 00 00
	00		 je	 $LN1@CheckItemU
  034bb	8b 45 0c	 mov	 eax, DWORD PTR _QuestNum$[ebp]
  034be	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  034c4	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  034c7	8b 4d f8	 mov	 ecx, DWORD PTR _n$[ebp]
  034ca	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  034d0	03 c1		 add	 eax, ecx
  034d2	8b 55 10	 mov	 edx, DWORD PTR _k$[ebp]
  034d5	8b 84 90 8c 00
	00 00		 mov	 eax, DWORD PTR [eax+edx*4+140]
  034dc	50		 push	 eax
  034dd	8b 4d e8	 mov	 ecx, DWORD PTR _i$228988[ebp]
  034e0	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  034e6	8b 55 f4	 mov	 edx, DWORD PTR _lpObj$[ebp]
  034e9	8b 82 24 0e 00
	00		 mov	 eax, DWORD PTR [edx+3620]
  034ef	0f b6 8c 08 97
	00 00 00	 movzx	 ecx, BYTE PTR [eax+ecx+151]
  034f7	51		 push	 ecx
  034f8	6a 00		 push	 0
  034fa	e8 00 00 00 00	 call	 ?CheckOptions@@YA_N_NHH@Z ; CheckOptions
  034ff	83 c4 0c	 add	 esp, 12			; 0000000cH
  03502	0f b6 d0	 movzx	 edx, al
  03505	85 d2		 test	 edx, edx
  03507	74 52		 je	 SHORT $LN1@CheckItemU
  03509	8b 45 0c	 mov	 eax, DWORD PTR _QuestNum$[ebp]
  0350c	69 c0 20 95 09
	00		 imul	 eax, 628000		; 00099520H
  03512	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  03515	8b 4d f8	 mov	 ecx, DWORD PTR _n$[ebp]
  03518	69 c9 74 02 00
	00		 imul	 ecx, 628		; 00000274H
  0351e	03 c1		 add	 eax, ecx
  03520	8b 55 10	 mov	 edx, DWORD PTR _k$[ebp]
  03523	8b 84 90 a0 00
	00 00		 mov	 eax, DWORD PTR [eax+edx*4+160]
  0352a	50		 push	 eax
  0352b	8b 4d e8	 mov	 ecx, DWORD PTR _i$228988[ebp]
  0352e	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  03534	8b 55 f4	 mov	 edx, DWORD PTR _lpObj$[ebp]
  03537	8b 82 24 0e 00
	00		 mov	 eax, DWORD PTR [edx+3620]
  0353d	0f b6 8c 08 ae
	00 00 00	 movzx	 ecx, BYTE PTR [eax+ecx+174]
  03545	51		 push	 ecx
  03546	6a 00		 push	 0
  03548	e8 00 00 00 00	 call	 ?CheckOptions@@YA_N_NHH@Z ; CheckOptions
  0354d	83 c4 0c	 add	 esp, 12			; 0000000cH
  03550	0f b6 d0	 movzx	 edx, al
  03553	85 d2		 test	 edx, edx
  03555	74 04		 je	 SHORT $LN1@CheckItemU

; 762  : 			{
; 763  : 				return true;

  03557	b0 01		 mov	 al, 1
  03559	eb 07		 jmp	 SHORT $LN7@CheckItemU
$LN1@CheckItemU:

; 764  : 			}
; 765  : 		}

  0355b	e9 b0 fe ff ff	 jmp	 $LN3@CheckItemU
$LN5@CheckItemU:

; 766  : 
; 767  : 	}
; 768  : 
; 769  : 	return false;

  03560	32 c0		 xor	 al, al
$LN7@CheckItemU:

; 770  : }

  03562	5f		 pop	 edi
  03563	5e		 pop	 esi
  03564	5b		 pop	 ebx
  03565	8b e5		 mov	 esp, ebp
  03567	5d		 pop	 ebp
  03568	c2 0c 00	 ret	 12			; 0000000cH
?CheckItemUser@cWinQuestSystem@@QAE_NHHH@Z ENDP		; cWinQuestSystem::CheckItemUser
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?DGSendInformation@cWinQuestSystem@@QAEXH@Z	; cWinQuestSystem::DGSendInformation
EXTRN	?Send@DBSockMng@@QAEHPADH@Z:PROC		; DBSockMng::Send
EXTRN	?cDBSMng@@3VDBSockMng@@A:BYTE			; cDBSMng
EXTRN	?PHeadSubSetB@@YAXPAEEEH@Z:PROC			; PHeadSubSetB
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_k$229005 = -220					; size = 4
_i$229001 = -216					; size = 4
_GDsend$ = -212						; size = 200
_lpObj$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?DGSendInformation@cWinQuestSystem@@QAEXH@Z PROC	; cWinQuestSystem::DGSendInformation
; _this$ = ecx

; 775  : {

  03570	55		 push	 ebp
  03571	8b ec		 mov	 ebp, esp
  03573	81 ec 1c 01 00
	00		 sub	 esp, 284		; 0000011cH
  03579	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0357e	33 c5		 xor	 eax, ebp
  03580	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  03583	53		 push	 ebx
  03584	56		 push	 esi
  03585	57		 push	 edi
  03586	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 776  : 	if(!this->Enable) return;

  03589	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0358c	0f b6 88 a8 f0
	89 00		 movzx	 ecx, BYTE PTR [eax+9040040]
  03593	85 c9		 test	 ecx, ecx
  03595	75 05		 jne	 SHORT $LN7@DGSendInfo
  03597	e9 54 02 00 00	 jmp	 $LN8@DGSendInfo
$LN7@DGSendInfo:

; 777  : 
; 778  : 	LPOBJ lpObj = &gObj[aIndex];

  0359c	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0359f	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  035a5	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  035ab	89 45 f4	 mov	 DWORD PTR _lpObj$[ebp], eax

; 779  : 
; 780  : 	GDQuestUser GDsend;
; 781  : 
; 782  : 	ZeroMemory(&GDsend,sizeof(GDsend));

  035ae	68 c8 00 00 00	 push	 200			; 000000c8H
  035b3	6a 00		 push	 0
  035b5	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR _GDsend$[ebp]
  035bb	50		 push	 eax
  035bc	e8 00 00 00 00	 call	 _memset
  035c1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 783  : 
; 784  : 	PHeadSubSetB((LPBYTE)&GDsend, 0xE2, 0x02, sizeof(GDsend));

  035c4	68 c8 00 00 00	 push	 200			; 000000c8H
  035c9	6a 02		 push	 2
  035cb	68 e2 00 00 00	 push	 226			; 000000e2H
  035d0	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR _GDsend$[ebp]
  035d6	50		 push	 eax
  035d7	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB
  035dc	83 c4 10	 add	 esp, 16			; 00000010H

; 785  : 
; 786  : 	strncpy(GDsend.Name,lpObj->Name,10);

  035df	6a 0a		 push	 10			; 0000000aH
  035e1	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  035e4	83 c0 77	 add	 eax, 119		; 00000077H
  035e7	50		 push	 eax
  035e8	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _GDsend$[ebp+4]
  035ee	51		 push	 ecx
  035ef	e8 00 00 00 00	 call	 _strncpy
  035f4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 787  : 
; 788  : 	for(int i=0; i < MAX_WIN_QUEST; i++)

  035f7	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$229001[ebp], 0
  03601	eb 0f		 jmp	 SHORT $LN6@DGSendInfo
$LN5@DGSendInfo:
  03603	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _i$229001[ebp]
  03609	83 c0 01	 add	 eax, 1
  0360c	89 85 28 ff ff
	ff		 mov	 DWORD PTR _i$229001[ebp], eax
$LN6@DGSendInfo:
  03612	83 bd 28 ff ff
	ff 0a		 cmp	 DWORD PTR _i$229001[ebp], 10 ; 0000000aH
  03619	0f 8d c6 00 00
	00		 jge	 $LN4@DGSendInfo

; 789  : 	{
; 790  : 		GDsend.Start[i] = this->WinQ[aIndex].Start[i];

  0361f	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03622	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03628	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0362b	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  03632	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _i$229001[ebp]
  03638	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR _i$229001[ebp]
  0363e	66 8b 14 4a	 mov	 dx, WORD PTR [edx+ecx*2]
  03642	66 89 94 45 3a
	ff ff ff	 mov	 WORD PTR _GDsend$[ebp+eax*2+14], dx

; 791  : 		GDsend.Num[i] = this->WinQ[aIndex].Num[i];

  0364a	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0364d	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03653	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  03656	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  0365d	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _i$229001[ebp]
  03663	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR _i$229001[ebp]
  03669	66 8b 54 4a 14	 mov	 dx, WORD PTR [edx+ecx*2+20]
  0366e	66 89 94 45 4e
	ff ff ff	 mov	 WORD PTR _GDsend$[ebp+eax*2+34], dx

; 792  : 
; 793  : 		for(int k = 0; k < 5 ; k++)

  03676	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _k$229005[ebp], 0
  03680	eb 0f		 jmp	 SHORT $LN3@DGSendInfo
$LN2@DGSendInfo:
  03682	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR _k$229005[ebp]
  03688	83 c0 01	 add	 eax, 1
  0368b	89 85 24 ff ff
	ff		 mov	 DWORD PTR _k$229005[ebp], eax
$LN3@DGSendInfo:
  03691	83 bd 24 ff ff
	ff 05		 cmp	 DWORD PTR _k$229005[ebp], 5
  03698	7d 46		 jge	 SHORT $LN1@DGSendInfo

; 794  : 		{
; 795  : 			GDsend.Count[i][k] = this->WinQ[aIndex].Count[i][k];

  0369a	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0369d	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  036a3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  036a6	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  036ad	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _i$229001[ebp]
  036b3	6b c0 0a	 imul	 eax, 10			; 0000000aH
  036b6	8d 4c 02 28	 lea	 ecx, DWORD PTR [edx+eax+40]
  036ba	8b 95 28 ff ff
	ff		 mov	 edx, DWORD PTR _i$229001[ebp]
  036c0	6b d2 0a	 imul	 edx, 10			; 0000000aH
  036c3	8d 84 15 62 ff
	ff ff		 lea	 eax, DWORD PTR _GDsend$[ebp+edx+54]
  036ca	8b 95 24 ff ff
	ff		 mov	 edx, DWORD PTR _k$229005[ebp]
  036d0	8b b5 24 ff ff
	ff		 mov	 esi, DWORD PTR _k$229005[ebp]
  036d6	66 8b 0c 71	 mov	 cx, WORD PTR [ecx+esi*2]
  036da	66 89 0c 50	 mov	 WORD PTR [eax+edx*2], cx

; 796  : 		}

  036de	eb a2		 jmp	 SHORT $LN2@DGSendInfo
$LN1@DGSendInfo:

; 797  : 	}

  036e0	e9 1e ff ff ff	 jmp	 $LN5@DGSendInfo
$LN4@DGSendInfo:

; 798  : 
; 799  : 	GDsend.Damage = this->WinQ[aIndex].Damage;

  036e5	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  036e8	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  036ee	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  036f1	8b 94 01 cc d3
	5f 00		 mov	 edx, DWORD PTR [ecx+eax+6280140]
  036f8	89 55 c8	 mov	 DWORD PTR _GDsend$[ebp+156], edx

; 800  : 	GDsend.Defence = this->WinQ[aIndex].Defence;

  036fb	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  036fe	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03704	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  03707	8b 94 01 d0 d3
	5f 00		 mov	 edx, DWORD PTR [ecx+eax+6280144]
  0370e	89 55 cc	 mov	 DWORD PTR _GDsend$[ebp+160], edx

; 801  : 	GDsend.Life = this->WinQ[aIndex].Life;

  03711	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03714	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  0371a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0371d	8b 94 01 d4 d3
	5f 00		 mov	 edx, DWORD PTR [ecx+eax+6280148]
  03724	89 55 d0	 mov	 DWORD PTR _GDsend$[ebp+164], edx

; 802  : 	GDsend.SD = this->WinQ[aIndex].SD;

  03727	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0372a	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03730	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  03733	8b 94 01 d8 d3
	5f 00		 mov	 edx, DWORD PTR [ecx+eax+6280152]
  0373a	89 55 d4	 mov	 DWORD PTR _GDsend$[ebp+168], edx

; 803  : 	GDsend.Crit = this->WinQ[aIndex].Crit;

  0373d	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03740	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03746	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  03749	8b 94 01 dc d3
	5f 00		 mov	 edx, DWORD PTR [ecx+eax+6280156]
  03750	89 55 d8	 mov	 DWORD PTR _GDsend$[ebp+172], edx

; 804  : 	GDsend.Exel = this->WinQ[aIndex].Exel;

  03753	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03756	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  0375c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0375f	8b 94 01 e0 d3
	5f 00		 mov	 edx, DWORD PTR [ecx+eax+6280160]
  03766	89 55 dc	 mov	 DWORD PTR _GDsend$[ebp+176], edx

; 805  : 	GDsend.Double = this->WinQ[aIndex].Double;

  03769	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0376c	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03772	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  03775	8b 94 01 e4 d3
	5f 00		 mov	 edx, DWORD PTR [ecx+eax+6280164]
  0377c	89 55 e0	 mov	 DWORD PTR _GDsend$[ebp+180], edx

; 806  : 	GDsend.Ignore = this->WinQ[aIndex].Ignore;

  0377f	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03782	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03788	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0378b	8b 94 01 e8 d3
	5f 00		 mov	 edx, DWORD PTR [ecx+eax+6280168]
  03792	89 55 e4	 mov	 DWORD PTR _GDsend$[ebp+184], edx

; 807  : 	GDsend.Ref = this->WinQ[aIndex].Ref;

  03795	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03798	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  0379e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  037a1	8b 94 01 ec d3
	5f 00		 mov	 edx, DWORD PTR [ecx+eax+6280172]
  037a8	89 55 e8	 mov	 DWORD PTR _GDsend$[ebp+188], edx

; 808  : 	GDsend.Exp = this->WinQ[aIndex].Exp;

  037ab	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  037ae	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  037b4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  037b7	8b 94 01 f0 d3
	5f 00		 mov	 edx, DWORD PTR [ecx+eax+6280176]
  037be	89 55 ec	 mov	 DWORD PTR _GDsend$[ebp+192], edx

; 809  : 	GDsend.Drop = this->WinQ[aIndex].Drop;

  037c1	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  037c4	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  037ca	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  037cd	8b 94 01 f4 d3
	5f 00		 mov	 edx, DWORD PTR [ecx+eax+6280180]
  037d4	89 55 f0	 mov	 DWORD PTR _GDsend$[ebp+196], edx

; 810  : 
; 811  : 	cDBSMng.Send( (char*)&GDsend, GDsend.h.size);

  037d7	0f b6 85 2d ff
	ff ff		 movzx	 eax, BYTE PTR _GDsend$[ebp+1]
  037de	50		 push	 eax
  037df	8d 8d 2c ff ff
	ff		 lea	 ecx, DWORD PTR _GDsend$[ebp]
  037e5	51		 push	 ecx
  037e6	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  037eb	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
$LN8@DGSendInfo:

; 812  : }

  037f0	5f		 pop	 edi
  037f1	5e		 pop	 esi
  037f2	5b		 pop	 ebx
  037f3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  037f6	33 cd		 xor	 ecx, ebp
  037f8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  037fd	8b e5		 mov	 esp, ebp
  037ff	5d		 pop	 ebp
  03800	c2 04 00	 ret	 4
?DGSendInformation@cWinQuestSystem@@QAEXH@Z ENDP	; cWinQuestSystem::DGSendInformation
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ReqQuestInfo@cWinQuestSystem@@QAEXPAUOBJECTSTRUCT@@@Z ; cWinQuestSystem::ReqQuestInfo
EXTRN	_memcpy:PROC
EXTRN	?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z:PROC	; gObjIsConnected
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv67 = -92						; size = 4
_pMsg$229016 = -24					; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
?ReqQuestInfo@cWinQuestSystem@@QAEXPAUOBJECTSTRUCT@@@Z PROC ; cWinQuestSystem::ReqQuestInfo
; _this$ = ecx

; 817  : {

  03810	55		 push	 ebp
  03811	8b ec		 mov	 ebp, esp
  03813	83 ec 5c	 sub	 esp, 92			; 0000005cH
  03816	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0381b	33 c5		 xor	 eax, ebp
  0381d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  03820	53		 push	 ebx
  03821	56		 push	 esi
  03822	57		 push	 edi
  03823	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 818  : 	if( !OBJMAX_RANGE(lpObj->m_Index) ) 

  03826	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03829	83 38 00	 cmp	 DWORD PTR [eax], 0
  0382c	7d 09		 jge	 SHORT $LN6@ReqQuestIn
  0382e	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
  03835	eb 11		 jmp	 SHORT $LN7@ReqQuestIn
$LN6@ReqQuestIn:
  03837	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0383a	33 d2		 xor	 edx, edx
  0383c	81 39 97 3a 00
	00		 cmp	 DWORD PTR [ecx], 14999	; 00003a97H
  03842	0f 9e c2	 setle	 dl
  03845	89 55 a4	 mov	 DWORD PTR tv67[ebp], edx
$LN7@ReqQuestIn:
  03848	83 7d a4 00	 cmp	 DWORD PTR tv67[ebp], 0
  0384c	75 02		 jne	 SHORT $LN3@ReqQuestIn

; 819  : 	{
; 820  : 		return;

  0384e	eb 57		 jmp	 SHORT $LN4@ReqQuestIn
$LN3@ReqQuestIn:

; 821  : 	}
; 822  : 
; 823  : 	// ----
; 824  : 
; 825  : 	if( gObjIsConnected(lpObj) )

  03850	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03853	50		 push	 eax
  03854	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z ; gObjIsConnected
  03859	83 c4 04	 add	 esp, 4
  0385c	85 c0		 test	 eax, eax
  0385e	74 47		 je	 SHORT $LN4@ReqQuestIn

; 826  : 	{
; 827  : 		GDSelectQuest pMsg;			
; 828  : 
; 829  : 		PHeadSubSetB((LPBYTE)&pMsg, 0xE2, 0x01, sizeof(pMsg));

  03860	6a 10		 push	 16			; 00000010H
  03862	6a 01		 push	 1
  03864	68 e2 00 00 00	 push	 226			; 000000e2H
  03869	8d 45 e8	 lea	 eax, DWORD PTR _pMsg$229016[ebp]
  0386c	50		 push	 eax
  0386d	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB
  03872	83 c4 10	 add	 esp, 16			; 00000010H

; 830  : 
; 831  : 		memcpy(pMsg.Name, lpObj->Name, 10);

  03875	6a 0a		 push	 10			; 0000000aH
  03877	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0387a	83 c0 77	 add	 eax, 119		; 00000077H
  0387d	50		 push	 eax
  0387e	8d 4d ee	 lea	 ecx, DWORD PTR _pMsg$229016[ebp+6]
  03881	51		 push	 ecx
  03882	e8 00 00 00 00	 call	 _memcpy
  03887	83 c4 0c	 add	 esp, 12			; 0000000cH

; 832  : 		pMsg.aIndex = lpObj->m_Index;

  0388a	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0388d	66 8b 08	 mov	 cx, WORD PTR [eax]
  03890	66 89 4d ec	 mov	 WORD PTR _pMsg$229016[ebp+4], cx

; 833  : 
; 834  : 		if( cDBSMng.Send((PCHAR)&pMsg, pMsg.h.size) )

  03894	0f b6 45 e9	 movzx	 eax, BYTE PTR _pMsg$229016[ebp+1]
  03898	50		 push	 eax
  03899	8d 4d e8	 lea	 ecx, DWORD PTR _pMsg$229016[ebp]
  0389c	51		 push	 ecx
  0389d	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  038a2	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
$LN4@ReqQuestIn:

; 835  : 		{
; 836  : 			return;
; 837  : 		}
; 838  : 	}
; 839  : 	return;
; 840  : }

  038a7	5f		 pop	 edi
  038a8	5e		 pop	 esi
  038a9	5b		 pop	 ebx
  038aa	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  038ad	33 cd		 xor	 ecx, ebp
  038af	e8 00 00 00 00	 call	 @__security_check_cookie@4
  038b4	8b e5		 mov	 esp, ebp
  038b6	5d		 pop	 ebp
  038b7	c2 04 00	 ret	 4
?ReqQuestInfo@cWinQuestSystem@@QAEXPAUOBJECTSTRUCT@@@Z ENDP ; cWinQuestSystem::ReqQuestInfo
_TEXT	ENDS
PUBLIC	?RecvQuestInfo@cWinQuestSystem@@QAEXPAUDGQuestUserInfo@@@Z ; cWinQuestSystem::RecvQuestInfo
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_k$229029 = -16						; size = 4
_i$229025 = -12						; size = 4
_aIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_Recv$ = 8						; size = 4
?RecvQuestInfo@cWinQuestSystem@@QAEXPAUDGQuestUserInfo@@@Z PROC ; cWinQuestSystem::RecvQuestInfo
; _this$ = ecx

; 845  : {

  038c0	55		 push	 ebp
  038c1	8b ec		 mov	 ebp, esp
  038c3	83 ec 50	 sub	 esp, 80			; 00000050H
  038c6	53		 push	 ebx
  038c7	56		 push	 esi
  038c8	57		 push	 edi
  038c9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 846  : 	int aIndex = Recv->aIndex;

  038cc	8b 45 08	 mov	 eax, DWORD PTR _Recv$[ebp]
  038cf	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  038d3	89 4d f8	 mov	 DWORD PTR _aIndex$[ebp], ecx

; 847  : 
; 848  : 	for(int i=0; i < MAX_WIN_QUEST; i++)

  038d6	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$229025[ebp], 0
  038dd	eb 09		 jmp	 SHORT $LN6@RecvQuestI
$LN5@RecvQuestI:
  038df	8b 45 f4	 mov	 eax, DWORD PTR _i$229025[ebp]
  038e2	83 c0 01	 add	 eax, 1
  038e5	89 45 f4	 mov	 DWORD PTR _i$229025[ebp], eax
$LN6@RecvQuestI:
  038e8	83 7d f4 0a	 cmp	 DWORD PTR _i$229025[ebp], 10 ; 0000000aH
  038ec	0f 8d a2 00 00
	00		 jge	 $LN4@RecvQuestI

; 849  : 	{
; 850  : 		this->WinQ[aIndex].Start[i] = Recv->Start[i];

  038f2	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  038f5	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  038fb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  038fe	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  03905	8b 45 f4	 mov	 eax, DWORD PTR _i$229025[ebp]
  03908	8b 4d f4	 mov	 ecx, DWORD PTR _i$229025[ebp]
  0390b	8b 75 08	 mov	 esi, DWORD PTR _Recv$[ebp]
  0390e	66 8b 4c 4e 10	 mov	 cx, WORD PTR [esi+ecx*2+16]
  03913	66 89 0c 42	 mov	 WORD PTR [edx+eax*2], cx

; 851  : 		this->WinQ[aIndex].Num[i] = Recv->Num[i];

  03917	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0391a	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03920	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03923	8d 94 01 40 d3
	5f 00		 lea	 edx, DWORD PTR [ecx+eax+6280000]
  0392a	8b 45 f4	 mov	 eax, DWORD PTR _i$229025[ebp]
  0392d	8b 4d f4	 mov	 ecx, DWORD PTR _i$229025[ebp]
  03930	8b 75 08	 mov	 esi, DWORD PTR _Recv$[ebp]
  03933	66 8b 4c 4e 24	 mov	 cx, WORD PTR [esi+ecx*2+36]
  03938	66 89 4c 42 14	 mov	 WORD PTR [edx+eax*2+20], cx

; 852  : 
; 853  : 		for(int k = 0; k < 5 ; k++)

  0393d	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _k$229029[ebp], 0
  03944	eb 09		 jmp	 SHORT $LN3@RecvQuestI
$LN2@RecvQuestI:
  03946	8b 45 f0	 mov	 eax, DWORD PTR _k$229029[ebp]
  03949	83 c0 01	 add	 eax, 1
  0394c	89 45 f0	 mov	 DWORD PTR _k$229029[ebp], eax
$LN3@RecvQuestI:
  0394f	83 7d f0 05	 cmp	 DWORD PTR _k$229029[ebp], 5
  03953	7d 3a		 jge	 SHORT $LN1@RecvQuestI

; 854  : 		{
; 855  : 			this->WinQ[aIndex].Count[i][k] = Recv->Count[i][k];

  03955	8b 45 f4	 mov	 eax, DWORD PTR _i$229025[ebp]
  03958	6b c0 0a	 imul	 eax, 10			; 0000000aH
  0395b	8b 4d 08	 mov	 ecx, DWORD PTR _Recv$[ebp]
  0395e	8d 54 01 38	 lea	 edx, DWORD PTR [ecx+eax+56]
  03962	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03965	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  0396b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0396e	8d 84 01 40 d3
	5f 00		 lea	 eax, DWORD PTR [ecx+eax+6280000]
  03975	8b 4d f4	 mov	 ecx, DWORD PTR _i$229025[ebp]
  03978	6b c9 0a	 imul	 ecx, 10			; 0000000aH
  0397b	8d 44 08 28	 lea	 eax, DWORD PTR [eax+ecx+40]
  0397f	8b 4d f0	 mov	 ecx, DWORD PTR _k$229029[ebp]
  03982	8b 75 f0	 mov	 esi, DWORD PTR _k$229029[ebp]
  03985	66 8b 14 72	 mov	 dx, WORD PTR [edx+esi*2]
  03989	66 89 14 48	 mov	 WORD PTR [eax+ecx*2], dx

; 856  : 		}

  0398d	eb b7		 jmp	 SHORT $LN2@RecvQuestI
$LN1@RecvQuestI:

; 857  : 	}

  0398f	e9 4b ff ff ff	 jmp	 $LN5@RecvQuestI
$LN4@RecvQuestI:

; 858  : 
; 859  : 	this->WinQ[aIndex].Damage = Recv->Damage;	//

  03994	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03997	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  0399d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  039a0	8b 55 08	 mov	 edx, DWORD PTR _Recv$[ebp]
  039a3	8b 92 9c 00 00
	00		 mov	 edx, DWORD PTR [edx+156]
  039a9	89 94 01 cc d3
	5f 00		 mov	 DWORD PTR [ecx+eax+6280140], edx

; 860  : 	this->WinQ[aIndex].Defence = Recv->Defence;	//

  039b0	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  039b3	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  039b9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  039bc	8b 55 08	 mov	 edx, DWORD PTR _Recv$[ebp]
  039bf	8b 92 a0 00 00
	00		 mov	 edx, DWORD PTR [edx+160]
  039c5	89 94 01 d0 d3
	5f 00		 mov	 DWORD PTR [ecx+eax+6280144], edx

; 861  : 	this->WinQ[aIndex].Life = Recv->Life;	//<--NoWork

  039cc	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  039cf	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  039d5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  039d8	8b 55 08	 mov	 edx, DWORD PTR _Recv$[ebp]
  039db	8b 92 a4 00 00
	00		 mov	 edx, DWORD PTR [edx+164]
  039e1	89 94 01 d4 d3
	5f 00		 mov	 DWORD PTR [ecx+eax+6280148], edx

; 862  : 	this->WinQ[aIndex].SD = Recv->SD;//<--NoWork

  039e8	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  039eb	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  039f1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  039f4	8b 55 08	 mov	 edx, DWORD PTR _Recv$[ebp]
  039f7	8b 92 a8 00 00
	00		 mov	 edx, DWORD PTR [edx+168]
  039fd	89 94 01 d8 d3
	5f 00		 mov	 DWORD PTR [ecx+eax+6280152], edx

; 863  : 	this->WinQ[aIndex].Crit = Recv->Crit;//

  03a04	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03a07	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03a0d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03a10	8b 55 08	 mov	 edx, DWORD PTR _Recv$[ebp]
  03a13	8b 92 ac 00 00
	00		 mov	 edx, DWORD PTR [edx+172]
  03a19	89 94 01 dc d3
	5f 00		 mov	 DWORD PTR [ecx+eax+6280156], edx

; 864  : 	this->WinQ[aIndex].Exel = Recv->Exel;//

  03a20	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03a23	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03a29	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03a2c	8b 55 08	 mov	 edx, DWORD PTR _Recv$[ebp]
  03a2f	8b 92 b0 00 00
	00		 mov	 edx, DWORD PTR [edx+176]
  03a35	89 94 01 e0 d3
	5f 00		 mov	 DWORD PTR [ecx+eax+6280160], edx

; 865  : 	this->WinQ[aIndex].Double = Recv->Double;//

  03a3c	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03a3f	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03a45	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03a48	8b 55 08	 mov	 edx, DWORD PTR _Recv$[ebp]
  03a4b	8b 92 b4 00 00
	00		 mov	 edx, DWORD PTR [edx+180]
  03a51	89 94 01 e4 d3
	5f 00		 mov	 DWORD PTR [ecx+eax+6280164], edx

; 866  : 	this->WinQ[aIndex].Ignore = Recv->Ignore;

  03a58	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03a5b	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03a61	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03a64	8b 55 08	 mov	 edx, DWORD PTR _Recv$[ebp]
  03a67	8b 92 b8 00 00
	00		 mov	 edx, DWORD PTR [edx+184]
  03a6d	89 94 01 e8 d3
	5f 00		 mov	 DWORD PTR [ecx+eax+6280168], edx

; 867  : 	this->WinQ[aIndex].Ref = Recv->Ref;	//

  03a74	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03a77	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03a7d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03a80	8b 55 08	 mov	 edx, DWORD PTR _Recv$[ebp]
  03a83	8b 92 bc 00 00
	00		 mov	 edx, DWORD PTR [edx+188]
  03a89	89 94 01 ec d3
	5f 00		 mov	 DWORD PTR [ecx+eax+6280172], edx

; 868  : 	this->WinQ[aIndex].Exp = Recv->Exp;

  03a90	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03a93	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03a99	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03a9c	8b 55 08	 mov	 edx, DWORD PTR _Recv$[ebp]
  03a9f	8b 92 c0 00 00
	00		 mov	 edx, DWORD PTR [edx+192]
  03aa5	89 94 01 f0 d3
	5f 00		 mov	 DWORD PTR [ecx+eax+6280176], edx

; 869  : 	this->WinQ[aIndex].Drop = Recv->Drop;

  03aac	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03aaf	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03ab5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03ab8	8b 55 08	 mov	 edx, DWORD PTR _Recv$[ebp]
  03abb	8b 92 c4 00 00
	00		 mov	 edx, DWORD PTR [edx+196]
  03ac1	89 94 01 f4 d3
	5f 00		 mov	 DWORD PTR [ecx+eax+6280180], edx

; 870  : 
; 871  : 	this->SendPacket(aIndex,0);

  03ac8	6a 00		 push	 0
  03aca	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03acd	50		 push	 eax
  03ace	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03ad1	e8 00 00 00 00	 call	 ?SendPacket@cWinQuestSystem@@QAEXHE@Z ; cWinQuestSystem::SendPacket

; 872  : }

  03ad6	5f		 pop	 edi
  03ad7	5e		 pop	 esi
  03ad8	5b		 pop	 ebx
  03ad9	8b e5		 mov	 esp, ebp
  03adb	5d		 pop	 ebp
  03adc	c2 04 00	 ret	 4
?RecvQuestInfo@cWinQuestSystem@@QAEXPAUDGQuestUserInfo@@@Z ENDP ; cWinQuestSystem::RecvQuestInfo
_TEXT	ENDS
PUBLIC	?CharOptions@cWinQuestSystem@@QAEXH@Z		; cWinQuestSystem::CharOptions
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_lpObj$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
?CharOptions@cWinQuestSystem@@QAEXH@Z PROC		; cWinQuestSystem::CharOptions
; _this$ = ecx

; 877  : {

  03ae0	55		 push	 ebp
  03ae1	8b ec		 mov	 ebp, esp
  03ae3	83 ec 48	 sub	 esp, 72			; 00000048H
  03ae6	53		 push	 ebx
  03ae7	56		 push	 esi
  03ae8	57		 push	 edi
  03ae9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 878  : 	if(!this->Enable) return;

  03aec	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  03aef	0f b6 88 a8 f0
	89 00		 movzx	 ecx, BYTE PTR [eax+9040040]
  03af6	85 c9		 test	 ecx, ecx
  03af8	75 05		 jne	 SHORT $LN15@CharOption
  03afa	e9 87 03 00 00	 jmp	 $LN16@CharOption
$LN15@CharOption:

; 879  : 
; 880  : 	LPOBJ lpObj = &gObj[aIndex];

  03aff	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03b02	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  03b08	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  03b0e	89 45 f8	 mov	 DWORD PTR _lpObj$[ebp], eax

; 881  : 
; 882  : 	if(this->WinQ[aIndex].Ref > 0)

  03b11	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03b14	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03b1a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03b1d	83 bc 01 ec d3
	5f 00 00	 cmp	 DWORD PTR [ecx+eax+6280172], 0
  03b25	7e 3f		 jle	 SHORT $LN14@CharOption

; 883  : 	{
; 884  : 		lpObj->DamageReflect += this->WinQ[aIndex].Ref;

  03b27	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03b2a	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03b30	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  03b33	0f b6 91 71 01
	00 00		 movzx	 edx, BYTE PTR [ecx+369]
  03b3a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03b3d	03 94 01 ec d3
	5f 00		 add	 edx, DWORD PTR [ecx+eax+6280172]
  03b44	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03b47	88 90 71 01 00
	00		 mov	 BYTE PTR [eax+369], dl

; 885  : 		if(lpObj->DamageReflect >= 90)

  03b4d	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03b50	0f b6 88 71 01
	00 00		 movzx	 ecx, BYTE PTR [eax+369]
  03b57	83 f9 5a	 cmp	 ecx, 90			; 0000005aH
  03b5a	7c 0a		 jl	 SHORT $LN14@CharOption

; 886  : 		{
; 887  : 			lpObj->DamageReflect = 90;

  03b5c	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03b5f	c6 80 71 01 00
	00 5a		 mov	 BYTE PTR [eax+369], 90	; 0000005aH
$LN14@CharOption:

; 888  : 		}
; 889  : 	}
; 890  : 
; 891  : 	if(this->WinQ[aIndex].Damage > 0)

  03b66	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03b69	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03b6f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03b72	83 bc 01 cc d3
	5f 00 00	 cmp	 DWORD PTR [ecx+eax+6280140], 0
  03b7a	0f 8e de 00 00
	00		 jle	 $LN12@CharOption

; 892  : 	{
; 893  : 		lpObj->m_AttackDamageMaxLeft += this->WinQ[aIndex].Damage;

  03b80	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03b83	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03b89	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  03b8c	8b 91 78 04 00
	00		 mov	 edx, DWORD PTR [ecx+1144]
  03b92	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03b95	03 94 01 cc d3
	5f 00		 add	 edx, DWORD PTR [ecx+eax+6280140]
  03b9c	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03b9f	89 90 78 04 00
	00		 mov	 DWORD PTR [eax+1144], edx

; 894  : 		lpObj->m_AttackDamageMinLeft += this->WinQ[aIndex].Damage;

  03ba5	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03ba8	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03bae	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  03bb1	8b 91 7c 04 00
	00		 mov	 edx, DWORD PTR [ecx+1148]
  03bb7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03bba	03 94 01 cc d3
	5f 00		 add	 edx, DWORD PTR [ecx+eax+6280140]
  03bc1	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03bc4	89 90 7c 04 00
	00		 mov	 DWORD PTR [eax+1148], edx

; 895  : 		lpObj->m_AttackDamageMaxRight += this->WinQ[aIndex].Damage;

  03bca	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03bcd	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03bd3	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  03bd6	8b 91 80 04 00
	00		 mov	 edx, DWORD PTR [ecx+1152]
  03bdc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03bdf	03 94 01 cc d3
	5f 00		 add	 edx, DWORD PTR [ecx+eax+6280140]
  03be6	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03be9	89 90 80 04 00
	00		 mov	 DWORD PTR [eax+1152], edx

; 896  : 		lpObj->m_AttackDamageMinRight += this->WinQ[aIndex].Damage;

  03bef	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03bf2	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03bf8	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  03bfb	8b 91 84 04 00
	00		 mov	 edx, DWORD PTR [ecx+1156]
  03c01	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03c04	03 94 01 cc d3
	5f 00		 add	 edx, DWORD PTR [ecx+eax+6280140]
  03c0b	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03c0e	89 90 84 04 00
	00		 mov	 DWORD PTR [eax+1156], edx

; 897  : 
; 898  : 		lpObj->m_MagicDamageMin += this->WinQ[aIndex].Damage;

  03c14	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03c17	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03c1d	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  03c20	8b 91 68 04 00
	00		 mov	 edx, DWORD PTR [ecx+1128]
  03c26	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03c29	03 94 01 cc d3
	5f 00		 add	 edx, DWORD PTR [ecx+eax+6280140]
  03c30	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03c33	89 90 68 04 00
	00		 mov	 DWORD PTR [eax+1128], edx

; 899  : 		lpObj->m_MagicDamageMax += this->WinQ[aIndex].Damage;

  03c39	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03c3c	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03c42	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  03c45	8b 91 6c 04 00
	00		 mov	 edx, DWORD PTR [ecx+1132]
  03c4b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03c4e	03 94 01 cc d3
	5f 00		 add	 edx, DWORD PTR [ecx+eax+6280140]
  03c55	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03c58	89 90 6c 04 00
	00		 mov	 DWORD PTR [eax+1132], edx
$LN12@CharOption:

; 900  : 	}
; 901  : 
; 902  : 	if(this->WinQ[aIndex].Defence > 0)

  03c5e	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03c61	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03c67	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03c6a	83 bc 01 d0 d3
	5f 00 00	 cmp	 DWORD PTR [ecx+eax+6280144], 0
  03c72	7e 4a		 jle	 SHORT $LN11@CharOption

; 903  : 	{
; 904  : 		lpObj->m_Defense += this->WinQ[aIndex].Defence;

  03c74	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03c77	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03c7d	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  03c80	8b 91 94 04 00
	00		 mov	 edx, DWORD PTR [ecx+1172]
  03c86	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03c89	03 94 01 d0 d3
	5f 00		 add	 edx, DWORD PTR [ecx+eax+6280144]
  03c90	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03c93	89 90 94 04 00
	00		 mov	 DWORD PTR [eax+1172], edx

; 905  : 		lpObj->m_MagicDefense += this->WinQ[aIndex].Defence;

  03c99	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03c9c	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03ca2	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  03ca5	8b 91 98 04 00
	00		 mov	 edx, DWORD PTR [ecx+1176]
  03cab	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03cae	03 94 01 d0 d3
	5f 00		 add	 edx, DWORD PTR [ecx+eax+6280144]
  03cb5	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03cb8	89 90 98 04 00
	00		 mov	 DWORD PTR [eax+1176], edx
$LN11@CharOption:

; 906  : 	}
; 907  : 
; 908  : 	if(this->WinQ[aIndex].Crit > 0)

  03cbe	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03cc1	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03cc7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03cca	83 bc 01 dc d3
	5f 00 00	 cmp	 DWORD PTR [ecx+eax+6280156], 0
  03cd2	7e 3e		 jle	 SHORT $LN10@CharOption

; 909  : 	{
; 910  : 		lpObj->m_CriticalDamage += this->WinQ[aIndex].Crit;

  03cd4	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03cd7	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03cdd	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  03ce0	8b 91 bc 04 00
	00		 mov	 edx, DWORD PTR [ecx+1212]
  03ce6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03ce9	03 94 01 dc d3
	5f 00		 add	 edx, DWORD PTR [ecx+eax+6280156]
  03cf0	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03cf3	89 90 bc 04 00
	00		 mov	 DWORD PTR [eax+1212], edx

; 911  : 		if(lpObj->m_CriticalDamage > 90)

  03cf9	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03cfc	83 b8 bc 04 00
	00 5a		 cmp	 DWORD PTR [eax+1212], 90 ; 0000005aH
  03d03	7e 0d		 jle	 SHORT $LN10@CharOption

; 912  : 		{
; 913  : 			lpObj->m_CriticalDamage = 90;

  03d05	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03d08	c7 80 bc 04 00
	00 5a 00 00 00	 mov	 DWORD PTR [eax+1212], 90 ; 0000005aH
$LN10@CharOption:

; 914  : 		}
; 915  : 	}
; 916  : 
; 917  : 	if(this->WinQ[aIndex].Exel > 0)

  03d12	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03d15	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03d1b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03d1e	83 bc 01 e0 d3
	5f 00 00	 cmp	 DWORD PTR [ecx+eax+6280160], 0
  03d26	7e 3e		 jle	 SHORT $LN8@CharOption

; 918  : 	{
; 919  : 		lpObj->m_ExcelentDamage += this->WinQ[aIndex].Exel;

  03d28	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03d2b	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03d31	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  03d34	8b 91 c0 04 00
	00		 mov	 edx, DWORD PTR [ecx+1216]
  03d3a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03d3d	03 94 01 e0 d3
	5f 00		 add	 edx, DWORD PTR [ecx+eax+6280160]
  03d44	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03d47	89 90 c0 04 00
	00		 mov	 DWORD PTR [eax+1216], edx

; 920  : 		if(lpObj->m_ExcelentDamage > 90)

  03d4d	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03d50	83 b8 c0 04 00
	00 5a		 cmp	 DWORD PTR [eax+1216], 90 ; 0000005aH
  03d57	7e 0d		 jle	 SHORT $LN8@CharOption

; 921  : 		{
; 922  : 			lpObj->m_ExcelentDamage = 90;

  03d59	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03d5c	c7 80 c0 04 00
	00 5a 00 00 00	 mov	 DWORD PTR [eax+1216], 90 ; 0000005aH
$LN8@CharOption:

; 923  : 		}
; 924  : 	}
; 925  : 
; 926  : 	if(this->WinQ[aIndex].Double > 0)

  03d66	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03d69	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03d6f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03d72	83 bc 01 e4 d3
	5f 00 00	 cmp	 DWORD PTR [ecx+eax+6280164], 0
  03d7a	7e 3f		 jle	 SHORT $LN6@CharOption

; 927  : 	{
; 928  : 		lpObj->SetOpDoubleDamage += this->WinQ[aIndex].Double;

  03d7c	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03d7f	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03d85	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  03d88	0f b6 91 3f 11
	00 00		 movzx	 edx, BYTE PTR [ecx+4415]
  03d8f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03d92	03 94 01 e4 d3
	5f 00		 add	 edx, DWORD PTR [ecx+eax+6280164]
  03d99	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03d9c	88 90 3f 11 00
	00		 mov	 BYTE PTR [eax+4415], dl

; 929  : 		if(lpObj->SetOpDoubleDamage > 90)

  03da2	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03da5	0f b6 88 3f 11
	00 00		 movzx	 ecx, BYTE PTR [eax+4415]
  03dac	83 f9 5a	 cmp	 ecx, 90			; 0000005aH
  03daf	7e 0a		 jle	 SHORT $LN6@CharOption

; 930  : 		{
; 931  : 			lpObj->SetOpDoubleDamage = 90;

  03db1	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03db4	c6 80 3f 11 00
	00 5a		 mov	 BYTE PTR [eax+4415], 90	; 0000005aH
$LN6@CharOption:

; 932  : 		}
; 933  : 	}
; 934  : 
; 935  : 	if(this->WinQ[aIndex].Ignore > 0)

  03dbb	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03dbe	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03dc4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03dc7	83 bc 01 e8 d3
	5f 00 00	 cmp	 DWORD PTR [ecx+eax+6280168], 0
  03dcf	7e 3f		 jle	 SHORT $LN4@CharOption

; 936  : 	{
; 937  : 		lpObj->SetOpIgnoreDefense += this->WinQ[aIndex].Ignore;

  03dd1	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03dd4	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03dda	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  03ddd	0f b6 91 3e 11
	00 00		 movzx	 edx, BYTE PTR [ecx+4414]
  03de4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03de7	03 94 01 e8 d3
	5f 00		 add	 edx, DWORD PTR [ecx+eax+6280168]
  03dee	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03df1	88 90 3e 11 00
	00		 mov	 BYTE PTR [eax+4414], dl

; 938  : 		if(lpObj->SetOpIgnoreDefense > 90)

  03df7	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03dfa	0f b6 88 3e 11
	00 00		 movzx	 ecx, BYTE PTR [eax+4414]
  03e01	83 f9 5a	 cmp	 ecx, 90			; 0000005aH
  03e04	7e 0a		 jle	 SHORT $LN4@CharOption

; 939  : 		{
; 940  : 			lpObj->SetOpIgnoreDefense = 90;

  03e06	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03e09	c6 80 3e 11 00
	00 5a		 mov	 BYTE PTR [eax+4414], 90	; 0000005aH
$LN4@CharOption:

; 941  : 		}
; 942  : 	}
; 943  : 
; 944  : 	if(this->WinQ[aIndex].Life > 0)

  03e10	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03e13	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03e19	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03e1c	83 bc 01 d4 d3
	5f 00 00	 cmp	 DWORD PTR [ecx+eax+6280148], 0
  03e24	7e 25		 jle	 SHORT $LN2@CharOption

; 945  : 	{
; 946  : 		lpObj->AddLife += this->WinQ[aIndex].Life;

  03e26	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03e29	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03e2f	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  03e32	8b 91 4c 01 00
	00		 mov	 edx, DWORD PTR [ecx+332]
  03e38	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03e3b	03 94 01 d4 d3
	5f 00		 add	 edx, DWORD PTR [ecx+eax+6280148]
  03e42	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03e45	89 90 4c 01 00
	00		 mov	 DWORD PTR [eax+332], edx
$LN2@CharOption:

; 947  : 	}
; 948  : 
; 949  : 	if(this->WinQ[aIndex].SD > 0)

  03e4b	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03e4e	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03e54	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03e57	83 bc 01 d8 d3
	5f 00 00	 cmp	 DWORD PTR [ecx+eax+6280152], 0
  03e5f	7e 25		 jle	 SHORT $LN16@CharOption

; 950  : 	{
; 951  : 		lpObj->iAddShield += this->WinQ[aIndex].SD;

  03e61	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03e64	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03e6a	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  03e6d	8b 91 5c 01 00
	00		 mov	 edx, DWORD PTR [ecx+348]
  03e73	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03e76	03 94 01 d8 d3
	5f 00		 add	 edx, DWORD PTR [ecx+eax+6280152]
  03e7d	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  03e80	89 90 5c 01 00
	00		 mov	 DWORD PTR [eax+348], edx
$LN16@CharOption:

; 952  : 	}
; 953  : }

  03e86	5f		 pop	 edi
  03e87	5e		 pop	 esi
  03e88	5b		 pop	 ebx
  03e89	8b e5		 mov	 esp, ebp
  03e8b	5d		 pop	 ebp
  03e8c	c2 04 00	 ret	 4
?CharOptions@cWinQuestSystem@@QAEXH@Z ENDP		; cWinQuestSystem::CharOptions
_TEXT	ENDS
PUBLIC	?ExpOption@cWinQuestSystem@@QAEXHAA_J@Z		; cWinQuestSystem::ExpOption
EXTRN	__alldiv:PROC
EXTRN	__allmul:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_Exp$ = 12						; size = 4
?ExpOption@cWinQuestSystem@@QAEXHAA_J@Z PROC		; cWinQuestSystem::ExpOption
; _this$ = ecx

; 958  : {

  03e90	55		 push	 ebp
  03e91	8b ec		 mov	 ebp, esp
  03e93	83 ec 44	 sub	 esp, 68			; 00000044H
  03e96	53		 push	 ebx
  03e97	56		 push	 esi
  03e98	57		 push	 edi
  03e99	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 959  : 	if(!this->Enable) return;

  03e9c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  03e9f	0f b6 88 a8 f0
	89 00		 movzx	 ecx, BYTE PTR [eax+9040040]
  03ea6	85 c9		 test	 ecx, ecx
  03ea8	75 02		 jne	 SHORT $LN2@ExpOption
  03eaa	eb 56		 jmp	 SHORT $LN3@ExpOption
$LN2@ExpOption:

; 960  : 	
; 961  : 	if(this->WinQ[aIndex].Exp > 0)

  03eac	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03eaf	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03eb5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03eb8	83 bc 01 f0 d3
	5f 00 00	 cmp	 DWORD PTR [ecx+eax+6280176], 0
  03ec0	7e 40		 jle	 SHORT $LN3@ExpOption

; 962  : 	{
; 963  : 		Exp += ( Exp * this->WinQ[aIndex].Exp ) / 100;

  03ec2	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03ec5	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03ecb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03ece	8b 84 01 f0 d3
	5f 00		 mov	 eax, DWORD PTR [ecx+eax+6280176]
  03ed5	99		 cdq
  03ed6	8b 4d 0c	 mov	 ecx, DWORD PTR _Exp$[ebp]
  03ed9	52		 push	 edx
  03eda	50		 push	 eax
  03edb	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  03ede	52		 push	 edx
  03edf	8b 01		 mov	 eax, DWORD PTR [ecx]
  03ee1	50		 push	 eax
  03ee2	e8 00 00 00 00	 call	 __allmul
  03ee7	6a 00		 push	 0
  03ee9	6a 64		 push	 100			; 00000064H
  03eeb	52		 push	 edx
  03eec	50		 push	 eax
  03eed	e8 00 00 00 00	 call	 __alldiv
  03ef2	8b 4d 0c	 mov	 ecx, DWORD PTR _Exp$[ebp]
  03ef5	03 01		 add	 eax, DWORD PTR [ecx]
  03ef7	13 51 04	 adc	 edx, DWORD PTR [ecx+4]
  03efa	8b 4d 0c	 mov	 ecx, DWORD PTR _Exp$[ebp]
  03efd	89 01		 mov	 DWORD PTR [ecx], eax
  03eff	89 51 04	 mov	 DWORD PTR [ecx+4], edx
$LN3@ExpOption:

; 964  : 	}
; 965  : }

  03f02	5f		 pop	 edi
  03f03	5e		 pop	 esi
  03f04	5b		 pop	 ebx
  03f05	8b e5		 mov	 esp, ebp
  03f07	5d		 pop	 ebp
  03f08	c2 08 00	 ret	 8
?ExpOption@cWinQuestSystem@@QAEXHAA_J@Z ENDP		; cWinQuestSystem::ExpOption
_TEXT	ENDS
PUBLIC	__real@4059000000000000
PUBLIC	?ZenOption@cWinQuestSystem@@QAEXHAAM@Z		; cWinQuestSystem::ZenOption
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_Money$ = 12						; size = 4
?ZenOption@cWinQuestSystem@@QAEXHAAM@Z PROC		; cWinQuestSystem::ZenOption
; _this$ = ecx

; 970  : {

  03f10	55		 push	 ebp
  03f11	8b ec		 mov	 ebp, esp
  03f13	83 ec 44	 sub	 esp, 68			; 00000044H
  03f16	53		 push	 ebx
  03f17	56		 push	 esi
  03f18	57		 push	 edi
  03f19	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 971  : 	if(!this->Enable) return;

  03f1c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  03f1f	0f b6 88 a8 f0
	89 00		 movzx	 ecx, BYTE PTR [eax+9040040]
  03f26	85 c9		 test	 ecx, ecx
  03f28	75 02		 jne	 SHORT $LN2@ZenOption
  03f2a	eb 3e		 jmp	 SHORT $LN3@ZenOption
$LN2@ZenOption:

; 972  : 
; 973  : 	if(this->WinQ[aIndex].Drop > 0)

  03f2c	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03f2f	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03f35	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03f38	83 bc 01 f4 d3
	5f 00 00	 cmp	 DWORD PTR [ecx+eax+6280180], 0
  03f40	7e 28		 jle	 SHORT $LN1@ZenOption

; 974  : 	{
; 975  : 		Money += ( Money * this->WinQ[aIndex].Exp ) / 100;

  03f42	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  03f45	69 c0 b8 00 00
	00		 imul	 eax, 184		; 000000b8H
  03f4b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03f4e	db 84 01 f0 d3
	5f 00		 fild	 DWORD PTR [ecx+eax+6280176]
  03f55	8b 55 0c	 mov	 edx, DWORD PTR _Money$[ebp]
  03f58	d8 0a		 fmul	 DWORD PTR [edx]
  03f5a	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4059000000000000
  03f60	8b 45 0c	 mov	 eax, DWORD PTR _Money$[ebp]
  03f63	d8 00		 fadd	 DWORD PTR [eax]
  03f65	8b 4d 0c	 mov	 ecx, DWORD PTR _Money$[ebp]
  03f68	d9 19		 fstp	 DWORD PTR [ecx]
$LN1@ZenOption:
$LN3@ZenOption:

; 976  : 	}
; 977  : }

  03f6a	5f		 pop	 edi
  03f6b	5e		 pop	 esi
  03f6c	5b		 pop	 ebx
  03f6d	8b e5		 mov	 esp, ebp
  03f6f	5d		 pop	 ebp
  03f70	c2 08 00	 ret	 8
?ZenOption@cWinQuestSystem@@QAEXHAAM@Z ENDP		; cWinQuestSystem::ZenOption
_TEXT	ENDS
PUBLIC	?GetActive@cWinQuestSystem@@QAE_NXZ		; cWinQuestSystem::GetActive
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetActive@cWinQuestSystem@@QAE_NXZ PROC		; cWinQuestSystem::GetActive
; _this$ = ecx

; 982  : {

  03f80	55		 push	 ebp
  03f81	8b ec		 mov	 ebp, esp
  03f83	83 ec 44	 sub	 esp, 68			; 00000044H
  03f86	53		 push	 ebx
  03f87	56		 push	 esi
  03f88	57		 push	 edi
  03f89	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 983  : 	return this->Enable;

  03f8c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  03f8f	8a 80 a8 f0 89
	00		 mov	 al, BYTE PTR [eax+9040040]

; 984  : }

  03f95	5f		 pop	 edi
  03f96	5e		 pop	 esi
  03f97	5b		 pop	 ebx
  03f98	8b e5		 mov	 esp, ebp
  03f9a	5d		 pop	 ebp
  03f9b	c3		 ret	 0
?GetActive@cWinQuestSystem@@QAE_NXZ ENDP		; cWinQuestSystem::GetActive
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??__EgWinQuestSystem@@YAXXZ
text$yc	SEGMENT
??__EgWinQuestSystem@@YAXXZ PROC			; `dynamic initializer for 'gWinQuestSystem'', COMDAT

; 21   : cWinQuestSystem gWinQuestSystem;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?gWinQuestSystem@@3VcWinQuestSystem@@A ; gWinQuestSystem
  0000e	e8 00 00 00 00	 call	 ??0cWinQuestSystem@@QAE@XZ ; cWinQuestSystem::cWinQuestSystem
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__EgWinQuestSystem@@YAXXZ ENDP			; `dynamic initializer for 'gWinQuestSystem''
text$yc	ENDS
PUBLIC	?gWinQuestSystem@@3VcWinQuestSystem@@A		; gWinQuestSystem
_BSS	SEGMENT
?gWinQuestSystem@@3VcWinQuestSystem@@A DB 089f0b0H DUP (?) ; gWinQuestSystem
_BSS	ENDS
CRT$XCU	SEGMENT
_gWinQuestSystem$initializer$ DD FLAT:??__EgWinQuestSystem@@YAXXZ
CRT$XCU	ENDS
END
