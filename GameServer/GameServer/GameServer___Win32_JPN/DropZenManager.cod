; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\DropZenManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?DropZenManager@@3VcDropZenManager@@A		; DropZenManager
_BSS	SEGMENT
?DropZenManager@@3VcDropZenManager@@A DB 02d8H DUP (?)	; DropZenManager
_BSS	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_C@_05OKMLJOMC@?$CFd?5?$CFd?$AA@		; `string'
PUBLIC	??_C@_0L@DBBEOKP@LOAD?5ERROR?$AA@		; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_06POMJKEPM@Common?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
PUBLIC	??_C@_0CC@NDLOBHGN@?4?4?2Data?2ExData?2DropZenManager?4in@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?LoadConfig@cDropZenManager@@QAEXXZ		; cDropZenManager::LoadConfig
EXTRN	_fclose:PROC
EXTRN	_sscanf:PROC
EXTRN	?Ex_IsBadFileLine@@YA_NPADAAH@Z:PROC		; Ex_IsBadFileLine
EXTRN	_fgets:PROC
EXTRN	_feof:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	_fopen:PROC
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT ??_C@_05OKMLJOMC@?$CFd?5?$CFd?$AA@
; File d:\projects\exteam6.3\source\gameserver\gameserver\dropzenmanager.cpp
CONST	SEGMENT
??_C@_05OKMLJOMC@?$CFd?5?$CFd?$AA@ DB '%d %d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DBBEOKP@LOAD?5ERROR?$AA@
CONST	SEGMENT
??_C@_0L@DBBEOKP@LOAD?5ERROR?$AA@ DB 'LOAD ERROR', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06POMJKEPM@Common?$AA@
CONST	SEGMENT
??_C@_06POMJKEPM@Common?$AA@ DB 'Common', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@NDLOBHGN@?4?4?2Data?2ExData?2DropZenManager?4in@
CONST	SEGMENT
??_C@_0CC@NDLOBHGN@?4?4?2Data?2ExData?2DropZenManager?4in@ DB '..\Data\Ex'
	DB	'Data\DropZenManager.ini', 00H		; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_n$218948 = -284					; size = 8
_Flag$ = -276						; size = 4
_Buff$ = -272						; size = 256
_file$ = -16						; size = 4
_i$218932 = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?LoadConfig@cDropZenManager@@QAEXXZ PROC		; cDropZenManager::LoadConfig
; _this$ = ecx

; 11   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 5c 01 00
	00		 sub	 esp, 348		; 0000015cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 12   : 	this->Enable = GetPrivateProfileInt("Common","Enable",0,DROPZEN_DIR);

  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@NDLOBHGN@?4?4?2Data?2ExData?2DropZenManager?4in@
  0001e	6a 00		 push	 0
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	89 01		 mov	 DWORD PTR [ecx], eax

; 13   : 
; 14   : 	for(int i(0);i<MAX_NUMBER_MAP;i++)

  00035	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$218932[ebp], 0
  0003c	eb 09		 jmp	 SHORT $LN9@LoadConfig
$LN8@LoadConfig:
  0003e	8b 45 f4	 mov	 eax, DWORD PTR _i$218932[ebp]
  00041	83 c0 01	 add	 eax, 1
  00044	89 45 f4	 mov	 DWORD PTR _i$218932[ebp], eax
$LN9@LoadConfig:
  00047	83 7d f4 5a	 cmp	 DWORD PTR _i$218932[ebp], 90 ; 0000005aH
  0004b	7d 1e		 jge	 SHORT $LN7@LoadConfig

; 15   : 	{
; 16   : 		this->Number[i].Map = 0;

  0004d	8b 45 f4	 mov	 eax, DWORD PTR _i$218932[ebp]
  00050	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	c7 44 c1 04 00
	00 00 00	 mov	 DWORD PTR [ecx+eax*8+4], 0

; 17   : 		this->Number[i].Zen = 0;

  0005b	8b 45 f4	 mov	 eax, DWORD PTR _i$218932[ebp]
  0005e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	c7 44 c1 08 00
	00 00 00	 mov	 DWORD PTR [ecx+eax*8+8], 0

; 18   : 	}

  00069	eb d3		 jmp	 SHORT $LN8@LoadConfig
$LN7@LoadConfig:

; 19   : 	FILE * file = fopen(DROPZEN_DIR,"r");

  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@NDLOBHGN@?4?4?2Data?2ExData?2DropZenManager?4in@
  00075	e8 00 00 00 00	 call	 _fopen
  0007a	83 c4 08	 add	 esp, 8
  0007d	89 45 f0	 mov	 DWORD PTR _file$[ebp], eax

; 20   : 	if(file == NULL)

  00080	83 7d f0 00	 cmp	 DWORD PTR _file$[ebp], 0
  00084	75 1d		 jne	 SHORT $LN6@LoadConfig

; 21   : 	{
; 22   : 		MessageBoxA(0,DROPZEN_DIR,"LOAD ERROR",0);

  00086	6a 00		 push	 0
  00088	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DBBEOKP@LOAD?5ERROR?$AA@
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@NDLOBHGN@?4?4?2Data?2ExData?2DropZenManager?4in@
  00092	6a 00		 push	 0
  00094	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 23   : 		this->Enable = false;

  0009a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0009d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN6@LoadConfig:

; 24   : 	}
; 25   : 	if(!this->Enable)return;

  000a3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a6	83 38 00	 cmp	 DWORD PTR [eax], 0
  000a9	75 05		 jne	 SHORT $LN5@LoadConfig
  000ab	e9 df 00 00 00	 jmp	 $LN10@LoadConfig
$LN5@LoadConfig:

; 26   : 
; 27   : 	char Buff[256];
; 28   : 	int Flag = 0;

  000b0	c7 85 ec fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _Flag$[ebp], 0

; 29   : 	this->mCount = 0;

  000ba	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	c7 80 d4 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+724], 0
$LN4@LoadConfig:

; 30   : 
; 31   : 	while(!feof(file)) // Проверяем есть ли строка в документе

  000c7	8b 45 f0	 mov	 eax, DWORD PTR _file$[ebp]
  000ca	50		 push	 eax
  000cb	e8 00 00 00 00	 call	 _feof
  000d0	83 c4 04	 add	 esp, 4
  000d3	85 c0		 test	 eax, eax
  000d5	0f 85 a8 00 00
	00		 jne	 $LN3@LoadConfig

; 32   : 	{
; 33   : 		fgets(Buff,256,file);//Функция читает текущую строку

  000db	8b 45 f0	 mov	 eax, DWORD PTR _file$[ebp]
  000de	50		 push	 eax
  000df	68 00 01 00 00	 push	 256			; 00000100H
  000e4	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _Buff$[ebp]
  000ea	51		 push	 ecx
  000eb	e8 00 00 00 00	 call	 _fgets
  000f0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 34   : 		if(Ex_IsBadFileLine(Buff, Flag)) //Вспомогательная функция

  000f3	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _Flag$[ebp]
  000f9	50		 push	 eax
  000fa	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _Buff$[ebp]
  00100	51		 push	 ecx
  00101	e8 00 00 00 00	 call	 ?Ex_IsBadFileLine@@YA_NPADAAH@Z ; Ex_IsBadFileLine
  00106	83 c4 08	 add	 esp, 8
  00109	0f b6 d0	 movzx	 edx, al
  0010c	85 d2		 test	 edx, edx
  0010e	74 02		 je	 SHORT $LN2@LoadConfig

; 35   : 			continue;

  00110	eb b5		 jmp	 SHORT $LN4@LoadConfig
$LN2@LoadConfig:

; 36   : 		if(Flag == 1)

  00112	83 bd ec fe ff
	ff 01		 cmp	 DWORD PTR _Flag$[ebp], 1
  00119	75 63		 jne	 SHORT $LN1@LoadConfig

; 37   : 		{
; 38   : 			int n[2];
; 39   : 			sscanf(Buff, "%d %d", &n[0], &n[1]);

  0011b	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _n$218948[ebp+4]
  00121	50		 push	 eax
  00122	8d 8d e4 fe ff
	ff		 lea	 ecx, DWORD PTR _n$218948[ebp]
  00128	51		 push	 ecx
  00129	68 00 00 00 00	 push	 OFFSET ??_C@_05OKMLJOMC@?$CFd?5?$CFd?$AA@
  0012e	8d 95 f0 fe ff
	ff		 lea	 edx, DWORD PTR _Buff$[ebp]
  00134	52		 push	 edx
  00135	e8 00 00 00 00	 call	 _sscanf
  0013a	83 c4 10	 add	 esp, 16			; 00000010H

; 40   : 			this->Number[this->mCount].Map = n[0];

  0013d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00140	8b 88 d4 02 00
	00		 mov	 ecx, DWORD PTR [eax+724]
  00146	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00149	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _n$218948[ebp]
  0014f	89 44 ca 04	 mov	 DWORD PTR [edx+ecx*8+4], eax

; 41   : 			this->Number[this->mCount].Zen = n[1];

  00153	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00156	8b 88 d4 02 00
	00		 mov	 ecx, DWORD PTR [eax+724]
  0015c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0015f	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _n$218948[ebp+4]
  00165	89 44 ca 08	 mov	 DWORD PTR [edx+ecx*8+8], eax

; 42   : 			this->mCount++;

  00169	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0016c	8b 88 d4 02 00
	00		 mov	 ecx, DWORD PTR [eax+724]
  00172	83 c1 01	 add	 ecx, 1
  00175	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00178	89 8a d4 02 00
	00		 mov	 DWORD PTR [edx+724], ecx
$LN1@LoadConfig:

; 43   : 		}
; 44   : 	}

  0017e	e9 44 ff ff ff	 jmp	 $LN4@LoadConfig
$LN3@LoadConfig:

; 45   : 	fclose(file);

  00183	8b 45 f0	 mov	 eax, DWORD PTR _file$[ebp]
  00186	50		 push	 eax
  00187	e8 00 00 00 00	 call	 _fclose
  0018c	83 c4 04	 add	 esp, 4
$LN10@LoadConfig:

; 46   : }

  0018f	5f		 pop	 edi
  00190	5e		 pop	 esi
  00191	5b		 pop	 ebx
  00192	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00195	33 cd		 xor	 ecx, ebp
  00197	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0019c	8b e5		 mov	 esp, ebp
  0019e	5d		 pop	 ebp
  0019f	c3		 ret	 0
?LoadConfig@cDropZenManager@@QAEXXZ ENDP		; cDropZenManager::LoadConfig
_TEXT	ENDS
PUBLIC	__real@4059000000000000
PUBLIC	?Main@cDropZenManager@@QAEXPAUOBJECTSTRUCT@@AAM@Z ; cDropZenManager::Main
EXTRN	__fltused:DWORD
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_i$218956 = -8						; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_money$ = 12						; size = 4
?Main@cDropZenManager@@QAEXPAUOBJECTSTRUCT@@AAM@Z PROC	; cDropZenManager::Main
; _this$ = ecx

; 49   : {

  001a0	55		 push	 ebp
  001a1	8b ec		 mov	 ebp, esp
  001a3	83 ec 48	 sub	 esp, 72			; 00000048H
  001a6	53		 push	 ebx
  001a7	56		 push	 esi
  001a8	57		 push	 edi
  001a9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 50   : 	if(!this->Enable) return;

  001ac	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001af	83 38 00	 cmp	 DWORD PTR [eax], 0
  001b2	75 02		 jne	 SHORT $LN5@Main
  001b4	eb 54		 jmp	 SHORT $LN6@Main
$LN5@Main:

; 51   : 	for(int i=0;i<this->mCount;i++)

  001b6	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$218956[ebp], 0
  001bd	eb 09		 jmp	 SHORT $LN4@Main
$LN3@Main:
  001bf	8b 45 f8	 mov	 eax, DWORD PTR _i$218956[ebp]
  001c2	83 c0 01	 add	 eax, 1
  001c5	89 45 f8	 mov	 DWORD PTR _i$218956[ebp], eax
$LN4@Main:
  001c8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001cb	8b 4d f8	 mov	 ecx, DWORD PTR _i$218956[ebp]
  001ce	3b 88 d4 02 00
	00		 cmp	 ecx, DWORD PTR [eax+724]
  001d4	7d 34		 jge	 SHORT $LN2@Main

; 52   : 	{
; 53   : 		if(this->Number[i].Map == lpObj->MapNumber)

  001d6	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  001d9	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  001e0	8b 55 f8	 mov	 edx, DWORD PTR _i$218956[ebp]
  001e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001e6	39 4c d0 04	 cmp	 DWORD PTR [eax+edx*8+4], ecx
  001ea	75 1c		 jne	 SHORT $LN1@Main

; 54   : 		{
; 55   : 			money = (( money * this->Number[i].Zen ) / 100 );

  001ec	8b 45 f8	 mov	 eax, DWORD PTR _i$218956[ebp]
  001ef	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001f2	db 44 c1 08	 fild	 DWORD PTR [ecx+eax*8+8]
  001f6	8b 55 0c	 mov	 edx, DWORD PTR _money$[ebp]
  001f9	d8 0a		 fmul	 DWORD PTR [edx]
  001fb	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4059000000000000
  00201	8b 45 0c	 mov	 eax, DWORD PTR _money$[ebp]
  00204	d9 18		 fstp	 DWORD PTR [eax]

; 56   : 			return;

  00206	eb 02		 jmp	 SHORT $LN6@Main
$LN1@Main:

; 57   : 		}
; 58   : 	}

  00208	eb b5		 jmp	 SHORT $LN3@Main
$LN2@Main:
$LN6@Main:

; 59   : }

  0020a	5f		 pop	 edi
  0020b	5e		 pop	 esi
  0020c	5b		 pop	 ebx
  0020d	8b e5		 mov	 esp, ebp
  0020f	5d		 pop	 ebp
  00210	c2 08 00	 ret	 8
?Main@cDropZenManager@@QAEXPAUOBJECTSTRUCT@@AAM@Z ENDP	; cDropZenManager::Main
_TEXT	ENDS
END
