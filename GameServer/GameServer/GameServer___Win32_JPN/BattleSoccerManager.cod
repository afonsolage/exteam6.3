; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\BattleSoccerManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_7CBattleSoccerManager@@6B@			; CBattleSoccerManager::`vftable'
PUBLIC	??0CBattleSoccerManager@@QAE@XZ			; CBattleSoccerManager::CBattleSoccerManager
PUBLIC	??_R4CBattleSoccerManager@@6B@			; CBattleSoccerManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBattleSoccerManager@@@8		; CBattleSoccerManager `RTTI Type Descriptor'
PUBLIC	??_R3CBattleSoccerManager@@8			; CBattleSoccerManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBattleSoccerManager@@8			; CBattleSoccerManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBattleSoccerManager@@8		; CBattleSoccerManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECBattleSoccerManager@@UAEPAXI@Z:PROC	; CBattleSoccerManager::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CBattleSoccerManager@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\battlesoccermanager.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CBattleSoccerManager@@8 DD FLAT:??_R0?AVCBattleSoccerManager@@@8 ; CBattleSoccerManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBattleSoccerManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CBattleSoccerManager@@8
rdata$r	SEGMENT
??_R2CBattleSoccerManager@@8 DD FLAT:??_R1A@?0A@EA@CBattleSoccerManager@@8 ; CBattleSoccerManager::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CBattleSoccerManager@@8
rdata$r	SEGMENT
??_R3CBattleSoccerManager@@8 DD 00H			; CBattleSoccerManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CBattleSoccerManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBattleSoccerManager@@@8
_DATA	SEGMENT
??_R0?AVCBattleSoccerManager@@@8 DD FLAT:??_7type_info@@6B@ ; CBattleSoccerManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBattleSoccerManager@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CBattleSoccerManager@@6B@
rdata$r	SEGMENT
??_R4CBattleSoccerManager@@6B@ DD 00H			; CBattleSoccerManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBattleSoccerManager@@@8
	DD	FLAT:??_R3CBattleSoccerManager@@8
rdata$r	ENDS
;	COMDAT ??_7CBattleSoccerManager@@6B@
CONST	SEGMENT
??_7CBattleSoccerManager@@6B@ DD FLAT:??_R4CBattleSoccerManager@@6B@ ; CBattleSoccerManager::`vftable'
	DD	FLAT:??_ECBattleSoccerManager@@UAEPAXI@Z
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CBattleSoccerManager@@QAE@XZ PROC			; CBattleSoccerManager::CBattleSoccerManager
; _this$ = ecx

; 8    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CBattleSoccerManager@@6B@

; 9    : 	return;
; 10   : }

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CBattleSoccerManager@@QAE@XZ ENDP			; CBattleSoccerManager::CBattleSoccerManager
_TEXT	ENDS
PUBLIC	??1CBattleSoccerManager@@UAE@XZ			; CBattleSoccerManager::~CBattleSoccerManager
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCBattleSoccerManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCBattleSoccerManager@@UAEPAXI@Z PROC		; CBattleSoccerManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CBattleSoccerManager@@UAE@XZ ; CBattleSoccerManager::~CBattleSoccerManager
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCBattleSoccerManager@@UAEPAXI@Z ENDP		; CBattleSoccerManager::`scalar deleting destructor'
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CBattleSoccerManager@@UAE@XZ PROC			; CBattleSoccerManager::~CBattleSoccerManager
; _this$ = ecx

; 13   : {

  00020	55		 push	 ebp
  00021	8b ec		 mov	 ebp, esp
  00023	83 ec 44	 sub	 esp, 68			; 00000044H
  00026	53		 push	 ebx
  00027	56		 push	 esi
  00028	57		 push	 edi
  00029	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CBattleSoccerManager@@6B@

; 14   : 	return;
; 15   : }

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??1CBattleSoccerManager@@UAE@XZ ENDP			; CBattleSoccerManager::~CBattleSoccerManager
_TEXT	ENDS
PUBLIC	?InitBattleSoccer@@YAXXZ			; InitBattleSoccer
EXTRN	?SetGoalRightRect@CBattleSoccer@@QAEXHHHH@Z:PROC ; CBattleSoccer::SetGoalRightRect
EXTRN	?SetGoalLeftRect@CBattleSoccer@@QAEXHHHH@Z:PROC	; CBattleSoccer::SetGoalLeftRect
EXTRN	?SetGroundRect@CBattleGround@@QAEXHHHHH@Z:PROC	; CBattleGround::SetGroundRect
EXTRN	?SetBattleType@CBattleGround@@QAEXH@Z:PROC	; CBattleGround::SetBattleType
EXTRN	?gBSGround@@3PAPAVCBattleSoccer@@A:DWORD	; gBSGround
EXTRN	??0CBattleSoccer@@QAE@XZ:PROC			; CBattleSoccer::CBattleSoccer
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
xdata$x	SEGMENT
__unwindtable$?InitBattleSoccer@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitBattleSoccer@@YAXXZ$0
__ehfuncinfo$?InitBattleSoccer@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?InitBattleSoccer@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
_TEXT	SEGMENT
tv75 = -92						; size = 4
$T219334 = -88						; size = 4
$T219335 = -84						; size = 4
_n$219157 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?InitBattleSoccer@@YAXXZ PROC				; InitBattleSoccer

; 18   : {

  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
  00043	6a ff		 push	 -1
  00045	68 00 00 00 00	 push	 __ehhandler$?InitBattleSoccer@@YAXXZ
  0004a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00050	50		 push	 eax
  00051	83 ec 50	 sub	 esp, 80			; 00000050H
  00054	53		 push	 ebx
  00055	56		 push	 esi
  00056	57		 push	 edi
  00057	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0005c	33 c5		 xor	 eax, ebp
  0005e	50		 push	 eax
  0005f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00062	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 19   : 	for ( int n=0;n<MAX_BATTLESOCCER_GROUND;n++)

  00068	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _n$219157[ebp], 0
  0006f	eb 09		 jmp	 SHORT $LN3@InitBattle
$LN2@InitBattle:
  00071	8b 45 f0	 mov	 eax, DWORD PTR _n$219157[ebp]
  00074	83 c0 01	 add	 eax, 1
  00077	89 45 f0	 mov	 DWORD PTR _n$219157[ebp], eax
$LN3@InitBattle:
  0007a	83 7d f0 01	 cmp	 DWORD PTR _n$219157[ebp], 1
  0007e	7d 78		 jge	 SHORT $LN1@InitBattle

; 20   : 	{
; 21   : 		gBSGround[n] = new CBattleSoccer;

  00080	68 90 00 00 00	 push	 144			; 00000090H
  00085	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0008a	83 c4 04	 add	 esp, 4
  0008d	89 45 ac	 mov	 DWORD PTR $T219335[ebp], eax
  00090	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00097	83 7d ac 00	 cmp	 DWORD PTR $T219335[ebp], 0
  0009b	74 0d		 je	 SHORT $LN6@InitBattle
  0009d	8b 4d ac	 mov	 ecx, DWORD PTR $T219335[ebp]
  000a0	e8 00 00 00 00	 call	 ??0CBattleSoccer@@QAE@XZ ; CBattleSoccer::CBattleSoccer
  000a5	89 45 a4	 mov	 DWORD PTR tv75[ebp], eax
  000a8	eb 07		 jmp	 SHORT $LN7@InitBattle
$LN6@InitBattle:
  000aa	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN7@InitBattle:
  000b1	8b 45 a4	 mov	 eax, DWORD PTR tv75[ebp]
  000b4	89 45 a8	 mov	 DWORD PTR $T219334[ebp], eax
  000b7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000be	8b 4d f0	 mov	 ecx, DWORD PTR _n$219157[ebp]
  000c1	8b 55 a8	 mov	 edx, DWORD PTR $T219334[ebp]
  000c4	89 14 8d 00 00
	00 00		 mov	 DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[ecx*4], edx

; 22   : 		gBSGround[n]->m_BlueTeam = NULL;

  000cb	8b 45 f0	 mov	 eax, DWORD PTR _n$219157[ebp]
  000ce	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  000d5	c7 81 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+140], 0

; 23   : 		gBSGround[n]->m_RedTeam = NULL;

  000df	8b 45 f0	 mov	 eax, DWORD PTR _n$219157[ebp]
  000e2	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  000e9	c7 81 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+136], 0

; 24   : 	}

  000f3	e9 79 ff ff ff	 jmp	 $LN2@InitBattle
$LN1@InitBattle:

; 25   : 
; 26   : 	gBSGround[0]->SetBattleType(1);

  000f8	6a 01		 push	 1
  000fa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A ; gBSGround
  00100	e8 00 00 00 00	 call	 ?SetBattleType@CBattleGround@@QAEXH@Z ; CBattleGround::SetBattleType

; 27   : 	gBSGround[0]->SetGroundRect(6, 54, 141, 70, 180);

  00105	68 b4 00 00 00	 push	 180			; 000000b4H
  0010a	6a 46		 push	 70			; 00000046H
  0010c	68 8d 00 00 00	 push	 141			; 0000008dH
  00111	6a 36		 push	 54			; 00000036H
  00113	6a 06		 push	 6
  00115	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A ; gBSGround
  0011b	e8 00 00 00 00	 call	 ?SetGroundRect@CBattleGround@@QAEXHHHHH@Z ; CBattleGround::SetGroundRect

; 28   : 	gBSGround[0]->SetGoalLeftRect(60, 139, 64, 140);

  00120	68 8c 00 00 00	 push	 140			; 0000008cH
  00125	6a 40		 push	 64			; 00000040H
  00127	68 8b 00 00 00	 push	 139			; 0000008bH
  0012c	6a 3c		 push	 60			; 0000003cH
  0012e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A ; gBSGround
  00134	e8 00 00 00 00	 call	 ?SetGoalLeftRect@CBattleSoccer@@QAEXHHHH@Z ; CBattleSoccer::SetGoalLeftRect

; 29   : 	gBSGround[0]->SetGoalRightRect(60, 181, 64, 182);

  00139	68 b6 00 00 00	 push	 182			; 000000b6H
  0013e	6a 40		 push	 64			; 00000040H
  00140	68 b5 00 00 00	 push	 181			; 000000b5H
  00145	6a 3c		 push	 60			; 0000003cH
  00147	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A ; gBSGround
  0014d	e8 00 00 00 00	 call	 ?SetGoalRightRect@CBattleSoccer@@QAEXHHHH@Z ; CBattleSoccer::SetGoalRightRect

; 30   : }

  00152	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00155	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0015c	59		 pop	 ecx
  0015d	5f		 pop	 edi
  0015e	5e		 pop	 esi
  0015f	5b		 pop	 ebx
  00160	8b e5		 mov	 esp, ebp
  00162	5d		 pop	 ebp
  00163	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?InitBattleSoccer@@YAXXZ$0:
  00000	8b 45 ac	 mov	 eax, DWORD PTR $T219335[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?InitBattleSoccer@@YAXXZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InitBattleSoccer@@YAXXZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InitBattleSoccer@@YAXXZ ENDP				; InitBattleSoccer
PUBLIC	?ClearBattleSoccer@@YAXXZ			; ClearBattleSoccer
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv78 = -80						; size = 4
$T219349 = -76						; size = 4
$T219350 = -72						; size = 4
_n$219167 = -4						; size = 4
?ClearBattleSoccer@@YAXXZ PROC				; ClearBattleSoccer

; 33   : {

  00170	55		 push	 ebp
  00171	8b ec		 mov	 ebp, esp
  00173	83 ec 50	 sub	 esp, 80			; 00000050H
  00176	53		 push	 ebx
  00177	56		 push	 esi
  00178	57		 push	 edi

; 34   : 	for ( int n=0;n<MAX_BATTLESOCCER_GROUND;n++)

  00179	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _n$219167[ebp], 0
  00180	eb 09		 jmp	 SHORT $LN3@ClearBattl
$LN2@ClearBattl:
  00182	8b 45 fc	 mov	 eax, DWORD PTR _n$219167[ebp]
  00185	83 c0 01	 add	 eax, 1
  00188	89 45 fc	 mov	 DWORD PTR _n$219167[ebp], eax
$LN3@ClearBattl:
  0018b	83 7d fc 01	 cmp	 DWORD PTR _n$219167[ebp], 1
  0018f	7d 35		 jge	 SHORT $LN4@ClearBattl

; 35   : 	{
; 36   : 		delete gBSGround[n];

  00191	8b 45 fc	 mov	 eax, DWORD PTR _n$219167[ebp]
  00194	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  0019b	89 4d b8	 mov	 DWORD PTR $T219350[ebp], ecx
  0019e	8b 55 b8	 mov	 edx, DWORD PTR $T219350[ebp]
  001a1	89 55 b4	 mov	 DWORD PTR $T219349[ebp], edx
  001a4	83 7d b4 00	 cmp	 DWORD PTR $T219349[ebp], 0
  001a8	74 13		 je	 SHORT $LN6@ClearBattl
  001aa	6a 01		 push	 1
  001ac	8b 45 b4	 mov	 eax, DWORD PTR $T219349[ebp]
  001af	8b 10		 mov	 edx, DWORD PTR [eax]
  001b1	8b 4d b4	 mov	 ecx, DWORD PTR $T219349[ebp]
  001b4	8b 02		 mov	 eax, DWORD PTR [edx]
  001b6	ff d0		 call	 eax
  001b8	89 45 b0	 mov	 DWORD PTR tv78[ebp], eax
  001bb	eb 07		 jmp	 SHORT $LN7@ClearBattl
$LN6@ClearBattl:
  001bd	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN7@ClearBattl:

; 37   : 	}

  001c4	eb bc		 jmp	 SHORT $LN2@ClearBattl
$LN4@ClearBattl:

; 38   : }

  001c6	5f		 pop	 edi
  001c7	5e		 pop	 esi
  001c8	5b		 pop	 ebx
  001c9	8b e5		 mov	 esp, ebp
  001cb	5d		 pop	 ebp
  001cc	c3		 ret	 0
?ClearBattleSoccer@@YAXXZ ENDP				; ClearBattleSoccer
_TEXT	ENDS
PUBLIC	?gCheckBlankBattleGround@@YAHXZ			; gCheckBlankBattleGround
EXTRN	?GetUsed@CBattleGround@@QAEHXZ:PROC		; CBattleGround::GetUsed
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_n$219175 = -4						; size = 4
?gCheckBlankBattleGround@@YAHXZ PROC			; gCheckBlankBattleGround

; 41   : {

  001d0	55		 push	 ebp
  001d1	8b ec		 mov	 ebp, esp
  001d3	83 ec 44	 sub	 esp, 68			; 00000044H
  001d6	53		 push	 ebx
  001d7	56		 push	 esi
  001d8	57		 push	 edi

; 42   : 	for ( int n=0;n<MAX_BATTLESOCCER_GROUND;n++)

  001d9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _n$219175[ebp], 0
  001e0	eb 09		 jmp	 SHORT $LN4@gCheckBlan
$LN3@gCheckBlan:
  001e2	8b 45 fc	 mov	 eax, DWORD PTR _n$219175[ebp]
  001e5	83 c0 01	 add	 eax, 1
  001e8	89 45 fc	 mov	 DWORD PTR _n$219175[ebp], eax
$LN4@gCheckBlan:
  001eb	83 7d fc 01	 cmp	 DWORD PTR _n$219175[ebp], 1
  001ef	7d 1a		 jge	 SHORT $LN2@gCheckBlan

; 43   : 	{
; 44   : 		if ( gBSGround[n]->GetUsed() == FALSE )

  001f1	8b 45 fc	 mov	 eax, DWORD PTR _n$219175[ebp]
  001f4	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  001fb	e8 00 00 00 00	 call	 ?GetUsed@CBattleGround@@QAEHXZ ; CBattleGround::GetUsed
  00200	85 c0		 test	 eax, eax
  00202	75 05		 jne	 SHORT $LN1@gCheckBlan

; 45   : 		{
; 46   : 			return n;

  00204	8b 45 fc	 mov	 eax, DWORD PTR _n$219175[ebp]
  00207	eb 07		 jmp	 SHORT $LN5@gCheckBlan
$LN1@gCheckBlan:

; 47   : 		}
; 48   : 	}

  00209	eb d7		 jmp	 SHORT $LN3@gCheckBlan
$LN2@gCheckBlan:

; 49   : 	return 0xFF;

  0020b	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
$LN5@gCheckBlan:

; 50   : }

  00210	5f		 pop	 edi
  00211	5e		 pop	 esi
  00212	5b		 pop	 ebx
  00213	8b e5		 mov	 esp, ebp
  00215	5d		 pop	 ebp
  00216	c3		 ret	 0
?gCheckBlankBattleGround@@YAHXZ ENDP			; gCheckBlankBattleGround
_TEXT	ENDS
PUBLIC	?gCheckBattleGroundTimer@@YAHXZ			; gCheckBattleGroundTimer
EXTRN	?GCTimeViewSend@@YAXHH@Z:PROC			; GCTimeViewSend
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_index$219195 = -20					; size = 4
_index$219189 = -16					; size = 4
_n$ = -12						; size = 4
_i$ = -8						; size = 4
_time$ = -4						; size = 4
?gCheckBattleGroundTimer@@YAHXZ PROC			; gCheckBattleGroundTimer

; 53   : {

  00220	55		 push	 ebp
  00221	8b ec		 mov	 ebp, esp
  00223	83 ec 54	 sub	 esp, 84			; 00000054H
  00226	53		 push	 ebx
  00227	56		 push	 esi
  00228	57		 push	 edi

; 54   : 	int time=0;

  00229	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _time$[ebp], 0

; 55   : 	int  i;
; 56   : 	
; 57   : 	return 0;

  00230	33 c0		 xor	 eax, eax
  00232	e9 b2 00 00 00	 jmp	 $LN11@gCheckBatt

; 58   : 
; 59   : 	int n;
; 60   : 
; 61   : 	if( gBSGround[n]->m_BlueTeam ) //HermeX Add-on for fixing registers
; 62   : 	{
; 63   : 		/*//for( i=0; i<MAX_USER_GUILD; i++)
; 64   : 		{
; 65   : 			int index = gBSGround[n]->m_RedTeam->Index[i];					
; 66   : 			if( index != -1 )
; 67   : 			{
; 68   : 				//GCServerMsgStringSend(szTemp, index, 1);
; 69   : 				GCTimeViewSend(index, time);
; 70   : 			}
; 71   : 		}*/
; 72   : 	}
; 73   : 
; 74   : 	for( i=0; i<MAX_USER_GUILD; i++)

  00237	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  0023e	eb 09		 jmp	 SHORT $LN9@gCheckBatt
$LN8@gCheckBatt:
  00240	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00243	83 c0 01	 add	 eax, 1
  00246	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN9@gCheckBatt:
  00249	83 7d f8 50	 cmp	 DWORD PTR _i$[ebp], 80	; 00000050H
  0024d	7d 36		 jge	 SHORT $LN7@gCheckBatt

; 75   : 	{
; 76   : 		int index = gBSGround[n]->m_BlueTeam->Index[i];					

  0024f	8b 45 f4	 mov	 eax, DWORD PTR _n$[ebp]
  00252	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  00259	8b 91 8c 00 00
	00		 mov	 edx, DWORD PTR [ecx+140]
  0025f	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00262	0f bf 8c 42 a0
	03 00 00	 movsx	 ecx, WORD PTR [edx+eax*2+928]
  0026a	89 4d f0	 mov	 DWORD PTR _index$219189[ebp], ecx

; 77   : 		if( index != -1 )

  0026d	83 7d f0 ff	 cmp	 DWORD PTR _index$219189[ebp], -1
  00271	74 10		 je	 SHORT $LN6@gCheckBatt

; 78   : 		{
; 79   : 			//GCServerMsgStringSend(szTemp, index, 1);
; 80   : 			GCTimeViewSend(index, time);

  00273	8b 45 fc	 mov	 eax, DWORD PTR _time$[ebp]
  00276	50		 push	 eax
  00277	8b 4d f0	 mov	 ecx, DWORD PTR _index$219189[ebp]
  0027a	51		 push	 ecx
  0027b	e8 00 00 00 00	 call	 ?GCTimeViewSend@@YAXHH@Z ; GCTimeViewSend
  00280	83 c4 08	 add	 esp, 8
$LN6@gCheckBatt:

; 81   : 		}
; 82   : 	}

  00283	eb bb		 jmp	 SHORT $LN8@gCheckBatt
$LN7@gCheckBatt:

; 83   : 
; 84   : 	if( gBSGround[n]->m_RedTeam )

  00285	8b 45 f4	 mov	 eax, DWORD PTR _n$[ebp]
  00288	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  0028f	83 b9 88 00 00
	00 00		 cmp	 DWORD PTR [ecx+136], 0
  00296	74 4e		 je	 SHORT $LN5@gCheckBatt

; 85   : 	{
; 86   : 		for( i=0; i<MAX_USER_GUILD; i++)

  00298	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  0029f	eb 09		 jmp	 SHORT $LN4@gCheckBatt
$LN3@gCheckBatt:
  002a1	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  002a4	83 c0 01	 add	 eax, 1
  002a7	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN4@gCheckBatt:
  002aa	83 7d f8 50	 cmp	 DWORD PTR _i$[ebp], 80	; 00000050H
  002ae	7d 36		 jge	 SHORT $LN5@gCheckBatt

; 87   : 		{
; 88   : 			int index = gBSGround[n]->m_RedTeam->Index[i];					

  002b0	8b 45 f4	 mov	 eax, DWORD PTR _n$[ebp]
  002b3	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  002ba	8b 91 88 00 00
	00		 mov	 edx, DWORD PTR [ecx+136]
  002c0	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  002c3	0f bf 8c 42 a0
	03 00 00	 movsx	 ecx, WORD PTR [edx+eax*2+928]
  002cb	89 4d ec	 mov	 DWORD PTR _index$219195[ebp], ecx

; 89   : 			if( index != -1 )

  002ce	83 7d ec ff	 cmp	 DWORD PTR _index$219195[ebp], -1
  002d2	74 10		 je	 SHORT $LN1@gCheckBatt

; 90   : 			{
; 91   : 				//GCServerMsgStringSend(szTemp, index, 1);
; 92   : 				GCTimeViewSend(index, time);

  002d4	8b 45 fc	 mov	 eax, DWORD PTR _time$[ebp]
  002d7	50		 push	 eax
  002d8	8b 4d ec	 mov	 ecx, DWORD PTR _index$219195[ebp]
  002db	51		 push	 ecx
  002dc	e8 00 00 00 00	 call	 ?GCTimeViewSend@@YAXHH@Z ; GCTimeViewSend
  002e1	83 c4 08	 add	 esp, 8
$LN1@gCheckBatt:

; 93   : 			}
; 94   : 		}

  002e4	eb bb		 jmp	 SHORT $LN3@gCheckBatt
$LN5@gCheckBatt:

; 95   : 	}
; 96   : 
; 97   : 	return time;

  002e6	8b 45 fc	 mov	 eax, DWORD PTR _time$[ebp]
$LN11@gCheckBatt:

; 98   : }

  002e9	5f		 pop	 edi
  002ea	5e		 pop	 esi
  002eb	5b		 pop	 ebx
  002ec	8b e5		 mov	 esp, ebp
  002ee	5d		 pop	 ebp
  002ef	c3		 ret	 0
?gCheckBattleGroundTimer@@YAHXZ ENDP			; gCheckBattleGroundTimer
_TEXT	ENDS
PUBLIC	??_C@_04CGFJFPFD@none?$AA@			; `string'
PUBLIC	?gBattleGroundEnable@@YAXHH@Z			; gBattleGroundEnable
EXTRN	?SetTeamMaster@CBattleGround@@QAEXHPAD@Z:PROC	; CBattleGround::SetTeamMaster
EXTRN	?SetTimer@CBattleGround@@QAEXH@Z:PROC		; CBattleGround::SetTimer
EXTRN	?Enable@CBattleGround@@QAEXH@Z:PROC		; CBattleGround::Enable
;	COMDAT ??_C@_04CGFJFPFD@none?$AA@
CONST	SEGMENT
??_C@_04CGFJFPFD@none?$AA@ DB 'none', 00H		; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
tv67 = -68						; size = 4
_n$ = 8							; size = 4
_enable$ = 12						; size = 4
?gBattleGroundEnable@@YAXHH@Z PROC			; gBattleGroundEnable

; 101  : {

  002f0	55		 push	 ebp
  002f1	8b ec		 mov	 ebp, esp
  002f3	83 ec 44	 sub	 esp, 68			; 00000044H
  002f6	53		 push	 ebx
  002f7	56		 push	 esi
  002f8	57		 push	 edi

; 102  : 	if ( BATTLE_SOCCER_GROUND_RANGE(n)  == FALSE )

  002f9	83 7d 08 00	 cmp	 DWORD PTR _n$[ebp], 0
  002fd	7d 09		 jge	 SHORT $LN6@gBattleGro
  002ff	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
  00306	eb 0c		 jmp	 SHORT $LN7@gBattleGro
$LN6@gBattleGro:
  00308	33 c0		 xor	 eax, eax
  0030a	83 7d 08 01	 cmp	 DWORD PTR _n$[ebp], 1
  0030e	0f 9c c0	 setl	 al
  00311	89 45 bc	 mov	 DWORD PTR tv67[ebp], eax
$LN7@gBattleGro:
  00314	83 7d bc 00	 cmp	 DWORD PTR tv67[ebp], 0
  00318	75 05		 jne	 SHORT $LN3@gBattleGro

; 103  : 	{
; 104  : 		return;

  0031a	e9 94 00 00 00	 jmp	 $LN4@gBattleGro
$LN3@gBattleGro:

; 105  : 	}
; 106  : 
; 107  : 	if ( enable == TRUE )

  0031f	83 7d 0c 01	 cmp	 DWORD PTR _enable$[ebp], 1
  00323	75 29		 jne	 SHORT $LN2@gBattleGro

; 108  : 	{
; 109  : 		gBSGround[n]->Enable(enable);

  00325	8b 45 0c	 mov	 eax, DWORD PTR _enable$[ebp]
  00328	50		 push	 eax
  00329	8b 4d 08	 mov	 ecx, DWORD PTR _n$[ebp]
  0032c	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[ecx*4]
  00333	e8 00 00 00 00	 call	 ?Enable@CBattleGround@@QAEXH@Z ; CBattleGround::Enable

; 110  : 		gBSGround[n]->SetTimer(MAX_BATTLESOCCER_TIME);

  00338	68 c0 27 09 00	 push	 600000			; 000927c0H
  0033d	8b 45 08	 mov	 eax, DWORD PTR _n$[ebp]
  00340	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  00347	e8 00 00 00 00	 call	 ?SetTimer@CBattleGround@@QAEXH@Z ; CBattleGround::SetTimer

; 111  : 	}
; 112  : 	else

  0034c	eb 65		 jmp	 SHORT $LN4@gBattleGro
$LN2@gBattleGro:

; 113  : 	{
; 114  : 		gBSGround[n]->Enable(FALSE);

  0034e	6a 00		 push	 0
  00350	8b 45 08	 mov	 eax, DWORD PTR _n$[ebp]
  00353	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  0035a	e8 00 00 00 00	 call	 ?Enable@CBattleGround@@QAEXH@Z ; CBattleGround::Enable

; 115  : 		gBSGround[n]->SetTeamMaster(0, "none");

  0035f	68 00 00 00 00	 push	 OFFSET ??_C@_04CGFJFPFD@none?$AA@
  00364	6a 00		 push	 0
  00366	8b 45 08	 mov	 eax, DWORD PTR _n$[ebp]
  00369	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  00370	e8 00 00 00 00	 call	 ?SetTeamMaster@CBattleGround@@QAEXHPAD@Z ; CBattleGround::SetTeamMaster

; 116  : 		gBSGround[n]->SetTeamMaster(1, "none");

  00375	68 00 00 00 00	 push	 OFFSET ??_C@_04CGFJFPFD@none?$AA@
  0037a	6a 01		 push	 1
  0037c	8b 45 08	 mov	 eax, DWORD PTR _n$[ebp]
  0037f	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  00386	e8 00 00 00 00	 call	 ?SetTeamMaster@CBattleGround@@QAEXHPAD@Z ; CBattleGround::SetTeamMaster

; 117  : 		gBSGround[n]->m_RedTeam = 0;

  0038b	8b 45 08	 mov	 eax, DWORD PTR _n$[ebp]
  0038e	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  00395	c7 81 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+136], 0

; 118  : 		gBSGround[n]->m_BlueTeam = 0;

  0039f	8b 45 08	 mov	 eax, DWORD PTR _n$[ebp]
  003a2	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  003a9	c7 81 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+140], 0
$LN4@gBattleGro:

; 119  : 	}
; 120  : }

  003b3	5f		 pop	 edi
  003b4	5e		 pop	 esi
  003b5	5b		 pop	 ebx
  003b6	8b e5		 mov	 esp, ebp
  003b8	5d		 pop	 ebp
  003b9	c3		 ret	 0
?gBattleGroundEnable@@YAXHH@Z ENDP			; gBattleGroundEnable
_TEXT	ENDS
PUBLIC	?gSetBattleTeamMaster@@YAXHHPADPAU_GUILD_INFO_STRUCT@@@Z ; gSetBattleTeamMaster
EXTRN	?SetTeamName@CBattleGround@@QAEXHPAD@Z:PROC	; CBattleGround::SetTeamName
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv67 = -68						; size = 4
_ground$ = 8						; size = 4
_team$ = 12						; size = 4
_szname$ = 16						; size = 4
_lpGuild$ = 20						; size = 4
?gSetBattleTeamMaster@@YAXHHPADPAU_GUILD_INFO_STRUCT@@@Z PROC ; gSetBattleTeamMaster

; 123  : {

  003c0	55		 push	 ebp
  003c1	8b ec		 mov	 ebp, esp
  003c3	83 ec 44	 sub	 esp, 68			; 00000044H
  003c6	53		 push	 ebx
  003c7	56		 push	 esi
  003c8	57		 push	 edi

; 124  : 	if ( BATTLE_SOCCER_GROUND_RANGE(ground)  == FALSE )

  003c9	83 7d 08 00	 cmp	 DWORD PTR _ground$[ebp], 0
  003cd	7d 09		 jge	 SHORT $LN6@gSetBattle
  003cf	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
  003d6	eb 0c		 jmp	 SHORT $LN7@gSetBattle
$LN6@gSetBattle:
  003d8	33 c0		 xor	 eax, eax
  003da	83 7d 08 01	 cmp	 DWORD PTR _ground$[ebp], 1
  003de	0f 9c c0	 setl	 al
  003e1	89 45 bc	 mov	 DWORD PTR tv67[ebp], eax
$LN7@gSetBattle:
  003e4	83 7d bc 00	 cmp	 DWORD PTR tv67[ebp], 0
  003e8	75 02		 jne	 SHORT $LN3@gSetBattle

; 125  : 		return;

  003ea	eb 5f		 jmp	 SHORT $LN4@gSetBattle
$LN3@gSetBattle:

; 126  : 
; 127  : 	gBSGround[ground]->SetTeamMaster(team, szname);

  003ec	8b 45 10	 mov	 eax, DWORD PTR _szname$[ebp]
  003ef	50		 push	 eax
  003f0	8b 4d 0c	 mov	 ecx, DWORD PTR _team$[ebp]
  003f3	51		 push	 ecx
  003f4	8b 55 08	 mov	 edx, DWORD PTR _ground$[ebp]
  003f7	8b 0c 95 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[edx*4]
  003fe	e8 00 00 00 00	 call	 ?SetTeamMaster@CBattleGround@@QAEXHPAD@Z ; CBattleGround::SetTeamMaster

; 128  : 	gBSGround[ground]->SetTeamName(team, lpGuild->Name );

  00403	8b 45 14	 mov	 eax, DWORD PTR _lpGuild$[ebp]
  00406	83 c0 04	 add	 eax, 4
  00409	50		 push	 eax
  0040a	8b 4d 0c	 mov	 ecx, DWORD PTR _team$[ebp]
  0040d	51		 push	 ecx
  0040e	8b 55 08	 mov	 edx, DWORD PTR _ground$[ebp]
  00411	8b 0c 95 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[edx*4]
  00418	e8 00 00 00 00	 call	 ?SetTeamName@CBattleGround@@QAEXHPAD@Z ; CBattleGround::SetTeamName

; 129  : 
; 130  : 	if ( team == 0 )

  0041d	83 7d 0c 00	 cmp	 DWORD PTR _team$[ebp], 0
  00421	75 15		 jne	 SHORT $LN2@gSetBattle

; 131  : 	{
; 132  : 		gBSGround[ground]->m_RedTeam = lpGuild;

  00423	8b 45 08	 mov	 eax, DWORD PTR _ground$[ebp]
  00426	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  0042d	8b 55 14	 mov	 edx, DWORD PTR _lpGuild$[ebp]
  00430	89 91 88 00 00
	00		 mov	 DWORD PTR [ecx+136], edx

; 133  : 	}
; 134  : 	else

  00436	eb 13		 jmp	 SHORT $LN4@gSetBattle
$LN2@gSetBattle:

; 135  : 	{
; 136  : 		gBSGround[ground]->m_BlueTeam = lpGuild;

  00438	8b 45 08	 mov	 eax, DWORD PTR _ground$[ebp]
  0043b	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  00442	8b 55 14	 mov	 edx, DWORD PTR _lpGuild$[ebp]
  00445	89 91 8c 00 00
	00		 mov	 DWORD PTR [ecx+140], edx
$LN4@gSetBattle:

; 137  : 	}
; 138  : }

  0044b	5f		 pop	 edi
  0044c	5e		 pop	 esi
  0044d	5b		 pop	 ebx
  0044e	8b e5		 mov	 esp, ebp
  00450	5d		 pop	 ebp
  00451	c3		 ret	 0
?gSetBattleTeamMaster@@YAXHHPADPAU_GUILD_INFO_STRUCT@@@Z ENDP ; gSetBattleTeamMaster
_TEXT	ENDS
PUBLIC	?gBattleGetTeamPosition@@YAXHHAAF0@Z		; gBattleGetTeamPosition
EXTRN	_rand:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv67 = -76						; size = 4
_h$ = -8						; size = 4
_w$ = -4						; size = 4
_ground$ = 8						; size = 4
_team$ = 12						; size = 4
_X$ = 16						; size = 4
_Y$ = 20						; size = 4
?gBattleGetTeamPosition@@YAXHHAAF0@Z PROC		; gBattleGetTeamPosition

; 141  : {

  00460	55		 push	 ebp
  00461	8b ec		 mov	 ebp, esp
  00463	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00466	53		 push	 ebx
  00467	56		 push	 esi
  00468	57		 push	 edi

; 142  : 	if ( BATTLE_SOCCER_GROUND_RANGE(ground)  == FALSE )

  00469	83 7d 08 00	 cmp	 DWORD PTR _ground$[ebp], 0
  0046d	7d 09		 jge	 SHORT $LN6@gBattleGet
  0046f	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
  00476	eb 0c		 jmp	 SHORT $LN7@gBattleGet
$LN6@gBattleGet:
  00478	33 c0		 xor	 eax, eax
  0047a	83 7d 08 01	 cmp	 DWORD PTR _ground$[ebp], 1
  0047e	0f 9c c0	 setl	 al
  00481	89 45 b4	 mov	 DWORD PTR tv67[ebp], eax
$LN7@gBattleGet:
  00484	83 7d b4 00	 cmp	 DWORD PTR tv67[ebp], 0
  00488	75 05		 jne	 SHORT $LN3@gBattleGet

; 143  : 		return;

  0048a	e9 8c 00 00 00	 jmp	 $LN4@gBattleGet
$LN3@gBattleGet:

; 144  : 
; 145  : 
; 146  : 	int w = gBSGround[ground]->m_rect.right - gBSGround[ground]->m_rect.left;

  0048f	8b 45 08	 mov	 eax, DWORD PTR _ground$[ebp]
  00492	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  00499	8b 55 08	 mov	 edx, DWORD PTR _ground$[ebp]
  0049c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[edx*4]
  004a3	8b 49 40	 mov	 ecx, DWORD PTR [ecx+64]
  004a6	2b 48 38	 sub	 ecx, DWORD PTR [eax+56]
  004a9	89 4d fc	 mov	 DWORD PTR _w$[ebp], ecx

; 147  : 	int h = gBSGround[ground]->m_rect.bottom - gBSGround[ground]->m_rect.top;

  004ac	8b 45 08	 mov	 eax, DWORD PTR _ground$[ebp]
  004af	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  004b6	8b 55 08	 mov	 edx, DWORD PTR _ground$[ebp]
  004b9	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[edx*4]
  004c0	8b 49 44	 mov	 ecx, DWORD PTR [ecx+68]
  004c3	2b 48 3c	 sub	 ecx, DWORD PTR [eax+60]
  004c6	89 4d f8	 mov	 DWORD PTR _h$[ebp], ecx

; 148  : 
; 149  : 	if ( w < 1 )

  004c9	83 7d fc 01	 cmp	 DWORD PTR _w$[ebp], 1
  004cd	7d 07		 jge	 SHORT $LN2@gBattleGet

; 150  : 	{
; 151  : 		w = 1;

  004cf	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _w$[ebp], 1
$LN2@gBattleGet:

; 152  : 	}
; 153  : 
; 154  : 	if ( h < 1 )

  004d6	83 7d f8 01	 cmp	 DWORD PTR _h$[ebp], 1
  004da	7d 07		 jge	 SHORT $LN1@gBattleGet

; 155  : 	{
; 156  : 		h = 1;

  004dc	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _h$[ebp], 1
$LN1@gBattleGet:

; 157  : 	}
; 158  : 
; 159  : 	X = gBSGround[ground]->m_rect.left + (rand()%w);

  004e3	8b 45 08	 mov	 eax, DWORD PTR _ground$[ebp]
  004e6	8b 34 85 00 00
	00 00		 mov	 esi, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  004ed	e8 00 00 00 00	 call	 _rand
  004f2	99		 cdq
  004f3	f7 7d fc	 idiv	 DWORD PTR _w$[ebp]
  004f6	03 56 38	 add	 edx, DWORD PTR [esi+56]
  004f9	8b 4d 10	 mov	 ecx, DWORD PTR _X$[ebp]
  004fc	66 89 11	 mov	 WORD PTR [ecx], dx

; 160  : 	Y = gBSGround[ground]->m_rect.top + (rand()%h);

  004ff	8b 45 08	 mov	 eax, DWORD PTR _ground$[ebp]
  00502	8b 34 85 00 00
	00 00		 mov	 esi, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  00509	e8 00 00 00 00	 call	 _rand
  0050e	99		 cdq
  0050f	f7 7d f8	 idiv	 DWORD PTR _h$[ebp]
  00512	03 56 3c	 add	 edx, DWORD PTR [esi+60]
  00515	8b 4d 14	 mov	 ecx, DWORD PTR _Y$[ebp]
  00518	66 89 11	 mov	 WORD PTR [ecx], dx
$LN4@gBattleGet:

; 161  : }

  0051b	5f		 pop	 edi
  0051c	5e		 pop	 esi
  0051d	5b		 pop	 ebx
  0051e	8b e5		 mov	 esp, ebp
  00520	5d		 pop	 ebp
  00521	c3		 ret	 0
?gBattleGetTeamPosition@@YAXHHAAF0@Z ENDP		; gBattleGetTeamPosition
_TEXT	ENDS
PUBLIC	?GetBattleTeamName@@YAPADHH@Z			; GetBattleTeamName
EXTRN	?GetTeamName@CBattleGround@@QAEPADH@Z:PROC	; CBattleGround::GetTeamName
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv67 = -68						; size = 4
_ground$ = 8						; size = 4
_team$ = 12						; size = 4
?GetBattleTeamName@@YAPADHH@Z PROC			; GetBattleTeamName

; 165  : {

  00530	55		 push	 ebp
  00531	8b ec		 mov	 ebp, esp
  00533	83 ec 44	 sub	 esp, 68			; 00000044H
  00536	53		 push	 ebx
  00537	56		 push	 esi
  00538	57		 push	 edi

; 166  : 	if ( BATTLE_SOCCER_GROUND_RANGE(ground)  == FALSE )

  00539	83 7d 08 00	 cmp	 DWORD PTR _ground$[ebp], 0
  0053d	7d 09		 jge	 SHORT $LN4@GetBattleT
  0053f	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
  00546	eb 0c		 jmp	 SHORT $LN5@GetBattleT
$LN4@GetBattleT:
  00548	33 c0		 xor	 eax, eax
  0054a	83 7d 08 01	 cmp	 DWORD PTR _ground$[ebp], 1
  0054e	0f 9c c0	 setl	 al
  00551	89 45 bc	 mov	 DWORD PTR tv67[ebp], eax
$LN5@GetBattleT:
  00554	83 7d bc 00	 cmp	 DWORD PTR tv67[ebp], 0
  00558	75 04		 jne	 SHORT $LN1@GetBattleT

; 167  : 		return NULL;

  0055a	33 c0		 xor	 eax, eax
  0055c	eb 13		 jmp	 SHORT $LN2@GetBattleT
$LN1@GetBattleT:

; 168  : 
; 169  : 	return gBSGround[ground]->GetTeamName(team);

  0055e	8b 45 0c	 mov	 eax, DWORD PTR _team$[ebp]
  00561	50		 push	 eax
  00562	8b 4d 08	 mov	 ecx, DWORD PTR _ground$[ebp]
  00565	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[ecx*4]
  0056c	e8 00 00 00 00	 call	 ?GetTeamName@CBattleGround@@QAEPADH@Z ; CBattleGround::GetTeamName
$LN2@GetBattleT:

; 170  : }

  00571	5f		 pop	 edi
  00572	5e		 pop	 esi
  00573	5b		 pop	 ebx
  00574	8b e5		 mov	 esp, ebp
  00576	5d		 pop	 ebp
  00577	c3		 ret	 0
?GetBattleTeamName@@YAPADHH@Z ENDP			; GetBattleTeamName
_TEXT	ENDS
PUBLIC	?SetBattleTeamScore@@YAXHHH@Z			; SetBattleTeamScore
EXTRN	?SetScore@CBattleGround@@QAEXHH@Z:PROC		; CBattleGround::SetScore
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv67 = -68						; size = 4
_ground$ = 8						; size = 4
_team$ = 12						; size = 4
_score$ = 16						; size = 4
?SetBattleTeamScore@@YAXHHH@Z PROC			; SetBattleTeamScore

; 173  : {

  00580	55		 push	 ebp
  00581	8b ec		 mov	 ebp, esp
  00583	83 ec 44	 sub	 esp, 68			; 00000044H
  00586	53		 push	 ebx
  00587	56		 push	 esi
  00588	57		 push	 edi

; 174  : 	if ( BATTLE_SOCCER_GROUND_RANGE(ground)  == FALSE )

  00589	83 7d 08 00	 cmp	 DWORD PTR _ground$[ebp], 0
  0058d	7d 09		 jge	 SHORT $LN4@SetBattleT
  0058f	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
  00596	eb 0c		 jmp	 SHORT $LN5@SetBattleT
$LN4@SetBattleT:
  00598	33 c0		 xor	 eax, eax
  0059a	83 7d 08 01	 cmp	 DWORD PTR _ground$[ebp], 1
  0059e	0f 9c c0	 setl	 al
  005a1	89 45 bc	 mov	 DWORD PTR tv67[ebp], eax
$LN5@SetBattleT:
  005a4	83 7d bc 00	 cmp	 DWORD PTR tv67[ebp], 0
  005a8	75 02		 jne	 SHORT $LN1@SetBattleT

; 175  : 		return;

  005aa	eb 17		 jmp	 SHORT $LN2@SetBattleT
$LN1@SetBattleT:

; 176  : 
; 177  : 	gBSGround[ground]->SetScore(team, score);

  005ac	8b 45 10	 mov	 eax, DWORD PTR _score$[ebp]
  005af	50		 push	 eax
  005b0	8b 4d 0c	 mov	 ecx, DWORD PTR _team$[ebp]
  005b3	51		 push	 ecx
  005b4	8b 55 08	 mov	 edx, DWORD PTR _ground$[ebp]
  005b7	8b 0c 95 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[edx*4]
  005be	e8 00 00 00 00	 call	 ?SetScore@CBattleGround@@QAEXHH@Z ; CBattleGround::SetScore
$LN2@SetBattleT:

; 178  : }

  005c3	5f		 pop	 edi
  005c4	5e		 pop	 esi
  005c5	5b		 pop	 ebx
  005c6	8b e5		 mov	 esp, ebp
  005c8	5d		 pop	 ebp
  005c9	c3		 ret	 0
?SetBattleTeamScore@@YAXHHH@Z ENDP			; SetBattleTeamScore
_TEXT	ENDS
PUBLIC	?GetBattleTeamScore@@YAHHH@Z			; GetBattleTeamScore
EXTRN	?GetScore@CBattleGround@@QAEHH@Z:PROC		; CBattleGround::GetScore
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv67 = -68						; size = 4
_ground$ = 8						; size = 4
_team$ = 12						; size = 4
?GetBattleTeamScore@@YAHHH@Z PROC			; GetBattleTeamScore

; 181  : {

  005d0	55		 push	 ebp
  005d1	8b ec		 mov	 ebp, esp
  005d3	83 ec 44	 sub	 esp, 68			; 00000044H
  005d6	53		 push	 ebx
  005d7	56		 push	 esi
  005d8	57		 push	 edi

; 182  : 	if ( BATTLE_SOCCER_GROUND_RANGE(ground)  == FALSE )

  005d9	83 7d 08 00	 cmp	 DWORD PTR _ground$[ebp], 0
  005dd	7d 09		 jge	 SHORT $LN4@GetBattleT@2
  005df	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
  005e6	eb 0c		 jmp	 SHORT $LN5@GetBattleT@2
$LN4@GetBattleT@2:
  005e8	33 c0		 xor	 eax, eax
  005ea	83 7d 08 01	 cmp	 DWORD PTR _ground$[ebp], 1
  005ee	0f 9c c0	 setl	 al
  005f1	89 45 bc	 mov	 DWORD PTR tv67[ebp], eax
$LN5@GetBattleT@2:
  005f4	83 7d bc 00	 cmp	 DWORD PTR tv67[ebp], 0
  005f8	75 04		 jne	 SHORT $LN1@GetBattleT@2

; 183  : 		return 0;

  005fa	33 c0		 xor	 eax, eax
  005fc	eb 13		 jmp	 SHORT $LN2@GetBattleT@2
$LN1@GetBattleT@2:

; 184  : 
; 185  : 	return gBSGround[ground]->GetScore(team);

  005fe	8b 45 0c	 mov	 eax, DWORD PTR _team$[ebp]
  00601	50		 push	 eax
  00602	8b 4d 08	 mov	 ecx, DWORD PTR _ground$[ebp]
  00605	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[ecx*4]
  0060c	e8 00 00 00 00	 call	 ?GetScore@CBattleGround@@QAEHH@Z ; CBattleGround::GetScore
$LN2@GetBattleT@2:

; 186  : }

  00611	5f		 pop	 edi
  00612	5e		 pop	 esi
  00613	5b		 pop	 ebx
  00614	8b e5		 mov	 esp, ebp
  00616	5d		 pop	 ebp
  00617	c3		 ret	 0
?GetBattleTeamScore@@YAHHH@Z ENDP			; GetBattleTeamScore
_TEXT	ENDS
PUBLIC	?BattleSoccerGoalStart@@YAXH@Z			; BattleSoccerGoalStart
EXTRN	?SetGoalMove@CBattleSoccer@@QAEXH@Z:PROC	; CBattleSoccer::SetGoalMove
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv67 = -68						; size = 4
_ground$ = 8						; size = 4
?BattleSoccerGoalStart@@YAXH@Z PROC			; BattleSoccerGoalStart

; 189  : {

  00620	55		 push	 ebp
  00621	8b ec		 mov	 ebp, esp
  00623	83 ec 44	 sub	 esp, 68			; 00000044H
  00626	53		 push	 ebx
  00627	56		 push	 esi
  00628	57		 push	 edi

; 190  : 	if ( BATTLE_SOCCER_GROUND_RANGE(ground)  == FALSE )

  00629	83 7d 08 00	 cmp	 DWORD PTR _ground$[ebp], 0
  0062d	7d 09		 jge	 SHORT $LN4@BattleSocc
  0062f	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
  00636	eb 0c		 jmp	 SHORT $LN5@BattleSocc
$LN4@BattleSocc:
  00638	33 c0		 xor	 eax, eax
  0063a	83 7d 08 01	 cmp	 DWORD PTR _ground$[ebp], 1
  0063e	0f 9c c0	 setl	 al
  00641	89 45 bc	 mov	 DWORD PTR tv67[ebp], eax
$LN5@BattleSocc:
  00644	83 7d bc 00	 cmp	 DWORD PTR tv67[ebp], 0
  00648	75 02		 jne	 SHORT $LN1@BattleSocc

; 191  : 		return;

  0064a	eb 11		 jmp	 SHORT $LN2@BattleSocc
$LN1@BattleSocc:

; 192  : 
; 193  : 	gBSGround[ground]->SetGoalMove(1);

  0064c	6a 01		 push	 1
  0064e	8b 45 08	 mov	 eax, DWORD PTR _ground$[ebp]
  00651	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  00658	e8 00 00 00 00	 call	 ?SetGoalMove@CBattleSoccer@@QAEXH@Z ; CBattleSoccer::SetGoalMove
$LN2@BattleSocc:

; 194  : }

  0065d	5f		 pop	 edi
  0065e	5e		 pop	 esi
  0065f	5b		 pop	 ebx
  00660	8b e5		 mov	 esp, ebp
  00662	5d		 pop	 ebp
  00663	c3		 ret	 0
?BattleSoccerGoalStart@@YAXH@Z ENDP			; BattleSoccerGoalStart
_TEXT	ENDS
PUBLIC	?BattleSoccerGoalEnd@@YAXH@Z			; BattleSoccerGoalEnd
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv67 = -68						; size = 4
_ground$ = 8						; size = 4
?BattleSoccerGoalEnd@@YAXH@Z PROC			; BattleSoccerGoalEnd

; 197  : {

  00670	55		 push	 ebp
  00671	8b ec		 mov	 ebp, esp
  00673	83 ec 44	 sub	 esp, 68			; 00000044H
  00676	53		 push	 ebx
  00677	56		 push	 esi
  00678	57		 push	 edi

; 198  : 	if ( BATTLE_SOCCER_GROUND_RANGE(ground)  == FALSE )

  00679	83 7d 08 00	 cmp	 DWORD PTR _ground$[ebp], 0
  0067d	7d 09		 jge	 SHORT $LN4@BattleSocc@2
  0067f	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
  00686	eb 0c		 jmp	 SHORT $LN5@BattleSocc@2
$LN4@BattleSocc@2:
  00688	33 c0		 xor	 eax, eax
  0068a	83 7d 08 01	 cmp	 DWORD PTR _ground$[ebp], 1
  0068e	0f 9c c0	 setl	 al
  00691	89 45 bc	 mov	 DWORD PTR tv67[ebp], eax
$LN5@BattleSocc@2:
  00694	83 7d bc 00	 cmp	 DWORD PTR tv67[ebp], 0
  00698	75 02		 jne	 SHORT $LN1@BattleSocc@2

; 199  : 		return;

  0069a	eb 11		 jmp	 SHORT $LN2@BattleSocc@2
$LN1@BattleSocc@2:

; 200  : 
; 201  : 	gBSGround[ground]->SetGoalMove(0);

  0069c	6a 00		 push	 0
  0069e	8b 45 08	 mov	 eax, DWORD PTR _ground$[ebp]
  006a1	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  006a8	e8 00 00 00 00	 call	 ?SetGoalMove@CBattleSoccer@@QAEXH@Z ; CBattleSoccer::SetGoalMove
$LN2@BattleSocc@2:

; 202  : }

  006ad	5f		 pop	 edi
  006ae	5e		 pop	 esi
  006af	5b		 pop	 ebx
  006b0	8b e5		 mov	 esp, ebp
  006b2	5d		 pop	 ebp
  006b3	c3		 ret	 0
?BattleSoccerGoalEnd@@YAXH@Z ENDP			; BattleSoccerGoalEnd
_TEXT	ENDS
PUBLIC	?GetBattleSoccerGoalMove@@YAHH@Z		; GetBattleSoccerGoalMove
EXTRN	?GetGoalMove@CBattleSoccer@@QAEHXZ:PROC		; CBattleSoccer::GetGoalMove
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv67 = -68						; size = 4
_ground$ = 8						; size = 4
?GetBattleSoccerGoalMove@@YAHH@Z PROC			; GetBattleSoccerGoalMove

; 205  : {

  006c0	55		 push	 ebp
  006c1	8b ec		 mov	 ebp, esp
  006c3	83 ec 44	 sub	 esp, 68			; 00000044H
  006c6	53		 push	 ebx
  006c7	56		 push	 esi
  006c8	57		 push	 edi

; 206  : 	if ( BATTLE_SOCCER_GROUND_RANGE(ground)  == FALSE )

  006c9	83 7d 08 00	 cmp	 DWORD PTR _ground$[ebp], 0
  006cd	7d 09		 jge	 SHORT $LN4@GetBattleS
  006cf	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
  006d6	eb 0c		 jmp	 SHORT $LN5@GetBattleS
$LN4@GetBattleS:
  006d8	33 c0		 xor	 eax, eax
  006da	83 7d 08 01	 cmp	 DWORD PTR _ground$[ebp], 1
  006de	0f 9c c0	 setl	 al
  006e1	89 45 bc	 mov	 DWORD PTR tv67[ebp], eax
$LN5@GetBattleS:
  006e4	83 7d bc 00	 cmp	 DWORD PTR tv67[ebp], 0
  006e8	75 04		 jne	 SHORT $LN1@GetBattleS

; 207  : 		return 0;

  006ea	33 c0		 xor	 eax, eax
  006ec	eb 0f		 jmp	 SHORT $LN2@GetBattleS
$LN1@GetBattleS:

; 208  : 
; 209  : 	return gBSGround[ground]->GetGoalMove();

  006ee	8b 45 08	 mov	 eax, DWORD PTR _ground$[ebp]
  006f1	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  006f8	e8 00 00 00 00	 call	 ?GetGoalMove@CBattleSoccer@@QAEHXZ ; CBattleSoccer::GetGoalMove
$LN2@GetBattleS:

; 210  : }

  006fd	5f		 pop	 edi
  006fe	5e		 pop	 esi
  006ff	5b		 pop	 ebx
  00700	8b e5		 mov	 esp, ebp
  00702	5d		 pop	 ebp
  00703	c3		 ret	 0
?GetBattleSoccerGoalMove@@YAHH@Z ENDP			; GetBattleSoccerGoalMove
_TEXT	ENDS
PUBLIC	?gBattleSoccerScoreUpdate@@YAHHH@Z		; gBattleSoccerScoreUpdate
EXTRN	?BattleInfoSend@CGMMng@@QAEXPADE0E@Z:PROC	; CGMMng::BattleInfoSend
EXTRN	?cManager@@3VCGMMng@@A:BYTE			; cManager
EXTRN	?gObjGuildWarEnd@@YAXPAU_GUILD_INFO_STRUCT@@0@Z:PROC ; gObjGuildWarEnd
EXTRN	?gObjGuildWarEndSend@@YAXPAU_GUILD_INFO_STRUCT@@0EE@Z:PROC ; gObjGuildWarEndSend
EXTRN	?gObjGuildWarProc@@YAHPAU_GUILD_INFO_STRUCT@@0H@Z:PROC ; gObjGuildWarProc
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv67 = -88						; size = 4
_bGoalTeam$ = -17					; size = 1
_lpTargetGuild$ = -16					; size = 4
_lpGuild$ = -12						; size = 4
_totalscore$ = -8					; size = 4
_score$ = -4						; size = 4
_ground$ = 8						; size = 4
_team$ = 12						; size = 4
?gBattleSoccerScoreUpdate@@YAHHH@Z PROC			; gBattleSoccerScoreUpdate

; 213  : {

  00710	55		 push	 ebp
  00711	8b ec		 mov	 ebp, esp
  00713	83 ec 58	 sub	 esp, 88			; 00000058H
  00716	53		 push	 ebx
  00717	56		 push	 esi
  00718	57		 push	 edi

; 214  : 	if ( BATTLE_SOCCER_GROUND_RANGE(ground)  == FALSE )

  00719	83 7d 08 00	 cmp	 DWORD PTR _ground$[ebp], 0
  0071d	7d 09		 jge	 SHORT $LN9@gBattleSoc
  0071f	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
  00726	eb 0c		 jmp	 SHORT $LN10@gBattleSoc
$LN9@gBattleSoc:
  00728	33 c0		 xor	 eax, eax
  0072a	83 7d 08 01	 cmp	 DWORD PTR _ground$[ebp], 1
  0072e	0f 9c c0	 setl	 al
  00731	89 45 a8	 mov	 DWORD PTR tv67[ebp], eax
$LN10@gBattleSoc:
  00734	83 7d a8 00	 cmp	 DWORD PTR tv67[ebp], 0
  00738	75 07		 jne	 SHORT $LN6@gBattleSoc

; 215  : 		return FALSE;

  0073a	33 c0		 xor	 eax, eax
  0073c	e9 0b 01 00 00	 jmp	 $LN7@gBattleSoc
$LN6@gBattleSoc:

; 216  : 
; 217  : 	int score = 20;

  00741	c7 45 fc 14 00
	00 00		 mov	 DWORD PTR _score$[ebp], 20 ; 00000014H

; 218  : 	int totalscore = 1;

  00748	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _totalscore$[ebp], 1

; 219  : 	_GUILD_INFO_STRUCT * lpGuild;
; 220  : 	_GUILD_INFO_STRUCT * lpTargetGuild;
; 221  : 	bool bGoalTeam;
; 222  : 
; 223  : 	if ( team == 0 )

  0074f	83 7d 0c 00	 cmp	 DWORD PTR _team$[ebp], 0
  00753	75 2c		 jne	 SHORT $LN5@gBattleSoc

; 224  : 	{
; 225  : 		lpGuild = gBSGround[ground]->m_BlueTeam;

  00755	8b 45 08	 mov	 eax, DWORD PTR _ground$[ebp]
  00758	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  0075f	8b 91 8c 00 00
	00		 mov	 edx, DWORD PTR [ecx+140]
  00765	89 55 f4	 mov	 DWORD PTR _lpGuild$[ebp], edx

; 226  : 		lpTargetGuild = gBSGround[ground]->m_RedTeam;

  00768	8b 45 08	 mov	 eax, DWORD PTR _ground$[ebp]
  0076b	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  00772	8b 91 88 00 00
	00		 mov	 edx, DWORD PTR [ecx+136]
  00778	89 55 f0	 mov	 DWORD PTR _lpTargetGuild$[ebp], edx

; 227  : 		bGoalTeam = true;

  0077b	c6 45 ef 01	 mov	 BYTE PTR _bGoalTeam$[ebp], 1

; 228  : 	}
; 229  : 	else

  0077f	eb 2a		 jmp	 SHORT $LN4@gBattleSoc
$LN5@gBattleSoc:

; 230  : 	{
; 231  : 		lpGuild = gBSGround[ground]->m_RedTeam ;

  00781	8b 45 08	 mov	 eax, DWORD PTR _ground$[ebp]
  00784	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  0078b	8b 91 88 00 00
	00		 mov	 edx, DWORD PTR [ecx+136]
  00791	89 55 f4	 mov	 DWORD PTR _lpGuild$[ebp], edx

; 232  : 		lpTargetGuild = gBSGround[ground]->m_BlueTeam;

  00794	8b 45 08	 mov	 eax, DWORD PTR _ground$[ebp]
  00797	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  0079e	8b 91 8c 00 00
	00		 mov	 edx, DWORD PTR [ecx+140]
  007a4	89 55 f0	 mov	 DWORD PTR _lpTargetGuild$[ebp], edx

; 233  : 		bGoalTeam = FALSE;

  007a7	c6 45 ef 00	 mov	 BYTE PTR _bGoalTeam$[ebp], 0
$LN4@gBattleSoc:

; 234  : 	}
; 235  : 
; 236  : 	if ( lpGuild == NULL )

  007ab	83 7d f4 00	 cmp	 DWORD PTR _lpGuild$[ebp], 0
  007af	75 07		 jne	 SHORT $LN3@gBattleSoc

; 237  : 	{
; 238  : 		return FALSE;

  007b1	33 c0		 xor	 eax, eax
  007b3	e9 94 00 00 00	 jmp	 $LN7@gBattleSoc
$LN3@gBattleSoc:

; 239  : 	}
; 240  : 
; 241  : 	if (gObjGuildWarProc(lpGuild, lpTargetGuild, score) == TRUE )

  007b8	8b 45 fc	 mov	 eax, DWORD PTR _score$[ebp]
  007bb	50		 push	 eax
  007bc	8b 4d f0	 mov	 ecx, DWORD PTR _lpTargetGuild$[ebp]
  007bf	51		 push	 ecx
  007c0	8b 55 f4	 mov	 edx, DWORD PTR _lpGuild$[ebp]
  007c3	52		 push	 edx
  007c4	e8 00 00 00 00	 call	 ?gObjGuildWarProc@@YAHPAU_GUILD_INFO_STRUCT@@0H@Z ; gObjGuildWarProc
  007c9	83 c4 0c	 add	 esp, 12			; 0000000cH
  007cc	83 f8 01	 cmp	 eax, 1
  007cf	75 76		 jne	 SHORT $LN2@gBattleSoc

; 242  : 	{
; 243  : 		if ( lpGuild->WarType == 1 )

  007d1	8b 45 f4	 mov	 eax, DWORD PTR _lpGuild$[ebp]
  007d4	0f b6 88 92 05
	00 00		 movzx	 ecx, BYTE PTR [eax+1426]
  007db	83 f9 01	 cmp	 ecx, 1
  007de	75 67		 jne	 SHORT $LN2@gBattleSoc

; 244  : 		{
; 245  : 			gObjGuildWarEndSend(lpGuild, lpTargetGuild, 1, 0);

  007e0	6a 00		 push	 0
  007e2	6a 01		 push	 1
  007e4	8b 45 f0	 mov	 eax, DWORD PTR _lpTargetGuild$[ebp]
  007e7	50		 push	 eax
  007e8	8b 4d f4	 mov	 ecx, DWORD PTR _lpGuild$[ebp]
  007eb	51		 push	 ecx
  007ec	e8 00 00 00 00	 call	 ?gObjGuildWarEndSend@@YAXPAU_GUILD_INFO_STRUCT@@0EE@Z ; gObjGuildWarEndSend
  007f1	83 c4 10	 add	 esp, 16			; 00000010H

; 246  : 			gBattleGroundEnable(lpGuild->BattleGroundIndex, FALSE);

  007f4	6a 00		 push	 0
  007f6	8b 45 f4	 mov	 eax, DWORD PTR _lpGuild$[ebp]
  007f9	0f b6 88 93 05
	00 00		 movzx	 ecx, BYTE PTR [eax+1427]
  00800	51		 push	 ecx
  00801	e8 00 00 00 00	 call	 ?gBattleGroundEnable@@YAXHH@Z ; gBattleGroundEnable
  00806	83 c4 08	 add	 esp, 8

; 247  : 			gObjGuildWarEnd(lpGuild, lpTargetGuild);

  00809	8b 45 f0	 mov	 eax, DWORD PTR _lpTargetGuild$[ebp]
  0080c	50		 push	 eax
  0080d	8b 4d f4	 mov	 ecx, DWORD PTR _lpGuild$[ebp]
  00810	51		 push	 ecx
  00811	e8 00 00 00 00	 call	 ?gObjGuildWarEnd@@YAXPAU_GUILD_INFO_STRUCT@@0@Z ; gObjGuildWarEnd
  00816	83 c4 08	 add	 esp, 8

; 248  : 			cManager.BattleInfoSend(GetBattleTeamName(0, 0), -1, GetBattleTeamName(0, 1), -1);

  00819	68 ff 00 00 00	 push	 255			; 000000ffH
  0081e	6a 01		 push	 1
  00820	6a 00		 push	 0
  00822	e8 00 00 00 00	 call	 ?GetBattleTeamName@@YAPADHH@Z ; GetBattleTeamName
  00827	83 c4 08	 add	 esp, 8
  0082a	50		 push	 eax
  0082b	68 ff 00 00 00	 push	 255			; 000000ffH
  00830	6a 00		 push	 0
  00832	6a 00		 push	 0
  00834	e8 00 00 00 00	 call	 ?GetBattleTeamName@@YAPADHH@Z ; GetBattleTeamName
  00839	83 c4 08	 add	 esp, 8
  0083c	50		 push	 eax
  0083d	b9 00 00 00 00	 mov	 ecx, OFFSET ?cManager@@3VCGMMng@@A ; cManager
  00842	e8 00 00 00 00	 call	 ?BattleInfoSend@CGMMng@@QAEXPADE0E@Z ; CGMMng::BattleInfoSend
$LN2@gBattleSoc:

; 249  : 		}
; 250  : 	}
; 251  : 
; 252  : 	return TRUE;

  00847	b8 01 00 00 00	 mov	 eax, 1
$LN7@gBattleSoc:

; 253  : }

  0084c	5f		 pop	 edi
  0084d	5e		 pop	 esi
  0084e	5b		 pop	 ebx
  0084f	8b e5		 mov	 esp, ebp
  00851	5d		 pop	 ebp
  00852	c3		 ret	 0
?gBattleSoccerScoreUpdate@@YAHHH@Z ENDP			; gBattleSoccerScoreUpdate
_TEXT	ENDS
PUBLIC	?gCheckGoal@@YAHHHAAH@Z				; gCheckGoal
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_n$219273 = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_ground$ = 16						; size = 4
?gCheckGoal@@YAHHHAAH@Z PROC				; gCheckGoal

; 256  : {

  00860	55		 push	 ebp
  00861	8b ec		 mov	 ebp, esp
  00863	83 ec 44	 sub	 esp, 68			; 00000044H
  00866	53		 push	 ebx
  00867	56		 push	 esi
  00868	57		 push	 edi

; 257  : 	for ( int n=0;n<MAX_BATTLESOCCER_GROUND;n++)

  00869	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _n$219273[ebp], 0
  00870	eb 09		 jmp	 SHORT $LN6@gCheckGoal
$LN5@gCheckGoal:
  00872	8b 45 fc	 mov	 eax, DWORD PTR _n$219273[ebp]
  00875	83 c0 01	 add	 eax, 1
  00878	89 45 fc	 mov	 DWORD PTR _n$219273[ebp], eax
$LN6@gCheckGoal:
  0087b	83 7d fc 01	 cmp	 DWORD PTR _n$219273[ebp], 1
  0087f	0f 8d ca 00 00
	00		 jge	 $LN4@gCheckGoal

; 258  : 	{
; 259  : 		if ( gBSGround[n]->m_Set == TRUE )

  00885	8b 45 fc	 mov	 eax, DWORD PTR _n$219273[ebp]
  00888	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  0088f	83 79 48 01	 cmp	 DWORD PTR [ecx+72], 1
  00893	0f 85 b1 00 00
	00		 jne	 $LN3@gCheckGoal

; 260  : 		{
; 261  : 			if ( x >= gBSGround[n]->m_GoalLeft.left && x <= gBSGround[n]->m_GoalLeft.right && y >= gBSGround[n]->m_GoalLeft.top && y <= gBSGround[n]->m_GoalLeft.bottom ) 

  00899	8b 45 fc	 mov	 eax, DWORD PTR _n$219273[ebp]
  0089c	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  008a3	8b 55 08	 mov	 edx, DWORD PTR _x$[ebp]
  008a6	3b 51 68	 cmp	 edx, DWORD PTR [ecx+104]
  008a9	7c 42		 jl	 SHORT $LN2@gCheckGoal
  008ab	8b 45 fc	 mov	 eax, DWORD PTR _n$219273[ebp]
  008ae	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  008b5	8b 55 08	 mov	 edx, DWORD PTR _x$[ebp]
  008b8	3b 51 70	 cmp	 edx, DWORD PTR [ecx+112]
  008bb	7f 30		 jg	 SHORT $LN2@gCheckGoal
  008bd	8b 45 fc	 mov	 eax, DWORD PTR _n$219273[ebp]
  008c0	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  008c7	8b 55 0c	 mov	 edx, DWORD PTR _y$[ebp]
  008ca	3b 51 6c	 cmp	 edx, DWORD PTR [ecx+108]
  008cd	7c 1e		 jl	 SHORT $LN2@gCheckGoal
  008cf	8b 45 fc	 mov	 eax, DWORD PTR _n$219273[ebp]
  008d2	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  008d9	8b 55 0c	 mov	 edx, DWORD PTR _y$[ebp]
  008dc	3b 51 74	 cmp	 edx, DWORD PTR [ecx+116]
  008df	7f 0c		 jg	 SHORT $LN2@gCheckGoal

; 262  : 			{
; 263  : 				ground = n;

  008e1	8b 45 10	 mov	 eax, DWORD PTR _ground$[ebp]
  008e4	8b 4d fc	 mov	 ecx, DWORD PTR _n$219273[ebp]
  008e7	89 08		 mov	 DWORD PTR [eax], ecx

; 264  : 				return 0;

  008e9	33 c0		 xor	 eax, eax
  008eb	eb 65		 jmp	 SHORT $LN7@gCheckGoal
$LN2@gCheckGoal:

; 265  : 			}
; 266  : 
; 267  : 			if ( x >= gBSGround[n]->m_GoalRight.left && x <= gBSGround[n]->m_GoalRight.right && y >= gBSGround[n]->m_GoalRight.top && y <= gBSGround[n]->m_GoalRight.bottom ) 

  008ed	8b 45 fc	 mov	 eax, DWORD PTR _n$219273[ebp]
  008f0	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  008f7	8b 55 08	 mov	 edx, DWORD PTR _x$[ebp]
  008fa	3b 51 78	 cmp	 edx, DWORD PTR [ecx+120]
  008fd	7c 4b		 jl	 SHORT $LN3@gCheckGoal
  008ff	8b 45 fc	 mov	 eax, DWORD PTR _n$219273[ebp]
  00902	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  00909	8b 55 08	 mov	 edx, DWORD PTR _x$[ebp]
  0090c	3b 91 80 00 00
	00		 cmp	 edx, DWORD PTR [ecx+128]
  00912	7f 36		 jg	 SHORT $LN3@gCheckGoal
  00914	8b 45 fc	 mov	 eax, DWORD PTR _n$219273[ebp]
  00917	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  0091e	8b 55 0c	 mov	 edx, DWORD PTR _y$[ebp]
  00921	3b 51 7c	 cmp	 edx, DWORD PTR [ecx+124]
  00924	7c 24		 jl	 SHORT $LN3@gCheckGoal
  00926	8b 45 fc	 mov	 eax, DWORD PTR _n$219273[ebp]
  00929	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  00930	8b 55 0c	 mov	 edx, DWORD PTR _y$[ebp]
  00933	3b 91 84 00 00
	00		 cmp	 edx, DWORD PTR [ecx+132]
  00939	7f 0f		 jg	 SHORT $LN3@gCheckGoal

; 268  : 			{
; 269  : 				ground = n;

  0093b	8b 45 10	 mov	 eax, DWORD PTR _ground$[ebp]
  0093e	8b 4d fc	 mov	 ecx, DWORD PTR _n$219273[ebp]
  00941	89 08		 mov	 DWORD PTR [eax], ecx

; 270  : 				return 1;

  00943	b8 01 00 00 00	 mov	 eax, 1
  00948	eb 08		 jmp	 SHORT $LN7@gCheckGoal
$LN3@gCheckGoal:

; 271  : 			}
; 272  : 		}
; 273  : 	}

  0094a	e9 23 ff ff ff	 jmp	 $LN5@gCheckGoal
$LN4@gCheckGoal:

; 274  : 
; 275  : 	return -1;

  0094f	83 c8 ff	 or	 eax, -1
$LN7@gCheckGoal:

; 276  : }

  00952	5f		 pop	 edi
  00953	5e		 pop	 esi
  00954	5b		 pop	 ebx
  00955	8b e5		 mov	 esp, ebp
  00957	5d		 pop	 ebp
  00958	c3		 ret	 0
?gCheckGoal@@YAHHHAAH@Z ENDP				; gCheckGoal
_TEXT	ENDS
PUBLIC	?gCheckBattleGround@@YAHPAUOBJECTSTRUCT@@@Z	; gCheckBattleGround
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_n$219283 = -4						; size = 4
_lpObj$ = 8						; size = 4
?gCheckBattleGround@@YAHPAUOBJECTSTRUCT@@@Z PROC	; gCheckBattleGround

; 279  : {

  00960	55		 push	 ebp
  00961	8b ec		 mov	 ebp, esp
  00963	83 ec 44	 sub	 esp, 68			; 00000044H
  00966	53		 push	 ebx
  00967	56		 push	 esi
  00968	57		 push	 edi

; 280  : 	for ( int n=0;n<MAX_BATTLESOCCER_GROUND;n++)

  00969	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _n$219283[ebp], 0
  00970	eb 09		 jmp	 SHORT $LN7@gCheckBatt@2
$LN6@gCheckBatt@2:
  00972	8b 45 fc	 mov	 eax, DWORD PTR _n$219283[ebp]
  00975	83 c0 01	 add	 eax, 1
  00978	89 45 fc	 mov	 DWORD PTR _n$219283[ebp], eax
$LN7@gCheckBatt@2:
  0097b	83 7d fc 01	 cmp	 DWORD PTR _n$219283[ebp], 1
  0097f	0f 8d 5d 01 00
	00		 jge	 $LN5@gCheckBatt@2

; 281  : 	{
; 282  : 		if ( gBSGround[n]->m_Set == TRUE )

  00985	8b 45 fc	 mov	 eax, DWORD PTR _n$219283[ebp]
  00988	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[eax*4]
  0098f	83 79 48 01	 cmp	 DWORD PTR [ecx+72], 1
  00993	0f 85 44 01 00
	00		 jne	 $LN4@gCheckBatt@2

; 283  : 		{
; 284  : 			if ( lpObj->X >= gBSGround[n]->m_rect.left && lpObj->X <= gBSGround[n]->m_rect.right && lpObj->Y >= gBSGround[n]->m_rect.top && lpObj->Y <= gBSGround[n]->m_rect.bottom ) 

  00999	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0099c	0f bf 88 44 01
	00 00		 movsx	 ecx, WORD PTR [eax+324]
  009a3	8b 55 fc	 mov	 edx, DWORD PTR _n$219283[ebp]
  009a6	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[edx*4]
  009ad	3b 48 38	 cmp	 ecx, DWORD PTR [eax+56]
  009b0	7c 53		 jl	 SHORT $LN3@gCheckBatt@2
  009b2	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  009b5	0f bf 88 44 01
	00 00		 movsx	 ecx, WORD PTR [eax+324]
  009bc	8b 55 fc	 mov	 edx, DWORD PTR _n$219283[ebp]
  009bf	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[edx*4]
  009c6	3b 48 40	 cmp	 ecx, DWORD PTR [eax+64]
  009c9	7f 3a		 jg	 SHORT $LN3@gCheckBatt@2
  009cb	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  009ce	0f bf 88 46 01
	00 00		 movsx	 ecx, WORD PTR [eax+326]
  009d5	8b 55 fc	 mov	 edx, DWORD PTR _n$219283[ebp]
  009d8	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[edx*4]
  009df	3b 48 3c	 cmp	 ecx, DWORD PTR [eax+60]
  009e2	7c 21		 jl	 SHORT $LN3@gCheckBatt@2
  009e4	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  009e7	0f bf 88 46 01
	00 00		 movsx	 ecx, WORD PTR [eax+326]
  009ee	8b 55 fc	 mov	 edx, DWORD PTR _n$219283[ebp]
  009f1	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[edx*4]
  009f8	3b 48 44	 cmp	 ecx, DWORD PTR [eax+68]
  009fb	7f 08		 jg	 SHORT $LN3@gCheckBatt@2

; 285  : 			{
; 286  : 				return n;

  009fd	8b 45 fc	 mov	 eax, DWORD PTR _n$219283[ebp]
  00a00	e9 e0 00 00 00	 jmp	 $LN8@gCheckBatt@2
$LN3@gCheckBatt@2:

; 287  : 			}
; 288  : 
; 289  : 			if ( lpObj->X >= gBSGround[n]->m_GoalLeft.left && lpObj->X <= gBSGround[n]->m_GoalLeft.right && lpObj->Y >= gBSGround[n]->m_GoalLeft.top && lpObj->Y <= gBSGround[n]->m_GoalLeft.bottom ) 

  00a05	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00a08	0f bf 88 44 01
	00 00		 movsx	 ecx, WORD PTR [eax+324]
  00a0f	8b 55 fc	 mov	 edx, DWORD PTR _n$219283[ebp]
  00a12	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[edx*4]
  00a19	3b 48 68	 cmp	 ecx, DWORD PTR [eax+104]
  00a1c	7c 50		 jl	 SHORT $LN2@gCheckBatt@2
  00a1e	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00a21	0f bf 88 44 01
	00 00		 movsx	 ecx, WORD PTR [eax+324]
  00a28	8b 55 fc	 mov	 edx, DWORD PTR _n$219283[ebp]
  00a2b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[edx*4]
  00a32	3b 48 70	 cmp	 ecx, DWORD PTR [eax+112]
  00a35	7f 37		 jg	 SHORT $LN2@gCheckBatt@2
  00a37	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00a3a	0f bf 88 46 01
	00 00		 movsx	 ecx, WORD PTR [eax+326]
  00a41	8b 55 fc	 mov	 edx, DWORD PTR _n$219283[ebp]
  00a44	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[edx*4]
  00a4b	3b 48 6c	 cmp	 ecx, DWORD PTR [eax+108]
  00a4e	7c 1e		 jl	 SHORT $LN2@gCheckBatt@2
  00a50	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00a53	0f bf 88 46 01
	00 00		 movsx	 ecx, WORD PTR [eax+326]
  00a5a	8b 55 fc	 mov	 edx, DWORD PTR _n$219283[ebp]
  00a5d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[edx*4]
  00a64	3b 48 74	 cmp	 ecx, DWORD PTR [eax+116]
  00a67	7f 05		 jg	 SHORT $LN2@gCheckBatt@2

; 290  : 			{
; 291  : 				return n;

  00a69	8b 45 fc	 mov	 eax, DWORD PTR _n$219283[ebp]
  00a6c	eb 77		 jmp	 SHORT $LN8@gCheckBatt@2
$LN2@gCheckBatt@2:

; 292  : 			}
; 293  : 
; 294  : 			if ( lpObj->X >= gBSGround[n]->m_GoalRight.left && lpObj->X <= gBSGround[n]->m_GoalRight.right && lpObj->Y >= gBSGround[n]->m_GoalRight.top && lpObj->Y <= gBSGround[n]->m_GoalRight.bottom ) 

  00a6e	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00a71	0f bf 88 44 01
	00 00		 movsx	 ecx, WORD PTR [eax+324]
  00a78	8b 55 fc	 mov	 edx, DWORD PTR _n$219283[ebp]
  00a7b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[edx*4]
  00a82	3b 48 78	 cmp	 ecx, DWORD PTR [eax+120]
  00a85	7c 56		 jl	 SHORT $LN4@gCheckBatt@2
  00a87	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00a8a	0f bf 88 44 01
	00 00		 movsx	 ecx, WORD PTR [eax+324]
  00a91	8b 55 fc	 mov	 edx, DWORD PTR _n$219283[ebp]
  00a94	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[edx*4]
  00a9b	3b 88 80 00 00
	00		 cmp	 ecx, DWORD PTR [eax+128]
  00aa1	7f 3a		 jg	 SHORT $LN4@gCheckBatt@2
  00aa3	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00aa6	0f bf 88 46 01
	00 00		 movsx	 ecx, WORD PTR [eax+326]
  00aad	8b 55 fc	 mov	 edx, DWORD PTR _n$219283[ebp]
  00ab0	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[edx*4]
  00ab7	3b 48 7c	 cmp	 ecx, DWORD PTR [eax+124]
  00aba	7c 21		 jl	 SHORT $LN4@gCheckBatt@2
  00abc	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00abf	0f bf 88 46 01
	00 00		 movsx	 ecx, WORD PTR [eax+326]
  00ac6	8b 55 fc	 mov	 edx, DWORD PTR _n$219283[ebp]
  00ac9	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[edx*4]
  00ad0	3b 88 84 00 00
	00		 cmp	 ecx, DWORD PTR [eax+132]
  00ad6	7f 05		 jg	 SHORT $LN4@gCheckBatt@2

; 295  : 			{
; 296  : 				return n;

  00ad8	8b 45 fc	 mov	 eax, DWORD PTR _n$219283[ebp]
  00adb	eb 08		 jmp	 SHORT $LN8@gCheckBatt@2
$LN4@gCheckBatt@2:

; 297  : 			}
; 298  : 		}
; 299  : 	}

  00add	e9 90 fe ff ff	 jmp	 $LN6@gCheckBatt@2
$LN5@gCheckBatt@2:

; 300  : 	return -1;

  00ae2	83 c8 ff	 or	 eax, -1
$LN8@gCheckBatt@2:

; 301  : }

  00ae5	5f		 pop	 edi
  00ae6	5e		 pop	 esi
  00ae7	5b		 pop	 ebx
  00ae8	8b e5		 mov	 esp, ebp
  00aea	5d		 pop	 ebp
  00aeb	c3		 ret	 0
?gCheckBattleGround@@YAHPAUOBJECTSTRUCT@@@Z ENDP	; gCheckBattleGround
_TEXT	ENDS
END
