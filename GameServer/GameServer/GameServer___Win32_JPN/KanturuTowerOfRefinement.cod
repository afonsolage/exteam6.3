; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\KanturuTowerOfRefinement.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?SetUseTowerOfRefinement@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetUseTowerOfRefinement
PUBLIC	?SetEntrancePermit@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetEntrancePermit
PUBLIC	?SetTowerOfRefinementState@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetTowerOfRefinementState
PUBLIC	??_7CKanturuTowerOfRefinement@@6B@		; CKanturuTowerOfRefinement::`vftable'
PUBLIC	??0CKanturuTowerOfRefinement@@QAE@XZ		; CKanturuTowerOfRefinement::CKanturuTowerOfRefinement
PUBLIC	??_R4CKanturuTowerOfRefinement@@6B@		; CKanturuTowerOfRefinement::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCKanturuTowerOfRefinement@@@8		; CKanturuTowerOfRefinement `RTTI Type Descriptor'
PUBLIC	??_R3CKanturuTowerOfRefinement@@8		; CKanturuTowerOfRefinement::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CKanturuTowerOfRefinement@@8		; CKanturuTowerOfRefinement::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CKanturuTowerOfRefinement@@8	; CKanturuTowerOfRefinement::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??0CKanturuStateInfo@@QAE@XZ:PROC		; CKanturuStateInfo::CKanturuStateInfo
EXTRN	??1CKanturuStateInfo@@UAE@XZ:PROC		; CKanturuStateInfo::~CKanturuStateInfo
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECKanturuTowerOfRefinement@@UAEPAXI@Z:PROC	; CKanturuTowerOfRefinement::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CKanturuTowerOfRefinement@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturutowerofrefinement.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CKanturuTowerOfRefinement@@8 DD FLAT:??_R0?AVCKanturuTowerOfRefinement@@@8 ; CKanturuTowerOfRefinement::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CKanturuTowerOfRefinement@@8
rdata$r	ENDS
;	COMDAT ??_R2CKanturuTowerOfRefinement@@8
rdata$r	SEGMENT
??_R2CKanturuTowerOfRefinement@@8 DD FLAT:??_R1A@?0A@EA@CKanturuTowerOfRefinement@@8 ; CKanturuTowerOfRefinement::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CKanturuTowerOfRefinement@@8
rdata$r	SEGMENT
??_R3CKanturuTowerOfRefinement@@8 DD 00H		; CKanturuTowerOfRefinement::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CKanturuTowerOfRefinement@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCKanturuTowerOfRefinement@@@8
_DATA	SEGMENT
??_R0?AVCKanturuTowerOfRefinement@@@8 DD FLAT:??_7type_info@@6B@ ; CKanturuTowerOfRefinement `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCKanturuTowerOfRefinement@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CKanturuTowerOfRefinement@@6B@
rdata$r	SEGMENT
??_R4CKanturuTowerOfRefinement@@6B@ DD 00H		; CKanturuTowerOfRefinement::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCKanturuTowerOfRefinement@@@8
	DD	FLAT:??_R3CKanturuTowerOfRefinement@@8
rdata$r	ENDS
;	COMDAT ??_7CKanturuTowerOfRefinement@@6B@
CONST	SEGMENT
??_7CKanturuTowerOfRefinement@@6B@ DD FLAT:??_R4CKanturuTowerOfRefinement@@6B@ ; CKanturuTowerOfRefinement::`vftable'
	DD	FLAT:??_ECKanturuTowerOfRefinement@@UAEPAXI@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??0CKanturuTowerOfRefinement@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CKanturuTowerOfRefinement@@QAE@XZ$0
__ehfuncinfo$??0CKanturuTowerOfRefinement@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CKanturuTowerOfRefinement@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CKanturuTowerOfRefinement@@QAE@XZ PROC		; CKanturuTowerOfRefinement::CKanturuTowerOfRefinement
; _this$ = ecx

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CKanturuTowerOfRefinement@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CKanturuTowerOfRefinement@@6B@
  00034	68 00 00 00 00	 push	 OFFSET ??1CKanturuStateInfo@@UAE@XZ ; CKanturuStateInfo::~CKanturuStateInfo
  00039	68 00 00 00 00	 push	 OFFSET ??0CKanturuStateInfo@@QAE@XZ ; CKanturuStateInfo::CKanturuStateInfo
  0003e	6a 06		 push	 6
  00040	6a 14		 push	 20			; 00000014H
  00042	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00045	83 c0 14	 add	 eax, 20			; 00000014H
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??_L@YGXPAXIHP6EX0@Z1@Z
  0004e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 25   : 	this->SetTowerOfRefinementState(KANTURU_TOWER_OF_REFINEMENT_NONE);

  00055	6a 00		 push	 0
  00057	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ?SetTowerOfRefinementState@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetTowerOfRefinementState

; 26   : 	this->SetEntrancePermit(FALSE);

  0005f	6a 00		 push	 0
  00061	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?SetEntrancePermit@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetEntrancePermit

; 27   : 	this->SetUseTowerOfRefinement(FALSE);

  00069	6a 00		 push	 0
  0006b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	e8 00 00 00 00	 call	 ?SetUseTowerOfRefinement@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetUseTowerOfRefinement

; 28   : 
; 29   : 	this->m_StateInfoCount = 0;

  00073	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00076	c7 80 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+140], 0

; 30   : }

  00080	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00087	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00094	59		 pop	 ecx
  00095	5f		 pop	 edi
  00096	5e		 pop	 esi
  00097	5b		 pop	 ebx
  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CKanturuTowerOfRefinement@@QAE@XZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ??1CKanturuStateInfo@@UAE@XZ ; CKanturuStateInfo::~CKanturuStateInfo
  00005	6a 06		 push	 6
  00007	6a 14		 push	 20			; 00000014H
  00009	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 14	 add	 eax, 20			; 00000014H
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  00015	c3		 ret	 0
__ehhandler$??0CKanturuTowerOfRefinement@@QAE@XZ:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CKanturuTowerOfRefinement@@QAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CKanturuTowerOfRefinement@@QAE@XZ ENDP		; CKanturuTowerOfRefinement::CKanturuTowerOfRefinement
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturutowerofrefinement.h
;	COMDAT ?SetTowerOfRefinementState@CKanturuTowerOfRefinement@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iTowerOfRefinement$ = 8				; size = 4
?SetTowerOfRefinementState@CKanturuTowerOfRefinement@@QAEXH@Z PROC ; CKanturuTowerOfRefinement::SetTowerOfRefinementState, COMDAT
; _this$ = ecx

; 51   : 	void SetTowerOfRefinementState(int iTowerOfRefinement){this->m_iTowerOfRefinementState = iTowerOfRefinement;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _iTowerOfRefinement$[ebp]
  00012	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetTowerOfRefinementState@CKanturuTowerOfRefinement@@QAEXH@Z ENDP ; CKanturuTowerOfRefinement::SetTowerOfRefinementState
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?SetEntrancePermit@CKanturuTowerOfRefinement@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bEntrancePermit$ = 8					; size = 4
?SetEntrancePermit@CKanturuTowerOfRefinement@@QAEXH@Z PROC ; CKanturuTowerOfRefinement::SetEntrancePermit, COMDAT
; _this$ = ecx

; 53   : 	void SetEntrancePermit(BOOL bEntrancePermit){this->m_bEntrancePermit = bEntrancePermit;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _bEntrancePermit$[ebp]
  00012	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetEntrancePermit@CKanturuTowerOfRefinement@@QAEXH@Z ENDP ; CKanturuTowerOfRefinement::SetEntrancePermit
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?SetUseTowerOfRefinement@CKanturuTowerOfRefinement@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bUse$ = 8						; size = 4
?SetUseTowerOfRefinement@CKanturuTowerOfRefinement@@QAEXH@Z PROC ; CKanturuTowerOfRefinement::SetUseTowerOfRefinement, COMDAT
; _this$ = ecx

; 55   : 	void SetUseTowerOfRefinement(BOOL bUse){this->m_bIsUseTowerOfRefinement = bUse;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _bUse$[ebp]
  00012	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetUseTowerOfRefinement@CKanturuTowerOfRefinement@@QAEXH@Z ENDP ; CKanturuTowerOfRefinement::SetUseTowerOfRefinement
_TEXT	ENDS
PUBLIC	??1CKanturuTowerOfRefinement@@UAE@XZ		; CKanturuTowerOfRefinement::~CKanturuTowerOfRefinement
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCKanturuTowerOfRefinement@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCKanturuTowerOfRefinement@@UAEPAXI@Z PROC		; CKanturuTowerOfRefinement::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CKanturuTowerOfRefinement@@UAE@XZ ; CKanturuTowerOfRefinement::~CKanturuTowerOfRefinement
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCKanturuTowerOfRefinement@@UAEPAXI@Z ENDP		; CKanturuTowerOfRefinement::`scalar deleting destructor'
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturutowerofrefinement.cpp
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CKanturuTowerOfRefinement@@UAE@XZ PROC		; CKanturuTowerOfRefinement::~CKanturuTowerOfRefinement
; _this$ = ecx

; 33   : {

  000a0	55		 push	 ebp
  000a1	8b ec		 mov	 ebp, esp
  000a3	83 ec 44	 sub	 esp, 68			; 00000044H
  000a6	53		 push	 ebx
  000a7	56		 push	 esi
  000a8	57		 push	 edi
  000a9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  000ac	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000af	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CKanturuTowerOfRefinement@@6B@

; 34   : 	return;
; 35   : }

  000b5	68 00 00 00 00	 push	 OFFSET ??1CKanturuStateInfo@@UAE@XZ ; CKanturuStateInfo::~CKanturuStateInfo
  000ba	6a 06		 push	 6
  000bc	6a 14		 push	 20			; 00000014H
  000be	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c1	83 c0 14	 add	 eax, 20			; 00000014H
  000c4	50		 push	 eax
  000c5	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c3		 ret	 0
??1CKanturuTowerOfRefinement@@UAE@XZ ENDP		; CKanturuTowerOfRefinement::~CKanturuTowerOfRefinement
_TEXT	ENDS
PUBLIC	?Init@CKanturuTowerOfRefinement@@QAEXXZ		; CKanturuTowerOfRefinement::Init
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@CKanturuTowerOfRefinement@@QAEXXZ PROC		; CKanturuTowerOfRefinement::Init
; _this$ = ecx

; 40   : {

  000e0	55		 push	 ebp
  000e1	8b ec		 mov	 ebp, esp
  000e3	83 ec 44	 sub	 esp, 68			; 00000044H
  000e6	53		 push	 ebx
  000e7	56		 push	 esi
  000e8	57		 push	 edi
  000e9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 41   : 	return;
; 42   : }

  000ec	5f		 pop	 edi
  000ed	5e		 pop	 esi
  000ee	5b		 pop	 ebx
  000ef	8b e5		 mov	 esp, ebp
  000f1	5d		 pop	 ebp
  000f2	c3		 ret	 0
?Init@CKanturuTowerOfRefinement@@QAEXXZ ENDP		; CKanturuTowerOfRefinement::Init
_TEXT	ENDS
PUBLIC	?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ	; CKanturuStateInfo::ResetTimeInfo
PUBLIC	?ResetAllData@CKanturuTowerOfRefinement@@QAEXXZ	; CKanturuTowerOfRefinement::ResetAllData
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_iCount$227939 = -8					; size = 4
_this$ = -4						; size = 4
?ResetAllData@CKanturuTowerOfRefinement@@QAEXXZ PROC	; CKanturuTowerOfRefinement::ResetAllData
; _this$ = ecx

; 47   : {

  00100	55		 push	 ebp
  00101	8b ec		 mov	 ebp, esp
  00103	83 ec 48	 sub	 esp, 72			; 00000048H
  00106	53		 push	 ebx
  00107	56		 push	 esi
  00108	57		 push	 edi
  00109	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 48   : 	this->m_StateInfoCount = 0;

  0010c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010f	c7 80 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+140], 0

; 49   : 
; 50   : 	for ( int iCount=0;iCount < KANTURU_TOWER_OF_REFINEMENT_STATE_INFO; iCount++)

  00119	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iCount$227939[ebp], 0
  00120	eb 09		 jmp	 SHORT $LN3@ResetAllDa
$LN2@ResetAllDa:
  00122	8b 45 f8	 mov	 eax, DWORD PTR _iCount$227939[ebp]
  00125	83 c0 01	 add	 eax, 1
  00128	89 45 f8	 mov	 DWORD PTR _iCount$227939[ebp], eax
$LN3@ResetAllDa:
  0012b	83 7d f8 06	 cmp	 DWORD PTR _iCount$227939[ebp], 6
  0012f	7d 14		 jge	 SHORT $LN4@ResetAllDa

; 51   : 	{
; 52   : 		this->m_StateInfo[iCount].ResetTimeInfo();

  00131	8b 45 f8	 mov	 eax, DWORD PTR _iCount$227939[ebp]
  00134	6b c0 14	 imul	 eax, 20			; 00000014H
  00137	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0013a	8d 4c 01 14	 lea	 ecx, DWORD PTR [ecx+eax+20]
  0013e	e8 00 00 00 00	 call	 ?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ ; CKanturuStateInfo::ResetTimeInfo

; 53   : 	}

  00143	eb dd		 jmp	 SHORT $LN2@ResetAllDa
$LN4@ResetAllDa:

; 54   : }

  00145	5f		 pop	 edi
  00146	5e		 pop	 esi
  00147	5b		 pop	 ebx
  00148	8b e5		 mov	 esp, ebp
  0014a	5d		 pop	 ebp
  0014b	c3		 ret	 0
?ResetAllData@CKanturuTowerOfRefinement@@QAEXXZ ENDP	; CKanturuTowerOfRefinement::ResetAllData
_TEXT	ENDS
PUBLIC	?SetValue@CKanturuStateInfo@@QAEXH@Z		; CKanturuStateInfo::SetValue
PUBLIC	?SetCondition@CKanturuStateInfo@@QAEXH@Z	; CKanturuStateInfo::SetCondition
PUBLIC	?SetStateInfo@CKanturuStateInfo@@QAEXH@Z	; CKanturuStateInfo::SetStateInfo
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturustateinfo.h
;	COMDAT ?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ PROC		; CKanturuStateInfo::ResetTimeInfo, COMDAT
; _this$ = ecx

; 21   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 22   : 		this->SetStateInfo(0);

  0000c	6a 00		 push	 0
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?SetStateInfo@CKanturuStateInfo@@QAEXH@Z ; CKanturuStateInfo::SetStateInfo

; 23   : 		this->SetCondition(0);

  00016	6a 00		 push	 0
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?SetCondition@CKanturuStateInfo@@QAEXH@Z ; CKanturuStateInfo::SetCondition

; 24   : 		this->SetValue(0);

  00020	6a 00		 push	 0
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?SetValue@CKanturuStateInfo@@QAEXH@Z ; CKanturuStateInfo::SetValue

; 25   : 	}

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ ENDP		; CKanturuStateInfo::ResetTimeInfo
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?SetStateInfo@CKanturuStateInfo@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iStateTimeInfo$ = 8					; size = 4
?SetStateInfo@CKanturuStateInfo@@QAEXH@Z PROC		; CKanturuStateInfo::SetStateInfo, COMDAT
; _this$ = ecx

; 29   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 30   : 		this->m_iState = iStateTimeInfo;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _iStateTimeInfo$[ebp]
  00012	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 31   : 	}

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetStateInfo@CKanturuStateInfo@@QAEXH@Z ENDP		; CKanturuStateInfo::SetStateInfo
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?SetCondition@CKanturuStateInfo@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iCondition$ = 8					; size = 4
?SetCondition@CKanturuStateInfo@@QAEXH@Z PROC		; CKanturuStateInfo::SetCondition, COMDAT
; _this$ = ecx

; 34   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 35   : 		this->m_iCondition = iCondition;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _iCondition$[ebp]
  00012	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 36   : 	}

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetCondition@CKanturuStateInfo@@QAEXH@Z ENDP		; CKanturuStateInfo::SetCondition
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?SetValue@CKanturuStateInfo@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iValue$ = 8						; size = 4
?SetValue@CKanturuStateInfo@@QAEXH@Z PROC		; CKanturuStateInfo::SetValue, COMDAT
; _this$ = ecx

; 45   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 46   : 		this->m_iValue = iValue;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _iValue$[ebp]
  00012	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 47   : 	}

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetValue@CKanturuStateInfo@@QAEXH@Z ENDP		; CKanturuStateInfo::SetValue
_TEXT	ENDS
PUBLIC	??_C@_0EH@JMDBALKN@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ ; `string'
PUBLIC	??_C@_0DD@ELNIJKJJ@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ ; `string'
PUBLIC	??_C@_0DO@BIBDPNOH@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ ; `string'
PUBLIC	??_C@_03JBJLGPFL@end?$AA@			; `string'
PUBLIC	??_C@_0DC@INOFMPPF@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_0EF@DFHHJFBD@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?LoadData@CKanturuTowerOfRefinement@@QAEHPAD@Z	; CKanturuTowerOfRefinement::LoadData
EXTRN	?LogAddC@@3P6AXEPADZZA:DWORD			; LogAddC
EXTRN	_fclose:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	_fopen:PROC
EXTRN	?MsgBox@@YAXPADZZ:PROC				; MsgBox
EXTRN	_strcmp:PROC
EXTRN	__ftol2_sse:PROC
_BSS	SEGMENT
_TokenString DB	064H DUP (?)
_TokenNumber DD	01H DUP (?)
_SMDFile DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0EH@JMDBALKN@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturutowerofrefinement.cpp
CONST	SEGMENT
??_C@_0EH@JMDBALKN@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ DB '['
	DB	' KANTURU ][ TowerOfRefinement ] - Loading Exception Error (%s'
	DB	') File. ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@ELNIJKJJ@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
CONST	SEGMENT
??_C@_0DD@ELNIJKJJ@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ DB '['
	DB	' KANTURU ][ TowerOfRefinement ] %s file is Loaded', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@BIBDPNOH@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
CONST	SEGMENT
??_C@_0DO@BIBDPNOH@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ DB '['
	DB	' KANTURU ][ TowerOfRefinement ] - Exceed Max State Time (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03JBJLGPFL@end?$AA@
CONST	SEGMENT
??_C@_03JBJLGPFL@end?$AA@ DB 'end', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@INOFMPPF@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
CONST	SEGMENT
??_C@_0DC@INOFMPPF@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ DB '['
	DB	' KANTURU ][ TowerOfRefinement ] - Can''t Open %s ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@DFHHJFBD@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
CONST	SEGMENT
??_C@_0EF@DFHHJFBD@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ DB '['
	DB	' KANTURU ][ TowerOfRefinement ] - File load error : File Name'
	DB	' Error', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
xdata$x	SEGMENT
__catchsym$?LoadData@CKanturuTowerOfRefinement@@QAEHPAD@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?LoadData@CKanturuTowerOfRefinement@@QAEHPAD@Z$0
__unwindtable$?LoadData@CKanturuTowerOfRefinement@@QAEHPAD@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?LoadData@CKanturuTowerOfRefinement@@QAEHPAD@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?LoadData@CKanturuTowerOfRefinement@@QAEHPAD@Z$2
__ehfuncinfo$?LoadData@CKanturuTowerOfRefinement@@QAEHPAD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?LoadData@CKanturuTowerOfRefinement@@QAEHPAD@Z
	DD	01H
	DD	FLAT:__tryblocktable$?LoadData@CKanturuTowerOfRefinement@@QAEHPAD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
_TEXT	SEGMENT
tv176 = -112						; size = 4
tv175 = -112						; size = 4
tv174 = -112						; size = 4
tv173 = -112						; size = 4
tv172 = -112						; size = 4
_iValue$227959 = -44					; size = 4
_iCondition$227958 = -40				; size = 4
_iState$227957 = -36					; size = 4
_iType$227956 = -32					; size = 4
_Token$227955 = -28					; size = 4
_dwLastError$227953 = -24				; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_lpszFileName$ = 8					; size = 4
?LoadData@CKanturuTowerOfRefinement@@QAEHPAD@Z PROC	; CKanturuTowerOfRefinement::LoadData
; _this$ = ecx

; 60   : {

  00150	55		 push	 ebp
  00151	8b ec		 mov	 ebp, esp
  00153	6a ff		 push	 -1
  00155	68 00 00 00 00	 push	 __ehhandler$?LoadData@CKanturuTowerOfRefinement@@QAEHPAD@Z
  0015a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00160	50		 push	 eax
  00161	51		 push	 ecx
  00162	83 ec 60	 sub	 esp, 96			; 00000060H
  00165	53		 push	 ebx
  00166	56		 push	 esi
  00167	57		 push	 edi
  00168	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0016d	33 c5		 xor	 eax, ebp
  0016f	50		 push	 eax
  00170	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00173	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00179	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0017c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 61   : 	this->m_bFileDataLoad = FALSE;

  0017f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00182	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 62   : 
; 63   : 	if ( !lpszFileName || !strcmp(lpszFileName, ""))

  00189	83 7d 08 00	 cmp	 DWORD PTR _lpszFileName$[ebp], 0
  0018d	74 15		 je	 SHORT $LN15@LoadData
  0018f	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00194	8b 45 08	 mov	 eax, DWORD PTR _lpszFileName$[ebp]
  00197	50		 push	 eax
  00198	e8 00 00 00 00	 call	 _strcmp
  0019d	83 c4 08	 add	 esp, 8
  001a0	85 c0		 test	 eax, eax
  001a2	75 14		 jne	 SHORT $LN16@LoadData
$LN15@LoadData:

; 64   : 	{
; 65   : 		MsgBox("[ KANTURU ][ TowerOfRefinement ] - File load error : File Name Error");

  001a4	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@DFHHJFBD@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
  001a9	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  001ae	83 c4 04	 add	 esp, 4

; 66   : 		return FALSE;

  001b1	33 c0		 xor	 eax, eax
  001b3	e9 74 02 00 00	 jmp	 $LN17@LoadData
$LN16@LoadData:

; 67   : 	}
; 68   : 
; 69   : 	try
; 70   : 	{

  001b8	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 71   : 		SMDFile = fopen(lpszFileName, "r");

  001bf	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  001c4	8b 45 08	 mov	 eax, DWORD PTR _lpszFileName$[ebp]
  001c7	50		 push	 eax
  001c8	e8 00 00 00 00	 call	 _fopen
  001cd	83 c4 08	 add	 esp, 8
  001d0	a3 00 00 00 00	 mov	 DWORD PTR _SMDFile, eax

; 72   : 
; 73   : 		if ( SMDFile == NULL )

  001d5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _SMDFile, 0
  001dc	75 21		 jne	 SHORT $LN13@LoadData

; 74   : 		{
; 75   : 			DWORD dwLastError = GetLastError();

  001de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  001e4	89 45 e8	 mov	 DWORD PTR _dwLastError$227953[ebp], eax

; 76   : 
; 77   : 			MsgBox("[ KANTURU ][ TowerOfRefinement ] - Can't Open %s ",
; 78   : 				lpszFileName);

  001e7	8b 45 08	 mov	 eax, DWORD PTR _lpszFileName$[ebp]
  001ea	50		 push	 eax
  001eb	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@INOFMPPF@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
  001f0	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  001f5	83 c4 08	 add	 esp, 8

; 79   : 
; 80   : 			return FALSE;

  001f8	33 c0		 xor	 eax, eax
  001fa	e9 2d 02 00 00	 jmp	 $LN17@LoadData
$LN13@LoadData:

; 81   : 		}
; 82   : 
; 83   : 		this->ResetAllData();

  001ff	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00202	e8 00 00 00 00	 call	 ?ResetAllData@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::ResetAllData

; 84   : 		SMDToken Token;
; 85   : 		int iType = -1;

  00207	c7 45 e0 ff ff
	ff ff		 mov	 DWORD PTR _iType$227956[ebp], -1

; 86   : 		int iState = 0;

  0020e	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _iState$227957[ebp], 0

; 87   : 		int iCondition = 0;

  00215	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _iCondition$227958[ebp], 0

; 88   : 		int iValue = 0;

  0021c	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _iValue$227959[ebp], 0
$LN12@LoadData:

; 89   : 
; 90   : 		while ( true )

  00223	b8 01 00 00 00	 mov	 eax, 1
  00228	85 c0		 test	 eax, eax
  0022a	0f 84 a3 01 00
	00		 je	 $LN11@LoadData

; 91   : 		{
; 92   : 			Token = GetToken();

  00230	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00235	89 45 90	 mov	 DWORD PTR tv172[ebp], eax
  00238	8b 45 90	 mov	 eax, DWORD PTR tv172[ebp]
  0023b	89 45 e4	 mov	 DWORD PTR _Token$227955[ebp], eax

; 93   : 
; 94   : 			if ( Token == END )

  0023e	83 7d e4 02	 cmp	 DWORD PTR _Token$227955[ebp], 2
  00242	75 05		 jne	 SHORT $LN10@LoadData

; 95   : 			{
; 96   : 				break;

  00244	e9 8a 01 00 00	 jmp	 $LN11@LoadData
$LN10@LoadData:

; 97   : 			}
; 98   : 
; 99   : 			iType = (int)TokenNumber;

  00249	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0024f	e8 00 00 00 00	 call	 __ftol2_sse
  00254	89 45 e0	 mov	 DWORD PTR _iType$227956[ebp], eax
$LN9@LoadData:

; 100  : 
; 101  : 			while ( true )

  00257	b8 01 00 00 00	 mov	 eax, 1
  0025c	85 c0		 test	 eax, eax
  0025e	0f 84 6a 01 00
	00		 je	 $LN8@LoadData

; 102  : 			{
; 103  : 				if ( iType == 9 )

  00264	83 7d e0 09	 cmp	 DWORD PTR _iType$227956[ebp], 9
  00268	0f 85 35 01 00
	00		 jne	 $LN7@LoadData

; 104  : 				{
; 105  : 					iState = 0;

  0026e	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _iState$227957[ebp], 0

; 106  : 					iCondition = 0;

  00275	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _iCondition$227958[ebp], 0

; 107  : 					iValue = 0;

  0027c	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _iValue$227959[ebp], 0

; 108  : 
; 109  : 					Token = GetToken();

  00283	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00288	89 45 90	 mov	 DWORD PTR tv173[ebp], eax
  0028b	8b 45 90	 mov	 eax, DWORD PTR tv173[ebp]
  0028e	89 45 e4	 mov	 DWORD PTR _Token$227955[ebp], eax

; 110  : 
; 111  : 					if ( !strcmp("end", TokenString))

  00291	68 00 00 00 00	 push	 OFFSET _TokenString
  00296	68 00 00 00 00	 push	 OFFSET ??_C@_03JBJLGPFL@end?$AA@
  0029b	e8 00 00 00 00	 call	 _strcmp
  002a0	83 c4 08	 add	 esp, 8
  002a3	85 c0		 test	 eax, eax
  002a5	75 05		 jne	 SHORT $LN6@LoadData

; 112  : 					{
; 113  : 						break;

  002a7	e9 22 01 00 00	 jmp	 $LN8@LoadData
$LN6@LoadData:

; 114  : 					}
; 115  : 
; 116  : 					iState = (int)TokenNumber;

  002ac	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  002b2	e8 00 00 00 00	 call	 __ftol2_sse
  002b7	89 45 dc	 mov	 DWORD PTR _iState$227957[ebp], eax

; 117  : 
; 118  : 					Token = GetToken();

  002ba	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  002bf	89 45 90	 mov	 DWORD PTR tv174[ebp], eax
  002c2	8b 45 90	 mov	 eax, DWORD PTR tv174[ebp]
  002c5	89 45 e4	 mov	 DWORD PTR _Token$227955[ebp], eax

; 119  : 					iCondition = (int)TokenNumber;

  002c8	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  002ce	e8 00 00 00 00	 call	 __ftol2_sse
  002d3	89 45 d8	 mov	 DWORD PTR _iCondition$227958[ebp], eax

; 120  : 
; 121  : 					Token = GetToken();

  002d6	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  002db	89 45 90	 mov	 DWORD PTR tv175[ebp], eax
  002de	8b 45 90	 mov	 eax, DWORD PTR tv175[ebp]
  002e1	89 45 e4	 mov	 DWORD PTR _Token$227955[ebp], eax

; 122  : 					iValue = (int)TokenNumber;

  002e4	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  002ea	e8 00 00 00 00	 call	 __ftol2_sse
  002ef	89 45 d4	 mov	 DWORD PTR _iValue$227959[ebp], eax

; 123  : 
; 124  : 					if ( this->m_StateInfoCount < 0 || this->m_StateInfoCount >= KANTURU_TOWER_OF_REFINEMENT_STATE_INFO )

  002f2	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  002f5	83 b8 8c 00 00
	00 00		 cmp	 DWORD PTR [eax+140], 0
  002fc	7c 0c		 jl	 SHORT $LN4@LoadData
  002fe	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00301	83 b8 8c 00 00
	00 06		 cmp	 DWORD PTR [eax+140], 6
  00308	7c 1c		 jl	 SHORT $LN5@LoadData
$LN4@LoadData:

; 125  : 					{
; 126  : 						MsgBox("[ KANTURU ][ TowerOfRefinement ] - Exceed Max State Time (%d)",
; 127  : 							this->m_StateInfoCount);

  0030a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0030d	8b 88 8c 00 00
	00		 mov	 ecx, DWORD PTR [eax+140]
  00313	51		 push	 ecx
  00314	68 00 00 00 00	 push	 OFFSET ??_C@_0DO@BIBDPNOH@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
  00319	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  0031e	83 c4 08	 add	 esp, 8

; 128  : 
; 129  : 						break;

  00321	e9 a8 00 00 00	 jmp	 $LN8@LoadData
$LN5@LoadData:

; 130  : 					}
; 131  : 
; 132  : 					this->m_StateInfo[this->m_StateInfoCount].SetStateInfo(iState);

  00326	8b 45 dc	 mov	 eax, DWORD PTR _iState$227957[ebp]
  00329	50		 push	 eax
  0032a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0032d	8b 91 8c 00 00
	00		 mov	 edx, DWORD PTR [ecx+140]
  00333	6b d2 14	 imul	 edx, 20			; 00000014H
  00336	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00339	8d 4c 10 14	 lea	 ecx, DWORD PTR [eax+edx+20]
  0033d	e8 00 00 00 00	 call	 ?SetStateInfo@CKanturuStateInfo@@QAEXH@Z ; CKanturuStateInfo::SetStateInfo

; 133  : 					this->m_StateInfo[this->m_StateInfoCount].SetCondition(iCondition);

  00342	8b 45 d8	 mov	 eax, DWORD PTR _iCondition$227958[ebp]
  00345	50		 push	 eax
  00346	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00349	8b 91 8c 00 00
	00		 mov	 edx, DWORD PTR [ecx+140]
  0034f	6b d2 14	 imul	 edx, 20			; 00000014H
  00352	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00355	8d 4c 10 14	 lea	 ecx, DWORD PTR [eax+edx+20]
  00359	e8 00 00 00 00	 call	 ?SetCondition@CKanturuStateInfo@@QAEXH@Z ; CKanturuStateInfo::SetCondition

; 134  : 
; 135  : 					if ( iCondition == 1 )

  0035e	83 7d d8 01	 cmp	 DWORD PTR _iCondition$227958[ebp], 1
  00362	75 0c		 jne	 SHORT $LN3@LoadData

; 136  : 					{
; 137  : 						iValue *= 1000;

  00364	8b 45 d4	 mov	 eax, DWORD PTR _iValue$227959[ebp]
  00367	69 c0 e8 03 00
	00		 imul	 eax, 1000		; 000003e8H
  0036d	89 45 d4	 mov	 DWORD PTR _iValue$227959[ebp], eax
$LN3@LoadData:

; 138  : 					}
; 139  : 
; 140  : 					this->m_StateInfo[this->m_StateInfoCount].SetValue(iValue);

  00370	8b 45 d4	 mov	 eax, DWORD PTR _iValue$227959[ebp]
  00373	50		 push	 eax
  00374	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00377	8b 91 8c 00 00
	00		 mov	 edx, DWORD PTR [ecx+140]
  0037d	6b d2 14	 imul	 edx, 20			; 00000014H
  00380	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00383	8d 4c 10 14	 lea	 ecx, DWORD PTR [eax+edx+20]
  00387	e8 00 00 00 00	 call	 ?SetValue@CKanturuStateInfo@@QAEXH@Z ; CKanturuStateInfo::SetValue

; 141  : 					this->m_StateInfoCount++;

  0038c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0038f	8b 88 8c 00 00
	00		 mov	 ecx, DWORD PTR [eax+140]
  00395	83 c1 01	 add	 ecx, 1
  00398	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0039b	89 8a 8c 00 00
	00		 mov	 DWORD PTR [edx+140], ecx

; 142  : 				}
; 143  : 				else

  003a1	eb 26		 jmp	 SHORT $LN1@LoadData
$LN7@LoadData:

; 144  : 				{
; 145  : 					Token = GetToken();

  003a3	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  003a8	89 45 90	 mov	 DWORD PTR tv176[ebp], eax
  003ab	8b 45 90	 mov	 eax, DWORD PTR tv176[ebp]
  003ae	89 45 e4	 mov	 DWORD PTR _Token$227955[ebp], eax

; 146  : 
; 147  : 					if ( !strcmp("end", TokenString))

  003b1	68 00 00 00 00	 push	 OFFSET _TokenString
  003b6	68 00 00 00 00	 push	 OFFSET ??_C@_03JBJLGPFL@end?$AA@
  003bb	e8 00 00 00 00	 call	 _strcmp
  003c0	83 c4 08	 add	 esp, 8
  003c3	85 c0		 test	 eax, eax
  003c5	75 02		 jne	 SHORT $LN1@LoadData

; 148  : 					{
; 149  : 						break;

  003c7	eb 05		 jmp	 SHORT $LN8@LoadData
$LN1@LoadData:

; 150  : 					}
; 151  : 				}
; 152  : 
; 153  : 			}	// while

  003c9	e9 89 fe ff ff	 jmp	 $LN9@LoadData
$LN8@LoadData:

; 154  : 		}	// while

  003ce	e9 50 fe ff ff	 jmp	 $LN12@LoadData
$LN11@LoadData:

; 155  : 
; 156  : 		fclose(SMDFile);

  003d3	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  003d8	50		 push	 eax
  003d9	e8 00 00 00 00	 call	 _fclose
  003de	83 c4 04	 add	 esp, 4

; 157  : 
; 158  : 		LogAddC(2, "[ KANTURU ][ TowerOfRefinement ] %s file is Loaded",
; 159  : 			lpszFileName);

  003e1	8b 45 08	 mov	 eax, DWORD PTR _lpszFileName$[ebp]
  003e4	50		 push	 eax
  003e5	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@ELNIJKJJ@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
  003ea	6a 02		 push	 2
  003ec	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  003f2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 160  : 
; 161  : 		this->m_bFileDataLoad = TRUE;

  003f5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  003f8	c7 40 10 01 00
	00 00		 mov	 DWORD PTR [eax+16], 1

; 162  : 	}	// __try

  003ff	eb 1e		 jmp	 SHORT $LN19@LoadData
__catch$?LoadData@CKanturuTowerOfRefinement@@QAEHPAD@Z$0:

; 163  : 	catch(...)
; 164  : 	{
; 165  : 		MsgBox("[ KANTURU ][ TowerOfRefinement ] - Loading Exception Error (%s) File. ", lpszFileName);

  00401	8b 45 08	 mov	 eax, DWORD PTR _lpszFileName$[ebp]
  00404	50		 push	 eax
  00405	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@JMDBALKN@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
  0040a	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  0040f	83 c4 08	 add	 esp, 8

; 166  : 	}

  00412	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00419	b8 00 00 00 00	 mov	 eax, $LN22@LoadData
  0041e	c3		 ret	 0
$LN19@LoadData:
  0041f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
$LN22@LoadData:

; 167  : 
; 168  : 	return this->m_bFileDataLoad;

  00426	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00429	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
$LN17@LoadData:

; 169  : }

  0042c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0042f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00436	59		 pop	 ecx
  00437	5f		 pop	 edi
  00438	5e		 pop	 esi
  00439	5b		 pop	 ebx
  0043a	8b e5		 mov	 esp, ebp
  0043c	5d		 pop	 ebp
  0043d	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?LoadData@CKanturuTowerOfRefinement@@QAEHPAD@Z:
  00031	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00035	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00038	8b 4a 8c	 mov	 ecx, DWORD PTR [edx-116]
  0003b	33 c8		 xor	 ecx, eax
  0003d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00042	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadData@CKanturuTowerOfRefinement@@QAEHPAD@Z
  00047	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadData@CKanturuTowerOfRefinement@@QAEHPAD@Z ENDP	; CKanturuTowerOfRefinement::LoadData
PUBLIC	__$ArrayPad$
EXTRN	_isalnum:PROC
EXTRN	_isalpha:PROC
EXTRN	_atof:PROC
EXTRN	_isdigit:PROC
EXTRN	_getc:PROC
EXTRN	_ungetc:PROC
EXTRN	_isspace:PROC
EXTRN	_fgetc:PROC
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_CurrentToken DD 01H DUP (?)
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\include\readscript.h
_BSS	ENDS
_TEXT	SEGMENT
tv90 = -180						; size = 4
_TempString$ = -112					; size = 100
_p$ = -12						; size = 4
_ch$ = -5						; size = 1
__$ArrayPad$ = -4					; size = 4
?GetToken@@YA?AW4SMDToken@@XZ PROC			; GetToken

; 24   : {

  00440	55		 push	 ebp
  00441	8b ec		 mov	 ebp, esp
  00443	81 ec b4 00 00
	00		 sub	 esp, 180		; 000000b4H
  00449	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0044e	33 c5		 xor	 eax, ebp
  00450	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00453	53		 push	 ebx
  00454	56		 push	 esi
  00455	57		 push	 edi

; 25   : 	char ch;
; 26   : 	char* p;
; 27   : 	char TempString[100];
; 28   : 
; 29   : 	TokenString[0]=0;

  00456	c6 05 00 00 00
	00 00		 mov	 BYTE PTR _TokenString, 0
$LN31@GetToken:

; 30   : 
; 31   : 	do
; 32   : 	{
; 33   : 		if ((ch=fgetc(SMDFile)) == -1)

  0045d	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00462	50		 push	 eax
  00463	e8 00 00 00 00	 call	 _fgetc
  00468	83 c4 04	 add	 esp, 4
  0046b	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  0046e	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00472	83 f9 ff	 cmp	 ecx, -1
  00475	75 0c		 jne	 SHORT $LN28@GetToken

; 34   : 		{
; 35   : 			return END;	// End of FILE (EOF)

  00477	b8 02 00 00 00	 mov	 eax, 2
  0047c	e9 f7 02 00 00	 jmp	 $LN32@GetToken

; 36   : 		}
; 37   : 		else

  00481	eb 5b		 jmp	 SHORT $LN22@GetToken
$LN28@GetToken:

; 38   : 		{	
; 39   : 			if (ch=='/')		// this is /

  00483	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00487	83 f8 2f	 cmp	 eax, 47			; 0000002fH
  0048a	75 52		 jne	 SHORT $LN22@GetToken

; 40   : 			{
; 41   : 				if((ch=fgetc(SMDFile)) == '/')

  0048c	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00491	50		 push	 eax
  00492	e8 00 00 00 00	 call	 _fgetc
  00497	83 c4 04	 add	 esp, 4
  0049a	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  0049d	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  004a1	83 f9 2f	 cmp	 ecx, 47			; 0000002fH
  004a4	75 38		 jne	 SHORT $LN22@GetToken
$LN24@GetToken:

; 42   : 				{
; 43   : 					while ((ch != '\n') && (ch != -1))	// End of Line (EOL)

  004a6	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  004aa	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  004ad	74 1c		 je	 SHORT $LN23@GetToken
  004af	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  004b3	83 f8 ff	 cmp	 eax, -1
  004b6	74 13		 je	 SHORT $LN23@GetToken

; 44   : 					{
; 45   : 						ch=fgetc(SMDFile);

  004b8	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  004bd	50		 push	 eax
  004be	e8 00 00 00 00	 call	 _fgetc
  004c3	83 c4 04	 add	 esp, 4
  004c6	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al

; 46   : 					}

  004c9	eb db		 jmp	 SHORT $LN24@GetToken
$LN23@GetToken:

; 47   : 	
; 48   : 					if (ch == -1)

  004cb	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  004cf	83 f8 ff	 cmp	 eax, -1
  004d2	75 0a		 jne	 SHORT $LN22@GetToken

; 49   : 					{
; 50   : 						return END;	// End of FILE

  004d4	b8 02 00 00 00	 mov	 eax, 2
  004d9	e9 9a 02 00 00	 jmp	 $LN32@GetToken
$LN22@GetToken:

; 51   : 					}
; 52   : 				}
; 53   : 			}
; 54   : 		}
; 55   : 	}
; 56   : 	while (isspace(ch) != 0);

  004de	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  004e2	50		 push	 eax
  004e3	e8 00 00 00 00	 call	 _isspace
  004e8	83 c4 04	 add	 esp, 4
  004eb	85 c0		 test	 eax, eax
  004ed	0f 85 6a ff ff
	ff		 jne	 $LN31@GetToken

; 57   : 
; 58   : 	
; 59   : 	switch(ch)

  004f3	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  004f7	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv90[ebp], eax
  004fd	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR tv90[ebp]
  00503	83 e9 22	 sub	 ecx, 34			; 00000022H
  00506	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv90[ebp], ecx
  0050c	83 bd 4c ff ff
	ff 5b		 cmp	 DWORD PTR tv90[ebp], 91	; 0000005bH
  00513	0f 87 a3 01 00
	00		 ja	 $LN6@GetToken
  00519	8b 95 4c ff ff
	ff		 mov	 edx, DWORD PTR tv90[ebp]
  0051f	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN34@GetToken[edx]
  00526	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN35@GetToken[eax*4]
$LN19@GetToken:

; 60   : 	{
; 61   : 
; 62   : 	case 0x23:	// #
; 63   : 		return CurrentToken=COMMAND;

  0052d	c7 05 00 00 00
	00 23 00 00 00	 mov	 DWORD PTR _CurrentToken, 35 ; 00000023H
  00537	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  0053c	e9 37 02 00 00	 jmp	 $LN32@GetToken

; 64   : 		break;

  00541	e9 30 02 00 00	 jmp	 $LN20@GetToken
$LN18@GetToken:

; 65   : 	
; 66   : 	case 0x3B:	// ;
; 67   : 		return CurrentToken=SEMICOLON;

  00546	c7 05 00 00 00
	00 3b 00 00 00	 mov	 DWORD PTR _CurrentToken, 59 ; 0000003bH
  00550	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00555	e9 1e 02 00 00	 jmp	 $LN32@GetToken

; 68   : 		break;

  0055a	e9 17 02 00 00	 jmp	 $LN20@GetToken
$LN17@GetToken:

; 69   : 	
; 70   : 	case 0x2C:	// ,
; 71   : 
; 72   : 		return CurrentToken=COMMA;

  0055f	c7 05 00 00 00
	00 2c 00 00 00	 mov	 DWORD PTR _CurrentToken, 44 ; 0000002cH
  00569	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  0056e	e9 05 02 00 00	 jmp	 $LN32@GetToken

; 73   : 		break;

  00573	e9 fe 01 00 00	 jmp	 $LN20@GetToken
$LN16@GetToken:

; 74   : 	
; 75   : 	case 0x7B:	// {
; 76   : 		return CurrentToken = LP;

  00578	c7 05 00 00 00
	00 7b 00 00 00	 mov	 DWORD PTR _CurrentToken, 123 ; 0000007bH
  00582	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00587	e9 ec 01 00 00	 jmp	 $LN32@GetToken

; 77   : 		break;

  0058c	e9 e5 01 00 00	 jmp	 $LN20@GetToken
$LN15@GetToken:

; 78   : 
; 79   : 	case 0x7D:	// }
; 80   : 		return CurrentToken = RP;

  00591	c7 05 00 00 00
	00 7d 00 00 00	 mov	 DWORD PTR _CurrentToken, 125 ; 0000007dH
  0059b	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  005a0	e9 d3 01 00 00	 jmp	 $LN32@GetToken

; 81   : 		break;

  005a5	e9 cc 01 00 00	 jmp	 $LN20@GetToken
$LN14@GetToken:

; 82   : 	// Nice Index Table :)	by Deathway
; 83   : 	// Numbers Case
; 84   : 	case 0x2D:	//-
; 85   : 	case 0x2E:	//.
; 86   : 	case '0':	//0
; 87   : 	case '1':	//1
; 88   : 	case '2':	//2
; 89   : 	case '3':	//3
; 90   : 	case '4':	//4		
; 91   : 	case '5':	//5
; 92   : 	case '6':	//6
; 93   : 	case '7':	//7
; 94   : 	case '8':	//8
; 95   : 	case '9':	//9
; 96   : 		ungetc(ch, SMDFile);

  005aa	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  005af	50		 push	 eax
  005b0	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  005b4	51		 push	 ecx
  005b5	e8 00 00 00 00	 call	 _ungetc
  005ba	83 c4 08	 add	 esp, 8

; 97   : 		p = TempString;

  005bd	8d 45 90	 lea	 eax, DWORD PTR _TempString$[ebp]
  005c0	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax
$LN13@GetToken:

; 98   : 		
; 99   : 		while (((ch=getc(SMDFile)) != -1) && ((ch == 0x2E) || (isdigit(ch) != 0) || (ch == 0x2D)))  // 2e '.'  2D '-'

  005c3	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  005c8	50		 push	 eax
  005c9	e8 00 00 00 00	 call	 _getc
  005ce	83 c4 04	 add	 esp, 4
  005d1	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  005d4	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  005d8	83 f9 ff	 cmp	 ecx, -1
  005db	74 36		 je	 SHORT $LN12@GetToken
  005dd	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  005e1	83 f8 2e	 cmp	 eax, 46			; 0000002eH
  005e4	74 1a		 je	 SHORT $LN11@GetToken
  005e6	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  005ea	50		 push	 eax
  005eb	e8 00 00 00 00	 call	 _isdigit
  005f0	83 c4 04	 add	 esp, 4
  005f3	85 c0		 test	 eax, eax
  005f5	75 09		 jne	 SHORT $LN11@GetToken
  005f7	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  005fb	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  005fe	75 13		 jne	 SHORT $LN12@GetToken
$LN11@GetToken:

; 100  : 		{
; 101  : 			*p = ch;	// Construct a String

  00600	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00603	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  00606	88 08		 mov	 BYTE PTR [eax], cl

; 102  : 			p++;

  00608	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  0060b	83 c0 01	 add	 eax, 1
  0060e	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 103  : 		}		

  00611	eb b0		 jmp	 SHORT $LN13@GetToken
$LN12@GetToken:

; 104  : 		*p = 0;

  00613	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00616	c6 00 00	 mov	 BYTE PTR [eax], 0

; 105  : 		TokenNumber = atof( TempString);	// Select the first Byte as Main ID

  00619	8d 45 90	 lea	 eax, DWORD PTR _TempString$[ebp]
  0061c	50		 push	 eax
  0061d	e8 00 00 00 00	 call	 _atof
  00622	83 c4 04	 add	 esp, 4
  00625	d9 1d 00 00 00
	00		 fstp	 DWORD PTR _TokenNumber

; 106  : 		return CurrentToken  = NUMBER ;

  0062b	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _CurrentToken, 1
  00635	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  0063a	e9 39 01 00 00	 jmp	 $LN32@GetToken

; 107  : 		break;

  0063f	e9 32 01 00 00	 jmp	 $LN20@GetToken
$LN10@GetToken:

; 108  : 
; 109  : 	case '\"':	// "	String Case
; 110  : 		p=&TokenString[0];

  00644	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], OFFSET _TokenString
$LN9@GetToken:

; 111  : 		
; 112  : 		while (((ch=getc(SMDFile)) != -1 ) && (ch != 0x22))	// nice

  0064b	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00650	50		 push	 eax
  00651	e8 00 00 00 00	 call	 _getc
  00656	83 c4 04	 add	 esp, 4
  00659	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  0065c	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00660	83 f9 ff	 cmp	 ecx, -1
  00663	74 1c		 je	 SHORT $LN8@GetToken
  00665	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00669	83 f8 22	 cmp	 eax, 34			; 00000022H
  0066c	74 13		 je	 SHORT $LN8@GetToken

; 113  : 		{
; 114  : 			*p = ch;

  0066e	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00671	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  00674	88 08		 mov	 BYTE PTR [eax], cl

; 115  : 			p++;

  00676	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00679	83 c0 01	 add	 eax, 1
  0067c	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 116  : 		}

  0067f	eb ca		 jmp	 SHORT $LN9@GetToken
$LN8@GetToken:

; 117  : 		if (ch != 0x22 )

  00681	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00685	83 f8 22	 cmp	 eax, 34			; 00000022H
  00688	74 13		 je	 SHORT $LN7@GetToken

; 118  : 		{
; 119  : 			ungetc(ch, SMDFile);

  0068a	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0068f	50		 push	 eax
  00690	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00694	51		 push	 ecx
  00695	e8 00 00 00 00	 call	 _ungetc
  0069a	83 c4 08	 add	 esp, 8
$LN7@GetToken:

; 120  : 		}
; 121  : 		*p = 0;

  0069d	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  006a0	c6 00 00	 mov	 BYTE PTR [eax], 0

; 122  : 		return CurrentToken = NAME;

  006a3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _CurrentToken, 0
  006ad	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  006b2	e9 c1 00 00 00	 jmp	 $LN32@GetToken

; 123  : 		break;

  006b7	e9 ba 00 00 00	 jmp	 $LN20@GetToken
$LN6@GetToken:

; 124  : 
; 125  : 	default:	// Others
; 126  : 		if (isalpha(ch))

  006bc	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  006c0	50		 push	 eax
  006c1	e8 00 00 00 00	 call	 _isalpha
  006c6	83 c4 04	 add	 esp, 4
  006c9	85 c0		 test	 eax, eax
  006cb	0f 84 94 00 00
	00		 je	 $LN5@GetToken

; 127  : 		{
; 128  : 			p=&TokenString[0];

  006d1	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], OFFSET _TokenString

; 129  : 			*p=ch;

  006d8	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  006db	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  006de	88 08		 mov	 BYTE PTR [eax], cl

; 130  : 			p++;

  006e0	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  006e3	83 c0 01	 add	 eax, 1
  006e6	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax
$LN4@GetToken:

; 131  : 
; 132  : 			while ( ((ch=getc(SMDFile)) != -1) && ( (ch == 0x2E) || (ch == 0x5F) || (isalnum(ch) != 0) ) )

  006e9	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  006ee	50		 push	 eax
  006ef	e8 00 00 00 00	 call	 _getc
  006f4	83 c4 04	 add	 esp, 4
  006f7	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  006fa	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  006fe	83 f9 ff	 cmp	 ecx, -1
  00701	74 36		 je	 SHORT $LN3@GetToken
  00703	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00707	83 f8 2e	 cmp	 eax, 46			; 0000002eH
  0070a	74 1a		 je	 SHORT $LN2@GetToken
  0070c	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00710	83 f8 5f	 cmp	 eax, 95			; 0000005fH
  00713	74 11		 je	 SHORT $LN2@GetToken
  00715	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00719	50		 push	 eax
  0071a	e8 00 00 00 00	 call	 _isalnum
  0071f	83 c4 04	 add	 esp, 4
  00722	85 c0		 test	 eax, eax
  00724	74 13		 je	 SHORT $LN3@GetToken
$LN2@GetToken:

; 133  : 			{
; 134  : 				*p=ch;

  00726	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00729	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  0072c	88 08		 mov	 BYTE PTR [eax], cl

; 135  : 				p++;

  0072e	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00731	83 c0 01	 add	 eax, 1
  00734	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 136  : 				
; 137  : 			}

  00737	eb b0		 jmp	 SHORT $LN4@GetToken
$LN3@GetToken:

; 138  : 
; 139  : 			ungetc(ch, SMDFile);

  00739	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0073e	50		 push	 eax
  0073f	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00743	51		 push	 ecx
  00744	e8 00 00 00 00	 call	 _ungetc
  00749	83 c4 08	 add	 esp, 8

; 140  : 			*p=0;

  0074c	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  0074f	c6 00 00	 mov	 BYTE PTR [eax], 0

; 141  : 			CurrentToken=NAME;

  00752	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _CurrentToken, 0

; 142  : 			return CurrentToken;

  0075c	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00761	eb 15		 jmp	 SHORT $LN32@GetToken

; 143  : 		}
; 144  : 		else

  00763	eb 11		 jmp	 SHORT $LN1@GetToken
$LN5@GetToken:

; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'

  00765	c7 05 00 00 00
	00 3c 00 00 00	 mov	 DWORD PTR _CurrentToken, 60 ; 0000003cH
  0076f	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00774	eb 02		 jmp	 SHORT $LN32@GetToken
$LN1@GetToken:
$LN20@GetToken:

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;

  00776	33 c0		 xor	 eax, eax
$LN32@GetToken:

; 153  : }

  00778	5f		 pop	 edi
  00779	5e		 pop	 esi
  0077a	5b		 pop	 ebx
  0077b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0077e	33 cd		 xor	 ecx, ebp
  00780	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00785	8b e5		 mov	 esp, ebp
  00787	5d		 pop	 ebp
  00788	c3		 ret	 0
  00789	8d 49 00	 npad	 3
$LN35@GetToken:
  0078c	00 00 00 00	 DD	 $LN10@GetToken
  00790	00 00 00 00	 DD	 $LN19@GetToken
  00794	00 00 00 00	 DD	 $LN17@GetToken
  00798	00 00 00 00	 DD	 $LN14@GetToken
  0079c	00 00 00 00	 DD	 $LN18@GetToken
  007a0	00 00 00 00	 DD	 $LN16@GetToken
  007a4	00 00 00 00	 DD	 $LN15@GetToken
  007a8	00 00 00 00	 DD	 $LN6@GetToken
$LN34@GetToken:
  007ac	00		 DB	 0
  007ad	01		 DB	 1
  007ae	07		 DB	 7
  007af	07		 DB	 7
  007b0	07		 DB	 7
  007b1	07		 DB	 7
  007b2	07		 DB	 7
  007b3	07		 DB	 7
  007b4	07		 DB	 7
  007b5	07		 DB	 7
  007b6	02		 DB	 2
  007b7	03		 DB	 3
  007b8	03		 DB	 3
  007b9	07		 DB	 7
  007ba	03		 DB	 3
  007bb	03		 DB	 3
  007bc	03		 DB	 3
  007bd	03		 DB	 3
  007be	03		 DB	 3
  007bf	03		 DB	 3
  007c0	03		 DB	 3
  007c1	03		 DB	 3
  007c2	03		 DB	 3
  007c3	03		 DB	 3
  007c4	07		 DB	 7
  007c5	04		 DB	 4
  007c6	07		 DB	 7
  007c7	07		 DB	 7
  007c8	07		 DB	 7
  007c9	07		 DB	 7
  007ca	07		 DB	 7
  007cb	07		 DB	 7
  007cc	07		 DB	 7
  007cd	07		 DB	 7
  007ce	07		 DB	 7
  007cf	07		 DB	 7
  007d0	07		 DB	 7
  007d1	07		 DB	 7
  007d2	07		 DB	 7
  007d3	07		 DB	 7
  007d4	07		 DB	 7
  007d5	07		 DB	 7
  007d6	07		 DB	 7
  007d7	07		 DB	 7
  007d8	07		 DB	 7
  007d9	07		 DB	 7
  007da	07		 DB	 7
  007db	07		 DB	 7
  007dc	07		 DB	 7
  007dd	07		 DB	 7
  007de	07		 DB	 7
  007df	07		 DB	 7
  007e0	07		 DB	 7
  007e1	07		 DB	 7
  007e2	07		 DB	 7
  007e3	07		 DB	 7
  007e4	07		 DB	 7
  007e5	07		 DB	 7
  007e6	07		 DB	 7
  007e7	07		 DB	 7
  007e8	07		 DB	 7
  007e9	07		 DB	 7
  007ea	07		 DB	 7
  007eb	07		 DB	 7
  007ec	07		 DB	 7
  007ed	07		 DB	 7
  007ee	07		 DB	 7
  007ef	07		 DB	 7
  007f0	07		 DB	 7
  007f1	07		 DB	 7
  007f2	07		 DB	 7
  007f3	07		 DB	 7
  007f4	07		 DB	 7
  007f5	07		 DB	 7
  007f6	07		 DB	 7
  007f7	07		 DB	 7
  007f8	07		 DB	 7
  007f9	07		 DB	 7
  007fa	07		 DB	 7
  007fb	07		 DB	 7
  007fc	07		 DB	 7
  007fd	07		 DB	 7
  007fe	07		 DB	 7
  007ff	07		 DB	 7
  00800	07		 DB	 7
  00801	07		 DB	 7
  00802	07		 DB	 7
  00803	07		 DB	 7
  00804	07		 DB	 7
  00805	05		 DB	 5
  00806	07		 DB	 7
  00807	06		 DB	 6
?GetToken@@YA?AW4SMDToken@@XZ ENDP			; GetToken
_TEXT	ENDS
PUBLIC	?ProcState_END@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::ProcState_END
PUBLIC	?ProcState_NOTIFY2@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::ProcState_NOTIFY2
PUBLIC	?ProcState_CLOSE@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::ProcState_CLOSE
PUBLIC	?ProcState_NOTIFY1@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::ProcState_NOTIFY1
PUBLIC	?ProcState_REVITALIZATION@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::ProcState_REVITALIZATION
PUBLIC	?ProcState_NONE@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::ProcState_NONE
PUBLIC	?CheckStateTime@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::CheckStateTime
PUBLIC	?Run@CKanturuTowerOfRefinement@@QAEXXZ		; CKanturuTowerOfRefinement::Run
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturutowerofrefinement.cpp
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?Run@CKanturuTowerOfRefinement@@QAEXXZ PROC		; CKanturuTowerOfRefinement::Run
; _this$ = ecx

; 174  : {

  00810	55		 push	 ebp
  00811	8b ec		 mov	 ebp, esp
  00813	83 ec 48	 sub	 esp, 72			; 00000048H
  00816	53		 push	 ebx
  00817	56		 push	 esi
  00818	57		 push	 edi
  00819	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 175  : 	this->CheckStateTime();

  0081c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0081f	e8 00 00 00 00	 call	 ?CheckStateTime@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::CheckStateTime

; 176  : 
; 177  : 	switch ( this->m_iTowerOfRefinementState )

  00824	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00827	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0082a	89 4d b8	 mov	 DWORD PTR tv66[ebp], ecx
  0082d	83 7d b8 05	 cmp	 DWORD PTR tv66[ebp], 5
  00831	77 44		 ja	 SHORT $LN9@Run
  00833	8b 55 b8	 mov	 edx, DWORD PTR tv66[ebp]
  00836	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN11@Run[edx*4]
$LN6@Run:

; 178  : 	{
; 179  : 		case KANTURU_TOWER_OF_REFINEMENT_NONE:
; 180  : 			this->ProcState_NONE();

  0083d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00840	e8 00 00 00 00	 call	 ?ProcState_NONE@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::ProcState_NONE

; 181  : 			break;

  00845	eb 30		 jmp	 SHORT $LN9@Run
$LN5@Run:

; 182  : 		case KANTURU_TOWER_OF_REFINEMENT_REVITALIZATION:
; 183  : 			this->ProcState_REVITALIZATION();

  00847	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0084a	e8 00 00 00 00	 call	 ?ProcState_REVITALIZATION@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::ProcState_REVITALIZATION

; 184  : 			break;

  0084f	eb 26		 jmp	 SHORT $LN9@Run
$LN4@Run:

; 185  : 		case KANTURU_TOWER_OF_REFINEMENT_NOTIFY1:
; 186  : 			this->ProcState_NOTIFY1();

  00851	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00854	e8 00 00 00 00	 call	 ?ProcState_NOTIFY1@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::ProcState_NOTIFY1

; 187  : 			break;

  00859	eb 1c		 jmp	 SHORT $LN9@Run
$LN3@Run:

; 188  : 		case KANTURU_TOWER_OF_REFINEMENT_CLOSE:
; 189  : 			this->ProcState_CLOSE();

  0085b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0085e	e8 00 00 00 00	 call	 ?ProcState_CLOSE@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::ProcState_CLOSE

; 190  : 			break;

  00863	eb 12		 jmp	 SHORT $LN9@Run
$LN2@Run:

; 191  : 		case KANTURU_TOWER_OF_REFINEMENT_NOTIFY2:
; 192  : 			this->ProcState_NOTIFY2();

  00865	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00868	e8 00 00 00 00	 call	 ?ProcState_NOTIFY2@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::ProcState_NOTIFY2

; 193  : 			break;

  0086d	eb 08		 jmp	 SHORT $LN9@Run
$LN1@Run:

; 194  : 		case KANTURU_TOWER_OF_REFINEMENT_END:
; 195  : 			this->ProcState_END();

  0086f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00872	e8 00 00 00 00	 call	 ?ProcState_END@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::ProcState_END
$LN9@Run:

; 196  : 			break;
; 197  : 	}
; 198  : }

  00877	5f		 pop	 edi
  00878	5e		 pop	 esi
  00879	5b		 pop	 ebx
  0087a	8b e5		 mov	 esp, ebp
  0087c	5d		 pop	 ebp
  0087d	c3		 ret	 0
  0087e	8b ff		 npad	 2
$LN11@Run:
  00880	00 00 00 00	 DD	 $LN6@Run
  00884	00 00 00 00	 DD	 $LN5@Run
  00888	00 00 00 00	 DD	 $LN4@Run
  0088c	00 00 00 00	 DD	 $LN3@Run
  00890	00 00 00 00	 DD	 $LN2@Run
  00894	00 00 00 00	 DD	 $LN1@Run
?Run@CKanturuTowerOfRefinement@@QAEXXZ ENDP		; CKanturuTowerOfRefinement::Run
_TEXT	ENDS
PUBLIC	?SetState_END@CKanturuTowerOfRefinement@@QAEXXZ	; CKanturuTowerOfRefinement::SetState_END
PUBLIC	?SetState_NOTIFY2@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::SetState_NOTIFY2
PUBLIC	?SetState_CLOSE@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::SetState_CLOSE
PUBLIC	?SetState_NOTIFY1@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::SetState_NOTIFY1
PUBLIC	?SetState_REVITALIZATION@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::SetState_REVITALIZATION
PUBLIC	?SetState_NONE@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::SetState_NONE
PUBLIC	?SetAppliedTime@CKanturuStateInfo@@QAEXXZ	; CKanturuStateInfo::SetAppliedTime
PUBLIC	?GetCondition@CKanturuStateInfo@@QAEHXZ		; CKanturuStateInfo::GetCondition
PUBLIC	?SetState@CKanturuTowerOfRefinement@@QAEXH@Z	; CKanturuTowerOfRefinement::SetState
EXTRN	?ResetAllData@CKanturuBattleUserMng@@QAEXXZ:PROC ; CKanturuBattleUserMng::ResetAllData
EXTRN	?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A:BYTE ; g_KanturuBattleUserMng
EXTRN	?NotifyKanturuChangeState@CKanturuUtil@@QAEXHH@Z:PROC ; CKanturuUtil::NotifyKanturuChangeState
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv74 = -72						; size = 4
_this$ = -4						; size = 4
_iTowerOfRefinement$ = 8				; size = 4
?SetState@CKanturuTowerOfRefinement@@QAEXH@Z PROC	; CKanturuTowerOfRefinement::SetState
; _this$ = ecx

; 203  : {

  008a0	55		 push	 ebp
  008a1	8b ec		 mov	 ebp, esp
  008a3	83 ec 48	 sub	 esp, 72			; 00000048H
  008a6	53		 push	 ebx
  008a7	56		 push	 esi
  008a8	57		 push	 edi
  008a9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  : 	if ( this->m_StateInfo[iTowerOfRefinement].GetCondition() > 0 )

  008ac	8b 45 08	 mov	 eax, DWORD PTR _iTowerOfRefinement$[ebp]
  008af	6b c0 14	 imul	 eax, 20			; 00000014H
  008b2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008b5	8d 4c 01 14	 lea	 ecx, DWORD PTR [ecx+eax+20]
  008b9	e8 00 00 00 00	 call	 ?GetCondition@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetCondition
  008be	85 c0		 test	 eax, eax
  008c0	7e 12		 jle	 SHORT $LN9@SetState

; 205  : 	{
; 206  : 		this->m_StateInfo[iTowerOfRefinement].SetAppliedTime();

  008c2	8b 45 08	 mov	 eax, DWORD PTR _iTowerOfRefinement$[ebp]
  008c5	6b c0 14	 imul	 eax, 20			; 00000014H
  008c8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008cb	8d 4c 01 14	 lea	 ecx, DWORD PTR [ecx+eax+20]
  008cf	e8 00 00 00 00	 call	 ?SetAppliedTime@CKanturuStateInfo@@QAEXXZ ; CKanturuStateInfo::SetAppliedTime
$LN9@SetState:

; 207  : 	}
; 208  : 
; 209  : 	switch ( iTowerOfRefinement )

  008d4	8b 45 08	 mov	 eax, DWORD PTR _iTowerOfRefinement$[ebp]
  008d7	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
  008da	83 7d b8 05	 cmp	 DWORD PTR tv74[ebp], 5
  008de	77 44		 ja	 SHORT $LN7@SetState
  008e0	8b 4d b8	 mov	 ecx, DWORD PTR tv74[ebp]
  008e3	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN12@SetState[ecx*4]
$LN6@SetState:

; 210  : 	{
; 211  : 		case KANTURU_TOWER_OF_REFINEMENT_NONE:
; 212  : 			this->SetState_NONE();

  008ea	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008ed	e8 00 00 00 00	 call	 ?SetState_NONE@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::SetState_NONE

; 213  : 			break;

  008f2	eb 30		 jmp	 SHORT $LN7@SetState
$LN5@SetState:

; 214  : 		case KANTURU_TOWER_OF_REFINEMENT_REVITALIZATION:
; 215  : 			this->SetState_REVITALIZATION();

  008f4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008f7	e8 00 00 00 00	 call	 ?SetState_REVITALIZATION@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::SetState_REVITALIZATION

; 216  : 			break;

  008fc	eb 26		 jmp	 SHORT $LN7@SetState
$LN4@SetState:

; 217  : 		case KANTURU_TOWER_OF_REFINEMENT_NOTIFY1:
; 218  : 			this->SetState_NOTIFY1();

  008fe	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00901	e8 00 00 00 00	 call	 ?SetState_NOTIFY1@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::SetState_NOTIFY1

; 219  : 			break;

  00906	eb 1c		 jmp	 SHORT $LN7@SetState
$LN3@SetState:

; 220  : 		case KANTURU_TOWER_OF_REFINEMENT_CLOSE:
; 221  : 			this->SetState_CLOSE();

  00908	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0090b	e8 00 00 00 00	 call	 ?SetState_CLOSE@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::SetState_CLOSE

; 222  : 			break;

  00910	eb 12		 jmp	 SHORT $LN7@SetState
$LN2@SetState:

; 223  : 		case KANTURU_TOWER_OF_REFINEMENT_NOTIFY2:
; 224  : 			this->SetState_NOTIFY2();

  00912	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00915	e8 00 00 00 00	 call	 ?SetState_NOTIFY2@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::SetState_NOTIFY2

; 225  : 			break;

  0091a	eb 08		 jmp	 SHORT $LN7@SetState
$LN1@SetState:

; 226  : 		case KANTURU_TOWER_OF_REFINEMENT_END:
; 227  : 			this->SetState_END();

  0091c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0091f	e8 00 00 00 00	 call	 ?SetState_END@CKanturuTowerOfRefinement@@QAEXXZ ; CKanturuTowerOfRefinement::SetState_END
$LN7@SetState:

; 228  : 			break;
; 229  : 	}
; 230  : 
; 231  : 	KANTURU_UTIL.NotifyKanturuChangeState(KANTURU_STATE_TOWER_OF_REFINEMENT, this->m_iTowerOfRefinementState);

  00924	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00927	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0092a	51		 push	 ecx
  0092b	6a 04		 push	 4
  0092d	b9 00 00 00 00	 mov	 ecx, OFFSET _KANTURU_UTIL
  00932	e8 00 00 00 00	 call	 ?NotifyKanturuChangeState@CKanturuUtil@@QAEXHH@Z ; CKanturuUtil::NotifyKanturuChangeState

; 232  : 	g_KanturuBattleUserMng.ResetAllData();

  00937	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  0093c	e8 00 00 00 00	 call	 ?ResetAllData@CKanturuBattleUserMng@@QAEXXZ ; CKanturuBattleUserMng::ResetAllData

; 233  : }

  00941	5f		 pop	 edi
  00942	5e		 pop	 esi
  00943	5b		 pop	 ebx
  00944	8b e5		 mov	 esp, ebp
  00946	5d		 pop	 ebp
  00947	c2 04 00	 ret	 4
  0094a	8b ff		 npad	 2
$LN12@SetState:
  0094c	00 00 00 00	 DD	 $LN6@SetState
  00950	00 00 00 00	 DD	 $LN5@SetState
  00954	00 00 00 00	 DD	 $LN4@SetState
  00958	00 00 00 00	 DD	 $LN3@SetState
  0095c	00 00 00 00	 DD	 $LN2@SetState
  00960	00 00 00 00	 DD	 $LN1@SetState
?SetState@CKanturuTowerOfRefinement@@QAEXH@Z ENDP	; CKanturuTowerOfRefinement::SetState
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturustateinfo.h
_TEXT	ENDS
;	COMDAT ?GetCondition@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCondition@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetCondition, COMDAT
; _this$ = ecx

; 40   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 41   : 		return this->m_iCondition;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 42   : 	}

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCondition@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetCondition
_TEXT	ENDS
EXTRN	__imp__GetTickCount@0:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ?SetAppliedTime@CKanturuStateInfo@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetAppliedTime@CKanturuStateInfo@@QAEXXZ PROC		; CKanturuStateInfo::SetAppliedTime, COMDAT
; _this$ = ecx

; 54   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 55   : 		this->m_dwAppliedTickCount = GetTickCount();

  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 56   : 	}

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
?SetAppliedTime@CKanturuStateInfo@@QAEXXZ ENDP		; CKanturuStateInfo::SetAppliedTime
_TEXT	ENDS
PUBLIC	?SetNextState@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetNextState
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturutowerofrefinement.cpp
_TEXT	SEGMENT
_iNextState$ = -8					; size = 4
_this$ = -4						; size = 4
_iCurrentState$ = 8					; size = 4
?SetNextState@CKanturuTowerOfRefinement@@QAEXH@Z PROC	; CKanturuTowerOfRefinement::SetNextState
; _this$ = ecx

; 238  : {

  00970	55		 push	 ebp
  00971	8b ec		 mov	 ebp, esp
  00973	83 ec 48	 sub	 esp, 72			; 00000048H
  00976	53		 push	 ebx
  00977	56		 push	 esi
  00978	57		 push	 edi
  00979	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 239  : 	int iNextState = iCurrentState + 1;

  0097c	8b 45 08	 mov	 eax, DWORD PTR _iCurrentState$[ebp]
  0097f	83 c0 01	 add	 eax, 1
  00982	89 45 f8	 mov	 DWORD PTR _iNextState$[ebp], eax

; 240  : 
; 241  : 	if ( iNextState >= KANTURU_TOWER_OF_REFINEMENT_STATE_INFO )

  00985	83 7d f8 06	 cmp	 DWORD PTR _iNextState$[ebp], 6
  00989	7c 07		 jl	 SHORT $LN1@SetNextSta

; 242  : 	{
; 243  : 		iNextState = KANTURU_TOWER_OF_REFINEMENT_NONE;

  0098b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iNextState$[ebp], 0
$LN1@SetNextSta:

; 244  : 	}
; 245  : 
; 246  : 	this->SetState(iNextState);

  00992	8b 45 f8	 mov	 eax, DWORD PTR _iNextState$[ebp]
  00995	50		 push	 eax
  00996	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00999	e8 00 00 00 00	 call	 ?SetState@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetState

; 247  : }

  0099e	5f		 pop	 edi
  0099f	5e		 pop	 esi
  009a0	5b		 pop	 ebx
  009a1	8b e5		 mov	 esp, ebp
  009a3	5d		 pop	 ebp
  009a4	c2 04 00	 ret	 4
?SetNextState@CKanturuTowerOfRefinement@@QAEXH@Z ENDP	; CKanturuTowerOfRefinement::SetNextState
_TEXT	ENDS
PUBLIC	??_C@_0DD@IGCDAKFG@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ ; `string'
;	COMDAT ??_C@_0DD@IGCDAKFG@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
CONST	SEGMENT
??_C@_0DD@IGCDAKFG@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ DB '['
	DB	' KANTURU ][ TowerOfRefinement ] State(%d) -> NONE', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_NONE@CKanturuTowerOfRefinement@@QAEXXZ PROC	; CKanturuTowerOfRefinement::SetState_NONE
; _this$ = ecx

; 251  : {

  009b0	55		 push	 ebp
  009b1	8b ec		 mov	 ebp, esp
  009b3	83 ec 44	 sub	 esp, 68			; 00000044H
  009b6	53		 push	 ebx
  009b7	56		 push	 esi
  009b8	57		 push	 edi
  009b9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 252  : 	LogAddC(5, "[ KANTURU ][ TowerOfRefinement ] State(%d) -> NONE",
; 253  : 		this->m_iTowerOfRefinementState);

  009bc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  009bf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  009c2	51		 push	 ecx
  009c3	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@IGCDAKFG@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
  009c8	6a 05		 push	 5
  009ca	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  009d0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 254  : 
; 255  : 	this->SetTowerOfRefinementState(KANTURU_TOWER_OF_REFINEMENT_NONE);

  009d3	6a 00		 push	 0
  009d5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009d8	e8 00 00 00 00	 call	 ?SetTowerOfRefinementState@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetTowerOfRefinementState

; 256  : 	this->SetEntrancePermit(FALSE);

  009dd	6a 00		 push	 0
  009df	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009e2	e8 00 00 00 00	 call	 ?SetEntrancePermit@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetEntrancePermit

; 257  : 	this->SetUseTowerOfRefinement(FALSE);

  009e7	6a 00		 push	 0
  009e9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009ec	e8 00 00 00 00	 call	 ?SetUseTowerOfRefinement@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetUseTowerOfRefinement

; 258  : 	g_KanturuBattleUserMng.ResetAllData();

  009f1	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  009f6	e8 00 00 00 00	 call	 ?ResetAllData@CKanturuBattleUserMng@@QAEXXZ ; CKanturuBattleUserMng::ResetAllData

; 259  : }

  009fb	5f		 pop	 edi
  009fc	5e		 pop	 esi
  009fd	5b		 pop	 ebx
  009fe	8b e5		 mov	 esp, ebp
  00a00	5d		 pop	 ebp
  00a01	c3		 ret	 0
?SetState_NONE@CKanturuTowerOfRefinement@@QAEXXZ ENDP	; CKanturuTowerOfRefinement::SetState_NONE
_TEXT	ENDS
PUBLIC	??_C@_0DN@EPMMEAPN@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ ; `string'
;	COMDAT ??_C@_0DN@EPMMEAPN@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
CONST	SEGMENT
??_C@_0DN@EPMMEAPN@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ DB '['
	DB	' KANTURU ][ TowerOfRefinement ] State(%d) -> REVITALIZATION', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_REVITALIZATION@CKanturuTowerOfRefinement@@QAEXXZ PROC ; CKanturuTowerOfRefinement::SetState_REVITALIZATION
; _this$ = ecx

; 263  : {

  00a10	55		 push	 ebp
  00a11	8b ec		 mov	 ebp, esp
  00a13	83 ec 44	 sub	 esp, 68			; 00000044H
  00a16	53		 push	 ebx
  00a17	56		 push	 esi
  00a18	57		 push	 edi
  00a19	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 264  : 	LogAddC(5, "[ KANTURU ][ TowerOfRefinement ] State(%d) -> REVITALIZATION",
; 265  : 		this->m_iTowerOfRefinementState);

  00a1c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a1f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00a22	51		 push	 ecx
  00a23	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@EPMMEAPN@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
  00a28	6a 05		 push	 5
  00a2a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00a30	83 c4 0c	 add	 esp, 12			; 0000000cH

; 266  : 
; 267  : 	this->SetTowerOfRefinementState(KANTURU_TOWER_OF_REFINEMENT_REVITALIZATION);

  00a33	6a 01		 push	 1
  00a35	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a38	e8 00 00 00 00	 call	 ?SetTowerOfRefinementState@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetTowerOfRefinementState

; 268  : 	this->SetEntrancePermit(TRUE);

  00a3d	6a 01		 push	 1
  00a3f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a42	e8 00 00 00 00	 call	 ?SetEntrancePermit@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetEntrancePermit

; 269  : 	this->SetUseTowerOfRefinement(TRUE);

  00a47	6a 01		 push	 1
  00a49	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a4c	e8 00 00 00 00	 call	 ?SetUseTowerOfRefinement@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetUseTowerOfRefinement

; 270  : }

  00a51	5f		 pop	 edi
  00a52	5e		 pop	 esi
  00a53	5b		 pop	 ebx
  00a54	8b e5		 mov	 esp, ebp
  00a56	5d		 pop	 ebp
  00a57	c3		 ret	 0
?SetState_REVITALIZATION@CKanturuTowerOfRefinement@@QAEXXZ ENDP ; CKanturuTowerOfRefinement::SetState_REVITALIZATION
_TEXT	ENDS
PUBLIC	??_C@_0DG@EMELBCOM@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ ; `string'
EXTRN	?SendMsgKauturuMapUser@CKanturuUtil@@QAAXPADZZ:PROC ; CKanturuUtil::SendMsgKauturuMapUser
EXTRN	?Get@CMsg@@QAEPADH@Z:PROC			; CMsg::Get
EXTRN	?lMsg@@3VCMsg@@A:BYTE				; lMsg
;	COMDAT ??_C@_0DG@EMELBCOM@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
CONST	SEGMENT
??_C@_0DG@EMELBCOM@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ DB '['
	DB	' KANTURU ][ TowerOfRefinement ] State(%d) -> NOTIFY1', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_NOTIFY1@CKanturuTowerOfRefinement@@QAEXXZ PROC ; CKanturuTowerOfRefinement::SetState_NOTIFY1
; _this$ = ecx

; 275  : {

  00a60	55		 push	 ebp
  00a61	8b ec		 mov	 ebp, esp
  00a63	83 ec 44	 sub	 esp, 68			; 00000044H
  00a66	53		 push	 ebx
  00a67	56		 push	 esi
  00a68	57		 push	 edi
  00a69	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 276  : 	LogAddC(5, "[ KANTURU ][ TowerOfRefinement ] State(%d) -> NOTIFY1",
; 277  : 		this->m_iTowerOfRefinementState);

  00a6c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a6f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00a72	51		 push	 ecx
  00a73	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@EMELBCOM@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
  00a78	6a 05		 push	 5
  00a7a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00a80	83 c4 0c	 add	 esp, 12			; 0000000cH

; 278  : 
; 279  : 	this->SetTowerOfRefinementState(KANTURU_TOWER_OF_REFINEMENT_NOTIFY1);

  00a83	6a 02		 push	 2
  00a85	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a88	e8 00 00 00 00	 call	 ?SetTowerOfRefinementState@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetTowerOfRefinementState

; 280  : 	this->SetEntrancePermit(TRUE);

  00a8d	6a 01		 push	 1
  00a8f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a92	e8 00 00 00 00	 call	 ?SetEntrancePermit@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetEntrancePermit

; 281  : 	this->SetUseTowerOfRefinement(TRUE);

  00a97	6a 01		 push	 1
  00a99	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a9c	e8 00 00 00 00	 call	 ?SetUseTowerOfRefinement@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetUseTowerOfRefinement

; 282  : 	KANTURU_UTIL.SendMsgKauturuMapUser(lMsg.Get(MSGGET(13, 29)));

  00aa1	68 1d 0d 00 00	 push	 3357			; 00000d1dH
  00aa6	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00aab	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00ab0	50		 push	 eax
  00ab1	68 00 00 00 00	 push	 OFFSET _KANTURU_UTIL
  00ab6	e8 00 00 00 00	 call	 ?SendMsgKauturuMapUser@CKanturuUtil@@QAAXPADZZ ; CKanturuUtil::SendMsgKauturuMapUser
  00abb	83 c4 08	 add	 esp, 8

; 283  : }

  00abe	5f		 pop	 edi
  00abf	5e		 pop	 esi
  00ac0	5b		 pop	 ebx
  00ac1	8b e5		 mov	 esp, ebp
  00ac3	5d		 pop	 ebp
  00ac4	c3		 ret	 0
?SetState_NOTIFY1@CKanturuTowerOfRefinement@@QAEXXZ ENDP ; CKanturuTowerOfRefinement::SetState_NOTIFY1
_TEXT	ENDS
PUBLIC	??_C@_0DE@FEKJLNCC@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ ; `string'
;	COMDAT ??_C@_0DE@FEKJLNCC@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
CONST	SEGMENT
??_C@_0DE@FEKJLNCC@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ DB '['
	DB	' KANTURU ][ TowerOfRefinement ] State(%d) -> CLOSE', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_CLOSE@CKanturuTowerOfRefinement@@QAEXXZ PROC	; CKanturuTowerOfRefinement::SetState_CLOSE
; _this$ = ecx

; 288  : {

  00ad0	55		 push	 ebp
  00ad1	8b ec		 mov	 ebp, esp
  00ad3	83 ec 44	 sub	 esp, 68			; 00000044H
  00ad6	53		 push	 ebx
  00ad7	56		 push	 esi
  00ad8	57		 push	 edi
  00ad9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 289  : 	LogAddC(5, "[ KANTURU ][ TowerOfRefinement ] State(%d) -> CLOSE",
; 290  : 		this->m_iTowerOfRefinementState);

  00adc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00adf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00ae2	51		 push	 ecx
  00ae3	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@FEKJLNCC@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
  00ae8	6a 05		 push	 5
  00aea	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00af0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 291  : 
; 292  : 	this->SetTowerOfRefinementState(KANTURU_TOWER_OF_REFINEMENT_CLOSE);

  00af3	6a 03		 push	 3
  00af5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00af8	e8 00 00 00 00	 call	 ?SetTowerOfRefinementState@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetTowerOfRefinementState

; 293  : 	this->SetEntrancePermit(FALSE);

  00afd	6a 00		 push	 0
  00aff	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b02	e8 00 00 00 00	 call	 ?SetEntrancePermit@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetEntrancePermit

; 294  : 	this->SetUseTowerOfRefinement(TRUE);

  00b07	6a 01		 push	 1
  00b09	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b0c	e8 00 00 00 00	 call	 ?SetUseTowerOfRefinement@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetUseTowerOfRefinement

; 295  : 	KANTURU_UTIL.SendMsgKauturuMapUser(lMsg.Get(MSGGET(13, 30)));

  00b11	68 1e 0d 00 00	 push	 3358			; 00000d1eH
  00b16	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00b1b	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00b20	50		 push	 eax
  00b21	68 00 00 00 00	 push	 OFFSET _KANTURU_UTIL
  00b26	e8 00 00 00 00	 call	 ?SendMsgKauturuMapUser@CKanturuUtil@@QAAXPADZZ ; CKanturuUtil::SendMsgKauturuMapUser
  00b2b	83 c4 08	 add	 esp, 8

; 296  : }

  00b2e	5f		 pop	 edi
  00b2f	5e		 pop	 esi
  00b30	5b		 pop	 ebx
  00b31	8b e5		 mov	 esp, ebp
  00b33	5d		 pop	 ebp
  00b34	c3		 ret	 0
?SetState_CLOSE@CKanturuTowerOfRefinement@@QAEXXZ ENDP	; CKanturuTowerOfRefinement::SetState_CLOSE
_TEXT	ENDS
PUBLIC	??_C@_0DG@GHGGEBCP@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ ; `string'
;	COMDAT ??_C@_0DG@GHGGEBCP@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
CONST	SEGMENT
??_C@_0DG@GHGGEBCP@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ DB '['
	DB	' KANTURU ][ TowerOfRefinement ] State(%d) -> NOTIFY2', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_NOTIFY2@CKanturuTowerOfRefinement@@QAEXXZ PROC ; CKanturuTowerOfRefinement::SetState_NOTIFY2
; _this$ = ecx

; 301  : {

  00b40	55		 push	 ebp
  00b41	8b ec		 mov	 ebp, esp
  00b43	83 ec 44	 sub	 esp, 68			; 00000044H
  00b46	53		 push	 ebx
  00b47	56		 push	 esi
  00b48	57		 push	 edi
  00b49	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 302  : 	LogAddC(5, "[ KANTURU ][ TowerOfRefinement ] State(%d) -> NOTIFY2",
; 303  : 		this->m_iTowerOfRefinementState);

  00b4c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b4f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00b52	51		 push	 ecx
  00b53	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@GHGGEBCP@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
  00b58	6a 05		 push	 5
  00b5a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00b60	83 c4 0c	 add	 esp, 12			; 0000000cH

; 304  : 
; 305  : 	this->SetTowerOfRefinementState(KANTURU_TOWER_OF_REFINEMENT_NOTIFY2);

  00b63	6a 04		 push	 4
  00b65	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b68	e8 00 00 00 00	 call	 ?SetTowerOfRefinementState@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetTowerOfRefinementState

; 306  : 	this->SetEntrancePermit(FALSE);

  00b6d	6a 00		 push	 0
  00b6f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b72	e8 00 00 00 00	 call	 ?SetEntrancePermit@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetEntrancePermit

; 307  : 	this->SetUseTowerOfRefinement(TRUE);

  00b77	6a 01		 push	 1
  00b79	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b7c	e8 00 00 00 00	 call	 ?SetUseTowerOfRefinement@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetUseTowerOfRefinement

; 308  : }

  00b81	5f		 pop	 edi
  00b82	5e		 pop	 esi
  00b83	5b		 pop	 ebx
  00b84	8b e5		 mov	 esp, ebp
  00b86	5d		 pop	 ebp
  00b87	c3		 ret	 0
?SetState_NOTIFY2@CKanturuTowerOfRefinement@@QAEXXZ ENDP ; CKanturuTowerOfRefinement::SetState_NOTIFY2
_TEXT	ENDS
PUBLIC	??_C@_0DN@FDKBEMDF@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ ; `string'
PUBLIC	??_C@_0DC@NKECDCHD@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ ; `string'
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?gObjMoveGate@@YAHHH@Z:PROC			; gObjMoveGate
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
;	COMDAT ??_C@_0DN@FDKBEMDF@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
CONST	SEGMENT
??_C@_0DN@FDKBEMDF@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ DB '['
	DB	' KANTURU ][ TowerOfRefinement ] State End:Kick Out [%s][%s]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@NKECDCHD@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
CONST	SEGMENT
??_C@_0DC@NKECDCHD@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@ DB '['
	DB	' KANTURU ][ TowerOfRefinement ] State(%d) -> END', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_iCount$228056 = -8					; size = 4
_this$ = -4						; size = 4
?SetState_END@CKanturuTowerOfRefinement@@QAEXXZ PROC	; CKanturuTowerOfRefinement::SetState_END
; _this$ = ecx

; 313  : {

  00b90	55		 push	 ebp
  00b91	8b ec		 mov	 ebp, esp
  00b93	83 ec 48	 sub	 esp, 72			; 00000048H
  00b96	53		 push	 ebx
  00b97	56		 push	 esi
  00b98	57		 push	 edi
  00b99	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 314  : 	LogAddC(5, "[ KANTURU ][ TowerOfRefinement ] State(%d) -> END",
; 315  : 		this->m_iTowerOfRefinementState);

  00b9c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b9f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00ba2	51		 push	 ecx
  00ba3	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@NKECDCHD@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
  00ba8	6a 05		 push	 5
  00baa	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00bb0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 316  : 
; 317  : 	this->SetTowerOfRefinementState(KANTURU_TOWER_OF_REFINEMENT_END);

  00bb3	6a 05		 push	 5
  00bb5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00bb8	e8 00 00 00 00	 call	 ?SetTowerOfRefinementState@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetTowerOfRefinementState

; 318  : 	this->SetEntrancePermit(FALSE);

  00bbd	6a 00		 push	 0
  00bbf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00bc2	e8 00 00 00 00	 call	 ?SetEntrancePermit@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetEntrancePermit

; 319  : 	this->SetUseTowerOfRefinement(FALSE);

  00bc7	6a 00		 push	 0
  00bc9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00bcc	e8 00 00 00 00	 call	 ?SetUseTowerOfRefinement@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetUseTowerOfRefinement

; 320  : 
; 321  : 	for ( int iCount=0;iCount<OBJMAX;iCount++)

  00bd1	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iCount$228056[ebp], 0
  00bd8	eb 09		 jmp	 SHORT $LN4@SetState_E
$LN3@SetState_E:
  00bda	8b 45 f8	 mov	 eax, DWORD PTR _iCount$228056[ebp]
  00bdd	83 c0 01	 add	 eax, 1
  00be0	89 45 f8	 mov	 DWORD PTR _iCount$228056[ebp], eax
$LN4@SetState_E:
  00be3	81 7d f8 98 3a
	00 00		 cmp	 DWORD PTR _iCount$228056[ebp], 15000 ; 00003a98H
  00bea	0f 8d 81 00 00
	00		 jge	 $LN5@SetState_E

; 322  : 	{
; 323  : 		if ( gObj[iCount].Type == OBJ_USER &&
; 324  : 			 gObj[iCount].MapNumber == MAP_INDEX_KANTURU_BOSS )

  00bf0	8b 45 f8	 mov	 eax, DWORD PTR _iCount$228056[ebp]
  00bf3	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00bf9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00bff	0f b7 54 01 68	 movzx	 edx, WORD PTR [ecx+eax+104]
  00c04	83 fa 01	 cmp	 edx, 1
  00c07	75 63		 jne	 SHORT $LN1@SetState_E
  00c09	8b 45 f8	 mov	 eax, DWORD PTR _iCount$228056[ebp]
  00c0c	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00c12	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00c18	0f b6 94 01 49
	01 00 00	 movzx	 edx, BYTE PTR [ecx+eax+329]
  00c20	83 fa 27	 cmp	 edx, 39			; 00000027H
  00c23	75 47		 jne	 SHORT $LN1@SetState_E

; 325  : 		{
; 326  : 			gObjMoveGate(iCount, 136);

  00c25	68 88 00 00 00	 push	 136			; 00000088H
  00c2a	8b 45 f8	 mov	 eax, DWORD PTR _iCount$228056[ebp]
  00c2d	50		 push	 eax
  00c2e	e8 00 00 00 00	 call	 ?gObjMoveGate@@YAHHH@Z	; gObjMoveGate
  00c33	83 c4 08	 add	 esp, 8

; 327  : 
; 328  : 			LogAddTD("[ KANTURU ][ TowerOfRefinement ] State End:Kick Out [%s][%s]",
; 329  : 				gObj[iCount].AccountID, gObj[iCount].Name);

  00c36	8b 45 f8	 mov	 eax, DWORD PTR _iCount$228056[ebp]
  00c39	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00c3f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00c45	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  00c49	52		 push	 edx
  00c4a	8b 45 f8	 mov	 eax, DWORD PTR _iCount$228056[ebp]
  00c4d	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00c53	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00c59	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  00c5d	52		 push	 edx
  00c5e	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@FDKBEMDF@?$FL?5KANTURU?5?$FN?$FL?5TowerOfRefinement?5?$FN@
  00c63	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00c69	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@SetState_E:

; 330  : 		}
; 331  : 	}

  00c6c	e9 69 ff ff ff	 jmp	 $LN3@SetState_E
$LN5@SetState_E:

; 332  : }

  00c71	5f		 pop	 edi
  00c72	5e		 pop	 esi
  00c73	5b		 pop	 ebx
  00c74	8b e5		 mov	 esp, ebp
  00c76	5d		 pop	 ebp
  00c77	c3		 ret	 0
?SetState_END@CKanturuTowerOfRefinement@@QAEXXZ ENDP	; CKanturuTowerOfRefinement::SetState_END
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?ProcState_NONE@CKanturuTowerOfRefinement@@QAEXXZ PROC	; CKanturuTowerOfRefinement::ProcState_NONE
; _this$ = ecx

; 337  : {

  00c80	55		 push	 ebp
  00c81	8b ec		 mov	 ebp, esp
  00c83	83 ec 44	 sub	 esp, 68			; 00000044H
  00c86	53		 push	 ebx
  00c87	56		 push	 esi
  00c88	57		 push	 edi
  00c89	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 338  : 	return;
; 339  : }

  00c8c	5f		 pop	 edi
  00c8d	5e		 pop	 esi
  00c8e	5b		 pop	 ebx
  00c8f	8b e5		 mov	 esp, ebp
  00c91	5d		 pop	 ebp
  00c92	c3		 ret	 0
?ProcState_NONE@CKanturuTowerOfRefinement@@QAEXXZ ENDP	; CKanturuTowerOfRefinement::ProcState_NONE
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?ProcState_REVITALIZATION@CKanturuTowerOfRefinement@@QAEXXZ PROC ; CKanturuTowerOfRefinement::ProcState_REVITALIZATION
; _this$ = ecx

; 343  : {

  00ca0	55		 push	 ebp
  00ca1	8b ec		 mov	 ebp, esp
  00ca3	83 ec 44	 sub	 esp, 68			; 00000044H
  00ca6	53		 push	 ebx
  00ca7	56		 push	 esi
  00ca8	57		 push	 edi
  00ca9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 344  : 	return;
; 345  : }

  00cac	5f		 pop	 edi
  00cad	5e		 pop	 esi
  00cae	5b		 pop	 ebx
  00caf	8b e5		 mov	 esp, ebp
  00cb1	5d		 pop	 ebp
  00cb2	c3		 ret	 0
?ProcState_REVITALIZATION@CKanturuTowerOfRefinement@@QAEXXZ ENDP ; CKanturuTowerOfRefinement::ProcState_REVITALIZATION
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?ProcState_NOTIFY1@CKanturuTowerOfRefinement@@QAEXXZ PROC ; CKanturuTowerOfRefinement::ProcState_NOTIFY1
; _this$ = ecx

; 349  : {

  00cc0	55		 push	 ebp
  00cc1	8b ec		 mov	 ebp, esp
  00cc3	83 ec 44	 sub	 esp, 68			; 00000044H
  00cc6	53		 push	 ebx
  00cc7	56		 push	 esi
  00cc8	57		 push	 edi
  00cc9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 350  : 	return;
; 351  : }

  00ccc	5f		 pop	 edi
  00ccd	5e		 pop	 esi
  00cce	5b		 pop	 ebx
  00ccf	8b e5		 mov	 esp, ebp
  00cd1	5d		 pop	 ebp
  00cd2	c3		 ret	 0
?ProcState_NOTIFY1@CKanturuTowerOfRefinement@@QAEXXZ ENDP ; CKanturuTowerOfRefinement::ProcState_NOTIFY1
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?ProcState_CLOSE@CKanturuTowerOfRefinement@@QAEXXZ PROC	; CKanturuTowerOfRefinement::ProcState_CLOSE
; _this$ = ecx

; 355  : {

  00ce0	55		 push	 ebp
  00ce1	8b ec		 mov	 ebp, esp
  00ce3	83 ec 44	 sub	 esp, 68			; 00000044H
  00ce6	53		 push	 ebx
  00ce7	56		 push	 esi
  00ce8	57		 push	 edi
  00ce9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 356  : 	return;
; 357  : }

  00cec	5f		 pop	 edi
  00ced	5e		 pop	 esi
  00cee	5b		 pop	 ebx
  00cef	8b e5		 mov	 esp, ebp
  00cf1	5d		 pop	 ebp
  00cf2	c3		 ret	 0
?ProcState_CLOSE@CKanturuTowerOfRefinement@@QAEXXZ ENDP	; CKanturuTowerOfRefinement::ProcState_CLOSE
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?ProcState_NOTIFY2@CKanturuTowerOfRefinement@@QAEXXZ PROC ; CKanturuTowerOfRefinement::ProcState_NOTIFY2
; _this$ = ecx

; 361  : {

  00d00	55		 push	 ebp
  00d01	8b ec		 mov	 ebp, esp
  00d03	83 ec 44	 sub	 esp, 68			; 00000044H
  00d06	53		 push	 ebx
  00d07	56		 push	 esi
  00d08	57		 push	 edi
  00d09	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 362  : 	return;
; 363  : }

  00d0c	5f		 pop	 edi
  00d0d	5e		 pop	 esi
  00d0e	5b		 pop	 ebx
  00d0f	8b e5		 mov	 esp, ebp
  00d11	5d		 pop	 ebp
  00d12	c3		 ret	 0
?ProcState_NOTIFY2@CKanturuTowerOfRefinement@@QAEXXZ ENDP ; CKanturuTowerOfRefinement::ProcState_NOTIFY2
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?ProcState_END@CKanturuTowerOfRefinement@@QAEXXZ PROC	; CKanturuTowerOfRefinement::ProcState_END
; _this$ = ecx

; 367  : {

  00d20	55		 push	 ebp
  00d21	8b ec		 mov	 ebp, esp
  00d23	83 ec 44	 sub	 esp, 68			; 00000044H
  00d26	53		 push	 ebx
  00d27	56		 push	 esi
  00d28	57		 push	 edi
  00d29	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 368  : 	return;
; 369  : }

  00d2c	5f		 pop	 edi
  00d2d	5e		 pop	 esi
  00d2e	5b		 pop	 ebx
  00d2f	8b e5		 mov	 esp, ebp
  00d31	5d		 pop	 ebp
  00d32	c3		 ret	 0
?ProcState_END@CKanturuTowerOfRefinement@@QAEXXZ ENDP	; CKanturuTowerOfRefinement::ProcState_END
_TEXT	ENDS
PUBLIC	?IsTimeOut@CKanturuStateInfo@@QAEHXZ		; CKanturuStateInfo::IsTimeOut
PUBLIC	?GetTowerOfRefinementState@CKanturuTowerOfRefinement@@QAEHXZ ; CKanturuTowerOfRefinement::GetTowerOfRefinementState
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_iCurrentState$ = -8					; size = 4
_this$ = -4						; size = 4
?CheckStateTime@CKanturuTowerOfRefinement@@QAEXXZ PROC	; CKanturuTowerOfRefinement::CheckStateTime
; _this$ = ecx

; 374  : {

  00d40	55		 push	 ebp
  00d41	8b ec		 mov	 ebp, esp
  00d43	83 ec 48	 sub	 esp, 72			; 00000048H
  00d46	53		 push	 ebx
  00d47	56		 push	 esi
  00d48	57		 push	 edi
  00d49	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 375  : 	int iCurrentState = this->GetTowerOfRefinementState();

  00d4c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d4f	e8 00 00 00 00	 call	 ?GetTowerOfRefinementState@CKanturuTowerOfRefinement@@QAEHXZ ; CKanturuTowerOfRefinement::GetTowerOfRefinementState
  00d54	89 45 f8	 mov	 DWORD PTR _iCurrentState$[ebp], eax

; 376  : 
; 377  : 	if ( iCurrentState )

  00d57	83 7d f8 00	 cmp	 DWORD PTR _iCurrentState$[ebp], 0
  00d5b	74 3a		 je	 SHORT $LN4@CheckState

; 378  : 	{
; 379  : 		if ( this->m_StateInfo[iCurrentState].GetCondition() == 1 )

  00d5d	8b 45 f8	 mov	 eax, DWORD PTR _iCurrentState$[ebp]
  00d60	6b c0 14	 imul	 eax, 20			; 00000014H
  00d63	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d66	8d 4c 01 14	 lea	 ecx, DWORD PTR [ecx+eax+20]
  00d6a	e8 00 00 00 00	 call	 ?GetCondition@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetCondition
  00d6f	83 f8 01	 cmp	 eax, 1
  00d72	75 23		 jne	 SHORT $LN4@CheckState

; 380  : 		{
; 381  : 			if ( this->m_StateInfo[iCurrentState].IsTimeOut() == TRUE )

  00d74	8b 45 f8	 mov	 eax, DWORD PTR _iCurrentState$[ebp]
  00d77	6b c0 14	 imul	 eax, 20			; 00000014H
  00d7a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d7d	8d 4c 01 14	 lea	 ecx, DWORD PTR [ecx+eax+20]
  00d81	e8 00 00 00 00	 call	 ?IsTimeOut@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::IsTimeOut
  00d86	83 f8 01	 cmp	 eax, 1
  00d89	75 0c		 jne	 SHORT $LN4@CheckState

; 382  : 			{
; 383  : 				this->SetNextState(iCurrentState);

  00d8b	8b 45 f8	 mov	 eax, DWORD PTR _iCurrentState$[ebp]
  00d8e	50		 push	 eax
  00d8f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d92	e8 00 00 00 00	 call	 ?SetNextState@CKanturuTowerOfRefinement@@QAEXH@Z ; CKanturuTowerOfRefinement::SetNextState
$LN4@CheckState:

; 384  : 			}
; 385  : 		}
; 386  : 	}
; 387  : }

  00d97	5f		 pop	 edi
  00d98	5e		 pop	 esi
  00d99	5b		 pop	 ebx
  00d9a	8b e5		 mov	 esp, ebp
  00d9c	5d		 pop	 ebp
  00d9d	c3		 ret	 0
?CheckStateTime@CKanturuTowerOfRefinement@@QAEXXZ ENDP	; CKanturuTowerOfRefinement::CheckStateTime
_TEXT	ENDS
PUBLIC	?GetRemainTime@CKanturuStateInfo@@QAEHXZ	; CKanturuStateInfo::GetRemainTime
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturustateinfo.h
;	COMDAT ?IsTimeOut@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsTimeOut@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::IsTimeOut, COMDAT
; _this$ = ecx

; 89   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 90   : 		if ( this->GetRemainTime() <= 0 )

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetRemainTime@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetRemainTime
  00014	85 c0		 test	 eax, eax
  00016	7f 07		 jg	 SHORT $LN1@IsTimeOut

; 91   : 		{
; 92   : 			return TRUE;

  00018	b8 01 00 00 00	 mov	 eax, 1
  0001d	eb 02		 jmp	 SHORT $LN2@IsTimeOut
$LN1@IsTimeOut:

; 93   : 		}
; 94   : 
; 95   : 		return FALSE;

  0001f	33 c0		 xor	 eax, eax
$LN2@IsTimeOut:

; 96   : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?IsTimeOut@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::IsTimeOut
_TEXT	ENDS
PUBLIC	?GetElapsedTime@CKanturuStateInfo@@QAEHXZ	; CKanturuStateInfo::GetElapsedTime
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetRemainTime@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
_iRemainTime$ = -8					; size = 4
_this$ = -4						; size = 4
?GetRemainTime@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetRemainTime, COMDAT
; _this$ = ecx

; 70   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 71   : 		int iRemainTime = 0;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iRemainTime$[ebp], 0

; 72   : 
; 73   : 		if ( this->GetCondition() == 1 )

  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	e8 00 00 00 00	 call	 ?GetCondition@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetCondition
  0001b	83 f8 01	 cmp	 eax, 1
  0001e	75 2b		 jne	 SHORT $LN2@GetRemainT

; 74   : 		{
; 75   : 			iRemainTime = this->m_iValue - this->GetElapsedTime();

  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ?GetElapsedTime@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetElapsedTime
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0002e	2b d0		 sub	 edx, eax
  00030	89 55 f8	 mov	 DWORD PTR _iRemainTime$[ebp], edx

; 76   : 
; 77   : 			if ( iRemainTime <= 0 )

  00033	83 7d f8 00	 cmp	 DWORD PTR _iRemainTime$[ebp], 0
  00037	7f 04		 jg	 SHORT $LN1@GetRemainT

; 78   : 			{
; 79   : 				return 0;

  00039	33 c0		 xor	 eax, eax
  0003b	eb 11		 jmp	 SHORT $LN3@GetRemainT
$LN1@GetRemainT:

; 80   : 			}
; 81   : 
; 82   : 			iRemainTime /= 1000;

  0003d	8b 45 f8	 mov	 eax, DWORD PTR _iRemainTime$[ebp]
  00040	99		 cdq
  00041	b9 e8 03 00 00	 mov	 ecx, 1000		; 000003e8H
  00046	f7 f9		 idiv	 ecx
  00048	89 45 f8	 mov	 DWORD PTR _iRemainTime$[ebp], eax
$LN2@GetRemainT:

; 83   : 		}
; 84   : 
; 85   : 		return iRemainTime;

  0004b	8b 45 f8	 mov	 eax, DWORD PTR _iRemainTime$[ebp]
$LN3@GetRemainT:

; 86   : 	}

  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	5b		 pop	 ebx
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
?GetRemainTime@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetRemainTime
_TEXT	ENDS
PUBLIC	?GetAppliedTime@CKanturuStateInfo@@QAEHXZ	; CKanturuStateInfo::GetAppliedTime
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetElapsedTime@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
_iElapsedTime$ = -8					; size = 4
_this$ = -4						; size = 4
?GetElapsedTime@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetElapsedTime, COMDAT
; _this$ = ecx

; 64   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 65   : 		int iElapsedTime = GetTickCount() - this->GetAppliedTime();

  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00012	8b f0		 mov	 esi, eax
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?GetAppliedTime@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetAppliedTime
  0001c	2b f0		 sub	 esi, eax
  0001e	89 75 f8	 mov	 DWORD PTR _iElapsedTime$[ebp], esi

; 66   : 		return iElapsedTime;

  00021	8b 45 f8	 mov	 eax, DWORD PTR _iElapsedTime$[ebp]

; 67   : 	}

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?GetElapsedTime@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetElapsedTime
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?GetAppliedTime@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAppliedTime@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetAppliedTime, COMDAT
; _this$ = ecx

; 59   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 60   : 		return this->m_dwAppliedTickCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 61   : 	}

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetAppliedTime@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetAppliedTime
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturutowerofrefinement.h
_TEXT	ENDS
;	COMDAT ?GetTowerOfRefinementState@CKanturuTowerOfRefinement@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTowerOfRefinementState@CKanturuTowerOfRefinement@@QAEHXZ PROC ; CKanturuTowerOfRefinement::GetTowerOfRefinementState, COMDAT
; _this$ = ecx

; 52   : 	int GetTowerOfRefinementState(){return this->m_iTowerOfRefinementState;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetTowerOfRefinementState@CKanturuTowerOfRefinement@@QAEHXZ ENDP ; CKanturuTowerOfRefinement::GetTowerOfRefinementState
_TEXT	ENDS
PUBLIC	?GetRemainTime@CKanturuTowerOfRefinement@@QAEHXZ ; CKanturuTowerOfRefinement::GetRemainTime
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturutowerofrefinement.cpp
_TEXT	SEGMENT
_iCurrentState$ = -8					; size = 4
_this$ = -4						; size = 4
?GetRemainTime@CKanturuTowerOfRefinement@@QAEHXZ PROC	; CKanturuTowerOfRefinement::GetRemainTime
; _this$ = ecx

; 392  : {

  00da0	55		 push	 ebp
  00da1	8b ec		 mov	 ebp, esp
  00da3	83 ec 48	 sub	 esp, 72			; 00000048H
  00da6	53		 push	 ebx
  00da7	56		 push	 esi
  00da8	57		 push	 edi
  00da9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 393  : 	int iCurrentState = this->GetTowerOfRefinementState();

  00dac	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00daf	e8 00 00 00 00	 call	 ?GetTowerOfRefinementState@CKanturuTowerOfRefinement@@QAEHXZ ; CKanturuTowerOfRefinement::GetTowerOfRefinementState
  00db4	89 45 f8	 mov	 DWORD PTR _iCurrentState$[ebp], eax

; 394  : 	return this->m_StateInfo[iCurrentState].GetRemainTime();

  00db7	8b 45 f8	 mov	 eax, DWORD PTR _iCurrentState$[ebp]
  00dba	6b c0 14	 imul	 eax, 20			; 00000014H
  00dbd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00dc0	8d 4c 01 14	 lea	 ecx, DWORD PTR [ecx+eax+20]
  00dc4	e8 00 00 00 00	 call	 ?GetRemainTime@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetRemainTime

; 395  : }

  00dc9	5f		 pop	 edi
  00dca	5e		 pop	 esi
  00dcb	5b		 pop	 ebx
  00dcc	8b e5		 mov	 esp, ebp
  00dce	5d		 pop	 ebp
  00dcf	c3		 ret	 0
?GetRemainTime@CKanturuTowerOfRefinement@@QAEHXZ ENDP	; CKanturuTowerOfRefinement::GetRemainTime
_TEXT	ENDS
EXTRN	_atexit:PROC
EXTRN	??0CKanturuUtil@@QAE@XZ:PROC			; CKanturuUtil::CKanturuUtil
; Function compile flags: /Odtp /ZI
;	COMDAT ??__EKANTURU_UTIL@@YAXXZ
text$yc	SEGMENT
??__EKANTURU_UTIL@@YAXXZ PROC				; `dynamic initializer for 'KANTURU_UTIL'', COMDAT

; 17   : static CKanturuUtil KANTURU_UTIL;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET _KANTURU_UTIL
  0000e	e8 00 00 00 00	 call	 ??0CKanturuUtil@@QAE@XZ	; CKanturuUtil::CKanturuUtil
  00013	68 00 00 00 00	 push	 OFFSET ??__FKANTURU_UTIL@@YAXXZ ; `dynamic atexit destructor for 'KANTURU_UTIL''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__EKANTURU_UTIL@@YAXXZ ENDP				; `dynamic initializer for 'KANTURU_UTIL''
text$yc	ENDS
EXTRN	??1CKanturuUtil@@UAE@XZ:PROC			; CKanturuUtil::~CKanturuUtil
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FKANTURU_UTIL@@YAXXZ
text$yd	SEGMENT
??__FKANTURU_UTIL@@YAXXZ PROC				; `dynamic atexit destructor for 'KANTURU_UTIL'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET _KANTURU_UTIL
  0000e	e8 00 00 00 00	 call	 ??1CKanturuUtil@@UAE@XZ	; CKanturuUtil::~CKanturuUtil
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__FKANTURU_UTIL@@YAXXZ ENDP				; `dynamic atexit destructor for 'KANTURU_UTIL''
text$yd	ENDS
_BSS	SEGMENT
_KANTURU_UTIL DD 01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_KANTURU_UTIL$initializer$ DD FLAT:??__EKANTURU_UTIL@@YAXXZ
CRT$XCU	ENDS
END
