; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\KanturuBattleStanby.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?SetBattleStanbyState@CKanturuBattleStanby@@QAEXH@Z ; CKanturuBattleStanby::SetBattleStanbyState
PUBLIC	?ResetAllData@CKanturuBattleStanby@@QAEXXZ	; CKanturuBattleStanby::ResetAllData
PUBLIC	??_7CKanturuBattleStanby@@6B@			; CKanturuBattleStanby::`vftable'
PUBLIC	??0CKanturuBattleStanby@@QAE@XZ			; CKanturuBattleStanby::CKanturuBattleStanby
PUBLIC	??_R4CKanturuBattleStanby@@6B@			; CKanturuBattleStanby::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCKanturuBattleStanby@@@8		; CKanturuBattleStanby `RTTI Type Descriptor'
PUBLIC	??_R3CKanturuBattleStanby@@8			; CKanturuBattleStanby::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CKanturuBattleStanby@@8			; CKanturuBattleStanby::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CKanturuBattleStanby@@8		; CKanturuBattleStanby::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??0CKanturuStateInfo@@QAE@XZ:PROC		; CKanturuStateInfo::CKanturuStateInfo
EXTRN	??1CKanturuStateInfo@@UAE@XZ:PROC		; CKanturuStateInfo::~CKanturuStateInfo
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECKanturuBattleStanby@@UAEPAXI@Z:PROC	; CKanturuBattleStanby::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CKanturuBattleStanby@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturubattlestanby.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CKanturuBattleStanby@@8 DD FLAT:??_R0?AVCKanturuBattleStanby@@@8 ; CKanturuBattleStanby::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CKanturuBattleStanby@@8
rdata$r	ENDS
;	COMDAT ??_R2CKanturuBattleStanby@@8
rdata$r	SEGMENT
??_R2CKanturuBattleStanby@@8 DD FLAT:??_R1A@?0A@EA@CKanturuBattleStanby@@8 ; CKanturuBattleStanby::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CKanturuBattleStanby@@8
rdata$r	SEGMENT
??_R3CKanturuBattleStanby@@8 DD 00H			; CKanturuBattleStanby::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CKanturuBattleStanby@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCKanturuBattleStanby@@@8
_DATA	SEGMENT
??_R0?AVCKanturuBattleStanby@@@8 DD FLAT:??_7type_info@@6B@ ; CKanturuBattleStanby `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCKanturuBattleStanby@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CKanturuBattleStanby@@6B@
rdata$r	SEGMENT
??_R4CKanturuBattleStanby@@6B@ DD 00H			; CKanturuBattleStanby::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCKanturuBattleStanby@@@8
	DD	FLAT:??_R3CKanturuBattleStanby@@8
rdata$r	ENDS
;	COMDAT ??_7CKanturuBattleStanby@@6B@
CONST	SEGMENT
??_7CKanturuBattleStanby@@6B@ DD FLAT:??_R4CKanturuBattleStanby@@6B@ ; CKanturuBattleStanby::`vftable'
	DD	FLAT:??_ECKanturuBattleStanby@@UAEPAXI@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??0CKanturuBattleStanby@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CKanturuBattleStanby@@QAE@XZ$0
__ehfuncinfo$??0CKanturuBattleStanby@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CKanturuBattleStanby@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CKanturuBattleStanby@@QAE@XZ PROC			; CKanturuBattleStanby::CKanturuBattleStanby
; _this$ = ecx

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CKanturuBattleStanby@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CKanturuBattleStanby@@6B@
  00034	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00037	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  0003e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00041	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
  00048	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
  00052	68 00 00 00 00	 push	 OFFSET ??1CKanturuStateInfo@@UAE@XZ ; CKanturuStateInfo::~CKanturuStateInfo
  00057	68 00 00 00 00	 push	 OFFSET ??0CKanturuStateInfo@@QAE@XZ ; CKanturuStateInfo::CKanturuStateInfo
  0005c	6a 04		 push	 4
  0005e	6a 14		 push	 20			; 00000014H
  00060	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00063	83 c0 10	 add	 eax, 16			; 00000010H
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ??_L@YGXPAXIHP6EX0@Z1@Z
  0006c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00073	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00076	c7 40 60 00 00
	00 00		 mov	 DWORD PTR [eax+96], 0

; 25   : 	this->ResetAllData();

  0007d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	e8 00 00 00 00	 call	 ?ResetAllData@CKanturuBattleStanby@@QAEXXZ ; CKanturuBattleStanby::ResetAllData

; 26   : 	this->SetBattleStanbyState(KANTURU_STANBY_NONE);

  00085	6a 00		 push	 0
  00087	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	e8 00 00 00 00	 call	 ?SetBattleStanbyState@CKanturuBattleStanby@@QAEXH@Z ; CKanturuBattleStanby::SetBattleStanbyState

; 27   : }

  0008f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00096	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00099	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a3	59		 pop	 ecx
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CKanturuBattleStanby@@QAE@XZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ??1CKanturuStateInfo@@UAE@XZ ; CKanturuStateInfo::~CKanturuStateInfo
  00005	6a 04		 push	 4
  00007	6a 14		 push	 20			; 00000014H
  00009	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 10	 add	 eax, 16			; 00000010H
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  00015	c3		 ret	 0
__ehhandler$??0CKanturuBattleStanby@@QAE@XZ:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CKanturuBattleStanby@@QAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CKanturuBattleStanby@@QAE@XZ ENDP			; CKanturuBattleStanby::CKanturuBattleStanby
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturubattlestanby.h
;	COMDAT ?SetBattleStanbyState@CKanturuBattleStanby@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iBattleStanbyState$ = 8				; size = 4
?SetBattleStanbyState@CKanturuBattleStanby@@QAEXH@Z PROC ; CKanturuBattleStanby::SetBattleStanbyState, COMDAT
; _this$ = ecx

; 46   : 	void SetBattleStanbyState(int iBattleStanbyState){this->m_iBattleStanbyState = iBattleStanbyState;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _iBattleStanbyState$[ebp]
  00012	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetBattleStanbyState@CKanturuBattleStanby@@QAEXH@Z ENDP ; CKanturuBattleStanby::SetBattleStanbyState
_TEXT	ENDS
PUBLIC	??1CKanturuBattleStanby@@UAE@XZ			; CKanturuBattleStanby::~CKanturuBattleStanby
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCKanturuBattleStanby@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCKanturuBattleStanby@@UAEPAXI@Z PROC		; CKanturuBattleStanby::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CKanturuBattleStanby@@UAE@XZ ; CKanturuBattleStanby::~CKanturuBattleStanby
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCKanturuBattleStanby@@UAEPAXI@Z ENDP		; CKanturuBattleStanby::`scalar deleting destructor'
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturubattlestanby.cpp
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CKanturuBattleStanby@@UAE@XZ PROC			; CKanturuBattleStanby::~CKanturuBattleStanby
; _this$ = ecx

; 30   : {

  000b0	55		 push	 ebp
  000b1	8b ec		 mov	 ebp, esp
  000b3	83 ec 44	 sub	 esp, 68			; 00000044H
  000b6	53		 push	 ebx
  000b7	56		 push	 esi
  000b8	57		 push	 edi
  000b9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  000bc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bf	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CKanturuBattleStanby@@6B@

; 31   : 	return;
; 32   : }

  000c5	68 00 00 00 00	 push	 OFFSET ??1CKanturuStateInfo@@UAE@XZ ; CKanturuStateInfo::~CKanturuStateInfo
  000ca	6a 04		 push	 4
  000cc	6a 14		 push	 20			; 00000014H
  000ce	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	83 c0 10	 add	 eax, 16			; 00000010H
  000d4	50		 push	 eax
  000d5	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5b		 pop	 ebx
  000dd	8b e5		 mov	 esp, ebp
  000df	5d		 pop	 ebp
  000e0	c3		 ret	 0
??1CKanturuBattleStanby@@UAE@XZ ENDP			; CKanturuBattleStanby::~CKanturuBattleStanby
_TEXT	ENDS
PUBLIC	?Init@CKanturuBattleStanby@@QAEXXZ		; CKanturuBattleStanby::Init
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@CKanturuBattleStanby@@QAEXXZ PROC			; CKanturuBattleStanby::Init
; _this$ = ecx

; 37   : {

  000f0	55		 push	 ebp
  000f1	8b ec		 mov	 ebp, esp
  000f3	83 ec 44	 sub	 esp, 68			; 00000044H
  000f6	53		 push	 ebx
  000f7	56		 push	 esi
  000f8	57		 push	 edi
  000f9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 38   : 	return;
; 39   : }

  000fc	5f		 pop	 edi
  000fd	5e		 pop	 esi
  000fe	5b		 pop	 ebx
  000ff	8b e5		 mov	 esp, ebp
  00101	5d		 pop	 ebp
  00102	c3		 ret	 0
?Init@CKanturuBattleStanby@@QAEXXZ ENDP			; CKanturuBattleStanby::Init
_TEXT	ENDS
PUBLIC	?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ	; CKanturuStateInfo::ResetTimeInfo
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_iCount$227939 = -8					; size = 4
_this$ = -4						; size = 4
?ResetAllData@CKanturuBattleStanby@@QAEXXZ PROC		; CKanturuBattleStanby::ResetAllData
; _this$ = ecx

; 44   : {

  00110	55		 push	 ebp
  00111	8b ec		 mov	 ebp, esp
  00113	83 ec 48	 sub	 esp, 72			; 00000048H
  00116	53		 push	 ebx
  00117	56		 push	 esi
  00118	57		 push	 edi
  00119	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 45   : 	for ( int iCount=0;iCount < KANTURU_STANBY_STATE_INFO ; iCount++ )

  0011c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iCount$227939[ebp], 0
  00123	eb 09		 jmp	 SHORT $LN3@ResetAllDa
$LN2@ResetAllDa:
  00125	8b 45 f8	 mov	 eax, DWORD PTR _iCount$227939[ebp]
  00128	83 c0 01	 add	 eax, 1
  0012b	89 45 f8	 mov	 DWORD PTR _iCount$227939[ebp], eax
$LN3@ResetAllDa:
  0012e	83 7d f8 04	 cmp	 DWORD PTR _iCount$227939[ebp], 4
  00132	7d 14		 jge	 SHORT $LN1@ResetAllDa

; 46   : 	{
; 47   : 		this->m_StateInfo[iCount].ResetTimeInfo();

  00134	8b 45 f8	 mov	 eax, DWORD PTR _iCount$227939[ebp]
  00137	6b c0 14	 imul	 eax, 20			; 00000014H
  0013a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0013d	8d 4c 01 10	 lea	 ecx, DWORD PTR [ecx+eax+16]
  00141	e8 00 00 00 00	 call	 ?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ ; CKanturuStateInfo::ResetTimeInfo

; 48   : 	}

  00146	eb dd		 jmp	 SHORT $LN2@ResetAllDa
$LN1@ResetAllDa:

; 49   : 
; 50   : 	this->m_StateInfoCount = 0;

  00148	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0014b	c7 40 60 00 00
	00 00		 mov	 DWORD PTR [eax+96], 0

; 51   : }

  00152	5f		 pop	 edi
  00153	5e		 pop	 esi
  00154	5b		 pop	 ebx
  00155	8b e5		 mov	 esp, ebp
  00157	5d		 pop	 ebp
  00158	c3		 ret	 0
?ResetAllData@CKanturuBattleStanby@@QAEXXZ ENDP		; CKanturuBattleStanby::ResetAllData
_TEXT	ENDS
PUBLIC	?SetValue@CKanturuStateInfo@@QAEXH@Z		; CKanturuStateInfo::SetValue
PUBLIC	?SetCondition@CKanturuStateInfo@@QAEXH@Z	; CKanturuStateInfo::SetCondition
PUBLIC	?SetStateInfo@CKanturuStateInfo@@QAEXH@Z	; CKanturuStateInfo::SetStateInfo
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturustateinfo.h
;	COMDAT ?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ PROC		; CKanturuStateInfo::ResetTimeInfo, COMDAT
; _this$ = ecx

; 21   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 22   : 		this->SetStateInfo(0);

  0000c	6a 00		 push	 0
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?SetStateInfo@CKanturuStateInfo@@QAEXH@Z ; CKanturuStateInfo::SetStateInfo

; 23   : 		this->SetCondition(0);

  00016	6a 00		 push	 0
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?SetCondition@CKanturuStateInfo@@QAEXH@Z ; CKanturuStateInfo::SetCondition

; 24   : 		this->SetValue(0);

  00020	6a 00		 push	 0
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?SetValue@CKanturuStateInfo@@QAEXH@Z ; CKanturuStateInfo::SetValue

; 25   : 	}

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ ENDP		; CKanturuStateInfo::ResetTimeInfo
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?SetStateInfo@CKanturuStateInfo@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iStateTimeInfo$ = 8					; size = 4
?SetStateInfo@CKanturuStateInfo@@QAEXH@Z PROC		; CKanturuStateInfo::SetStateInfo, COMDAT
; _this$ = ecx

; 29   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 30   : 		this->m_iState = iStateTimeInfo;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _iStateTimeInfo$[ebp]
  00012	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 31   : 	}

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetStateInfo@CKanturuStateInfo@@QAEXH@Z ENDP		; CKanturuStateInfo::SetStateInfo
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?SetCondition@CKanturuStateInfo@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iCondition$ = 8					; size = 4
?SetCondition@CKanturuStateInfo@@QAEXH@Z PROC		; CKanturuStateInfo::SetCondition, COMDAT
; _this$ = ecx

; 34   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 35   : 		this->m_iCondition = iCondition;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _iCondition$[ebp]
  00012	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 36   : 	}

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetCondition@CKanturuStateInfo@@QAEXH@Z ENDP		; CKanturuStateInfo::SetCondition
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?SetValue@CKanturuStateInfo@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iValue$ = 8						; size = 4
?SetValue@CKanturuStateInfo@@QAEXH@Z PROC		; CKanturuStateInfo::SetValue, COMDAT
; _this$ = ecx

; 45   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 46   : 		this->m_iValue = iValue;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _iValue$[ebp]
  00012	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 47   : 	}

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetValue@CKanturuStateInfo@@QAEXH@Z ENDP		; CKanturuStateInfo::SetValue
_TEXT	ENDS
PUBLIC	??_C@_0EC@LDIGKEIC@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Lo@ ; `string'
PUBLIC	??_C@_0CO@PJNGKGKN@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?$CFs?5f@ ; `string'
PUBLIC	??_C@_0DJ@KOHOKNIH@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Ex@ ; `string'
PUBLIC	??_C@_03JBJLGPFL@end?$AA@			; `string'
PUBLIC	??_C@_0CN@DONCNDEM@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Ca@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_0EA@OLPEHDLL@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Fi@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?LoadData@CKanturuBattleStanby@@QAEHPAD@Z	; CKanturuBattleStanby::LoadData
EXTRN	?LogAddC@@3P6AXEPADZZA:DWORD			; LogAddC
EXTRN	_fclose:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	_fopen:PROC
EXTRN	?MsgBox@@YAXPADZZ:PROC				; MsgBox
EXTRN	_strcmp:PROC
EXTRN	__ftol2_sse:PROC
_BSS	SEGMENT
_TokenString DB	064H DUP (?)
_TokenNumber DD	01H DUP (?)
_SMDFile DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0EC@LDIGKEIC@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Lo@
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturubattlestanby.cpp
CONST	SEGMENT
??_C@_0EC@LDIGKEIC@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Lo@ DB '['
	DB	' KANTURU ][ BattleStanby ] - Loading Exception Error (%s) Fil'
	DB	'e. ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@PJNGKGKN@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?$CFs?5f@
CONST	SEGMENT
??_C@_0CO@PJNGKGKN@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?$CFs?5f@ DB '['
	DB	' KANTURU ][ BattleStanby ] %s file is Loaded', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@KOHOKNIH@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Ex@
CONST	SEGMENT
??_C@_0DJ@KOHOKNIH@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Ex@ DB '['
	DB	' KANTURU ][ BattleStanby ] - Exceed Max State Time (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03JBJLGPFL@end?$AA@
CONST	SEGMENT
??_C@_03JBJLGPFL@end?$AA@ DB 'end', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@DONCNDEM@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Ca@
CONST	SEGMENT
??_C@_0CN@DONCNDEM@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Ca@ DB '['
	DB	' KANTURU ][ BattleStanby ] - Can''t Open %s ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@OLPEHDLL@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Fi@
CONST	SEGMENT
??_C@_0EA@OLPEHDLL@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Fi@ DB '['
	DB	' KANTURU ][ BattleStanby ] - File load error : File Name Erro'
	DB	'r', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
xdata$x	SEGMENT
__catchsym$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z$0
__unwindtable$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z$2
__ehfuncinfo$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z
	DD	01H
	DD	FLAT:__tryblocktable$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
_TEXT	SEGMENT
tv176 = -112						; size = 4
tv175 = -112						; size = 4
tv174 = -112						; size = 4
tv173 = -112						; size = 4
tv172 = -112						; size = 4
_iValue$227959 = -44					; size = 4
_iCondition$227958 = -40				; size = 4
_iState$227957 = -36					; size = 4
_iType$227956 = -32					; size = 4
_Token$227955 = -28					; size = 4
_dwLastError$227953 = -24				; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_lpszFileName$ = 8					; size = 4
?LoadData@CKanturuBattleStanby@@QAEHPAD@Z PROC		; CKanturuBattleStanby::LoadData
; _this$ = ecx

; 57   : {

  00160	55		 push	 ebp
  00161	8b ec		 mov	 ebp, esp
  00163	6a ff		 push	 -1
  00165	68 00 00 00 00	 push	 __ehhandler$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z
  0016a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00170	50		 push	 eax
  00171	51		 push	 ecx
  00172	83 ec 60	 sub	 esp, 96			; 00000060H
  00175	53		 push	 ebx
  00176	56		 push	 esi
  00177	57		 push	 edi
  00178	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0017d	33 c5		 xor	 eax, ebp
  0017f	50		 push	 eax
  00180	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00183	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00189	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0018c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 58   : 	this->m_bFileDataLoad = FALSE;

  0018f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00192	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 59   : 
; 60   : 	if ( !lpszFileName || !strcmp(lpszFileName, ""))

  00199	83 7d 08 00	 cmp	 DWORD PTR _lpszFileName$[ebp], 0
  0019d	74 15		 je	 SHORT $LN15@LoadData
  0019f	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  001a4	8b 45 08	 mov	 eax, DWORD PTR _lpszFileName$[ebp]
  001a7	50		 push	 eax
  001a8	e8 00 00 00 00	 call	 _strcmp
  001ad	83 c4 08	 add	 esp, 8
  001b0	85 c0		 test	 eax, eax
  001b2	75 14		 jne	 SHORT $LN16@LoadData
$LN15@LoadData:

; 61   : 	{
; 62   : 		MsgBox("[ KANTURU ][ BattleStanby ] - File load error : File Name Error");

  001b4	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@OLPEHDLL@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Fi@
  001b9	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  001be	83 c4 04	 add	 esp, 4

; 63   : 		return FALSE;

  001c1	33 c0		 xor	 eax, eax
  001c3	e9 5c 02 00 00	 jmp	 $LN17@LoadData
$LN16@LoadData:

; 64   : 	}
; 65   : 
; 66   : 	try
; 67   : 	{

  001c8	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 68   : 		SMDFile = fopen(lpszFileName, "r");

  001cf	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  001d4	8b 45 08	 mov	 eax, DWORD PTR _lpszFileName$[ebp]
  001d7	50		 push	 eax
  001d8	e8 00 00 00 00	 call	 _fopen
  001dd	83 c4 08	 add	 esp, 8
  001e0	a3 00 00 00 00	 mov	 DWORD PTR _SMDFile, eax

; 69   : 
; 70   : 		if ( SMDFile == NULL )

  001e5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _SMDFile, 0
  001ec	75 21		 jne	 SHORT $LN13@LoadData

; 71   : 		{
; 72   : 			DWORD dwLastError = GetLastError();

  001ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  001f4	89 45 e8	 mov	 DWORD PTR _dwLastError$227953[ebp], eax

; 73   : 
; 74   : 			MsgBox("[ KANTURU ][ BattleStanby ] - Can't Open %s ",
; 75   : 				lpszFileName);

  001f7	8b 45 08	 mov	 eax, DWORD PTR _lpszFileName$[ebp]
  001fa	50		 push	 eax
  001fb	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@DONCNDEM@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Ca@
  00200	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00205	83 c4 08	 add	 esp, 8

; 76   : 
; 77   : 			return FALSE;

  00208	33 c0		 xor	 eax, eax
  0020a	e9 15 02 00 00	 jmp	 $LN17@LoadData
$LN13@LoadData:

; 78   : 		}
; 79   : 
; 80   : 		SMDToken Token;
; 81   : 		this->ResetAllData();

  0020f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00212	e8 00 00 00 00	 call	 ?ResetAllData@CKanturuBattleStanby@@QAEXXZ ; CKanturuBattleStanby::ResetAllData

; 82   : 
; 83   : 		int iType = -1;

  00217	c7 45 e0 ff ff
	ff ff		 mov	 DWORD PTR _iType$227956[ebp], -1

; 84   : 		int iState = 0;

  0021e	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _iState$227957[ebp], 0

; 85   : 		int iCondition = 0;

  00225	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _iCondition$227958[ebp], 0

; 86   : 		int iValue = 0;

  0022c	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _iValue$227959[ebp], 0
$LN12@LoadData:

; 87   : 
; 88   : 		while ( true )

  00233	b8 01 00 00 00	 mov	 eax, 1
  00238	85 c0		 test	 eax, eax
  0023a	0f 84 8b 01 00
	00		 je	 $LN11@LoadData

; 89   : 		{
; 90   : 			Token = GetToken();

  00240	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00245	89 45 90	 mov	 DWORD PTR tv172[ebp], eax
  00248	8b 45 90	 mov	 eax, DWORD PTR tv172[ebp]
  0024b	89 45 e4	 mov	 DWORD PTR _Token$227955[ebp], eax

; 91   : 
; 92   : 			if ( Token == END )

  0024e	83 7d e4 02	 cmp	 DWORD PTR _Token$227955[ebp], 2
  00252	75 05		 jne	 SHORT $LN10@LoadData

; 93   : 			{
; 94   : 				break;

  00254	e9 72 01 00 00	 jmp	 $LN11@LoadData
$LN10@LoadData:

; 95   : 			}
; 96   : 
; 97   : 			iType = (int)TokenNumber;

  00259	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0025f	e8 00 00 00 00	 call	 __ftol2_sse
  00264	89 45 e0	 mov	 DWORD PTR _iType$227956[ebp], eax
$LN9@LoadData:

; 98   : 
; 99   : 			while ( true )

  00267	b8 01 00 00 00	 mov	 eax, 1
  0026c	85 c0		 test	 eax, eax
  0026e	0f 84 52 01 00
	00		 je	 $LN8@LoadData

; 100  : 			{
; 101  : 				if ( iType == 1 )

  00274	83 7d e0 01	 cmp	 DWORD PTR _iType$227956[ebp], 1
  00278	0f 85 1d 01 00
	00		 jne	 $LN7@LoadData

; 102  : 				{
; 103  : 					iState = 0;

  0027e	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _iState$227957[ebp], 0

; 104  : 					iCondition = 0;

  00285	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _iCondition$227958[ebp], 0

; 105  : 					iValue = 0;

  0028c	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _iValue$227959[ebp], 0

; 106  : 
; 107  : 					Token = GetToken();

  00293	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00298	89 45 90	 mov	 DWORD PTR tv173[ebp], eax
  0029b	8b 45 90	 mov	 eax, DWORD PTR tv173[ebp]
  0029e	89 45 e4	 mov	 DWORD PTR _Token$227955[ebp], eax

; 108  : 
; 109  : 					if ( !strcmp("end", TokenString))

  002a1	68 00 00 00 00	 push	 OFFSET _TokenString
  002a6	68 00 00 00 00	 push	 OFFSET ??_C@_03JBJLGPFL@end?$AA@
  002ab	e8 00 00 00 00	 call	 _strcmp
  002b0	83 c4 08	 add	 esp, 8
  002b3	85 c0		 test	 eax, eax
  002b5	75 05		 jne	 SHORT $LN6@LoadData

; 110  : 					{
; 111  : 						break;

  002b7	e9 0a 01 00 00	 jmp	 $LN8@LoadData
$LN6@LoadData:

; 112  : 					}
; 113  : 
; 114  : 					iState = (int)TokenNumber;

  002bc	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  002c2	e8 00 00 00 00	 call	 __ftol2_sse
  002c7	89 45 dc	 mov	 DWORD PTR _iState$227957[ebp], eax

; 115  : 
; 116  : 					Token = GetToken();

  002ca	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  002cf	89 45 90	 mov	 DWORD PTR tv174[ebp], eax
  002d2	8b 45 90	 mov	 eax, DWORD PTR tv174[ebp]
  002d5	89 45 e4	 mov	 DWORD PTR _Token$227955[ebp], eax

; 117  : 					iCondition = (int)TokenNumber;

  002d8	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  002de	e8 00 00 00 00	 call	 __ftol2_sse
  002e3	89 45 d8	 mov	 DWORD PTR _iCondition$227958[ebp], eax

; 118  : 
; 119  : 					Token = GetToken();

  002e6	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  002eb	89 45 90	 mov	 DWORD PTR tv175[ebp], eax
  002ee	8b 45 90	 mov	 eax, DWORD PTR tv175[ebp]
  002f1	89 45 e4	 mov	 DWORD PTR _Token$227955[ebp], eax

; 120  : 					iValue = (int)TokenNumber;

  002f4	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  002fa	e8 00 00 00 00	 call	 __ftol2_sse
  002ff	89 45 d4	 mov	 DWORD PTR _iValue$227959[ebp], eax

; 121  : 
; 122  : 					if ( this->m_StateInfoCount < 0 || this->m_StateInfoCount >= KANTURU_STANBY_STATE_INFO )

  00302	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00305	83 78 60 00	 cmp	 DWORD PTR [eax+96], 0
  00309	7c 09		 jl	 SHORT $LN4@LoadData
  0030b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0030e	83 78 60 04	 cmp	 DWORD PTR [eax+96], 4
  00312	7c 19		 jl	 SHORT $LN5@LoadData
$LN4@LoadData:

; 123  : 					{
; 124  : 						MsgBox("[ KANTURU ][ BattleStanby ] - Exceed Max State Time (%d)",
; 125  : 							this->m_StateInfoCount);

  00314	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00317	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  0031a	51		 push	 ecx
  0031b	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@KOHOKNIH@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Ex@
  00320	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00325	83 c4 08	 add	 esp, 8

; 126  : 
; 127  : 						break;

  00328	e9 99 00 00 00	 jmp	 $LN8@LoadData
$LN5@LoadData:

; 128  : 					}
; 129  : 
; 130  : 					this->m_StateInfo[this->m_StateInfoCount].SetStateInfo(iState);

  0032d	8b 45 dc	 mov	 eax, DWORD PTR _iState$227957[ebp]
  00330	50		 push	 eax
  00331	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00334	8b 51 60	 mov	 edx, DWORD PTR [ecx+96]
  00337	6b d2 14	 imul	 edx, 20			; 00000014H
  0033a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0033d	8d 4c 10 10	 lea	 ecx, DWORD PTR [eax+edx+16]
  00341	e8 00 00 00 00	 call	 ?SetStateInfo@CKanturuStateInfo@@QAEXH@Z ; CKanturuStateInfo::SetStateInfo

; 131  : 					this->m_StateInfo[this->m_StateInfoCount].SetCondition(iCondition);

  00346	8b 45 d8	 mov	 eax, DWORD PTR _iCondition$227958[ebp]
  00349	50		 push	 eax
  0034a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0034d	8b 51 60	 mov	 edx, DWORD PTR [ecx+96]
  00350	6b d2 14	 imul	 edx, 20			; 00000014H
  00353	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00356	8d 4c 10 10	 lea	 ecx, DWORD PTR [eax+edx+16]
  0035a	e8 00 00 00 00	 call	 ?SetCondition@CKanturuStateInfo@@QAEXH@Z ; CKanturuStateInfo::SetCondition

; 132  : 
; 133  : 					if ( iCondition == 1 )

  0035f	83 7d d8 01	 cmp	 DWORD PTR _iCondition$227958[ebp], 1
  00363	75 0c		 jne	 SHORT $LN3@LoadData

; 134  : 					{
; 135  : 						iValue *= 1000;

  00365	8b 45 d4	 mov	 eax, DWORD PTR _iValue$227959[ebp]
  00368	69 c0 e8 03 00
	00		 imul	 eax, 1000		; 000003e8H
  0036e	89 45 d4	 mov	 DWORD PTR _iValue$227959[ebp], eax
$LN3@LoadData:

; 136  : 					}
; 137  : 
; 138  : 					this->m_StateInfo[this->m_StateInfoCount].SetValue(iValue);

  00371	8b 45 d4	 mov	 eax, DWORD PTR _iValue$227959[ebp]
  00374	50		 push	 eax
  00375	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00378	8b 51 60	 mov	 edx, DWORD PTR [ecx+96]
  0037b	6b d2 14	 imul	 edx, 20			; 00000014H
  0037e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00381	8d 4c 10 10	 lea	 ecx, DWORD PTR [eax+edx+16]
  00385	e8 00 00 00 00	 call	 ?SetValue@CKanturuStateInfo@@QAEXH@Z ; CKanturuStateInfo::SetValue

; 139  : 					this->m_StateInfoCount++;

  0038a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0038d	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  00390	83 c1 01	 add	 ecx, 1
  00393	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00396	89 4a 60	 mov	 DWORD PTR [edx+96], ecx

; 140  : 				}
; 141  : 				else

  00399	eb 26		 jmp	 SHORT $LN1@LoadData
$LN7@LoadData:

; 142  : 				{
; 143  : 					Token = GetToken();

  0039b	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  003a0	89 45 90	 mov	 DWORD PTR tv176[ebp], eax
  003a3	8b 45 90	 mov	 eax, DWORD PTR tv176[ebp]
  003a6	89 45 e4	 mov	 DWORD PTR _Token$227955[ebp], eax

; 144  : 
; 145  : 					if ( !strcmp("end", TokenString))

  003a9	68 00 00 00 00	 push	 OFFSET _TokenString
  003ae	68 00 00 00 00	 push	 OFFSET ??_C@_03JBJLGPFL@end?$AA@
  003b3	e8 00 00 00 00	 call	 _strcmp
  003b8	83 c4 08	 add	 esp, 8
  003bb	85 c0		 test	 eax, eax
  003bd	75 02		 jne	 SHORT $LN1@LoadData

; 146  : 					{
; 147  : 						break;

  003bf	eb 05		 jmp	 SHORT $LN8@LoadData
$LN1@LoadData:

; 148  : 					}
; 149  : 				}
; 150  : 
; 151  : 			}	// while

  003c1	e9 a1 fe ff ff	 jmp	 $LN9@LoadData
$LN8@LoadData:

; 152  : 		}	// while

  003c6	e9 68 fe ff ff	 jmp	 $LN12@LoadData
$LN11@LoadData:

; 153  : 
; 154  : 		fclose(SMDFile);

  003cb	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  003d0	50		 push	 eax
  003d1	e8 00 00 00 00	 call	 _fclose
  003d6	83 c4 04	 add	 esp, 4

; 155  : 
; 156  : 		LogAddC(2, "[ KANTURU ][ BattleStanby ] %s file is Loaded",
; 157  : 			lpszFileName);

  003d9	8b 45 08	 mov	 eax, DWORD PTR _lpszFileName$[ebp]
  003dc	50		 push	 eax
  003dd	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@PJNGKGKN@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?$CFs?5f@
  003e2	6a 02		 push	 2
  003e4	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  003ea	83 c4 0c	 add	 esp, 12			; 0000000cH

; 158  : 
; 159  : 		this->m_bFileDataLoad = TRUE;

  003ed	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  003f0	c7 40 0c 01 00
	00 00		 mov	 DWORD PTR [eax+12], 1

; 160  : 	}	// __try

  003f7	eb 1e		 jmp	 SHORT $LN19@LoadData
__catch$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z$0:

; 161  : 	catch(...)
; 162  : 	{
; 163  : 		MsgBox("[ KANTURU ][ BattleStanby ] - Loading Exception Error (%s) File. ", lpszFileName);

  003f9	8b 45 08	 mov	 eax, DWORD PTR _lpszFileName$[ebp]
  003fc	50		 push	 eax
  003fd	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@LDIGKEIC@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Lo@
  00402	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00407	83 c4 08	 add	 esp, 8

; 164  : 	}

  0040a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00411	b8 00 00 00 00	 mov	 eax, $LN22@LoadData
  00416	c3		 ret	 0
$LN19@LoadData:
  00417	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
$LN22@LoadData:

; 165  : 
; 166  : 	return this->m_bFileDataLoad;

  0041e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00421	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
$LN17@LoadData:

; 167  : }

  00424	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00427	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0042e	59		 pop	 ecx
  0042f	5f		 pop	 edi
  00430	5e		 pop	 esi
  00431	5b		 pop	 ebx
  00432	8b e5		 mov	 esp, ebp
  00434	5d		 pop	 ebp
  00435	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z:
  00031	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00035	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00038	8b 4a 8c	 mov	 ecx, DWORD PTR [edx-116]
  0003b	33 c8		 xor	 ecx, eax
  0003d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00042	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z
  00047	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadData@CKanturuBattleStanby@@QAEHPAD@Z ENDP		; CKanturuBattleStanby::LoadData
PUBLIC	__$ArrayPad$
EXTRN	_isalnum:PROC
EXTRN	_isalpha:PROC
EXTRN	_atof:PROC
EXTRN	_isdigit:PROC
EXTRN	_getc:PROC
EXTRN	_ungetc:PROC
EXTRN	_isspace:PROC
EXTRN	_fgetc:PROC
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_CurrentToken DD 01H DUP (?)
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\include\readscript.h
_BSS	ENDS
_TEXT	SEGMENT
tv90 = -180						; size = 4
_TempString$ = -112					; size = 100
_p$ = -12						; size = 4
_ch$ = -5						; size = 1
__$ArrayPad$ = -4					; size = 4
?GetToken@@YA?AW4SMDToken@@XZ PROC			; GetToken

; 24   : {

  00440	55		 push	 ebp
  00441	8b ec		 mov	 ebp, esp
  00443	81 ec b4 00 00
	00		 sub	 esp, 180		; 000000b4H
  00449	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0044e	33 c5		 xor	 eax, ebp
  00450	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00453	53		 push	 ebx
  00454	56		 push	 esi
  00455	57		 push	 edi

; 25   : 	char ch;
; 26   : 	char* p;
; 27   : 	char TempString[100];
; 28   : 
; 29   : 	TokenString[0]=0;

  00456	c6 05 00 00 00
	00 00		 mov	 BYTE PTR _TokenString, 0
$LN31@GetToken:

; 30   : 
; 31   : 	do
; 32   : 	{
; 33   : 		if ((ch=fgetc(SMDFile)) == -1)

  0045d	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00462	50		 push	 eax
  00463	e8 00 00 00 00	 call	 _fgetc
  00468	83 c4 04	 add	 esp, 4
  0046b	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  0046e	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00472	83 f9 ff	 cmp	 ecx, -1
  00475	75 0c		 jne	 SHORT $LN28@GetToken

; 34   : 		{
; 35   : 			return END;	// End of FILE (EOF)

  00477	b8 02 00 00 00	 mov	 eax, 2
  0047c	e9 f7 02 00 00	 jmp	 $LN32@GetToken

; 36   : 		}
; 37   : 		else

  00481	eb 5b		 jmp	 SHORT $LN22@GetToken
$LN28@GetToken:

; 38   : 		{	
; 39   : 			if (ch=='/')		// this is /

  00483	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00487	83 f8 2f	 cmp	 eax, 47			; 0000002fH
  0048a	75 52		 jne	 SHORT $LN22@GetToken

; 40   : 			{
; 41   : 				if((ch=fgetc(SMDFile)) == '/')

  0048c	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00491	50		 push	 eax
  00492	e8 00 00 00 00	 call	 _fgetc
  00497	83 c4 04	 add	 esp, 4
  0049a	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  0049d	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  004a1	83 f9 2f	 cmp	 ecx, 47			; 0000002fH
  004a4	75 38		 jne	 SHORT $LN22@GetToken
$LN24@GetToken:

; 42   : 				{
; 43   : 					while ((ch != '\n') && (ch != -1))	// End of Line (EOL)

  004a6	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  004aa	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  004ad	74 1c		 je	 SHORT $LN23@GetToken
  004af	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  004b3	83 f8 ff	 cmp	 eax, -1
  004b6	74 13		 je	 SHORT $LN23@GetToken

; 44   : 					{
; 45   : 						ch=fgetc(SMDFile);

  004b8	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  004bd	50		 push	 eax
  004be	e8 00 00 00 00	 call	 _fgetc
  004c3	83 c4 04	 add	 esp, 4
  004c6	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al

; 46   : 					}

  004c9	eb db		 jmp	 SHORT $LN24@GetToken
$LN23@GetToken:

; 47   : 	
; 48   : 					if (ch == -1)

  004cb	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  004cf	83 f8 ff	 cmp	 eax, -1
  004d2	75 0a		 jne	 SHORT $LN22@GetToken

; 49   : 					{
; 50   : 						return END;	// End of FILE

  004d4	b8 02 00 00 00	 mov	 eax, 2
  004d9	e9 9a 02 00 00	 jmp	 $LN32@GetToken
$LN22@GetToken:

; 51   : 					}
; 52   : 				}
; 53   : 			}
; 54   : 		}
; 55   : 	}
; 56   : 	while (isspace(ch) != 0);

  004de	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  004e2	50		 push	 eax
  004e3	e8 00 00 00 00	 call	 _isspace
  004e8	83 c4 04	 add	 esp, 4
  004eb	85 c0		 test	 eax, eax
  004ed	0f 85 6a ff ff
	ff		 jne	 $LN31@GetToken

; 57   : 
; 58   : 	
; 59   : 	switch(ch)

  004f3	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  004f7	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv90[ebp], eax
  004fd	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR tv90[ebp]
  00503	83 e9 22	 sub	 ecx, 34			; 00000022H
  00506	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv90[ebp], ecx
  0050c	83 bd 4c ff ff
	ff 5b		 cmp	 DWORD PTR tv90[ebp], 91	; 0000005bH
  00513	0f 87 a3 01 00
	00		 ja	 $LN6@GetToken
  00519	8b 95 4c ff ff
	ff		 mov	 edx, DWORD PTR tv90[ebp]
  0051f	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN34@GetToken[edx]
  00526	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN35@GetToken[eax*4]
$LN19@GetToken:

; 60   : 	{
; 61   : 
; 62   : 	case 0x23:	// #
; 63   : 		return CurrentToken=COMMAND;

  0052d	c7 05 00 00 00
	00 23 00 00 00	 mov	 DWORD PTR _CurrentToken, 35 ; 00000023H
  00537	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  0053c	e9 37 02 00 00	 jmp	 $LN32@GetToken

; 64   : 		break;

  00541	e9 30 02 00 00	 jmp	 $LN20@GetToken
$LN18@GetToken:

; 65   : 	
; 66   : 	case 0x3B:	// ;
; 67   : 		return CurrentToken=SEMICOLON;

  00546	c7 05 00 00 00
	00 3b 00 00 00	 mov	 DWORD PTR _CurrentToken, 59 ; 0000003bH
  00550	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00555	e9 1e 02 00 00	 jmp	 $LN32@GetToken

; 68   : 		break;

  0055a	e9 17 02 00 00	 jmp	 $LN20@GetToken
$LN17@GetToken:

; 69   : 	
; 70   : 	case 0x2C:	// ,
; 71   : 
; 72   : 		return CurrentToken=COMMA;

  0055f	c7 05 00 00 00
	00 2c 00 00 00	 mov	 DWORD PTR _CurrentToken, 44 ; 0000002cH
  00569	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  0056e	e9 05 02 00 00	 jmp	 $LN32@GetToken

; 73   : 		break;

  00573	e9 fe 01 00 00	 jmp	 $LN20@GetToken
$LN16@GetToken:

; 74   : 	
; 75   : 	case 0x7B:	// {
; 76   : 		return CurrentToken = LP;

  00578	c7 05 00 00 00
	00 7b 00 00 00	 mov	 DWORD PTR _CurrentToken, 123 ; 0000007bH
  00582	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00587	e9 ec 01 00 00	 jmp	 $LN32@GetToken

; 77   : 		break;

  0058c	e9 e5 01 00 00	 jmp	 $LN20@GetToken
$LN15@GetToken:

; 78   : 
; 79   : 	case 0x7D:	// }
; 80   : 		return CurrentToken = RP;

  00591	c7 05 00 00 00
	00 7d 00 00 00	 mov	 DWORD PTR _CurrentToken, 125 ; 0000007dH
  0059b	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  005a0	e9 d3 01 00 00	 jmp	 $LN32@GetToken

; 81   : 		break;

  005a5	e9 cc 01 00 00	 jmp	 $LN20@GetToken
$LN14@GetToken:

; 82   : 	// Nice Index Table :)	by Deathway
; 83   : 	// Numbers Case
; 84   : 	case 0x2D:	//-
; 85   : 	case 0x2E:	//.
; 86   : 	case '0':	//0
; 87   : 	case '1':	//1
; 88   : 	case '2':	//2
; 89   : 	case '3':	//3
; 90   : 	case '4':	//4		
; 91   : 	case '5':	//5
; 92   : 	case '6':	//6
; 93   : 	case '7':	//7
; 94   : 	case '8':	//8
; 95   : 	case '9':	//9
; 96   : 		ungetc(ch, SMDFile);

  005aa	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  005af	50		 push	 eax
  005b0	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  005b4	51		 push	 ecx
  005b5	e8 00 00 00 00	 call	 _ungetc
  005ba	83 c4 08	 add	 esp, 8

; 97   : 		p = TempString;

  005bd	8d 45 90	 lea	 eax, DWORD PTR _TempString$[ebp]
  005c0	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax
$LN13@GetToken:

; 98   : 		
; 99   : 		while (((ch=getc(SMDFile)) != -1) && ((ch == 0x2E) || (isdigit(ch) != 0) || (ch == 0x2D)))  // 2e '.'  2D '-'

  005c3	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  005c8	50		 push	 eax
  005c9	e8 00 00 00 00	 call	 _getc
  005ce	83 c4 04	 add	 esp, 4
  005d1	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  005d4	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  005d8	83 f9 ff	 cmp	 ecx, -1
  005db	74 36		 je	 SHORT $LN12@GetToken
  005dd	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  005e1	83 f8 2e	 cmp	 eax, 46			; 0000002eH
  005e4	74 1a		 je	 SHORT $LN11@GetToken
  005e6	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  005ea	50		 push	 eax
  005eb	e8 00 00 00 00	 call	 _isdigit
  005f0	83 c4 04	 add	 esp, 4
  005f3	85 c0		 test	 eax, eax
  005f5	75 09		 jne	 SHORT $LN11@GetToken
  005f7	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  005fb	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  005fe	75 13		 jne	 SHORT $LN12@GetToken
$LN11@GetToken:

; 100  : 		{
; 101  : 			*p = ch;	// Construct a String

  00600	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00603	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  00606	88 08		 mov	 BYTE PTR [eax], cl

; 102  : 			p++;

  00608	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  0060b	83 c0 01	 add	 eax, 1
  0060e	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 103  : 		}		

  00611	eb b0		 jmp	 SHORT $LN13@GetToken
$LN12@GetToken:

; 104  : 		*p = 0;

  00613	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00616	c6 00 00	 mov	 BYTE PTR [eax], 0

; 105  : 		TokenNumber = atof( TempString);	// Select the first Byte as Main ID

  00619	8d 45 90	 lea	 eax, DWORD PTR _TempString$[ebp]
  0061c	50		 push	 eax
  0061d	e8 00 00 00 00	 call	 _atof
  00622	83 c4 04	 add	 esp, 4
  00625	d9 1d 00 00 00
	00		 fstp	 DWORD PTR _TokenNumber

; 106  : 		return CurrentToken  = NUMBER ;

  0062b	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _CurrentToken, 1
  00635	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  0063a	e9 39 01 00 00	 jmp	 $LN32@GetToken

; 107  : 		break;

  0063f	e9 32 01 00 00	 jmp	 $LN20@GetToken
$LN10@GetToken:

; 108  : 
; 109  : 	case '\"':	// "	String Case
; 110  : 		p=&TokenString[0];

  00644	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], OFFSET _TokenString
$LN9@GetToken:

; 111  : 		
; 112  : 		while (((ch=getc(SMDFile)) != -1 ) && (ch != 0x22))	// nice

  0064b	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00650	50		 push	 eax
  00651	e8 00 00 00 00	 call	 _getc
  00656	83 c4 04	 add	 esp, 4
  00659	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  0065c	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00660	83 f9 ff	 cmp	 ecx, -1
  00663	74 1c		 je	 SHORT $LN8@GetToken
  00665	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00669	83 f8 22	 cmp	 eax, 34			; 00000022H
  0066c	74 13		 je	 SHORT $LN8@GetToken

; 113  : 		{
; 114  : 			*p = ch;

  0066e	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00671	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  00674	88 08		 mov	 BYTE PTR [eax], cl

; 115  : 			p++;

  00676	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00679	83 c0 01	 add	 eax, 1
  0067c	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 116  : 		}

  0067f	eb ca		 jmp	 SHORT $LN9@GetToken
$LN8@GetToken:

; 117  : 		if (ch != 0x22 )

  00681	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00685	83 f8 22	 cmp	 eax, 34			; 00000022H
  00688	74 13		 je	 SHORT $LN7@GetToken

; 118  : 		{
; 119  : 			ungetc(ch, SMDFile);

  0068a	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0068f	50		 push	 eax
  00690	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00694	51		 push	 ecx
  00695	e8 00 00 00 00	 call	 _ungetc
  0069a	83 c4 08	 add	 esp, 8
$LN7@GetToken:

; 120  : 		}
; 121  : 		*p = 0;

  0069d	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  006a0	c6 00 00	 mov	 BYTE PTR [eax], 0

; 122  : 		return CurrentToken = NAME;

  006a3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _CurrentToken, 0
  006ad	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  006b2	e9 c1 00 00 00	 jmp	 $LN32@GetToken

; 123  : 		break;

  006b7	e9 ba 00 00 00	 jmp	 $LN20@GetToken
$LN6@GetToken:

; 124  : 
; 125  : 	default:	// Others
; 126  : 		if (isalpha(ch))

  006bc	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  006c0	50		 push	 eax
  006c1	e8 00 00 00 00	 call	 _isalpha
  006c6	83 c4 04	 add	 esp, 4
  006c9	85 c0		 test	 eax, eax
  006cb	0f 84 94 00 00
	00		 je	 $LN5@GetToken

; 127  : 		{
; 128  : 			p=&TokenString[0];

  006d1	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], OFFSET _TokenString

; 129  : 			*p=ch;

  006d8	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  006db	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  006de	88 08		 mov	 BYTE PTR [eax], cl

; 130  : 			p++;

  006e0	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  006e3	83 c0 01	 add	 eax, 1
  006e6	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax
$LN4@GetToken:

; 131  : 
; 132  : 			while ( ((ch=getc(SMDFile)) != -1) && ( (ch == 0x2E) || (ch == 0x5F) || (isalnum(ch) != 0) ) )

  006e9	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  006ee	50		 push	 eax
  006ef	e8 00 00 00 00	 call	 _getc
  006f4	83 c4 04	 add	 esp, 4
  006f7	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  006fa	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  006fe	83 f9 ff	 cmp	 ecx, -1
  00701	74 36		 je	 SHORT $LN3@GetToken
  00703	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00707	83 f8 2e	 cmp	 eax, 46			; 0000002eH
  0070a	74 1a		 je	 SHORT $LN2@GetToken
  0070c	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00710	83 f8 5f	 cmp	 eax, 95			; 0000005fH
  00713	74 11		 je	 SHORT $LN2@GetToken
  00715	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00719	50		 push	 eax
  0071a	e8 00 00 00 00	 call	 _isalnum
  0071f	83 c4 04	 add	 esp, 4
  00722	85 c0		 test	 eax, eax
  00724	74 13		 je	 SHORT $LN3@GetToken
$LN2@GetToken:

; 133  : 			{
; 134  : 				*p=ch;

  00726	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00729	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  0072c	88 08		 mov	 BYTE PTR [eax], cl

; 135  : 				p++;

  0072e	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00731	83 c0 01	 add	 eax, 1
  00734	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 136  : 				
; 137  : 			}

  00737	eb b0		 jmp	 SHORT $LN4@GetToken
$LN3@GetToken:

; 138  : 
; 139  : 			ungetc(ch, SMDFile);

  00739	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0073e	50		 push	 eax
  0073f	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00743	51		 push	 ecx
  00744	e8 00 00 00 00	 call	 _ungetc
  00749	83 c4 08	 add	 esp, 8

; 140  : 			*p=0;

  0074c	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  0074f	c6 00 00	 mov	 BYTE PTR [eax], 0

; 141  : 			CurrentToken=NAME;

  00752	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _CurrentToken, 0

; 142  : 			return CurrentToken;

  0075c	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00761	eb 15		 jmp	 SHORT $LN32@GetToken

; 143  : 		}
; 144  : 		else

  00763	eb 11		 jmp	 SHORT $LN1@GetToken
$LN5@GetToken:

; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'

  00765	c7 05 00 00 00
	00 3c 00 00 00	 mov	 DWORD PTR _CurrentToken, 60 ; 0000003cH
  0076f	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00774	eb 02		 jmp	 SHORT $LN32@GetToken
$LN1@GetToken:
$LN20@GetToken:

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;

  00776	33 c0		 xor	 eax, eax
$LN32@GetToken:

; 153  : }

  00778	5f		 pop	 edi
  00779	5e		 pop	 esi
  0077a	5b		 pop	 ebx
  0077b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0077e	33 cd		 xor	 ecx, ebp
  00780	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00785	8b e5		 mov	 esp, ebp
  00787	5d		 pop	 ebp
  00788	c3		 ret	 0
  00789	8d 49 00	 npad	 3
$LN35@GetToken:
  0078c	00 00 00 00	 DD	 $LN10@GetToken
  00790	00 00 00 00	 DD	 $LN19@GetToken
  00794	00 00 00 00	 DD	 $LN17@GetToken
  00798	00 00 00 00	 DD	 $LN14@GetToken
  0079c	00 00 00 00	 DD	 $LN18@GetToken
  007a0	00 00 00 00	 DD	 $LN16@GetToken
  007a4	00 00 00 00	 DD	 $LN15@GetToken
  007a8	00 00 00 00	 DD	 $LN6@GetToken
$LN34@GetToken:
  007ac	00		 DB	 0
  007ad	01		 DB	 1
  007ae	07		 DB	 7
  007af	07		 DB	 7
  007b0	07		 DB	 7
  007b1	07		 DB	 7
  007b2	07		 DB	 7
  007b3	07		 DB	 7
  007b4	07		 DB	 7
  007b5	07		 DB	 7
  007b6	02		 DB	 2
  007b7	03		 DB	 3
  007b8	03		 DB	 3
  007b9	07		 DB	 7
  007ba	03		 DB	 3
  007bb	03		 DB	 3
  007bc	03		 DB	 3
  007bd	03		 DB	 3
  007be	03		 DB	 3
  007bf	03		 DB	 3
  007c0	03		 DB	 3
  007c1	03		 DB	 3
  007c2	03		 DB	 3
  007c3	03		 DB	 3
  007c4	07		 DB	 7
  007c5	04		 DB	 4
  007c6	07		 DB	 7
  007c7	07		 DB	 7
  007c8	07		 DB	 7
  007c9	07		 DB	 7
  007ca	07		 DB	 7
  007cb	07		 DB	 7
  007cc	07		 DB	 7
  007cd	07		 DB	 7
  007ce	07		 DB	 7
  007cf	07		 DB	 7
  007d0	07		 DB	 7
  007d1	07		 DB	 7
  007d2	07		 DB	 7
  007d3	07		 DB	 7
  007d4	07		 DB	 7
  007d5	07		 DB	 7
  007d6	07		 DB	 7
  007d7	07		 DB	 7
  007d8	07		 DB	 7
  007d9	07		 DB	 7
  007da	07		 DB	 7
  007db	07		 DB	 7
  007dc	07		 DB	 7
  007dd	07		 DB	 7
  007de	07		 DB	 7
  007df	07		 DB	 7
  007e0	07		 DB	 7
  007e1	07		 DB	 7
  007e2	07		 DB	 7
  007e3	07		 DB	 7
  007e4	07		 DB	 7
  007e5	07		 DB	 7
  007e6	07		 DB	 7
  007e7	07		 DB	 7
  007e8	07		 DB	 7
  007e9	07		 DB	 7
  007ea	07		 DB	 7
  007eb	07		 DB	 7
  007ec	07		 DB	 7
  007ed	07		 DB	 7
  007ee	07		 DB	 7
  007ef	07		 DB	 7
  007f0	07		 DB	 7
  007f1	07		 DB	 7
  007f2	07		 DB	 7
  007f3	07		 DB	 7
  007f4	07		 DB	 7
  007f5	07		 DB	 7
  007f6	07		 DB	 7
  007f7	07		 DB	 7
  007f8	07		 DB	 7
  007f9	07		 DB	 7
  007fa	07		 DB	 7
  007fb	07		 DB	 7
  007fc	07		 DB	 7
  007fd	07		 DB	 7
  007fe	07		 DB	 7
  007ff	07		 DB	 7
  00800	07		 DB	 7
  00801	07		 DB	 7
  00802	07		 DB	 7
  00803	07		 DB	 7
  00804	07		 DB	 7
  00805	05		 DB	 5
  00806	07		 DB	 7
  00807	06		 DB	 6
?GetToken@@YA?AW4SMDToken@@XZ ENDP			; GetToken
_TEXT	ENDS
PUBLIC	?ProcState_END@CKanturuBattleStanby@@QAEXXZ	; CKanturuBattleStanby::ProcState_END
PUBLIC	?ProcState_NOTIFY@CKanturuBattleStanby@@QAEXXZ	; CKanturuBattleStanby::ProcState_NOTIFY
PUBLIC	?ProcState_START@CKanturuBattleStanby@@QAEXXZ	; CKanturuBattleStanby::ProcState_START
PUBLIC	?ProcState_NONE@CKanturuBattleStanby@@QAEXXZ	; CKanturuBattleStanby::ProcState_NONE
PUBLIC	?CheckStateTime@CKanturuBattleStanby@@QAEXXZ	; CKanturuBattleStanby::CheckStateTime
PUBLIC	?Run@CKanturuBattleStanby@@QAEXXZ		; CKanturuBattleStanby::Run
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturubattlestanby.cpp
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?Run@CKanturuBattleStanby@@QAEXXZ PROC			; CKanturuBattleStanby::Run
; _this$ = ecx

; 172  : {

  00810	55		 push	 ebp
  00811	8b ec		 mov	 ebp, esp
  00813	83 ec 48	 sub	 esp, 72			; 00000048H
  00816	53		 push	 ebx
  00817	56		 push	 esi
  00818	57		 push	 edi
  00819	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 173  : 	this->CheckStateTime();

  0081c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0081f	e8 00 00 00 00	 call	 ?CheckStateTime@CKanturuBattleStanby@@QAEXXZ ; CKanturuBattleStanby::CheckStateTime

; 174  : 
; 175  : 	switch ( this->m_iBattleStanbyState )

  00824	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00827	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0082a	89 4d b8	 mov	 DWORD PTR tv66[ebp], ecx
  0082d	83 7d b8 03	 cmp	 DWORD PTR tv66[ebp], 3
  00831	77 30		 ja	 SHORT $LN7@Run
  00833	8b 55 b8	 mov	 edx, DWORD PTR tv66[ebp]
  00836	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN9@Run[edx*4]
$LN4@Run:

; 176  : 	{
; 177  : 		case KANTURU_STANBY_NONE:
; 178  : 			this->ProcState_NONE();

  0083d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00840	e8 00 00 00 00	 call	 ?ProcState_NONE@CKanturuBattleStanby@@QAEXXZ ; CKanturuBattleStanby::ProcState_NONE

; 179  : 			break;

  00845	eb 1c		 jmp	 SHORT $LN7@Run
$LN3@Run:

; 180  : 		case KANTURU_STANBY_START:
; 181  : 			this->ProcState_START();

  00847	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0084a	e8 00 00 00 00	 call	 ?ProcState_START@CKanturuBattleStanby@@QAEXXZ ; CKanturuBattleStanby::ProcState_START

; 182  : 			break;

  0084f	eb 12		 jmp	 SHORT $LN7@Run
$LN2@Run:

; 183  : 		case KANTURU_STANBY_NOTIFY:
; 184  : 			this->ProcState_NOTIFY();

  00851	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00854	e8 00 00 00 00	 call	 ?ProcState_NOTIFY@CKanturuBattleStanby@@QAEXXZ ; CKanturuBattleStanby::ProcState_NOTIFY

; 185  : 			break;

  00859	eb 08		 jmp	 SHORT $LN7@Run
$LN1@Run:

; 186  : 		case KANTURU_STANBY_END:
; 187  : 			this->ProcState_END();

  0085b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0085e	e8 00 00 00 00	 call	 ?ProcState_END@CKanturuBattleStanby@@QAEXXZ ; CKanturuBattleStanby::ProcState_END
$LN7@Run:

; 188  : 			break;
; 189  : 	}
; 190  : }

  00863	5f		 pop	 edi
  00864	5e		 pop	 esi
  00865	5b		 pop	 ebx
  00866	8b e5		 mov	 esp, ebp
  00868	5d		 pop	 ebp
  00869	c3		 ret	 0
  0086a	8b ff		 npad	 2
$LN9@Run:
  0086c	00 00 00 00	 DD	 $LN4@Run
  00870	00 00 00 00	 DD	 $LN3@Run
  00874	00 00 00 00	 DD	 $LN2@Run
  00878	00 00 00 00	 DD	 $LN1@Run
?Run@CKanturuBattleStanby@@QAEXXZ ENDP			; CKanturuBattleStanby::Run
_TEXT	ENDS
PUBLIC	?SetState_END@CKanturuBattleStanby@@QAEXXZ	; CKanturuBattleStanby::SetState_END
PUBLIC	?SetState_NOTIFY@CKanturuBattleStanby@@QAEXXZ	; CKanturuBattleStanby::SetState_NOTIFY
PUBLIC	?SetState_START@CKanturuBattleStanby@@QAEXXZ	; CKanturuBattleStanby::SetState_START
PUBLIC	?SetState_NONE@CKanturuBattleStanby@@QAEXXZ	; CKanturuBattleStanby::SetState_NONE
PUBLIC	?SetAppliedTime@CKanturuStateInfo@@QAEXXZ	; CKanturuStateInfo::SetAppliedTime
PUBLIC	?GetCondition@CKanturuStateInfo@@QAEHXZ		; CKanturuStateInfo::GetCondition
PUBLIC	?SetState@CKanturuBattleStanby@@QAEXH@Z		; CKanturuBattleStanby::SetState
EXTRN	?NotifyKanturuChangeState@CKanturuUtil@@QAEXHH@Z:PROC ; CKanturuUtil::NotifyKanturuChangeState
EXTRN	?ResetAllData@CKanturuBattleUserMng@@QAEXXZ:PROC ; CKanturuBattleUserMng::ResetAllData
EXTRN	?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A:BYTE ; g_KanturuBattleUserMng
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?ResetRegenMonsterObjData@CKanturuMonsterMng@@QAEXXZ:PROC ; CKanturuMonsterMng::ResetRegenMonsterObjData
EXTRN	?g_KanturuMonsterMng@@3VCKanturuMonsterMng@@A:BYTE ; g_KanturuMonsterMng
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv81 = -76						; size = 4
_iCount$228014 = -8					; size = 4
_this$ = -4						; size = 4
_iBattleStanbyState$ = 8				; size = 4
?SetState@CKanturuBattleStanby@@QAEXH@Z PROC		; CKanturuBattleStanby::SetState
; _this$ = ecx

; 195  : {

  00880	55		 push	 ebp
  00881	8b ec		 mov	 ebp, esp
  00883	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00886	53		 push	 ebx
  00887	56		 push	 esi
  00888	57		 push	 edi
  00889	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 196  : 	if ( this->m_StateInfo[iBattleStanbyState].GetCondition() > 0 )

  0088c	8b 45 08	 mov	 eax, DWORD PTR _iBattleStanbyState$[ebp]
  0088f	6b c0 14	 imul	 eax, 20			; 00000014H
  00892	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00895	8d 4c 01 10	 lea	 ecx, DWORD PTR [ecx+eax+16]
  00899	e8 00 00 00 00	 call	 ?GetCondition@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetCondition
  0089e	85 c0		 test	 eax, eax
  008a0	7e 12		 jle	 SHORT $LN10@SetState

; 197  : 	{
; 198  : 		this->m_StateInfo[iBattleStanbyState].SetAppliedTime();

  008a2	8b 45 08	 mov	 eax, DWORD PTR _iBattleStanbyState$[ebp]
  008a5	6b c0 14	 imul	 eax, 20			; 00000014H
  008a8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008ab	8d 4c 01 10	 lea	 ecx, DWORD PTR [ecx+eax+16]
  008af	e8 00 00 00 00	 call	 ?SetAppliedTime@CKanturuStateInfo@@QAEXXZ ; CKanturuStateInfo::SetAppliedTime
$LN10@SetState:

; 199  : 	}
; 200  : 
; 201  : 	g_KanturuMonsterMng.ResetRegenMonsterObjData();

  008b4	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuMonsterMng@@3VCKanturuMonsterMng@@A ; g_KanturuMonsterMng
  008b9	e8 00 00 00 00	 call	 ?ResetRegenMonsterObjData@CKanturuMonsterMng@@QAEXXZ ; CKanturuMonsterMng::ResetRegenMonsterObjData

; 202  : 
; 203  : 	for ( int iCount=OBJ_STARTUSERINDEX;iCount<OBJMAX;iCount++)

  008be	c7 45 f8 b0 36
	00 00		 mov	 DWORD PTR _iCount$228014[ebp], 14000 ; 000036b0H
  008c5	eb 09		 jmp	 SHORT $LN9@SetState
$LN8@SetState:
  008c7	8b 45 f8	 mov	 eax, DWORD PTR _iCount$228014[ebp]
  008ca	83 c0 01	 add	 eax, 1
  008cd	89 45 f8	 mov	 DWORD PTR _iCount$228014[ebp], eax
$LN9@SetState:
  008d0	81 7d f8 98 3a
	00 00		 cmp	 DWORD PTR _iCount$228014[ebp], 15000 ; 00003a98H
  008d7	7d 1c		 jge	 SHORT $LN7@SetState

; 204  : 	{
; 205  : //#if(GS_CASTLE==0)
; 206  : 		gObj[iCount].m_bKanturuEntranceByNPC = FALSE;

  008d9	8b 45 f8	 mov	 eax, DWORD PTR _iCount$228014[ebp]
  008dc	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  008e2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  008e8	c7 84 01 10 20
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+8208], 0

; 207  : //#endif
; 208  : 	}

  008f3	eb d2		 jmp	 SHORT $LN8@SetState
$LN7@SetState:

; 209  : 
; 210  : 	g_KanturuBattleUserMng.ResetAllData();

  008f5	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  008fa	e8 00 00 00 00	 call	 ?ResetAllData@CKanturuBattleUserMng@@QAEXXZ ; CKanturuBattleUserMng::ResetAllData

; 211  : 
; 212  : 	switch ( iBattleStanbyState )

  008ff	8b 45 08	 mov	 eax, DWORD PTR _iBattleStanbyState$[ebp]
  00902	89 45 b4	 mov	 DWORD PTR tv81[ebp], eax
  00905	83 7d b4 03	 cmp	 DWORD PTR tv81[ebp], 3
  00909	77 30		 ja	 SHORT $LN5@SetState
  0090b	8b 4d b4	 mov	 ecx, DWORD PTR tv81[ebp]
  0090e	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN13@SetState[ecx*4]
$LN4@SetState:

; 213  : 	{
; 214  : 		case KANTURU_STANBY_NONE:
; 215  : 			this->SetState_NONE();

  00915	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00918	e8 00 00 00 00	 call	 ?SetState_NONE@CKanturuBattleStanby@@QAEXXZ ; CKanturuBattleStanby::SetState_NONE

; 216  : 			break;

  0091d	eb 1c		 jmp	 SHORT $LN5@SetState
$LN3@SetState:

; 217  : 		case KANTURU_STANBY_START:
; 218  : 			this->SetState_START();

  0091f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00922	e8 00 00 00 00	 call	 ?SetState_START@CKanturuBattleStanby@@QAEXXZ ; CKanturuBattleStanby::SetState_START

; 219  : 			break;

  00927	eb 12		 jmp	 SHORT $LN5@SetState
$LN2@SetState:

; 220  : 		case KANTURU_STANBY_NOTIFY:
; 221  : 			this->SetState_NOTIFY();

  00929	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0092c	e8 00 00 00 00	 call	 ?SetState_NOTIFY@CKanturuBattleStanby@@QAEXXZ ; CKanturuBattleStanby::SetState_NOTIFY

; 222  : 			break;

  00931	eb 08		 jmp	 SHORT $LN5@SetState
$LN1@SetState:

; 223  : 		case KANTURU_STANBY_END:
; 224  : 			this->SetState_END();

  00933	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00936	e8 00 00 00 00	 call	 ?SetState_END@CKanturuBattleStanby@@QAEXXZ ; CKanturuBattleStanby::SetState_END
$LN5@SetState:

; 225  : 			break;
; 226  : 	}
; 227  : 
; 228  : 	KANTURU_UTIL.NotifyKanturuChangeState(KANTURU_STATE_BATTLE_STANTBY, this->m_iBattleStanbyState);

  0093b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0093e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00941	51		 push	 ecx
  00942	6a 01		 push	 1
  00944	b9 00 00 00 00	 mov	 ecx, OFFSET _KANTURU_UTIL
  00949	e8 00 00 00 00	 call	 ?NotifyKanturuChangeState@CKanturuUtil@@QAEXHH@Z ; CKanturuUtil::NotifyKanturuChangeState

; 229  : 	g_KanturuBattleUserMng.ResetAllData();

  0094e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  00953	e8 00 00 00 00	 call	 ?ResetAllData@CKanturuBattleUserMng@@QAEXXZ ; CKanturuBattleUserMng::ResetAllData

; 230  : }

  00958	5f		 pop	 edi
  00959	5e		 pop	 esi
  0095a	5b		 pop	 ebx
  0095b	8b e5		 mov	 esp, ebp
  0095d	5d		 pop	 ebp
  0095e	c2 04 00	 ret	 4
  00961	8d 49 00	 npad	 3
$LN13@SetState:
  00964	00 00 00 00	 DD	 $LN4@SetState
  00968	00 00 00 00	 DD	 $LN3@SetState
  0096c	00 00 00 00	 DD	 $LN2@SetState
  00970	00 00 00 00	 DD	 $LN1@SetState
?SetState@CKanturuBattleStanby@@QAEXH@Z ENDP		; CKanturuBattleStanby::SetState
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturustateinfo.h
_TEXT	ENDS
;	COMDAT ?GetCondition@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCondition@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetCondition, COMDAT
; _this$ = ecx

; 40   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 41   : 		return this->m_iCondition;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 42   : 	}

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCondition@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetCondition
_TEXT	ENDS
EXTRN	__imp__GetTickCount@0:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ?SetAppliedTime@CKanturuStateInfo@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetAppliedTime@CKanturuStateInfo@@QAEXXZ PROC		; CKanturuStateInfo::SetAppliedTime, COMDAT
; _this$ = ecx

; 54   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 55   : 		this->m_dwAppliedTickCount = GetTickCount();

  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 56   : 	}

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
?SetAppliedTime@CKanturuStateInfo@@QAEXXZ ENDP		; CKanturuStateInfo::SetAppliedTime
_TEXT	ENDS
PUBLIC	?SetNextState@CKanturuBattleStanby@@QAEXH@Z	; CKanturuBattleStanby::SetNextState
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturubattlestanby.cpp
_TEXT	SEGMENT
_iNextState$ = -8					; size = 4
_this$ = -4						; size = 4
_iCurrentState$ = 8					; size = 4
?SetNextState@CKanturuBattleStanby@@QAEXH@Z PROC	; CKanturuBattleStanby::SetNextState
; _this$ = ecx

; 235  : {

  00980	55		 push	 ebp
  00981	8b ec		 mov	 ebp, esp
  00983	83 ec 48	 sub	 esp, 72			; 00000048H
  00986	53		 push	 ebx
  00987	56		 push	 esi
  00988	57		 push	 edi
  00989	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 236  : 	int iNextState = iCurrentState + 1;

  0098c	8b 45 08	 mov	 eax, DWORD PTR _iCurrentState$[ebp]
  0098f	83 c0 01	 add	 eax, 1
  00992	89 45 f8	 mov	 DWORD PTR _iNextState$[ebp], eax

; 237  : 
; 238  : 	if ( iNextState >= KANTURU_STANBY_STATE_INFO )

  00995	83 7d f8 04	 cmp	 DWORD PTR _iNextState$[ebp], 4
  00999	7c 07		 jl	 SHORT $LN1@SetNextSta

; 239  : 	{
; 240  : 		iNextState = KANTURU_STANBY_NONE;

  0099b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iNextState$[ebp], 0
$LN1@SetNextSta:

; 241  : 	}
; 242  : 
; 243  : 	this->SetState(iNextState);

  009a2	8b 45 f8	 mov	 eax, DWORD PTR _iNextState$[ebp]
  009a5	50		 push	 eax
  009a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009a9	e8 00 00 00 00	 call	 ?SetState@CKanturuBattleStanby@@QAEXH@Z ; CKanturuBattleStanby::SetState

; 244  : }

  009ae	5f		 pop	 edi
  009af	5e		 pop	 esi
  009b0	5b		 pop	 ebx
  009b1	8b e5		 mov	 esp, ebp
  009b3	5d		 pop	 ebp
  009b4	c2 04 00	 ret	 4
?SetNextState@CKanturuBattleStanby@@QAEXH@Z ENDP	; CKanturuBattleStanby::SetNextState
_TEXT	ENDS
PUBLIC	??_C@_0CO@DECNDGGC@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@ ; `string'
;	COMDAT ??_C@_0CO@DECNDGGC@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@
CONST	SEGMENT
??_C@_0CO@DECNDGGC@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@ DB '['
	DB	' KANTURU ][ BattleStanby ] State(%d) -> NONE', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_NONE@CKanturuBattleStanby@@QAEXXZ PROC	; CKanturuBattleStanby::SetState_NONE
; _this$ = ecx

; 249  : {

  009c0	55		 push	 ebp
  009c1	8b ec		 mov	 ebp, esp
  009c3	83 ec 44	 sub	 esp, 68			; 00000044H
  009c6	53		 push	 ebx
  009c7	56		 push	 esi
  009c8	57		 push	 edi
  009c9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 250  : 	LogAddC(5, "[ KANTURU ][ BattleStanby ] State(%d) -> NONE",
; 251  : 		this->m_iBattleStanbyState);

  009cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  009cf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  009d2	51		 push	 ecx
  009d3	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@DECNDGGC@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@
  009d8	6a 05		 push	 5
  009da	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  009e0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 252  : 
; 253  : 	this->SetBattleStanbyState(KANTURU_STANBY_NONE);

  009e3	6a 00		 push	 0
  009e5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009e8	e8 00 00 00 00	 call	 ?SetBattleStanbyState@CKanturuBattleStanby@@QAEXH@Z ; CKanturuBattleStanby::SetBattleStanbyState

; 254  : }

  009ed	5f		 pop	 edi
  009ee	5e		 pop	 esi
  009ef	5b		 pop	 ebx
  009f0	8b e5		 mov	 esp, ebp
  009f2	5d		 pop	 ebp
  009f3	c3		 ret	 0
?SetState_NONE@CKanturuBattleStanby@@QAEXXZ ENDP	; CKanturuBattleStanby::SetState_NONE
_TEXT	ENDS
PUBLIC	??_C@_0CP@JECNKHGH@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@ ; `string'
;	COMDAT ??_C@_0CP@JECNKHGH@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@
CONST	SEGMENT
??_C@_0CP@JECNKHGH@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@ DB '['
	DB	' KANTURU ][ BattleStanby ] State(%d) -> START', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_START@CKanturuBattleStanby@@QAEXXZ PROC	; CKanturuBattleStanby::SetState_START
; _this$ = ecx

; 259  : {

  00a00	55		 push	 ebp
  00a01	8b ec		 mov	 ebp, esp
  00a03	83 ec 44	 sub	 esp, 68			; 00000044H
  00a06	53		 push	 ebx
  00a07	56		 push	 esi
  00a08	57		 push	 edi
  00a09	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 260  : 	LogAddC(5, "[ KANTURU ][ BattleStanby ] State(%d) -> START",
; 261  : 		this->m_iBattleStanbyState);

  00a0c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a0f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00a12	51		 push	 ecx
  00a13	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@JECNKHGH@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@
  00a18	6a 05		 push	 5
  00a1a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00a20	83 c4 0c	 add	 esp, 12			; 0000000cH

; 262  : 
; 263  : 	this->SetBattleStanbyState(KANTURU_STANBY_START);

  00a23	6a 01		 push	 1
  00a25	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a28	e8 00 00 00 00	 call	 ?SetBattleStanbyState@CKanturuBattleStanby@@QAEXH@Z ; CKanturuBattleStanby::SetBattleStanbyState

; 264  : }

  00a2d	5f		 pop	 edi
  00a2e	5e		 pop	 esi
  00a2f	5b		 pop	 ebx
  00a30	8b e5		 mov	 esp, ebp
  00a32	5d		 pop	 ebp
  00a33	c3		 ret	 0
?SetState_START@CKanturuBattleStanby@@QAEXXZ ENDP	; CKanturuBattleStanby::SetState_START
_TEXT	ENDS
PUBLIC	??_C@_0DA@OHJJIPGF@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@ ; `string'
EXTRN	?SendMsgKauturuMapUser@CKanturuUtil@@QAAXPADZZ:PROC ; CKanturuUtil::SendMsgKauturuMapUser
EXTRN	?Get@CMsg@@QAEPADH@Z:PROC			; CMsg::Get
EXTRN	?lMsg@@3VCMsg@@A:BYTE				; lMsg
;	COMDAT ??_C@_0DA@OHJJIPGF@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@
CONST	SEGMENT
??_C@_0DA@OHJJIPGF@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@ DB '['
	DB	' KANTURU ][ BattleStanby ] State(%d) -> NOTIFY', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_NOTIFY@CKanturuBattleStanby@@QAEXXZ PROC	; CKanturuBattleStanby::SetState_NOTIFY
; _this$ = ecx

; 268  : {

  00a40	55		 push	 ebp
  00a41	8b ec		 mov	 ebp, esp
  00a43	83 ec 44	 sub	 esp, 68			; 00000044H
  00a46	53		 push	 ebx
  00a47	56		 push	 esi
  00a48	57		 push	 edi
  00a49	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 269  : 	LogAddC(5, "[ KANTURU ][ BattleStanby ] State(%d) -> NOTIFY",
; 270  : 		this->m_iBattleStanbyState);

  00a4c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a4f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00a52	51		 push	 ecx
  00a53	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@OHJJIPGF@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@
  00a58	6a 05		 push	 5
  00a5a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00a60	83 c4 0c	 add	 esp, 12			; 0000000cH

; 271  : 
; 272  : 	this->SetBattleStanbyState(KANTURU_STANBY_NOTIFY);

  00a63	6a 02		 push	 2
  00a65	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a68	e8 00 00 00 00	 call	 ?SetBattleStanbyState@CKanturuBattleStanby@@QAEXH@Z ; CKanturuBattleStanby::SetBattleStanbyState

; 273  : 	KANTURU_UTIL.SendMsgKauturuMapUser(lMsg.Get(MSGGET(13, 31)));

  00a6d	68 1f 0d 00 00	 push	 3359			; 00000d1fH
  00a72	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00a77	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00a7c	50		 push	 eax
  00a7d	68 00 00 00 00	 push	 OFFSET _KANTURU_UTIL
  00a82	e8 00 00 00 00	 call	 ?SendMsgKauturuMapUser@CKanturuUtil@@QAAXPADZZ ; CKanturuUtil::SendMsgKauturuMapUser
  00a87	83 c4 08	 add	 esp, 8

; 274  : }

  00a8a	5f		 pop	 edi
  00a8b	5e		 pop	 esi
  00a8c	5b		 pop	 ebx
  00a8d	8b e5		 mov	 esp, ebp
  00a8f	5d		 pop	 ebp
  00a90	c3		 ret	 0
?SetState_NOTIFY@CKanturuBattleStanby@@QAEXXZ ENDP	; CKanturuBattleStanby::SetState_NOTIFY
_TEXT	ENDS
PUBLIC	??_C@_0CN@GJHFCOMK@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@ ; `string'
;	COMDAT ??_C@_0CN@GJHFCOMK@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@
CONST	SEGMENT
??_C@_0CN@GJHFCOMK@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@ DB '['
	DB	' KANTURU ][ BattleStanby ] State(%d) -> END', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_END@CKanturuBattleStanby@@QAEXXZ PROC		; CKanturuBattleStanby::SetState_END
; _this$ = ecx

; 278  : {

  00aa0	55		 push	 ebp
  00aa1	8b ec		 mov	 ebp, esp
  00aa3	83 ec 44	 sub	 esp, 68			; 00000044H
  00aa6	53		 push	 ebx
  00aa7	56		 push	 esi
  00aa8	57		 push	 edi
  00aa9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 279  : 	LogAddC(5, "[ KANTURU ][ BattleStanby ] State(%d) -> END",
; 280  : 		this->m_iBattleStanbyState);

  00aac	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00aaf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00ab2	51		 push	 ecx
  00ab3	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@GJHFCOMK@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@
  00ab8	6a 05		 push	 5
  00aba	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00ac0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 281  : 
; 282  : 	this->SetBattleStanbyState(KANTURU_STANBY_END);

  00ac3	6a 03		 push	 3
  00ac5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00ac8	e8 00 00 00 00	 call	 ?SetBattleStanbyState@CKanturuBattleStanby@@QAEXH@Z ; CKanturuBattleStanby::SetBattleStanbyState

; 283  : }

  00acd	5f		 pop	 edi
  00ace	5e		 pop	 esi
  00acf	5b		 pop	 ebx
  00ad0	8b e5		 mov	 esp, ebp
  00ad2	5d		 pop	 ebp
  00ad3	c3		 ret	 0
?SetState_END@CKanturuBattleStanby@@QAEXXZ ENDP		; CKanturuBattleStanby::SetState_END
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?ProcState_NONE@CKanturuBattleStanby@@QAEXXZ PROC	; CKanturuBattleStanby::ProcState_NONE
; _this$ = ecx

; 287  : {

  00ae0	55		 push	 ebp
  00ae1	8b ec		 mov	 ebp, esp
  00ae3	83 ec 44	 sub	 esp, 68			; 00000044H
  00ae6	53		 push	 ebx
  00ae7	56		 push	 esi
  00ae8	57		 push	 edi
  00ae9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	return;
; 289  : }

  00aec	5f		 pop	 edi
  00aed	5e		 pop	 esi
  00aee	5b		 pop	 ebx
  00aef	8b e5		 mov	 esp, ebp
  00af1	5d		 pop	 ebp
  00af2	c3		 ret	 0
?ProcState_NONE@CKanturuBattleStanby@@QAEXXZ ENDP	; CKanturuBattleStanby::ProcState_NONE
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?ProcState_START@CKanturuBattleStanby@@QAEXXZ PROC	; CKanturuBattleStanby::ProcState_START
; _this$ = ecx

; 293  : {

  00b00	55		 push	 ebp
  00b01	8b ec		 mov	 ebp, esp
  00b03	83 ec 44	 sub	 esp, 68			; 00000044H
  00b06	53		 push	 ebx
  00b07	56		 push	 esi
  00b08	57		 push	 edi
  00b09	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 294  : 	return;
; 295  : }

  00b0c	5f		 pop	 edi
  00b0d	5e		 pop	 esi
  00b0e	5b		 pop	 ebx
  00b0f	8b e5		 mov	 esp, ebp
  00b11	5d		 pop	 ebp
  00b12	c3		 ret	 0
?ProcState_START@CKanturuBattleStanby@@QAEXXZ ENDP	; CKanturuBattleStanby::ProcState_START
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?ProcState_NOTIFY@CKanturuBattleStanby@@QAEXXZ PROC	; CKanturuBattleStanby::ProcState_NOTIFY
; _this$ = ecx

; 299  : {

  00b20	55		 push	 ebp
  00b21	8b ec		 mov	 ebp, esp
  00b23	83 ec 44	 sub	 esp, 68			; 00000044H
  00b26	53		 push	 ebx
  00b27	56		 push	 esi
  00b28	57		 push	 edi
  00b29	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 300  : 	return;
; 301  : }

  00b2c	5f		 pop	 edi
  00b2d	5e		 pop	 esi
  00b2e	5b		 pop	 ebx
  00b2f	8b e5		 mov	 esp, ebp
  00b31	5d		 pop	 ebp
  00b32	c3		 ret	 0
?ProcState_NOTIFY@CKanturuBattleStanby@@QAEXXZ ENDP	; CKanturuBattleStanby::ProcState_NOTIFY
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?ProcState_END@CKanturuBattleStanby@@QAEXXZ PROC	; CKanturuBattleStanby::ProcState_END
; _this$ = ecx

; 305  : {

  00b40	55		 push	 ebp
  00b41	8b ec		 mov	 ebp, esp
  00b43	83 ec 44	 sub	 esp, 68			; 00000044H
  00b46	53		 push	 ebx
  00b47	56		 push	 esi
  00b48	57		 push	 edi
  00b49	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 306  : 	return;
; 307  : }

  00b4c	5f		 pop	 edi
  00b4d	5e		 pop	 esi
  00b4e	5b		 pop	 ebx
  00b4f	8b e5		 mov	 esp, ebp
  00b51	5d		 pop	 ebp
  00b52	c3		 ret	 0
?ProcState_END@CKanturuBattleStanby@@QAEXXZ ENDP	; CKanturuBattleStanby::ProcState_END
_TEXT	ENDS
PUBLIC	?IsTimeOut@CKanturuStateInfo@@QAEHXZ		; CKanturuStateInfo::IsTimeOut
PUBLIC	?GetBattleStanbyState@CKanturuBattleStanby@@QAEHXZ ; CKanturuBattleStanby::GetBattleStanbyState
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_iCurrentState$ = -8					; size = 4
_this$ = -4						; size = 4
?CheckStateTime@CKanturuBattleStanby@@QAEXXZ PROC	; CKanturuBattleStanby::CheckStateTime
; _this$ = ecx

; 312  : {

  00b60	55		 push	 ebp
  00b61	8b ec		 mov	 ebp, esp
  00b63	83 ec 48	 sub	 esp, 72			; 00000048H
  00b66	53		 push	 ebx
  00b67	56		 push	 esi
  00b68	57		 push	 edi
  00b69	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 313  : 	int iCurrentState = this->GetBattleStanbyState();

  00b6c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b6f	e8 00 00 00 00	 call	 ?GetBattleStanbyState@CKanturuBattleStanby@@QAEHXZ ; CKanturuBattleStanby::GetBattleStanbyState
  00b74	89 45 f8	 mov	 DWORD PTR _iCurrentState$[ebp], eax

; 314  : 
; 315  : 	if ( iCurrentState )

  00b77	83 7d f8 00	 cmp	 DWORD PTR _iCurrentState$[ebp], 0
  00b7b	74 3a		 je	 SHORT $LN4@CheckState

; 316  : 	{
; 317  : 		if ( this->m_StateInfo[iCurrentState].GetCondition() == 1 )

  00b7d	8b 45 f8	 mov	 eax, DWORD PTR _iCurrentState$[ebp]
  00b80	6b c0 14	 imul	 eax, 20			; 00000014H
  00b83	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b86	8d 4c 01 10	 lea	 ecx, DWORD PTR [ecx+eax+16]
  00b8a	e8 00 00 00 00	 call	 ?GetCondition@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetCondition
  00b8f	83 f8 01	 cmp	 eax, 1
  00b92	75 23		 jne	 SHORT $LN4@CheckState

; 318  : 		{
; 319  : 			if ( this->m_StateInfo[iCurrentState].IsTimeOut() == TRUE )

  00b94	8b 45 f8	 mov	 eax, DWORD PTR _iCurrentState$[ebp]
  00b97	6b c0 14	 imul	 eax, 20			; 00000014H
  00b9a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b9d	8d 4c 01 10	 lea	 ecx, DWORD PTR [ecx+eax+16]
  00ba1	e8 00 00 00 00	 call	 ?IsTimeOut@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::IsTimeOut
  00ba6	83 f8 01	 cmp	 eax, 1
  00ba9	75 0c		 jne	 SHORT $LN4@CheckState

; 320  : 			{
; 321  : 				this->SetNextState(iCurrentState);

  00bab	8b 45 f8	 mov	 eax, DWORD PTR _iCurrentState$[ebp]
  00bae	50		 push	 eax
  00baf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00bb2	e8 00 00 00 00	 call	 ?SetNextState@CKanturuBattleStanby@@QAEXH@Z ; CKanturuBattleStanby::SetNextState
$LN4@CheckState:

; 322  : 			}
; 323  : 		}
; 324  : 	}
; 325  : }

  00bb7	5f		 pop	 edi
  00bb8	5e		 pop	 esi
  00bb9	5b		 pop	 ebx
  00bba	8b e5		 mov	 esp, ebp
  00bbc	5d		 pop	 ebp
  00bbd	c3		 ret	 0
?CheckStateTime@CKanturuBattleStanby@@QAEXXZ ENDP	; CKanturuBattleStanby::CheckStateTime
_TEXT	ENDS
PUBLIC	?GetRemainTime@CKanturuStateInfo@@QAEHXZ	; CKanturuStateInfo::GetRemainTime
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturustateinfo.h
;	COMDAT ?IsTimeOut@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsTimeOut@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::IsTimeOut, COMDAT
; _this$ = ecx

; 89   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 90   : 		if ( this->GetRemainTime() <= 0 )

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetRemainTime@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetRemainTime
  00014	85 c0		 test	 eax, eax
  00016	7f 07		 jg	 SHORT $LN1@IsTimeOut

; 91   : 		{
; 92   : 			return TRUE;

  00018	b8 01 00 00 00	 mov	 eax, 1
  0001d	eb 02		 jmp	 SHORT $LN2@IsTimeOut
$LN1@IsTimeOut:

; 93   : 		}
; 94   : 
; 95   : 		return FALSE;

  0001f	33 c0		 xor	 eax, eax
$LN2@IsTimeOut:

; 96   : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?IsTimeOut@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::IsTimeOut
_TEXT	ENDS
PUBLIC	?GetElapsedTime@CKanturuStateInfo@@QAEHXZ	; CKanturuStateInfo::GetElapsedTime
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetRemainTime@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
_iRemainTime$ = -8					; size = 4
_this$ = -4						; size = 4
?GetRemainTime@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetRemainTime, COMDAT
; _this$ = ecx

; 70   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 71   : 		int iRemainTime = 0;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iRemainTime$[ebp], 0

; 72   : 
; 73   : 		if ( this->GetCondition() == 1 )

  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	e8 00 00 00 00	 call	 ?GetCondition@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetCondition
  0001b	83 f8 01	 cmp	 eax, 1
  0001e	75 2b		 jne	 SHORT $LN2@GetRemainT

; 74   : 		{
; 75   : 			iRemainTime = this->m_iValue - this->GetElapsedTime();

  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ?GetElapsedTime@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetElapsedTime
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0002e	2b d0		 sub	 edx, eax
  00030	89 55 f8	 mov	 DWORD PTR _iRemainTime$[ebp], edx

; 76   : 
; 77   : 			if ( iRemainTime <= 0 )

  00033	83 7d f8 00	 cmp	 DWORD PTR _iRemainTime$[ebp], 0
  00037	7f 04		 jg	 SHORT $LN1@GetRemainT

; 78   : 			{
; 79   : 				return 0;

  00039	33 c0		 xor	 eax, eax
  0003b	eb 11		 jmp	 SHORT $LN3@GetRemainT
$LN1@GetRemainT:

; 80   : 			}
; 81   : 
; 82   : 			iRemainTime /= 1000;

  0003d	8b 45 f8	 mov	 eax, DWORD PTR _iRemainTime$[ebp]
  00040	99		 cdq
  00041	b9 e8 03 00 00	 mov	 ecx, 1000		; 000003e8H
  00046	f7 f9		 idiv	 ecx
  00048	89 45 f8	 mov	 DWORD PTR _iRemainTime$[ebp], eax
$LN2@GetRemainT:

; 83   : 		}
; 84   : 
; 85   : 		return iRemainTime;

  0004b	8b 45 f8	 mov	 eax, DWORD PTR _iRemainTime$[ebp]
$LN3@GetRemainT:

; 86   : 	}

  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	5b		 pop	 ebx
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
?GetRemainTime@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetRemainTime
_TEXT	ENDS
PUBLIC	?GetAppliedTime@CKanturuStateInfo@@QAEHXZ	; CKanturuStateInfo::GetAppliedTime
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetElapsedTime@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
_iElapsedTime$ = -8					; size = 4
_this$ = -4						; size = 4
?GetElapsedTime@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetElapsedTime, COMDAT
; _this$ = ecx

; 64   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 65   : 		int iElapsedTime = GetTickCount() - this->GetAppliedTime();

  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00012	8b f0		 mov	 esi, eax
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?GetAppliedTime@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetAppliedTime
  0001c	2b f0		 sub	 esi, eax
  0001e	89 75 f8	 mov	 DWORD PTR _iElapsedTime$[ebp], esi

; 66   : 		return iElapsedTime;

  00021	8b 45 f8	 mov	 eax, DWORD PTR _iElapsedTime$[ebp]

; 67   : 	}

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?GetElapsedTime@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetElapsedTime
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?GetAppliedTime@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAppliedTime@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetAppliedTime, COMDAT
; _this$ = ecx

; 59   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 60   : 		return this->m_dwAppliedTickCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 61   : 	}

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetAppliedTime@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetAppliedTime
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturubattlestanby.h
_TEXT	ENDS
;	COMDAT ?GetBattleStanbyState@CKanturuBattleStanby@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetBattleStanbyState@CKanturuBattleStanby@@QAEHXZ PROC	; CKanturuBattleStanby::GetBattleStanbyState, COMDAT
; _this$ = ecx

; 47   : 	int GetBattleStanbyState(){return this->m_iBattleStanbyState;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetBattleStanbyState@CKanturuBattleStanby@@QAEHXZ ENDP	; CKanturuBattleStanby::GetBattleStanbyState
_TEXT	ENDS
PUBLIC	?GetRemainTime@CKanturuBattleStanby@@QAEHXZ	; CKanturuBattleStanby::GetRemainTime
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturubattlestanby.cpp
_TEXT	SEGMENT
_iCurrentState$ = -8					; size = 4
_this$ = -4						; size = 4
?GetRemainTime@CKanturuBattleStanby@@QAEHXZ PROC	; CKanturuBattleStanby::GetRemainTime
; _this$ = ecx

; 330  : {

  00bc0	55		 push	 ebp
  00bc1	8b ec		 mov	 ebp, esp
  00bc3	83 ec 48	 sub	 esp, 72			; 00000048H
  00bc6	53		 push	 ebx
  00bc7	56		 push	 esi
  00bc8	57		 push	 edi
  00bc9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 331  : 	int iCurrentState = this->GetBattleStanbyState();

  00bcc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00bcf	e8 00 00 00 00	 call	 ?GetBattleStanbyState@CKanturuBattleStanby@@QAEHXZ ; CKanturuBattleStanby::GetBattleStanbyState
  00bd4	89 45 f8	 mov	 DWORD PTR _iCurrentState$[ebp], eax

; 332  : 	return this->m_StateInfo[iCurrentState].GetRemainTime();

  00bd7	8b 45 f8	 mov	 eax, DWORD PTR _iCurrentState$[ebp]
  00bda	6b c0 14	 imul	 eax, 20			; 00000014H
  00bdd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00be0	8d 4c 01 10	 lea	 ecx, DWORD PTR [ecx+eax+16]
  00be4	e8 00 00 00 00	 call	 ?GetRemainTime@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetRemainTime

; 333  : }

  00be9	5f		 pop	 edi
  00bea	5e		 pop	 esi
  00beb	5b		 pop	 ebx
  00bec	8b e5		 mov	 esp, ebp
  00bee	5d		 pop	 ebp
  00bef	c3		 ret	 0
?GetRemainTime@CKanturuBattleStanby@@QAEHXZ ENDP	; CKanturuBattleStanby::GetRemainTime
_TEXT	ENDS
EXTRN	_atexit:PROC
EXTRN	??0CKanturuUtil@@QAE@XZ:PROC			; CKanturuUtil::CKanturuUtil
; Function compile flags: /Odtp /ZI
;	COMDAT ??__EKANTURU_UTIL@@YAXXZ
text$yc	SEGMENT
??__EKANTURU_UTIL@@YAXXZ PROC				; `dynamic initializer for 'KANTURU_UTIL'', COMDAT

; 17   : static CKanturuUtil KANTURU_UTIL;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET _KANTURU_UTIL
  0000e	e8 00 00 00 00	 call	 ??0CKanturuUtil@@QAE@XZ	; CKanturuUtil::CKanturuUtil
  00013	68 00 00 00 00	 push	 OFFSET ??__FKANTURU_UTIL@@YAXXZ ; `dynamic atexit destructor for 'KANTURU_UTIL''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__EKANTURU_UTIL@@YAXXZ ENDP				; `dynamic initializer for 'KANTURU_UTIL''
text$yc	ENDS
EXTRN	??1CKanturuUtil@@UAE@XZ:PROC			; CKanturuUtil::~CKanturuUtil
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FKANTURU_UTIL@@YAXXZ
text$yd	SEGMENT
??__FKANTURU_UTIL@@YAXXZ PROC				; `dynamic atexit destructor for 'KANTURU_UTIL'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET _KANTURU_UTIL
  0000e	e8 00 00 00 00	 call	 ??1CKanturuUtil@@UAE@XZ	; CKanturuUtil::~CKanturuUtil
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__FKANTURU_UTIL@@YAXXZ ENDP				; `dynamic atexit destructor for 'KANTURU_UTIL''
text$yd	ENDS
_BSS	SEGMENT
_KANTURU_UTIL DD 01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_KANTURU_UTIL$initializer$ DD FLAT:??__EKANTURU_UTIL@@YAXXZ
CRT$XCU	ENDS
END
