; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\ComboCustom.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?Init@ComboCustom@@QAEXXZ			; ComboCustom::Init
PUBLIC	??0ComboCustom@@QAE@XZ				; ComboCustom::ComboCustom
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\combocustom.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ComboCustom@@QAE@XZ PROC				; ComboCustom::ComboCustom
; _this$ = ecx

; 12   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 13   : 	this->Init();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?Init@ComboCustom@@QAEXXZ ; ComboCustom::Init

; 14   : }

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0ComboCustom@@QAE@XZ ENDP				; ComboCustom::ComboCustom
_TEXT	ENDS
PUBLIC	??1ComboCustom@@QAE@XZ				; ComboCustom::~ComboCustom
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1ComboCustom@@QAE@XZ PROC				; ComboCustom::~ComboCustom
; _this$ = ecx

; 17   : {

  00020	55		 push	 ebp
  00021	8b ec		 mov	 ebp, esp
  00023	83 ec 44	 sub	 esp, 68			; 00000044H
  00026	53		 push	 ebx
  00027	56		 push	 esi
  00028	57		 push	 edi
  00029	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 18   : 	// ----
; 19   : }

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??1ComboCustom@@QAE@XZ ENDP				; ComboCustom::~ComboCustom
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?Init@ComboCustom@@QAEXXZ PROC				; ComboCustom::Init
; _this$ = ecx

; 22   : {

  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
  00043	83 ec 44	 sub	 esp, 68			; 00000044H
  00046	53		 push	 ebx
  00047	56		 push	 esi
  00048	57		 push	 edi
  00049	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 23   : 	this->Enable = 0;

  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 24   : 
; 25   : 	this->DWComboEnable = 0;

  00055	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00058	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0

; 26   : 	this->DWComboSkill_1 = 0;

  0005c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 27   : 	this->DWComboSkill_2 = 0;

  00066	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00069	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 28   : 	this->DWComboSkill_3 = 0;

  00070	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00073	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 29   : 
; 30   : 	this->AEComboEnable = 0;

  0007a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0

; 31   : 	this->AEComboSkill_1 = 0;

  00081	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00084	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 32   : 	this->AEComboSkill_2 = 0;

  0008b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008e	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0

; 33   : 	this->AEComboSkill_3 = 0;

  00095	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00098	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0

; 34   : 
; 35   : 	this->SUMComboEnable = 0;

  0009f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	c6 40 24 00	 mov	 BYTE PTR [eax+36], 0

; 36   : 	this->SUMComboSkill_1 = 0;

  000a6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	c7 40 28 00 00
	00 00		 mov	 DWORD PTR [eax+40], 0

; 37   : 	this->SUMComboSkill_2 = 0;

  000b0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b3	c7 40 2c 00 00
	00 00		 mov	 DWORD PTR [eax+44], 0

; 38   : 	this->SUMComboSkill_3 = 0;

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [eax+48], 0

; 39   : 
; 40   : 	this->MGComboEnable = 0;

  000c4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c7	c6 40 34 00	 mov	 BYTE PTR [eax+52], 0

; 41   : 	this->MGComboSkill_1 = 0;

  000cb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ce	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0

; 42   : 	this->MGComboSkill_2 = 0;

  000d5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d8	c7 40 3c 00 00
	00 00		 mov	 DWORD PTR [eax+60], 0

; 43   : 	this->MGComboSkill_3 = 0;

  000df	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e2	c7 40 40 00 00
	00 00		 mov	 DWORD PTR [eax+64], 0

; 44   : 
; 45   : 	this->DLComboEnable = 0;

  000e9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ec	c6 40 44 00	 mov	 BYTE PTR [eax+68], 0

; 46   : 	this->DLComboSkill_1 = 0;

  000f0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f3	c7 40 48 00 00
	00 00		 mov	 DWORD PTR [eax+72], 0

; 47   : 	this->DLComboSkill_2 = 0;

  000fa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fd	c7 40 4c 00 00
	00 00		 mov	 DWORD PTR [eax+76], 0

; 48   : 	this->DLComboSkill_3 = 0;

  00104	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00107	c7 40 50 00 00
	00 00		 mov	 DWORD PTR [eax+80], 0

; 49   : 
; 50   : 	this->RFComboEnable = 0;

  0010e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00111	c6 40 54 00	 mov	 BYTE PTR [eax+84], 0

; 51   : 	this->RFComboSkill_1 = 0;

  00115	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00118	c7 40 58 00 00
	00 00		 mov	 DWORD PTR [eax+88], 0

; 52   : 	this->RFComboSkill_2 = 0;

  0011f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00122	c7 40 5c 00 00
	00 00		 mov	 DWORD PTR [eax+92], 0

; 53   : 	this->RFComboSkill_3 = 0;

  00129	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0012c	c7 40 60 00 00
	00 00		 mov	 DWORD PTR [eax+96], 0

; 54   : 
; 55   : 	// ----
; 56   : 
; 57   : 	this->Master_DWComboSkill_1 = 0;

  00133	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00136	c7 40 64 00 00
	00 00		 mov	 DWORD PTR [eax+100], 0

; 58   : 	this->Master_DWComboSkill_2 = 0;

  0013d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00140	c7 40 68 00 00
	00 00		 mov	 DWORD PTR [eax+104], 0

; 59   : 	this->Master_DWComboSkill_3 = 0;

  00147	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0014a	c7 40 6c 00 00
	00 00		 mov	 DWORD PTR [eax+108], 0

; 60   : 
; 61   : 	this->Master_AEComboSkill_1 = 0;

  00151	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00154	c7 40 70 00 00
	00 00		 mov	 DWORD PTR [eax+112], 0

; 62   : 	this->Master_AEComboSkill_2 = 0;

  0015b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0015e	c7 40 74 00 00
	00 00		 mov	 DWORD PTR [eax+116], 0

; 63   : 	this->Master_AEComboSkill_3 = 0;

  00165	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00168	c7 40 78 00 00
	00 00		 mov	 DWORD PTR [eax+120], 0

; 64   : 
; 65   : 	this->Master_SUMComboSkill_1 = 0;

  0016f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00172	c7 40 7c 00 00
	00 00		 mov	 DWORD PTR [eax+124], 0

; 66   : 	this->Master_SUMComboSkill_2 = 0;

  00179	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0017c	c7 80 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+128], 0

; 67   : 	this->Master_SUMComboSkill_3 = 0;

  00186	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00189	c7 80 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+132], 0

; 68   : 
; 69   : 	this->Master_MGComboSkill_1 = 0;

  00193	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00196	c7 80 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+136], 0

; 70   : 	this->Master_MGComboSkill_2 = 0;

  001a0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001a3	c7 80 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+140], 0

; 71   : 	this->Master_MGComboSkill_3 = 0;

  001ad	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001b0	c7 80 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+144], 0

; 72   : 
; 73   : 	this->Master_DLComboSkill_1 = 0;

  001ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001bd	c7 80 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+148], 0

; 74   : 	this->Master_DLComboSkill_2 = 0;

  001c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001ca	c7 80 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+152], 0

; 75   : 	this->Master_DLComboSkill_3 = 0;

  001d4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001d7	c7 80 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+156], 0

; 76   : 
; 77   : 	this->Master_RFComboSkill_1 = 0;

  001e1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001e4	c7 80 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+160], 0

; 78   : 	this->Master_RFComboSkill_2 = 0;

  001ee	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001f1	c7 80 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+164], 0

; 79   : 	this->Master_RFComboSkill_3 = 0;

  001fb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001fe	c7 80 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+168], 0

; 80   : }

  00208	5f		 pop	 edi
  00209	5e		 pop	 esi
  0020a	5b		 pop	 ebx
  0020b	8b e5		 mov	 esp, ebp
  0020d	5d		 pop	 ebp
  0020e	c3		 ret	 0
?Init@ComboCustom@@QAEXXZ ENDP				; ComboCustom::Init
_TEXT	ENDS
PUBLIC	?Read@ComboCustom@@QAEXPAD@Z			; ComboCustom::Read
PUBLIC	??_C@_0BH@MBJFJKF@ExData?2ComboCustom?4ini?$AA@	; `string'
PUBLIC	?Load@ComboCustom@@QAEXXZ			; ComboCustom::Load
EXTRN	?GetNewPath@CDirPath@@QAEPADPAD@Z:PROC		; CDirPath::GetNewPath
EXTRN	?gDirPath@@3VCDirPath@@A:BYTE			; gDirPath
EXTRN	?g_ExLicense@@3VCExLicense@@A:BYTE		; g_ExLicense
;	COMDAT ??_C@_0BH@MBJFJKF@ExData?2ComboCustom?4ini?$AA@
CONST	SEGMENT
??_C@_0BH@MBJFJKF@ExData?2ComboCustom?4ini?$AA@ DB 'ExData\ComboCustom.in'
	DB	'i', 00H					; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Load@ComboCustom@@QAEXXZ PROC				; ComboCustom::Load
; _this$ = ecx

; 83   : {

  00210	55		 push	 ebp
  00211	8b ec		 mov	 ebp, esp
  00213	83 ec 44	 sub	 esp, 68			; 00000044H
  00216	53		 push	 ebx
  00217	56		 push	 esi
  00218	57		 push	 edi
  00219	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 84   : 	this->Init();

  0021c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0021f	e8 00 00 00 00	 call	 ?Init@ComboCustom@@QAEXXZ ; ComboCustom::Init

; 85   : 
; 86   : 	if(!g_ExLicense.user.ComboCustom)

  00224	0f b6 05 d8 00
	00 00		 movzx	 eax, BYTE PTR ?g_ExLicense@@3VCExLicense@@A+216
  0022b	85 c0		 test	 eax, eax
  0022d	75 02		 jne	 SHORT $LN1@Load

; 87   : 	{
; 88   : 		return;

  0022f	eb 18		 jmp	 SHORT $LN2@Load
$LN1@Load:

; 89   : 	}
; 90   : 
; 91   : 	this->Read(gDirPath.GetNewPath("ExData\\ComboCustom.ini"));

  00231	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@MBJFJKF@ExData?2ComboCustom?4ini?$AA@
  00236	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  0023b	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00240	50		 push	 eax
  00241	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00244	e8 00 00 00 00	 call	 ?Read@ComboCustom@@QAEXPAD@Z ; ComboCustom::Read
$LN2@Load:

; 92   : }

  00249	5f		 pop	 edi
  0024a	5e		 pop	 esi
  0024b	5b		 pop	 ebx
  0024c	8b e5		 mov	 esp, ebp
  0024e	5d		 pop	 ebp
  0024f	c3		 ret	 0
?Load@ComboCustom@@QAEXXZ ENDP				; ComboCustom::Load
_TEXT	ENDS
PUBLIC	??_C@_0BG@FMFBHPMJ@Master_RFComboSkill_3?$AA@	; `string'
PUBLIC	??_C@_0BG@EFEKEOII@Master_RFComboSkill_2?$AA@	; `string'
PUBLIC	??_C@_0BG@GOGHBNEL@Master_RFComboSkill_1?$AA@	; `string'
PUBLIC	??_C@_0BG@OIPOOOOP@Master_DLComboSkill_3?$AA@	; `string'
PUBLIC	??_C@_0BG@PBOFNPKO@Master_DLComboSkill_2?$AA@	; `string'
PUBLIC	??_C@_0BG@NKMIIMGN@Master_DLComboSkill_1?$AA@	; `string'
PUBLIC	??_C@_0BG@NBLEMCGN@Master_MGComboSkill_3?$AA@	; `string'
PUBLIC	??_C@_0BG@MIKPPDCM@Master_MGComboSkill_2?$AA@	; `string'
PUBLIC	??_C@_0BG@ODICKAOP@Master_MGComboSkill_1?$AA@	; `string'
PUBLIC	??_C@_0BH@HPLGPCAE@Master_SUMComboSkill_3?$AA@	; `string'
PUBLIC	??_C@_0BH@GGKNMDEF@Master_SUMComboSkill_2?$AA@	; `string'
PUBLIC	??_C@_0BH@ENIAJAIG@Master_SUMComboSkill_1?$AA@	; `string'
PUBLIC	??_C@_0BG@HFCPKPCE@Master_AEComboSkill_3?$AA@	; `string'
PUBLIC	??_C@_0BG@GMDEJOGF@Master_AEComboSkill_2?$AA@	; `string'
PUBLIC	??_C@_0BG@EHBJMNKG@Master_AEComboSkill_1?$AA@	; `string'
PUBLIC	??_C@_0BG@MBHEOJGO@Master_DWComboSkill_3?$AA@	; `string'
PUBLIC	??_C@_0BG@NIGPNICP@Master_DWComboSkill_2?$AA@	; `string'
PUBLIC	??_C@_0BG@PDECILOM@Master_DWComboSkill_1?$AA@	; `string'
PUBLIC	??_C@_0P@ODBLDGAF@RFComboSkill_3?$AA@		; `string'
PUBLIC	??_C@_0P@PKAAAHEE@RFComboSkill_2?$AA@		; `string'
PUBLIC	??_C@_0P@NBCNFEIH@RFComboSkill_1?$AA@		; `string'
PUBLIC	??_C@_0O@GGCIKMFC@RFComboEnable?$AA@		; `string'
PUBLIC	??_C@_0P@FHLEKHCD@DLComboSkill_3?$AA@		; `string'
PUBLIC	??_C@_0P@EOKPJGGC@DLComboSkill_2?$AA@		; `string'
PUBLIC	??_C@_0P@GFICMFKB@DLComboSkill_1?$AA@		; `string'
PUBLIC	??_C@_0O@MCAHLNKO@DLComboEnable?$AA@		; `string'
PUBLIC	??_C@_0P@GOPOILKB@MGComboSkill_3?$AA@		; `string'
PUBLIC	??_C@_0P@HHOFLKOA@MGComboSkill_2?$AA@		; `string'
PUBLIC	??_C@_0P@FMMIOJCD@MGComboSkill_1?$AA@		; `string'
PUBLIC	??_C@_0O@ILJIPNEN@MGComboEnable?$AA@		; `string'
PUBLIC	??_C@_0BA@ONNLDGNG@SUMComboSkill_3?$AA@		; `string'
PUBLIC	??_C@_0BA@PEMAAHJH@SUMComboSkill_2?$AA@		; `string'
PUBLIC	??_C@_0BA@NPONFEFE@SUMComboSkill_1?$AA@		; `string'
PUBLIC	??_C@_0P@HNKAENFK@SUMComboEnable?$AA@		; `string'
PUBLIC	??_C@_0P@MKGFOGOI@AEComboSkill_3?$AA@		; `string'
PUBLIC	??_C@_0P@NDHONHKJ@AEComboSkill_2?$AA@		; `string'
PUBLIC	??_C@_0P@PIFDIEGK@AEComboSkill_1?$AA@		; `string'
PUBLIC	??_C@_0O@MBDBNJCL@AEComboEnable?$AA@		; `string'
PUBLIC	??_C@_0P@HODOKAKC@DWComboSkill_3?$AA@		; `string'
PUBLIC	??_C@_0P@GHCFJBOD@DWComboSkill_2?$AA@		; `string'
PUBLIC	??_C@_0P@EMAIMCCA@DWComboSkill_1?$AA@		; `string'
PUBLIC	??_C@_0O@JBMJKENH@DWComboEnable?$AA@		; `string'
PUBLIC	??_C@_06MLPMCPDE@ExTeam?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
;	COMDAT ??_C@_0BG@FMFBHPMJ@Master_RFComboSkill_3?$AA@
CONST	SEGMENT
??_C@_0BG@FMFBHPMJ@Master_RFComboSkill_3?$AA@ DB 'Master_RFComboSkill_3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EFEKEOII@Master_RFComboSkill_2?$AA@
CONST	SEGMENT
??_C@_0BG@EFEKEOII@Master_RFComboSkill_2?$AA@ DB 'Master_RFComboSkill_2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GOGHBNEL@Master_RFComboSkill_1?$AA@
CONST	SEGMENT
??_C@_0BG@GOGHBNEL@Master_RFComboSkill_1?$AA@ DB 'Master_RFComboSkill_1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OIPOOOOP@Master_DLComboSkill_3?$AA@
CONST	SEGMENT
??_C@_0BG@OIPOOOOP@Master_DLComboSkill_3?$AA@ DB 'Master_DLComboSkill_3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PBOFNPKO@Master_DLComboSkill_2?$AA@
CONST	SEGMENT
??_C@_0BG@PBOFNPKO@Master_DLComboSkill_2?$AA@ DB 'Master_DLComboSkill_2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NKMIIMGN@Master_DLComboSkill_1?$AA@
CONST	SEGMENT
??_C@_0BG@NKMIIMGN@Master_DLComboSkill_1?$AA@ DB 'Master_DLComboSkill_1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NBLEMCGN@Master_MGComboSkill_3?$AA@
CONST	SEGMENT
??_C@_0BG@NBLEMCGN@Master_MGComboSkill_3?$AA@ DB 'Master_MGComboSkill_3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MIKPPDCM@Master_MGComboSkill_2?$AA@
CONST	SEGMENT
??_C@_0BG@MIKPPDCM@Master_MGComboSkill_2?$AA@ DB 'Master_MGComboSkill_2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@ODICKAOP@Master_MGComboSkill_1?$AA@
CONST	SEGMENT
??_C@_0BG@ODICKAOP@Master_MGComboSkill_1?$AA@ DB 'Master_MGComboSkill_1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HPLGPCAE@Master_SUMComboSkill_3?$AA@
CONST	SEGMENT
??_C@_0BH@HPLGPCAE@Master_SUMComboSkill_3?$AA@ DB 'Master_SUMComboSkill_3'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GGKNMDEF@Master_SUMComboSkill_2?$AA@
CONST	SEGMENT
??_C@_0BH@GGKNMDEF@Master_SUMComboSkill_2?$AA@ DB 'Master_SUMComboSkill_2'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@ENIAJAIG@Master_SUMComboSkill_1?$AA@
CONST	SEGMENT
??_C@_0BH@ENIAJAIG@Master_SUMComboSkill_1?$AA@ DB 'Master_SUMComboSkill_1'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HFCPKPCE@Master_AEComboSkill_3?$AA@
CONST	SEGMENT
??_C@_0BG@HFCPKPCE@Master_AEComboSkill_3?$AA@ DB 'Master_AEComboSkill_3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GMDEJOGF@Master_AEComboSkill_2?$AA@
CONST	SEGMENT
??_C@_0BG@GMDEJOGF@Master_AEComboSkill_2?$AA@ DB 'Master_AEComboSkill_2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EHBJMNKG@Master_AEComboSkill_1?$AA@
CONST	SEGMENT
??_C@_0BG@EHBJMNKG@Master_AEComboSkill_1?$AA@ DB 'Master_AEComboSkill_1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MBHEOJGO@Master_DWComboSkill_3?$AA@
CONST	SEGMENT
??_C@_0BG@MBHEOJGO@Master_DWComboSkill_3?$AA@ DB 'Master_DWComboSkill_3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NIGPNICP@Master_DWComboSkill_2?$AA@
CONST	SEGMENT
??_C@_0BG@NIGPNICP@Master_DWComboSkill_2?$AA@ DB 'Master_DWComboSkill_2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PDECILOM@Master_DWComboSkill_1?$AA@
CONST	SEGMENT
??_C@_0BG@PDECILOM@Master_DWComboSkill_1?$AA@ DB 'Master_DWComboSkill_1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ODBLDGAF@RFComboSkill_3?$AA@
CONST	SEGMENT
??_C@_0P@ODBLDGAF@RFComboSkill_3?$AA@ DB 'RFComboSkill_3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PKAAAHEE@RFComboSkill_2?$AA@
CONST	SEGMENT
??_C@_0P@PKAAAHEE@RFComboSkill_2?$AA@ DB 'RFComboSkill_2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NBCNFEIH@RFComboSkill_1?$AA@
CONST	SEGMENT
??_C@_0P@NBCNFEIH@RFComboSkill_1?$AA@ DB 'RFComboSkill_1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GGCIKMFC@RFComboEnable?$AA@
CONST	SEGMENT
??_C@_0O@GGCIKMFC@RFComboEnable?$AA@ DB 'RFComboEnable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FHLEKHCD@DLComboSkill_3?$AA@
CONST	SEGMENT
??_C@_0P@FHLEKHCD@DLComboSkill_3?$AA@ DB 'DLComboSkill_3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EOKPJGGC@DLComboSkill_2?$AA@
CONST	SEGMENT
??_C@_0P@EOKPJGGC@DLComboSkill_2?$AA@ DB 'DLComboSkill_2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GFICMFKB@DLComboSkill_1?$AA@
CONST	SEGMENT
??_C@_0P@GFICMFKB@DLComboSkill_1?$AA@ DB 'DLComboSkill_1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MCAHLNKO@DLComboEnable?$AA@
CONST	SEGMENT
??_C@_0O@MCAHLNKO@DLComboEnable?$AA@ DB 'DLComboEnable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GOPOILKB@MGComboSkill_3?$AA@
CONST	SEGMENT
??_C@_0P@GOPOILKB@MGComboSkill_3?$AA@ DB 'MGComboSkill_3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HHOFLKOA@MGComboSkill_2?$AA@
CONST	SEGMENT
??_C@_0P@HHOFLKOA@MGComboSkill_2?$AA@ DB 'MGComboSkill_2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FMMIOJCD@MGComboSkill_1?$AA@
CONST	SEGMENT
??_C@_0P@FMMIOJCD@MGComboSkill_1?$AA@ DB 'MGComboSkill_1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ILJIPNEN@MGComboEnable?$AA@
CONST	SEGMENT
??_C@_0O@ILJIPNEN@MGComboEnable?$AA@ DB 'MGComboEnable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ONNLDGNG@SUMComboSkill_3?$AA@
CONST	SEGMENT
??_C@_0BA@ONNLDGNG@SUMComboSkill_3?$AA@ DB 'SUMComboSkill_3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PEMAAHJH@SUMComboSkill_2?$AA@
CONST	SEGMENT
??_C@_0BA@PEMAAHJH@SUMComboSkill_2?$AA@ DB 'SUMComboSkill_2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NPONFEFE@SUMComboSkill_1?$AA@
CONST	SEGMENT
??_C@_0BA@NPONFEFE@SUMComboSkill_1?$AA@ DB 'SUMComboSkill_1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HNKAENFK@SUMComboEnable?$AA@
CONST	SEGMENT
??_C@_0P@HNKAENFK@SUMComboEnable?$AA@ DB 'SUMComboEnable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MKGFOGOI@AEComboSkill_3?$AA@
CONST	SEGMENT
??_C@_0P@MKGFOGOI@AEComboSkill_3?$AA@ DB 'AEComboSkill_3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NDHONHKJ@AEComboSkill_2?$AA@
CONST	SEGMENT
??_C@_0P@NDHONHKJ@AEComboSkill_2?$AA@ DB 'AEComboSkill_2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PIFDIEGK@AEComboSkill_1?$AA@
CONST	SEGMENT
??_C@_0P@PIFDIEGK@AEComboSkill_1?$AA@ DB 'AEComboSkill_1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MBDBNJCL@AEComboEnable?$AA@
CONST	SEGMENT
??_C@_0O@MBDBNJCL@AEComboEnable?$AA@ DB 'AEComboEnable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HODOKAKC@DWComboSkill_3?$AA@
CONST	SEGMENT
??_C@_0P@HODOKAKC@DWComboSkill_3?$AA@ DB 'DWComboSkill_3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GHCFJBOD@DWComboSkill_2?$AA@
CONST	SEGMENT
??_C@_0P@GHCFJBOD@DWComboSkill_2?$AA@ DB 'DWComboSkill_2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EMAIMCCA@DWComboSkill_1?$AA@
CONST	SEGMENT
??_C@_0P@EMAIMCCA@DWComboSkill_1?$AA@ DB 'DWComboSkill_1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JBMJKENH@DWComboEnable?$AA@
CONST	SEGMENT
??_C@_0O@JBMJKENH@DWComboEnable?$AA@ DB 'DWComboEnable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06MLPMCPDE@ExTeam?$AA@
CONST	SEGMENT
??_C@_06MLPMCPDE@ExTeam?$AA@ DB 'ExTeam', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_File$ = 8						; size = 4
?Read@ComboCustom@@QAEXPAD@Z PROC			; ComboCustom::Read
; _this$ = ecx

; 95   : {

  00250	55		 push	 ebp
  00251	8b ec		 mov	 ebp, esp
  00253	83 ec 44	 sub	 esp, 68			; 00000044H
  00256	53		 push	 ebx
  00257	56		 push	 esi
  00258	57		 push	 edi
  00259	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 96   : 	this->Enable = GetPrivateProfileInt("ExTeam","Enable",0,File);

  0025c	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  0025f	50		 push	 eax
  00260	6a 00		 push	 0
  00262	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  00267	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  0026c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00272	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00275	89 01		 mov	 DWORD PTR [ecx], eax

; 97   : 
; 98   : 	this->DWComboEnable = GetPrivateProfileInt("ExTeam","DWComboEnable",0,File);

  00277	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  0027a	50		 push	 eax
  0027b	6a 00		 push	 0
  0027d	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JBMJKENH@DWComboEnable?$AA@
  00282	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00287	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0028d	85 c0		 test	 eax, eax
  0028f	0f 95 c1	 setne	 cl
  00292	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00295	88 4a 04	 mov	 BYTE PTR [edx+4], cl

; 99   : 	this->DWComboSkill_1 = GetPrivateProfileInt("ExTeam","DWComboSkill_1",0,File);

  00298	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  0029b	50		 push	 eax
  0029c	6a 00		 push	 0
  0029e	68 00 00 00 00	 push	 OFFSET ??_C@_0P@EMAIMCCA@DWComboSkill_1?$AA@
  002a3	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  002a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  002ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002b1	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 100  : 	this->DWComboSkill_2 = GetPrivateProfileInt("ExTeam","DWComboSkill_2",0,File);

  002b4	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  002b7	50		 push	 eax
  002b8	6a 00		 push	 0
  002ba	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GHCFJBOD@DWComboSkill_2?$AA@
  002bf	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  002c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  002ca	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002cd	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 101  : 	this->DWComboSkill_3 = GetPrivateProfileInt("ExTeam","DWComboSkill_3",0,File);

  002d0	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  002d3	50		 push	 eax
  002d4	6a 00		 push	 0
  002d6	68 00 00 00 00	 push	 OFFSET ??_C@_0P@HODOKAKC@DWComboSkill_3?$AA@
  002db	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  002e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  002e6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002e9	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 102  : 
; 103  : 	this->AEComboEnable = GetPrivateProfileInt("ExTeam","AEComboEnable",0,File);

  002ec	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  002ef	50		 push	 eax
  002f0	6a 00		 push	 0
  002f2	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MBDBNJCL@AEComboEnable?$AA@
  002f7	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  002fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00302	85 c0		 test	 eax, eax
  00304	0f 95 c1	 setne	 cl
  00307	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0030a	88 4a 14	 mov	 BYTE PTR [edx+20], cl

; 104  : 	this->AEComboSkill_1 = GetPrivateProfileInt("ExTeam","AEComboSkill_1",0,File);

  0030d	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  00310	50		 push	 eax
  00311	6a 00		 push	 0
  00313	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PIFDIEGK@AEComboSkill_1?$AA@
  00318	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  0031d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00323	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00326	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 105  : 	this->AEComboSkill_2 = GetPrivateProfileInt("ExTeam","AEComboSkill_2",0,File);

  00329	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  0032c	50		 push	 eax
  0032d	6a 00		 push	 0
  0032f	68 00 00 00 00	 push	 OFFSET ??_C@_0P@NDHONHKJ@AEComboSkill_2?$AA@
  00334	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00339	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0033f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00342	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 106  : 	this->AEComboSkill_3 = GetPrivateProfileInt("ExTeam","AEComboSkill_3",0,File);

  00345	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  00348	50		 push	 eax
  00349	6a 00		 push	 0
  0034b	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MKGFOGOI@AEComboSkill_3?$AA@
  00350	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00355	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0035b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0035e	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 107  : 
; 108  : 	this->SUMComboEnable = GetPrivateProfileInt("ExTeam","SUMComboEnable",0,File);

  00361	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  00364	50		 push	 eax
  00365	6a 00		 push	 0
  00367	68 00 00 00 00	 push	 OFFSET ??_C@_0P@HNKAENFK@SUMComboEnable?$AA@
  0036c	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00371	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00377	85 c0		 test	 eax, eax
  00379	0f 95 c1	 setne	 cl
  0037c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0037f	88 4a 24	 mov	 BYTE PTR [edx+36], cl

; 109  : 	this->SUMComboSkill_1 = GetPrivateProfileInt("ExTeam","SUMComboSkill_1",0,File);

  00382	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  00385	50		 push	 eax
  00386	6a 00		 push	 0
  00388	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@NPONFEFE@SUMComboSkill_1?$AA@
  0038d	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00392	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00398	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0039b	89 41 28	 mov	 DWORD PTR [ecx+40], eax

; 110  : 	this->SUMComboSkill_2 = GetPrivateProfileInt("ExTeam","SUMComboSkill_2",0,File);

  0039e	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  003a1	50		 push	 eax
  003a2	6a 00		 push	 0
  003a4	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@PEMAAHJH@SUMComboSkill_2?$AA@
  003a9	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  003ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  003b4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003b7	89 41 2c	 mov	 DWORD PTR [ecx+44], eax

; 111  : 	this->SUMComboSkill_3 = GetPrivateProfileInt("ExTeam","SUMComboSkill_3",0,File);

  003ba	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  003bd	50		 push	 eax
  003be	6a 00		 push	 0
  003c0	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@ONNLDGNG@SUMComboSkill_3?$AA@
  003c5	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  003ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  003d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003d3	89 41 30	 mov	 DWORD PTR [ecx+48], eax

; 112  : 
; 113  : 	this->MGComboEnable = GetPrivateProfileInt("ExTeam","MGComboEnable",0,File);

  003d6	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  003d9	50		 push	 eax
  003da	6a 00		 push	 0
  003dc	68 00 00 00 00	 push	 OFFSET ??_C@_0O@ILJIPNEN@MGComboEnable?$AA@
  003e1	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  003e6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  003ec	85 c0		 test	 eax, eax
  003ee	0f 95 c1	 setne	 cl
  003f1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  003f4	88 4a 34	 mov	 BYTE PTR [edx+52], cl

; 114  : 	this->MGComboSkill_1 = GetPrivateProfileInt("ExTeam","MGComboSkill_1",0,File);

  003f7	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  003fa	50		 push	 eax
  003fb	6a 00		 push	 0
  003fd	68 00 00 00 00	 push	 OFFSET ??_C@_0P@FMMIOJCD@MGComboSkill_1?$AA@
  00402	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00407	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0040d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00410	89 41 38	 mov	 DWORD PTR [ecx+56], eax

; 115  : 	this->MGComboSkill_2 = GetPrivateProfileInt("ExTeam","MGComboSkill_2",0,File);

  00413	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  00416	50		 push	 eax
  00417	6a 00		 push	 0
  00419	68 00 00 00 00	 push	 OFFSET ??_C@_0P@HHOFLKOA@MGComboSkill_2?$AA@
  0041e	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00423	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00429	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0042c	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 116  : 	this->MGComboSkill_3 = GetPrivateProfileInt("ExTeam","MGComboSkill_3",0,File);

  0042f	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  00432	50		 push	 eax
  00433	6a 00		 push	 0
  00435	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GOPOILKB@MGComboSkill_3?$AA@
  0043a	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  0043f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00445	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00448	89 41 40	 mov	 DWORD PTR [ecx+64], eax

; 117  : 
; 118  : 	this->DLComboEnable = GetPrivateProfileInt("ExTeam","DLComboEnable",0,File);

  0044b	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  0044e	50		 push	 eax
  0044f	6a 00		 push	 0
  00451	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MCAHLNKO@DLComboEnable?$AA@
  00456	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  0045b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00461	85 c0		 test	 eax, eax
  00463	0f 95 c1	 setne	 cl
  00466	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00469	88 4a 44	 mov	 BYTE PTR [edx+68], cl

; 119  : 	this->DLComboSkill_1 = GetPrivateProfileInt("ExTeam","DLComboSkill_1",0,File);

  0046c	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  0046f	50		 push	 eax
  00470	6a 00		 push	 0
  00472	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GFICMFKB@DLComboSkill_1?$AA@
  00477	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  0047c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00482	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00485	89 41 48	 mov	 DWORD PTR [ecx+72], eax

; 120  : 	this->DLComboSkill_2 = GetPrivateProfileInt("ExTeam","DLComboSkill_2",0,File);

  00488	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  0048b	50		 push	 eax
  0048c	6a 00		 push	 0
  0048e	68 00 00 00 00	 push	 OFFSET ??_C@_0P@EOKPJGGC@DLComboSkill_2?$AA@
  00493	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00498	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0049e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004a1	89 41 4c	 mov	 DWORD PTR [ecx+76], eax

; 121  : 	this->DLComboSkill_3 = GetPrivateProfileInt("ExTeam","DLComboSkill_3",0,File);

  004a4	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  004a7	50		 push	 eax
  004a8	6a 00		 push	 0
  004aa	68 00 00 00 00	 push	 OFFSET ??_C@_0P@FHLEKHCD@DLComboSkill_3?$AA@
  004af	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  004b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  004ba	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004bd	89 41 50	 mov	 DWORD PTR [ecx+80], eax

; 122  : 
; 123  : 	this->RFComboEnable = GetPrivateProfileInt("ExTeam","RFComboEnable",0,File);

  004c0	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  004c3	50		 push	 eax
  004c4	6a 00		 push	 0
  004c6	68 00 00 00 00	 push	 OFFSET ??_C@_0O@GGCIKMFC@RFComboEnable?$AA@
  004cb	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  004d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  004d6	85 c0		 test	 eax, eax
  004d8	0f 95 c1	 setne	 cl
  004db	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  004de	88 4a 54	 mov	 BYTE PTR [edx+84], cl

; 124  : 	this->RFComboSkill_1 = GetPrivateProfileInt("ExTeam","RFComboSkill_1",0,File);

  004e1	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  004e4	50		 push	 eax
  004e5	6a 00		 push	 0
  004e7	68 00 00 00 00	 push	 OFFSET ??_C@_0P@NBCNFEIH@RFComboSkill_1?$AA@
  004ec	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  004f1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  004f7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004fa	89 41 58	 mov	 DWORD PTR [ecx+88], eax

; 125  : 	this->RFComboSkill_2 = GetPrivateProfileInt("ExTeam","RFComboSkill_2",0,File);

  004fd	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  00500	50		 push	 eax
  00501	6a 00		 push	 0
  00503	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PKAAAHEE@RFComboSkill_2?$AA@
  00508	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  0050d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00513	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00516	89 41 5c	 mov	 DWORD PTR [ecx+92], eax

; 126  : 	this->RFComboSkill_3 = GetPrivateProfileInt("ExTeam","RFComboSkill_3",0,File);

  00519	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  0051c	50		 push	 eax
  0051d	6a 00		 push	 0
  0051f	68 00 00 00 00	 push	 OFFSET ??_C@_0P@ODBLDGAF@RFComboSkill_3?$AA@
  00524	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00529	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0052f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00532	89 41 60	 mov	 DWORD PTR [ecx+96], eax

; 127  : 
; 128  : 	// ----
; 129  : 
; 130  : 	this->Master_DWComboSkill_1 = GetPrivateProfileInt("ExTeam","Master_DWComboSkill_1",0,File);

  00535	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  00538	50		 push	 eax
  00539	6a 00		 push	 0
  0053b	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@PDECILOM@Master_DWComboSkill_1?$AA@
  00540	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00545	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0054b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0054e	89 41 64	 mov	 DWORD PTR [ecx+100], eax

; 131  : 	this->Master_DWComboSkill_2 = GetPrivateProfileInt("ExTeam","Master_DWComboSkill_2",0,File);

  00551	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  00554	50		 push	 eax
  00555	6a 00		 push	 0
  00557	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@NIGPNICP@Master_DWComboSkill_2?$AA@
  0055c	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00561	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00567	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0056a	89 41 68	 mov	 DWORD PTR [ecx+104], eax

; 132  : 	this->Master_DWComboSkill_3 = GetPrivateProfileInt("ExTeam","Master_DWComboSkill_3",0,File);

  0056d	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  00570	50		 push	 eax
  00571	6a 00		 push	 0
  00573	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@MBHEOJGO@Master_DWComboSkill_3?$AA@
  00578	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  0057d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00583	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00586	89 41 6c	 mov	 DWORD PTR [ecx+108], eax

; 133  : 
; 134  : 	this->Master_AEComboSkill_1 = GetPrivateProfileInt("ExTeam","Master_AEComboSkill_1",0,File);

  00589	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  0058c	50		 push	 eax
  0058d	6a 00		 push	 0
  0058f	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EHBJMNKG@Master_AEComboSkill_1?$AA@
  00594	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00599	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0059f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005a2	89 41 70	 mov	 DWORD PTR [ecx+112], eax

; 135  : 	this->Master_AEComboSkill_2 = GetPrivateProfileInt("ExTeam","Master_AEComboSkill_2",0,File);

  005a5	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  005a8	50		 push	 eax
  005a9	6a 00		 push	 0
  005ab	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@GMDEJOGF@Master_AEComboSkill_2?$AA@
  005b0	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  005b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  005bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005be	89 41 74	 mov	 DWORD PTR [ecx+116], eax

; 136  : 	this->Master_AEComboSkill_3 = GetPrivateProfileInt("ExTeam","Master_AEComboSkill_3",0,File);

  005c1	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  005c4	50		 push	 eax
  005c5	6a 00		 push	 0
  005c7	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@HFCPKPCE@Master_AEComboSkill_3?$AA@
  005cc	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  005d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  005d7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005da	89 41 78	 mov	 DWORD PTR [ecx+120], eax

; 137  : 
; 138  : 	this->Master_SUMComboSkill_1 = GetPrivateProfileInt("ExTeam","Master_SUMComboSkill_1",0,File);

  005dd	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  005e0	50		 push	 eax
  005e1	6a 00		 push	 0
  005e3	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@ENIAJAIG@Master_SUMComboSkill_1?$AA@
  005e8	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  005ed	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  005f3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005f6	89 41 7c	 mov	 DWORD PTR [ecx+124], eax

; 139  : 	this->Master_SUMComboSkill_2 = GetPrivateProfileInt("ExTeam","Master_SUMComboSkill_2",0,File);

  005f9	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  005fc	50		 push	 eax
  005fd	6a 00		 push	 0
  005ff	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@GGKNMDEF@Master_SUMComboSkill_2?$AA@
  00604	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00609	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0060f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00612	89 81 80 00 00
	00		 mov	 DWORD PTR [ecx+128], eax

; 140  : 	this->Master_SUMComboSkill_3 = GetPrivateProfileInt("ExTeam","Master_SUMComboSkill_3",0,File);

  00618	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  0061b	50		 push	 eax
  0061c	6a 00		 push	 0
  0061e	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@HPLGPCAE@Master_SUMComboSkill_3?$AA@
  00623	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00628	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0062e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00631	89 81 84 00 00
	00		 mov	 DWORD PTR [ecx+132], eax

; 141  : 
; 142  : 	this->Master_MGComboSkill_1 = GetPrivateProfileInt("ExTeam","Master_MGComboSkill_1",0,File);

  00637	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  0063a	50		 push	 eax
  0063b	6a 00		 push	 0
  0063d	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@ODICKAOP@Master_MGComboSkill_1?$AA@
  00642	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00647	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0064d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00650	89 81 88 00 00
	00		 mov	 DWORD PTR [ecx+136], eax

; 143  : 	this->Master_MGComboSkill_2 = GetPrivateProfileInt("ExTeam","Master_MGComboSkill_2",0,File);

  00656	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  00659	50		 push	 eax
  0065a	6a 00		 push	 0
  0065c	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@MIKPPDCM@Master_MGComboSkill_2?$AA@
  00661	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00666	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0066c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0066f	89 81 8c 00 00
	00		 mov	 DWORD PTR [ecx+140], eax

; 144  : 	this->Master_MGComboSkill_3 = GetPrivateProfileInt("ExTeam","Master_MGComboSkill_3",0,File);

  00675	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  00678	50		 push	 eax
  00679	6a 00		 push	 0
  0067b	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@NBLEMCGN@Master_MGComboSkill_3?$AA@
  00680	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00685	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0068b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0068e	89 81 90 00 00
	00		 mov	 DWORD PTR [ecx+144], eax

; 145  : 
; 146  : 	this->Master_DLComboSkill_1 = GetPrivateProfileInt("ExTeam","Master_DLComboSkill_1",0,File);

  00694	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  00697	50		 push	 eax
  00698	6a 00		 push	 0
  0069a	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@NKMIIMGN@Master_DLComboSkill_1?$AA@
  0069f	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  006a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  006aa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006ad	89 81 94 00 00
	00		 mov	 DWORD PTR [ecx+148], eax

; 147  : 	this->Master_DLComboSkill_2 = GetPrivateProfileInt("ExTeam","Master_DLComboSkill_2",0,File);

  006b3	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  006b6	50		 push	 eax
  006b7	6a 00		 push	 0
  006b9	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@PBOFNPKO@Master_DLComboSkill_2?$AA@
  006be	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  006c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  006c9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006cc	89 81 98 00 00
	00		 mov	 DWORD PTR [ecx+152], eax

; 148  : 	this->Master_DLComboSkill_3 = GetPrivateProfileInt("ExTeam","Master_DLComboSkill_3",0,File);

  006d2	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  006d5	50		 push	 eax
  006d6	6a 00		 push	 0
  006d8	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@OIPOOOOP@Master_DLComboSkill_3?$AA@
  006dd	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  006e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  006e8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006eb	89 81 9c 00 00
	00		 mov	 DWORD PTR [ecx+156], eax

; 149  : 
; 150  : 	this->Master_RFComboSkill_1 = GetPrivateProfileInt("ExTeam","Master_RFComboSkill_1",0,File);

  006f1	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  006f4	50		 push	 eax
  006f5	6a 00		 push	 0
  006f7	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@GOGHBNEL@Master_RFComboSkill_1?$AA@
  006fc	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00701	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00707	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0070a	89 81 a0 00 00
	00		 mov	 DWORD PTR [ecx+160], eax

; 151  : 	this->Master_RFComboSkill_2 = GetPrivateProfileInt("ExTeam","Master_RFComboSkill_2",0,File);

  00710	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  00713	50		 push	 eax
  00714	6a 00		 push	 0
  00716	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EFEKEOII@Master_RFComboSkill_2?$AA@
  0071b	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00720	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00726	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00729	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 152  : 	this->Master_RFComboSkill_3 = GetPrivateProfileInt("ExTeam","Master_RFComboSkill_3",0,File);

  0072f	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  00732	50		 push	 eax
  00733	6a 00		 push	 0
  00735	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@FMFBHPMJ@Master_RFComboSkill_3?$AA@
  0073a	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  0073f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00745	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00748	89 81 a8 00 00
	00		 mov	 DWORD PTR [ecx+168], eax

; 153  : }

  0074e	5f		 pop	 edi
  0074f	5e		 pop	 esi
  00750	5b		 pop	 ebx
  00751	8b e5		 mov	 esp, ebp
  00753	5d		 pop	 ebp
  00754	c2 04 00	 ret	 4
?Read@ComboCustom@@QAEXPAD@Z ENDP			; ComboCustom::Read
_TEXT	ENDS
PUBLIC	?RageFighter@ComboCustom@@QAEHH@Z		; ComboCustom::RageFighter
PUBLIC	?Summoner@ComboCustom@@QAEHH@Z			; ComboCustom::Summoner
PUBLIC	?DarkLord@ComboCustom@@QAEHH@Z			; ComboCustom::DarkLord
PUBLIC	?MagicGladiator@ComboCustom@@QAEHH@Z		; ComboCustom::MagicGladiator
PUBLIC	?Elf@ComboCustom@@QAEHH@Z			; ComboCustom::Elf
PUBLIC	?DarkWizard@ComboCustom@@QAEHH@Z		; ComboCustom::DarkWizard
PUBLIC	?Main@ComboCustom@@QAEHHH@Z			; ComboCustom::Main
EXTRN	?CheckUser@CExLicense@@QAE_NH@Z:PROC		; CExLicense::CheckUser
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv77 = -76						; size = 4
_lpObj$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_skillnumber$ = 12					; size = 4
?Main@ComboCustom@@QAEHHH@Z PROC			; ComboCustom::Main
; _this$ = ecx

; 156  : {

  00760	55		 push	 ebp
  00761	8b ec		 mov	 ebp, esp
  00763	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00766	53		 push	 ebx
  00767	56		 push	 esi
  00768	57		 push	 edi
  00769	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 157  : 	if(!this->Enable)

  0076c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0076f	83 38 00	 cmp	 DWORD PTR [eax], 0
  00772	75 0a		 jne	 SHORT $LN12@Main

; 158  : 	{
; 159  : 		return -2;

  00774	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  00779	e9 bf 00 00 00	 jmp	 $LN13@Main
$LN12@Main:

; 160  : 	}
; 161  : 
; 162  : 	LPOBJ lpObj = &gObj[aIndex];

  0077e	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00781	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00787	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0078d	89 45 f8	 mov	 DWORD PTR _lpObj$[ebp], eax

; 163  : 
; 164  : 	if(g_ExLicense.CheckUser(eExUB::NSGames))

  00790	6a 51		 push	 81			; 00000051H
  00792	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  00797	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  0079c	0f b6 c0	 movzx	 eax, al
  0079f	85 c0		 test	 eax, eax
  007a1	74 18		 je	 SHORT $LN11@Main

; 165  : 	{
; 166  : 		if(!lpObj->ChangeUP3rd)

  007a3	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  007a6	0f b6 88 bc 00
	00 00		 movzx	 ecx, BYTE PTR [eax+188]
  007ad	85 c9		 test	 ecx, ecx
  007af	75 0a		 jne	 SHORT $LN11@Main

; 167  : 		{
; 168  : 			return -2;

  007b1	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  007b6	e9 82 00 00 00	 jmp	 $LN13@Main
$LN11@Main:

; 169  : 		}
; 170  : 	}
; 171  : 
; 172  : 	switch(lpObj->Class)

  007bb	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  007be	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  007c5	89 4d b4	 mov	 DWORD PTR tv77[ebp], ecx
  007c8	83 7d b4 06	 cmp	 DWORD PTR tv77[ebp], 6
  007cc	77 6f		 ja	 SHORT $LN13@Main
  007ce	8b 55 b4	 mov	 edx, DWORD PTR tv77[ebp]
  007d1	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN15@Main[edx*4]
$LN7@Main:

; 173  : 	{
; 174  : 	case CLASS_WIZARD:
; 175  : 		{
; 176  : 			return this->DarkWizard(skillnumber);

  007d8	8b 45 0c	 mov	 eax, DWORD PTR _skillnumber$[ebp]
  007db	50		 push	 eax
  007dc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  007df	e8 00 00 00 00	 call	 ?DarkWizard@ComboCustom@@QAEHH@Z ; ComboCustom::DarkWizard
  007e4	eb 57		 jmp	 SHORT $LN13@Main

; 177  : 		}
; 178  : 		break;

  007e6	eb 55		 jmp	 SHORT $LN13@Main
$LN6@Main:

; 179  : 	case CLASS_KNIGHT:
; 180  : 		{
; 181  : 			//return this->DarkKnight(skillnumber);
; 182  : 			return -2;

  007e8	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  007ed	eb 4e		 jmp	 SHORT $LN13@Main

; 183  : 		}
; 184  : 		break;

  007ef	eb 4c		 jmp	 SHORT $LN13@Main
$LN5@Main:

; 185  : 	case CLASS_ELF:
; 186  : 		{
; 187  : 			return this->Elf(skillnumber);

  007f1	8b 45 0c	 mov	 eax, DWORD PTR _skillnumber$[ebp]
  007f4	50		 push	 eax
  007f5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  007f8	e8 00 00 00 00	 call	 ?Elf@ComboCustom@@QAEHH@Z ; ComboCustom::Elf
  007fd	eb 3e		 jmp	 SHORT $LN13@Main

; 188  : 		}
; 189  : 		break;

  007ff	eb 3c		 jmp	 SHORT $LN13@Main
$LN4@Main:

; 190  : 	case CLASS_MAGUMSA:
; 191  : 		{
; 192  : 			return this->MagicGladiator(skillnumber);

  00801	8b 45 0c	 mov	 eax, DWORD PTR _skillnumber$[ebp]
  00804	50		 push	 eax
  00805	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00808	e8 00 00 00 00	 call	 ?MagicGladiator@ComboCustom@@QAEHH@Z ; ComboCustom::MagicGladiator
  0080d	eb 2e		 jmp	 SHORT $LN13@Main

; 193  : 		}
; 194  : 		break;

  0080f	eb 2c		 jmp	 SHORT $LN13@Main
$LN3@Main:

; 195  : 	case CLASS_DARKLORD:
; 196  : 		{
; 197  : 			return this->DarkLord(skillnumber);

  00811	8b 45 0c	 mov	 eax, DWORD PTR _skillnumber$[ebp]
  00814	50		 push	 eax
  00815	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00818	e8 00 00 00 00	 call	 ?DarkLord@ComboCustom@@QAEHH@Z ; ComboCustom::DarkLord
  0081d	eb 1e		 jmp	 SHORT $LN13@Main

; 198  : 		}
; 199  : 		break;

  0081f	eb 1c		 jmp	 SHORT $LN13@Main
$LN2@Main:

; 200  : 	case CLASS_SUMMONER:
; 201  : 		{
; 202  : 			return this->Summoner(skillnumber);

  00821	8b 45 0c	 mov	 eax, DWORD PTR _skillnumber$[ebp]
  00824	50		 push	 eax
  00825	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00828	e8 00 00 00 00	 call	 ?Summoner@ComboCustom@@QAEHH@Z ; ComboCustom::Summoner
  0082d	eb 0e		 jmp	 SHORT $LN13@Main

; 203  : 		}
; 204  : 		break;

  0082f	eb 0c		 jmp	 SHORT $LN13@Main
$LN1@Main:

; 205  : 	case CLASS_MONK:
; 206  : 		{
; 207  : 			return this->RageFighter(skillnumber);

  00831	8b 45 0c	 mov	 eax, DWORD PTR _skillnumber$[ebp]
  00834	50		 push	 eax
  00835	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00838	e8 00 00 00 00	 call	 ?RageFighter@ComboCustom@@QAEHH@Z ; ComboCustom::RageFighter
$LN13@Main:

; 208  : 		}
; 209  : 		break;
; 210  : 	}
; 211  : }

  0083d	5f		 pop	 edi
  0083e	5e		 pop	 esi
  0083f	5b		 pop	 ebx
  00840	8b e5		 mov	 esp, ebp
  00842	5d		 pop	 ebp
  00843	c2 08 00	 ret	 8
  00846	8b ff		 npad	 2
$LN15@Main:
  00848	00 00 00 00	 DD	 $LN7@Main
  0084c	00 00 00 00	 DD	 $LN6@Main
  00850	00 00 00 00	 DD	 $LN5@Main
  00854	00 00 00 00	 DD	 $LN4@Main
  00858	00 00 00 00	 DD	 $LN3@Main
  0085c	00 00 00 00	 DD	 $LN2@Main
  00860	00 00 00 00	 DD	 $LN1@Main
?Main@ComboCustom@@QAEHHH@Z ENDP			; ComboCustom::Main
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
_skillnumber$ = 8					; size = 4
?DarkWizard@ComboCustom@@QAEHH@Z PROC			; ComboCustom::DarkWizard
; _this$ = ecx

; 214  : {

  00870	55		 push	 ebp
  00871	8b ec		 mov	 ebp, esp
  00873	83 ec 44	 sub	 esp, 68			; 00000044H
  00876	53		 push	 ebx
  00877	56		 push	 esi
  00878	57		 push	 edi
  00879	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 215  : 	if(!this->DWComboEnable)

  0087c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0087f	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00883	85 c9		 test	 ecx, ecx
  00885	75 05		 jne	 SHORT $LN11@DarkWizard

; 216  : 	{
; 217  : 		return -1;

  00887	83 c8 ff	 or	 eax, -1
  0088a	eb 71		 jmp	 SHORT $LN12@DarkWizard
$LN11@DarkWizard:

; 218  : 	}
; 219  : 
; 220  : 	if(skillnumber == this->DWComboSkill_1)

  0088c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0088f	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00892	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00895	75 06		 jne	 SHORT $LN10@DarkWizard

; 221  : 	{
; 222  : 		return 0;

  00897	33 c0		 xor	 eax, eax
  00899	eb 62		 jmp	 SHORT $LN12@DarkWizard
  0089b	eb 26		 jmp	 SHORT $LN9@DarkWizard
$LN10@DarkWizard:

; 223  : 	}
; 224  : 	else if(skillnumber == this->DWComboSkill_2)

  0089d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  008a0	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  008a3	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  008a6	75 09		 jne	 SHORT $LN8@DarkWizard

; 225  : 	{
; 226  : 		return 1;

  008a8	b8 01 00 00 00	 mov	 eax, 1
  008ad	eb 4e		 jmp	 SHORT $LN12@DarkWizard
  008af	eb 12		 jmp	 SHORT $LN9@DarkWizard
$LN8@DarkWizard:

; 227  : 	}
; 228  : 	else if(skillnumber == this->DWComboSkill_3)

  008b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  008b4	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  008b7	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  008ba	75 07		 jne	 SHORT $LN9@DarkWizard

; 229  : 	{
; 230  : 		return 1;

  008bc	b8 01 00 00 00	 mov	 eax, 1
  008c1	eb 3a		 jmp	 SHORT $LN12@DarkWizard
$LN9@DarkWizard:

; 231  : 	}
; 232  : 
; 233  : 	if(skillnumber == this->Master_DWComboSkill_1)

  008c3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  008c6	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  008c9	3b 48 64	 cmp	 ecx, DWORD PTR [eax+100]
  008cc	75 06		 jne	 SHORT $LN5@DarkWizard

; 234  : 	{
; 235  : 		return 0;

  008ce	33 c0		 xor	 eax, eax
  008d0	eb 2b		 jmp	 SHORT $LN12@DarkWizard
  008d2	eb 26		 jmp	 SHORT $LN4@DarkWizard
$LN5@DarkWizard:

; 236  : 	}
; 237  : 	else if(skillnumber == this->Master_DWComboSkill_2)

  008d4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  008d7	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  008da	3b 48 68	 cmp	 ecx, DWORD PTR [eax+104]
  008dd	75 09		 jne	 SHORT $LN3@DarkWizard

; 238  : 	{
; 239  : 		return 1;

  008df	b8 01 00 00 00	 mov	 eax, 1
  008e4	eb 17		 jmp	 SHORT $LN12@DarkWizard
  008e6	eb 12		 jmp	 SHORT $LN4@DarkWizard
$LN3@DarkWizard:

; 240  : 	}
; 241  : 	else if(skillnumber == this->Master_DWComboSkill_3)

  008e8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  008eb	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  008ee	3b 48 6c	 cmp	 ecx, DWORD PTR [eax+108]
  008f1	75 07		 jne	 SHORT $LN4@DarkWizard

; 242  : 	{
; 243  : 		return 1;

  008f3	b8 01 00 00 00	 mov	 eax, 1
  008f8	eb 03		 jmp	 SHORT $LN12@DarkWizard
$LN4@DarkWizard:

; 244  : 	}
; 245  : 
; 246  : 	return -1;

  008fa	83 c8 ff	 or	 eax, -1
$LN12@DarkWizard:

; 247  : }

  008fd	5f		 pop	 edi
  008fe	5e		 pop	 esi
  008ff	5b		 pop	 ebx
  00900	8b e5		 mov	 esp, ebp
  00902	5d		 pop	 ebp
  00903	c2 04 00	 ret	 4
?DarkWizard@ComboCustom@@QAEHH@Z ENDP			; ComboCustom::DarkWizard
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
_skillnumber$ = 8					; size = 4
?Elf@ComboCustom@@QAEHH@Z PROC				; ComboCustom::Elf
; _this$ = ecx

; 250  : {

  00910	55		 push	 ebp
  00911	8b ec		 mov	 ebp, esp
  00913	83 ec 44	 sub	 esp, 68			; 00000044H
  00916	53		 push	 ebx
  00917	56		 push	 esi
  00918	57		 push	 edi
  00919	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 251  : 	if(!this->AEComboEnable)

  0091c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0091f	0f b6 48 14	 movzx	 ecx, BYTE PTR [eax+20]
  00923	85 c9		 test	 ecx, ecx
  00925	75 05		 jne	 SHORT $LN11@Elf

; 252  : 	{
; 253  : 		return -1;

  00927	83 c8 ff	 or	 eax, -1
  0092a	eb 71		 jmp	 SHORT $LN12@Elf
$LN11@Elf:

; 254  : 	}
; 255  : 
; 256  : 	if(skillnumber == this->AEComboSkill_1)

  0092c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0092f	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00932	3b 48 18	 cmp	 ecx, DWORD PTR [eax+24]
  00935	75 06		 jne	 SHORT $LN10@Elf

; 257  : 	{
; 258  : 		return 0;

  00937	33 c0		 xor	 eax, eax
  00939	eb 62		 jmp	 SHORT $LN12@Elf
  0093b	eb 26		 jmp	 SHORT $LN9@Elf
$LN10@Elf:

; 259  : 	}
; 260  : 	else if(skillnumber == this->AEComboSkill_2)

  0093d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00940	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00943	3b 48 1c	 cmp	 ecx, DWORD PTR [eax+28]
  00946	75 09		 jne	 SHORT $LN8@Elf

; 261  : 	{
; 262  : 		return 1;

  00948	b8 01 00 00 00	 mov	 eax, 1
  0094d	eb 4e		 jmp	 SHORT $LN12@Elf
  0094f	eb 12		 jmp	 SHORT $LN9@Elf
$LN8@Elf:

; 263  : 	}
; 264  : 	else if(skillnumber == this->AEComboSkill_3)

  00951	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00954	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00957	3b 48 20	 cmp	 ecx, DWORD PTR [eax+32]
  0095a	75 07		 jne	 SHORT $LN9@Elf

; 265  : 	{
; 266  : 		return 1;

  0095c	b8 01 00 00 00	 mov	 eax, 1
  00961	eb 3a		 jmp	 SHORT $LN12@Elf
$LN9@Elf:

; 267  : 	}
; 268  : 
; 269  : 	if(skillnumber == this->Master_AEComboSkill_1)

  00963	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00966	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00969	3b 48 70	 cmp	 ecx, DWORD PTR [eax+112]
  0096c	75 06		 jne	 SHORT $LN5@Elf

; 270  : 	{
; 271  : 		return 0;

  0096e	33 c0		 xor	 eax, eax
  00970	eb 2b		 jmp	 SHORT $LN12@Elf
  00972	eb 26		 jmp	 SHORT $LN4@Elf
$LN5@Elf:

; 272  : 	}
; 273  : 	else if(skillnumber == this->Master_AEComboSkill_2)

  00974	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00977	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  0097a	3b 48 74	 cmp	 ecx, DWORD PTR [eax+116]
  0097d	75 09		 jne	 SHORT $LN3@Elf

; 274  : 	{
; 275  : 		return 1;

  0097f	b8 01 00 00 00	 mov	 eax, 1
  00984	eb 17		 jmp	 SHORT $LN12@Elf
  00986	eb 12		 jmp	 SHORT $LN4@Elf
$LN3@Elf:

; 276  : 	}
; 277  : 	else if(skillnumber == this->Master_AEComboSkill_3)

  00988	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0098b	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  0098e	3b 48 78	 cmp	 ecx, DWORD PTR [eax+120]
  00991	75 07		 jne	 SHORT $LN4@Elf

; 278  : 	{
; 279  : 		return 1;

  00993	b8 01 00 00 00	 mov	 eax, 1
  00998	eb 03		 jmp	 SHORT $LN12@Elf
$LN4@Elf:

; 280  : 	}
; 281  : 
; 282  : 	return -1;

  0099a	83 c8 ff	 or	 eax, -1
$LN12@Elf:

; 283  : }

  0099d	5f		 pop	 edi
  0099e	5e		 pop	 esi
  0099f	5b		 pop	 ebx
  009a0	8b e5		 mov	 esp, ebp
  009a2	5d		 pop	 ebp
  009a3	c2 04 00	 ret	 4
?Elf@ComboCustom@@QAEHH@Z ENDP				; ComboCustom::Elf
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
_skillnumber$ = 8					; size = 4
?Summoner@ComboCustom@@QAEHH@Z PROC			; ComboCustom::Summoner
; _this$ = ecx

; 286  : {

  009b0	55		 push	 ebp
  009b1	8b ec		 mov	 ebp, esp
  009b3	83 ec 44	 sub	 esp, 68			; 00000044H
  009b6	53		 push	 ebx
  009b7	56		 push	 esi
  009b8	57		 push	 edi
  009b9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 287  : 	if(!this->SUMComboEnable)

  009bc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  009bf	0f b6 48 24	 movzx	 ecx, BYTE PTR [eax+36]
  009c3	85 c9		 test	 ecx, ecx
  009c5	75 05		 jne	 SHORT $LN11@Summoner

; 288  : 	{
; 289  : 		return -1;

  009c7	83 c8 ff	 or	 eax, -1
  009ca	eb 77		 jmp	 SHORT $LN12@Summoner
$LN11@Summoner:

; 290  : 	}
; 291  : 
; 292  : 	if(skillnumber == this->SUMComboSkill_1)

  009cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  009cf	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  009d2	3b 48 28	 cmp	 ecx, DWORD PTR [eax+40]
  009d5	75 06		 jne	 SHORT $LN10@Summoner

; 293  : 	{
; 294  : 		return 0;

  009d7	33 c0		 xor	 eax, eax
  009d9	eb 68		 jmp	 SHORT $LN12@Summoner
  009db	eb 26		 jmp	 SHORT $LN9@Summoner
$LN10@Summoner:

; 295  : 	}
; 296  : 	else if(skillnumber == this->SUMComboSkill_2)

  009dd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  009e0	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  009e3	3b 48 2c	 cmp	 ecx, DWORD PTR [eax+44]
  009e6	75 09		 jne	 SHORT $LN8@Summoner

; 297  : 	{
; 298  : 		return 1;

  009e8	b8 01 00 00 00	 mov	 eax, 1
  009ed	eb 54		 jmp	 SHORT $LN12@Summoner
  009ef	eb 12		 jmp	 SHORT $LN9@Summoner
$LN8@Summoner:

; 299  : 	}
; 300  : 	else if(skillnumber == this->SUMComboSkill_3)

  009f1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  009f4	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  009f7	3b 48 30	 cmp	 ecx, DWORD PTR [eax+48]
  009fa	75 07		 jne	 SHORT $LN9@Summoner

; 301  : 	{
; 302  : 		return 1;

  009fc	b8 01 00 00 00	 mov	 eax, 1
  00a01	eb 40		 jmp	 SHORT $LN12@Summoner
$LN9@Summoner:

; 303  : 	}
; 304  : 
; 305  : 	if(skillnumber == this->Master_SUMComboSkill_1)

  00a03	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a06	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00a09	3b 48 7c	 cmp	 ecx, DWORD PTR [eax+124]
  00a0c	75 06		 jne	 SHORT $LN5@Summoner

; 306  : 	{
; 307  : 		return 0;

  00a0e	33 c0		 xor	 eax, eax
  00a10	eb 31		 jmp	 SHORT $LN12@Summoner
  00a12	eb 2c		 jmp	 SHORT $LN4@Summoner
$LN5@Summoner:

; 308  : 	}
; 309  : 	else if(skillnumber == this->Master_SUMComboSkill_2)

  00a14	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a17	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00a1a	3b 88 80 00 00
	00		 cmp	 ecx, DWORD PTR [eax+128]
  00a20	75 09		 jne	 SHORT $LN3@Summoner

; 310  : 	{
; 311  : 		return 1;

  00a22	b8 01 00 00 00	 mov	 eax, 1
  00a27	eb 1a		 jmp	 SHORT $LN12@Summoner
  00a29	eb 15		 jmp	 SHORT $LN4@Summoner
$LN3@Summoner:

; 312  : 	}
; 313  : 	else if(skillnumber == this->Master_SUMComboSkill_3)

  00a2b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a2e	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00a31	3b 88 84 00 00
	00		 cmp	 ecx, DWORD PTR [eax+132]
  00a37	75 07		 jne	 SHORT $LN4@Summoner

; 314  : 	{
; 315  : 		return 1;

  00a39	b8 01 00 00 00	 mov	 eax, 1
  00a3e	eb 03		 jmp	 SHORT $LN12@Summoner
$LN4@Summoner:

; 316  : 	}
; 317  : 
; 318  : 	return -1;

  00a40	83 c8 ff	 or	 eax, -1
$LN12@Summoner:

; 319  : }

  00a43	5f		 pop	 edi
  00a44	5e		 pop	 esi
  00a45	5b		 pop	 ebx
  00a46	8b e5		 mov	 esp, ebp
  00a48	5d		 pop	 ebp
  00a49	c2 04 00	 ret	 4
?Summoner@ComboCustom@@QAEHH@Z ENDP			; ComboCustom::Summoner
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
_skillnumber$ = 8					; size = 4
?MagicGladiator@ComboCustom@@QAEHH@Z PROC		; ComboCustom::MagicGladiator
; _this$ = ecx

; 322  : {

  00a50	55		 push	 ebp
  00a51	8b ec		 mov	 ebp, esp
  00a53	83 ec 44	 sub	 esp, 68			; 00000044H
  00a56	53		 push	 ebx
  00a57	56		 push	 esi
  00a58	57		 push	 edi
  00a59	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 323  : 	if(!this->MGComboEnable)

  00a5c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a5f	0f b6 48 34	 movzx	 ecx, BYTE PTR [eax+52]
  00a63	85 c9		 test	 ecx, ecx
  00a65	75 05		 jne	 SHORT $LN11@MagicGladi

; 324  : 	{
; 325  : 		return -1;

  00a67	83 c8 ff	 or	 eax, -1
  00a6a	eb 7a		 jmp	 SHORT $LN12@MagicGladi
$LN11@MagicGladi:

; 326  : 	}
; 327  : 
; 328  : 	if(skillnumber == this->MGComboSkill_1)

  00a6c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a6f	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00a72	3b 48 38	 cmp	 ecx, DWORD PTR [eax+56]
  00a75	75 06		 jne	 SHORT $LN10@MagicGladi

; 329  : 	{
; 330  : 		return 0;

  00a77	33 c0		 xor	 eax, eax
  00a79	eb 6b		 jmp	 SHORT $LN12@MagicGladi
  00a7b	eb 26		 jmp	 SHORT $LN9@MagicGladi
$LN10@MagicGladi:

; 331  : 	}
; 332  : 	else if(skillnumber == this->MGComboSkill_2)

  00a7d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a80	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00a83	3b 48 3c	 cmp	 ecx, DWORD PTR [eax+60]
  00a86	75 09		 jne	 SHORT $LN8@MagicGladi

; 333  : 	{
; 334  : 		return 1;

  00a88	b8 01 00 00 00	 mov	 eax, 1
  00a8d	eb 57		 jmp	 SHORT $LN12@MagicGladi
  00a8f	eb 12		 jmp	 SHORT $LN9@MagicGladi
$LN8@MagicGladi:

; 335  : 	}
; 336  : 	else if(skillnumber == this->MGComboSkill_3)

  00a91	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a94	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00a97	3b 48 40	 cmp	 ecx, DWORD PTR [eax+64]
  00a9a	75 07		 jne	 SHORT $LN9@MagicGladi

; 337  : 	{
; 338  : 		return 1;

  00a9c	b8 01 00 00 00	 mov	 eax, 1
  00aa1	eb 43		 jmp	 SHORT $LN12@MagicGladi
$LN9@MagicGladi:

; 339  : 	}
; 340  : 
; 341  : 	if(skillnumber == this->Master_MGComboSkill_1)

  00aa3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00aa6	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00aa9	3b 88 88 00 00
	00		 cmp	 ecx, DWORD PTR [eax+136]
  00aaf	75 06		 jne	 SHORT $LN5@MagicGladi

; 342  : 	{
; 343  : 		return 0;

  00ab1	33 c0		 xor	 eax, eax
  00ab3	eb 31		 jmp	 SHORT $LN12@MagicGladi
  00ab5	eb 2c		 jmp	 SHORT $LN4@MagicGladi
$LN5@MagicGladi:

; 344  : 	}
; 345  : 	else if(skillnumber == this->Master_MGComboSkill_2)

  00ab7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00aba	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00abd	3b 88 8c 00 00
	00		 cmp	 ecx, DWORD PTR [eax+140]
  00ac3	75 09		 jne	 SHORT $LN3@MagicGladi

; 346  : 	{
; 347  : 		return 1;

  00ac5	b8 01 00 00 00	 mov	 eax, 1
  00aca	eb 1a		 jmp	 SHORT $LN12@MagicGladi
  00acc	eb 15		 jmp	 SHORT $LN4@MagicGladi
$LN3@MagicGladi:

; 348  : 	}
; 349  : 	else if(skillnumber == this->Master_MGComboSkill_3)

  00ace	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00ad1	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00ad4	3b 88 90 00 00
	00		 cmp	 ecx, DWORD PTR [eax+144]
  00ada	75 07		 jne	 SHORT $LN4@MagicGladi

; 350  : 	{
; 351  : 		return 1;

  00adc	b8 01 00 00 00	 mov	 eax, 1
  00ae1	eb 03		 jmp	 SHORT $LN12@MagicGladi
$LN4@MagicGladi:

; 352  : 	}
; 353  : 
; 354  : 	return -1;

  00ae3	83 c8 ff	 or	 eax, -1
$LN12@MagicGladi:

; 355  : }

  00ae6	5f		 pop	 edi
  00ae7	5e		 pop	 esi
  00ae8	5b		 pop	 ebx
  00ae9	8b e5		 mov	 esp, ebp
  00aeb	5d		 pop	 ebp
  00aec	c2 04 00	 ret	 4
?MagicGladiator@ComboCustom@@QAEHH@Z ENDP		; ComboCustom::MagicGladiator
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
_skillnumber$ = 8					; size = 4
?DarkLord@ComboCustom@@QAEHH@Z PROC			; ComboCustom::DarkLord
; _this$ = ecx

; 358  : {

  00af0	55		 push	 ebp
  00af1	8b ec		 mov	 ebp, esp
  00af3	83 ec 44	 sub	 esp, 68			; 00000044H
  00af6	53		 push	 ebx
  00af7	56		 push	 esi
  00af8	57		 push	 edi
  00af9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 359  : 	if(!this->DLComboEnable)

  00afc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00aff	0f b6 48 44	 movzx	 ecx, BYTE PTR [eax+68]
  00b03	85 c9		 test	 ecx, ecx
  00b05	75 05		 jne	 SHORT $LN11@DarkLord

; 360  : 	{
; 361  : 		return -1;

  00b07	83 c8 ff	 or	 eax, -1
  00b0a	eb 7a		 jmp	 SHORT $LN12@DarkLord
$LN11@DarkLord:

; 362  : 	}
; 363  : 
; 364  : 	if(skillnumber == this->DLComboSkill_1)

  00b0c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b0f	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00b12	3b 48 48	 cmp	 ecx, DWORD PTR [eax+72]
  00b15	75 06		 jne	 SHORT $LN10@DarkLord

; 365  : 	{
; 366  : 		return 0;

  00b17	33 c0		 xor	 eax, eax
  00b19	eb 6b		 jmp	 SHORT $LN12@DarkLord
  00b1b	eb 26		 jmp	 SHORT $LN9@DarkLord
$LN10@DarkLord:

; 367  : 	}
; 368  : 	else if(skillnumber == this->DLComboSkill_2)

  00b1d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b20	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00b23	3b 48 4c	 cmp	 ecx, DWORD PTR [eax+76]
  00b26	75 09		 jne	 SHORT $LN8@DarkLord

; 369  : 	{
; 370  : 		return 1;

  00b28	b8 01 00 00 00	 mov	 eax, 1
  00b2d	eb 57		 jmp	 SHORT $LN12@DarkLord
  00b2f	eb 12		 jmp	 SHORT $LN9@DarkLord
$LN8@DarkLord:

; 371  : 	}
; 372  : 	else if(skillnumber == this->DLComboSkill_3)

  00b31	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b34	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00b37	3b 48 50	 cmp	 ecx, DWORD PTR [eax+80]
  00b3a	75 07		 jne	 SHORT $LN9@DarkLord

; 373  : 	{
; 374  : 		return 1;

  00b3c	b8 01 00 00 00	 mov	 eax, 1
  00b41	eb 43		 jmp	 SHORT $LN12@DarkLord
$LN9@DarkLord:

; 375  : 	}
; 376  : 
; 377  : 	if(skillnumber == this->Master_DLComboSkill_1)

  00b43	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b46	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00b49	3b 88 94 00 00
	00		 cmp	 ecx, DWORD PTR [eax+148]
  00b4f	75 06		 jne	 SHORT $LN5@DarkLord

; 378  : 	{
; 379  : 		return 0;

  00b51	33 c0		 xor	 eax, eax
  00b53	eb 31		 jmp	 SHORT $LN12@DarkLord
  00b55	eb 2c		 jmp	 SHORT $LN4@DarkLord
$LN5@DarkLord:

; 380  : 	}
; 381  : 	else if(skillnumber == this->Master_DLComboSkill_2)

  00b57	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b5a	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00b5d	3b 88 98 00 00
	00		 cmp	 ecx, DWORD PTR [eax+152]
  00b63	75 09		 jne	 SHORT $LN3@DarkLord

; 382  : 	{
; 383  : 		return 1;

  00b65	b8 01 00 00 00	 mov	 eax, 1
  00b6a	eb 1a		 jmp	 SHORT $LN12@DarkLord
  00b6c	eb 15		 jmp	 SHORT $LN4@DarkLord
$LN3@DarkLord:

; 384  : 	}
; 385  : 	else if(skillnumber == this->Master_DLComboSkill_3)

  00b6e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b71	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00b74	3b 88 9c 00 00
	00		 cmp	 ecx, DWORD PTR [eax+156]
  00b7a	75 07		 jne	 SHORT $LN4@DarkLord

; 386  : 	{
; 387  : 		return 1;

  00b7c	b8 01 00 00 00	 mov	 eax, 1
  00b81	eb 03		 jmp	 SHORT $LN12@DarkLord
$LN4@DarkLord:

; 388  : 	}
; 389  : 
; 390  : 	return -1;

  00b83	83 c8 ff	 or	 eax, -1
$LN12@DarkLord:

; 391  : }

  00b86	5f		 pop	 edi
  00b87	5e		 pop	 esi
  00b88	5b		 pop	 ebx
  00b89	8b e5		 mov	 esp, ebp
  00b8b	5d		 pop	 ebp
  00b8c	c2 04 00	 ret	 4
?DarkLord@ComboCustom@@QAEHH@Z ENDP			; ComboCustom::DarkLord
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
_skillnumber$ = 8					; size = 4
?RageFighter@ComboCustom@@QAEHH@Z PROC			; ComboCustom::RageFighter
; _this$ = ecx

; 394  : {

  00b90	55		 push	 ebp
  00b91	8b ec		 mov	 ebp, esp
  00b93	83 ec 44	 sub	 esp, 68			; 00000044H
  00b96	53		 push	 ebx
  00b97	56		 push	 esi
  00b98	57		 push	 edi
  00b99	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 395  : 	if(!this->RFComboEnable)

  00b9c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b9f	0f b6 48 54	 movzx	 ecx, BYTE PTR [eax+84]
  00ba3	85 c9		 test	 ecx, ecx
  00ba5	75 05		 jne	 SHORT $LN11@RageFighte

; 396  : 	{
; 397  : 		return -1;

  00ba7	83 c8 ff	 or	 eax, -1
  00baa	eb 7a		 jmp	 SHORT $LN12@RageFighte
$LN11@RageFighte:

; 398  : 	}
; 399  : 
; 400  : 	if(skillnumber == this->RFComboSkill_1)

  00bac	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00baf	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00bb2	3b 48 58	 cmp	 ecx, DWORD PTR [eax+88]
  00bb5	75 06		 jne	 SHORT $LN10@RageFighte

; 401  : 	{
; 402  : 		return 0;

  00bb7	33 c0		 xor	 eax, eax
  00bb9	eb 6b		 jmp	 SHORT $LN12@RageFighte
  00bbb	eb 26		 jmp	 SHORT $LN9@RageFighte
$LN10@RageFighte:

; 403  : 	}
; 404  : 	else if(skillnumber == this->RFComboSkill_2)

  00bbd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00bc0	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00bc3	3b 48 5c	 cmp	 ecx, DWORD PTR [eax+92]
  00bc6	75 09		 jne	 SHORT $LN8@RageFighte

; 405  : 	{
; 406  : 		return 1;

  00bc8	b8 01 00 00 00	 mov	 eax, 1
  00bcd	eb 57		 jmp	 SHORT $LN12@RageFighte
  00bcf	eb 12		 jmp	 SHORT $LN9@RageFighte
$LN8@RageFighte:

; 407  : 	}
; 408  : 	else if(skillnumber == this->RFComboSkill_3)

  00bd1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00bd4	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00bd7	3b 48 60	 cmp	 ecx, DWORD PTR [eax+96]
  00bda	75 07		 jne	 SHORT $LN9@RageFighte

; 409  : 	{
; 410  : 		return 1;

  00bdc	b8 01 00 00 00	 mov	 eax, 1
  00be1	eb 43		 jmp	 SHORT $LN12@RageFighte
$LN9@RageFighte:

; 411  : 	}
; 412  : 
; 413  : 	if(skillnumber == this->Master_RFComboSkill_1)

  00be3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00be6	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00be9	3b 88 a0 00 00
	00		 cmp	 ecx, DWORD PTR [eax+160]
  00bef	75 06		 jne	 SHORT $LN5@RageFighte

; 414  : 	{
; 415  : 		return 0;

  00bf1	33 c0		 xor	 eax, eax
  00bf3	eb 31		 jmp	 SHORT $LN12@RageFighte
  00bf5	eb 2c		 jmp	 SHORT $LN4@RageFighte
$LN5@RageFighte:

; 416  : 	}
; 417  : 	else if(skillnumber == this->Master_RFComboSkill_2)

  00bf7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00bfa	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00bfd	3b 88 a4 00 00
	00		 cmp	 ecx, DWORD PTR [eax+164]
  00c03	75 09		 jne	 SHORT $LN3@RageFighte

; 418  : 	{
; 419  : 		return 1;

  00c05	b8 01 00 00 00	 mov	 eax, 1
  00c0a	eb 1a		 jmp	 SHORT $LN12@RageFighte
  00c0c	eb 15		 jmp	 SHORT $LN4@RageFighte
$LN3@RageFighte:

; 420  : 	}
; 421  : 	else if(skillnumber == this->Master_RFComboSkill_3)

  00c0e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00c11	8b 4d 08	 mov	 ecx, DWORD PTR _skillnumber$[ebp]
  00c14	3b 88 a8 00 00
	00		 cmp	 ecx, DWORD PTR [eax+168]
  00c1a	75 07		 jne	 SHORT $LN4@RageFighte

; 422  : 	{
; 423  : 		return 1;

  00c1c	b8 01 00 00 00	 mov	 eax, 1
  00c21	eb 03		 jmp	 SHORT $LN12@RageFighte
$LN4@RageFighte:

; 424  : 	}
; 425  : 
; 426  : 	return -1;

  00c23	83 c8 ff	 or	 eax, -1
$LN12@RageFighte:

; 427  : }

  00c26	5f		 pop	 edi
  00c27	5e		 pop	 esi
  00c28	5b		 pop	 ebx
  00c29	8b e5		 mov	 esp, ebp
  00c2b	5d		 pop	 ebp
  00c2c	c2 04 00	 ret	 4
?RageFighter@ComboCustom@@QAEHH@Z ENDP			; ComboCustom::RageFighter
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ??__Eg_ComboCustom@@YAXXZ
text$yc	SEGMENT
??__Eg_ComboCustom@@YAXXZ PROC				; `dynamic initializer for 'g_ComboCustom'', COMDAT

; 9    : ComboCustom g_ComboCustom;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ComboCustom@@3VComboCustom@@A ; g_ComboCustom
  0000e	e8 00 00 00 00	 call	 ??0ComboCustom@@QAE@XZ	; ComboCustom::ComboCustom
  00013	68 00 00 00 00	 push	 OFFSET ??__Fg_ComboCustom@@YAXXZ ; `dynamic atexit destructor for 'g_ComboCustom''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__Eg_ComboCustom@@YAXXZ ENDP				; `dynamic initializer for 'g_ComboCustom''
; Function compile flags: /Odtp /ZI
text$yc	ENDS
;	COMDAT ??__Fg_ComboCustom@@YAXXZ
text$yd	SEGMENT
??__Fg_ComboCustom@@YAXXZ PROC				; `dynamic atexit destructor for 'g_ComboCustom'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ComboCustom@@3VComboCustom@@A ; g_ComboCustom
  0000e	e8 00 00 00 00	 call	 ??1ComboCustom@@QAE@XZ	; ComboCustom::~ComboCustom
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__Fg_ComboCustom@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_ComboCustom''
text$yd	ENDS
PUBLIC	?g_ComboCustom@@3VComboCustom@@A		; g_ComboCustom
_BSS	SEGMENT
?g_ComboCustom@@3VComboCustom@@A DB 0acH DUP (?)	; g_ComboCustom
_BSS	ENDS
CRT$XCU	SEGMENT
_g_ComboCustom$initializer$ DD FLAT:??__Eg_ComboCustom@@YAXXZ
CRT$XCU	ENDS
END
