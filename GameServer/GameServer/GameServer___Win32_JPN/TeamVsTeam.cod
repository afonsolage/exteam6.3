; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\TeamVsTeam.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_g_sttBLOODCASTLE_LEVEL DD 0fH
	DD	050H
	DD	0aH
	DD	03cH
	DD	051H
	DD	082H
	DD	03dH
	DD	06eH
	DD	083H
	DD	0b4H
	DD	06fH
	DD	0a0H
	DD	0b5H
	DD	0e6H
	DD	0a1H
	DD	0d2H
	DD	0e7H
	DD	0118H
	DD	0d3H
	DD	0104H
	DD	0119H
	DD	014aH
	DD	0105H
	DD	0136H
	DD	014bH
	DD	0190H
	DD	0137H
	DD	0190H
	DD	0fH
	DD	0257H
	DD	0aH
	DD	0257H
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?Init@CTeamVsTeam@@QAEXXZ			; CTeamVsTeam::Init
PUBLIC	??0CTeamVsTeam@@QAE@XZ				; CTeamVsTeam::CTeamVsTeam
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\teamvsteam.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CTeamVsTeam@@QAE@XZ PROC				; CTeamVsTeam::CTeamVsTeam
; _this$ = ecx

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 19   : 	this->Init();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?Init@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::Init

; 20   : }

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0CTeamVsTeam@@QAE@XZ ENDP				; CTeamVsTeam::CTeamVsTeam
_TEXT	ENDS
PUBLIC	??1CTeamVsTeam@@QAE@XZ				; CTeamVsTeam::~CTeamVsTeam
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CTeamVsTeam@@QAE@XZ PROC				; CTeamVsTeam::~CTeamVsTeam
; _this$ = ecx

; 23   : {

  00020	55		 push	 ebp
  00021	8b ec		 mov	 ebp, esp
  00023	83 ec 44	 sub	 esp, 68			; 00000044H
  00026	53		 push	 ebx
  00027	56		 push	 esi
  00028	57		 push	 edi
  00029	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 24   : }

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??1CTeamVsTeam@@QAE@XZ ENDP				; CTeamVsTeam::~CTeamVsTeam
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?Init@CTeamVsTeam@@QAEXXZ PROC				; CTeamVsTeam::Init
; _this$ = ecx

; 27   : {

  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
  00043	83 ec 44	 sub	 esp, 68			; 00000044H
  00046	53		 push	 ebx
  00047	56		 push	 esi
  00048	57		 push	 edi
  00049	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 28   : 	this->m_Enable				= false;

  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	c6 00 00	 mov	 BYTE PTR [eax], 0

; 29   : 	this->m_EventStartDay		= -1;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 2c ff ff
	ff ff		 mov	 DWORD PTR [eax+44], -1

; 30   : 	this->m_EventStartHour		= 0;

  0005c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [eax+48], 0

; 31   : 	this->m_EventeStartMin		= 0;

  00066	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00069	c7 40 34 00 00
	00 00		 mov	 DWORD PTR [eax+52], 0

; 32   : 	this->m_EventDurationTime	= 0;

  00070	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00073	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0

; 33   : 	this->m_EventStatus			= eEVENT_TEAMVSTEAM_CLOSE;

  0007a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 34   : 	this->m_TeamScore1			= 0;

  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00087	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 35   : 	this->m_TeamScore2			= 0;

  0008e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00091	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 36   : 	this->m_TickCount			= 0;

  00098	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 37   : 	this->m_TickRemain			= 0;

  000a2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 38   : 	this->m_TickWait			= 0;

  000ac	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000af	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 39   : 	this->m_NpcClass			= 0;

  000b6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b9	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0

; 40   : 	this->m_NpcMap				= 0;

  000c0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c3	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0

; 41   : 	this->m_NpcX				= 0;

  000ca	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cd	c7 40 24 00 00
	00 00		 mov	 DWORD PTR [eax+36], 0

; 42   : 	this->m_NpcY				= 0;

  000d4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d7	c7 40 28 00 00
	00 00		 mov	 DWORD PTR [eax+40], 0

; 43   : 	this->m_RewardBonusEnable	= false;

  000de	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e1	c7 40 44 00 00
	00 00		 mov	 DWORD PTR [eax+68], 0

; 44   : 	this->m_RewardBonusCount    = 0;

  000e8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000eb	c7 40 48 00 00
	00 00		 mov	 DWORD PTR [eax+72], 0

; 45   : 	this->m_RewardItemEnable	= false;

  000f2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f5	c7 40 4c 00 00
	00 00		 mov	 DWORD PTR [eax+76], 0

; 46   : 	this->m_RewardItemType		= 0;

  000fc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ff	c7 40 50 00 00
	00 00		 mov	 DWORD PTR [eax+80], 0

; 47   : 	this->m_RewardItemIndex		= 0;

  00106	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00109	c7 40 54 00 00
	00 00		 mov	 DWORD PTR [eax+84], 0

; 48   : 	this->m_RewardItemLevel		= 0;

  00110	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00113	c7 40 58 00 00
	00 00		 mov	 DWORD PTR [eax+88], 0

; 49   : 	this->m_MinReset            = 0;

  0011a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	c7 40 40 00 00
	00 00		 mov	 DWORD PTR [eax+64], 0

; 50   : }

  00124	5f		 pop	 edi
  00125	5e		 pop	 esi
  00126	5b		 pop	 ebx
  00127	8b e5		 mov	 esp, ebp
  00129	5d		 pop	 ebp
  0012a	c3		 ret	 0
?Init@CTeamVsTeam@@QAEXXZ ENDP				; CTeamVsTeam::Init
_TEXT	ENDS
PUBLIC	?Read@CTeamVsTeam@@QAEXPAD@Z			; CTeamVsTeam::Read
PUBLIC	??_C@_0BN@FNCOJDCO@ExData?2Events?2TeamVsTeam?4dat?$AA@ ; `string'
PUBLIC	?Load@CTeamVsTeam@@QAEXXZ			; CTeamVsTeam::Load
EXTRN	?GetNewPath@CDirPath@@QAEPADPAD@Z:PROC		; CDirPath::GetNewPath
EXTRN	?gDirPath@@3VCDirPath@@A:BYTE			; gDirPath
EXTRN	?g_ExLicense@@3VCExLicense@@A:BYTE		; g_ExLicense
;	COMDAT ??_C@_0BN@FNCOJDCO@ExData?2Events?2TeamVsTeam?4dat?$AA@
CONST	SEGMENT
??_C@_0BN@FNCOJDCO@ExData?2Events?2TeamVsTeam?4dat?$AA@ DB 'ExData\Events'
	DB	'\TeamVsTeam.dat', 00H			; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Load@CTeamVsTeam@@QAEXXZ PROC				; CTeamVsTeam::Load
; _this$ = ecx

; 53   : {

  00130	55		 push	 ebp
  00131	8b ec		 mov	 ebp, esp
  00133	83 ec 44	 sub	 esp, 68			; 00000044H
  00136	53		 push	 ebx
  00137	56		 push	 esi
  00138	57		 push	 edi
  00139	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 54   : 	if(!g_ExLicense.user.bTeamVsTeam2)

  0013c	0f b6 05 e8 00
	00 00		 movzx	 eax, BYTE PTR ?g_ExLicense@@3VCExLicense@@A+232
  00143	85 c0		 test	 eax, eax
  00145	75 02		 jne	 SHORT $LN1@Load

; 55   : 	{
; 56   : 		return;

  00147	eb 18		 jmp	 SHORT $LN2@Load
$LN1@Load:

; 57   : 	}
; 58   : 
; 59   : 	this->Read(gDirPath.GetNewPath("ExData\\Events\\TeamVsTeam.dat"));

  00149	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@FNCOJDCO@ExData?2Events?2TeamVsTeam?4dat?$AA@
  0014e	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00153	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00158	50		 push	 eax
  00159	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0015c	e8 00 00 00 00	 call	 ?Read@CTeamVsTeam@@QAEXPAD@Z ; CTeamVsTeam::Read
$LN2@Load:

; 60   : }

  00161	5f		 pop	 edi
  00162	5e		 pop	 esi
  00163	5b		 pop	 ebx
  00164	8b e5		 mov	 esp, ebp
  00166	5d		 pop	 ebp
  00167	c3		 ret	 0
?Load@CTeamVsTeam@@QAEXXZ ENDP				; CTeamVsTeam::Load
_TEXT	ENDS
PUBLIC	??_C@_0O@CEHBAEMJ@?$CFs?5file?5load?$CB?$AA@	; `string'
PUBLIC	?SetStatus@CTeamVsTeam@@QAEXH@Z			; CTeamVsTeam::SetStatus
PUBLIC	??_C@_08EOFHGIKD@MinReset?$AA@			; `string'
PUBLIC	??_C@_0BA@EHNJPAJ@RewardItemLevel?$AA@		; `string'
PUBLIC	??_C@_0BA@PHNOHHOK@RewardItemIndex?$AA@		; `string'
PUBLIC	??_C@_0P@KMGPHJCD@RewardItemType?$AA@		; `string'
PUBLIC	??_C@_0BB@NBBKJMOC@RewardItemEnable?$AA@	; `string'
PUBLIC	??_C@_0BB@FCFMHFED@RewardBonusCount?$AA@	; `string'
PUBLIC	??_C@_0BC@JCACEJBA@RewardBonusEnable?$AA@	; `string'
PUBLIC	??_C@_04JEMJNNDC@NpcY?$AA@			; `string'
PUBLIC	??_C@_04INNCOMHD@NpcX?$AA@			; `string'
PUBLIC	??_C@_06KMEDHGPI@NpcMap?$AA@			; `string'
PUBLIC	??_C@_08BNJJHKPI@NpcClass?$AA@			; `string'
PUBLIC	??_C@_0BC@LNOAINMO@EventDurationTime?$AA@	; `string'
PUBLIC	??_C@_0P@LJMNIACI@EventeStartMin?$AA@		; `string'
PUBLIC	??_C@_0P@BDCFPCEH@EventStartHour?$AA@		; `string'
PUBLIC	??_C@_0O@BLJMNMLG@EventStartDay?$AA@		; `string'
PUBLIC	??_C@_06MLPMCPDE@ExTeam?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
;	COMDAT ??_C@_0O@CEHBAEMJ@?$CFs?5file?5load?$CB?$AA@
CONST	SEGMENT
??_C@_0O@CEHBAEMJ@?$CFs?5file?5load?$CB?$AA@ DB '%s file load!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08EOFHGIKD@MinReset?$AA@
CONST	SEGMENT
??_C@_08EOFHGIKD@MinReset?$AA@ DB 'MinReset', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EHNJPAJ@RewardItemLevel?$AA@
CONST	SEGMENT
??_C@_0BA@EHNJPAJ@RewardItemLevel?$AA@ DB 'RewardItemLevel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PHNOHHOK@RewardItemIndex?$AA@
CONST	SEGMENT
??_C@_0BA@PHNOHHOK@RewardItemIndex?$AA@ DB 'RewardItemIndex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KMGPHJCD@RewardItemType?$AA@
CONST	SEGMENT
??_C@_0P@KMGPHJCD@RewardItemType?$AA@ DB 'RewardItemType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NBBKJMOC@RewardItemEnable?$AA@
CONST	SEGMENT
??_C@_0BB@NBBKJMOC@RewardItemEnable?$AA@ DB 'RewardItemEnable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCFMHFED@RewardBonusCount?$AA@
CONST	SEGMENT
??_C@_0BB@FCFMHFED@RewardBonusCount?$AA@ DB 'RewardBonusCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JCACEJBA@RewardBonusEnable?$AA@
CONST	SEGMENT
??_C@_0BC@JCACEJBA@RewardBonusEnable?$AA@ DB 'RewardBonusEnable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04JEMJNNDC@NpcY?$AA@
CONST	SEGMENT
??_C@_04JEMJNNDC@NpcY?$AA@ DB 'NpcY', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04INNCOMHD@NpcX?$AA@
CONST	SEGMENT
??_C@_04INNCOMHD@NpcX?$AA@ DB 'NpcX', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KMEDHGPI@NpcMap?$AA@
CONST	SEGMENT
??_C@_06KMEDHGPI@NpcMap?$AA@ DB 'NpcMap', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08BNJJHKPI@NpcClass?$AA@
CONST	SEGMENT
??_C@_08BNJJHKPI@NpcClass?$AA@ DB 'NpcClass', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LNOAINMO@EventDurationTime?$AA@
CONST	SEGMENT
??_C@_0BC@LNOAINMO@EventDurationTime?$AA@ DB 'EventDurationTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LJMNIACI@EventeStartMin?$AA@
CONST	SEGMENT
??_C@_0P@LJMNIACI@EventeStartMin?$AA@ DB 'EventeStartMin', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BDCFPCEH@EventStartHour?$AA@
CONST	SEGMENT
??_C@_0P@BDCFPCEH@EventStartHour?$AA@ DB 'EventStartHour', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BLJMNMLG@EventStartDay?$AA@
CONST	SEGMENT
??_C@_0O@BLJMNMLG@EventStartDay?$AA@ DB 'EventStartDay', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06MLPMCPDE@ExTeam?$AA@
CONST	SEGMENT
??_C@_06MLPMCPDE@ExTeam?$AA@ DB 'ExTeam', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_filename$ = 8						; size = 4
?Read@CTeamVsTeam@@QAEXPAD@Z PROC			; CTeamVsTeam::Read
; _this$ = ecx

; 63   : {

  00170	55		 push	 ebp
  00171	8b ec		 mov	 ebp, esp
  00173	83 ec 44	 sub	 esp, 68			; 00000044H
  00176	53		 push	 ebx
  00177	56		 push	 esi
  00178	57		 push	 edi
  00179	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 64   : 	this->m_Enable				= GetPrivateProfileInt("ExTeam", "Enable", 0, filename);

  0017c	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  0017f	50		 push	 eax
  00180	6a 00		 push	 0
  00182	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  00187	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  0018c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00192	85 c0		 test	 eax, eax
  00194	0f 95 c1	 setne	 cl
  00197	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0019a	88 0a		 mov	 BYTE PTR [edx], cl

; 65   : 	this->m_EventStartDay		= GetPrivateProfileInt("ExTeam", "EventStartDay", 0, filename);

  0019c	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  0019f	50		 push	 eax
  001a0	6a 00		 push	 0
  001a2	68 00 00 00 00	 push	 OFFSET ??_C@_0O@BLJMNMLG@EventStartDay?$AA@
  001a7	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  001ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  001b2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b5	89 41 2c	 mov	 DWORD PTR [ecx+44], eax

; 66   : 	this->m_EventStartHour		= GetPrivateProfileInt("ExTeam", "EventStartHour", 0, filename);

  001b8	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  001bb	50		 push	 eax
  001bc	6a 00		 push	 0
  001be	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BDCFPCEH@EventStartHour?$AA@
  001c3	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  001c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  001ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001d1	89 41 30	 mov	 DWORD PTR [ecx+48], eax

; 67   : 	this->m_EventeStartMin		= GetPrivateProfileInt("ExTeam", "EventeStartMin", 0, filename);

  001d4	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  001d7	50		 push	 eax
  001d8	6a 00		 push	 0
  001da	68 00 00 00 00	 push	 OFFSET ??_C@_0P@LJMNIACI@EventeStartMin?$AA@
  001df	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  001e4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  001ea	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001ed	89 41 34	 mov	 DWORD PTR [ecx+52], eax

; 68   : 	this->m_EventDurationTime	= GetPrivateProfileInt("ExTeam", "EventDurationTime", 0, filename);

  001f0	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  001f3	50		 push	 eax
  001f4	6a 00		 push	 0
  001f6	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@LNOAINMO@EventDurationTime?$AA@
  001fb	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00200	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00206	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00209	89 41 38	 mov	 DWORD PTR [ecx+56], eax

; 69   : 	this->m_NpcClass			= GetPrivateProfileInt("ExTeam", "NpcClass", 0, filename);

  0020c	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  0020f	50		 push	 eax
  00210	6a 00		 push	 0
  00212	68 00 00 00 00	 push	 OFFSET ??_C@_08BNJJHKPI@NpcClass?$AA@
  00217	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  0021c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00222	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00225	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 70   : 	this->m_NpcMap				= GetPrivateProfileInt("ExTeam", "NpcMap", 0, filename);

  00228	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  0022b	50		 push	 eax
  0022c	6a 00		 push	 0
  0022e	68 00 00 00 00	 push	 OFFSET ??_C@_06KMEDHGPI@NpcMap?$AA@
  00233	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00238	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0023e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00241	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 71   : 	this->m_NpcX				= GetPrivateProfileInt("ExTeam", "NpcX", 0, filename);

  00244	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00247	50		 push	 eax
  00248	6a 00		 push	 0
  0024a	68 00 00 00 00	 push	 OFFSET ??_C@_04INNCOMHD@NpcX?$AA@
  0024f	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00254	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0025a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0025d	89 41 24	 mov	 DWORD PTR [ecx+36], eax

; 72   : 	this->m_NpcY				= GetPrivateProfileInt("ExTeam", "NpcY", 0, filename);

  00260	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00263	50		 push	 eax
  00264	6a 00		 push	 0
  00266	68 00 00 00 00	 push	 OFFSET ??_C@_04JEMJNNDC@NpcY?$AA@
  0026b	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00270	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00276	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00279	89 41 28	 mov	 DWORD PTR [ecx+40], eax

; 73   : 	this->m_RewardBonusEnable	= GetPrivateProfileInt("ExTeam", "RewardBonusEnable", 0, filename);

  0027c	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  0027f	50		 push	 eax
  00280	6a 00		 push	 0
  00282	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@JCACEJBA@RewardBonusEnable?$AA@
  00287	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  0028c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00292	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00295	89 41 44	 mov	 DWORD PTR [ecx+68], eax

; 74   : 	this->m_RewardBonusCount    = GetPrivateProfileInt("ExTeam", "RewardBonusCount", 0, filename);

  00298	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  0029b	50		 push	 eax
  0029c	6a 00		 push	 0
  0029e	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@FCFMHFED@RewardBonusCount?$AA@
  002a3	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  002a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  002ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002b1	89 41 48	 mov	 DWORD PTR [ecx+72], eax

; 75   : 	this->m_RewardItemEnable	= GetPrivateProfileInt("ExTeam", "RewardItemEnable", 0, filename);

  002b4	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  002b7	50		 push	 eax
  002b8	6a 00		 push	 0
  002ba	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@NBBKJMOC@RewardItemEnable?$AA@
  002bf	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  002c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  002ca	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002cd	89 41 4c	 mov	 DWORD PTR [ecx+76], eax

; 76   : 	this->m_RewardItemType		= GetPrivateProfileInt("ExTeam", "RewardItemType", 0, filename);

  002d0	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  002d3	50		 push	 eax
  002d4	6a 00		 push	 0
  002d6	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KMGPHJCD@RewardItemType?$AA@
  002db	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  002e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  002e6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002e9	89 41 50	 mov	 DWORD PTR [ecx+80], eax

; 77   : 	this->m_RewardItemIndex		= GetPrivateProfileInt("ExTeam", "RewardItemIndex", 0, filename);

  002ec	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  002ef	50		 push	 eax
  002f0	6a 00		 push	 0
  002f2	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@PHNOHHOK@RewardItemIndex?$AA@
  002f7	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  002fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00302	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00305	89 41 54	 mov	 DWORD PTR [ecx+84], eax

; 78   : 	this->m_RewardItemLevel		= GetPrivateProfileInt("ExTeam", "RewardItemLevel", 0, filename);

  00308	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  0030b	50		 push	 eax
  0030c	6a 00		 push	 0
  0030e	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@EHNJPAJ@RewardItemLevel?$AA@
  00313	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00318	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0031e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00321	89 41 58	 mov	 DWORD PTR [ecx+88], eax

; 79   : 	this->m_MinReset			= GetPrivateProfileInt("ExTeam", "MinReset", 0, filename);

  00324	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00327	50		 push	 eax
  00328	6a 00		 push	 0
  0032a	68 00 00 00 00	 push	 OFFSET ??_C@_08EOFHGIKD@MinReset?$AA@
  0032f	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00334	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0033a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0033d	89 41 40	 mov	 DWORD PTR [ecx+64], eax

; 80   : 
; 81   : 	if(!this->m_Enable/* && this->CheckStatus(eEVENT_TEAMVSTEAM_WAIT) || this->CheckStatus(eEVENT_TEAMVSTEAM_START)*/)

  00340	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00343	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00346	85 c9		 test	 ecx, ecx
  00348	75 0a		 jne	 SHORT $LN1@Read

; 82   : 	{
; 83   : 		this->SetStatus(eEVENT_TEAMVSTEAM_CLOSE);

  0034a	6a 00		 push	 0
  0034c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0034f	e8 00 00 00 00	 call	 ?SetStatus@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::SetStatus
$LN1@Read:

; 84   : 	}
; 85   : 
; 86   : 	LogAdd("%s file load!", filename);

  00354	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00357	50		 push	 eax
  00358	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CEHBAEMJ@?$CFs?5file?5load?$CB?$AA@
  0035d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00363	83 c4 08	 add	 esp, 8

; 87   : }

  00366	5f		 pop	 edi
  00367	5e		 pop	 esi
  00368	5b		 pop	 ebx
  00369	8b e5		 mov	 esp, ebp
  0036b	5d		 pop	 ebp
  0036c	c2 04 00	 ret	 4
?Read@CTeamVsTeam@@QAEXPAD@Z ENDP			; CTeamVsTeam::Read
_TEXT	ENDS
PUBLIC	?GCViewePortTvT@CTeamVsTeam@@QAEXXZ		; CTeamVsTeam::GCViewePortTvT
PUBLIC	?ProcessStatusStart@CTeamVsTeam@@QAEXXZ		; CTeamVsTeam::ProcessStatusStart
PUBLIC	?PrecessStatusWait@CTeamVsTeam@@QAEXXZ		; CTeamVsTeam::PrecessStatusWait
PUBLIC	?ProcessStatusClose@CTeamVsTeam@@QAEXXZ		; CTeamVsTeam::ProcessStatusClose
PUBLIC	?Run@CTeamVsTeam@@QAEXXZ			; CTeamVsTeam::Run
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv67 = -72						; size = 4
_this$ = -4						; size = 4
?Run@CTeamVsTeam@@QAEXXZ PROC				; CTeamVsTeam::Run
; _this$ = ecx

; 90   : {

  00370	55		 push	 ebp
  00371	8b ec		 mov	 ebp, esp
  00373	83 ec 48	 sub	 esp, 72			; 00000048H
  00376	53		 push	 ebx
  00377	56		 push	 esi
  00378	57		 push	 edi
  00379	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 91   : 	if(!this->m_Enable)

  0037c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0037f	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00382	85 c9		 test	 ecx, ecx
  00384	75 02		 jne	 SHORT $LN6@Run

; 92   : 	{
; 93   : 		return;

  00386	eb 41		 jmp	 SHORT $LN7@Run
$LN6@Run:

; 94   : 	}
; 95   : 
; 96   : 	switch(this->m_EventStatus)

  00388	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0038b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0038e	89 4d b8	 mov	 DWORD PTR tv67[ebp], ecx
  00391	83 7d b8 00	 cmp	 DWORD PTR tv67[ebp], 0
  00395	74 0e		 je	 SHORT $LN3@Run
  00397	83 7d b8 01	 cmp	 DWORD PTR tv67[ebp], 1
  0039b	74 12		 je	 SHORT $LN2@Run
  0039d	83 7d b8 02	 cmp	 DWORD PTR tv67[ebp], 2
  003a1	74 16		 je	 SHORT $LN1@Run
  003a3	eb 1c		 jmp	 SHORT $LN4@Run
$LN3@Run:

; 97   : 	{
; 98   : 		case eEVENT_TEAMVSTEAM_CLOSE:	
; 99   : 			this->ProcessStatusClose();		

  003a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003a8	e8 00 00 00 00	 call	 ?ProcessStatusClose@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::ProcessStatusClose

; 100  : 			break;

  003ad	eb 12		 jmp	 SHORT $LN4@Run
$LN2@Run:

; 101  : 		case eEVENT_TEAMVSTEAM_WAIT:	
; 102  : 			this->PrecessStatusWait();		

  003af	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003b2	e8 00 00 00 00	 call	 ?PrecessStatusWait@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::PrecessStatusWait

; 103  : 			break;

  003b7	eb 08		 jmp	 SHORT $LN4@Run
$LN1@Run:

; 104  : 		case eEVENT_TEAMVSTEAM_START:	
; 105  : 			this->ProcessStatusStart();		

  003b9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003bc	e8 00 00 00 00	 call	 ?ProcessStatusStart@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::ProcessStatusStart
$LN4@Run:

; 106  : 			break;
; 107  : 	}
; 108  : 
; 109  : 	this->GCViewePortTvT();

  003c1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003c4	e8 00 00 00 00	 call	 ?GCViewePortTvT@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::GCViewePortTvT
$LN7@Run:

; 110  : }

  003c9	5f		 pop	 edi
  003ca	5e		 pop	 esi
  003cb	5b		 pop	 ebx
  003cc	8b e5		 mov	 esp, ebp
  003ce	5d		 pop	 ebp
  003cf	c3		 ret	 0
?Run@CTeamVsTeam@@QAEXXZ ENDP				; CTeamVsTeam::Run
_TEXT	ENDS
EXTRN	?GetSecond@CTimerEx@@QAEHXZ:PROC		; CTimerEx::GetSecond
EXTRN	?g_TimerEx@@3VCTimerEx@@A:DWORD			; g_TimerEx
EXTRN	__imp__GetLocalTime@4:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ProcessStatusClose@CTeamVsTeam@@QAEXXZ PROC		; CTeamVsTeam::ProcessStatusClose
; _this$ = ecx

; 113  : {

  003d0	55		 push	 ebp
  003d1	8b ec		 mov	 ebp, esp
  003d3	83 ec 44	 sub	 esp, 68			; 00000044H
  003d6	53		 push	 ebx
  003d7	56		 push	 esi
  003d8	57		 push	 edi
  003d9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 114  : 	GetLocalTime(&this->systime);

  003dc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003df	83 c0 5c	 add	 eax, 92			; 0000005cH
  003e2	50		 push	 eax
  003e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 115  : 
; 116  : 	if(this->m_EventStartDay == -1)

  003e9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003ec	83 78 2c ff	 cmp	 DWORD PTR [eax+44], -1
  003f0	75 38		 jne	 SHORT $LN4@ProcessSta

; 117  : 	{
; 118  : 		if(this->m_EventStartHour == this->systime.wHour		&&
; 119  : 		   this->m_EventeStartMin == this->systime.wMinute		&&
; 120  : #if(NEWTIMEREX)
; 121  : 			g_TimerEx.GetSecond() == 00)

  003f2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003f5	0f b7 48 64	 movzx	 ecx, WORD PTR [eax+100]
  003f9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  003fc	39 4a 30	 cmp	 DWORD PTR [edx+48], ecx
  003ff	75 27		 jne	 SHORT $LN3@ProcessSta
  00401	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00404	0f b7 48 66	 movzx	 ecx, WORD PTR [eax+102]
  00408	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0040b	39 4a 34	 cmp	 DWORD PTR [edx+52], ecx
  0040e	75 18		 jne	 SHORT $LN3@ProcessSta
  00410	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_TimerEx@@3VCTimerEx@@A ; g_TimerEx
  00415	e8 00 00 00 00	 call	 ?GetSecond@CTimerEx@@QAEHXZ ; CTimerEx::GetSecond
  0041a	85 c0		 test	 eax, eax
  0041c	75 0a		 jne	 SHORT $LN3@ProcessSta

; 122  : #else
; 123  : 		   this->systime.wSecond == 0)
; 124  : #endif
; 125  : 		{
; 126  : 			this->SetStatus(eEVENT_TEAMVSTEAM_WAIT);

  0041e	6a 01		 push	 1
  00420	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00423	e8 00 00 00 00	 call	 ?SetStatus@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::SetStatus
$LN3@ProcessSta:

; 127  : 		}
; 128  : 	}
; 129  : 	else

  00428	eb 45		 jmp	 SHORT $LN5@ProcessSta
$LN4@ProcessSta:

; 130  : 	{
; 131  : 		if(this->m_EventStartDay == this->systime.wDayOfWeek	&&
; 132  : 		   this->m_EventStartHour == this->systime.wHour		&&
; 133  : 		   this->m_EventeStartMin == this->systime.wMinute		&&
; 134  : #if(NEWTIMEREX)
; 135  : 			g_TimerEx.GetSecond() == 00)

  0042a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0042d	0f b7 48 60	 movzx	 ecx, WORD PTR [eax+96]
  00431	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00434	39 4a 2c	 cmp	 DWORD PTR [edx+44], ecx
  00437	75 36		 jne	 SHORT $LN5@ProcessSta
  00439	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0043c	0f b7 48 64	 movzx	 ecx, WORD PTR [eax+100]
  00440	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00443	39 4a 30	 cmp	 DWORD PTR [edx+48], ecx
  00446	75 27		 jne	 SHORT $LN5@ProcessSta
  00448	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0044b	0f b7 48 66	 movzx	 ecx, WORD PTR [eax+102]
  0044f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00452	39 4a 34	 cmp	 DWORD PTR [edx+52], ecx
  00455	75 18		 jne	 SHORT $LN5@ProcessSta
  00457	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_TimerEx@@3VCTimerEx@@A ; g_TimerEx
  0045c	e8 00 00 00 00	 call	 ?GetSecond@CTimerEx@@QAEHXZ ; CTimerEx::GetSecond
  00461	85 c0		 test	 eax, eax
  00463	75 0a		 jne	 SHORT $LN5@ProcessSta

; 136  : #else
; 137  : 		   this->systime.wSecond == 0)
; 138  : #endif
; 139  : 		{
; 140  : 			this->SetStatus(eEVENT_TEAMVSTEAM_WAIT);

  00465	6a 01		 push	 1
  00467	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0046a	e8 00 00 00 00	 call	 ?SetStatus@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::SetStatus
$LN5@ProcessSta:

; 141  : 		}
; 142  : 	}
; 143  : }

  0046f	5f		 pop	 edi
  00470	5e		 pop	 esi
  00471	5b		 pop	 ebx
  00472	8b e5		 mov	 esp, ebp
  00474	5d		 pop	 ebp
  00475	c3		 ret	 0
?ProcessStatusClose@CTeamVsTeam@@QAEXXZ ENDP		; CTeamVsTeam::ProcessStatusClose
_TEXT	ENDS
PUBLIC	?DivTeam@CTeamVsTeam@@QAEHXZ			; CTeamVsTeam::DivTeam
PUBLIC	??_C@_0CI@CAOFDEAF@?$FLTeam?5vs?5Team?$FN?5start?5after?5?$CFd?5mi@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	?AllSendServerMsg@@YAXPAD@Z:PROC		; AllSendServerMsg
EXTRN	_sprintf:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT ??_C@_0CI@CAOFDEAF@?$FLTeam?5vs?5Team?$FN?5start?5after?5?$CFd?5mi@
CONST	SEGMENT
??_C@_0CI@CAOFDEAF@?$FLTeam?5vs?5Team?$FN?5start?5after?5?$CFd?5mi@ DB '['
	DB	'Team vs Team] start after %d minute(s)', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_iTotalPlayer$230206 = -276				; size = 4
_szTemp$230203 = -272					; size = 256
_iWaitMin$230202 = -16					; size = 4
_iTickMsec$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?PrecessStatusWait@CTeamVsTeam@@QAEXXZ PROC		; CTeamVsTeam::PrecessStatusWait
; _this$ = ecx

; 146  : {

  00480	55		 push	 ebp
  00481	8b ec		 mov	 ebp, esp
  00483	81 ec 54 01 00
	00		 sub	 esp, 340		; 00000154H
  00489	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0048e	33 c5		 xor	 eax, ebp
  00490	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00493	53		 push	 ebx
  00494	56		 push	 esi
  00495	57		 push	 edi
  00496	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 147  : 	int iTickMsec = (GetTickCount() - this->m_TickCount);

  00499	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0049f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004a2	2b 41 10	 sub	 eax, DWORD PTR [ecx+16]
  004a5	89 45 f4	 mov	 DWORD PTR _iTickMsec$[ebp], eax

; 148  : 
; 149  : 	if(iTickMsec >= 1000)

  004a8	81 7d f4 e8 03
	00 00		 cmp	 DWORD PTR _iTickMsec$[ebp], 1000 ; 000003e8H
  004af	0f 8c 82 00 00
	00		 jl	 $LN6@PrecessSta

; 150  : 	{
; 151  : 		this->m_TickRemain -= iTickMsec;			

  004b5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004b8	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  004bb	2b 4d f4	 sub	 ecx, DWORD PTR _iTickMsec$[ebp]
  004be	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  004c1	89 4a 14	 mov	 DWORD PTR [edx+20], ecx

; 152  : 		this->m_TickCount = GetTickCount();

  004c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  004ca	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004cd	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 153  : 
; 154  : 		if(this->m_TickRemain <= (60000 * TEAMVSTEAM_WAIT))

  004d0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004d3	81 78 14 e0 93
	04 00		 cmp	 DWORD PTR [eax+20], 300000 ; 000493e0H
  004da	7f 5b		 jg	 SHORT $LN6@PrecessSta

; 155  : 		{
; 156  : 			if((this->m_TickCount - this->m_TickWait) > 60000)

  004dc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004df	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004e2	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  004e5	2b 51 18	 sub	 edx, DWORD PTR [ecx+24]
  004e8	81 fa 60 ea 00
	00		 cmp	 edx, 60000		; 0000ea60H
  004ee	7e 47		 jle	 SHORT $LN6@PrecessSta

; 157  : 			{
; 158  : 				int iWaitMin = (this->m_TickRemain/60000) + 1;

  004f0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004f3	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  004f6	99		 cdq
  004f7	b9 60 ea 00 00	 mov	 ecx, 60000		; 0000ea60H
  004fc	f7 f9		 idiv	 ecx
  004fe	83 c0 01	 add	 eax, 1
  00501	89 45 f0	 mov	 DWORD PTR _iWaitMin$230202[ebp], eax

; 159  : 				char szTemp[256];
; 160  : 				sprintf(szTemp, "[Team vs Team] start after %d minute(s)", iWaitMin);

  00504	8b 45 f0	 mov	 eax, DWORD PTR _iWaitMin$230202[ebp]
  00507	50		 push	 eax
  00508	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CAOFDEAF@?$FLTeam?5vs?5Team?$FN?5start?5after?5?$CFd?5mi@
  0050d	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _szTemp$230203[ebp]
  00513	51		 push	 ecx
  00514	e8 00 00 00 00	 call	 _sprintf
  00519	83 c4 0c	 add	 esp, 12			; 0000000cH

; 161  : 				AllSendServerMsg(szTemp);

  0051c	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _szTemp$230203[ebp]
  00522	50		 push	 eax
  00523	e8 00 00 00 00	 call	 ?AllSendServerMsg@@YAXPAD@Z ; AllSendServerMsg
  00528	83 c4 04	 add	 esp, 4

; 162  : 				this->m_TickWait = GetTickCount();

  0052b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00531	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00534	89 41 18	 mov	 DWORD PTR [ecx+24], eax
$LN6@PrecessSta:

; 163  : 			}
; 164  : 		}
; 165  : 	}
; 166  : 
; 167  : 	if(this->m_TickRemain <= 0)

  00537	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0053a	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  0053e	7f 2d		 jg	 SHORT $LN7@PrecessSta

; 168  : 	{
; 169  : 		int iTotalPlayer = this->DivTeam();

  00540	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00543	e8 00 00 00 00	 call	 ?DivTeam@CTeamVsTeam@@QAEHXZ ; CTeamVsTeam::DivTeam
  00548	89 85 ec fe ff
	ff		 mov	 DWORD PTR _iTotalPlayer$230206[ebp], eax

; 170  : 
; 171  : 		if(iTotalPlayer >= TEAMVSTEAM_MINPLAYER)

  0054e	83 bd ec fe ff
	ff 02		 cmp	 DWORD PTR _iTotalPlayer$230206[ebp], 2
  00555	7c 0c		 jl	 SHORT $LN2@PrecessSta

; 172  : 		{
; 173  : 			this->SetStatus(eEVENT_TEAMVSTEAM_START);

  00557	6a 02		 push	 2
  00559	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0055c	e8 00 00 00 00	 call	 ?SetStatus@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::SetStatus

; 174  : 		}
; 175  : 		else

  00561	eb 0a		 jmp	 SHORT $LN7@PrecessSta
$LN2@PrecessSta:

; 176  : 		{
; 177  : 			this->SetStatus(eEVENT_TEAMVSTEAM_CLOSE);

  00563	6a 00		 push	 0
  00565	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00568	e8 00 00 00 00	 call	 ?SetStatus@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::SetStatus
$LN7@PrecessSta:

; 178  : 		}
; 179  : 	}
; 180  : }

  0056d	5f		 pop	 edi
  0056e	5e		 pop	 esi
  0056f	5b		 pop	 ebx
  00570	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00573	33 cd		 xor	 ecx, ebp
  00575	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0057a	8b e5		 mov	 esp, ebp
  0057c	5d		 pop	 ebp
  0057d	c3		 ret	 0
?PrecessStatusWait@CTeamVsTeam@@QAEXXZ ENDP		; CTeamVsTeam::PrecessStatusWait
; Function compile flags: /Odtp /ZI
_iTickMsec$ = -8					; size = 4
_this$ = -4						; size = 4
?ProcessStatusStart@CTeamVsTeam@@QAEXXZ PROC		; CTeamVsTeam::ProcessStatusStart
; _this$ = ecx

; 183  : {

  00580	55		 push	 ebp
  00581	8b ec		 mov	 ebp, esp
  00583	83 ec 48	 sub	 esp, 72			; 00000048H
  00586	53		 push	 ebx
  00587	56		 push	 esi
  00588	57		 push	 edi
  00589	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 184  : 	int iTickMsec = (GetTickCount() - this->m_TickCount);

  0058c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00592	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00595	2b 41 10	 sub	 eax, DWORD PTR [ecx+16]
  00598	89 45 f8	 mov	 DWORD PTR _iTickMsec$[ebp], eax

; 185  : 
; 186  : 	if(iTickMsec >= 1000)

  0059b	81 7d f8 e8 03
	00 00		 cmp	 DWORD PTR _iTickMsec$[ebp], 1000 ; 000003e8H
  005a2	7c 1b		 jl	 SHORT $LN2@ProcessSta@2

; 187  : 	{
; 188  : 		this->m_TickRemain -= iTickMsec;			

  005a4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  005a7	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  005aa	2b 4d f8	 sub	 ecx, DWORD PTR _iTickMsec$[ebp]
  005ad	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  005b0	89 4a 14	 mov	 DWORD PTR [edx+20], ecx

; 189  : 		this->m_TickCount = GetTickCount();

  005b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  005b9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005bc	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN2@ProcessSta@2:

; 190  : 
; 191  : 	/*	for(int aIndex = OBJ_STARTUSERINDEX; aIndex < OBJMAX; aIndex++)
; 192  : 		{
; 193  : 			LPOBJ lpUser = &gObj[aIndex];
; 194  : 
; 195  : 			if(lpUser->Connected < PLAYER_PLAYING)
; 196  : 			{
; 197  : 				continue;
; 198  : 			}
; 199  : 
; 200  : 			if(lpUser->MapNumber != TEAMVSTEAM_MAP)
; 201  : 			{
; 202  : 				continue;
; 203  : 			}
; 204  : 			this->GCEventTimer(aIndex);
; 205  : 		}*/
; 206  : 	}
; 207  : 
; 208  : 	if(this->m_TickRemain <= 0)

  005bf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  005c2	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  005c6	7f 0a		 jg	 SHORT $LN3@ProcessSta@2

; 209  : 	{
; 210  : 		this->SetStatus(eEVENT_TEAMVSTEAM_CLOSE);

  005c8	6a 00		 push	 0
  005ca	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005cd	e8 00 00 00 00	 call	 ?SetStatus@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::SetStatus
$LN3@ProcessSta@2:

; 211  : 	}
; 212  : }

  005d2	5f		 pop	 edi
  005d3	5e		 pop	 esi
  005d4	5b		 pop	 ebx
  005d5	8b e5		 mov	 esp, ebp
  005d7	5d		 pop	 ebp
  005d8	c3		 ret	 0
?ProcessStatusStart@CTeamVsTeam@@QAEXXZ ENDP		; CTeamVsTeam::ProcessStatusStart
_TEXT	ENDS
PUBLIC	?GCEventStatusAll@CTeamVsTeam@@QAEXXZ		; CTeamVsTeam::GCEventStatusAll
PUBLIC	?StatusStart@CTeamVsTeam@@QAEXXZ		; CTeamVsTeam::StatusStart
PUBLIC	?StatusWait@CTeamVsTeam@@QAEXXZ			; CTeamVsTeam::StatusWait
PUBLIC	?StatusClose@CTeamVsTeam@@QAEXXZ		; CTeamVsTeam::StatusClose
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
_States$ = 8						; size = 4
?SetStatus@CTeamVsTeam@@QAEXH@Z PROC			; CTeamVsTeam::SetStatus
; _this$ = ecx

; 215  : {

  005e0	55		 push	 ebp
  005e1	8b ec		 mov	 ebp, esp
  005e3	83 ec 48	 sub	 esp, 72			; 00000048H
  005e6	53		 push	 ebx
  005e7	56		 push	 esi
  005e8	57		 push	 edi
  005e9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 216  : 	this->m_EventStatus = States;

  005ec	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  005ef	8b 4d 08	 mov	 ecx, DWORD PTR _States$[ebp]
  005f2	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 217  : 
; 218  : 	switch(this->m_EventStatus)

  005f5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  005f8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  005fb	89 4d b8	 mov	 DWORD PTR tv66[ebp], ecx
  005fe	83 7d b8 00	 cmp	 DWORD PTR tv66[ebp], 0
  00602	74 0e		 je	 SHORT $LN3@SetStatus
  00604	83 7d b8 01	 cmp	 DWORD PTR tv66[ebp], 1
  00608	74 12		 je	 SHORT $LN2@SetStatus
  0060a	83 7d b8 02	 cmp	 DWORD PTR tv66[ebp], 2
  0060e	74 16		 je	 SHORT $LN1@SetStatus
  00610	eb 1c		 jmp	 SHORT $LN4@SetStatus
$LN3@SetStatus:

; 219  : 	{
; 220  : 		case eEVENT_TEAMVSTEAM_CLOSE:	
; 221  : 			this->StatusClose();	

  00612	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00615	e8 00 00 00 00	 call	 ?StatusClose@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::StatusClose

; 222  : 			break;

  0061a	eb 12		 jmp	 SHORT $LN4@SetStatus
$LN2@SetStatus:

; 223  : 		case eEVENT_TEAMVSTEAM_WAIT:	
; 224  : 			this->StatusWait();		

  0061c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0061f	e8 00 00 00 00	 call	 ?StatusWait@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::StatusWait

; 225  : 			break;

  00624	eb 08		 jmp	 SHORT $LN4@SetStatus
$LN1@SetStatus:

; 226  : 		case eEVENT_TEAMVSTEAM_START:	
; 227  : 			this->StatusStart();	

  00626	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00629	e8 00 00 00 00	 call	 ?StatusStart@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::StatusStart
$LN4@SetStatus:

; 228  : 			break;
; 229  : 	}
; 230  : 
; 231  : 	this->GCEventStatusAll();

  0062e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00631	e8 00 00 00 00	 call	 ?GCEventStatusAll@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::GCEventStatusAll

; 232  : }

  00636	5f		 pop	 edi
  00637	5e		 pop	 esi
  00638	5b		 pop	 ebx
  00639	8b e5		 mov	 esp, ebp
  0063b	5d		 pop	 ebp
  0063c	c2 04 00	 ret	 4
?SetStatus@CTeamVsTeam@@QAEXH@Z ENDP			; CTeamVsTeam::SetStatus
_TEXT	ENDS
PUBLIC	?CheckStatus@CTeamVsTeam@@QAE_NH@Z		; CTeamVsTeam::CheckStatus
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Status$ = 8						; size = 4
?CheckStatus@CTeamVsTeam@@QAE_NH@Z PROC			; CTeamVsTeam::CheckStatus
; _this$ = ecx

; 235  : {

  00640	55		 push	 ebp
  00641	8b ec		 mov	 ebp, esp
  00643	83 ec 44	 sub	 esp, 68			; 00000044H
  00646	53		 push	 ebx
  00647	56		 push	 esi
  00648	57		 push	 edi
  00649	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 236  : 	if(this->m_EventStatus == Status)

  0064c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0064f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00652	3b 4d 08	 cmp	 ecx, DWORD PTR _Status$[ebp]
  00655	75 04		 jne	 SHORT $LN1@CheckStatu

; 237  : 	{
; 238  : 		return true;

  00657	b0 01		 mov	 al, 1
  00659	eb 02		 jmp	 SHORT $LN2@CheckStatu
$LN1@CheckStatu:

; 239  : 	}
; 240  : 
; 241  : 	return false;

  0065b	32 c0		 xor	 al, al
$LN2@CheckStatu:

; 242  : }

  0065d	5f		 pop	 edi
  0065e	5e		 pop	 esi
  0065f	5b		 pop	 ebx
  00660	8b e5		 mov	 esp, ebp
  00662	5d		 pop	 ebp
  00663	c2 04 00	 ret	 4
?CheckStatus@CTeamVsTeam@@QAE_NH@Z ENDP			; CTeamVsTeam::CheckStatus
_TEXT	ENDS
PUBLIC	??_C@_0BD@CMELKNLL@?$FLTeam?5vs?5Team?$FN?5End?$AA@ ; `string'
PUBLIC	?GCEventStatistic@CTeamVsTeam@@QAEXXZ		; CTeamVsTeam::GCEventStatistic
PUBLIC	?GDEventInfo@CTeamVsTeam@@QAEXXZ		; CTeamVsTeam::GDEventInfo
PUBLIC	??_C@_0BO@PDIBNOCN@?$FLTeam?5vs?5Team?$FN?5GREEN?5Team?5Win?$AA@ ; `string'
PUBLIC	?PlayerReward@CTeamVsTeam@@QAEXH@Z		; CTeamVsTeam::PlayerReward
PUBLIC	??_C@_0BN@MLELELKH@?$FLTeam?5vs?5Team?$FN?5BLUE?5Team?5Win?$AA@ ; `string'
PUBLIC	?GCMapAttribute@CTeamVsTeam@@QAEXHH@Z		; CTeamVsTeam::GCMapAttribute
EXTRN	?GCPkLevelSend@@YAXHE@Z:PROC			; GCPkLevelSend
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
;	COMDAT ??_C@_0BD@CMELKNLL@?$FLTeam?5vs?5Team?$FN?5End?$AA@
CONST	SEGMENT
??_C@_0BD@CMELKNLL@?$FLTeam?5vs?5Team?$FN?5End?$AA@ DB '[Team vs Team] En'
	DB	'd', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PDIBNOCN@?$FLTeam?5vs?5Team?$FN?5GREEN?5Team?5Win?$AA@
CONST	SEGMENT
??_C@_0BO@PDIBNOCN@?$FLTeam?5vs?5Team?$FN?5GREEN?5Team?5Win?$AA@ DB '[Tea'
	DB	'm vs Team] GREEN Team Win', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@MLELELKH@?$FLTeam?5vs?5Team?$FN?5BLUE?5Team?5Win?$AA@
CONST	SEGMENT
??_C@_0BN@MLELELKH@?$FLTeam?5vs?5Team?$FN?5BLUE?5Team?5Win?$AA@ DB '[Team'
	DB	' vs Team] BLUE Team Win', 00H		; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_lpUser$230250 = -20					; size = 4
_aIndex$230246 = -16					; size = 4
_lpUser$230238 = -12					; size = 4
_aIndex$230234 = -8					; size = 4
_this$ = -4						; size = 4
?StatusClose@CTeamVsTeam@@QAEXXZ PROC			; CTeamVsTeam::StatusClose
; _this$ = ecx

; 245  : {

  00670	55		 push	 ebp
  00671	8b ec		 mov	 ebp, esp
  00673	83 ec 54	 sub	 esp, 84			; 00000054H
  00676	53		 push	 ebx
  00677	56		 push	 esi
  00678	57		 push	 edi
  00679	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 246  : 	for(int aIndex = OBJ_STARTUSERINDEX; aIndex < OBJMAX; aIndex++)

  0067c	c7 45 f8 b0 36
	00 00		 mov	 DWORD PTR _aIndex$230234[ebp], 14000 ; 000036b0H
  00683	eb 09		 jmp	 SHORT $LN12@StatusClos
$LN11@StatusClos:
  00685	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$230234[ebp]
  00688	83 c0 01	 add	 eax, 1
  0068b	89 45 f8	 mov	 DWORD PTR _aIndex$230234[ebp], eax
$LN12@StatusClos:
  0068e	81 7d f8 98 3a
	00 00		 cmp	 DWORD PTR _aIndex$230234[ebp], 15000 ; 00003a98H
  00695	7d 55		 jge	 SHORT $LN10@StatusClos

; 247  : 	{
; 248  : 		LPOBJ lpUser = &gObj[aIndex];

  00697	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$230234[ebp]
  0069a	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  006a0	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  006a6	89 45 f4	 mov	 DWORD PTR _lpUser$230238[ebp], eax

; 249  : 
; 250  : 		if(lpUser->Connected < PLAYER_PLAYING)

  006a9	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$230238[ebp]
  006ac	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  006b0	7d 02		 jge	 SHORT $LN9@StatusClos

; 251  : 		{
; 252  : 			continue;

  006b2	eb d1		 jmp	 SHORT $LN11@StatusClos
$LN9@StatusClos:

; 253  : 		}
; 254  : 
; 255  : 		if(lpUser->MapNumber != TEAMVSTEAM_MAP)

  006b4	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$230238[ebp]
  006b7	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  006be	83 f9 52	 cmp	 ecx, 82			; 00000052H
  006c1	74 02		 je	 SHORT $LN8@StatusClos

; 256  : 		{
; 257  : 			continue;

  006c3	eb c0		 jmp	 SHORT $LN11@StatusClos
$LN8@StatusClos:

; 258  : 		}
; 259  : 
; 260  : 		this->GCMapAttribute(aIndex, 0);

  006c5	6a 00		 push	 0
  006c7	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$230234[ebp]
  006ca	50		 push	 eax
  006cb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006ce	e8 00 00 00 00	 call	 ?GCMapAttribute@CTeamVsTeam@@QAEXHH@Z ; CTeamVsTeam::GCMapAttribute

; 261  : 		GCPkLevelSend(aIndex, lpUser->m_PK_Level);

  006d3	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$230238[ebp]
  006d6	0f b6 88 3d 01
	00 00		 movzx	 ecx, BYTE PTR [eax+317]
  006dd	51		 push	 ecx
  006de	8b 55 f8	 mov	 edx, DWORD PTR _aIndex$230234[ebp]
  006e1	52		 push	 edx
  006e2	e8 00 00 00 00	 call	 ?GCPkLevelSend@@YAXHE@Z	; GCPkLevelSend
  006e7	83 c4 08	 add	 esp, 8

; 262  : 	}

  006ea	eb 99		 jmp	 SHORT $LN11@StatusClos
$LN10@StatusClos:

; 263  : 
; 264  : 	if(this->m_TeamScore1 > this->m_TeamScore2)

  006ec	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  006ef	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006f2	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  006f5	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  006f8	7e 19		 jle	 SHORT $LN7@StatusClos

; 265  : 	{
; 266  : 		AllSendServerMsg("[Team vs Team] BLUE Team Win");

  006fa	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@MLELELKH@?$FLTeam?5vs?5Team?$FN?5BLUE?5Team?5Win?$AA@
  006ff	e8 00 00 00 00	 call	 ?AllSendServerMsg@@YAXPAD@Z ; AllSendServerMsg
  00704	83 c4 04	 add	 esp, 4

; 267  : 		this->PlayerReward(eEVENT_TVT_TEAM_1);

  00707	6a 01		 push	 1
  00709	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0070c	e8 00 00 00 00	 call	 ?PlayerReward@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::PlayerReward
  00711	eb 25		 jmp	 SHORT $LN6@StatusClos
$LN7@StatusClos:

; 268  : 	}
; 269  : 	else if(this->m_TeamScore2 > this->m_TeamScore1)

  00713	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00716	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00719	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0071c	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0071f	7e 17		 jle	 SHORT $LN6@StatusClos

; 270  : 	{
; 271  : 		AllSendServerMsg("[Team vs Team] GREEN Team Win");

  00721	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PDIBNOCN@?$FLTeam?5vs?5Team?$FN?5GREEN?5Team?5Win?$AA@
  00726	e8 00 00 00 00	 call	 ?AllSendServerMsg@@YAXPAD@Z ; AllSendServerMsg
  0072b	83 c4 04	 add	 esp, 4

; 272  : 		this->PlayerReward(eEVENT_TVT_TEAM_2);

  0072e	6a 02		 push	 2
  00730	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00733	e8 00 00 00 00	 call	 ?PlayerReward@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::PlayerReward
$LN6@StatusClos:

; 273  : 	}	
; 274  : 
; 275  : 	this->GDEventInfo();

  00738	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0073b	e8 00 00 00 00	 call	 ?GDEventInfo@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::GDEventInfo

; 276  : 	this->GCEventStatistic();

  00740	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00743	e8 00 00 00 00	 call	 ?GCEventStatistic@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::GCEventStatistic

; 277  : 
; 278  : 	for(int aIndex = OBJ_STARTUSERINDEX; aIndex < OBJMAX; aIndex++)

  00748	c7 45 f0 b0 36
	00 00		 mov	 DWORD PTR _aIndex$230246[ebp], 14000 ; 000036b0H
  0074f	eb 09		 jmp	 SHORT $LN4@StatusClos
$LN3@StatusClos:
  00751	8b 45 f0	 mov	 eax, DWORD PTR _aIndex$230246[ebp]
  00754	83 c0 01	 add	 eax, 1
  00757	89 45 f0	 mov	 DWORD PTR _aIndex$230246[ebp], eax
$LN4@StatusClos:
  0075a	81 7d f0 98 3a
	00 00		 cmp	 DWORD PTR _aIndex$230246[ebp], 15000 ; 00003a98H
  00761	7d 46		 jge	 SHORT $LN2@StatusClos

; 279  : 	{
; 280  : 		LPOBJ lpUser = &gObj[aIndex];

  00763	8b 45 f0	 mov	 eax, DWORD PTR _aIndex$230246[ebp]
  00766	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0076c	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00772	89 45 ec	 mov	 DWORD PTR _lpUser$230250[ebp], eax

; 281  : 
; 282  : 		if(lpUser->Connected < PLAYER_PLAYING)

  00775	8b 45 ec	 mov	 eax, DWORD PTR _lpUser$230250[ebp]
  00778	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  0077c	7d 02		 jge	 SHORT $LN1@StatusClos

; 283  : 		{
; 284  : 			continue;

  0077e	eb d1		 jmp	 SHORT $LN3@StatusClos
$LN1@StatusClos:

; 285  : 		}
; 286  : 
; 287  : 		lpUser->m_TvTTeam = 0;

  00780	8b 45 ec	 mov	 eax, DWORD PTR _lpUser$230250[ebp]
  00783	c7 80 14 29 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+10516], 0

; 288  : 		lpUser->m_TvTKill = 0;

  0078d	8b 45 ec	 mov	 eax, DWORD PTR _lpUser$230250[ebp]
  00790	c7 80 18 29 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+10520], 0

; 289  : 		lpUser->m_TvTDie = 0;

  0079a	8b 45 ec	 mov	 eax, DWORD PTR _lpUser$230250[ebp]
  0079d	c7 80 1c 29 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+10524], 0

; 290  : 	}

  007a7	eb a8		 jmp	 SHORT $LN3@StatusClos
$LN2@StatusClos:

; 291  : 
; 292  : 	this->m_TeamScore1 = 0;

  007a9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  007ac	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 293  : 	this->m_TeamScore2 = 0;

  007b3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  007b6	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 294  : 
; 295  : 	AllSendServerMsg("[Team vs Team] End");

  007bd	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@CMELKNLL@?$FLTeam?5vs?5Team?$FN?5End?$AA@
  007c2	e8 00 00 00 00	 call	 ?AllSendServerMsg@@YAXPAD@Z ; AllSendServerMsg
  007c7	83 c4 04	 add	 esp, 4

; 296  : }

  007ca	5f		 pop	 edi
  007cb	5e		 pop	 esi
  007cc	5b		 pop	 ebx
  007cd	8b e5		 mov	 esp, ebp
  007cf	5d		 pop	 ebp
  007d0	c3		 ret	 0
?StatusClose@CTeamVsTeam@@QAEXXZ ENDP			; CTeamVsTeam::StatusClose
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?StatusWait@CTeamVsTeam@@QAEXXZ PROC			; CTeamVsTeam::StatusWait
; _this$ = ecx

; 299  : {

  007e0	55		 push	 ebp
  007e1	8b ec		 mov	 ebp, esp
  007e3	83 ec 44	 sub	 esp, 68			; 00000044H
  007e6	53		 push	 ebx
  007e7	56		 push	 esi
  007e8	57		 push	 edi
  007e9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 300  : 	this->m_TickCount = GetTickCount();

  007ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  007f2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  007f5	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 301  : 	this->m_TickRemain = (60000 * TEAMVSTEAM_WAIT);

  007f8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  007fb	c7 40 14 e0 93
	04 00		 mov	 DWORD PTR [eax+20], 300000 ; 000493e0H

; 302  : }

  00802	5f		 pop	 edi
  00803	5e		 pop	 esi
  00804	5b		 pop	 ebx
  00805	8b e5		 mov	 esp, ebp
  00807	5d		 pop	 ebp
  00808	c3		 ret	 0
?StatusWait@CTeamVsTeam@@QAEXXZ ENDP			; CTeamVsTeam::StatusWait
_TEXT	ENDS
PUBLIC	?GCEventTimer@CTeamVsTeam@@QAEXH@Z		; CTeamVsTeam::GCEventTimer
PUBLIC	?GCTeam@CTeamVsTeam@@QAEXH@Z			; CTeamVsTeam::GCTeam
PUBLIC	??_C@_0BF@HLHBBKDG@?$FLTeam?5vs?5Team?$FN?5Start?$AA@ ; `string'
EXTRN	?ExUserVieweport@@YAXH@Z:PROC			; ExUserVieweport
EXTRN	?gObjTeleport@@YAXHHHH@Z:PROC			; gObjTeleport
EXTRN	_rand:PROC
;	COMDAT ??_C@_0BF@HLHBBKDG@?$FLTeam?5vs?5Team?$FN?5Start?$AA@
CONST	SEGMENT
??_C@_0BF@HLHBBKDG@?$FLTeam?5vs?5Team?$FN?5Start?$AA@ DB '[Team vs Team] '
	DB	'Start', 00H					; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_lpUser$230264 = -12					; size = 4
_aIndex$230260 = -8					; size = 4
_this$ = -4						; size = 4
?StatusStart@CTeamVsTeam@@QAEXXZ PROC			; CTeamVsTeam::StatusStart
; _this$ = ecx

; 305  : {

  00810	55		 push	 ebp
  00811	8b ec		 mov	 ebp, esp
  00813	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00816	53		 push	 ebx
  00817	56		 push	 esi
  00818	57		 push	 edi
  00819	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 306  : 	AllSendServerMsg("[Team vs Team] Start");

  0081c	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@HLHBBKDG@?$FLTeam?5vs?5Team?$FN?5Start?$AA@
  00821	e8 00 00 00 00	 call	 ?AllSendServerMsg@@YAXPAD@Z ; AllSendServerMsg
  00826	83 c4 04	 add	 esp, 4

; 307  : 	this->m_TickCount = GetTickCount();

  00829	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0082f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00832	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 308  : 	this->m_TickRemain = 60000 * this->m_EventDurationTime;

  00835	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00838	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  0083b	69 c9 60 ea 00
	00		 imul	 ecx, 60000		; 0000ea60H
  00841	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00844	89 4a 14	 mov	 DWORD PTR [edx+20], ecx

; 309  : 
; 310  : 	for(int aIndex = OBJ_STARTUSERINDEX; aIndex < OBJMAX; aIndex++)

  00847	c7 45 f8 b0 36
	00 00		 mov	 DWORD PTR _aIndex$230260[ebp], 14000 ; 000036b0H
  0084e	eb 09		 jmp	 SHORT $LN8@StatusStar
$LN7@StatusStar:
  00850	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$230260[ebp]
  00853	83 c0 01	 add	 eax, 1
  00856	89 45 f8	 mov	 DWORD PTR _aIndex$230260[ebp], eax
$LN8@StatusStar:
  00859	81 7d f8 98 3a
	00 00		 cmp	 DWORD PTR _aIndex$230260[ebp], 15000 ; 00003a98H
  00860	0f 8d df 00 00
	00		 jge	 $LN9@StatusStar

; 311  : 	{
; 312  : 		LPOBJ lpUser = &gObj[aIndex];

  00866	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$230260[ebp]
  00869	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0086f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00875	89 45 f4	 mov	 DWORD PTR _lpUser$230264[ebp], eax

; 313  : 
; 314  : 		if(lpUser->Connected < PLAYER_PLAYING)

  00878	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$230264[ebp]
  0087b	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  0087f	7d 02		 jge	 SHORT $LN5@StatusStar

; 315  : 		{
; 316  : 			continue;

  00881	eb cd		 jmp	 SHORT $LN7@StatusStar
$LN5@StatusStar:

; 317  : 		}
; 318  : 
; 319  : 		if(lpUser->MapNumber != TEAMVSTEAM_MAP)

  00883	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$230264[ebp]
  00886	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  0088d	83 f9 52	 cmp	 ecx, 82			; 00000052H
  00890	74 02		 je	 SHORT $LN4@StatusStar

; 320  : 		{
; 321  : 			continue;

  00892	eb bc		 jmp	 SHORT $LN7@StatusStar
$LN4@StatusStar:

; 322  : 		}
; 323  : 
; 324  : 		this->GCTeam(aIndex);

  00894	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$230260[ebp]
  00897	50		 push	 eax
  00898	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0089b	e8 00 00 00 00	 call	 ?GCTeam@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::GCTeam

; 325  : 
; 326  : 		this->GCEventTimer(aIndex);

  008a0	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$230260[ebp]
  008a3	50		 push	 eax
  008a4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008a7	e8 00 00 00 00	 call	 ?GCEventTimer@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::GCEventTimer

; 327  : 		
; 328  : 		if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_1)

  008ac	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$230264[ebp]
  008af	83 b8 14 29 00
	00 01		 cmp	 DWORD PTR [eax+10516], 1
  008b6	75 32		 jne	 SHORT $LN3@StatusStar

; 329  : 		{
; 330  : 			gObjTeleport(aIndex, TEAMVSTEAM_MAP, TEAMVSTEAM_X1+(rand()%6-3), TEAMVSTEAM_Y1+(rand()%6-3));

  008b8	e8 00 00 00 00	 call	 _rand
  008bd	99		 cdq
  008be	b9 06 00 00 00	 mov	 ecx, 6
  008c3	f7 f9		 idiv	 ecx
  008c5	83 c2 19	 add	 edx, 25			; 00000019H
  008c8	52		 push	 edx
  008c9	e8 00 00 00 00	 call	 _rand
  008ce	99		 cdq
  008cf	b9 06 00 00 00	 mov	 ecx, 6
  008d4	f7 f9		 idiv	 ecx
  008d6	83 c2 21	 add	 edx, 33			; 00000021H
  008d9	52		 push	 edx
  008da	6a 52		 push	 82			; 00000052H
  008dc	8b 55 f8	 mov	 edx, DWORD PTR _aIndex$230260[ebp]
  008df	52		 push	 edx
  008e0	e8 00 00 00 00	 call	 ?gObjTeleport@@YAXHHHH@Z ; gObjTeleport
  008e5	83 c4 10	 add	 esp, 16			; 00000010H
  008e8	eb 3c		 jmp	 SHORT $LN2@StatusStar
$LN3@StatusStar:

; 331  : 		}
; 332  : 		else if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_2)

  008ea	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$230264[ebp]
  008ed	83 b8 14 29 00
	00 02		 cmp	 DWORD PTR [eax+10516], 2
  008f4	75 30		 jne	 SHORT $LN2@StatusStar

; 333  : 		{
; 334  : 			gObjTeleport(aIndex, TEAMVSTEAM_MAP, TEAMVSTEAM_X2+(rand()%6-3), TEAMVSTEAM_Y2+(rand()%6-3));

  008f6	e8 00 00 00 00	 call	 _rand
  008fb	99		 cdq
  008fc	b9 06 00 00 00	 mov	 ecx, 6
  00901	f7 f9		 idiv	 ecx
  00903	83 c2 4d	 add	 edx, 77			; 0000004dH
  00906	52		 push	 edx
  00907	e8 00 00 00 00	 call	 _rand
  0090c	99		 cdq
  0090d	b9 06 00 00 00	 mov	 ecx, 6
  00912	f7 f9		 idiv	 ecx
  00914	83 c2 5a	 add	 edx, 90			; 0000005aH
  00917	52		 push	 edx
  00918	6a 52		 push	 82			; 00000052H
  0091a	8b 55 f8	 mov	 edx, DWORD PTR _aIndex$230260[ebp]
  0091d	52		 push	 edx
  0091e	e8 00 00 00 00	 call	 ?gObjTeleport@@YAXHHHH@Z ; gObjTeleport
  00923	83 c4 10	 add	 esp, 16			; 00000010H
$LN2@StatusStar:

; 335  : 		}
; 336  : 
; 337  : 		this->GCMapAttribute(aIndex, 1);

  00926	6a 01		 push	 1
  00928	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$230260[ebp]
  0092b	50		 push	 eax
  0092c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0092f	e8 00 00 00 00	 call	 ?GCMapAttribute@CTeamVsTeam@@QAEXHH@Z ; CTeamVsTeam::GCMapAttribute

; 338  : 		ExUserVieweport(aIndex);

  00934	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$230260[ebp]
  00937	50		 push	 eax
  00938	e8 00 00 00 00	 call	 ?ExUserVieweport@@YAXH@Z ; ExUserVieweport
  0093d	83 c4 04	 add	 esp, 4

; 339  : 	}

  00940	e9 0b ff ff ff	 jmp	 $LN7@StatusStar
$LN9@StatusStar:

; 340  : }

  00945	5f		 pop	 edi
  00946	5e		 pop	 esi
  00947	5b		 pop	 ebx
  00948	8b e5		 mov	 esp, ebp
  0094a	5d		 pop	 ebp
  0094b	c3		 ret	 0
?StatusStart@CTeamVsTeam@@QAEXXZ ENDP			; CTeamVsTeam::StatusStart
_TEXT	ENDS
PUBLIC	?GCOpenWindow@CTeamVsTeam@@QAEXH@Z		; CTeamVsTeam::GCOpenWindow
PUBLIC	?NpcDialog@CTeamVsTeam@@QAE_NHH@Z		; CTeamVsTeam::NpcDialog
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_lpNpc$ = -12						; size = 4
_lpUser$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_aNpcIndex$ = 12					; size = 4
?NpcDialog@CTeamVsTeam@@QAE_NHH@Z PROC			; CTeamVsTeam::NpcDialog
; _this$ = ecx

; 343  : {

  00950	55		 push	 ebp
  00951	8b ec		 mov	 ebp, esp
  00953	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00956	53		 push	 ebx
  00957	56		 push	 esi
  00958	57		 push	 edi
  00959	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 344  : 	LPOBJ lpUser = &gObj[aIndex];

  0095c	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0095f	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00965	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0096b	89 45 f8	 mov	 DWORD PTR _lpUser$[ebp], eax

; 345  : 	LPOBJ lpNpc = &gObj[aNpcIndex];

  0096e	8b 45 0c	 mov	 eax, DWORD PTR _aNpcIndex$[ebp]
  00971	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00977	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0097d	89 45 f4	 mov	 DWORD PTR _lpNpc$[ebp], eax

; 346  : 
; 347  : 	if(lpNpc->Class == this->m_NpcClass && lpNpc->MapNumber == this->m_NpcMap && lpNpc->X == this->m_NpcX && lpNpc->Y == this->m_NpcY)

  00980	8b 45 f4	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  00983	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  0098a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0098d	3b 4a 1c	 cmp	 ecx, DWORD PTR [edx+28]
  00990	75 46		 jne	 SHORT $LN1@NpcDialog
  00992	8b 45 f4	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  00995	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  0099c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0099f	3b 4a 20	 cmp	 ecx, DWORD PTR [edx+32]
  009a2	75 34		 jne	 SHORT $LN1@NpcDialog
  009a4	8b 45 f4	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  009a7	0f bf 88 44 01
	00 00		 movsx	 ecx, WORD PTR [eax+324]
  009ae	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  009b1	3b 4a 24	 cmp	 ecx, DWORD PTR [edx+36]
  009b4	75 22		 jne	 SHORT $LN1@NpcDialog
  009b6	8b 45 f4	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  009b9	0f bf 88 46 01
	00 00		 movsx	 ecx, WORD PTR [eax+326]
  009c0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  009c3	3b 4a 28	 cmp	 ecx, DWORD PTR [edx+40]
  009c6	75 10		 jne	 SHORT $LN1@NpcDialog

; 348  : 	{
; 349  : 		//if(!this->CheckStatus(eEVENT_TEAMVSTEAM_WAIT))
; 350  : 		//{
; 351  : 		//	return true;
; 352  : 		//}
; 353  : 
; 354  : 		//if(this->m_MinReset > lpUser->Reset)
; 355  : 		//{
; 356  : 		//	MsgOutput(aIndex, "[Team Vs Team] Min reset %d", this->m_MinReset);
; 357  : 		//	return true;
; 358  : 		//}
; 359  : 
; 360  : 		this->GCOpenWindow(aIndex);

  009c8	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  009cb	50		 push	 eax
  009cc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009cf	e8 00 00 00 00	 call	 ?GCOpenWindow@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::GCOpenWindow

; 361  : 		return true;

  009d4	b0 01		 mov	 al, 1
  009d6	eb 02		 jmp	 SHORT $LN2@NpcDialog
$LN1@NpcDialog:

; 362  : 	}
; 363  : 
; 364  : 	return false;

  009d8	32 c0		 xor	 al, al
$LN2@NpcDialog:

; 365  : }

  009da	5f		 pop	 edi
  009db	5e		 pop	 esi
  009dc	5b		 pop	 ebx
  009dd	8b e5		 mov	 esp, ebp
  009df	5d		 pop	 ebp
  009e0	c2 08 00	 ret	 8
?NpcDialog@CTeamVsTeam@@QAE_NHH@Z ENDP			; CTeamVsTeam::NpcDialog
; Function compile flags: /Odtp /ZI
_lpUser$230298 = -32					; size = 4
_lpUser$230292 = -28					; size = 4
_i$230288 = -24						; size = 4
_iMaxReset$230287 = -20					; size = 4
_aIndex$230286 = -16					; size = 4
_iCountPlayer$ = -12					; size = 4
_iTeam$ = -8						; size = 4
_this$ = -4						; size = 4
?DivTeam@CTeamVsTeam@@QAEHXZ PROC			; CTeamVsTeam::DivTeam
; _this$ = ecx

; 368  : {

  009f0	55		 push	 ebp
  009f1	8b ec		 mov	 ebp, esp
  009f3	83 ec 60	 sub	 esp, 96			; 00000060H
  009f6	53		 push	 ebx
  009f7	56		 push	 esi
  009f8	57		 push	 edi
  009f9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 369  : 	int iTeam = eEVENT_TVT_TEAM_1;

  009fc	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _iTeam$[ebp], 1

; 370  : 	int iCountPlayer = 0;

  00a03	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _iCountPlayer$[ebp], 0
$LN12@DivTeam:

; 371  : 
; 372  : 	while(true)

  00a0a	b8 01 00 00 00	 mov	 eax, 1
  00a0f	85 c0		 test	 eax, eax
  00a11	0f 84 cf 00 00
	00		 je	 $LN11@DivTeam

; 373  : 	{
; 374  : 		int aIndex = -1;

  00a17	c7 45 f0 ff ff
	ff ff		 mov	 DWORD PTR _aIndex$230286[ebp], -1

; 375  : 		int iMaxReset = 0;

  00a1e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _iMaxReset$230287[ebp], 0

; 376  : 
; 377  : 		for(int i = OBJ_STARTUSERINDEX; i < OBJMAX; i++)

  00a25	c7 45 e8 b0 36
	00 00		 mov	 DWORD PTR _i$230288[ebp], 14000 ; 000036b0H
  00a2c	eb 09		 jmp	 SHORT $LN10@DivTeam
$LN9@DivTeam:
  00a2e	8b 45 e8	 mov	 eax, DWORD PTR _i$230288[ebp]
  00a31	83 c0 01	 add	 eax, 1
  00a34	89 45 e8	 mov	 DWORD PTR _i$230288[ebp], eax
$LN10@DivTeam:
  00a37	81 7d e8 98 3a
	00 00		 cmp	 DWORD PTR _i$230288[ebp], 15000 ; 00003a98H
  00a3e	7d 5c		 jge	 SHORT $LN8@DivTeam

; 378  : 		{
; 379  : 			LPOBJ lpUser = &gObj[i];

  00a40	8b 45 e8	 mov	 eax, DWORD PTR _i$230288[ebp]
  00a43	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00a49	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a4f	89 45 e4	 mov	 DWORD PTR _lpUser$230292[ebp], eax

; 380  : 
; 381  : 			if(lpUser->Connected < PLAYER_PLAYING)

  00a52	8b 45 e4	 mov	 eax, DWORD PTR _lpUser$230292[ebp]
  00a55	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  00a59	7d 02		 jge	 SHORT $LN7@DivTeam

; 382  : 			{
; 383  : 				continue;

  00a5b	eb d1		 jmp	 SHORT $LN9@DivTeam
$LN7@DivTeam:

; 384  : 			}
; 385  : 
; 386  : 			if(lpUser->m_TvTTeam != 0 || lpUser->MapNumber != TEAMVSTEAM_MAP)

  00a5d	8b 45 e4	 mov	 eax, DWORD PTR _lpUser$230292[ebp]
  00a60	83 b8 14 29 00
	00 00		 cmp	 DWORD PTR [eax+10516], 0
  00a67	75 0f		 jne	 SHORT $LN5@DivTeam
  00a69	8b 45 e4	 mov	 eax, DWORD PTR _lpUser$230292[ebp]
  00a6c	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  00a73	83 f9 52	 cmp	 ecx, 82			; 00000052H
  00a76	74 02		 je	 SHORT $LN6@DivTeam
$LN5@DivTeam:

; 387  : 			{
; 388  : 				continue;

  00a78	eb b4		 jmp	 SHORT $LN9@DivTeam
$LN6@DivTeam:

; 389  : 			}
; 390  : 
; 391  : 			if(lpUser->Reset >= iMaxReset)

  00a7a	8b 45 e4	 mov	 eax, DWORD PTR _lpUser$230292[ebp]
  00a7d	8b 88 90 22 00
	00		 mov	 ecx, DWORD PTR [eax+8848]
  00a83	3b 4d ec	 cmp	 ecx, DWORD PTR _iMaxReset$230287[ebp]
  00a86	7c 12		 jl	 SHORT $LN4@DivTeam

; 392  : 			{
; 393  : 				iMaxReset = lpUser->Reset;

  00a88	8b 45 e4	 mov	 eax, DWORD PTR _lpUser$230292[ebp]
  00a8b	8b 88 90 22 00
	00		 mov	 ecx, DWORD PTR [eax+8848]
  00a91	89 4d ec	 mov	 DWORD PTR _iMaxReset$230287[ebp], ecx

; 394  : 				aIndex = i;

  00a94	8b 45 e8	 mov	 eax, DWORD PTR _i$230288[ebp]
  00a97	89 45 f0	 mov	 DWORD PTR _aIndex$230286[ebp], eax
$LN4@DivTeam:

; 395  : 			}
; 396  : 		}

  00a9a	eb 92		 jmp	 SHORT $LN9@DivTeam
$LN8@DivTeam:

; 397  : 
; 398  : 		if(aIndex == -1)

  00a9c	83 7d f0 ff	 cmp	 DWORD PTR _aIndex$230286[ebp], -1
  00aa0	75 02		 jne	 SHORT $LN3@DivTeam

; 399  : 		{
; 400  : 			break;

  00aa2	eb 42		 jmp	 SHORT $LN11@DivTeam
$LN3@DivTeam:

; 401  : 		}
; 402  : 
; 403  : 		LPOBJ lpUser = &gObj[aIndex];

  00aa4	8b 45 f0	 mov	 eax, DWORD PTR _aIndex$230286[ebp]
  00aa7	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00aad	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00ab3	89 45 e0	 mov	 DWORD PTR _lpUser$230298[ebp], eax

; 404  : 		lpUser->m_TvTTeam = iTeam;

  00ab6	8b 45 e0	 mov	 eax, DWORD PTR _lpUser$230298[ebp]
  00ab9	8b 4d f8	 mov	 ecx, DWORD PTR _iTeam$[ebp]
  00abc	89 88 14 29 00
	00		 mov	 DWORD PTR [eax+10516], ecx

; 405  : 		iCountPlayer++;

  00ac2	8b 45 f4	 mov	 eax, DWORD PTR _iCountPlayer$[ebp]
  00ac5	83 c0 01	 add	 eax, 1
  00ac8	89 45 f4	 mov	 DWORD PTR _iCountPlayer$[ebp], eax

; 406  : 
; 407  : 		if(iTeam == eEVENT_TVT_TEAM_1)

  00acb	83 7d f8 01	 cmp	 DWORD PTR _iTeam$[ebp], 1
  00acf	75 09		 jne	 SHORT $LN2@DivTeam

; 408  : 		{
; 409  : 			iTeam = eEVENT_TVT_TEAM_2;

  00ad1	c7 45 f8 02 00
	00 00		 mov	 DWORD PTR _iTeam$[ebp], 2

; 410  : 		}
; 411  : 		else

  00ad8	eb 07		 jmp	 SHORT $LN1@DivTeam
$LN2@DivTeam:

; 412  : 		{
; 413  : 			iTeam = eEVENT_TVT_TEAM_1;

  00ada	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _iTeam$[ebp], 1
$LN1@DivTeam:

; 414  : 		}
; 415  : 	}

  00ae1	e9 24 ff ff ff	 jmp	 $LN12@DivTeam
$LN11@DivTeam:

; 416  : 
; 417  : 	return iCountPlayer;

  00ae6	8b 45 f4	 mov	 eax, DWORD PTR _iCountPlayer$[ebp]

; 418  : }

  00ae9	5f		 pop	 edi
  00aea	5e		 pop	 esi
  00aeb	5b		 pop	 ebx
  00aec	8b e5		 mov	 esp, ebp
  00aee	5d		 pop	 ebp
  00aef	c3		 ret	 0
?DivTeam@CTeamVsTeam@@QAEHXZ ENDP			; CTeamVsTeam::DivTeam
_TEXT	ENDS
PUBLIC	?GCEventScoreAll@CTeamVsTeam@@QAEXXZ		; CTeamVsTeam::GCEventScoreAll
PUBLIC	?GCUserKillCount@CTeamVsTeam@@QAEXH@Z		; CTeamVsTeam::GCUserKillCount
PUBLIC	?PlayerKill@CTeamVsTeam@@QAE_NHH@Z		; CTeamVsTeam::PlayerKill
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv77 = -80						; size = 4
tv72 = -80						; size = 4
_lpTarget$ = -12					; size = 4
_lpUser$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_aTargetIndex$ = 12					; size = 4
?PlayerKill@CTeamVsTeam@@QAE_NHH@Z PROC			; CTeamVsTeam::PlayerKill
; _this$ = ecx

; 421  : {

  00af0	55		 push	 ebp
  00af1	8b ec		 mov	 ebp, esp
  00af3	83 ec 50	 sub	 esp, 80			; 00000050H
  00af6	53		 push	 ebx
  00af7	56		 push	 esi
  00af8	57		 push	 edi
  00af9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 422  : 	if(!this->CheckStatus(eEVENT_TEAMVSTEAM_START))

  00afc	6a 02		 push	 2
  00afe	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b01	e8 00 00 00 00	 call	 ?CheckStatus@CTeamVsTeam@@QAE_NH@Z ; CTeamVsTeam::CheckStatus
  00b06	0f b6 c0	 movzx	 eax, al
  00b09	85 c0		 test	 eax, eax
  00b0b	75 07		 jne	 SHORT $LN11@PlayerKill

; 423  : 	{
; 424  : 		return false;

  00b0d	32 c0		 xor	 al, al
  00b0f	e9 8b 01 00 00	 jmp	 $LN12@PlayerKill
$LN11@PlayerKill:

; 425  : 	}
; 426  : 
; 427  : 	if(!OBJMAX_RANGE(aIndex) || !OBJMAX_RANGE(aTargetIndex))

  00b14	83 7d 08 00	 cmp	 DWORD PTR _aIndex$[ebp], 0
  00b18	7d 09		 jge	 SHORT $LN14@PlayerKill
  00b1a	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
  00b21	eb 0f		 jmp	 SHORT $LN15@PlayerKill
$LN14@PlayerKill:
  00b23	33 c0		 xor	 eax, eax
  00b25	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _aIndex$[ebp], 14999 ; 00003a97H
  00b2c	0f 9e c0	 setle	 al
  00b2f	89 45 b0	 mov	 DWORD PTR tv72[ebp], eax
$LN15@PlayerKill:
  00b32	83 7d b0 00	 cmp	 DWORD PTR tv72[ebp], 0
  00b36	74 24		 je	 SHORT $LN9@PlayerKill
  00b38	83 7d 0c 00	 cmp	 DWORD PTR _aTargetIndex$[ebp], 0
  00b3c	7d 09		 jge	 SHORT $LN16@PlayerKill
  00b3e	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
  00b45	eb 0f		 jmp	 SHORT $LN17@PlayerKill
$LN16@PlayerKill:
  00b47	33 c0		 xor	 eax, eax
  00b49	81 7d 0c 97 3a
	00 00		 cmp	 DWORD PTR _aTargetIndex$[ebp], 14999 ; 00003a97H
  00b50	0f 9e c0	 setle	 al
  00b53	89 45 b0	 mov	 DWORD PTR tv77[ebp], eax
$LN17@PlayerKill:
  00b56	83 7d b0 00	 cmp	 DWORD PTR tv77[ebp], 0
  00b5a	75 07		 jne	 SHORT $LN10@PlayerKill
$LN9@PlayerKill:

; 428  : 	{
; 429  : 		return false;

  00b5c	32 c0		 xor	 al, al
  00b5e	e9 3c 01 00 00	 jmp	 $LN12@PlayerKill
$LN10@PlayerKill:

; 430  : 	}
; 431  : 
; 432  : 	LPOBJ lpUser = &gObj[aIndex];

  00b63	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00b66	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00b6c	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00b72	89 45 f8	 mov	 DWORD PTR _lpUser$[ebp], eax

; 433  : 	LPOBJ lpTarget = &gObj[aTargetIndex];

  00b75	8b 45 0c	 mov	 eax, DWORD PTR _aTargetIndex$[ebp]
  00b78	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00b7e	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00b84	89 45 f4	 mov	 DWORD PTR _lpTarget$[ebp], eax

; 434  : 
; 435  : 	if(lpUser->Type != OBJ_USER || lpTarget->Type != OBJ_USER)

  00b87	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00b8a	0f b7 48 68	 movzx	 ecx, WORD PTR [eax+104]
  00b8e	83 f9 01	 cmp	 ecx, 1
  00b91	75 0c		 jne	 SHORT $LN7@PlayerKill
  00b93	8b 45 f4	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  00b96	0f b7 48 68	 movzx	 ecx, WORD PTR [eax+104]
  00b9a	83 f9 01	 cmp	 ecx, 1
  00b9d	74 07		 je	 SHORT $LN8@PlayerKill
$LN7@PlayerKill:

; 436  : 	{
; 437  : 		return false;

  00b9f	32 c0		 xor	 al, al
  00ba1	e9 f9 00 00 00	 jmp	 $LN12@PlayerKill
$LN8@PlayerKill:

; 438  : 	}
; 439  : 
; 440  : 	if(lpUser->Connected < PLAYER_PLAYING || lpTarget->Connected < PLAYER_PLAYING)

  00ba6	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00ba9	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  00bad	7c 09		 jl	 SHORT $LN5@PlayerKill
  00baf	8b 45 f4	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  00bb2	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  00bb6	7d 07		 jge	 SHORT $LN6@PlayerKill
$LN5@PlayerKill:

; 441  : 	{
; 442  : 		return false;

  00bb8	32 c0		 xor	 al, al
  00bba	e9 e0 00 00 00	 jmp	 $LN12@PlayerKill
$LN6@PlayerKill:

; 443  : 	}
; 444  : 
; 445  : 	if(lpUser->MapNumber != TEAMVSTEAM_MAP)

  00bbf	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00bc2	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  00bc9	83 f9 52	 cmp	 ecx, 82			; 00000052H
  00bcc	74 07		 je	 SHORT $LN4@PlayerKill

; 446  : 	{
; 447  : 		return false;

  00bce	32 c0		 xor	 al, al
  00bd0	e9 ca 00 00 00	 jmp	 $LN12@PlayerKill
$LN4@PlayerKill:

; 448  : 	}
; 449  : 
; 450  : 	if(lpTarget->m_TvTTeam == eEVENT_TVT_TEAM_1 && lpUser->m_TvTTeam == eEVENT_TVT_TEAM_2)

  00bd5	8b 45 f4	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  00bd8	83 b8 14 29 00
	00 01		 cmp	 DWORD PTR [eax+10516], 1
  00bdf	75 55		 jne	 SHORT $LN3@PlayerKill
  00be1	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00be4	83 b8 14 29 00
	00 02		 cmp	 DWORD PTR [eax+10516], 2
  00beb	75 49		 jne	 SHORT $LN3@PlayerKill

; 451  : 	{
; 452  : 		lpTarget->m_TvTKill++;

  00bed	8b 45 f4	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  00bf0	8b 88 18 29 00
	00		 mov	 ecx, DWORD PTR [eax+10520]
  00bf6	83 c1 01	 add	 ecx, 1
  00bf9	8b 55 f4	 mov	 edx, DWORD PTR _lpTarget$[ebp]
  00bfc	89 8a 18 29 00
	00		 mov	 DWORD PTR [edx+10520], ecx

; 453  : 		lpUser->m_TvTDie++;

  00c02	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00c05	8b 88 1c 29 00
	00		 mov	 ecx, DWORD PTR [eax+10524]
  00c0b	83 c1 01	 add	 ecx, 1
  00c0e	8b 55 f8	 mov	 edx, DWORD PTR _lpUser$[ebp]
  00c11	89 8a 1c 29 00
	00		 mov	 DWORD PTR [edx+10524], ecx

; 454  : 		this->m_TeamScore1++;	

  00c17	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00c1a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00c1d	83 c1 01	 add	 ecx, 1
  00c20	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00c23	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 455  : 		GCUserKillCount(lpTarget->m_Index);

  00c26	8b 45 f4	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  00c29	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c2b	51		 push	 ecx
  00c2c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c2f	e8 00 00 00 00	 call	 ?GCUserKillCount@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::GCUserKillCount
  00c34	eb 5f		 jmp	 SHORT $LN2@PlayerKill
$LN3@PlayerKill:

; 456  : 	}
; 457  : 	else if(lpTarget->m_TvTTeam == eEVENT_TVT_TEAM_2 && lpUser->m_TvTTeam == eEVENT_TVT_TEAM_1)

  00c36	8b 45 f4	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  00c39	83 b8 14 29 00
	00 02		 cmp	 DWORD PTR [eax+10516], 2
  00c40	75 53		 jne	 SHORT $LN2@PlayerKill
  00c42	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00c45	83 b8 14 29 00
	00 01		 cmp	 DWORD PTR [eax+10516], 1
  00c4c	75 47		 jne	 SHORT $LN2@PlayerKill

; 458  : 	{
; 459  : 		lpTarget->m_TvTKill++;

  00c4e	8b 45 f4	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  00c51	8b 88 18 29 00
	00		 mov	 ecx, DWORD PTR [eax+10520]
  00c57	83 c1 01	 add	 ecx, 1
  00c5a	8b 55 f4	 mov	 edx, DWORD PTR _lpTarget$[ebp]
  00c5d	89 8a 18 29 00
	00		 mov	 DWORD PTR [edx+10520], ecx

; 460  : 		lpUser->m_TvTDie++;

  00c63	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00c66	8b 88 1c 29 00
	00		 mov	 ecx, DWORD PTR [eax+10524]
  00c6c	83 c1 01	 add	 ecx, 1
  00c6f	8b 55 f8	 mov	 edx, DWORD PTR _lpUser$[ebp]
  00c72	89 8a 1c 29 00
	00		 mov	 DWORD PTR [edx+10524], ecx

; 461  : 		this->m_TeamScore2++;

  00c78	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00c7b	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00c7e	83 c1 01	 add	 ecx, 1
  00c81	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00c84	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 462  : 		GCUserKillCount(lpTarget->m_Index);

  00c87	8b 45 f4	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  00c8a	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c8c	51		 push	 ecx
  00c8d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c90	e8 00 00 00 00	 call	 ?GCUserKillCount@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::GCUserKillCount
$LN2@PlayerKill:

; 463  : 	}
; 464  : 
; 465  : 	this->GCEventScoreAll();

  00c95	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c98	e8 00 00 00 00	 call	 ?GCEventScoreAll@CTeamVsTeam@@QAEXXZ ; CTeamVsTeam::GCEventScoreAll

; 466  : 
; 467  : 	return true;

  00c9d	b0 01		 mov	 al, 1
$LN12@PlayerKill:

; 468  : }

  00c9f	5f		 pop	 edi
  00ca0	5e		 pop	 esi
  00ca1	5b		 pop	 ebx
  00ca2	8b e5		 mov	 esp, ebp
  00ca4	5d		 pop	 ebp
  00ca5	c2 08 00	 ret	 8
?PlayerKill@CTeamVsTeam@@QAE_NHH@Z ENDP			; CTeamVsTeam::PlayerKill
_TEXT	ENDS
PUBLIC	?AttackCheck@CTeamVsTeam@@QAE_NHH@Z		; CTeamVsTeam::AttackCheck
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv77 = -80						; size = 4
tv72 = -80						; size = 4
_lpTarget$ = -12					; size = 4
_lpUser$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_aTargetIndex$ = 12					; size = 4
?AttackCheck@CTeamVsTeam@@QAE_NHH@Z PROC		; CTeamVsTeam::AttackCheck
; _this$ = ecx

; 471  : {

  00cb0	55		 push	 ebp
  00cb1	8b ec		 mov	 ebp, esp
  00cb3	83 ec 50	 sub	 esp, 80			; 00000050H
  00cb6	53		 push	 ebx
  00cb7	56		 push	 esi
  00cb8	57		 push	 edi
  00cb9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 472  : 	if(!this->CheckStatus(eEVENT_TEAMVSTEAM_START))

  00cbc	6a 02		 push	 2
  00cbe	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00cc1	e8 00 00 00 00	 call	 ?CheckStatus@CTeamVsTeam@@QAE_NH@Z ; CTeamVsTeam::CheckStatus
  00cc6	0f b6 c0	 movzx	 eax, al
  00cc9	85 c0		 test	 eax, eax
  00ccb	75 07		 jne	 SHORT $LN8@AttackChec

; 473  : 	{
; 474  : 		return true;

  00ccd	b0 01		 mov	 al, 1
  00ccf	e9 c3 00 00 00	 jmp	 $LN9@AttackChec
$LN8@AttackChec:

; 475  : 	}
; 476  : 
; 477  : 	if(!OBJMAX_RANGE(aIndex) || !OBJMAX_RANGE(aTargetIndex))

  00cd4	83 7d 08 00	 cmp	 DWORD PTR _aIndex$[ebp], 0
  00cd8	7d 09		 jge	 SHORT $LN11@AttackChec
  00cda	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
  00ce1	eb 0f		 jmp	 SHORT $LN12@AttackChec
$LN11@AttackChec:
  00ce3	33 c0		 xor	 eax, eax
  00ce5	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _aIndex$[ebp], 14999 ; 00003a97H
  00cec	0f 9e c0	 setle	 al
  00cef	89 45 b0	 mov	 DWORD PTR tv72[ebp], eax
$LN12@AttackChec:
  00cf2	83 7d b0 00	 cmp	 DWORD PTR tv72[ebp], 0
  00cf6	74 24		 je	 SHORT $LN6@AttackChec
  00cf8	83 7d 0c 00	 cmp	 DWORD PTR _aTargetIndex$[ebp], 0
  00cfc	7d 09		 jge	 SHORT $LN13@AttackChec
  00cfe	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
  00d05	eb 0f		 jmp	 SHORT $LN14@AttackChec
$LN13@AttackChec:
  00d07	33 c0		 xor	 eax, eax
  00d09	81 7d 0c 97 3a
	00 00		 cmp	 DWORD PTR _aTargetIndex$[ebp], 14999 ; 00003a97H
  00d10	0f 9e c0	 setle	 al
  00d13	89 45 b0	 mov	 DWORD PTR tv77[ebp], eax
$LN14@AttackChec:
  00d16	83 7d b0 00	 cmp	 DWORD PTR tv77[ebp], 0
  00d1a	75 04		 jne	 SHORT $LN7@AttackChec
$LN6@AttackChec:

; 478  : 	{
; 479  : 		return true;

  00d1c	b0 01		 mov	 al, 1
  00d1e	eb 77		 jmp	 SHORT $LN9@AttackChec
$LN7@AttackChec:

; 480  : 	}
; 481  : 
; 482  : 	LPOBJ lpUser = &gObj[aIndex];

  00d20	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00d23	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00d29	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00d2f	89 45 f8	 mov	 DWORD PTR _lpUser$[ebp], eax

; 483  : 	LPOBJ lpTarget = &gObj[aTargetIndex];

  00d32	8b 45 0c	 mov	 eax, DWORD PTR _aTargetIndex$[ebp]
  00d35	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00d3b	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00d41	89 45 f4	 mov	 DWORD PTR _lpTarget$[ebp], eax

; 484  : 
; 485  : 	if(lpUser->Connected < PLAYER_PLAYING || lpTarget->Connected < PLAYER_PLAYING)

  00d44	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00d47	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  00d4b	7c 09		 jl	 SHORT $LN4@AttackChec
  00d4d	8b 45 f4	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  00d50	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  00d54	7d 04		 jge	 SHORT $LN5@AttackChec
$LN4@AttackChec:

; 486  : 	{
; 487  : 		return true;

  00d56	b0 01		 mov	 al, 1
  00d58	eb 3d		 jmp	 SHORT $LN9@AttackChec
$LN5@AttackChec:

; 488  : 	}
; 489  : 
; 490  : 	if(lpUser->MapNumber != TEAMVSTEAM_MAP)

  00d5a	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00d5d	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  00d64	83 f9 52	 cmp	 ecx, 82			; 00000052H
  00d67	74 04		 je	 SHORT $LN3@AttackChec

; 491  : 	{
; 492  : 		return true;

  00d69	b0 01		 mov	 al, 1
  00d6b	eb 2a		 jmp	 SHORT $LN9@AttackChec
$LN3@AttackChec:

; 493  : 	}
; 494  : 
; 495  : 	if(lpUser->m_TvTTeam == 0)

  00d6d	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00d70	83 b8 14 29 00
	00 00		 cmp	 DWORD PTR [eax+10516], 0
  00d77	75 04		 jne	 SHORT $LN2@AttackChec

; 496  : 	{
; 497  : 		return true;

  00d79	b0 01		 mov	 al, 1
  00d7b	eb 1a		 jmp	 SHORT $LN9@AttackChec
$LN2@AttackChec:

; 498  : 	}
; 499  : 
; 500  : 	if(lpUser->m_TvTTeam != lpTarget->m_TvTTeam)

  00d7d	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00d80	8b 4d f4	 mov	 ecx, DWORD PTR _lpTarget$[ebp]
  00d83	8b 90 14 29 00
	00		 mov	 edx, DWORD PTR [eax+10516]
  00d89	3b 91 14 29 00
	00		 cmp	 edx, DWORD PTR [ecx+10516]
  00d8f	74 04		 je	 SHORT $LN1@AttackChec

; 501  : 	{
; 502  : 		return true;

  00d91	b0 01		 mov	 al, 1
  00d93	eb 02		 jmp	 SHORT $LN9@AttackChec
$LN1@AttackChec:

; 503  : 	}
; 504  : 
; 505  : 	return false;

  00d95	32 c0		 xor	 al, al
$LN9@AttackChec:

; 506  : }

  00d97	5f		 pop	 edi
  00d98	5e		 pop	 esi
  00d99	5b		 pop	 ebx
  00d9a	8b e5		 mov	 esp, ebp
  00d9c	5d		 pop	 ebp
  00d9d	c2 08 00	 ret	 8
?AttackCheck@CTeamVsTeam@@QAE_NHH@Z ENDP		; CTeamVsTeam::AttackCheck
_TEXT	ENDS
PUBLIC	?PKCheck@CTeamVsTeam@@QAE_NHH@Z			; CTeamVsTeam::PKCheck
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv77 = -80						; size = 4
tv72 = -80						; size = 4
_lpTarget$ = -12					; size = 4
_lpUser$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_aTargetIndex$ = 12					; size = 4
?PKCheck@CTeamVsTeam@@QAE_NHH@Z PROC			; CTeamVsTeam::PKCheck
; _this$ = ecx

; 509  : {

  00da0	55		 push	 ebp
  00da1	8b ec		 mov	 ebp, esp
  00da3	83 ec 50	 sub	 esp, 80			; 00000050H
  00da6	53		 push	 ebx
  00da7	56		 push	 esi
  00da8	57		 push	 edi
  00da9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 510  : 	if(!this->CheckStatus(eEVENT_TEAMVSTEAM_START))

  00dac	6a 02		 push	 2
  00dae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00db1	e8 00 00 00 00	 call	 ?CheckStatus@CTeamVsTeam@@QAE_NH@Z ; CTeamVsTeam::CheckStatus
  00db6	0f b6 c0	 movzx	 eax, al
  00db9	85 c0		 test	 eax, eax
  00dbb	75 07		 jne	 SHORT $LN6@PKCheck

; 511  : 	{
; 512  : 		return true;

  00dbd	b0 01		 mov	 al, 1
  00dbf	e9 9b 00 00 00	 jmp	 $LN7@PKCheck
$LN6@PKCheck:

; 513  : 	}
; 514  : 
; 515  : 	if(!OBJMAX_RANGE(aIndex) || !OBJMAX_RANGE(aTargetIndex))

  00dc4	83 7d 08 00	 cmp	 DWORD PTR _aIndex$[ebp], 0
  00dc8	7d 09		 jge	 SHORT $LN9@PKCheck
  00dca	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
  00dd1	eb 0f		 jmp	 SHORT $LN10@PKCheck
$LN9@PKCheck:
  00dd3	33 c0		 xor	 eax, eax
  00dd5	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _aIndex$[ebp], 14999 ; 00003a97H
  00ddc	0f 9e c0	 setle	 al
  00ddf	89 45 b0	 mov	 DWORD PTR tv72[ebp], eax
$LN10@PKCheck:
  00de2	83 7d b0 00	 cmp	 DWORD PTR tv72[ebp], 0
  00de6	74 24		 je	 SHORT $LN4@PKCheck
  00de8	83 7d 0c 00	 cmp	 DWORD PTR _aTargetIndex$[ebp], 0
  00dec	7d 09		 jge	 SHORT $LN11@PKCheck
  00dee	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
  00df5	eb 0f		 jmp	 SHORT $LN12@PKCheck
$LN11@PKCheck:
  00df7	33 c0		 xor	 eax, eax
  00df9	81 7d 0c 97 3a
	00 00		 cmp	 DWORD PTR _aTargetIndex$[ebp], 14999 ; 00003a97H
  00e00	0f 9e c0	 setle	 al
  00e03	89 45 b0	 mov	 DWORD PTR tv77[ebp], eax
$LN12@PKCheck:
  00e06	83 7d b0 00	 cmp	 DWORD PTR tv77[ebp], 0
  00e0a	75 04		 jne	 SHORT $LN5@PKCheck
$LN4@PKCheck:

; 516  : 	{
; 517  : 		return true;

  00e0c	b0 01		 mov	 al, 1
  00e0e	eb 4f		 jmp	 SHORT $LN7@PKCheck
$LN5@PKCheck:

; 518  : 	}
; 519  : 
; 520  : 	LPOBJ lpUser = &gObj[aIndex];

  00e10	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00e13	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00e19	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00e1f	89 45 f8	 mov	 DWORD PTR _lpUser$[ebp], eax

; 521  : 	LPOBJ lpTarget = &gObj[aTargetIndex];

  00e22	8b 45 0c	 mov	 eax, DWORD PTR _aTargetIndex$[ebp]
  00e25	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00e2b	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00e31	89 45 f4	 mov	 DWORD PTR _lpTarget$[ebp], eax

; 522  : 
; 523  : 	if(lpUser->Connected < PLAYER_PLAYING || lpTarget->Connected < PLAYER_PLAYING)

  00e34	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00e37	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  00e3b	7c 09		 jl	 SHORT $LN2@PKCheck
  00e3d	8b 45 f4	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  00e40	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  00e44	7d 04		 jge	 SHORT $LN3@PKCheck
$LN2@PKCheck:

; 524  : 	{
; 525  : 		return true;

  00e46	b0 01		 mov	 al, 1
  00e48	eb 15		 jmp	 SHORT $LN7@PKCheck
$LN3@PKCheck:

; 526  : 	}
; 527  : 
; 528  : 	if(lpUser->MapNumber != TEAMVSTEAM_MAP)

  00e4a	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00e4d	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  00e54	83 f9 52	 cmp	 ecx, 82			; 00000052H
  00e57	74 04		 je	 SHORT $LN1@PKCheck

; 529  : 	{
; 530  : 		return true;

  00e59	b0 01		 mov	 al, 1
  00e5b	eb 02		 jmp	 SHORT $LN7@PKCheck
$LN1@PKCheck:

; 531  : 	}
; 532  : 
; 533  : 	return false;

  00e5d	32 c0		 xor	 al, al
$LN7@PKCheck:

; 534  : }

  00e5f	5f		 pop	 edi
  00e60	5e		 pop	 esi
  00e61	5b		 pop	 ebx
  00e62	8b e5		 mov	 esp, ebp
  00e64	5d		 pop	 ebp
  00e65	c2 08 00	 ret	 8
?PKCheck@CTeamVsTeam@@QAE_NHH@Z ENDP			; CTeamVsTeam::PKCheck
_TEXT	ENDS
PUBLIC	?PlayerRegen@CTeamVsTeam@@QAE_NH@Z		; CTeamVsTeam::PlayerRegen
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv72 = -76						; size = 4
_lpUser$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
?PlayerRegen@CTeamVsTeam@@QAE_NH@Z PROC			; CTeamVsTeam::PlayerRegen
; _this$ = ecx

; 537  : {

  00e70	55		 push	 ebp
  00e71	8b ec		 mov	 ebp, esp
  00e73	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00e76	53		 push	 ebx
  00e77	56		 push	 esi
  00e78	57		 push	 edi
  00e79	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 538  : 	if(!this->CheckStatus(eEVENT_TEAMVSTEAM_START))

  00e7c	6a 02		 push	 2
  00e7e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e81	e8 00 00 00 00	 call	 ?CheckStatus@CTeamVsTeam@@QAE_NH@Z ; CTeamVsTeam::CheckStatus
  00e86	0f b6 c0	 movzx	 eax, al
  00e89	85 c0		 test	 eax, eax
  00e8b	75 07		 jne	 SHORT $LN7@PlayerRege

; 539  : 	{
; 540  : 		return false;

  00e8d	32 c0		 xor	 al, al
  00e8f	e9 e7 00 00 00	 jmp	 $LN8@PlayerRege
$LN7@PlayerRege:

; 541  : 	}
; 542  : 
; 543  : 	if(!OBJMAX_RANGE(aIndex))

  00e94	83 7d 08 00	 cmp	 DWORD PTR _aIndex$[ebp], 0
  00e98	7d 09		 jge	 SHORT $LN10@PlayerRege
  00e9a	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
  00ea1	eb 0f		 jmp	 SHORT $LN11@PlayerRege
$LN10@PlayerRege:
  00ea3	33 c0		 xor	 eax, eax
  00ea5	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _aIndex$[ebp], 14999 ; 00003a97H
  00eac	0f 9e c0	 setle	 al
  00eaf	89 45 b4	 mov	 DWORD PTR tv72[ebp], eax
$LN11@PlayerRege:
  00eb2	83 7d b4 00	 cmp	 DWORD PTR tv72[ebp], 0
  00eb6	75 07		 jne	 SHORT $LN6@PlayerRege

; 544  : 	{
; 545  : 		return false;

  00eb8	32 c0		 xor	 al, al
  00eba	e9 bc 00 00 00	 jmp	 $LN8@PlayerRege
$LN6@PlayerRege:

; 546  : 	}
; 547  : 
; 548  : 	LPOBJ lpUser = &gObj[aIndex];

  00ebf	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00ec2	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00ec8	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00ece	89 45 f8	 mov	 DWORD PTR _lpUser$[ebp], eax

; 549  : 
; 550  : 	if(lpUser->Connected < PLAYER_PLAYING)

  00ed1	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00ed4	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  00ed8	7d 07		 jge	 SHORT $LN5@PlayerRege

; 551  : 	{
; 552  : 		return false;

  00eda	32 c0		 xor	 al, al
  00edc	e9 9a 00 00 00	 jmp	 $LN8@PlayerRege
$LN5@PlayerRege:

; 553  : 	}
; 554  : 
; 555  : 	if(lpUser->MapNumber != TEAMVSTEAM_MAP)

  00ee1	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00ee4	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  00eeb	83 f9 52	 cmp	 ecx, 82			; 00000052H
  00eee	74 07		 je	 SHORT $LN4@PlayerRege

; 556  : 	{
; 557  : 		return false;

  00ef0	32 c0		 xor	 al, al
  00ef2	e9 84 00 00 00	 jmp	 $LN8@PlayerRege
$LN4@PlayerRege:

; 558  : 	}
; 559  : 	
; 560  : 	if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_1)

  00ef7	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00efa	83 b8 14 29 00
	00 01		 cmp	 DWORD PTR [eax+10516], 1
  00f01	75 36		 jne	 SHORT $LN3@PlayerRege

; 561  : 	{
; 562  : 		lpUser->X = TEAMVSTEAM_X1+(rand()%6-3);

  00f03	e8 00 00 00 00	 call	 _rand
  00f08	99		 cdq
  00f09	b9 06 00 00 00	 mov	 ecx, 6
  00f0e	f7 f9		 idiv	 ecx
  00f10	83 c2 21	 add	 edx, 33			; 00000021H
  00f13	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00f16	66 89 90 44 01
	00 00		 mov	 WORD PTR [eax+324], dx

; 563  : 		lpUser->Y = TEAMVSTEAM_Y1+(rand()%6-3);

  00f1d	e8 00 00 00 00	 call	 _rand
  00f22	99		 cdq
  00f23	b9 06 00 00 00	 mov	 ecx, 6
  00f28	f7 f9		 idiv	 ecx
  00f2a	83 c2 19	 add	 edx, 25			; 00000019H
  00f2d	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00f30	66 89 90 46 01
	00 00		 mov	 WORD PTR [eax+326], dx
  00f37	eb 40		 jmp	 SHORT $LN2@PlayerRege
$LN3@PlayerRege:

; 564  : 	}
; 565  : 	else if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_2)

  00f39	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00f3c	83 b8 14 29 00
	00 02		 cmp	 DWORD PTR [eax+10516], 2
  00f43	75 34		 jne	 SHORT $LN2@PlayerRege

; 566  : 	{
; 567  : 		lpUser->X = TEAMVSTEAM_X2+(rand()%6-3);

  00f45	e8 00 00 00 00	 call	 _rand
  00f4a	99		 cdq
  00f4b	b9 06 00 00 00	 mov	 ecx, 6
  00f50	f7 f9		 idiv	 ecx
  00f52	83 c2 5a	 add	 edx, 90			; 0000005aH
  00f55	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00f58	66 89 90 44 01
	00 00		 mov	 WORD PTR [eax+324], dx

; 568  : 		lpUser->Y = TEAMVSTEAM_Y2+(rand()%6-3);

  00f5f	e8 00 00 00 00	 call	 _rand
  00f64	99		 cdq
  00f65	b9 06 00 00 00	 mov	 ecx, 6
  00f6a	f7 f9		 idiv	 ecx
  00f6c	83 c2 4d	 add	 edx, 77			; 0000004dH
  00f6f	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00f72	66 89 90 46 01
	00 00		 mov	 WORD PTR [eax+326], dx
$LN2@PlayerRege:

; 569  : 	}
; 570  : 
; 571  : 	return true;

  00f79	b0 01		 mov	 al, 1
$LN8@PlayerRege:

; 572  : }

  00f7b	5f		 pop	 edi
  00f7c	5e		 pop	 esi
  00f7d	5b		 pop	 ebx
  00f7e	8b e5		 mov	 esp, ebp
  00f80	5d		 pop	 ebp
  00f81	c2 04 00	 ret	 4
?PlayerRegen@CTeamVsTeam@@QAE_NH@Z ENDP			; CTeamVsTeam::PlayerRegen
_TEXT	ENDS
PUBLIC	??_C@_0BK@GEOEAICA@?$FLTeam?5Vs?5Team?$FN?3?5?$CL?$CFd?5WCoin?$AA@ ; `string'
EXTRN	?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z:PROC	; ItemSerialCreateSend
EXTRN	?MsgOutput@@YAXHPADZZ:PROC			; MsgOutput
EXTRN	?GDSavePoint@GameShop@@QAEXH@Z:PROC		; GameShop::GDSavePoint
EXTRN	?gGameShop@@3VGameShop@@A:BYTE			; gGameShop
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_0BK@GEOEAICA@?$FLTeam?5Vs?5Team?$FN?3?5?$CL?$CFd?5WCoin?$AA@
CONST	SEGMENT
??_C@_0BK@GEOEAICA@?$FLTeam?5Vs?5Team?$FN?3?5?$CL?$CFd?5WCoin?$AA@ DB '[T'
	DB	'eam Vs Team]: +%d WCoin', 00H		; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_iItem$230373 = -16					; size = 4
_lpUser$230367 = -12					; size = 4
_aIndex$230363 = -8					; size = 4
_this$ = -4						; size = 4
_WinTeam$ = 8						; size = 4
?PlayerReward@CTeamVsTeam@@QAEXH@Z PROC			; CTeamVsTeam::PlayerReward
; _this$ = ecx

; 575  : {

  00f90	55		 push	 ebp
  00f91	8b ec		 mov	 ebp, esp
  00f93	83 ec 50	 sub	 esp, 80			; 00000050H
  00f96	53		 push	 ebx
  00f97	56		 push	 esi
  00f98	57		 push	 edi
  00f99	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 576  : 	for(int aIndex = OBJ_STARTUSERINDEX; aIndex < OBJMAX; aIndex++)

  00f9c	c7 45 f8 b0 36
	00 00		 mov	 DWORD PTR _aIndex$230363[ebp], 14000 ; 000036b0H
  00fa3	eb 09		 jmp	 SHORT $LN7@PlayerRewa
$LN6@PlayerRewa:
  00fa5	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$230363[ebp]
  00fa8	83 c0 01	 add	 eax, 1
  00fab	89 45 f8	 mov	 DWORD PTR _aIndex$230363[ebp], eax
$LN7@PlayerRewa:
  00fae	81 7d f8 98 3a
	00 00		 cmp	 DWORD PTR _aIndex$230363[ebp], 15000 ; 00003a98H
  00fb5	0f 8d df 00 00
	00		 jge	 $LN5@PlayerRewa

; 577  : 	{
; 578  : 		LPOBJ lpUser = &gObj[aIndex];

  00fbb	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$230363[ebp]
  00fbe	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00fc4	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00fca	89 45 f4	 mov	 DWORD PTR _lpUser$230367[ebp], eax

; 579  : 
; 580  : 		if(lpUser->Connected < PLAYER_PLAYING)

  00fcd	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$230367[ebp]
  00fd0	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  00fd4	7d 02		 jge	 SHORT $LN4@PlayerRewa

; 581  : 		{
; 582  : 			continue;

  00fd6	eb cd		 jmp	 SHORT $LN6@PlayerRewa
$LN4@PlayerRewa:

; 583  : 		}
; 584  : 
; 585  : 		if(lpUser->m_TvTTeam == WinTeam)

  00fd8	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$230367[ebp]
  00fdb	8b 88 14 29 00
	00		 mov	 ecx, DWORD PTR [eax+10516]
  00fe1	3b 4d 08	 cmp	 ecx, DWORD PTR _WinTeam$[ebp]
  00fe4	0f 85 ab 00 00
	00		 jne	 $LN1@PlayerRewa

; 586  : 		{
; 587  : 			if(this->m_RewardBonusEnable)

  00fea	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00fed	83 78 44 00	 cmp	 DWORD PTR [eax+68], 0
  00ff1	74 3e		 je	 SHORT $LN2@PlayerRewa

; 588  : 			{
; 589  : 				lpUser->GameShop.WCoinC += this->m_RewardBonusCount;

  00ff3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00ff6	db 40 48	 fild	 DWORD PTR [eax+72]
  00ff9	8b 4d f4	 mov	 ecx, DWORD PTR _lpUser$230367[ebp]
  00ffc	dc 81 00 23 00
	00		 fadd	 QWORD PTR [ecx+8960]
  01002	8b 55 f4	 mov	 edx, DWORD PTR _lpUser$230367[ebp]
  01005	dd 9a 00 23 00
	00		 fstp	 QWORD PTR [edx+8960]

; 590  : 				gGameShop.GDSavePoint(aIndex);

  0100b	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$230363[ebp]
  0100e	50		 push	 eax
  0100f	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  01014	e8 00 00 00 00	 call	 ?GDSavePoint@GameShop@@QAEXH@Z ; GameShop::GDSavePoint

; 591  : 				//g_ExUser.UpdateCharEx(aIndex);
; 592  : 				MsgOutput(aIndex, "[Team Vs Team]: +%d WCoin", this->m_RewardBonusCount);

  01019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0101c	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  0101f	51		 push	 ecx
  01020	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@GEOEAICA@?$FLTeam?5Vs?5Team?$FN?3?5?$CL?$CFd?5WCoin?$AA@
  01025	8b 55 f8	 mov	 edx, DWORD PTR _aIndex$230363[ebp]
  01028	52		 push	 edx
  01029	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  0102e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@PlayerRewa:

; 593  : 			}
; 594  : 
; 595  : 			if(this->m_RewardItemEnable)

  01031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01034	83 78 4c 00	 cmp	 DWORD PTR [eax+76], 0
  01038	74 5b		 je	 SHORT $LN1@PlayerRewa

; 596  : 			{
; 597  : 				int iItem = ITEMGET(this->m_RewardItemType, this->m_RewardItemIndex);

  0103a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0103d	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  01040	c1 e1 09	 shl	 ecx, 9
  01043	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01046	03 4a 54	 add	 ecx, DWORD PTR [edx+84]
  01049	89 4d f0	 mov	 DWORD PTR _iItem$230373[ebp], ecx

; 598  : 				ItemSerialCreateSend(aIndex, lpUser->MapNumber, lpUser->X, lpUser->Y, iItem, this->m_RewardItemLevel, 0, 0, 0, 0, aIndex, 0, 0);

  0104c	6a 00		 push	 0
  0104e	6a 00		 push	 0
  01050	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$230363[ebp]
  01053	50		 push	 eax
  01054	6a 00		 push	 0
  01056	6a 00		 push	 0
  01058	6a 00		 push	 0
  0105a	6a 00		 push	 0
  0105c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0105f	0f b6 51 58	 movzx	 edx, BYTE PTR [ecx+88]
  01063	52		 push	 edx
  01064	8b 45 f0	 mov	 eax, DWORD PTR _iItem$230373[ebp]
  01067	50		 push	 eax
  01068	8b 4d f4	 mov	 ecx, DWORD PTR _lpUser$230367[ebp]
  0106b	0f b6 91 46 01
	00 00		 movzx	 edx, BYTE PTR [ecx+326]
  01072	52		 push	 edx
  01073	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$230367[ebp]
  01076	0f b6 88 44 01
	00 00		 movzx	 ecx, BYTE PTR [eax+324]
  0107d	51		 push	 ecx
  0107e	8b 55 f4	 mov	 edx, DWORD PTR _lpUser$230367[ebp]
  01081	0f b6 82 49 01
	00 00		 movzx	 eax, BYTE PTR [edx+329]
  01088	50		 push	 eax
  01089	8b 4d f8	 mov	 ecx, DWORD PTR _aIndex$230363[ebp]
  0108c	51		 push	 ecx
  0108d	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  01092	83 c4 34	 add	 esp, 52			; 00000034H
$LN1@PlayerRewa:

; 599  : 			}
; 600  : 		}
; 601  : 	}

  01095	e9 0b ff ff ff	 jmp	 $LN6@PlayerRewa
$LN5@PlayerRewa:

; 602  : }

  0109a	5f		 pop	 edi
  0109b	5e		 pop	 esi
  0109c	5b		 pop	 ebx
  0109d	8b e5		 mov	 esp, ebp
  0109f	5d		 pop	 ebp
  010a0	c2 04 00	 ret	 4
?PlayerReward@CTeamVsTeam@@QAEXH@Z ENDP			; CTeamVsTeam::PlayerReward
_TEXT	ENDS
PUBLIC	?set@PBMSG_HEAD2@@QAEXPAEEEE@Z			; PBMSG_HEAD2::set
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pMsg$230383 = -16					; size = 5
_aIndex$230378 = -8					; size = 4
_this$ = -4						; size = 4
?GCEventStatusAll@CTeamVsTeam@@QAEXXZ PROC		; CTeamVsTeam::GCEventStatusAll
; _this$ = ecx

; 605  : {

  010b0	55		 push	 ebp
  010b1	8b ec		 mov	 ebp, esp
  010b3	83 ec 50	 sub	 esp, 80			; 00000050H
  010b6	53		 push	 ebx
  010b7	56		 push	 esi
  010b8	57		 push	 edi
  010b9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 606  : 	if(!this->m_Enable)

  010bc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  010bf	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  010c2	85 c9		 test	 ecx, ecx
  010c4	75 02		 jne	 SHORT $LN5@GCEventSta

; 607  : 	{
; 608  : 		return;

  010c6	eb 6b		 jmp	 SHORT $LN6@GCEventSta
$LN5@GCEventSta:

; 609  : 	}
; 610  : 
; 611  : 	for(int aIndex = OBJ_STARTUSERINDEX; aIndex < OBJMAX; aIndex++)

  010c8	c7 45 f8 b0 36
	00 00		 mov	 DWORD PTR _aIndex$230378[ebp], 14000 ; 000036b0H
  010cf	eb 09		 jmp	 SHORT $LN4@GCEventSta
$LN3@GCEventSta:
  010d1	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$230378[ebp]
  010d4	83 c0 01	 add	 eax, 1
  010d7	89 45 f8	 mov	 DWORD PTR _aIndex$230378[ebp], eax
$LN4@GCEventSta:
  010da	81 7d f8 98 3a
	00 00		 cmp	 DWORD PTR _aIndex$230378[ebp], 15000 ; 00003a98H
  010e1	7d 50		 jge	 SHORT $LN6@GCEventSta

; 612  : 	{
; 613  : 		if(gObj[aIndex].Connected < PLAYER_PLAYING)

  010e3	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$230378[ebp]
  010e6	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  010ec	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  010f2	83 7c 01 04 03	 cmp	 DWORD PTR [ecx+eax+4], 3
  010f7	7d 02		 jge	 SHORT $LN1@GCEventSta

; 614  : 		{
; 615  : 			continue;

  010f9	eb d6		 jmp	 SHORT $LN3@GCEventSta
$LN1@GCEventSta:

; 616  : 		}
; 617  : 
; 618  : 		PMSG_TVTGC_STATUS pMsg;
; 619  : 		pMsg.h.set((LPBYTE)&pMsg, 0xFB, 0x80, sizeof(pMsg));

  010fb	6a 05		 push	 5
  010fd	68 80 00 00 00	 push	 128			; 00000080H
  01102	68 fb 00 00 00	 push	 251			; 000000fbH
  01107	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$230383[ebp]
  0110a	50		 push	 eax
  0110b	8d 4d f0	 lea	 ecx, DWORD PTR _pMsg$230383[ebp]
  0110e	e8 00 00 00 00	 call	 ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ; PBMSG_HEAD2::set

; 620  : 		pMsg.Status = this->m_EventStatus;

  01113	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01116	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  01119	88 4d f4	 mov	 BYTE PTR _pMsg$230383[ebp+4], cl

; 621  : 		DataSend(aIndex, (LPBYTE)&pMsg, pMsg.h.size);

  0111c	0f b6 45 f1	 movzx	 eax, BYTE PTR _pMsg$230383[ebp+1]
  01120	50		 push	 eax
  01121	8d 4d f0	 lea	 ecx, DWORD PTR _pMsg$230383[ebp]
  01124	51		 push	 ecx
  01125	8b 55 f8	 mov	 edx, DWORD PTR _aIndex$230378[ebp]
  01128	52		 push	 edx
  01129	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0112e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 622  : 	}

  01131	eb 9e		 jmp	 SHORT $LN3@GCEventSta
$LN6@GCEventSta:

; 623  : }

  01133	5f		 pop	 edi
  01134	5e		 pop	 esi
  01135	5b		 pop	 ebx
  01136	8b e5		 mov	 esp, ebp
  01138	5d		 pop	 ebp
  01139	c3		 ret	 0
?GCEventStatusAll@CTeamVsTeam@@QAEXXZ ENDP		; CTeamVsTeam::GCEventStatusAll
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\include\prodef.h
_TEXT	ENDS
;	COMDAT ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpBuf$ = 8						; size = 4
_head$ = 12						; size = 1
_sub$ = 16						; size = 1
_size$ = 20						; size = 1
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z PROC			; PBMSG_HEAD2::set, COMDAT
; _this$ = ecx

; 104  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 105  : 		lpBuf[0] = 0xC1;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  0000f	c6 00 c1	 mov	 BYTE PTR [eax], 193	; 000000c1H

; 106  : 		lpBuf[1] = size;

  00012	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  00015	8a 4d 14	 mov	 cl, BYTE PTR _size$[ebp]
  00018	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 107  : 		lpBuf[2] = head;

  0001b	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  0001e	8a 4d 0c	 mov	 cl, BYTE PTR _head$[ebp]
  00021	88 48 02	 mov	 BYTE PTR [eax+2], cl

; 108  : 		lpBuf[3] = sub;

  00024	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  00027	8a 4d 10	 mov	 cl, BYTE PTR _sub$[ebp]
  0002a	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 109  : 	};

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 10 00	 ret	 16			; 00000010H
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ENDP			; PBMSG_HEAD2::set
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?gObjIsConnectedEx@@YA_NH@Z:PROC		; gObjIsConnectedEx
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\teamvsteam.cpp
_TEXT	SEGMENT
_pMsg$ = -20						; size = 12
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?GCOpenWindow@CTeamVsTeam@@QAEXH@Z PROC			; CTeamVsTeam::GCOpenWindow
; _this$ = ecx

; 626  : {

  01140	55		 push	 ebp
  01141	8b ec		 mov	 ebp, esp
  01143	83 ec 54	 sub	 esp, 84			; 00000054H
  01146	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0114b	33 c5		 xor	 eax, ebp
  0114d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  01150	53		 push	 ebx
  01151	56		 push	 esi
  01152	57		 push	 edi
  01153	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 627  : 	if(!gObjIsConnectedEx(aIndex))

  01156	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  01159	50		 push	 eax
  0115a	e8 00 00 00 00	 call	 ?gObjIsConnectedEx@@YA_NH@Z ; gObjIsConnectedEx
  0115f	83 c4 04	 add	 esp, 4
  01162	0f b6 c8	 movzx	 ecx, al
  01165	85 c9		 test	 ecx, ecx
  01167	75 02		 jne	 SHORT $LN1@GCOpenWind

; 628  : 	{
; 629  : 		return;

  01169	eb 3f		 jmp	 SHORT $LN2@GCOpenWind
$LN1@GCOpenWind:

; 630  : 	}
; 631  : 
; 632  : 	PMSG_TVTGC_WINOPEN pMsg;
; 633  : 	pMsg.h.set((LPBYTE)&pMsg, 0xFB, 0x81, sizeof(pMsg));

  0116b	6a 0c		 push	 12			; 0000000cH
  0116d	68 81 00 00 00	 push	 129			; 00000081H
  01172	68 fb 00 00 00	 push	 251			; 000000fbH
  01177	8d 45 ec	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0117a	50		 push	 eax
  0117b	8d 4d ec	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  0117e	e8 00 00 00 00	 call	 ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ; PBMSG_HEAD2::set

; 634  : 	pMsg.MinLevel = this->m_MinLevel;

  01183	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01186	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  01189	89 4d f0	 mov	 DWORD PTR _pMsg$[ebp+4], ecx

; 635  : 	pMsg.MinReset = this->m_MinReset;

  0118c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0118f	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  01192	89 4d f4	 mov	 DWORD PTR _pMsg$[ebp+8], ecx

; 636  : 	DataSend(aIndex, (LPBYTE)&pMsg, pMsg.h.size);

  01195	0f b6 45 ed	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  01199	50		 push	 eax
  0119a	8d 4d ec	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  0119d	51		 push	 ecx
  0119e	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  011a1	52		 push	 edx
  011a2	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  011a7	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@GCOpenWind:

; 637  : }

  011aa	5f		 pop	 edi
  011ab	5e		 pop	 esi
  011ac	5b		 pop	 ebx
  011ad	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  011b0	33 cd		 xor	 ecx, ebp
  011b2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  011b7	8b e5		 mov	 esp, ebp
  011b9	5d		 pop	 ebp
  011ba	c2 04 00	 ret	 4
?GCOpenWindow@CTeamVsTeam@@QAEXH@Z ENDP			; CTeamVsTeam::GCOpenWindow
_TEXT	ENDS
PUBLIC	?CGTeleportEvent@CTeamVsTeam@@QAEXH@Z		; CTeamVsTeam::CGTeleportEvent
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pMsg$ = -12						; size = 5
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
?CGTeleportEvent@CTeamVsTeam@@QAEXH@Z PROC		; CTeamVsTeam::CGTeleportEvent
; _this$ = ecx

; 640  : {

  011c0	55		 push	 ebp
  011c1	8b ec		 mov	 ebp, esp
  011c3	83 ec 4c	 sub	 esp, 76			; 0000004cH
  011c6	53		 push	 ebx
  011c7	56		 push	 esi
  011c8	57		 push	 edi
  011c9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 641  : 	if(!this->m_Enable)

  011cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  011cf	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  011d2	85 c9		 test	 ecx, ecx
  011d4	75 05		 jne	 SHORT $LN2@CGTeleport

; 642  : 	{
; 643  : 		return;

  011d6	e9 89 00 00 00	 jmp	 $LN3@CGTeleport
$LN2@CGTeleport:

; 644  : 	}
; 645  : 
; 646  : 	if(!gObjIsConnectedEx(aIndex))

  011db	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  011de	50		 push	 eax
  011df	e8 00 00 00 00	 call	 ?gObjIsConnectedEx@@YA_NH@Z ; gObjIsConnectedEx
  011e4	83 c4 04	 add	 esp, 4
  011e7	0f b6 c8	 movzx	 ecx, al
  011ea	85 c9		 test	 ecx, ecx
  011ec	75 02		 jne	 SHORT $LN1@CGTeleport

; 647  : 	{
; 648  : 		return;

  011ee	eb 74		 jmp	 SHORT $LN3@CGTeleport
$LN1@CGTeleport:

; 649  : 	}
; 650  : 
; 651  : 	gObjTeleport(aIndex, TEAMVSTEAM_MAP, TEAMVSTEAM_X+(rand()%10-5), TEAMVSTEAM_Y+(rand()%10-5));

  011f0	e8 00 00 00 00	 call	 _rand
  011f5	99		 cdq
  011f6	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  011fb	f7 f9		 idiv	 ecx
  011fd	83 c2 29	 add	 edx, 41			; 00000029H
  01200	52		 push	 edx
  01201	e8 00 00 00 00	 call	 _rand
  01206	99		 cdq
  01207	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  0120c	f7 f9		 idiv	 ecx
  0120e	83 c2 43	 add	 edx, 67			; 00000043H
  01211	52		 push	 edx
  01212	6a 52		 push	 82			; 00000052H
  01214	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  01217	52		 push	 edx
  01218	e8 00 00 00 00	 call	 ?gObjTeleport@@YAXHHHH@Z ; gObjTeleport
  0121d	83 c4 10	 add	 esp, 16			; 00000010H

; 652  : 
; 653  : 	this->GCMapAttribute(aIndex, 0);

  01220	6a 00		 push	 0
  01222	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  01225	50		 push	 eax
  01226	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01229	e8 00 00 00 00	 call	 ?GCMapAttribute@CTeamVsTeam@@QAEXHH@Z ; CTeamVsTeam::GCMapAttribute

; 654  : 
; 655  : 	PMSG_TVTGC_STATUS pMsg;
; 656  : 	pMsg.h.set((LPBYTE)&pMsg, 0xFB, 0x80, sizeof(pMsg));

  0122e	6a 05		 push	 5
  01230	68 80 00 00 00	 push	 128			; 00000080H
  01235	68 fb 00 00 00	 push	 251			; 000000fbH
  0123a	8d 45 f4	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0123d	50		 push	 eax
  0123e	8d 4d f4	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  01241	e8 00 00 00 00	 call	 ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ; PBMSG_HEAD2::set

; 657  : 	pMsg.Status = this->m_EventStatus;

  01246	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01249	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  0124c	88 4d f8	 mov	 BYTE PTR _pMsg$[ebp+4], cl

; 658  : 	DataSend(aIndex, (LPBYTE)&pMsg, pMsg.h.size);

  0124f	0f b6 45 f5	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  01253	50		 push	 eax
  01254	8d 4d f4	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  01257	51		 push	 ecx
  01258	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  0125b	52		 push	 edx
  0125c	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  01261	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@CGTeleport:

; 659  : }

  01264	5f		 pop	 edi
  01265	5e		 pop	 esi
  01266	5b		 pop	 ebx
  01267	8b e5		 mov	 esp, ebp
  01269	5d		 pop	 ebp
  0126a	c2 04 00	 ret	 4
?CGTeleportEvent@CTeamVsTeam@@QAEXH@Z ENDP		; CTeamVsTeam::CGTeleportEvent
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pMsg$230412 = -24					; size = 12
_aIndex$230407 = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?GCEventScoreAll@CTeamVsTeam@@QAEXXZ PROC		; CTeamVsTeam::GCEventScoreAll
; _this$ = ecx

; 662  : {

  01270	55		 push	 ebp
  01271	8b ec		 mov	 ebp, esp
  01273	83 ec 58	 sub	 esp, 88			; 00000058H
  01276	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0127b	33 c5		 xor	 eax, ebp
  0127d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  01280	53		 push	 ebx
  01281	56		 push	 esi
  01282	57		 push	 edi
  01283	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 663  : 	if(!this->m_Enable)

  01286	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01289	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0128c	85 c9		 test	 ecx, ecx
  0128e	75 05		 jne	 SHORT $LN5@GCEventSco

; 664  : 	{
; 665  : 		return;

  01290	e9 93 00 00 00	 jmp	 $LN6@GCEventSco
$LN5@GCEventSco:

; 666  : 	}
; 667  : 
; 668  : 	for(int aIndex = OBJ_STARTUSERINDEX; aIndex < OBJMAX; aIndex++)

  01295	c7 45 f4 b0 36
	00 00		 mov	 DWORD PTR _aIndex$230407[ebp], 14000 ; 000036b0H
  0129c	eb 09		 jmp	 SHORT $LN4@GCEventSco
$LN3@GCEventSco:
  0129e	8b 45 f4	 mov	 eax, DWORD PTR _aIndex$230407[ebp]
  012a1	83 c0 01	 add	 eax, 1
  012a4	89 45 f4	 mov	 DWORD PTR _aIndex$230407[ebp], eax
$LN4@GCEventSco:
  012a7	81 7d f4 98 3a
	00 00		 cmp	 DWORD PTR _aIndex$230407[ebp], 15000 ; 00003a98H
  012ae	7d 78		 jge	 SHORT $LN6@GCEventSco

; 669  : 	{
; 670  : 		if(gObj[aIndex].Connected < PLAYER_PLAYING && gObj[aIndex].MapNumber != TEAMVSTEAM_MAP)

  012b0	8b 45 f4	 mov	 eax, DWORD PTR _aIndex$230407[ebp]
  012b3	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  012b9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  012bf	83 7c 01 04 03	 cmp	 DWORD PTR [ecx+eax+4], 3
  012c4	7d 1e		 jge	 SHORT $LN1@GCEventSco
  012c6	8b 45 f4	 mov	 eax, DWORD PTR _aIndex$230407[ebp]
  012c9	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  012cf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  012d5	0f b6 94 01 49
	01 00 00	 movzx	 edx, BYTE PTR [ecx+eax+329]
  012dd	83 fa 52	 cmp	 edx, 82			; 00000052H
  012e0	74 02		 je	 SHORT $LN1@GCEventSco

; 671  : 		{
; 672  : 			continue;

  012e2	eb ba		 jmp	 SHORT $LN3@GCEventSco
$LN1@GCEventSco:

; 673  : 		}
; 674  : 
; 675  : 		PMSG_TVTGC_SCORE pMsg;
; 676  : 		pMsg.h.set((LPBYTE)&pMsg, 0xFB, 0x82, sizeof(pMsg));

  012e4	6a 0c		 push	 12			; 0000000cH
  012e6	68 82 00 00 00	 push	 130			; 00000082H
  012eb	68 fb 00 00 00	 push	 251			; 000000fbH
  012f0	8d 45 e8	 lea	 eax, DWORD PTR _pMsg$230412[ebp]
  012f3	50		 push	 eax
  012f4	8d 4d e8	 lea	 ecx, DWORD PTR _pMsg$230412[ebp]
  012f7	e8 00 00 00 00	 call	 ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ; PBMSG_HEAD2::set

; 677  : 		pMsg.TeamScore1 = this->m_TeamScore1;

  012fc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  012ff	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  01302	89 4d ec	 mov	 DWORD PTR _pMsg$230412[ebp+4], ecx

; 678  : 		pMsg.TeamScore2 = this->m_TeamScore2;

  01305	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01308	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0130b	89 4d f0	 mov	 DWORD PTR _pMsg$230412[ebp+8], ecx

; 679  : 		DataSend(aIndex, (LPBYTE)&pMsg, pMsg.h.size);

  0130e	0f b6 45 e9	 movzx	 eax, BYTE PTR _pMsg$230412[ebp+1]
  01312	50		 push	 eax
  01313	8d 4d e8	 lea	 ecx, DWORD PTR _pMsg$230412[ebp]
  01316	51		 push	 ecx
  01317	8b 55 f4	 mov	 edx, DWORD PTR _aIndex$230407[ebp]
  0131a	52		 push	 edx
  0131b	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  01320	83 c4 0c	 add	 esp, 12			; 0000000cH

; 680  : 	}

  01323	e9 76 ff ff ff	 jmp	 $LN3@GCEventSco
$LN6@GCEventSco:

; 681  : }

  01328	5f		 pop	 edi
  01329	5e		 pop	 esi
  0132a	5b		 pop	 ebx
  0132b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0132e	33 cd		 xor	 ecx, ebp
  01330	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01335	8b e5		 mov	 esp, ebp
  01337	5d		 pop	 ebp
  01338	c3		 ret	 0
?GCEventScoreAll@CTeamVsTeam@@QAEXXZ ENDP		; CTeamVsTeam::GCEventScoreAll
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv67 = -348						; size = 4
_pBodyMsg$ = -280					; size = 2
_pMsg$ = -276						; size = 7
_btPacket$ = -268					; size = 256
_iSizePacket$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_maptype$ = 12						; size = 4
?GCMapAttribute@CTeamVsTeam@@QAEXHH@Z PROC		; CTeamVsTeam::GCMapAttribute
; _this$ = ecx

; 684  : {

  01340	55		 push	 ebp
  01341	8b ec		 mov	 ebp, esp
  01343	81 ec 5c 01 00
	00		 sub	 esp, 348		; 0000015cH
  01349	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0134e	33 c5		 xor	 eax, ebp
  01350	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  01353	53		 push	 ebx
  01354	56		 push	 esi
  01355	57		 push	 edi
  01356	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 685  : 	if(!OBJMAX_RANGE(aIndex))

  01359	83 7d 08 00	 cmp	 DWORD PTR _aIndex$[ebp], 0
  0135d	7d 0c		 jge	 SHORT $LN4@GCMapAttri
  0135f	c7 85 a4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv67[ebp], 0
  01369	eb 12		 jmp	 SHORT $LN5@GCMapAttri
$LN4@GCMapAttri:
  0136b	33 c0		 xor	 eax, eax
  0136d	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _aIndex$[ebp], 14999 ; 00003a97H
  01374	0f 9e c0	 setle	 al
  01377	89 85 a4 fe ff
	ff		 mov	 DWORD PTR tv67[ebp], eax
$LN5@GCMapAttri:
  0137d	83 bd a4 fe ff
	ff 00		 cmp	 DWORD PTR tv67[ebp], 0
  01384	75 05		 jne	 SHORT $LN1@GCMapAttri

; 686  : 	{
; 687  : 		return;

  01386	e9 da 00 00 00	 jmp	 $LN2@GCMapAttri
$LN1@GCMapAttri:

; 688  : 	}
; 689  : 
; 690  : 	int iSizePacket = 0;

  0138b	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _iSizePacket$[ebp], 0

; 691  : 	unsigned char btPacket[256];
; 692  : 	
; 693  : 	PMSG_SETMAPATTR_COUNT pMsg;
; 694  : 	PMSG_SETMAPATTR pBodyMsg;
; 695  : 
; 696  : 	iSizePacket += sizeof(pMsg);

  01392	8b 45 f4	 mov	 eax, DWORD PTR _iSizePacket$[ebp]
  01395	83 c0 07	 add	 eax, 7
  01398	89 45 f4	 mov	 DWORD PTR _iSizePacket$[ebp], eax

; 697  : 
; 698  : 	pMsg.btType = 0;

  0139b	c6 85 ef fe ff
	ff 00		 mov	 BYTE PTR _pMsg$[ebp+3], 0

; 699  : 	pMsg.btMapAttr = 1;

  013a2	c6 85 f0 fe ff
	ff 01		 mov	 BYTE PTR _pMsg$[ebp+4], 1

; 700  : 	pMsg.btMapSetType = maptype;

  013a9	8a 45 0c	 mov	 al, BYTE PTR _maptype$[ebp]
  013ac	88 85 f1 fe ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+5], al

; 701  : 	pMsg.btCount = 1;

  013b2	c6 85 f2 fe ff
	ff 01		 mov	 BYTE PTR _pMsg$[ebp+6], 1

; 702  : 
; 703  : 	pBodyMsg.btX = 0;

  013b9	c6 85 e8 fe ff
	ff 00		 mov	 BYTE PTR _pBodyMsg$[ebp], 0

; 704  : 	pBodyMsg.btY = 0;

  013c0	c6 85 e9 fe ff
	ff 00		 mov	 BYTE PTR _pBodyMsg$[ebp+1], 0

; 705  : 	memcpy(&btPacket[iSizePacket], &pBodyMsg, sizeof(pBodyMsg));

  013c7	6a 02		 push	 2
  013c9	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _pBodyMsg$[ebp]
  013cf	50		 push	 eax
  013d0	8b 4d f4	 mov	 ecx, DWORD PTR _iSizePacket$[ebp]
  013d3	8d 94 0d f4 fe
	ff ff		 lea	 edx, DWORD PTR _btPacket$[ebp+ecx]
  013da	52		 push	 edx
  013db	e8 00 00 00 00	 call	 _memcpy
  013e0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 706  : 	iSizePacket += sizeof(pBodyMsg);

  013e3	8b 45 f4	 mov	 eax, DWORD PTR _iSizePacket$[ebp]
  013e6	83 c0 02	 add	 eax, 2
  013e9	89 45 f4	 mov	 DWORD PTR _iSizePacket$[ebp], eax

; 707  : 	pBodyMsg.btX   = 255;

  013ec	c6 85 e8 fe ff
	ff ff		 mov	 BYTE PTR _pBodyMsg$[ebp], 255 ; 000000ffH

; 708  : 	pBodyMsg.btY   = 255;

  013f3	c6 85 e9 fe ff
	ff ff		 mov	 BYTE PTR _pBodyMsg$[ebp+1], 255 ; 000000ffH

; 709  : 	memcpy(&btPacket[iSizePacket], &pBodyMsg, sizeof(pBodyMsg));

  013fa	6a 02		 push	 2
  013fc	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _pBodyMsg$[ebp]
  01402	50		 push	 eax
  01403	8b 4d f4	 mov	 ecx, DWORD PTR _iSizePacket$[ebp]
  01406	8d 94 0d f4 fe
	ff ff		 lea	 edx, DWORD PTR _btPacket$[ebp+ecx]
  0140d	52		 push	 edx
  0140e	e8 00 00 00 00	 call	 _memcpy
  01413	83 c4 0c	 add	 esp, 12			; 0000000cH

; 710  : 	iSizePacket += sizeof(pBodyMsg);

  01416	8b 45 f4	 mov	 eax, DWORD PTR _iSizePacket$[ebp]
  01419	83 c0 02	 add	 eax, 2
  0141c	89 45 f4	 mov	 DWORD PTR _iSizePacket$[ebp], eax

; 711  : 
; 712  : 	pMsg.h.c = 0xC1;

  0141f	c6 85 ec fe ff
	ff c1		 mov	 BYTE PTR _pMsg$[ebp], 193 ; 000000c1H

; 713  : 	pMsg.h.size = iSizePacket;

  01426	8a 45 f4	 mov	 al, BYTE PTR _iSizePacket$[ebp]
  01429	88 85 ed fe ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+1], al

; 714  : 	pMsg.h.headcode = 0x46;

  0142f	c6 85 ee fe ff
	ff 46		 mov	 BYTE PTR _pMsg$[ebp+2], 70 ; 00000046H

; 715  : 	memcpy(&btPacket, &pMsg, sizeof(pMsg));

  01436	6a 07		 push	 7
  01438	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _pMsg$[ebp]
  0143e	50		 push	 eax
  0143f	8d 8d f4 fe ff
	ff		 lea	 ecx, DWORD PTR _btPacket$[ebp]
  01445	51		 push	 ecx
  01446	e8 00 00 00 00	 call	 _memcpy
  0144b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 716  : 	
; 717  : 	DataSend(aIndex, (LPBYTE)&btPacket, iSizePacket);

  0144e	8b 45 f4	 mov	 eax, DWORD PTR _iSizePacket$[ebp]
  01451	50		 push	 eax
  01452	8d 8d f4 fe ff
	ff		 lea	 ecx, DWORD PTR _btPacket$[ebp]
  01458	51		 push	 ecx
  01459	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  0145c	52		 push	 edx
  0145d	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  01462	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@GCMapAttri:

; 718  : }

  01465	5f		 pop	 edi
  01466	5e		 pop	 esi
  01467	5b		 pop	 ebx
  01468	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0146b	33 cd		 xor	 ecx, ebp
  0146d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01472	8b e5		 mov	 esp, ebp
  01474	5d		 pop	 ebp
  01475	c2 08 00	 ret	 8
?GCMapAttribute@CTeamVsTeam@@QAEXHH@Z ENDP		; CTeamVsTeam::GCMapAttribute
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?gObjCheckViewport@@YAHHHH@Z:PROC		; gObjCheckViewport
EXTRN	__chkstk:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv218 = -5128						; size = 8
tv208 = -5128						; size = 8
tv216 = -5120						; size = 4
tv206 = -5120						; size = 4
tv74 = -5116						; size = 4
tv213 = -5114						; size = 2
tv203 = -5114						; size = 2
_Vp$230453 = -5048					; size = 16
_lpTempObj$230446 = -5032				; size = 4
_n$230442 = -5028					; size = 4
_lpUser$230438 = -5024					; size = 4
_icount$230437 = -5017					; size = 1
_datasize$230436 = -5016				; size = 4
_SendBuff$230435 = -5012				; size = 5000
_aIndex$230430 = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?GCViewePortTvT@CTeamVsTeam@@QAEXXZ PROC		; CTeamVsTeam::GCViewePortTvT
; _this$ = ecx

; 721  : {

  01480	55		 push	 ebp
  01481	8b ec		 mov	 ebp, esp
  01483	b8 08 14 00 00	 mov	 eax, 5128		; 00001408H
  01488	e8 00 00 00 00	 call	 __chkstk
  0148d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  01492	33 c5		 xor	 eax, ebp
  01494	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  01497	53		 push	 ebx
  01498	56		 push	 esi
  01499	57		 push	 edi
  0149a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 722  : 	if(!this->CheckStatus(eEVENT_TEAMVSTEAM_START))

  0149d	6a 02		 push	 2
  0149f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  014a2	e8 00 00 00 00	 call	 ?CheckStatus@CTeamVsTeam@@QAE_NH@Z ; CTeamVsTeam::CheckStatus
  014a7	0f b6 c0	 movzx	 eax, al
  014aa	85 c0		 test	 eax, eax
  014ac	75 05		 jne	 SHORT $LN19@GCViewePor

; 723  : 	{
; 724  : 		return;

  014ae	e9 02 03 00 00	 jmp	 $LN20@GCViewePor
$LN19@GCViewePor:

; 725  : 	}
; 726  : 
; 727  : 	for (int aIndex = OBJ_STARTUSERINDEX; aIndex < OBJMAX; aIndex++)

  014b3	c7 45 f4 b0 36
	00 00		 mov	 DWORD PTR _aIndex$230430[ebp], 14000 ; 000036b0H
  014ba	eb 09		 jmp	 SHORT $LN18@GCViewePor
$LN17@GCViewePor:
  014bc	8b 45 f4	 mov	 eax, DWORD PTR _aIndex$230430[ebp]
  014bf	83 c0 01	 add	 eax, 1
  014c2	89 45 f4	 mov	 DWORD PTR _aIndex$230430[ebp], eax
$LN18@GCViewePor:
  014c5	81 7d f4 98 3a
	00 00		 cmp	 DWORD PTR _aIndex$230430[ebp], 15000 ; 00003a98H
  014cc	0f 8d e3 02 00
	00		 jge	 $LN16@GCViewePor

; 728  : 	{
; 729  : 		if(!OBJMAX_RANGE(aIndex))

  014d2	83 7d f4 00	 cmp	 DWORD PTR _aIndex$230430[ebp], 0
  014d6	7d 0c		 jge	 SHORT $LN22@GCViewePor
  014d8	c7 85 04 ec ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
  014e2	eb 12		 jmp	 SHORT $LN23@GCViewePor
$LN22@GCViewePor:
  014e4	33 c0		 xor	 eax, eax
  014e6	81 7d f4 97 3a
	00 00		 cmp	 DWORD PTR _aIndex$230430[ebp], 14999 ; 00003a97H
  014ed	0f 9e c0	 setle	 al
  014f0	89 85 04 ec ff
	ff		 mov	 DWORD PTR tv74[ebp], eax
$LN23@GCViewePor:
  014f6	83 bd 04 ec ff
	ff 00		 cmp	 DWORD PTR tv74[ebp], 0
  014fd	75 02		 jne	 SHORT $LN15@GCViewePor

; 730  : 		{
; 731  : 			continue;

  014ff	eb bb		 jmp	 SHORT $LN17@GCViewePor
$LN15@GCViewePor:

; 732  : 		}
; 733  : 
; 734  : 		BYTE SendBuff[5000];
; 735  : 		int datasize = 6;

  01501	c7 85 68 ec ff
	ff 06 00 00 00	 mov	 DWORD PTR _datasize$230436[ebp], 6

; 736  : 		BYTE icount = 0;

  0150b	c6 85 67 ec ff
	ff 00		 mov	 BYTE PTR _icount$230437[ebp], 0

; 737  : 
; 738  : 		LPOBJ lpUser = &gObj[aIndex];

  01512	8b 45 f4	 mov	 eax, DWORD PTR _aIndex$230430[ebp]
  01515	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0151b	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01521	89 85 60 ec ff
	ff		 mov	 DWORD PTR _lpUser$230438[ebp], eax

; 739  : 
; 740  : 		if(lpUser->Connected < PLAYER_PLAYING)

  01527	8b 85 60 ec ff
	ff		 mov	 eax, DWORD PTR _lpUser$230438[ebp]
  0152d	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  01531	7d 02		 jge	 SHORT $LN14@GCViewePor

; 741  : 		{
; 742  : 			continue;

  01533	eb 87		 jmp	 SHORT $LN17@GCViewePor
$LN14@GCViewePor:

; 743  : 		}
; 744  : 
; 745  : #if(OFFLINE_MODE == TRUE)
; 746  : 		if(lpUser->m_OfflineMode == true)

  01535	8b 85 60 ec ff
	ff		 mov	 eax, DWORD PTR _lpUser$230438[ebp]
  0153b	0f b6 88 d4 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10452]
  01542	83 f9 01	 cmp	 ecx, 1
  01545	75 05		 jne	 SHORT $LN13@GCViewePor

; 747  : 		{
; 748  : 			continue;

  01547	e9 70 ff ff ff	 jmp	 $LN17@GCViewePor
$LN13@GCViewePor:

; 749  : 		}
; 750  : #endif
; 751  : 
; 752  : 		if(lpUser->MapNumber != TEAMVSTEAM_MAP)

  0154c	8b 85 60 ec ff
	ff		 mov	 eax, DWORD PTR _lpUser$230438[ebp]
  01552	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  01559	83 f9 52	 cmp	 ecx, 82			; 00000052H
  0155c	74 05		 je	 SHORT $LN12@GCViewePor

; 753  : 		{
; 754  : 			continue;

  0155e	e9 59 ff ff ff	 jmp	 $LN17@GCViewePor
$LN12@GCViewePor:

; 755  : 		}
; 756  : 
; 757  : 		for(int n = OBJ_STARTUSERINDEX; n < OBJMAX; n++)

  01563	c7 85 5c ec ff
	ff b0 36 00 00	 mov	 DWORD PTR _n$230442[ebp], 14000 ; 000036b0H
  0156d	eb 0f		 jmp	 SHORT $LN11@GCViewePor
$LN10@GCViewePor:
  0156f	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _n$230442[ebp]
  01575	83 c0 01	 add	 eax, 1
  01578	89 85 5c ec ff
	ff		 mov	 DWORD PTR _n$230442[ebp], eax
$LN11@GCViewePor:
  0157e	81 bd 5c ec ff
	ff 98 3a 00 00	 cmp	 DWORD PTR _n$230442[ebp], 15000 ; 00003a98H
  01588	0f 8d b0 01 00
	00		 jge	 $LN9@GCViewePor

; 758  : 		{
; 759  : 			LPOBJ lpTempObj = &gObj[n];

  0158e	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _n$230442[ebp]
  01594	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0159a	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  015a0	89 85 58 ec ff
	ff		 mov	 DWORD PTR _lpTempObj$230446[ebp], eax

; 760  : 
; 761  : 			if(lpTempObj->Connected == PLAYER_PLAYING)

  015a6	8b 85 58 ec ff
	ff		 mov	 eax, DWORD PTR _lpTempObj$230446[ebp]
  015ac	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  015b0	0f 85 83 01 00
	00		 jne	 $LN2@GCViewePor

; 762  : 			{
; 763  : 				if(lpTempObj->m_State == 1 || lpTempObj->m_State == 2)

  015b6	8b 85 58 ec ff
	ff		 mov	 eax, DWORD PTR _lpTempObj$230446[ebp]
  015bc	83 b8 20 02 00
	00 01		 cmp	 DWORD PTR [eax+544], 1
  015c3	74 13		 je	 SHORT $LN6@GCViewePor
  015c5	8b 85 58 ec ff
	ff		 mov	 eax, DWORD PTR _lpTempObj$230446[ebp]
  015cb	83 b8 20 02 00
	00 02		 cmp	 DWORD PTR [eax+544], 2
  015d2	0f 85 61 01 00
	00		 jne	 $LN2@GCViewePor
$LN6@GCViewePor:

; 764  : 				{
; 765  : 					if(lpUser->MapNumber == lpTempObj->MapNumber)

  015d8	8b 85 60 ec ff
	ff		 mov	 eax, DWORD PTR _lpUser$230438[ebp]
  015de	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  015e5	8b 95 58 ec ff
	ff		 mov	 edx, DWORD PTR _lpTempObj$230446[ebp]
  015eb	0f b6 82 49 01
	00 00		 movzx	 eax, BYTE PTR [edx+329]
  015f2	3b c8		 cmp	 ecx, eax
  015f4	0f 85 3f 01 00
	00		 jne	 $LN2@GCViewePor

; 766  : 					{
; 767  : 						if(gObjCheckViewport(aIndex,lpTempObj->X,lpTempObj->Y) == 1)

  015fa	8b 85 58 ec ff
	ff		 mov	 eax, DWORD PTR _lpTempObj$230446[ebp]
  01600	0f bf 88 46 01
	00 00		 movsx	 ecx, WORD PTR [eax+326]
  01607	51		 push	 ecx
  01608	8b 95 58 ec ff
	ff		 mov	 edx, DWORD PTR _lpTempObj$230446[ebp]
  0160e	0f bf 82 44 01
	00 00		 movsx	 eax, WORD PTR [edx+324]
  01615	50		 push	 eax
  01616	8b 4d f4	 mov	 ecx, DWORD PTR _aIndex$230430[ebp]
  01619	51		 push	 ecx
  0161a	e8 00 00 00 00	 call	 ?gObjCheckViewport@@YAHHHH@Z ; gObjCheckViewport
  0161f	83 c4 0c	 add	 esp, 12			; 0000000cH
  01622	83 f8 01	 cmp	 eax, 1
  01625	0f 85 0e 01 00
	00		 jne	 $LN2@GCViewePor

; 768  : 						{
; 769  : 							if(lpTempObj->Type != OBJ_USER) continue;

  0162b	8b 85 58 ec ff
	ff		 mov	 eax, DWORD PTR _lpTempObj$230446[ebp]
  01631	0f b7 48 68	 movzx	 ecx, WORD PTR [eax+104]
  01635	83 f9 01	 cmp	 ecx, 1
  01638	74 05		 je	 SHORT $LN3@GCViewePor
  0163a	e9 30 ff ff ff	 jmp	 $LN10@GCViewePor
$LN3@GCViewePor:

; 770  : 
; 771  : 							VIEWEPORT_TVT Vp;
; 772  : 
; 773  : 							Vp.aIndex = n;

  0163f	66 8b 85 5c ec
	ff ff		 mov	 ax, WORD PTR _n$230442[ebp]
  01646	66 89 85 48 ec
	ff ff		 mov	 WORD PTR _Vp$230453[ebp], ax

; 774  : 							Vp.Life = (DWORD)lpTempObj->Life;

  0164d	8b 85 58 ec ff
	ff		 mov	 eax, DWORD PTR _lpTempObj$230446[ebp]
  01653	d9 80 fc 00 00
	00		 fld	 DWORD PTR [eax+252]
  01659	d9 bd 06 ec ff
	ff		 fnstcw	 WORD PTR tv203[ebp]
  0165f	0f b7 85 06 ec
	ff ff		 movzx	 eax, WORD PTR tv203[ebp]
  01666	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  0166b	89 85 00 ec ff
	ff		 mov	 DWORD PTR tv206[ebp], eax
  01671	d9 ad 00 ec ff
	ff		 fldcw	 WORD PTR tv206[ebp]
  01677	df bd f8 eb ff
	ff		 fistp	 QWORD PTR tv208[ebp]
  0167d	d9 ad 06 ec ff
	ff		 fldcw	 WORD PTR tv203[ebp]
  01683	8b 8d f8 eb ff
	ff		 mov	 ecx, DWORD PTR tv208[ebp]
  01689	89 8d 4c ec ff
	ff		 mov	 DWORD PTR _Vp$230453[ebp+4], ecx

; 775  : 							Vp.MaxLife = (DWORD)(lpTempObj->MaxLife + lpTempObj->AddLife);

  0168f	8b 85 58 ec ff
	ff		 mov	 eax, DWORD PTR _lpTempObj$230446[ebp]
  01695	db 80 4c 01 00
	00		 fild	 DWORD PTR [eax+332]
  0169b	8b 8d 58 ec ff
	ff		 mov	 ecx, DWORD PTR _lpTempObj$230446[ebp]
  016a1	d8 81 00 01 00
	00		 fadd	 DWORD PTR [ecx+256]
  016a7	d9 bd 06 ec ff
	ff		 fnstcw	 WORD PTR tv213[ebp]
  016ad	0f b7 85 06 ec
	ff ff		 movzx	 eax, WORD PTR tv213[ebp]
  016b4	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  016b9	89 85 00 ec ff
	ff		 mov	 DWORD PTR tv216[ebp], eax
  016bf	d9 ad 00 ec ff
	ff		 fldcw	 WORD PTR tv216[ebp]
  016c5	df bd f8 eb ff
	ff		 fistp	 QWORD PTR tv218[ebp]
  016cb	d9 ad 06 ec ff
	ff		 fldcw	 WORD PTR tv213[ebp]
  016d1	8b 95 f8 eb ff
	ff		 mov	 edx, DWORD PTR tv218[ebp]
  016d7	89 95 50 ec ff
	ff		 mov	 DWORD PTR _Vp$230453[ebp+8], edx

; 776  : 							Vp.TvTTeam = lpTempObj->m_TvTTeam;

  016dd	8b 85 58 ec ff
	ff		 mov	 eax, DWORD PTR _lpTempObj$230446[ebp]
  016e3	8a 88 14 29 00
	00		 mov	 cl, BYTE PTR [eax+10516]
  016e9	88 8d 54 ec ff
	ff		 mov	 BYTE PTR _Vp$230453[ebp+12], cl

; 777  : 
; 778  : 							memcpy(&SendBuff[datasize],&Vp,sizeof(Vp));

  016ef	6a 10		 push	 16			; 00000010H
  016f1	8d 85 48 ec ff
	ff		 lea	 eax, DWORD PTR _Vp$230453[ebp]
  016f7	50		 push	 eax
  016f8	8b 8d 68 ec ff
	ff		 mov	 ecx, DWORD PTR _datasize$230436[ebp]
  016fe	8d 94 0d 6c ec
	ff ff		 lea	 edx, DWORD PTR _SendBuff$230435[ebp+ecx]
  01705	52		 push	 edx
  01706	e8 00 00 00 00	 call	 _memcpy
  0170b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 779  : 							datasize += sizeof(Vp);

  0170e	8b 85 68 ec ff
	ff		 mov	 eax, DWORD PTR _datasize$230436[ebp]
  01714	83 c0 10	 add	 eax, 16			; 00000010H
  01717	89 85 68 ec ff
	ff		 mov	 DWORD PTR _datasize$230436[ebp], eax

; 780  : 
; 781  : 							icount++;

  0171d	8a 85 67 ec ff
	ff		 mov	 al, BYTE PTR _icount$230437[ebp]
  01723	04 01		 add	 al, 1
  01725	88 85 67 ec ff
	ff		 mov	 BYTE PTR _icount$230437[ebp], al

; 782  : 
; 783  : 							if(icount >= MAX_VIEWPORT-1)

  0172b	0f b6 85 67 ec
	ff ff		 movzx	 eax, BYTE PTR _icount$230437[ebp]
  01732	83 f8 4a	 cmp	 eax, 74			; 0000004aH
  01735	7c 02		 jl	 SHORT $LN2@GCViewePor

; 784  : 							{
; 785  : 								break;		

  01737	eb 05		 jmp	 SHORT $LN9@GCViewePor
$LN2@GCViewePor:

; 786  : 							}
; 787  : 						}
; 788  : 					}
; 789  : 				}
; 790  : 			}
; 791  : 		}

  01739	e9 31 fe ff ff	 jmp	 $LN10@GCViewePor
$LN9@GCViewePor:

; 792  : 
; 793  : 		if(icount > 0)

  0173e	0f b6 85 67 ec
	ff ff		 movzx	 eax, BYTE PTR _icount$230437[ebp]
  01745	85 c0		 test	 eax, eax
  01747	7e 5b		 jle	 SHORT $LN1@GCViewePor

; 794  : 		{
; 795  : 			SendBuff[0]=0xC2;

  01749	c6 85 6c ec ff
	ff c2		 mov	 BYTE PTR _SendBuff$230435[ebp], 194 ; 000000c2H

; 796  : 			SendBuff[1]=SET_NUMBERH(datasize);

  01750	8b 85 68 ec ff
	ff		 mov	 eax, DWORD PTR _datasize$230436[ebp]
  01756	c1 e8 08	 shr	 eax, 8
  01759	88 85 6d ec ff
	ff		 mov	 BYTE PTR _SendBuff$230435[ebp+1], al

; 797  : 			SendBuff[2]=SET_NUMBERL(datasize);

  0175f	8b 85 68 ec ff
	ff		 mov	 eax, DWORD PTR _datasize$230436[ebp]
  01765	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0176a	88 85 6e ec ff
	ff		 mov	 BYTE PTR _SendBuff$230435[ebp+2], al

; 798  : 			SendBuff[3]=0xFA;

  01770	c6 85 6f ec ff
	ff fa		 mov	 BYTE PTR _SendBuff$230435[ebp+3], 250 ; 000000faH

; 799  : 			SendBuff[4]=0x10;

  01777	c6 85 70 ec ff
	ff 10		 mov	 BYTE PTR _SendBuff$230435[ebp+4], 16 ; 00000010H

; 800  : 			SendBuff[5]=icount;

  0177e	8a 85 67 ec ff
	ff		 mov	 al, BYTE PTR _icount$230437[ebp]
  01784	88 85 71 ec ff
	ff		 mov	 BYTE PTR _SendBuff$230435[ebp+5], al

; 801  : 
; 802  : 			DataSend(aIndex,SendBuff,datasize);

  0178a	8b 85 68 ec ff
	ff		 mov	 eax, DWORD PTR _datasize$230436[ebp]
  01790	50		 push	 eax
  01791	8d 8d 6c ec ff
	ff		 lea	 ecx, DWORD PTR _SendBuff$230435[ebp]
  01797	51		 push	 ecx
  01798	8b 55 f4	 mov	 edx, DWORD PTR _aIndex$230430[ebp]
  0179b	52		 push	 edx
  0179c	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  017a1	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@GCViewePor:

; 803  : 		}
; 804  : 
; 805  : 		this->GCEventTimer(aIndex);

  017a4	8b 45 f4	 mov	 eax, DWORD PTR _aIndex$230430[ebp]
  017a7	50		 push	 eax
  017a8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  017ab	e8 00 00 00 00	 call	 ?GCEventTimer@CTeamVsTeam@@QAEXH@Z ; CTeamVsTeam::GCEventTimer

; 806  : 	}

  017b0	e9 07 fd ff ff	 jmp	 $LN17@GCViewePor
$LN16@GCViewePor:
$LN20@GCViewePor:

; 807  : }

  017b5	5f		 pop	 edi
  017b6	5e		 pop	 esi
  017b7	5b		 pop	 ebx
  017b8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  017bb	33 cd		 xor	 ecx, ebp
  017bd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  017c2	8b e5		 mov	 esp, ebp
  017c4	5d		 pop	 ebp
  017c5	c3		 ret	 0
?GCViewePortTvT@CTeamVsTeam@@QAEXXZ ENDP		; CTeamVsTeam::GCViewePortTvT
; Function compile flags: /Odtp /ZI
tv67 = -80						; size = 4
_pMsg$ = -12						; size = 5
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
?GCTeam@CTeamVsTeam@@QAEXH@Z PROC			; CTeamVsTeam::GCTeam
; _this$ = ecx

; 810  : {

  017d0	55		 push	 ebp
  017d1	8b ec		 mov	 ebp, esp
  017d3	83 ec 50	 sub	 esp, 80			; 00000050H
  017d6	53		 push	 ebx
  017d7	56		 push	 esi
  017d8	57		 push	 edi
  017d9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 811  : 	if(!OBJMAX_RANGE(aIndex))

  017dc	83 7d 08 00	 cmp	 DWORD PTR _aIndex$[ebp], 0
  017e0	7d 09		 jge	 SHORT $LN4@GCTeam
  017e2	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
  017e9	eb 0f		 jmp	 SHORT $LN5@GCTeam
$LN4@GCTeam:
  017eb	33 c0		 xor	 eax, eax
  017ed	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _aIndex$[ebp], 14999 ; 00003a97H
  017f4	0f 9e c0	 setle	 al
  017f7	89 45 b0	 mov	 DWORD PTR tv67[ebp], eax
$LN5@GCTeam:
  017fa	83 7d b0 00	 cmp	 DWORD PTR tv67[ebp], 0
  017fe	75 02		 jne	 SHORT $LN1@GCTeam

; 812  : 	{
; 813  : 		return;

  01800	eb 46		 jmp	 SHORT $LN2@GCTeam
$LN1@GCTeam:

; 814  : 	}
; 815  : 
; 816  : 	PMSG_TVTGC_TEAM pMsg;
; 817  : 	pMsg.h.set((LPBYTE)&pMsg, 0xFB, 0x83, sizeof(pMsg));

  01802	6a 05		 push	 5
  01804	68 83 00 00 00	 push	 131			; 00000083H
  01809	68 fb 00 00 00	 push	 251			; 000000fbH
  0180e	8d 45 f4	 lea	 eax, DWORD PTR _pMsg$[ebp]
  01811	50		 push	 eax
  01812	8d 4d f4	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  01815	e8 00 00 00 00	 call	 ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ; PBMSG_HEAD2::set

; 818  : 	pMsg.Team = gObj[aIndex].m_TvTTeam;

  0181a	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0181d	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01823	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01829	8a 94 01 14 29
	00 00		 mov	 dl, BYTE PTR [ecx+eax+10516]
  01830	88 55 f8	 mov	 BYTE PTR _pMsg$[ebp+4], dl

; 819  : 	DataSend(aIndex, (LPBYTE)&pMsg, pMsg.h.size);

  01833	0f b6 45 f5	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  01837	50		 push	 eax
  01838	8d 4d f4	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  0183b	51		 push	 ecx
  0183c	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  0183f	52		 push	 edx
  01840	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  01845	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@GCTeam:

; 820  : }

  01848	5f		 pop	 edi
  01849	5e		 pop	 esi
  0184a	5b		 pop	 ebx
  0184b	8b e5		 mov	 esp, ebp
  0184d	5d		 pop	 ebp
  0184e	c2 04 00	 ret	 4
?GCTeam@CTeamVsTeam@@QAEXH@Z ENDP			; CTeamVsTeam::GCTeam
_TEXT	ENDS
PUBLIC	?CheckDLTeleport@CTeamVsTeam@@QAE_NH@Z		; CTeamVsTeam::CheckDLTeleport
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv67 = -76						; size = 4
_lpUser$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
?CheckDLTeleport@CTeamVsTeam@@QAE_NH@Z PROC		; CTeamVsTeam::CheckDLTeleport
; _this$ = ecx

; 823  : {

  01860	55		 push	 ebp
  01861	8b ec		 mov	 ebp, esp
  01863	83 ec 4c	 sub	 esp, 76			; 0000004cH
  01866	53		 push	 ebx
  01867	56		 push	 esi
  01868	57		 push	 edi
  01869	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 824  : 	if(!OBJMAX_RANGE(aIndex))

  0186c	83 7d 08 00	 cmp	 DWORD PTR _aIndex$[ebp], 0
  01870	7d 09		 jge	 SHORT $LN7@CheckDLTel
  01872	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
  01879	eb 0f		 jmp	 SHORT $LN8@CheckDLTel
$LN7@CheckDLTel:
  0187b	33 c0		 xor	 eax, eax
  0187d	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _aIndex$[ebp], 14999 ; 00003a97H
  01884	0f 9e c0	 setle	 al
  01887	89 45 b4	 mov	 DWORD PTR tv67[ebp], eax
$LN8@CheckDLTel:
  0188a	83 7d b4 00	 cmp	 DWORD PTR tv67[ebp], 0
  0188e	75 04		 jne	 SHORT $LN4@CheckDLTel

; 825  : 	{
; 826  : 		return false;

  01890	32 c0		 xor	 al, al
  01892	eb 49		 jmp	 SHORT $LN5@CheckDLTel
$LN4@CheckDLTel:

; 827  : 	}
; 828  : 
; 829  : 	if(!this->CheckStatus(eEVENT_TEAMVSTEAM_START))

  01894	6a 02		 push	 2
  01896	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01899	e8 00 00 00 00	 call	 ?CheckStatus@CTeamVsTeam@@QAE_NH@Z ; CTeamVsTeam::CheckStatus
  0189e	0f b6 c0	 movzx	 eax, al
  018a1	85 c0		 test	 eax, eax
  018a3	75 04		 jne	 SHORT $LN3@CheckDLTel

; 830  : 	{
; 831  : 		return true;

  018a5	b0 01		 mov	 al, 1
  018a7	eb 34		 jmp	 SHORT $LN5@CheckDLTel
$LN3@CheckDLTel:

; 832  : 	}
; 833  : 
; 834  : 	LPOBJ lpUser = &gObj[aIndex];

  018a9	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  018ac	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  018b2	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  018b8	89 45 f8	 mov	 DWORD PTR _lpUser$[ebp], eax

; 835  : 
; 836  : 	if(lpUser->Connected < PLAYER_PLAYING)

  018bb	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  018be	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  018c2	7d 04		 jge	 SHORT $LN2@CheckDLTel

; 837  : 	{
; 838  : 		return false;

  018c4	32 c0		 xor	 al, al
  018c6	eb 15		 jmp	 SHORT $LN5@CheckDLTel
$LN2@CheckDLTel:

; 839  : 	}
; 840  : 
; 841  : 	if(lpUser->MapNumber != TEAMVSTEAM_MAP)

  018c8	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  018cb	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  018d2	83 f9 52	 cmp	 ecx, 82			; 00000052H
  018d5	74 04		 je	 SHORT $LN1@CheckDLTel

; 842  : 	{
; 843  : 		return true;

  018d7	b0 01		 mov	 al, 1
  018d9	eb 02		 jmp	 SHORT $LN5@CheckDLTel
$LN1@CheckDLTel:

; 844  : 	}
; 845  : 
; 846  : 	return false;

  018db	32 c0		 xor	 al, al
$LN5@CheckDLTel:

; 847  : }

  018dd	5f		 pop	 edi
  018de	5e		 pop	 esi
  018df	5b		 pop	 ebx
  018e0	8b e5		 mov	 esp, ebp
  018e2	5d		 pop	 ebp
  018e3	c2 04 00	 ret	 4
?CheckDLTeleport@CTeamVsTeam@@QAE_NH@Z ENDP		; CTeamVsTeam::CheckDLTeleport
_TEXT	ENDS
PUBLIC	?PlayerConnect@CTeamVsTeam@@QAEXH@Z		; CTeamVsTeam::PlayerConnect
EXTRN	?GetMapPos@MapClass@@QAEXFAAF0@Z:PROC		; MapClass::GetMapPos
EXTRN	?MapC@@3PAVMapClass@@A:BYTE			; MapC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv67 = -84						; size = 4
_pMsg$ = -16						; size = 5
_lpUser$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
?PlayerConnect@CTeamVsTeam@@QAEXH@Z PROC		; CTeamVsTeam::PlayerConnect
; _this$ = ecx

; 850  : {

  018f0	55		 push	 ebp
  018f1	8b ec		 mov	 ebp, esp
  018f3	83 ec 54	 sub	 esp, 84			; 00000054H
  018f6	53		 push	 ebx
  018f7	56		 push	 esi
  018f8	57		 push	 edi
  018f9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 851  : 	if(!OBJMAX_RANGE(aIndex))

  018fc	83 7d 08 00	 cmp	 DWORD PTR _aIndex$[ebp], 0
  01900	7d 09		 jge	 SHORT $LN5@PlayerConn
  01902	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
  01909	eb 0f		 jmp	 SHORT $LN6@PlayerConn
$LN5@PlayerConn:
  0190b	33 c0		 xor	 eax, eax
  0190d	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _aIndex$[ebp], 14999 ; 00003a97H
  01914	0f 9e c0	 setle	 al
  01917	89 45 ac	 mov	 DWORD PTR tv67[ebp], eax
$LN6@PlayerConn:
  0191a	83 7d ac 00	 cmp	 DWORD PTR tv67[ebp], 0
  0191e	75 05		 jne	 SHORT $LN2@PlayerConn

; 852  : 	{
; 853  : 		return;

  01920	e9 9e 00 00 00	 jmp	 $LN3@PlayerConn
$LN2@PlayerConn:

; 854  : 	}
; 855  : 
; 856  : 	LPOBJ lpUser = &gObj[aIndex];

  01925	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  01928	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0192e	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01934	89 45 f8	 mov	 DWORD PTR _lpUser$[ebp], eax

; 857  : 
; 858  : #if(!DEBUG_MAP_MANAGER)
; 859  : 	if(lpUser->MapNumber == TEAMVSTEAM_MAP)

  01937	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  0193a	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  01941	83 f9 52	 cmp	 ecx, 82			; 00000052H
  01944	75 47		 jne	 SHORT $LN1@PlayerConn

; 860  : 	{
; 861  : 		lpUser->MapNumber = MAP_INDEX_RORENCIA;

  01946	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  01949	c6 80 49 01 00
	00 00		 mov	 BYTE PTR [eax+329], 0

; 862  : 		MapC[lpUser->MapNumber].GetMapPos(lpUser->MapNumber, lpUser->X, lpUser->Y);

  01950	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  01953	05 46 01 00 00	 add	 eax, 326		; 00000146H
  01958	50		 push	 eax
  01959	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  0195c	81 c1 44 01 00
	00		 add	 ecx, 324		; 00000144H
  01962	51		 push	 ecx
  01963	8b 55 f8	 mov	 edx, DWORD PTR _lpUser$[ebp]
  01966	66 0f b6 82 49
	01 00 00	 movzx	 ax, BYTE PTR [edx+329]
  0196e	0f b7 c8	 movzx	 ecx, ax
  01971	51		 push	 ecx
  01972	8b 55 f8	 mov	 edx, DWORD PTR _lpUser$[ebp]
  01975	0f b6 8a 49 01
	00 00		 movzx	 ecx, BYTE PTR [edx+329]
  0197c	69 c9 b8 3d 05
	00		 imul	 ecx, 343480		; 00053db8H
  01982	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?MapC@@3PAVMapClass@@A ; MapC
  01988	e8 00 00 00 00	 call	 ?GetMapPos@MapClass@@QAEXFAAF0@Z ; MapClass::GetMapPos
$LN1@PlayerConn:

; 863  : 	}
; 864  : #endif
; 865  : 
; 866  : 	PMSG_TVTGC_STATUS pMsg;
; 867  : 	pMsg.h.set((LPBYTE)&pMsg, 0xFB, 0x80, sizeof(pMsg));

  0198d	6a 05		 push	 5
  0198f	68 80 00 00 00	 push	 128			; 00000080H
  01994	68 fb 00 00 00	 push	 251			; 000000fbH
  01999	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0199c	50		 push	 eax
  0199d	8d 4d f0	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  019a0	e8 00 00 00 00	 call	 ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ; PBMSG_HEAD2::set

; 868  : 	pMsg.Status = this->m_EventStatus;

  019a5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  019a8	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  019ab	88 4d f4	 mov	 BYTE PTR _pMsg$[ebp+4], cl

; 869  : 	DataSend(aIndex, (LPBYTE)&pMsg, pMsg.h.size);

  019ae	0f b6 45 f1	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  019b2	50		 push	 eax
  019b3	8d 4d f0	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  019b6	51		 push	 ecx
  019b7	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  019ba	52		 push	 edx
  019bb	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  019c0	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@PlayerConn:

; 870  : }

  019c3	5f		 pop	 edi
  019c4	5e		 pop	 esi
  019c5	5b		 pop	 ebx
  019c6	8b e5		 mov	 esp, ebp
  019c8	5d		 pop	 ebp
  019c9	c2 04 00	 ret	 4
?PlayerConnect@CTeamVsTeam@@QAEXH@Z ENDP		; CTeamVsTeam::PlayerConnect
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?Send@DBSockMng@@QAEHPADH@Z:PROC		; DBSockMng::Send
EXTRN	?cDBSMng@@3VDBSockMng@@A:BYTE			; cDBSMng
EXTRN	_memset:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pMsg$230500 = -36					; size = 20
_lpUser$230497 = -16					; size = 4
_aIndex$230493 = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?GDEventInfo@CTeamVsTeam@@QAEXXZ PROC			; CTeamVsTeam::GDEventInfo
; _this$ = ecx

; 873  : {

  019d0	55		 push	 ebp
  019d1	8b ec		 mov	 ebp, esp
  019d3	83 ec 64	 sub	 esp, 100		; 00000064H
  019d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  019db	33 c5		 xor	 eax, ebp
  019dd	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  019e0	53		 push	 ebx
  019e1	56		 push	 esi
  019e2	57		 push	 edi
  019e3	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 874  : 	for(int aIndex = OBJ_STARTUSERINDEX; aIndex < OBJMAX; aIndex++)

  019e6	c7 45 f4 b0 36
	00 00		 mov	 DWORD PTR _aIndex$230493[ebp], 14000 ; 000036b0H
  019ed	eb 09		 jmp	 SHORT $LN5@GDEventInf
$LN4@GDEventInf:
  019ef	8b 45 f4	 mov	 eax, DWORD PTR _aIndex$230493[ebp]
  019f2	83 c0 01	 add	 eax, 1
  019f5	89 45 f4	 mov	 DWORD PTR _aIndex$230493[ebp], eax
$LN5@GDEventInf:
  019f8	81 7d f4 98 3a
	00 00		 cmp	 DWORD PTR _aIndex$230493[ebp], 15000 ; 00003a98H
  019ff	0f 8d 89 00 00
	00		 jge	 $LN6@GDEventInf

; 875  : 	{
; 876  : 		LPOBJ lpUser = &gObj[aIndex];

  01a05	8b 45 f4	 mov	 eax, DWORD PTR _aIndex$230493[ebp]
  01a08	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01a0e	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01a14	89 45 f0	 mov	 DWORD PTR _lpUser$230497[ebp], eax

; 877  : 
; 878  : 		if(lpUser->Connected < PLAYER_PLAYING)

  01a17	8b 45 f0	 mov	 eax, DWORD PTR _lpUser$230497[ebp]
  01a1a	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  01a1e	7d 02		 jge	 SHORT $LN2@GDEventInf

; 879  : 		{
; 880  : 			continue;

  01a20	eb cd		 jmp	 SHORT $LN4@GDEventInf
$LN2@GDEventInf:

; 881  : 		}
; 882  : 
; 883  : 		if(lpUser->m_TvTTeam == 0)

  01a22	8b 45 f0	 mov	 eax, DWORD PTR _lpUser$230497[ebp]
  01a25	83 b8 14 29 00
	00 00		 cmp	 DWORD PTR [eax+10516], 0
  01a2c	75 02		 jne	 SHORT $LN1@GDEventInf

; 884  : 		{
; 885  : 			continue;

  01a2e	eb bf		 jmp	 SHORT $LN4@GDEventInf
$LN1@GDEventInf:

; 886  : 		}
; 887  : 
; 888  : 		PMSG_TVTGD_INFO pMsg;
; 889  : 		pMsg.h.set((LPBYTE)&pMsg, 0xEA, 0x0C, sizeof(pMsg));

  01a30	6a 14		 push	 20			; 00000014H
  01a32	6a 0c		 push	 12			; 0000000cH
  01a34	68 ea 00 00 00	 push	 234			; 000000eaH
  01a39	8d 45 dc	 lea	 eax, DWORD PTR _pMsg$230500[ebp]
  01a3c	50		 push	 eax
  01a3d	8d 4d dc	 lea	 ecx, DWORD PTR _pMsg$230500[ebp]
  01a40	e8 00 00 00 00	 call	 ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ; PBMSG_HEAD2::set

; 890  : 		memset(pMsg.Name, 0, sizeof(pMsg.Name));

  01a45	6a 0b		 push	 11			; 0000000bH
  01a47	6a 00		 push	 0
  01a49	8d 45 e0	 lea	 eax, DWORD PTR _pMsg$230500[ebp+4]
  01a4c	50		 push	 eax
  01a4d	e8 00 00 00 00	 call	 _memset
  01a52	83 c4 0c	 add	 esp, 12			; 0000000cH

; 891  : 		memcpy(pMsg.Name, lpUser->Name, sizeof(pMsg.Name));

  01a55	6a 0b		 push	 11			; 0000000bH
  01a57	8b 45 f0	 mov	 eax, DWORD PTR _lpUser$230497[ebp]
  01a5a	83 c0 77	 add	 eax, 119		; 00000077H
  01a5d	50		 push	 eax
  01a5e	8d 4d e0	 lea	 ecx, DWORD PTR _pMsg$230500[ebp+4]
  01a61	51		 push	 ecx
  01a62	e8 00 00 00 00	 call	 _memcpy
  01a67	83 c4 0c	 add	 esp, 12			; 0000000cH

; 892  : 		pMsg.KillCount = lpUser->m_TvTKill;

  01a6a	8b 45 f0	 mov	 eax, DWORD PTR _lpUser$230497[ebp]
  01a6d	8b 88 18 29 00
	00		 mov	 ecx, DWORD PTR [eax+10520]
  01a73	89 4d ec	 mov	 DWORD PTR _pMsg$230500[ebp+16], ecx

; 893  : 		cDBSMng.Send((char*)&pMsg, pMsg.h.size);

  01a76	0f b6 45 dd	 movzx	 eax, BYTE PTR _pMsg$230500[ebp+1]
  01a7a	50		 push	 eax
  01a7b	8d 4d dc	 lea	 ecx, DWORD PTR _pMsg$230500[ebp]
  01a7e	51		 push	 ecx
  01a7f	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  01a84	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send

; 894  : 	}

  01a89	e9 61 ff ff ff	 jmp	 $LN4@GDEventInf
$LN6@GDEventInf:

; 895  : }

  01a8e	5f		 pop	 edi
  01a8f	5e		 pop	 esi
  01a90	5b		 pop	 ebx
  01a91	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01a94	33 cd		 xor	 ecx, ebp
  01a96	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01a9b	8b e5		 mov	 esp, ebp
  01a9d	5d		 pop	 ebp
  01a9e	c3		 ret	 0
?GDEventInfo@CTeamVsTeam@@QAEXXZ ENDP			; CTeamVsTeam::GDEventInfo
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv67 = -88						; size = 4
_pMsg$ = -20						; size = 12
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?GCUserKillCount@CTeamVsTeam@@QAEXH@Z PROC		; CTeamVsTeam::GCUserKillCount
; _this$ = ecx

; 898  : {

  01aa0	55		 push	 ebp
  01aa1	8b ec		 mov	 ebp, esp
  01aa3	83 ec 58	 sub	 esp, 88			; 00000058H
  01aa6	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  01aab	33 c5		 xor	 eax, ebp
  01aad	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  01ab0	53		 push	 ebx
  01ab1	56		 push	 esi
  01ab2	57		 push	 edi
  01ab3	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 899  : 	if(!OBJMAX_RANGE(aIndex))

  01ab6	83 7d 08 00	 cmp	 DWORD PTR _aIndex$[ebp], 0
  01aba	7d 09		 jge	 SHORT $LN4@GCUserKill
  01abc	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
  01ac3	eb 0f		 jmp	 SHORT $LN5@GCUserKill
$LN4@GCUserKill:
  01ac5	33 c0		 xor	 eax, eax
  01ac7	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _aIndex$[ebp], 14999 ; 00003a97H
  01ace	0f 9e c0	 setle	 al
  01ad1	89 45 a8	 mov	 DWORD PTR tv67[ebp], eax
$LN5@GCUserKill:
  01ad4	83 7d a8 00	 cmp	 DWORD PTR tv67[ebp], 0
  01ad8	75 02		 jne	 SHORT $LN1@GCUserKill

; 900  : 	{
; 901  : 		return;

  01ada	eb 5f		 jmp	 SHORT $LN2@GCUserKill
$LN1@GCUserKill:

; 902  : 	}
; 903  : 
; 904  : 	PMSG_TVTGC_KILL pMsg;
; 905  : 	pMsg.h.set((LPBYTE)&pMsg, 0xFB, 0x84, sizeof(pMsg));

  01adc	6a 0c		 push	 12			; 0000000cH
  01ade	68 84 00 00 00	 push	 132			; 00000084H
  01ae3	68 fb 00 00 00	 push	 251			; 000000fbH
  01ae8	8d 45 ec	 lea	 eax, DWORD PTR _pMsg$[ebp]
  01aeb	50		 push	 eax
  01aec	8d 4d ec	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  01aef	e8 00 00 00 00	 call	 ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ; PBMSG_HEAD2::set

; 906  : 	pMsg.KillCount = gObj[aIndex].m_TvTKill;

  01af4	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  01af7	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01afd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01b03	8b 94 01 18 29
	00 00		 mov	 edx, DWORD PTR [ecx+eax+10520]
  01b0a	89 55 f0	 mov	 DWORD PTR _pMsg$[ebp+4], edx

; 907  : 	pMsg.DieCount = gObj[aIndex].m_TvTDie;

  01b0d	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  01b10	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01b16	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01b1c	8b 94 01 1c 29
	00 00		 mov	 edx, DWORD PTR [ecx+eax+10524]
  01b23	89 55 f4	 mov	 DWORD PTR _pMsg$[ebp+8], edx

; 908  : 	DataSend(aIndex, (LPBYTE)&pMsg, pMsg.h.size);

  01b26	0f b6 45 ed	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  01b2a	50		 push	 eax
  01b2b	8d 4d ec	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  01b2e	51		 push	 ecx
  01b2f	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  01b32	52		 push	 edx
  01b33	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  01b38	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@GCUserKill:

; 909  : }

  01b3b	5f		 pop	 edi
  01b3c	5e		 pop	 esi
  01b3d	5b		 pop	 ebx
  01b3e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01b41	33 cd		 xor	 ecx, ebp
  01b43	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01b48	8b e5		 mov	 esp, ebp
  01b4a	5d		 pop	 ebp
  01b4b	c2 04 00	 ret	 4
?GCUserKillCount@CTeamVsTeam@@QAEXH@Z ENDP		; CTeamVsTeam::GCUserKillCount
; Function compile flags: /Odtp /ZI
_pMsg$ = -12						; size = 8
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
?GCEventTimer@CTeamVsTeam@@QAEXH@Z PROC			; CTeamVsTeam::GCEventTimer
; _this$ = ecx

; 912  : {

  01b50	55		 push	 ebp
  01b51	8b ec		 mov	 ebp, esp
  01b53	83 ec 4c	 sub	 esp, 76			; 0000004cH
  01b56	53		 push	 ebx
  01b57	56		 push	 esi
  01b58	57		 push	 edi
  01b59	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 913  : 	PMSG_TVTGC_TIME pMsg;
; 914  : 	pMsg.h.set((LPBYTE)&pMsg, 0xFB, 0x85, sizeof(pMsg));

  01b5c	6a 08		 push	 8
  01b5e	68 85 00 00 00	 push	 133			; 00000085H
  01b63	68 fb 00 00 00	 push	 251			; 000000fbH
  01b68	8d 45 f4	 lea	 eax, DWORD PTR _pMsg$[ebp]
  01b6b	50		 push	 eax
  01b6c	8d 4d f4	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  01b6f	e8 00 00 00 00	 call	 ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ; PBMSG_HEAD2::set

; 915  : 
; 916  : 	if(this->CheckStatus(eEVENT_TEAMVSTEAM_START))

  01b74	6a 02		 push	 2
  01b76	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01b79	e8 00 00 00 00	 call	 ?CheckStatus@CTeamVsTeam@@QAE_NH@Z ; CTeamVsTeam::CheckStatus
  01b7e	0f b6 c0	 movzx	 eax, al
  01b81	85 c0		 test	 eax, eax
  01b83	74 0b		 je	 SHORT $LN2@GCEventTim

; 917  : 	{
; 918  : 		pMsg.EventTime = this->m_TickRemain;

  01b85	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01b88	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  01b8b	89 4d f8	 mov	 DWORD PTR _pMsg$[ebp+4], ecx

; 919  : 	}
; 920  : 	else

  01b8e	eb 07		 jmp	 SHORT $LN1@GCEventTim
$LN2@GCEventTim:

; 921  : 	{
; 922  : 		pMsg.EventTime = 0;

  01b90	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pMsg$[ebp+4], 0
$LN1@GCEventTim:

; 923  : 	}
; 924  : 	
; 925  : 	DataSend(aIndex, (LPBYTE)&pMsg, pMsg.h.size);

  01b97	0f b6 45 f5	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  01b9b	50		 push	 eax
  01b9c	8d 4d f4	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  01b9f	51		 push	 ecx
  01ba0	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  01ba3	52		 push	 edx
  01ba4	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  01ba9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 926  : }

  01bac	5f		 pop	 edi
  01bad	5e		 pop	 esi
  01bae	5b		 pop	 ebx
  01baf	8b e5		 mov	 esp, ebp
  01bb1	5d		 pop	 ebp
  01bb2	c2 04 00	 ret	 4
?GCEventTimer@CTeamVsTeam@@QAEXH@Z ENDP			; CTeamVsTeam::GCEventTimer
_TEXT	ENDS
PUBLIC	?set@PWMSG_HEAD2@@QAEXPAEEEH@Z			; PWMSG_HEAD2::set
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$230553 = -15364					; size = 4
_lpUser$230537 = -15360					; size = 4
_i$230533 = -15356					; size = 4
_iMaxKill$230532 = -15352				; size = 4
_aIndex$230531 = -15348					; size = 4
_iCount2$ = -15344					; size = 4
_iCount$ = -15340					; size = 4
_iObjUser$ = -15336					; size = 15000
_pMsg$ = -336						; size = 328
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?GCEventStatistic@CTeamVsTeam@@QAEXXZ PROC		; CTeamVsTeam::GCEventStatistic
; _this$ = ecx

; 930  : {

  01bc0	55		 push	 ebp
  01bc1	8b ec		 mov	 ebp, esp
  01bc3	b8 44 3c 00 00	 mov	 eax, 15428		; 00003c44H
  01bc8	e8 00 00 00 00	 call	 __chkstk
  01bcd	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  01bd2	33 c5		 xor	 eax, ebp
  01bd4	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  01bd7	53		 push	 ebx
  01bd8	56		 push	 esi
  01bd9	57		 push	 edi
  01bda	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 931  : 	PMSG_TVT_STATISTIC pMsg;
; 932  : 	pMsg.h.set((LPBYTE)&pMsg, 0xFA, 0x11, sizeof(pMsg));

  01bdd	68 48 01 00 00	 push	 328			; 00000148H
  01be2	6a 11		 push	 17			; 00000011H
  01be4	68 fa 00 00 00	 push	 250			; 000000faH
  01be9	8d 85 b0 fe ff
	ff		 lea	 eax, DWORD PTR _pMsg$[ebp]
  01bef	50		 push	 eax
  01bf0	8d 8d b0 fe ff
	ff		 lea	 ecx, DWORD PTR _pMsg$[ebp]
  01bf6	e8 00 00 00 00	 call	 ?set@PWMSG_HEAD2@@QAEXPAEEEH@Z ; PWMSG_HEAD2::set

; 933  : 	pMsg.Count = 0;

  01bfb	c6 85 b5 fe ff
	ff 00		 mov	 BYTE PTR _pMsg$[ebp+5], 0

; 934  : 	pMsg.Count2 = 0;

  01c02	c6 85 b6 fe ff
	ff 00		 mov	 BYTE PTR _pMsg$[ebp+6], 0

; 935  : 
; 936  : 	bool iObjUser[OBJMAX];
; 937  : 	memset(iObjUser, 0, sizeof(iObjUser));

  01c09	68 98 3a 00 00	 push	 15000			; 00003a98H
  01c0e	6a 00		 push	 0
  01c10	8d 85 18 c4 ff
	ff		 lea	 eax, DWORD PTR _iObjUser$[ebp]
  01c16	50		 push	 eax
  01c17	e8 00 00 00 00	 call	 _memset
  01c1c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 938  : 	
; 939  : 	int iCount = 0;

  01c1f	c7 85 14 c4 ff
	ff 00 00 00 00	 mov	 DWORD PTR _iCount$[ebp], 0

; 940  : 	int iCount2 = 0;

  01c29	c7 85 10 c4 ff
	ff 00 00 00 00	 mov	 DWORD PTR _iCount2$[ebp], 0
$LN22@GCEventSta@2:

; 941  : 
; 942  : 	while(true)

  01c33	b8 01 00 00 00	 mov	 eax, 1
  01c38	85 c0		 test	 eax, eax
  01c3a	0f 84 e7 02 00
	00		 je	 $LN21@GCEventSta@2

; 943  : 	{
; 944  : 		int aIndex = -1;

  01c40	c7 85 0c c4 ff
	ff ff ff ff ff	 mov	 DWORD PTR _aIndex$230531[ebp], -1

; 945  : 		int iMaxKill = 0;

  01c4a	c7 85 08 c4 ff
	ff 00 00 00 00	 mov	 DWORD PTR _iMaxKill$230532[ebp], 0

; 946  : 
; 947  : 		for(int i = OBJ_STARTUSERINDEX; i < OBJMAX; i++)

  01c54	c7 85 04 c4 ff
	ff b0 36 00 00	 mov	 DWORD PTR _i$230533[ebp], 14000 ; 000036b0H
  01c5e	eb 0f		 jmp	 SHORT $LN20@GCEventSta@2
$LN19@GCEventSta@2:
  01c60	8b 85 04 c4 ff
	ff		 mov	 eax, DWORD PTR _i$230533[ebp]
  01c66	83 c0 01	 add	 eax, 1
  01c69	89 85 04 c4 ff
	ff		 mov	 DWORD PTR _i$230533[ebp], eax
$LN20@GCEventSta@2:
  01c6f	81 bd 04 c4 ff
	ff 98 3a 00 00	 cmp	 DWORD PTR _i$230533[ebp], 15000 ; 00003a98H
  01c79	0f 8d db 00 00
	00		 jge	 $LN18@GCEventSta@2

; 948  : 		{
; 949  : 			LPOBJ lpUser = &gObj[i];

  01c7f	8b 85 04 c4 ff
	ff		 mov	 eax, DWORD PTR _i$230533[ebp]
  01c85	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01c8b	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01c91	89 85 00 c4 ff
	ff		 mov	 DWORD PTR _lpUser$230537[ebp], eax

; 950  : 
; 951  : 			if(lpUser->Connected < PLAYER_PLAYING)

  01c97	8b 85 00 c4 ff
	ff		 mov	 eax, DWORD PTR _lpUser$230537[ebp]
  01c9d	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  01ca1	7d 02		 jge	 SHORT $LN17@GCEventSta@2

; 952  : 			{
; 953  : 				continue;

  01ca3	eb bb		 jmp	 SHORT $LN19@GCEventSta@2
$LN17@GCEventSta@2:

; 954  : 			}
; 955  : 
; 956  : 			if(lpUser->MapNumber == TEAMVSTEAM_MAP && iObjUser[i] == false)

  01ca5	8b 85 00 c4 ff
	ff		 mov	 eax, DWORD PTR _lpUser$230537[ebp]
  01cab	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  01cb2	83 f9 52	 cmp	 ecx, 82			; 00000052H
  01cb5	0f 85 9a 00 00
	00		 jne	 $LN16@GCEventSta@2
  01cbb	8b 85 04 c4 ff
	ff		 mov	 eax, DWORD PTR _i$230533[ebp]
  01cc1	0f b6 8c 05 18
	c4 ff ff	 movzx	 ecx, BYTE PTR _iObjUser$[ebp+eax]
  01cc9	85 c9		 test	 ecx, ecx
  01ccb	0f 85 84 00 00
	00		 jne	 $LN16@GCEventSta@2

; 957  : 			{
; 958  : 				if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_1)

  01cd1	8b 85 00 c4 ff
	ff		 mov	 eax, DWORD PTR _lpUser$230537[ebp]
  01cd7	83 b8 14 29 00
	00 01		 cmp	 DWORD PTR [eax+10516], 1
  01cde	75 34		 jne	 SHORT $LN15@GCEventSta@2

; 959  : 				{
; 960  : 					if(lpUser->m_TvTKill >= iMaxKill)

  01ce0	8b 85 00 c4 ff
	ff		 mov	 eax, DWORD PTR _lpUser$230537[ebp]
  01ce6	8b 88 18 29 00
	00		 mov	 ecx, DWORD PTR [eax+10520]
  01cec	3b 8d 08 c4 ff
	ff		 cmp	 ecx, DWORD PTR _iMaxKill$230532[ebp]
  01cf2	7c 1e		 jl	 SHORT $LN14@GCEventSta@2

; 961  : 					{
; 962  : 						iMaxKill = lpUser->m_TvTKill;

  01cf4	8b 85 00 c4 ff
	ff		 mov	 eax, DWORD PTR _lpUser$230537[ebp]
  01cfa	8b 88 18 29 00
	00		 mov	 ecx, DWORD PTR [eax+10520]
  01d00	89 8d 08 c4 ff
	ff		 mov	 DWORD PTR _iMaxKill$230532[ebp], ecx

; 963  : 						aIndex = i;

  01d06	8b 85 04 c4 ff
	ff		 mov	 eax, DWORD PTR _i$230533[ebp]
  01d0c	89 85 0c c4 ff
	ff		 mov	 DWORD PTR _aIndex$230531[ebp], eax
$LN14@GCEventSta@2:

; 964  : 					}
; 965  : 				}

  01d12	eb 41		 jmp	 SHORT $LN16@GCEventSta@2
$LN15@GCEventSta@2:

; 966  : 				else if(lpUser->m_TvTTeam == eEVENT_TVT_TEAM_2)

  01d14	8b 85 00 c4 ff
	ff		 mov	 eax, DWORD PTR _lpUser$230537[ebp]
  01d1a	83 b8 14 29 00
	00 02		 cmp	 DWORD PTR [eax+10516], 2
  01d21	75 32		 jne	 SHORT $LN16@GCEventSta@2

; 967  : 				{
; 968  : 					if(lpUser->m_TvTKill >= iMaxKill)

  01d23	8b 85 00 c4 ff
	ff		 mov	 eax, DWORD PTR _lpUser$230537[ebp]
  01d29	8b 88 18 29 00
	00		 mov	 ecx, DWORD PTR [eax+10520]
  01d2f	3b 8d 08 c4 ff
	ff		 cmp	 ecx, DWORD PTR _iMaxKill$230532[ebp]
  01d35	7c 1e		 jl	 SHORT $LN16@GCEventSta@2

; 969  : 					{
; 970  : 						iMaxKill = lpUser->m_TvTKill;

  01d37	8b 85 00 c4 ff
	ff		 mov	 eax, DWORD PTR _lpUser$230537[ebp]
  01d3d	8b 88 18 29 00
	00		 mov	 ecx, DWORD PTR [eax+10520]
  01d43	89 8d 08 c4 ff
	ff		 mov	 DWORD PTR _iMaxKill$230532[ebp], ecx

; 971  : 						aIndex = i;

  01d49	8b 85 04 c4 ff
	ff		 mov	 eax, DWORD PTR _i$230533[ebp]
  01d4f	89 85 0c c4 ff
	ff		 mov	 DWORD PTR _aIndex$230531[ebp], eax
$LN16@GCEventSta@2:

; 972  : 					}
; 973  : 				}
; 974  : 			}
; 975  : 		}

  01d55	e9 06 ff ff ff	 jmp	 $LN19@GCEventSta@2
$LN18@GCEventSta@2:

; 976  : 
; 977  : 		if(aIndex == -1)

  01d5a	83 bd 0c c4 ff
	ff ff		 cmp	 DWORD PTR _aIndex$230531[ebp], -1
  01d61	75 05		 jne	 SHORT $LN10@GCEventSta@2

; 978  : 		{
; 979  : 			break;

  01d63	e9 bf 01 00 00	 jmp	 $LN21@GCEventSta@2
$LN10@GCEventSta@2:

; 980  : 		}
; 981  : 
; 982  : 		if(gObj[aIndex].m_TvTTeam == eEVENT_TVT_TEAM_1)

  01d68	8b 85 0c c4 ff
	ff		 mov	 eax, DWORD PTR _aIndex$230531[ebp]
  01d6e	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01d74	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01d7a	83 bc 01 14 29
	00 00 01	 cmp	 DWORD PTR [ecx+eax+10516], 1
  01d82	0f 85 ad 00 00
	00		 jne	 $LN9@GCEventSta@2

; 983  : 		{
; 984  : 			pMsg.stat[iCount].Name[10] = 0;

  01d88	8b 85 14 c4 ff
	ff		 mov	 eax, DWORD PTR _iCount$[ebp]
  01d8e	c1 e0 04	 shl	 eax, 4
  01d91	c6 84 05 c2 fe
	ff ff 00	 mov	 BYTE PTR _pMsg$[ebp+eax+18], 0

; 985  : 			memcpy(pMsg.stat[iCount].Name, gObj[aIndex].Name, 10);

  01d99	6a 0a		 push	 10			; 0000000aH
  01d9b	8b 85 0c c4 ff
	ff		 mov	 eax, DWORD PTR _aIndex$230531[ebp]
  01da1	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01da7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01dad	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  01db1	52		 push	 edx
  01db2	8b 85 14 c4 ff
	ff		 mov	 eax, DWORD PTR _iCount$[ebp]
  01db8	c1 e0 04	 shl	 eax, 4
  01dbb	8d 8c 05 b8 fe
	ff ff		 lea	 ecx, DWORD PTR _pMsg$[ebp+eax+8]
  01dc2	51		 push	 ecx
  01dc3	e8 00 00 00 00	 call	 _memcpy
  01dc8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 986  : 			pMsg.stat[iCount].Kill = gObj[aIndex].m_TvTKill;

  01dcb	8b 85 0c c4 ff
	ff		 mov	 eax, DWORD PTR _aIndex$230531[ebp]
  01dd1	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01dd7	8b 8d 14 c4 ff
	ff		 mov	 ecx, DWORD PTR _iCount$[ebp]
  01ddd	c1 e1 04	 shl	 ecx, 4
  01de0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01de6	66 8b 84 02 18
	29 00 00	 mov	 ax, WORD PTR [edx+eax+10520]
  01dee	66 89 84 0d c4
	fe ff ff	 mov	 WORD PTR _pMsg$[ebp+ecx+20], ax

; 987  : 			pMsg.stat[iCount].Die = gObj[aIndex].m_TvTDie;

  01df6	8b 85 0c c4 ff
	ff		 mov	 eax, DWORD PTR _aIndex$230531[ebp]
  01dfc	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01e02	8b 8d 14 c4 ff
	ff		 mov	 ecx, DWORD PTR _iCount$[ebp]
  01e08	c1 e1 04	 shl	 ecx, 4
  01e0b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01e11	66 8b 84 02 1c
	29 00 00	 mov	 ax, WORD PTR [edx+eax+10524]
  01e19	66 89 84 0d c6
	fe ff ff	 mov	 WORD PTR _pMsg$[ebp+ecx+22], ax

; 988  : 
; 989  : 			iCount++;

  01e21	8b 85 14 c4 ff
	ff		 mov	 eax, DWORD PTR _iCount$[ebp]
  01e27	83 c0 01	 add	 eax, 1
  01e2a	89 85 14 c4 ff
	ff		 mov	 DWORD PTR _iCount$[ebp], eax
  01e30	e9 c8 00 00 00	 jmp	 $LN8@GCEventSta@2
$LN9@GCEventSta@2:

; 990  : 		}
; 991  : 		else if(gObj[aIndex].m_TvTTeam == eEVENT_TVT_TEAM_2)

  01e35	8b 85 0c c4 ff
	ff		 mov	 eax, DWORD PTR _aIndex$230531[ebp]
  01e3b	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01e41	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01e47	83 bc 01 14 29
	00 00 02	 cmp	 DWORD PTR [ecx+eax+10516], 2
  01e4f	0f 85 a8 00 00
	00		 jne	 $LN8@GCEventSta@2

; 992  : 		{
; 993  : 			pMsg.stat2[iCount2].Name[10] = 0;

  01e55	8b 85 10 c4 ff
	ff		 mov	 eax, DWORD PTR _iCount2$[ebp]
  01e5b	c1 e0 04	 shl	 eax, 4
  01e5e	c6 84 05 62 ff
	ff ff 00	 mov	 BYTE PTR _pMsg$[ebp+eax+178], 0

; 994  : 			memcpy(pMsg.stat2[iCount2].Name, gObj[aIndex].Name, 10);

  01e66	6a 0a		 push	 10			; 0000000aH
  01e68	8b 85 0c c4 ff
	ff		 mov	 eax, DWORD PTR _aIndex$230531[ebp]
  01e6e	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01e74	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01e7a	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  01e7e	52		 push	 edx
  01e7f	8b 85 10 c4 ff
	ff		 mov	 eax, DWORD PTR _iCount2$[ebp]
  01e85	c1 e0 04	 shl	 eax, 4
  01e88	8d 8c 05 58 ff
	ff ff		 lea	 ecx, DWORD PTR _pMsg$[ebp+eax+168]
  01e8f	51		 push	 ecx
  01e90	e8 00 00 00 00	 call	 _memcpy
  01e95	83 c4 0c	 add	 esp, 12			; 0000000cH

; 995  : 			pMsg.stat2[iCount2].Kill = gObj[aIndex].m_TvTKill;

  01e98	8b 85 0c c4 ff
	ff		 mov	 eax, DWORD PTR _aIndex$230531[ebp]
  01e9e	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01ea4	8b 8d 10 c4 ff
	ff		 mov	 ecx, DWORD PTR _iCount2$[ebp]
  01eaa	c1 e1 04	 shl	 ecx, 4
  01ead	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01eb3	66 8b 84 02 18
	29 00 00	 mov	 ax, WORD PTR [edx+eax+10520]
  01ebb	66 89 84 0d 64
	ff ff ff	 mov	 WORD PTR _pMsg$[ebp+ecx+180], ax

; 996  : 			pMsg.stat2[iCount2].Die = gObj[aIndex].m_TvTDie;

  01ec3	8b 85 0c c4 ff
	ff		 mov	 eax, DWORD PTR _aIndex$230531[ebp]
  01ec9	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01ecf	8b 8d 10 c4 ff
	ff		 mov	 ecx, DWORD PTR _iCount2$[ebp]
  01ed5	c1 e1 04	 shl	 ecx, 4
  01ed8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01ede	66 8b 84 02 1c
	29 00 00	 mov	 ax, WORD PTR [edx+eax+10524]
  01ee6	66 89 84 0d 66
	ff ff ff	 mov	 WORD PTR _pMsg$[ebp+ecx+182], ax

; 997  : 
; 998  : 			iCount2++;

  01eee	8b 85 10 c4 ff
	ff		 mov	 eax, DWORD PTR _iCount2$[ebp]
  01ef4	83 c0 01	 add	 eax, 1
  01ef7	89 85 10 c4 ff
	ff		 mov	 DWORD PTR _iCount2$[ebp], eax
$LN8@GCEventSta@2:

; 999  : 		}
; 1000 : 
; 1001 : 		iObjUser[aIndex] = true;

  01efd	8b 85 0c c4 ff
	ff		 mov	 eax, DWORD PTR _aIndex$230531[ebp]
  01f03	c6 84 05 18 c4
	ff ff 01	 mov	 BYTE PTR _iObjUser$[ebp+eax], 1

; 1002 : 
; 1003 : 		if(iCount >= 10 || iCount2 >= 10)

  01f0b	83 bd 14 c4 ff
	ff 0a		 cmp	 DWORD PTR _iCount$[ebp], 10 ; 0000000aH
  01f12	7d 09		 jge	 SHORT $LN5@GCEventSta@2
  01f14	83 bd 10 c4 ff
	ff 0a		 cmp	 DWORD PTR _iCount2$[ebp], 10 ; 0000000aH
  01f1b	7c 05		 jl	 SHORT $LN6@GCEventSta@2
$LN5@GCEventSta@2:

; 1004 : 		{
; 1005 : 			continue;

  01f1d	e9 11 fd ff ff	 jmp	 $LN22@GCEventSta@2
$LN6@GCEventSta@2:

; 1006 : 		}
; 1007 : 	}

  01f22	e9 0c fd ff ff	 jmp	 $LN22@GCEventSta@2
$LN21@GCEventSta@2:

; 1008 : 
; 1009 : 	pMsg.Count = (BYTE)iCount;

  01f27	8a 85 14 c4 ff
	ff		 mov	 al, BYTE PTR _iCount$[ebp]
  01f2d	88 85 b5 fe ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+5], al

; 1010 : 	pMsg.Count2 = (BYTE)iCount2;

  01f33	8a 85 10 c4 ff
	ff		 mov	 al, BYTE PTR _iCount2$[ebp]
  01f39	88 85 b6 fe ff
	ff		 mov	 BYTE PTR _pMsg$[ebp+6], al

; 1011 : 
; 1012 : 	for(int i = OBJ_STARTUSERINDEX; i < OBJMAX; i++)

  01f3f	c7 85 fc c3 ff
	ff b0 36 00 00	 mov	 DWORD PTR _i$230553[ebp], 14000 ; 000036b0H
  01f49	eb 0f		 jmp	 SHORT $LN4@GCEventSta@2
$LN3@GCEventSta@2:
  01f4b	8b 85 fc c3 ff
	ff		 mov	 eax, DWORD PTR _i$230553[ebp]
  01f51	83 c0 01	 add	 eax, 1
  01f54	89 85 fc c3 ff
	ff		 mov	 DWORD PTR _i$230553[ebp], eax
$LN4@GCEventSta@2:
  01f5a	81 bd fc c3 ff
	ff 98 3a 00 00	 cmp	 DWORD PTR _i$230553[ebp], 15000 ; 00003a98H
  01f64	7d 30		 jge	 SHORT $LN23@GCEventSta@2

; 1013 : 	{
; 1014 : 		if(iObjUser[i] == true)

  01f66	8b 85 fc c3 ff
	ff		 mov	 eax, DWORD PTR _i$230553[ebp]
  01f6c	0f b6 8c 05 18
	c4 ff ff	 movzx	 ecx, BYTE PTR _iObjUser$[ebp+eax]
  01f74	83 f9 01	 cmp	 ecx, 1
  01f77	75 1b		 jne	 SHORT $LN1@GCEventSta@2

; 1015 : 		{
; 1016 : 			DataSend(i, (LPBYTE)&pMsg, sizeof(pMsg));

  01f79	68 48 01 00 00	 push	 328			; 00000148H
  01f7e	8d 85 b0 fe ff
	ff		 lea	 eax, DWORD PTR _pMsg$[ebp]
  01f84	50		 push	 eax
  01f85	8b 8d fc c3 ff
	ff		 mov	 ecx, DWORD PTR _i$230553[ebp]
  01f8b	51		 push	 ecx
  01f8c	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  01f91	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@GCEventSta@2:

; 1017 : 		}
; 1018 : 	}

  01f94	eb b5		 jmp	 SHORT $LN3@GCEventSta@2
$LN23@GCEventSta@2:

; 1019 : }

  01f96	5f		 pop	 edi
  01f97	5e		 pop	 esi
  01f98	5b		 pop	 ebx
  01f99	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01f9c	33 cd		 xor	 ecx, ebp
  01f9e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01fa3	8b e5		 mov	 esp, ebp
  01fa5	5d		 pop	 ebp
  01fa6	c3		 ret	 0
?GCEventStatistic@CTeamVsTeam@@QAEXXZ ENDP		; CTeamVsTeam::GCEventStatistic
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\include\prodef.h
_TEXT	ENDS
;	COMDAT ?set@PWMSG_HEAD2@@QAEXPAEEEH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpBuf$ = 8						; size = 4
_head$ = 12						; size = 1
_sub$ = 16						; size = 1
_size$ = 20						; size = 4
?set@PWMSG_HEAD2@@QAEXPAEEEH@Z PROC			; PWMSG_HEAD2::set, COMDAT
; _this$ = ecx

; 149  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 150  : 		lpBuf[0] = 0xC2;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  0000f	c6 00 c2	 mov	 BYTE PTR [eax], 194	; 000000c2H

; 151  : 		lpBuf[1] = SET_NUMBERH(size);

  00012	8b 45 14	 mov	 eax, DWORD PTR _size$[ebp]
  00015	c1 e8 08	 shr	 eax, 8
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _lpBuf$[ebp]
  0001b	88 41 01	 mov	 BYTE PTR [ecx+1], al

; 152  : 		lpBuf[2] = SET_NUMBERL(size);

  0001e	8b 45 14	 mov	 eax, DWORD PTR _size$[ebp]
  00021	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _lpBuf$[ebp]
  00029	88 41 02	 mov	 BYTE PTR [ecx+2], al

; 153  : 		lpBuf[3] = head;

  0002c	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  0002f	8a 4d 0c	 mov	 cl, BYTE PTR _head$[ebp]
  00032	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 154  : 		lpBuf[4] = sub;

  00035	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  00038	8a 4d 10	 mov	 cl, BYTE PTR _sub$[ebp]
  0003b	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 155  : 	}

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c2 10 00	 ret	 16			; 00000010H
?set@PWMSG_HEAD2@@QAEXPAEEEH@Z ENDP			; PWMSG_HEAD2::set
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\teamvsteam.cpp
;	COMDAT ??__Eg_TeamVsTeam@@YAXXZ
text$yc	SEGMENT
??__Eg_TeamVsTeam@@YAXXZ PROC				; `dynamic initializer for 'g_TeamVsTeam'', COMDAT

; 15   : CTeamVsTeam g_TeamVsTeam;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_TeamVsTeam@@3VCTeamVsTeam@@A ; g_TeamVsTeam
  0000e	e8 00 00 00 00	 call	 ??0CTeamVsTeam@@QAE@XZ	; CTeamVsTeam::CTeamVsTeam
  00013	68 00 00 00 00	 push	 OFFSET ??__Fg_TeamVsTeam@@YAXXZ ; `dynamic atexit destructor for 'g_TeamVsTeam''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__Eg_TeamVsTeam@@YAXXZ ENDP				; `dynamic initializer for 'g_TeamVsTeam''
; Function compile flags: /Odtp /ZI
text$yc	ENDS
;	COMDAT ??__Fg_TeamVsTeam@@YAXXZ
text$yd	SEGMENT
??__Fg_TeamVsTeam@@YAXXZ PROC				; `dynamic atexit destructor for 'g_TeamVsTeam'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_TeamVsTeam@@3VCTeamVsTeam@@A ; g_TeamVsTeam
  0000e	e8 00 00 00 00	 call	 ??1CTeamVsTeam@@QAE@XZ	; CTeamVsTeam::~CTeamVsTeam
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__Fg_TeamVsTeam@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_TeamVsTeam''
text$yd	ENDS
PUBLIC	?g_TeamVsTeam@@3VCTeamVsTeam@@A			; g_TeamVsTeam
_BSS	SEGMENT
?g_TeamVsTeam@@3VCTeamVsTeam@@A DB 06cH DUP (?)		; g_TeamVsTeam
_BSS	ENDS
CRT$XCU	SEGMENT
_g_TeamVsTeam$initializer$ DD FLAT:??__Eg_TeamVsTeam@@YAXXZ
CRT$XCU	ENDS
END
