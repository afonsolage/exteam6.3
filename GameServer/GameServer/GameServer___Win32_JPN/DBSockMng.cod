; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\DBSockMng.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_7DBSockMng@@6B@				; DBSockMng::`vftable'
PUBLIC	??0DBSockMng@@QAE@XZ				; DBSockMng::DBSockMng
PUBLIC	??_R4DBSockMng@@6B@				; DBSockMng::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDBSockMng@@@8				; DBSockMng `RTTI Type Descriptor'
PUBLIC	??_R3DBSockMng@@8				; DBSockMng::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DBSockMng@@8				; DBSockMng::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DBSockMng@@8			; DBSockMng::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??0wsJoinServerCli@@QAE@XZ:PROC			; wsJoinServerCli::wsJoinServerCli
EXTRN	??1wsJoinServerCli@@UAE@XZ:PROC			; wsJoinServerCli::~wsJoinServerCli
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_EDBSockMng@@UAEPAXI@Z:PROC			; DBSockMng::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@DBSockMng@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\dbsockmng.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@DBSockMng@@8 DD FLAT:??_R0?AVDBSockMng@@@8 ; DBSockMng::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DBSockMng@@8
rdata$r	ENDS
;	COMDAT ??_R2DBSockMng@@8
rdata$r	SEGMENT
??_R2DBSockMng@@8 DD FLAT:??_R1A@?0A@EA@DBSockMng@@8	; DBSockMng::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3DBSockMng@@8
rdata$r	SEGMENT
??_R3DBSockMng@@8 DD 00H				; DBSockMng::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2DBSockMng@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDBSockMng@@@8
_DATA	SEGMENT
??_R0?AVDBSockMng@@@8 DD FLAT:??_7type_info@@6B@	; DBSockMng `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDBSockMng@@', 00H
_DATA	ENDS
;	COMDAT ??_R4DBSockMng@@6B@
rdata$r	SEGMENT
??_R4DBSockMng@@6B@ DD 00H				; DBSockMng::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDBSockMng@@@8
	DD	FLAT:??_R3DBSockMng@@8
rdata$r	ENDS
;	COMDAT ??_7DBSockMng@@6B@
CONST	SEGMENT
??_7DBSockMng@@6B@ DD FLAT:??_R4DBSockMng@@6B@		; DBSockMng::`vftable'
	DD	FLAT:??_EDBSockMng@@UAEPAXI@Z
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0DBSockMng@@QAE@XZ PROC				; DBSockMng::DBSockMng
; _this$ = ecx

; 14   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7DBSockMng@@6B@
  00015	68 00 00 00 00	 push	 OFFSET ??1wsJoinServerCli@@UAE@XZ ; wsJoinServerCli::~wsJoinServerCli
  0001a	68 00 00 00 00	 push	 OFFSET ??0wsJoinServerCli@@QAE@XZ ; wsJoinServerCli::wsJoinServerCli
  0001f	6a 02		 push	 2
  00021	68 28 00 19 00	 push	 1638440			; 00190028H
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	83 c0 04	 add	 eax, 4
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ??_L@YGXPAXIHP6EX0@Z1@Z

; 15   : 	this->m_ActiveServer=DS_UNINITIALIZED;

  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	c7 80 54 00 32
	00 ff ff ff ff	 mov	 DWORD PTR [eax+3276884], -1

; 16   : }

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
??0DBSockMng@@QAE@XZ ENDP				; DBSockMng::DBSockMng
_TEXT	ENDS
PUBLIC	??1DBSockMng@@UAE@XZ				; DBSockMng::~DBSockMng
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GDBSockMng@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GDBSockMng@@UAEPAXI@Z PROC				; DBSockMng::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1DBSockMng@@UAE@XZ	; DBSockMng::~DBSockMng
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GDBSockMng@@UAEPAXI@Z ENDP				; DBSockMng::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1DBSockMng@@UAE@XZ PROC				; DBSockMng::~DBSockMng
; _this$ = ecx

; 19   : {

  00050	55		 push	 ebp
  00051	8b ec		 mov	 ebp, esp
  00053	83 ec 44	 sub	 esp, 68			; 00000044H
  00056	53		 push	 ebx
  00057	56		 push	 esi
  00058	57		 push	 edi
  00059	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0005c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7DBSockMng@@6B@

; 20   : 
; 21   : }

  00065	68 00 00 00 00	 push	 OFFSET ??1wsJoinServerCli@@UAE@XZ ; wsJoinServerCli::~wsJoinServerCli
  0006a	6a 02		 push	 2
  0006c	68 28 00 19 00	 push	 1638440			; 00190028H
  00071	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00074	83 c0 04	 add	 eax, 4
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  0007d	5f		 pop	 edi
  0007e	5e		 pop	 esi
  0007f	5b		 pop	 ebx
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
??1DBSockMng@@UAE@XZ ENDP				; DBSockMng::~DBSockMng
_TEXT	ENDS
PUBLIC	??_C@_0BE@CLMPKIHE@ExDB?5Server?5Check?4?4?$AA@	; `string'
PUBLIC	?Connect@DBSockMng@@QAEXXZ			; DBSockMng::Connect
EXTRN	?GetConnect@MyWinsockBase@@QAEHXZ:PROC		; MyWinsockBase::GetConnect
EXTRN	?ExDataServerConnect@@YAHPADK@Z:PROC		; ExDataServerConnect
EXTRN	?ExDbIp@@3PADA:BYTE				; ExDbIp
EXTRN	?LogAddC@@3P6AXEPADZZA:DWORD			; LogAddC
EXTRN	?wsExDbCli@@3VwsJoinServerCli@@A:BYTE		; wsExDbCli
EXTRN	?DataServerIp2@@3PADA:BYTE			; DataServerIp2
EXTRN	?DataServerPort2@@3HA:DWORD			; DataServerPort2
EXTRN	?DataServerLogin@@YAXH@Z:PROC			; DataServerLogin
EXTRN	?Close@MyWinsockBase@@QAEHXZ:PROC		; MyWinsockBase::Close
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
EXTRN	?Get@CMsg@@QAEPADH@Z:PROC			; CMsg::Get
EXTRN	?lMsg@@3VCMsg@@A:BYTE				; lMsg
EXTRN	?Connect@wsJoinServerCli@@QAEHPADGK@Z:PROC	; wsJoinServerCli::Connect
EXTRN	?DataServerIp@@3PADA:BYTE			; DataServerIp
EXTRN	?DataServerPort@@3HA:DWORD			; DataServerPort
EXTRN	?SetProtocolCore@wsJoinServerCli@@QAEHP6AXEPAEH@Z@Z:PROC ; wsJoinServerCli::SetProtocolCore
EXTRN	?DataServerProtocolCore@@YAXEPAEH@Z:PROC	; DataServerProtocolCore
EXTRN	?CreateSocket@MyWinsockBase@@QAEHPAUHWND__@@@Z:PROC ; MyWinsockBase::CreateSocket
EXTRN	?ghWnd@@3PAUHWND__@@A:DWORD			; ghWnd
EXTRN	?GetSocket@MyWinsockBase@@QAEIXZ:PROC		; MyWinsockBase::GetSocket
;	COMDAT ??_C@_0BE@CLMPKIHE@ExDB?5Server?5Check?4?4?$AA@
CONST	SEGMENT
??_C@_0BE@CLMPKIHE@ExDB?5Server?5Check?4?4?$AA@ DB 'ExDB Server Check..', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_State$230940 = -12					; size = 4
_State$230935 = -8					; size = 4
_this$ = -4						; size = 4
?Connect@DBSockMng@@QAEXXZ PROC				; DBSockMng::Connect
; _this$ = ecx

; 24   : {

  00090	55		 push	 ebp
  00091	8b ec		 mov	 ebp, esp
  00093	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00096	53		 push	 ebx
  00097	56		 push	 esi
  00098	57		 push	 edi
  00099	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 25   : 	if (this->wsCDBS[0].GetSocket()  == INVALID_SOCKET )

  0009c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	83 c1 08	 add	 ecx, 8
  000a2	e8 00 00 00 00	 call	 ?GetSocket@MyWinsockBase@@QAEIXZ ; MyWinsockBase::GetSocket
  000a7	83 f8 ff	 cmp	 eax, -1
  000aa	0f 85 b3 00 00
	00		 jne	 $LN10@Connect

; 26   : 	{
; 27   : 		int State;
; 28   : 		this->wsCDBS[0].CreateSocket(ghWnd);

  000b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  000b5	50		 push	 eax
  000b6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b9	83 c1 08	 add	 ecx, 8
  000bc	e8 00 00 00 00	 call	 ?CreateSocket@MyWinsockBase@@QAEHPAUHWND__@@@Z ; MyWinsockBase::CreateSocket

; 29   : 		this->wsCDBS[0].SetProtocolCore(DataServerProtocolCore);

  000c1	68 00 00 00 00	 push	 OFFSET ?DataServerProtocolCore@@YAXEPAEH@Z ; DataServerProtocolCore
  000c6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c9	83 c1 04	 add	 ecx, 4
  000cc	e8 00 00 00 00	 call	 ?SetProtocolCore@wsJoinServerCli@@QAEHP6AXEPAEH@Z@Z ; wsJoinServerCli::SetProtocolCore

; 30   : 		State=this->wsCDBS[0].Connect(DataServerIp, DataServerPort, WM_GM_DATA1_CLIENT_MSG_PROC);

  000d1	68 0a 04 00 00	 push	 1034			; 0000040aH
  000d6	0f b7 05 00 00
	00 00		 movzx	 eax, WORD PTR ?DataServerPort@@3HA
  000dd	50		 push	 eax
  000de	68 00 00 00 00	 push	 OFFSET ?DataServerIp@@3PADA ; DataServerIp
  000e3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e6	83 c1 04	 add	 ecx, 4
  000e9	e8 00 00 00 00	 call	 ?Connect@wsJoinServerCli@@QAEHPADGK@Z ; wsJoinServerCli::Connect
  000ee	89 45 f8	 mov	 DWORD PTR _State$230935[ebp], eax

; 31   : 		if (State == 0)

  000f1	83 7d f8 00	 cmp	 DWORD PTR _State$230935[ebp], 0
  000f5	75 31		 jne	 SHORT $LN9@Connect

; 32   : 		{
; 33   : 			LogAdd(lMsg.Get(MSGGET(1, 147)), DataServerIp, DataServerPort);

  000f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DataServerPort@@3HA ; DataServerPort
  000fc	50		 push	 eax
  000fd	68 00 00 00 00	 push	 OFFSET ?DataServerIp@@3PADA ; DataServerIp
  00102	68 93 01 00 00	 push	 403			; 00000193H
  00107	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0010c	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00111	50		 push	 eax
  00112	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00118	83 c4 0c	 add	 esp, 12			; 0000000cH

; 34   : 			this->wsCDBS[0].Close();

  0011b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	83 c1 08	 add	 ecx, 8
  00121	e8 00 00 00 00	 call	 ?Close@MyWinsockBase@@QAEHXZ ; MyWinsockBase::Close

; 35   : 		}
; 36   : 		else

  00126	eb 3b		 jmp	 SHORT $LN10@Connect
$LN9@Connect:

; 37   : 		{
; 38   : 			LogAdd(lMsg.Get(MSGGET(1, 146)), DataServerIp, DataServerPort);	

  00128	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DataServerPort@@3HA ; DataServerPort
  0012d	50		 push	 eax
  0012e	68 00 00 00 00	 push	 OFFSET ?DataServerIp@@3PADA ; DataServerIp
  00133	68 92 01 00 00	 push	 402			; 00000192H
  00138	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0013d	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00142	50		 push	 eax
  00143	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00149	83 c4 0c	 add	 esp, 12			; 0000000cH

; 39   : 			this->m_ActiveServer=DS_0;

  0014c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0014f	c7 80 54 00 32
	00 00 00 00 00	 mov	 DWORD PTR [eax+3276884], 0

; 40   : 			DataServerLogin(DS_0);

  00159	6a 00		 push	 0
  0015b	e8 00 00 00 00	 call	 ?DataServerLogin@@YAXH@Z ; DataServerLogin
  00160	83 c4 04	 add	 esp, 4
$LN10@Connect:

; 41   : 		}
; 42   : 	}
; 43   : 	
; 44   : 	if (this->wsCDBS[1].GetSocket() == INVALID_SOCKET)	

  00163	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00166	81 c1 30 00 19
	00		 add	 ecx, 1638448		; 00190030H
  0016c	e8 00 00 00 00	 call	 ?GetSocket@MyWinsockBase@@QAEIXZ ; MyWinsockBase::GetSocket
  00171	83 f8 ff	 cmp	 eax, -1
  00174	0f 85 cb 00 00
	00		 jne	 $LN7@Connect

; 45   : 	{
; 46   : 		int State;
; 47   : 		this->wsCDBS[1].CreateSocket(ghWnd);

  0017a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  0017f	50		 push	 eax
  00180	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00183	81 c1 30 00 19
	00		 add	 ecx, 1638448		; 00190030H
  00189	e8 00 00 00 00	 call	 ?CreateSocket@MyWinsockBase@@QAEHPAUHWND__@@@Z ; MyWinsockBase::CreateSocket

; 48   : 		this->wsCDBS[1].SetProtocolCore(DataServerProtocolCore);

  0018e	68 00 00 00 00	 push	 OFFSET ?DataServerProtocolCore@@YAXEPAEH@Z ; DataServerProtocolCore
  00193	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00196	81 c1 2c 00 19
	00		 add	 ecx, 1638444		; 0019002cH
  0019c	e8 00 00 00 00	 call	 ?SetProtocolCore@wsJoinServerCli@@QAEHP6AXEPAEH@Z@Z ; wsJoinServerCli::SetProtocolCore

; 49   : 		State=this->wsCDBS[1].Connect(DataServerIp2, DataServerPort2, WM_GM_DATA2_CLIENT_MSG_PROC);

  001a1	68 0b 04 00 00	 push	 1035			; 0000040bH
  001a6	0f b7 05 00 00
	00 00		 movzx	 eax, WORD PTR ?DataServerPort2@@3HA
  001ad	50		 push	 eax
  001ae	68 00 00 00 00	 push	 OFFSET ?DataServerIp2@@3PADA ; DataServerIp2
  001b3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b6	81 c1 2c 00 19
	00		 add	 ecx, 1638444		; 0019002cH
  001bc	e8 00 00 00 00	 call	 ?Connect@wsJoinServerCli@@QAEHPADGK@Z ; wsJoinServerCli::Connect
  001c1	89 45 f4	 mov	 DWORD PTR _State$230940[ebp], eax

; 50   : 		if (State==0)

  001c4	83 7d f4 00	 cmp	 DWORD PTR _State$230940[ebp], 0
  001c8	75 34		 jne	 SHORT $LN6@Connect

; 51   : 		{
; 52   : 			LogAdd(lMsg.Get(MSGGET(1, 147)), DataServerIp2, DataServerPort2);

  001ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DataServerPort2@@3HA ; DataServerPort2
  001cf	50		 push	 eax
  001d0	68 00 00 00 00	 push	 OFFSET ?DataServerIp2@@3PADA ; DataServerIp2
  001d5	68 93 01 00 00	 push	 403			; 00000193H
  001da	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  001df	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  001e4	50		 push	 eax
  001e5	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  001eb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 53   : 			this->wsCDBS[1].Close();

  001ee	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001f1	81 c1 30 00 19
	00		 add	 ecx, 1638448		; 00190030H
  001f7	e8 00 00 00 00	 call	 ?Close@MyWinsockBase@@QAEHXZ ; MyWinsockBase::Close

; 54   : 		}
; 55   : 		else

  001fc	eb 47		 jmp	 SHORT $LN7@Connect
$LN6@Connect:

; 56   : 		{
; 57   : 			LogAdd(lMsg.Get(MSGGET(1, 146)), DataServerIp2, DataServerPort2);

  001fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DataServerPort2@@3HA ; DataServerPort2
  00203	50		 push	 eax
  00204	68 00 00 00 00	 push	 OFFSET ?DataServerIp2@@3PADA ; DataServerIp2
  00209	68 92 01 00 00	 push	 402			; 00000192H
  0020e	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00213	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00218	50		 push	 eax
  00219	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  0021f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 58   : 			if (this->m_ActiveServer==-1)

  00222	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00225	83 b8 54 00 32
	00 ff		 cmp	 DWORD PTR [eax+3276884], -1
  0022c	75 0d		 jne	 SHORT $LN4@Connect

; 59   : 			{
; 60   : 				this->m_ActiveServer=DS_1;

  0022e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00231	c7 80 54 00 32
	00 01 00 00 00	 mov	 DWORD PTR [eax+3276884], 1
$LN4@Connect:

; 61   : 			}
; 62   : 			DataServerLogin(DS_1);

  0023b	6a 01		 push	 1
  0023d	e8 00 00 00 00	 call	 ?DataServerLogin@@YAXH@Z ; DataServerLogin
  00242	83 c4 04	 add	 esp, 4
$LN7@Connect:

; 63   : 		}
; 64   : 	}
; 65   : 	
; 66   : 	if ( wsExDbCli.GetSocket()  == INVALID_SOCKET)

  00245	b9 04 00 00 00	 mov	 ecx, OFFSET ?wsExDbCli@@3VwsJoinServerCli@@A+4
  0024a	e8 00 00 00 00	 call	 ?GetSocket@MyWinsockBase@@QAEIXZ ; MyWinsockBase::GetSocket
  0024f	83 f8 ff	 cmp	 eax, -1
  00252	75 34		 jne	 SHORT $LN3@Connect

; 67   : 	{
; 68   : 		LogAddC(2, "ExDB Server Check..");

  00254	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@CLMPKIHE@ExDB?5Server?5Check?4?4?$AA@
  00259	6a 02		 push	 2
  0025b	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00261	83 c4 08	 add	 esp, 8

; 69   : 		wsExDbCli.CreateSocket(ghWnd);

  00264	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  00269	50		 push	 eax
  0026a	b9 04 00 00 00	 mov	 ecx, OFFSET ?wsExDbCli@@3VwsJoinServerCli@@A+4
  0026f	e8 00 00 00 00	 call	 ?CreateSocket@MyWinsockBase@@QAEHPAUHWND__@@@Z ; MyWinsockBase::CreateSocket

; 70   : 		ExDataServerConnect(ExDbIp, WM_GM_EXDATA_CLIENT_MSG_PROC);

  00274	68 0e 04 00 00	 push	 1038			; 0000040eH
  00279	68 00 00 00 00	 push	 OFFSET ?ExDbIp@@3PADA	; ExDbIp
  0027e	e8 00 00 00 00	 call	 ?ExDataServerConnect@@YAHPADK@Z ; ExDataServerConnect
  00283	83 c4 08	 add	 esp, 8

; 71   : 	}
; 72   : 	else

  00286	eb 30		 jmp	 SHORT $LN11@Connect
$LN3@Connect:

; 73   : 	{
; 74   : 		if ( wsExDbCli.GetConnect() == 0 )

  00288	b9 04 00 00 00	 mov	 ecx, OFFSET ?wsExDbCli@@3VwsJoinServerCli@@A+4
  0028d	e8 00 00 00 00	 call	 ?GetConnect@MyWinsockBase@@QAEHXZ ; MyWinsockBase::GetConnect
  00292	85 c0		 test	 eax, eax
  00294	75 22		 jne	 SHORT $LN11@Connect

; 75   : 		{
; 76   : 			LogAddC(2, "ExDB Server Check..");

  00296	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@CLMPKIHE@ExDB?5Server?5Check?4?4?$AA@
  0029b	6a 02		 push	 2
  0029d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  002a3	83 c4 08	 add	 esp, 8

; 77   : 			ExDataServerConnect(ExDbIp, WM_GM_EXDATA_CLIENT_MSG_PROC);

  002a6	68 0e 04 00 00	 push	 1038			; 0000040eH
  002ab	68 00 00 00 00	 push	 OFFSET ?ExDbIp@@3PADA	; ExDbIp
  002b0	e8 00 00 00 00	 call	 ?ExDataServerConnect@@YAHPADK@Z ; ExDataServerConnect
  002b5	83 c4 08	 add	 esp, 8
$LN11@Connect:

; 78   : 		}
; 79   : 	}
; 80   : }

  002b8	5f		 pop	 edi
  002b9	5e		 pop	 esi
  002ba	5b		 pop	 ebx
  002bb	8b e5		 mov	 esp, ebp
  002bd	5d		 pop	 ebp
  002be	c3		 ret	 0
?Connect@DBSockMng@@QAEXXZ ENDP				; DBSockMng::Connect
_TEXT	ENDS
PUBLIC	??_C@_0BB@FLBAPBOE@Active?5DB?5Change?$AA@	; `string'
PUBLIC	?ActiveChange@DBSockMng@@QAEXXZ			; DBSockMng::ActiveChange
;	COMDAT ??_C@_0BB@FLBAPBOE@Active?5DB?5Change?$AA@
CONST	SEGMENT
??_C@_0BB@FLBAPBOE@Active?5DB?5Change?$AA@ DB 'Active DB Change', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_Status$230952 = -8					; size = 4
_this$ = -4						; size = 4
?ActiveChange@DBSockMng@@QAEXXZ PROC			; DBSockMng::ActiveChange
; _this$ = ecx

; 83   : {

  002c0	55		 push	 ebp
  002c1	8b ec		 mov	 ebp, esp
  002c3	83 ec 48	 sub	 esp, 72			; 00000048H
  002c6	53		 push	 ebx
  002c7	56		 push	 esi
  002c8	57		 push	 edi
  002c9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 84   : 	{
; 85   : 		int Status;
; 86   : 		if (this->m_ActiveServer==DS_0)

  002cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002cf	83 b8 54 00 32
	00 00		 cmp	 DWORD PTR [eax+3276884], 0
  002d6	75 16		 jne	 SHORT $LN2@ActiveChan

; 87   : 		{
; 88   : 			this->m_ActiveServer=DS_1;

  002d8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002db	c7 80 54 00 32
	00 01 00 00 00	 mov	 DWORD PTR [eax+3276884], 1

; 89   : 			Status=1;

  002e5	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _Status$230952[ebp], 1

; 90   : 		}
; 91   : 		else

  002ec	eb 14		 jmp	 SHORT $LN1@ActiveChan
$LN2@ActiveChan:

; 92   : 		{
; 93   : 			this->m_ActiveServer=DS_0;

  002ee	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002f1	c7 80 54 00 32
	00 00 00 00 00	 mov	 DWORD PTR [eax+3276884], 0

; 94   : 			Status=0;

  002fb	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _Status$230952[ebp], 0
$LN1@ActiveChan:

; 95   : 		}
; 96   : 		LogAdd("Active DB Change");

  00302	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@FLBAPBOE@Active?5DB?5Change?$AA@
  00307	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  0030d	83 c4 04	 add	 esp, 4

; 97   : 	}
; 98   : }

  00310	5f		 pop	 edi
  00311	5e		 pop	 esi
  00312	5b		 pop	 ebx
  00313	8b e5		 mov	 esp, ebp
  00315	5d		 pop	 ebp
  00316	c3		 ret	 0
?ActiveChange@DBSockMng@@QAEXXZ ENDP			; DBSockMng::ActiveChange
_TEXT	ENDS
PUBLIC	?Send@DBSockMng@@QAEHPADH@Z			; DBSockMng::Send
EXTRN	?DataSend@wsJoinServerCli@@QAEHPADH@Z:PROC	; wsJoinServerCli::DataSend
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
_len$ = 12						; size = 4
?Send@DBSockMng@@QAEHPADH@Z PROC			; DBSockMng::Send
; _this$ = ecx

; 101  : {

  00320	55		 push	 ebp
  00321	8b ec		 mov	 ebp, esp
  00323	83 ec 44	 sub	 esp, 68			; 00000044H
  00326	53		 push	 ebx
  00327	56		 push	 esi
  00328	57		 push	 edi
  00329	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 102  : 	if (this->m_ActiveServer >= 2)

  0032c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0032f	83 b8 54 00 32
	00 02		 cmp	 DWORD PTR [eax+3276884], 2
  00336	7c 04		 jl	 SHORT $LN3@Send

; 103  : 	{
; 104  : 		return 0;

  00338	33 c0		 xor	 eax, eax
  0033a	eb 67		 jmp	 SHORT $LN4@Send
$LN3@Send:

; 105  : 	}
; 106  : 	if (this->m_ActiveServer < 0)

  0033c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0033f	83 b8 54 00 32
	00 00		 cmp	 DWORD PTR [eax+3276884], 0
  00346	7d 04		 jge	 SHORT $LN2@Send

; 107  : 	{
; 108  : 		return 0;

  00348	33 c0		 xor	 eax, eax
  0034a	eb 57		 jmp	 SHORT $LN4@Send
$LN2@Send:

; 109  : 	}
; 110  : 	/*
; 111  : 
; 112  : 	*/
; 113  : 
; 114  : 	if ( this->wsCDBS[this->m_ActiveServer].DataSend((char*)buf, len) == 0)

  0034c	8b 45 0c	 mov	 eax, DWORD PTR _len$[ebp]
  0034f	50		 push	 eax
  00350	8b 4d 08	 mov	 ecx, DWORD PTR _buf$[ebp]
  00353	51		 push	 ecx
  00354	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00357	8b 82 54 00 32
	00		 mov	 eax, DWORD PTR [edx+3276884]
  0035d	69 c0 28 00 19
	00		 imul	 eax, 1638440		; 00190028H
  00363	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00366	8d 4c 01 04	 lea	 ecx, DWORD PTR [ecx+eax+4]
  0036a	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend
  0036f	85 c0		 test	 eax, eax
  00371	75 2b		 jne	 SHORT $LN1@Send

; 115  : 	{
; 116  : 		this->ActiveChange();

  00373	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00376	e8 00 00 00 00	 call	 ?ActiveChange@DBSockMng@@QAEXXZ ; DBSockMng::ActiveChange

; 117  : 		this->wsCDBS[this->m_ActiveServer].DataSend((char*)buf, len);

  0037b	8b 45 0c	 mov	 eax, DWORD PTR _len$[ebp]
  0037e	50		 push	 eax
  0037f	8b 4d 08	 mov	 ecx, DWORD PTR _buf$[ebp]
  00382	51		 push	 ecx
  00383	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00386	8b 82 54 00 32
	00		 mov	 eax, DWORD PTR [edx+3276884]
  0038c	69 c0 28 00 19
	00		 imul	 eax, 1638440		; 00190028H
  00392	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00395	8d 4c 01 04	 lea	 ecx, DWORD PTR [ecx+eax+4]
  00399	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend
$LN1@Send:

; 118  : 	}
; 119  : 	return 1;

  0039e	b8 01 00 00 00	 mov	 eax, 1
$LN4@Send:

; 120  : 
; 121  : }

  003a3	5f		 pop	 edi
  003a4	5e		 pop	 esi
  003a5	5b		 pop	 ebx
  003a6	8b e5		 mov	 esp, ebp
  003a8	5d		 pop	 ebp
  003a9	c2 08 00	 ret	 8
?Send@DBSockMng@@QAEHPADH@Z ENDP			; DBSockMng::Send
_TEXT	ENDS
PUBLIC	?Send@DBSockMng@@QAEHHPADH@Z			; DBSockMng::Send
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_server$ = 8						; size = 4
_buf$ = 12						; size = 4
_len$ = 16						; size = 4
?Send@DBSockMng@@QAEHHPADH@Z PROC			; DBSockMng::Send
; _this$ = ecx

; 124  : {

  003b0	55		 push	 ebp
  003b1	8b ec		 mov	 ebp, esp
  003b3	83 ec 44	 sub	 esp, 68			; 00000044H
  003b6	53		 push	 ebx
  003b7	56		 push	 esi
  003b8	57		 push	 edi
  003b9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 125  : 	if (server >= 2)

  003bc	83 7d 08 02	 cmp	 DWORD PTR _server$[ebp], 2
  003c0	7c 04		 jl	 SHORT $LN3@Send@2

; 126  : 	{
; 127  : 		return 0;

  003c2	33 c0		 xor	 eax, eax
  003c4	eb 38		 jmp	 SHORT $LN4@Send@2
$LN3@Send@2:

; 128  : 	}
; 129  : 	if (server < 0)

  003c6	83 7d 08 00	 cmp	 DWORD PTR _server$[ebp], 0
  003ca	7d 04		 jge	 SHORT $LN2@Send@2

; 130  : 	{
; 131  : 		return 0;

  003cc	33 c0		 xor	 eax, eax
  003ce	eb 2e		 jmp	 SHORT $LN4@Send@2
$LN2@Send@2:

; 132  : 	}
; 133  : 	if (this->wsCDBS[server].DataSend(buf, len) == 0)

  003d0	8b 45 10	 mov	 eax, DWORD PTR _len$[ebp]
  003d3	50		 push	 eax
  003d4	8b 4d 0c	 mov	 ecx, DWORD PTR _buf$[ebp]
  003d7	51		 push	 ecx
  003d8	8b 55 08	 mov	 edx, DWORD PTR _server$[ebp]
  003db	69 d2 28 00 19
	00		 imul	 edx, 1638440		; 00190028H
  003e1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003e4	8d 4c 10 04	 lea	 ecx, DWORD PTR [eax+edx+4]
  003e8	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend
  003ed	85 c0		 test	 eax, eax
  003ef	75 08		 jne	 SHORT $LN1@Send@2

; 134  : 	{
; 135  : 		this->ActiveChange();

  003f1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003f4	e8 00 00 00 00	 call	 ?ActiveChange@DBSockMng@@QAEXXZ ; DBSockMng::ActiveChange
$LN1@Send@2:

; 136  : 	}
; 137  : 	return 1;

  003f9	b8 01 00 00 00	 mov	 eax, 1
$LN4@Send@2:

; 138  : }

  003fe	5f		 pop	 edi
  003ff	5e		 pop	 esi
  00400	5b		 pop	 ebx
  00401	8b e5		 mov	 esp, ebp
  00403	5d		 pop	 ebp
  00404	c2 0c 00	 ret	 12			; 0000000cH
?Send@DBSockMng@@QAEHHPADH@Z ENDP			; DBSockMng::Send
_TEXT	ENDS
PUBLIC	?MsgProc@DBSockMng@@QAEHHIJ@Z			; DBSockMng::MsgProc
EXTRN	?FDWRITE_MsgDataSend@wsJoinServerCli@@QAEHXZ:PROC ; wsJoinServerCli::FDWRITE_MsgDataSend
EXTRN	?DataRecv@wsJoinServerCli@@QAEHXZ:PROC		; wsJoinServerCli::DataRecv
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
_line$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?MsgProc@DBSockMng@@QAEHHIJ@Z PROC			; DBSockMng::MsgProc
; _this$ = ecx

; 141  : {

  00410	55		 push	 ebp
  00411	8b ec		 mov	 ebp, esp
  00413	83 ec 48	 sub	 esp, 72			; 00000048H
  00416	53		 push	 ebx
  00417	56		 push	 esi
  00418	57		 push	 edi
  00419	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 142  : 	switch (lParam & 0xFFFF & 0xFFFF)

  0041c	8b 45 10	 mov	 eax, DWORD PTR _lParam$[ebp]
  0041f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00424	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00429	89 45 b8	 mov	 DWORD PTR tv66[ebp], eax
  0042c	83 7d b8 01	 cmp	 DWORD PTR tv66[ebp], 1
  00430	74 0e		 je	 SHORT $LN3@MsgProc
  00432	83 7d b8 02	 cmp	 DWORD PTR tv66[ebp], 2
  00436	74 1f		 je	 SHORT $LN2@MsgProc
  00438	83 7d b8 20	 cmp	 DWORD PTR tv66[ebp], 32	; 00000020H
  0043c	74 30		 je	 SHORT $LN1@MsgProc
  0043e	eb 43		 jmp	 SHORT $LN4@MsgProc
$LN3@MsgProc:

; 143  : 	{
; 144  : 	case 1: // Recv Data
; 145  : 		this->wsCDBS[line].DataRecv();

  00440	8b 45 08	 mov	 eax, DWORD PTR _line$[ebp]
  00443	69 c0 28 00 19
	00		 imul	 eax, 1638440		; 00190028H
  00449	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0044c	8d 4c 01 04	 lea	 ecx, DWORD PTR [ecx+eax+4]
  00450	e8 00 00 00 00	 call	 ?DataRecv@wsJoinServerCli@@QAEHXZ ; wsJoinServerCli::DataRecv

; 146  : 		break;

  00455	eb 2c		 jmp	 SHORT $LN4@MsgProc
$LN2@MsgProc:

; 147  : 	case 2: // Send Data
; 148  : 		this->wsCDBS[line].FDWRITE_MsgDataSend();

  00457	8b 45 08	 mov	 eax, DWORD PTR _line$[ebp]
  0045a	69 c0 28 00 19
	00		 imul	 eax, 1638440		; 00190028H
  00460	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00463	8d 4c 01 04	 lea	 ecx, DWORD PTR [ecx+eax+4]
  00467	e8 00 00 00 00	 call	 ?FDWRITE_MsgDataSend@wsJoinServerCli@@QAEHXZ ; wsJoinServerCli::FDWRITE_MsgDataSend

; 149  : 		break;

  0046c	eb 15		 jmp	 SHORT $LN4@MsgProc
$LN1@MsgProc:

; 150  : 	case 32: // Close
; 151  : 		this->wsCDBS[line].Close();

  0046e	8b 45 08	 mov	 eax, DWORD PTR _line$[ebp]
  00471	69 c0 28 00 19
	00		 imul	 eax, 1638440		; 00190028H
  00477	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0047a	8d 4c 01 08	 lea	 ecx, DWORD PTR [ecx+eax+8]
  0047e	e8 00 00 00 00	 call	 ?Close@MyWinsockBase@@QAEHXZ ; MyWinsockBase::Close
$LN4@MsgProc:

; 152  : 	}
; 153  : 	return 1;

  00483	b8 01 00 00 00	 mov	 eax, 1

; 154  : }

  00488	5f		 pop	 edi
  00489	5e		 pop	 esi
  0048a	5b		 pop	 ebx
  0048b	8b e5		 mov	 esp, ebp
  0048d	5d		 pop	 ebp
  0048e	c2 0c 00	 ret	 12			; 0000000cH
?MsgProc@DBSockMng@@QAEHHIJ@Z ENDP			; DBSockMng::MsgProc
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ??__EcDBSMng@@YAXXZ
text$yc	SEGMENT
??__EcDBSMng@@YAXXZ PROC				; `dynamic initializer for 'cDBSMng'', COMDAT

; 11   : DBSockMng cDBSMng;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  0000e	e8 00 00 00 00	 call	 ??0DBSockMng@@QAE@XZ	; DBSockMng::DBSockMng
  00013	68 00 00 00 00	 push	 OFFSET ??__FcDBSMng@@YAXXZ ; `dynamic atexit destructor for 'cDBSMng''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__EcDBSMng@@YAXXZ ENDP				; `dynamic initializer for 'cDBSMng''
; Function compile flags: /Odtp /ZI
text$yc	ENDS
;	COMDAT ??__FcDBSMng@@YAXXZ
text$yd	SEGMENT
??__FcDBSMng@@YAXXZ PROC				; `dynamic atexit destructor for 'cDBSMng'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  0000e	e8 00 00 00 00	 call	 ??1DBSockMng@@UAE@XZ	; DBSockMng::~DBSockMng
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__FcDBSMng@@YAXXZ ENDP				; `dynamic atexit destructor for 'cDBSMng''
text$yd	ENDS
PUBLIC	?cDBSMng@@3VDBSockMng@@A			; cDBSMng
_BSS	SEGMENT
?cDBSMng@@3VDBSockMng@@A DB 0320058H DUP (?)		; cDBSMng
_BSS	ENDS
CRT$XCU	SEGMENT
_cDBSMng$initializer$ DD FLAT:??__EcDBSMng@@YAXXZ
CRT$XCU	ENDS
END
