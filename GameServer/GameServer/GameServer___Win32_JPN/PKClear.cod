; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\PKClear.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_PKClear@@3VPKClear@@A			; g_PKClear
_BSS	SEGMENT
?g_PKClear@@3VPKClear@@A DB 028H DUP (?)		; g_PKClear
_BSS	ENDS
_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?Init@PKClear@@QAEXXZ				; PKClear::Init
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\pkclear.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@PKClear@@QAEXXZ PROC				; PKClear::Init
; _this$ = ecx

; 15   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 16   : 	this->Enable = false;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c6 00 00	 mov	 BYTE PTR [eax], 0

; 17   : 
; 18   : 	this->NPC_Class = 0;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 19   : 	this->NPC_Map = 0;

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 20   : 	this->NPC_X = 0;

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 21   : 	this->NPC_Y = 0;

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 22   : 
; 23   : 	this->ZenMoney = 0;

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 24   : 	this->JewelOfChaos = 0;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0

; 25   : 	this->JewelOfBless = 0;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0

; 26   : 	this->JewelOfChaos = 0;

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0

; 27   : }

  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?Init@PKClear@@QAEXXZ ENDP				; PKClear::Init
_TEXT	ENDS
PUBLIC	?Read@PKClear@@QAEXPAD@Z			; PKClear::Read
PUBLIC	??_C@_0BD@EKIDMKJ@ExData?2PKClear?4ini?$AA@	; `string'
PUBLIC	?Load@PKClear@@QAEXXZ				; PKClear::Load
EXTRN	?GetNewPath@CDirPath@@QAEPADPAD@Z:PROC		; CDirPath::GetNewPath
EXTRN	?gDirPath@@3VCDirPath@@A:BYTE			; gDirPath
EXTRN	?CheckUser@CExLicense@@QAE_NH@Z:PROC		; CExLicense::CheckUser
EXTRN	?g_ExLicense@@3VCExLicense@@A:BYTE		; g_ExLicense
;	COMDAT ??_C@_0BD@EKIDMKJ@ExData?2PKClear?4ini?$AA@
CONST	SEGMENT
??_C@_0BD@EKIDMKJ@ExData?2PKClear?4ini?$AA@ DB 'ExData\PKClear.ini', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Load@PKClear@@QAEXXZ PROC				; PKClear::Load
; _this$ = ecx

; 31   : {

  00070	55		 push	 ebp
  00071	8b ec		 mov	 ebp, esp
  00073	83 ec 44	 sub	 esp, 68			; 00000044H
  00076	53		 push	 ebx
  00077	56		 push	 esi
  00078	57		 push	 edi
  00079	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 32   : 	this->Init();

  0007c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ?Init@PKClear@@QAEXXZ	; PKClear::Init

; 33   : 
; 34   : 	if(g_ExLicense.CheckUser(Local) || g_ExLicense.CheckUser(Artem)	|| g_ExLicense.CheckUser(eExUB::Artem2))

  00084	6a 00		 push	 0
  00086	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  0008b	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  00090	0f b6 c0	 movzx	 eax, al
  00093	85 c0		 test	 eax, eax
  00095	75 26		 jne	 SHORT $LN1@Load
  00097	6a 30		 push	 48			; 00000030H
  00099	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  0009e	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  000a3	0f b6 c0	 movzx	 eax, al
  000a6	85 c0		 test	 eax, eax
  000a8	75 13		 jne	 SHORT $LN1@Load
  000aa	6a 31		 push	 49			; 00000031H
  000ac	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  000b1	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  000b6	0f b6 c0	 movzx	 eax, al
  000b9	85 c0		 test	 eax, eax
  000bb	74 18		 je	 SHORT $LN3@Load
$LN1@Load:

; 35   : 	{
; 36   : 		this->Read(gDirPath.GetNewPath("ExData\\PKClear.ini"));

  000bd	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EKIDMKJ@ExData?2PKClear?4ini?$AA@
  000c2	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  000c7	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  000cc	50		 push	 eax
  000cd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	e8 00 00 00 00	 call	 ?Read@PKClear@@QAEXPAD@Z ; PKClear::Read
$LN3@Load:

; 37   : 	}
; 38   : }

  000d5	5f		 pop	 edi
  000d6	5e		 pop	 esi
  000d7	5b		 pop	 ebx
  000d8	8b e5		 mov	 esp, ebp
  000da	5d		 pop	 ebp
  000db	c3		 ret	 0
?Load@PKClear@@QAEXXZ ENDP				; PKClear::Load
_TEXT	ENDS
PUBLIC	??_C@_0M@BBLCIGAM@JewelOfSoul?$AA@		; `string'
PUBLIC	??_C@_0N@MFPMMMKE@JewelOfBless?$AA@		; `string'
PUBLIC	??_C@_0N@GBHOHEIC@JewelOfChaos?$AA@		; `string'
PUBLIC	??_C@_08HOLEALLE@ZenMoney?$AA@			; `string'
PUBLIC	??_C@_0L@HJIIIOON@ZenFormula?$AA@		; `string'
PUBLIC	??_C@_05MGEEICMI@NPC_Y?$AA@			; `string'
PUBLIC	??_C@_05NPFPLDIJ@NPC_X?$AA@			; `string'
PUBLIC	??_C@_07LJMEGBCH@NPC_Map?$AA@			; `string'
PUBLIC	??_C@_09JIOKDDGI@NPC_Class?$AA@			; `string'
PUBLIC	??_C@_06MLPMCPDE@ExTeam?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
EXTRN	?CheckAndFixMinNumber@@YAXAAHH@Z:PROC		; CheckAndFixMinNumber
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
;	COMDAT ??_C@_0M@BBLCIGAM@JewelOfSoul?$AA@
CONST	SEGMENT
??_C@_0M@BBLCIGAM@JewelOfSoul?$AA@ DB 'JewelOfSoul', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MFPMMMKE@JewelOfBless?$AA@
CONST	SEGMENT
??_C@_0N@MFPMMMKE@JewelOfBless?$AA@ DB 'JewelOfBless', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GBHOHEIC@JewelOfChaos?$AA@
CONST	SEGMENT
??_C@_0N@GBHOHEIC@JewelOfChaos?$AA@ DB 'JewelOfChaos', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08HOLEALLE@ZenMoney?$AA@
CONST	SEGMENT
??_C@_08HOLEALLE@ZenMoney?$AA@ DB 'ZenMoney', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HJIIIOON@ZenFormula?$AA@
CONST	SEGMENT
??_C@_0L@HJIIIOON@ZenFormula?$AA@ DB 'ZenFormula', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05MGEEICMI@NPC_Y?$AA@
CONST	SEGMENT
??_C@_05MGEEICMI@NPC_Y?$AA@ DB 'NPC_Y', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05NPFPLDIJ@NPC_X?$AA@
CONST	SEGMENT
??_C@_05NPFPLDIJ@NPC_X?$AA@ DB 'NPC_X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07LJMEGBCH@NPC_Map?$AA@
CONST	SEGMENT
??_C@_07LJMEGBCH@NPC_Map?$AA@ DB 'NPC_Map', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09JIOKDDGI@NPC_Class?$AA@
CONST	SEGMENT
??_C@_09JIOKDDGI@NPC_Class?$AA@ DB 'NPC_Class', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06MLPMCPDE@ExTeam?$AA@
CONST	SEGMENT
??_C@_06MLPMCPDE@ExTeam?$AA@ DB 'ExTeam', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_File$ = 8						; size = 4
?Read@PKClear@@QAEXPAD@Z PROC				; PKClear::Read
; _this$ = ecx

; 42   : {

  000e0	55		 push	 ebp
  000e1	8b ec		 mov	 ebp, esp
  000e3	83 ec 44	 sub	 esp, 68			; 00000044H
  000e6	53		 push	 ebx
  000e7	56		 push	 esi
  000e8	57		 push	 edi
  000e9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 43   : 	this->Enable = GetPrivateProfileInt("ExTeam", "Enable", 0, File);

  000ec	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  000ef	50		 push	 eax
  000f0	6a 00		 push	 0
  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  000f7	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  000fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00102	85 c0		 test	 eax, eax
  00104	0f 95 c1	 setne	 cl
  00107	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0010a	88 0a		 mov	 BYTE PTR [edx], cl

; 44   : 
; 45   : 	this->NPC_Class = GetPrivateProfileInt("ExTeam", "NPC_Class", 0, File);

  0010c	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  0010f	50		 push	 eax
  00110	6a 00		 push	 0
  00112	68 00 00 00 00	 push	 OFFSET ??_C@_09JIOKDDGI@NPC_Class?$AA@
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  0011c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00122	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00125	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 46   : 	this->NPC_Map = GetPrivateProfileInt("ExTeam", "NPC_Map", 0, File);

  00128	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  0012b	50		 push	 eax
  0012c	6a 00		 push	 0
  0012e	68 00 00 00 00	 push	 OFFSET ??_C@_07LJMEGBCH@NPC_Map?$AA@
  00133	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00138	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0013e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00141	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 47   : 	this->NPC_X = GetPrivateProfileInt("ExTeam", "NPC_X", 0, File);

  00144	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  00147	50		 push	 eax
  00148	6a 00		 push	 0
  0014a	68 00 00 00 00	 push	 OFFSET ??_C@_05NPFPLDIJ@NPC_X?$AA@
  0014f	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00154	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0015a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0015d	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 48   : 	this->NPC_Y = GetPrivateProfileInt("ExTeam", "NPC_Y", 0, File);

  00160	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  00163	50		 push	 eax
  00164	6a 00		 push	 0
  00166	68 00 00 00 00	 push	 OFFSET ??_C@_05MGEEICMI@NPC_Y?$AA@
  0016b	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00170	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00176	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00179	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 49   : 
; 50   : 	this->ZenFormula = GetPrivateProfileInt("ExTeam", "ZenFormula", 0, File);

  0017c	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  0017f	50		 push	 eax
  00180	6a 00		 push	 0
  00182	68 00 00 00 00	 push	 OFFSET ??_C@_0L@HJIIIOON@ZenFormula?$AA@
  00187	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  0018c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00192	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00195	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 51   : 
; 52   : 	this->ZenMoney = GetPrivateProfileInt("ExTeam", "ZenMoney", 0, File);

  00198	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  0019b	50		 push	 eax
  0019c	6a 00		 push	 0
  0019e	68 00 00 00 00	 push	 OFFSET ??_C@_08HOLEALLE@ZenMoney?$AA@
  001a3	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  001a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  001ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b1	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 53   : 	this->JewelOfChaos = GetPrivateProfileInt("ExTeam", "JewelOfChaos", 0, File);

  001b4	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  001b7	50		 push	 eax
  001b8	6a 00		 push	 0
  001ba	68 00 00 00 00	 push	 OFFSET ??_C@_0N@GBHOHEIC@JewelOfChaos?$AA@
  001bf	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  001c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  001ca	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001cd	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 54   : 	this->JewelOfBless = GetPrivateProfileInt("ExTeam", "JewelOfBless", 0, File);

  001d0	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  001d3	50		 push	 eax
  001d4	6a 00		 push	 0
  001d6	68 00 00 00 00	 push	 OFFSET ??_C@_0N@MFPMMMKE@JewelOfBless?$AA@
  001db	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  001e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  001e6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001e9	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 55   : 	this->JewelOfSoul = GetPrivateProfileInt("ExTeam", "JewelOfSoul", 0, File);

  001ec	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  001ef	50		 push	 eax
  001f0	6a 00		 push	 0
  001f2	68 00 00 00 00	 push	 OFFSET ??_C@_0M@BBLCIGAM@JewelOfSoul?$AA@
  001f7	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  001fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00202	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00205	89 41 24	 mov	 DWORD PTR [ecx+36], eax

; 56   : 
; 57   : 	CheckAndFixMinNumber(ZenMoney, 0);

  00208	6a 00		 push	 0
  0020a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0020d	83 c0 18	 add	 eax, 24			; 00000018H
  00210	50		 push	 eax
  00211	e8 00 00 00 00	 call	 ?CheckAndFixMinNumber@@YAXAAHH@Z ; CheckAndFixMinNumber
  00216	83 c4 08	 add	 esp, 8

; 58   : 	CheckAndFixMinNumber(JewelOfChaos, 0);

  00219	6a 00		 push	 0
  0021b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0021e	83 c0 1c	 add	 eax, 28			; 0000001cH
  00221	50		 push	 eax
  00222	e8 00 00 00 00	 call	 ?CheckAndFixMinNumber@@YAXAAHH@Z ; CheckAndFixMinNumber
  00227	83 c4 08	 add	 esp, 8

; 59   : 	CheckAndFixMinNumber(JewelOfBless, 0);

  0022a	6a 00		 push	 0
  0022c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0022f	83 c0 20	 add	 eax, 32			; 00000020H
  00232	50		 push	 eax
  00233	e8 00 00 00 00	 call	 ?CheckAndFixMinNumber@@YAXAAHH@Z ; CheckAndFixMinNumber
  00238	83 c4 08	 add	 esp, 8

; 60   : 	CheckAndFixMinNumber(JewelOfSoul, 0);

  0023b	6a 00		 push	 0
  0023d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00240	83 c0 24	 add	 eax, 36			; 00000024H
  00243	50		 push	 eax
  00244	e8 00 00 00 00	 call	 ?CheckAndFixMinNumber@@YAXAAHH@Z ; CheckAndFixMinNumber
  00249	83 c4 08	 add	 esp, 8

; 61   : }

  0024c	5f		 pop	 edi
  0024d	5e		 pop	 esi
  0024e	5b		 pop	 ebx
  0024f	8b e5		 mov	 esp, ebp
  00251	5d		 pop	 ebp
  00252	c2 04 00	 ret	 4
?Read@PKClear@@QAEXPAD@Z ENDP				; PKClear::Read
_TEXT	ENDS
PUBLIC	?GC_Price@PKClear@@QAEXH@Z			; PKClear::GC_Price
PUBLIC	?NPCDialog@PKClear@@QAE_NHH@Z			; PKClear::NPCDialog
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?gObjIsConnectedEx@@YA_NH@Z:PROC		; gObjIsConnectedEx
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_lpNpc$ = -12						; size = 4
_lpUser$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_aNpcIndex$ = 12					; size = 4
?NPCDialog@PKClear@@QAE_NHH@Z PROC			; PKClear::NPCDialog
; _this$ = ecx

; 65   : {

  00260	55		 push	 ebp
  00261	8b ec		 mov	 ebp, esp
  00263	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00266	53		 push	 ebx
  00267	56		 push	 esi
  00268	57		 push	 edi
  00269	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 66   : 	if(!this->Enable)

  0026c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0026f	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00272	85 c9		 test	 ecx, ecx
  00274	75 07		 jne	 SHORT $LN3@NPCDialog

; 67   : 	{
; 68   :  		return false;

  00276	32 c0		 xor	 al, al
  00278	e9 95 00 00 00	 jmp	 $LN4@NPCDialog
$LN3@NPCDialog:

; 69   : 	}
; 70   : 
; 71   : 	if(!gObjIsConnectedEx(aIndex))

  0027d	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00280	50		 push	 eax
  00281	e8 00 00 00 00	 call	 ?gObjIsConnectedEx@@YA_NH@Z ; gObjIsConnectedEx
  00286	83 c4 04	 add	 esp, 4
  00289	0f b6 c8	 movzx	 ecx, al
  0028c	85 c9		 test	 ecx, ecx
  0028e	75 04		 jne	 SHORT $LN2@NPCDialog

; 72   : 	{
; 73   : 		return false;

  00290	32 c0		 xor	 al, al
  00292	eb 7e		 jmp	 SHORT $LN4@NPCDialog
$LN2@NPCDialog:

; 74   : 	}
; 75   : 
; 76   : 	LPOBJ lpUser = &gObj[aIndex];

  00294	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00297	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0029d	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002a3	89 45 f8	 mov	 DWORD PTR _lpUser$[ebp], eax

; 77   : 	LPOBJ lpNpc = &gObj[aNpcIndex];

  002a6	8b 45 0c	 mov	 eax, DWORD PTR _aNpcIndex$[ebp]
  002a9	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  002af	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002b5	89 45 f4	 mov	 DWORD PTR _lpNpc$[ebp], eax

; 78   : 
; 79   : 	if(		lpNpc->Class		== this->NPC_Class 
; 80   : 		&&	lpNpc->MapNumber	== this->NPC_Map
; 81   : 		&&	lpNpc->X			== this->NPC_X
; 82   : 		&&	lpNpc->Y			== this->NPC_Y )

  002b8	8b 45 f4	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  002bb	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  002c2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  002c5	3b 4a 04	 cmp	 ecx, DWORD PTR [edx+4]
  002c8	75 46		 jne	 SHORT $LN1@NPCDialog
  002ca	8b 45 f4	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  002cd	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  002d4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  002d7	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  002da	75 34		 jne	 SHORT $LN1@NPCDialog
  002dc	8b 45 f4	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  002df	0f bf 88 44 01
	00 00		 movsx	 ecx, WORD PTR [eax+324]
  002e6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  002e9	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  002ec	75 22		 jne	 SHORT $LN1@NPCDialog
  002ee	8b 45 f4	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  002f1	0f bf 88 46 01
	00 00		 movsx	 ecx, WORD PTR [eax+326]
  002f8	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  002fb	3b 4a 10	 cmp	 ecx, DWORD PTR [edx+16]
  002fe	75 10		 jne	 SHORT $LN1@NPCDialog

; 83   : 	{
; 84   : 		this->GC_Price(aIndex);

  00300	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00303	50		 push	 eax
  00304	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00307	e8 00 00 00 00	 call	 ?GC_Price@PKClear@@QAEXH@Z ; PKClear::GC_Price

; 85   : 		return true;

  0030c	b0 01		 mov	 al, 1
  0030e	eb 02		 jmp	 SHORT $LN4@NPCDialog
$LN1@NPCDialog:

; 86   : 	}
; 87   : 	// ----
; 88   : 	return false;

  00310	32 c0		 xor	 al, al
$LN4@NPCDialog:

; 89   : }

  00312	5f		 pop	 edi
  00313	5e		 pop	 esi
  00314	5b		 pop	 ebx
  00315	8b e5		 mov	 esp, ebp
  00317	5d		 pop	 ebp
  00318	c2 08 00	 ret	 8
?NPCDialog@PKClear@@QAE_NHH@Z ENDP			; PKClear::NPCDialog
_TEXT	ENDS
PUBLIC	?Check@PKClear@@QAE_NHAAH@Z			; PKClear::Check
EXTRN	?gObjGetItemCountInInventory@@YAHHHH@Z:PROC	; gObjGetItemCountInInventory
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_iSoulMoney$ = -32					; size = 4
_iBlessMoney$ = -28					; size = 4
_iChaosMoney$ = -24					; size = 4
_iZenMoney$ = -20					; size = 4
_iPkLevel$ = -16					; size = 4
_bResult$ = -9						; size = 1
_lpUser$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_iZen$ = 12						; size = 4
?Check@PKClear@@QAE_NHAAH@Z PROC			; PKClear::Check
; _this$ = ecx

; 93   : {

  00320	55		 push	 ebp
  00321	8b ec		 mov	 ebp, esp
  00323	83 ec 60	 sub	 esp, 96			; 00000060H
  00326	53		 push	 ebx
  00327	56		 push	 esi
  00328	57		 push	 edi
  00329	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 94   : 	LPOBJ lpUser = &gObj[aIndex];

  0032c	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0032f	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00335	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0033b	89 45 f8	 mov	 DWORD PTR _lpUser$[ebp], eax

; 95   : 
; 96   : 	BYTE bResult = 1;

  0033e	c6 45 f7 01	 mov	 BYTE PTR _bResult$[ebp], 1

; 97   : 	int iPkLevel = lpUser->m_PK_Level;

  00342	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00345	0f be 88 3d 01
	00 00		 movsx	 ecx, BYTE PTR [eax+317]
  0034c	89 4d f0	 mov	 DWORD PTR _iPkLevel$[ebp], ecx

; 98   : 
; 99   : 	int iZenMoney = this->ZenMoney;

  0034f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00352	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00355	89 4d ec	 mov	 DWORD PTR _iZenMoney$[ebp], ecx

; 100  : 	int iChaosMoney = this->JewelOfChaos;

  00358	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0035b	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0035e	89 4d e8	 mov	 DWORD PTR _iChaosMoney$[ebp], ecx

; 101  : 	int iBlessMoney = this->JewelOfBless;

  00361	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00364	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00367	89 4d e4	 mov	 DWORD PTR _iBlessMoney$[ebp], ecx

; 102  : 	int iSoulMoney = this->JewelOfSoul;

  0036a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0036d	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00370	89 4d e0	 mov	 DWORD PTR _iSoulMoney$[ebp], ecx

; 103  : 
; 104  : 	if(this->ZenMoney)

  00373	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00376	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  0037a	74 30		 je	 SHORT $LN13@Check

; 105  : 	{
; 106  : 		if(this->ZenFormula == 0)

  0037c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0037f	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  00383	75 11		 jne	 SHORT $LN12@Check

; 107  : 		{
; 108  : 			if(iPkLevel > 3)

  00385	83 7d f0 03	 cmp	 DWORD PTR _iPkLevel$[ebp], 3
  00389	7e 09		 jle	 SHORT $LN11@Check

; 109  : 			{
; 110  : 				iZenMoney = this->ZenMoney;

  0038b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0038e	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00391	89 4d ec	 mov	 DWORD PTR _iZenMoney$[ebp], ecx
$LN11@Check:

; 111  : 			}
; 112  : 		}
; 113  : 		else

  00394	eb 16		 jmp	 SHORT $LN13@Check
$LN12@Check:

; 114  : 		{
; 115  : 			if(iPkLevel > 3)

  00396	83 7d f0 03	 cmp	 DWORD PTR _iPkLevel$[ebp], 3
  0039a	7e 10		 jle	 SHORT $LN13@Check

; 116  : 			{
; 117  : 				iZenMoney = this->ZenMoney * ( iPkLevel - 3 );

  0039c	8b 45 f0	 mov	 eax, DWORD PTR _iPkLevel$[ebp]
  0039f	83 e8 03	 sub	 eax, 3
  003a2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003a5	0f af 41 18	 imul	 eax, DWORD PTR [ecx+24]
  003a9	89 45 ec	 mov	 DWORD PTR _iZenMoney$[ebp], eax
$LN13@Check:

; 118  : 			}
; 119  : 		}
; 120  : 	}
; 121  : 
; 122  : 	if(iZenMoney > lpUser->Money)

  003ac	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  003af	8b 4d ec	 mov	 ecx, DWORD PTR _iZenMoney$[ebp]
  003b2	3b 88 f0 00 00
	00		 cmp	 ecx, DWORD PTR [eax+240]
  003b8	7e 04		 jle	 SHORT $LN8@Check

; 123  : 	{
; 124  : 		bResult = 0;

  003ba	c6 45 f7 00	 mov	 BYTE PTR _bResult$[ebp], 0
$LN8@Check:

; 125  : 	}
; 126  : 
; 127  : 	if(iChaosMoney > 0)

  003be	83 7d e8 00	 cmp	 DWORD PTR _iChaosMoney$[ebp], 0
  003c2	7e 1c		 jle	 SHORT $LN7@Check

; 128  : 	{
; 129  : 		if(gObjGetItemCountInInventory(aIndex, ITEMGET(12,15), 0) < iChaosMoney)

  003c4	6a 00		 push	 0
  003c6	68 0f 18 00 00	 push	 6159			; 0000180fH
  003cb	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  003ce	50		 push	 eax
  003cf	e8 00 00 00 00	 call	 ?gObjGetItemCountInInventory@@YAHHHH@Z ; gObjGetItemCountInInventory
  003d4	83 c4 0c	 add	 esp, 12			; 0000000cH
  003d7	3b 45 e8	 cmp	 eax, DWORD PTR _iChaosMoney$[ebp]
  003da	7d 04		 jge	 SHORT $LN7@Check

; 130  : 		{
; 131  : 			bResult = 0;

  003dc	c6 45 f7 00	 mov	 BYTE PTR _bResult$[ebp], 0
$LN7@Check:

; 132  : 		}
; 133  : 	}
; 134  : 
; 135  : 	if(iBlessMoney > 0)

  003e0	83 7d e4 00	 cmp	 DWORD PTR _iBlessMoney$[ebp], 0
  003e4	7e 1c		 jle	 SHORT $LN5@Check

; 136  : 	{
; 137  : 		if(gObjGetItemCountInInventory(aIndex, ITEMGET(14,13), 0) < iBlessMoney)

  003e6	6a 00		 push	 0
  003e8	68 0d 1c 00 00	 push	 7181			; 00001c0dH
  003ed	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  003f0	50		 push	 eax
  003f1	e8 00 00 00 00	 call	 ?gObjGetItemCountInInventory@@YAHHHH@Z ; gObjGetItemCountInInventory
  003f6	83 c4 0c	 add	 esp, 12			; 0000000cH
  003f9	3b 45 e4	 cmp	 eax, DWORD PTR _iBlessMoney$[ebp]
  003fc	7d 04		 jge	 SHORT $LN5@Check

; 138  : 		{
; 139  : 			bResult = 0;

  003fe	c6 45 f7 00	 mov	 BYTE PTR _bResult$[ebp], 0
$LN5@Check:

; 140  : 		}
; 141  : 	}
; 142  : 
; 143  : 	if(iSoulMoney > 0)

  00402	83 7d e0 00	 cmp	 DWORD PTR _iSoulMoney$[ebp], 0
  00406	7e 1c		 jle	 SHORT $LN3@Check

; 144  : 	{
; 145  : 		if(gObjGetItemCountInInventory(aIndex, ITEMGET(14,14), 0) < iSoulMoney)

  00408	6a 00		 push	 0
  0040a	68 0e 1c 00 00	 push	 7182			; 00001c0eH
  0040f	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00412	50		 push	 eax
  00413	e8 00 00 00 00	 call	 ?gObjGetItemCountInInventory@@YAHHHH@Z ; gObjGetItemCountInInventory
  00418	83 c4 0c	 add	 esp, 12			; 0000000cH
  0041b	3b 45 e0	 cmp	 eax, DWORD PTR _iSoulMoney$[ebp]
  0041e	7d 04		 jge	 SHORT $LN3@Check

; 146  : 		{
; 147  : 			bResult = 0;

  00420	c6 45 f7 00	 mov	 BYTE PTR _bResult$[ebp], 0
$LN3@Check:

; 148  : 		}
; 149  : 	}
; 150  : 
; 151  : 	if(iPkLevel <= 3)

  00424	83 7d f0 03	 cmp	 DWORD PTR _iPkLevel$[ebp], 3
  00428	7f 04		 jg	 SHORT $LN1@Check

; 152  : 	{
; 153  : 		bResult = 0;

  0042a	c6 45 f7 00	 mov	 BYTE PTR _bResult$[ebp], 0
$LN1@Check:

; 154  : 	}
; 155  : 
; 156  : 	iZen = iZenMoney;

  0042e	8b 45 0c	 mov	 eax, DWORD PTR _iZen$[ebp]
  00431	8b 4d ec	 mov	 ecx, DWORD PTR _iZenMoney$[ebp]
  00434	89 08		 mov	 DWORD PTR [eax], ecx

; 157  : 
; 158  : 	return bResult;

  00436	80 7d f7 00	 cmp	 BYTE PTR _bResult$[ebp], 0
  0043a	0f 95 c0	 setne	 al

; 159  : }

  0043d	5f		 pop	 edi
  0043e	5e		 pop	 esi
  0043f	5b		 pop	 ebx
  00440	8b e5		 mov	 esp, ebp
  00442	5d		 pop	 ebp
  00443	c2 08 00	 ret	 8
?Check@PKClear@@QAE_NHAAH@Z ENDP			; PKClear::Check
_TEXT	ENDS
PUBLIC	?set@PBMSG_HEAD2@@QAEXPAEEEE@Z			; PBMSG_HEAD2::set
PUBLIC	__$ArrayPad$
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pSend$ = -56						; size = 20
_bResult$ = -33						; size = 1
_iSoulMoney$ = -32					; size = 4
_iBlessMoney$ = -28					; size = 4
_iChaosMoney$ = -24					; size = 4
_iPkLevel$ = -20					; size = 4
_iZenMoney$ = -16					; size = 4
_lpUser$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?GC_Price@PKClear@@QAEXH@Z PROC				; PKClear::GC_Price
; _this$ = ecx

; 163  : {

  00450	55		 push	 ebp
  00451	8b ec		 mov	 ebp, esp
  00453	83 ec 78	 sub	 esp, 120		; 00000078H
  00456	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0045b	33 c5		 xor	 eax, ebp
  0045d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00460	53		 push	 ebx
  00461	56		 push	 esi
  00462	57		 push	 edi
  00463	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 164  : 	LPOBJ lpUser = &gObj[aIndex];

  00466	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00469	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0046f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00475	89 45 f4	 mov	 DWORD PTR _lpUser$[ebp], eax

; 165  : 	
; 166  : 	int iZenMoney = 0;

  00478	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _iZenMoney$[ebp], 0

; 167  : 	int iPkLevel = lpUser->m_PK_Level;

  0047f	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00482	0f be 88 3d 01
	00 00		 movsx	 ecx, BYTE PTR [eax+317]
  00489	89 4d ec	 mov	 DWORD PTR _iPkLevel$[ebp], ecx

; 168  : 	int iChaosMoney = this->JewelOfChaos;

  0048c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0048f	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00492	89 4d e8	 mov	 DWORD PTR _iChaosMoney$[ebp], ecx

; 169  : 	int iBlessMoney = this->JewelOfBless;

  00495	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00498	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0049b	89 4d e4	 mov	 DWORD PTR _iBlessMoney$[ebp], ecx

; 170  : 	int iSoulMoney = this->JewelOfSoul;

  0049e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004a1	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  004a4	89 4d e0	 mov	 DWORD PTR _iSoulMoney$[ebp], ecx

; 171  : 
; 172  : 	BYTE bResult = this->Check(aIndex, iZenMoney);

  004a7	8d 45 f0	 lea	 eax, DWORD PTR _iZenMoney$[ebp]
  004aa	50		 push	 eax
  004ab	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  004ae	51		 push	 ecx
  004af	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004b2	e8 00 00 00 00	 call	 ?Check@PKClear@@QAE_NHAAH@Z ; PKClear::Check
  004b7	88 45 df	 mov	 BYTE PTR _bResult$[ebp], al

; 173  : 
; 174  : 	GC_PKCLEAR_PRICE pSend;
; 175  : 	pSend.h.set((LPBYTE)&pSend, 0xFB, 0xAC, sizeof(pSend));

  004ba	6a 14		 push	 20			; 00000014H
  004bc	68 ac 00 00 00	 push	 172			; 000000acH
  004c1	68 fb 00 00 00	 push	 251			; 000000fbH
  004c6	8d 45 c8	 lea	 eax, DWORD PTR _pSend$[ebp]
  004c9	50		 push	 eax
  004ca	8d 4d c8	 lea	 ecx, DWORD PTR _pSend$[ebp]
  004cd	e8 00 00 00 00	 call	 ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ; PBMSG_HEAD2::set

; 176  : 	pSend.Result = bResult;

  004d2	8a 45 df	 mov	 al, BYTE PTR _bResult$[ebp]
  004d5	88 45 cc	 mov	 BYTE PTR _pSend$[ebp+4], al

; 177  : 	pSend.PkLevel = iPkLevel;

  004d8	66 8b 45 ec	 mov	 ax, WORD PTR _iPkLevel$[ebp]
  004dc	66 89 45 ce	 mov	 WORD PTR _pSend$[ebp+6], ax

; 178  : 	pSend.Zen = iZenMoney;

  004e0	8b 45 f0	 mov	 eax, DWORD PTR _iZenMoney$[ebp]
  004e3	89 45 d0	 mov	 DWORD PTR _pSend$[ebp+8], eax

; 179  : 	pSend.Chaos = iChaosMoney;

  004e6	66 8b 45 e8	 mov	 ax, WORD PTR _iChaosMoney$[ebp]
  004ea	66 89 45 d4	 mov	 WORD PTR _pSend$[ebp+12], ax

; 180  : 	pSend.Bless = iBlessMoney;

  004ee	66 8b 45 e4	 mov	 ax, WORD PTR _iBlessMoney$[ebp]
  004f2	66 89 45 d6	 mov	 WORD PTR _pSend$[ebp+14], ax

; 181  : 	pSend.Soul = iSoulMoney;

  004f6	66 8b 45 e0	 mov	 ax, WORD PTR _iSoulMoney$[ebp]
  004fa	66 89 45 d8	 mov	 WORD PTR _pSend$[ebp+16], ax

; 182  : 	DataSend(aIndex, (LPBYTE)&pSend, pSend.h.size);

  004fe	0f b6 45 c9	 movzx	 eax, BYTE PTR _pSend$[ebp+1]
  00502	50		 push	 eax
  00503	8d 4d c8	 lea	 ecx, DWORD PTR _pSend$[ebp]
  00506	51		 push	 ecx
  00507	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  0050a	52		 push	 edx
  0050b	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00510	83 c4 0c	 add	 esp, 12			; 0000000cH

; 183  : }

  00513	5f		 pop	 edi
  00514	5e		 pop	 esi
  00515	5b		 pop	 ebx
  00516	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00519	33 cd		 xor	 ecx, ebp
  0051b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00520	8b e5		 mov	 esp, ebp
  00522	5d		 pop	 ebp
  00523	c2 04 00	 ret	 4
?GC_Price@PKClear@@QAEXH@Z ENDP				; PKClear::GC_Price
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\include\prodef.h
_TEXT	ENDS
;	COMDAT ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpBuf$ = 8						; size = 4
_head$ = 12						; size = 1
_sub$ = 16						; size = 1
_size$ = 20						; size = 1
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z PROC			; PBMSG_HEAD2::set, COMDAT
; _this$ = ecx

; 104  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 105  : 		lpBuf[0] = 0xC1;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  0000f	c6 00 c1	 mov	 BYTE PTR [eax], 193	; 000000c1H

; 106  : 		lpBuf[1] = size;

  00012	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  00015	8a 4d 14	 mov	 cl, BYTE PTR _size$[ebp]
  00018	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 107  : 		lpBuf[2] = head;

  0001b	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  0001e	8a 4d 0c	 mov	 cl, BYTE PTR _head$[ebp]
  00021	88 48 02	 mov	 BYTE PTR [eax+2], cl

; 108  : 		lpBuf[3] = sub;

  00024	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  00027	8a 4d 10	 mov	 cl, BYTE PTR _sub$[ebp]
  0002a	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 109  : 	};

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 10 00	 ret	 16			; 00000010H
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ENDP			; PBMSG_HEAD2::set
_TEXT	ENDS
PUBLIC	?CG_ResultRecv@PKClear@@QAEXHPAUCG_PKCLEAR_RESULT@@@Z ; PKClear::CG_ResultRecv
EXTRN	?GCPkLevelSend@@YAXHE@Z:PROC			; GCPkLevelSend
EXTRN	?GCMoneySend@@YAXHK@Z:PROC			; GCMoneySend
EXTRN	?gObjDeleteItemsCount@@YAHHFFH@Z:PROC		; gObjDeleteItemsCount
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\pkclear.cpp
_TEXT	SEGMENT
_iSoulMoney$ = -24					; size = 4
_iBlessMoney$ = -20					; size = 4
_iChaosMoney$ = -16					; size = 4
_iZenMoney$ = -12					; size = 4
_lpUser$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_aRecv$ = 12						; size = 4
?CG_ResultRecv@PKClear@@QAEXHPAUCG_PKCLEAR_RESULT@@@Z PROC ; PKClear::CG_ResultRecv
; _this$ = ecx

; 187  : {

  00530	55		 push	 ebp
  00531	8b ec		 mov	 ebp, esp
  00533	83 ec 58	 sub	 esp, 88			; 00000058H
  00536	53		 push	 ebx
  00537	56		 push	 esi
  00538	57		 push	 edi
  00539	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 188  : 	if(!this->Enable)

  0053c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0053f	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00542	85 c9		 test	 ecx, ecx
  00544	75 05		 jne	 SHORT $LN9@CG_ResultR

; 189  : 	{
; 190  :  		return;

  00546	e9 32 01 00 00	 jmp	 $LN10@CG_ResultR
$LN9@CG_ResultR:

; 191  : 	}
; 192  : 
; 193  : 	if(!gObjIsConnectedEx(aIndex))

  0054b	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0054e	50		 push	 eax
  0054f	e8 00 00 00 00	 call	 ?gObjIsConnectedEx@@YA_NH@Z ; gObjIsConnectedEx
  00554	83 c4 04	 add	 esp, 4
  00557	0f b6 c8	 movzx	 ecx, al
  0055a	85 c9		 test	 ecx, ecx
  0055c	75 05		 jne	 SHORT $LN8@CG_ResultR

; 194  : 	{
; 195  : 		return;

  0055e	e9 1a 01 00 00	 jmp	 $LN10@CG_ResultR
$LN8@CG_ResultR:

; 196  : 	}
; 197  : 
; 198  : 	if(aRecv->Result != 1)

  00563	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  00566	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  0056a	83 f9 01	 cmp	 ecx, 1
  0056d	74 05		 je	 SHORT $LN7@CG_ResultR

; 199  : 	{
; 200  : 		return;

  0056f	e9 09 01 00 00	 jmp	 $LN10@CG_ResultR
$LN7@CG_ResultR:

; 201  : 	}
; 202  : 
; 203  : 	LPOBJ lpUser = &gObj[aIndex];

  00574	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00577	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0057d	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00583	89 45 f8	 mov	 DWORD PTR _lpUser$[ebp], eax

; 204  : 
; 205  : 	int iZenMoney = 0;

  00586	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _iZenMoney$[ebp], 0

; 206  : 	int iChaosMoney = this->JewelOfChaos;

  0058d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00590	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00593	89 4d f0	 mov	 DWORD PTR _iChaosMoney$[ebp], ecx

; 207  : 	int iBlessMoney = this->JewelOfBless;

  00596	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00599	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0059c	89 4d ec	 mov	 DWORD PTR _iBlessMoney$[ebp], ecx

; 208  : 	int iSoulMoney = this->JewelOfSoul;

  0059f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  005a2	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  005a5	89 4d e8	 mov	 DWORD PTR _iSoulMoney$[ebp], ecx

; 209  : 
; 210  : 	if(!this->Check(aIndex, iZenMoney))

  005a8	8d 45 f4	 lea	 eax, DWORD PTR _iZenMoney$[ebp]
  005ab	50		 push	 eax
  005ac	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  005af	51		 push	 ecx
  005b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005b3	e8 00 00 00 00	 call	 ?Check@PKClear@@QAE_NHAAH@Z ; PKClear::Check
  005b8	0f b6 d0	 movzx	 edx, al
  005bb	85 d2		 test	 edx, edx
  005bd	75 05		 jne	 SHORT $LN6@CG_ResultR

; 211  : 	{
; 212  : 		return;

  005bf	e9 b9 00 00 00	 jmp	 $LN10@CG_ResultR
$LN6@CG_ResultR:

; 213  : 	}
; 214  : 
; 215  : 	if(iZenMoney > 0)

  005c4	83 7d f4 00	 cmp	 DWORD PTR _iZenMoney$[ebp], 0
  005c8	7e 15		 jle	 SHORT $LN5@CG_ResultR

; 216  : 	{
; 217  : 		lpUser->Money -= iZenMoney;

  005ca	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  005cd	8b 88 f0 00 00
	00		 mov	 ecx, DWORD PTR [eax+240]
  005d3	2b 4d f4	 sub	 ecx, DWORD PTR _iZenMoney$[ebp]
  005d6	8b 55 f8	 mov	 edx, DWORD PTR _lpUser$[ebp]
  005d9	89 8a f0 00 00
	00		 mov	 DWORD PTR [edx+240], ecx
$LN5@CG_ResultR:

; 218  : 	}
; 219  : 	if(iChaosMoney > 0)

  005df	83 7d f0 00	 cmp	 DWORD PTR _iChaosMoney$[ebp], 0
  005e3	7e 17		 jle	 SHORT $LN4@CG_ResultR

; 220  : 	{
; 221  : 		gObjDeleteItemsCount(aIndex, ITEMGET(12,15), 0, iChaosMoney);

  005e5	8b 45 f0	 mov	 eax, DWORD PTR _iChaosMoney$[ebp]
  005e8	50		 push	 eax
  005e9	6a 00		 push	 0
  005eb	68 0f 18 00 00	 push	 6159			; 0000180fH
  005f0	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  005f3	51		 push	 ecx
  005f4	e8 00 00 00 00	 call	 ?gObjDeleteItemsCount@@YAHHFFH@Z ; gObjDeleteItemsCount
  005f9	83 c4 10	 add	 esp, 16			; 00000010H
$LN4@CG_ResultR:

; 222  : 	}
; 223  : 	if(iBlessMoney > 0)

  005fc	83 7d ec 00	 cmp	 DWORD PTR _iBlessMoney$[ebp], 0
  00600	7e 17		 jle	 SHORT $LN3@CG_ResultR

; 224  : 	{
; 225  : 		gObjDeleteItemsCount(aIndex, ITEMGET(14,13), 0, iBlessMoney);

  00602	8b 45 ec	 mov	 eax, DWORD PTR _iBlessMoney$[ebp]
  00605	50		 push	 eax
  00606	6a 00		 push	 0
  00608	68 0d 1c 00 00	 push	 7181			; 00001c0dH
  0060d	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  00610	51		 push	 ecx
  00611	e8 00 00 00 00	 call	 ?gObjDeleteItemsCount@@YAHHFFH@Z ; gObjDeleteItemsCount
  00616	83 c4 10	 add	 esp, 16			; 00000010H
$LN3@CG_ResultR:

; 226  : 	}
; 227  : 	if(iSoulMoney > 0)

  00619	83 7d e8 00	 cmp	 DWORD PTR _iSoulMoney$[ebp], 0
  0061d	7e 17		 jle	 SHORT $LN2@CG_ResultR

; 228  : 	{
; 229  : 		gObjDeleteItemsCount(aIndex, ITEMGET(14,14), 0, iSoulMoney);

  0061f	8b 45 e8	 mov	 eax, DWORD PTR _iSoulMoney$[ebp]
  00622	50		 push	 eax
  00623	6a 00		 push	 0
  00625	68 0e 1c 00 00	 push	 7182			; 00001c0eH
  0062a	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  0062d	51		 push	 ecx
  0062e	e8 00 00 00 00	 call	 ?gObjDeleteItemsCount@@YAHHFFH@Z ; gObjDeleteItemsCount
  00633	83 c4 10	 add	 esp, 16			; 00000010H
$LN2@CG_ResultR:

; 230  : 	}
; 231  : 
; 232  : 	lpUser->m_PK_Level = 3;

  00636	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00639	c6 80 3d 01 00
	00 03		 mov	 BYTE PTR [eax+317], 3

; 233  : 	lpUser->m_PK_Count = 0;

  00640	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00643	c6 80 3c 01 00
	00 00		 mov	 BYTE PTR [eax+316], 0

; 234  : 
; 235  : 	if(iZenMoney > 0)

  0064a	83 7d f4 00	 cmp	 DWORD PTR _iZenMoney$[ebp], 0
  0064e	7e 16		 jle	 SHORT $LN1@CG_ResultR

; 236  : 	{
; 237  : 		GCMoneySend(aIndex,lpUser->Money);

  00650	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00653	8b 88 f0 00 00
	00		 mov	 ecx, DWORD PTR [eax+240]
  00659	51		 push	 ecx
  0065a	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  0065d	52		 push	 edx
  0065e	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend
  00663	83 c4 08	 add	 esp, 8
$LN1@CG_ResultR:

; 238  : 	}
; 239  : 
; 240  : 	GCPkLevelSend(aIndex,lpUser->m_PK_Level);

  00666	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00669	0f b6 88 3d 01
	00 00		 movzx	 ecx, BYTE PTR [eax+317]
  00670	51		 push	 ecx
  00671	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  00674	52		 push	 edx
  00675	e8 00 00 00 00	 call	 ?GCPkLevelSend@@YAXHE@Z	; GCPkLevelSend
  0067a	83 c4 08	 add	 esp, 8
$LN10@CG_ResultR:

; 241  : }

  0067d	5f		 pop	 edi
  0067e	5e		 pop	 esi
  0067f	5b		 pop	 ebx
  00680	8b e5		 mov	 esp, ebp
  00682	5d		 pop	 ebp
  00683	c2 08 00	 ret	 8
?CG_ResultRecv@PKClear@@QAEXHPAUCG_PKCLEAR_RESULT@@@Z ENDP ; PKClear::CG_ResultRecv
_TEXT	ENDS
END
