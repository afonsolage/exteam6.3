; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\BuffManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_7CBuffManager@@6B@				; CBuffManager::`vftable'
PUBLIC	??0CBuffManager@@QAE@XZ				; CBuffManager::CBuffManager
PUBLIC	??_R4CBuffManager@@6B@				; CBuffManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBuffManager@@@8			; CBuffManager `RTTI Type Descriptor'
PUBLIC	??_R3CBuffManager@@8				; CBuffManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBuffManager@@8				; CBuffManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBuffManager@@8			; CBuffManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECBuffManager@@UAEPAXI@Z:PROC		; CBuffManager::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CBuffManager@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\buffmanager.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CBuffManager@@8 DD FLAT:??_R0?AVCBuffManager@@@8 ; CBuffManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBuffManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CBuffManager@@8
rdata$r	SEGMENT
??_R2CBuffManager@@8 DD FLAT:??_R1A@?0A@EA@CBuffManager@@8 ; CBuffManager::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CBuffManager@@8
rdata$r	SEGMENT
??_R3CBuffManager@@8 DD 00H				; CBuffManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CBuffManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBuffManager@@@8
_DATA	SEGMENT
??_R0?AVCBuffManager@@@8 DD FLAT:??_7type_info@@6B@	; CBuffManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBuffManager@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CBuffManager@@6B@
rdata$r	SEGMENT
??_R4CBuffManager@@6B@ DD 00H				; CBuffManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBuffManager@@@8
	DD	FLAT:??_R3CBuffManager@@8
rdata$r	ENDS
;	COMDAT ??_7CBuffManager@@6B@
CONST	SEGMENT
??_7CBuffManager@@6B@ DD FLAT:??_R4CBuffManager@@6B@	; CBuffManager::`vftable'
	DD	FLAT:??_ECBuffManager@@UAEPAXI@Z
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CBuffManager@@QAE@XZ PROC				; CBuffManager::CBuffManager
; _this$ = ecx

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CBuffManager@@6B@

; 22   : 
; 23   : }

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CBuffManager@@QAE@XZ ENDP				; CBuffManager::CBuffManager
_TEXT	ENDS
PUBLIC	??1CBuffManager@@UAE@XZ				; CBuffManager::~CBuffManager
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCBuffManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCBuffManager@@UAEPAXI@Z PROC			; CBuffManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CBuffManager@@UAE@XZ	; CBuffManager::~CBuffManager
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCBuffManager@@UAEPAXI@Z ENDP			; CBuffManager::`scalar deleting destructor'
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CBuffManager@@UAE@XZ PROC				; CBuffManager::~CBuffManager
; _this$ = ecx

; 26   : {

  00020	55		 push	 ebp
  00021	8b ec		 mov	 ebp, esp
  00023	83 ec 44	 sub	 esp, 68			; 00000044H
  00026	53		 push	 ebx
  00027	56		 push	 esi
  00028	57		 push	 edi
  00029	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CBuffManager@@6B@

; 27   : 
; 28   : }

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??1CBuffManager@@UAE@XZ ENDP				; CBuffManager::~CBuffManager
_TEXT	ENDS
PUBLIC	?ClearEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z ; CBuffManager::ClearEffect
PUBLIC	?InsertEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@HEEHHH@Z ; CBuffManager::InsertEffect
EXTRN	?AddBuffEffect@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z:PROC ; CViewportSkillState::AddBuffEffect
EXTRN	?g_ViewportSkillState@@3VCViewportSkillState@@A:DWORD ; g_ViewportSkillState
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	?GetBuffData@CBuffEffect@@QAEPAUBUFF_EFFECT_DATA@@E@Z:PROC ; CBuffEffect::GetBuffData
EXTRN	?IsValidIndex@CBuffEffect@@QAE_NE@Z:PROC	; CBuffEffect::IsValidIndex
EXTRN	?g_BuffEffect@@3VCBuffEffect@@A:BYTE		; g_BuffEffect
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$219901 = -32						; size = 4
_i$219890 = -28						; size = 4
_loc6$ = -24						; size = 4
_loc5$ = -20						; size = 4
_loc4$ = -16						; size = 4
_pEffectIndex2$ = -12					; size = 4
_pEffectIndex$ = -8					; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
_btEffectType1$ = 16					; size = 1
_btEffectType2$ = 20					; size = 1
_iValue1$ = 24						; size = 4
_iValue2$ = 28						; size = 4
_iDuration$ = 32					; size = 4
?InsertEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@HEEHHH@Z PROC ; CBuffManager::InsertEffect
; _this$ = ecx

; 32   : {

  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
  00043	83 ec 60	 sub	 esp, 96			; 00000060H
  00046	53		 push	 ebx
  00047	56		 push	 esi
  00048	57		 push	 edi
  00049	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 33   : 	LPBUFF_EFFECT_DATA pEffectIndex = 0; //loc2

  0004c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pEffectIndex$[ebp], 0

; 34   : 	LPBUFF_EFFECT_DATA pEffectIndex2 = 0; //loc3

  00053	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pEffectIndex2$[ebp], 0

; 35   : 
; 36   : 	int loc4 = 0;

  0005a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _loc4$[ebp], 0

; 37   : 	int loc5 = 0;

  00061	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _loc5$[ebp], 0

; 38   : 	int loc6 = 0;

  00068	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _loc6$[ebp], 0

; 39   : 
; 40   : 	if(lpObj == NULL)

  0006f	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  00073	75 08		 jne	 SHORT $LN18@InsertEffe

; 41   : 	{
; 42   : 		return -1;

  00075	83 c8 ff	 or	 eax, -1
  00078	e9 30 02 00 00	 jmp	 $LN19@InsertEffe
$LN18@InsertEffe:

; 43   : 	}
; 44   : 
; 45   : 	if(lpObj->Connected < PLAYER_PLAYING)

  0007d	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00080	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  00084	7d 08		 jge	 SHORT $LN17@InsertEffe

; 46   : 	{
; 47   : 		return -1;

  00086	83 c8 ff	 or	 eax, -1
  00089	e9 1f 02 00 00	 jmp	 $LN19@InsertEffe
$LN17@InsertEffe:

; 48   : 	}
; 49   : 
; 50   : 	if(g_BuffEffect.IsValidIndex(iEffectIndex) == FALSE)

  0008e	0f b6 45 0c	 movzx	 eax, BYTE PTR _iEffectIndex$[ebp]
  00092	50		 push	 eax
  00093	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffEffect@@3VCBuffEffect@@A ; g_BuffEffect
  00098	e8 00 00 00 00	 call	 ?IsValidIndex@CBuffEffect@@QAE_NE@Z ; CBuffEffect::IsValidIndex
  0009d	0f b6 c8	 movzx	 ecx, al
  000a0	85 c9		 test	 ecx, ecx
  000a2	75 08		 jne	 SHORT $LN16@InsertEffe

; 51   : 	{
; 52   : 		return -1;

  000a4	83 c8 ff	 or	 eax, -1
  000a7	e9 01 02 00 00	 jmp	 $LN19@InsertEffe
$LN16@InsertEffe:

; 53   : 	}
; 54   : 
; 55   : 	pEffectIndex = g_BuffEffect.GetBuffData(iEffectIndex);

  000ac	0f b6 45 0c	 movzx	 eax, BYTE PTR _iEffectIndex$[ebp]
  000b0	50		 push	 eax
  000b1	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffEffect@@3VCBuffEffect@@A ; g_BuffEffect
  000b6	e8 00 00 00 00	 call	 ?GetBuffData@CBuffEffect@@QAEPAUBUFF_EFFECT_DATA@@E@Z ; CBuffEffect::GetBuffData
  000bb	89 45 f8	 mov	 DWORD PTR _pEffectIndex$[ebp], eax

; 56   : 
; 57   : 	if(pEffectIndex == NULL)

  000be	83 7d f8 00	 cmp	 DWORD PTR _pEffectIndex$[ebp], 0
  000c2	75 08		 jne	 SHORT $LN15@InsertEffe

; 58   : 	{
; 59   : 		return -1;

  000c4	83 c8 ff	 or	 eax, -1
  000c7	e9 e1 01 00 00	 jmp	 $LN19@InsertEffe
$LN15@InsertEffe:

; 60   : 	}
; 61   : 
; 62   : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  000cc	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _i$219890[ebp], 0
  000d3	eb 09		 jmp	 SHORT $LN14@InsertEffe
$LN13@InsertEffe:
  000d5	8b 45 e4	 mov	 eax, DWORD PTR _i$219890[ebp]
  000d8	83 c0 01	 add	 eax, 1
  000db	89 45 e4	 mov	 DWORD PTR _i$219890[ebp], eax
$LN14@InsertEffe:
  000de	83 7d e4 10	 cmp	 DWORD PTR _i$219890[ebp], 16 ; 00000010H
  000e2	0f 8d ba 00 00
	00		 jge	 $LN12@InsertEffe

; 63   : 	{
; 64   : 		if( lpObj->m_BuffEffectState[i].btBuffIndex != NULL )

  000e8	8b 45 e4	 mov	 eax, DWORD PTR _i$219890[ebp]
  000eb	6b c0 14	 imul	 eax, 20			; 00000014H
  000ee	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  000f1	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  000f9	85 d2		 test	 edx, edx
  000fb	0f 84 9c 00 00
	00		 je	 $LN11@InsertEffe

; 65   : 		{
; 66   : 			pEffectIndex2 = g_BuffEffect.GetBuffData(lpObj->m_BuffEffectState[i].btBuffIndex);

  00101	8b 45 e4	 mov	 eax, DWORD PTR _i$219890[ebp]
  00104	6b c0 14	 imul	 eax, 20			; 00000014H
  00107	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0010a	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  00112	52		 push	 edx
  00113	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffEffect@@3VCBuffEffect@@A ; g_BuffEffect
  00118	e8 00 00 00 00	 call	 ?GetBuffData@CBuffEffect@@QAEPAUBUFF_EFFECT_DATA@@E@Z ; CBuffEffect::GetBuffData
  0011d	89 45 f4	 mov	 DWORD PTR _pEffectIndex2$[ebp], eax

; 67   : 
; 68   : 			if(pEffectIndex2 == NULL) //season4 add-on (wz fix)

  00120	83 7d f4 00	 cmp	 DWORD PTR _pEffectIndex2$[ebp], 0
  00124	75 02		 jne	 SHORT $LN10@InsertEffe

; 69   : 			{
; 70   : 				continue;

  00126	eb ad		 jmp	 SHORT $LN13@InsertEffe
$LN10@InsertEffe:

; 71   : 			}
; 72   : 			
; 73   : 			if(pEffectIndex2->btViewPortIndex == pEffectIndex->btViewPortIndex )

  00128	8b 45 f4	 mov	 eax, DWORD PTR _pEffectIndex2$[ebp]
  0012b	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  0012f	8b 55 f8	 mov	 edx, DWORD PTR _pEffectIndex$[ebp]
  00132	0f b6 42 01	 movzx	 eax, BYTE PTR [edx+1]
  00136	3b c8		 cmp	 ecx, eax
  00138	75 27		 jne	 SHORT $LN9@InsertEffe

; 74   : 			{
; 75   : 				this->ClearEffect(lpObj,lpObj->m_BuffEffectState[i].btBuffIndex);

  0013a	8b 45 e4	 mov	 eax, DWORD PTR _i$219890[ebp]
  0013d	6b c0 14	 imul	 eax, 20			; 00000014H
  00140	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00143	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  0014b	52		 push	 edx
  0014c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0014f	50		 push	 eax
  00150	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00153	e8 00 00 00 00	 call	 ?ClearEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z ; CBuffManager::ClearEffect

; 76   : 				loc6 = pEffectIndex2->btIndex;

  00158	8b 45 f4	 mov	 eax, DWORD PTR _pEffectIndex2$[ebp]
  0015b	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0015e	89 4d e8	 mov	 DWORD PTR _loc6$[ebp], ecx
$LN9@InsertEffe:

; 77   : 			}
; 78   : 
; 79   : 			if(pEffectIndex2->btType == 0)

  00161	8b 45 f4	 mov	 eax, DWORD PTR _pEffectIndex2$[ebp]
  00164	0f b6 48 18	 movzx	 ecx, BYTE PTR [eax+24]
  00168	85 c9		 test	 ecx, ecx
  0016a	75 0b		 jne	 SHORT $LN8@InsertEffe

; 80   : 			{
; 81   : 				loc4 +=1;

  0016c	8b 45 f0	 mov	 eax, DWORD PTR _loc4$[ebp]
  0016f	83 c0 01	 add	 eax, 1
  00172	89 45 f0	 mov	 DWORD PTR _loc4$[ebp], eax
  00175	eb 15		 jmp	 SHORT $LN7@InsertEffe
$LN8@InsertEffe:

; 82   : 			}
; 83   : 			else if(pEffectIndex2->btType == 1)

  00177	8b 45 f4	 mov	 eax, DWORD PTR _pEffectIndex2$[ebp]
  0017a	0f b6 48 18	 movzx	 ecx, BYTE PTR [eax+24]
  0017e	83 f9 01	 cmp	 ecx, 1
  00181	75 09		 jne	 SHORT $LN7@InsertEffe

; 84   : 			{
; 85   : 				loc5 += 1;	

  00183	8b 45 ec	 mov	 eax, DWORD PTR _loc5$[ebp]
  00186	83 c0 01	 add	 eax, 1
  00189	89 45 ec	 mov	 DWORD PTR _loc5$[ebp], eax
$LN7@InsertEffe:

; 86   : 			}
; 87   : 
; 88   : 			if(i > lpObj->m_btViewStateCount)

  0018c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0018f	0f b6 88 27 02
	00 00		 movzx	 ecx, BYTE PTR [eax+551]
  00196	39 4d e4	 cmp	 DWORD PTR _i$219890[ebp], ecx
  00199	7e 02		 jle	 SHORT $LN11@InsertEffe

; 89   : 			{
; 90   : 				break;

  0019b	eb 05		 jmp	 SHORT $LN12@InsertEffe
$LN11@InsertEffe:

; 91   : 			}
; 92   : 		}
; 93   : 	}

  0019d	e9 33 ff ff ff	 jmp	 $LN13@InsertEffe
$LN12@InsertEffe:

; 94   : 
; 95   : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  001a2	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _i$219901[ebp], 0
  001a9	eb 09		 jmp	 SHORT $LN4@InsertEffe
$LN3@InsertEffe:
  001ab	8b 45 e0	 mov	 eax, DWORD PTR _i$219901[ebp]
  001ae	83 c0 01	 add	 eax, 1
  001b1	89 45 e0	 mov	 DWORD PTR _i$219901[ebp], eax
$LN4@InsertEffe:
  001b4	83 7d e0 10	 cmp	 DWORD PTR _i$219901[ebp], 16 ; 00000010H
  001b8	0f 8d ec 00 00
	00		 jge	 $LN2@InsertEffe

; 96   : 	{
; 97   : 		if(lpObj->m_BuffEffectState[i].btBuffIndex == NULL)

  001be	8b 45 e0	 mov	 eax, DWORD PTR _i$219901[ebp]
  001c1	6b c0 14	 imul	 eax, 20			; 00000014H
  001c4	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  001c7	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  001cf	85 d2		 test	 edx, edx
  001d1	0f 85 ce 00 00
	00		 jne	 $LN1@InsertEffe

; 98   : 		{
; 99   : 			lpObj->m_BuffEffectState[i].btBuffIndex = iEffectIndex;

  001d7	8b 45 e0	 mov	 eax, DWORD PTR _i$219901[ebp]
  001da	6b c0 14	 imul	 eax, 20			; 00000014H
  001dd	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  001e0	8a 55 0c	 mov	 dl, BYTE PTR _iEffectIndex$[ebp]
  001e3	88 94 01 28 02
	00 00		 mov	 BYTE PTR [ecx+eax+552], dl

; 100  : 			lpObj->m_BuffEffectState[i].btVpIndex = pEffectIndex->btViewPortIndex;

  001ea	8b 45 e0	 mov	 eax, DWORD PTR _i$219901[ebp]
  001ed	6b c0 14	 imul	 eax, 20			; 00000014H
  001f0	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  001f3	8b 55 f8	 mov	 edx, DWORD PTR _pEffectIndex$[ebp]
  001f6	8a 52 01	 mov	 dl, BYTE PTR [edx+1]
  001f9	88 94 01 29 02
	00 00		 mov	 BYTE PTR [ecx+eax+553], dl

; 101  : 			lpObj->m_BuffEffectState[i].btEffectType1 = btEffectType1;

  00200	8b 45 e0	 mov	 eax, DWORD PTR _i$219901[ebp]
  00203	6b c0 14	 imul	 eax, 20			; 00000014H
  00206	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00209	8a 55 10	 mov	 dl, BYTE PTR _btEffectType1$[ebp]
  0020c	88 94 01 2a 02
	00 00		 mov	 BYTE PTR [ecx+eax+554], dl

; 102  : 			lpObj->m_BuffEffectState[i].btEffectType2 = btEffectType2;

  00213	8b 45 e0	 mov	 eax, DWORD PTR _i$219901[ebp]
  00216	6b c0 14	 imul	 eax, 20			; 00000014H
  00219	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0021c	8a 55 14	 mov	 dl, BYTE PTR _btEffectType2$[ebp]
  0021f	88 94 01 2b 02
	00 00		 mov	 BYTE PTR [ecx+eax+555], dl

; 103  : 			lpObj->m_BuffEffectState[i].iValue1 = iValue1;

  00226	8b 45 e0	 mov	 eax, DWORD PTR _i$219901[ebp]
  00229	6b c0 14	 imul	 eax, 20			; 00000014H
  0022c	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0022f	8b 55 18	 mov	 edx, DWORD PTR _iValue1$[ebp]
  00232	89 94 01 2c 02
	00 00		 mov	 DWORD PTR [ecx+eax+556], edx

; 104  : 			lpObj->m_BuffEffectState[i].iValue2 = iValue2;

  00239	8b 45 e0	 mov	 eax, DWORD PTR _i$219901[ebp]
  0023c	6b c0 14	 imul	 eax, 20			; 00000014H
  0023f	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00242	8b 55 1c	 mov	 edx, DWORD PTR _iValue2$[ebp]
  00245	89 94 01 30 02
	00 00		 mov	 DWORD PTR [ecx+eax+560], edx

; 105  : 			lpObj->m_BuffEffectState[i].iDuration = iDuration;

  0024c	8b 45 e0	 mov	 eax, DWORD PTR _i$219901[ebp]
  0024f	6b c0 14	 imul	 eax, 20			; 00000014H
  00252	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00255	8b 55 20	 mov	 edx, DWORD PTR _iDuration$[ebp]
  00258	89 94 01 38 02
	00 00		 mov	 DWORD PTR [ecx+eax+568], edx

; 106  : 			lpObj->m_BuffEffectState[i].dwBuffTickCount = GetTickCount();

  0025f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00265	8b 4d e0	 mov	 ecx, DWORD PTR _i$219901[ebp]
  00268	6b c9 14	 imul	 ecx, 20			; 00000014H
  0026b	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0026e	89 84 0a 34 02
	00 00		 mov	 DWORD PTR [edx+ecx+564], eax

; 107  : 
; 108  : 			g_ViewportSkillState.AddBuffEffect(lpObj,btEffectType1,iValue1); //first

  00275	8b 45 18	 mov	 eax, DWORD PTR _iValue1$[ebp]
  00278	50		 push	 eax
  00279	0f b6 4d 10	 movzx	 ecx, BYTE PTR _btEffectType1$[ebp]
  0027d	51		 push	 ecx
  0027e	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00281	52		 push	 edx
  00282	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ViewportSkillState@@3VCViewportSkillState@@A ; g_ViewportSkillState
  00287	e8 00 00 00 00	 call	 ?AddBuffEffect@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z ; CViewportSkillState::AddBuffEffect

; 109  : 			g_ViewportSkillState.AddBuffEffect(lpObj,btEffectType2,iValue2); //second

  0028c	8b 45 1c	 mov	 eax, DWORD PTR _iValue2$[ebp]
  0028f	50		 push	 eax
  00290	0f b6 4d 14	 movzx	 ecx, BYTE PTR _btEffectType2$[ebp]
  00294	51		 push	 ecx
  00295	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00298	52		 push	 edx
  00299	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ViewportSkillState@@3VCViewportSkillState@@A ; g_ViewportSkillState
  0029e	e8 00 00 00 00	 call	 ?AddBuffEffect@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z ; CViewportSkillState::AddBuffEffect

; 110  : 			break;

  002a3	eb 05		 jmp	 SHORT $LN2@InsertEffe
$LN1@InsertEffe:

; 111  : 		}
; 112  : 	}

  002a5	e9 01 ff ff ff	 jmp	 $LN3@InsertEffe
$LN2@InsertEffe:

; 113  : 
; 114  : 	return loc6;

  002aa	8b 45 e8	 mov	 eax, DWORD PTR _loc6$[ebp]
$LN19@InsertEffe:

; 115  : }

  002ad	5f		 pop	 edi
  002ae	5e		 pop	 esi
  002af	5b		 pop	 ebx
  002b0	8b e5		 mov	 esp, ebp
  002b2	5d		 pop	 ebp
  002b3	c2 1c 00	 ret	 28			; 0000001cH
?InsertEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@HEEHHH@Z ENDP ; CBuffManager::InsertEffect
_TEXT	ENDS
EXTRN	?RemoveBuffEffect@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z:PROC ; CViewportSkillState::RemoveBuffEffect
EXTRN	_memset:PROC
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$219915 = -12						; size = 4
_btResult$ = -5						; size = 1
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
?ClearEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z PROC ; CBuffManager::ClearEffect
; _this$ = ecx

; 119  : {

  002c0	55		 push	 ebp
  002c1	8b ec		 mov	 ebp, esp
  002c3	83 ec 4c	 sub	 esp, 76			; 0000004cH
  002c6	53		 push	 ebx
  002c7	56		 push	 esi
  002c8	57		 push	 edi
  002c9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 120  : 	BYTE btResult = 0;

  002cc	c6 45 fb 00	 mov	 BYTE PTR _btResult$[ebp], 0

; 121  : 
; 122  : 	if(lpObj == NULL)

  002d0	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  002d4	75 07		 jne	 SHORT $LN9@ClearEffec

; 123  : 	{
; 124  : 		return 0;

  002d6	32 c0		 xor	 al, al
  002d8	e9 5e 01 00 00	 jmp	 $LN10@ClearEffec
$LN9@ClearEffec:

; 125  : 	}
; 126  : 	
; 127  : 	if(lpObj->Connected < PLAYER_PLAYING)

  002dd	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  002e0	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  002e4	7d 07		 jge	 SHORT $LN8@ClearEffec

; 128  : 	{
; 129  : 		return 0;

  002e6	32 c0		 xor	 al, al
  002e8	e9 4e 01 00 00	 jmp	 $LN10@ClearEffec
$LN8@ClearEffec:

; 130  : 	}
; 131  : 
; 132  : 	if(g_BuffEffect.IsValidIndex(iEffectIndex) == FALSE)

  002ed	0f b6 45 0c	 movzx	 eax, BYTE PTR _iEffectIndex$[ebp]
  002f1	50		 push	 eax
  002f2	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffEffect@@3VCBuffEffect@@A ; g_BuffEffect
  002f7	e8 00 00 00 00	 call	 ?IsValidIndex@CBuffEffect@@QAE_NE@Z ; CBuffEffect::IsValidIndex
  002fc	0f b6 c8	 movzx	 ecx, al
  002ff	85 c9		 test	 ecx, ecx
  00301	75 07		 jne	 SHORT $LN7@ClearEffec

; 133  : 	{
; 134  : 		return 0;

  00303	32 c0		 xor	 al, al
  00305	e9 31 01 00 00	 jmp	 $LN10@ClearEffec
$LN7@ClearEffec:

; 135  : 	}
; 136  : 
; 137  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  0030a	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$219915[ebp], 0
  00311	eb 09		 jmp	 SHORT $LN6@ClearEffec
$LN5@ClearEffec:
  00313	8b 45 f4	 mov	 eax, DWORD PTR _i$219915[ebp]
  00316	83 c0 01	 add	 eax, 1
  00319	89 45 f4	 mov	 DWORD PTR _i$219915[ebp], eax
$LN6@ClearEffec:
  0031c	83 7d f4 10	 cmp	 DWORD PTR _i$219915[ebp], 16 ; 00000010H
  00320	0f 8d 12 01 00
	00		 jge	 $LN4@ClearEffec

; 138  : 	{
; 139  : 		if(btResult == 1)

  00326	0f b6 45 fb	 movzx	 eax, BYTE PTR _btResult$[ebp]
  0032a	83 f8 01	 cmp	 eax, 1
  0032d	75 67		 jne	 SHORT $LN3@ClearEffec

; 140  : 		{
; 141  : 			if( (lpObj->m_BuffEffectState[i].btBuffIndex != 0) && (i > 0) )

  0032f	8b 45 f4	 mov	 eax, DWORD PTR _i$219915[ebp]
  00332	6b c0 14	 imul	 eax, 20			; 00000014H
  00335	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00338	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  00340	85 d2		 test	 edx, edx
  00342	74 52		 je	 SHORT $LN3@ClearEffec
  00344	83 7d f4 00	 cmp	 DWORD PTR _i$219915[ebp], 0
  00348	7e 4c		 jle	 SHORT $LN3@ClearEffec

; 142  : 			{
; 143  : 				memcpy(&lpObj->m_BuffEffectState[i-1],&lpObj->m_BuffEffectState[i],sizeof(lpObj->m_BuffEffectState[i])); //Change the Buff Slot to the removed one...

  0034a	6a 14		 push	 20			; 00000014H
  0034c	8b 45 f4	 mov	 eax, DWORD PTR _i$219915[ebp]
  0034f	6b c0 14	 imul	 eax, 20			; 00000014H
  00352	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00355	8d 94 01 28 02
	00 00		 lea	 edx, DWORD PTR [ecx+eax+552]
  0035c	52		 push	 edx
  0035d	8b 45 f4	 mov	 eax, DWORD PTR _i$219915[ebp]
  00360	83 e8 01	 sub	 eax, 1
  00363	6b c0 14	 imul	 eax, 20			; 00000014H
  00366	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00369	8d 94 01 28 02
	00 00		 lea	 edx, DWORD PTR [ecx+eax+552]
  00370	52		 push	 edx
  00371	e8 00 00 00 00	 call	 _memcpy
  00376	83 c4 0c	 add	 esp, 12			; 0000000cH

; 144  : 				memset(&lpObj->m_BuffEffectState[i],0,sizeof(lpObj->m_BuffEffectState[i]));

  00379	6a 14		 push	 20			; 00000014H
  0037b	6a 00		 push	 0
  0037d	8b 45 f4	 mov	 eax, DWORD PTR _i$219915[ebp]
  00380	6b c0 14	 imul	 eax, 20			; 00000014H
  00383	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00386	8d 94 01 28 02
	00 00		 lea	 edx, DWORD PTR [ecx+eax+552]
  0038d	52		 push	 edx
  0038e	e8 00 00 00 00	 call	 _memset
  00393	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@ClearEffec:

; 145  : 			}
; 146  : 		}
; 147  : 		
; 148  : 		if(lpObj->m_BuffEffectState[i].btBuffIndex == iEffectIndex ) //Will Clear the Effect

  00396	8b 45 f4	 mov	 eax, DWORD PTR _i$219915[ebp]
  00399	6b c0 14	 imul	 eax, 20			; 00000014H
  0039c	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0039f	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  003a7	3b 55 0c	 cmp	 edx, DWORD PTR _iEffectIndex$[ebp]
  003aa	0f 85 83 00 00
	00		 jne	 $LN1@ClearEffec

; 149  : 		{
; 150  : 			g_ViewportSkillState.RemoveBuffEffect(lpObj,lpObj->m_BuffEffectState[i].btEffectType1,lpObj->m_BuffEffectState[i].iValue1);

  003b0	8b 45 f4	 mov	 eax, DWORD PTR _i$219915[ebp]
  003b3	6b c0 14	 imul	 eax, 20			; 00000014H
  003b6	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  003b9	8b 94 01 2c 02
	00 00		 mov	 edx, DWORD PTR [ecx+eax+556]
  003c0	52		 push	 edx
  003c1	8b 45 f4	 mov	 eax, DWORD PTR _i$219915[ebp]
  003c4	6b c0 14	 imul	 eax, 20			; 00000014H
  003c7	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  003ca	0f b6 94 01 2a
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+554]
  003d2	52		 push	 edx
  003d3	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  003d6	50		 push	 eax
  003d7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ViewportSkillState@@3VCViewportSkillState@@A ; g_ViewportSkillState
  003dc	e8 00 00 00 00	 call	 ?RemoveBuffEffect@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z ; CViewportSkillState::RemoveBuffEffect

; 151  : 			g_ViewportSkillState.RemoveBuffEffect(lpObj,lpObj->m_BuffEffectState[i].btEffectType2,lpObj->m_BuffEffectState[i].iValue2);

  003e1	8b 45 f4	 mov	 eax, DWORD PTR _i$219915[ebp]
  003e4	6b c0 14	 imul	 eax, 20			; 00000014H
  003e7	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  003ea	8b 94 01 30 02
	00 00		 mov	 edx, DWORD PTR [ecx+eax+560]
  003f1	52		 push	 edx
  003f2	8b 45 f4	 mov	 eax, DWORD PTR _i$219915[ebp]
  003f5	6b c0 14	 imul	 eax, 20			; 00000014H
  003f8	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  003fb	0f b6 94 01 2b
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+555]
  00403	52		 push	 edx
  00404	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00407	50		 push	 eax
  00408	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ViewportSkillState@@3VCViewportSkillState@@A ; g_ViewportSkillState
  0040d	e8 00 00 00 00	 call	 ?RemoveBuffEffect@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z ; CViewportSkillState::RemoveBuffEffect

; 152  : 			memset(&lpObj->m_BuffEffectState[i],0,sizeof(lpObj->m_BuffEffectState[i]));

  00412	6a 14		 push	 20			; 00000014H
  00414	6a 00		 push	 0
  00416	8b 45 f4	 mov	 eax, DWORD PTR _i$219915[ebp]
  00419	6b c0 14	 imul	 eax, 20			; 00000014H
  0041c	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0041f	8d 94 01 28 02
	00 00		 lea	 edx, DWORD PTR [ecx+eax+552]
  00426	52		 push	 edx
  00427	e8 00 00 00 00	 call	 _memset
  0042c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 153  : 			btResult = 1;

  0042f	c6 45 fb 01	 mov	 BYTE PTR _btResult$[ebp], 1
$LN1@ClearEffec:

; 154  : 		}
; 155  : 	}

  00433	e9 db fe ff ff	 jmp	 $LN5@ClearEffec
$LN4@ClearEffec:

; 156  : 
; 157  : 	return btResult;

  00438	8a 45 fb	 mov	 al, BYTE PTR _btResult$[ebp]
$LN10@ClearEffec:

; 158  : }

  0043b	5f		 pop	 edi
  0043c	5e		 pop	 esi
  0043d	5b		 pop	 ebx
  0043e	8b e5		 mov	 esp, ebp
  00440	5d		 pop	 ebp
  00441	c2 08 00	 ret	 8
?ClearEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z ENDP ; CBuffManager::ClearEffect
_TEXT	ENDS
PUBLIC	?SearchActiveEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z ; CBuffManager::SearchActiveEffect
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$219928 = -8						; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
?SearchActiveEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z PROC ; CBuffManager::SearchActiveEffect
; _this$ = ecx

; 162  : {

  00450	55		 push	 ebp
  00451	8b ec		 mov	 ebp, esp
  00453	83 ec 48	 sub	 esp, 72			; 00000048H
  00456	53		 push	 ebx
  00457	56		 push	 esi
  00458	57		 push	 edi
  00459	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 163  : 	if( g_BuffEffect.IsValidIndex(iEffectIndex) == FALSE )

  0045c	0f b6 45 0c	 movzx	 eax, BYTE PTR _iEffectIndex$[ebp]
  00460	50		 push	 eax
  00461	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffEffect@@3VCBuffEffect@@A ; g_BuffEffect
  00466	e8 00 00 00 00	 call	 ?IsValidIndex@CBuffEffect@@QAE_NE@Z ; CBuffEffect::IsValidIndex
  0046b	0f b6 c8	 movzx	 ecx, al
  0046e	85 c9		 test	 ecx, ecx
  00470	75 04		 jne	 SHORT $LN5@SearchActi

; 164  : 	{
; 165  : 		return 0;

  00472	32 c0		 xor	 al, al
  00474	eb 36		 jmp	 SHORT $LN6@SearchActi
$LN5@SearchActi:

; 166  : 	}
; 167  : 
; 168  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  00476	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$219928[ebp], 0
  0047d	eb 09		 jmp	 SHORT $LN4@SearchActi
$LN3@SearchActi:
  0047f	8b 45 f8	 mov	 eax, DWORD PTR _i$219928[ebp]
  00482	83 c0 01	 add	 eax, 1
  00485	89 45 f8	 mov	 DWORD PTR _i$219928[ebp], eax
$LN4@SearchActi:
  00488	83 7d f8 10	 cmp	 DWORD PTR _i$219928[ebp], 16 ; 00000010H
  0048c	7d 1c		 jge	 SHORT $LN2@SearchActi

; 169  : 	{
; 170  : 		if(lpObj->m_BuffEffectState[i].btBuffIndex == iEffectIndex)

  0048e	8b 45 f8	 mov	 eax, DWORD PTR _i$219928[ebp]
  00491	6b c0 14	 imul	 eax, 20			; 00000014H
  00494	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00497	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  0049f	3b 55 0c	 cmp	 edx, DWORD PTR _iEffectIndex$[ebp]
  004a2	75 04		 jne	 SHORT $LN1@SearchActi

; 171  : 		{
; 172  : 			return 1;

  004a4	b0 01		 mov	 al, 1
  004a6	eb 04		 jmp	 SHORT $LN6@SearchActi
$LN1@SearchActi:

; 173  : 		}
; 174  : 	}

  004a8	eb d5		 jmp	 SHORT $LN3@SearchActi
$LN2@SearchActi:

; 175  : 
; 176  : 	return 0;

  004aa	32 c0		 xor	 al, al
$LN6@SearchActi:

; 177  : }

  004ac	5f		 pop	 edi
  004ad	5e		 pop	 esi
  004ae	5b		 pop	 ebx
  004af	8b e5		 mov	 esp, ebp
  004b1	5d		 pop	 ebp
  004b2	c2 08 00	 ret	 8
?SearchActiveEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z ENDP ; CBuffManager::SearchActiveEffect
_TEXT	ENDS
PUBLIC	?RemoveIceEffect@CBuffManager@@QAEXPAUOBJECTSTRUCT@@H@Z ; CBuffManager::RemoveIceEffect
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_iEffectID$ = -8					; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
?RemoveIceEffect@CBuffManager@@QAEXPAUOBJECTSTRUCT@@H@Z PROC ; CBuffManager::RemoveIceEffect
; _this$ = ecx

; 181  : {

  004c0	55		 push	 ebp
  004c1	8b ec		 mov	 ebp, esp
  004c3	83 ec 48	 sub	 esp, 72			; 00000048H
  004c6	53		 push	 ebx
  004c7	56		 push	 esi
  004c8	57		 push	 edi
  004c9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 182  : 	int iEffectID = iEffectIndex;

  004cc	8b 45 0c	 mov	 eax, DWORD PTR _iEffectIndex$[ebp]
  004cf	89 45 f8	 mov	 DWORD PTR _iEffectID$[ebp], eax

; 183  : 
; 184  : 	if(iEffectID != AT_ICE) //56	28	255	255	Ice	1	1	1	Diminui velocidade de mobilidade

  004d2	83 7d f8 38	 cmp	 DWORD PTR _iEffectID$[ebp], 56 ; 00000038H
  004d6	74 02		 je	 SHORT $LN1@RemoveIceE

; 185  : 	{
; 186  : 		return;

  004d8	eb 21		 jmp	 SHORT $LN2@RemoveIceE
$LN1@RemoveIceE:

; 187  : 	}
; 188  : 
; 189  : 	lpObj->DelayActionTime = 0;

  004da	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  004dd	c7 80 c0 03 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+960], 0

; 190  : 	lpObj->DelayLevel = 0;

  004e7	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  004ea	c6 80 c4 03 00
	00 00		 mov	 BYTE PTR [eax+964], 0

; 191  : 	lpObj->m_IceType = 0;

  004f1	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  004f4	c6 80 c6 03 00
	00 00		 mov	 BYTE PTR [eax+966], 0
$LN2@RemoveIceE:

; 192  : }

  004fb	5f		 pop	 edi
  004fc	5e		 pop	 esi
  004fd	5b		 pop	 ebx
  004fe	8b e5		 mov	 esp, ebp
  00500	5d		 pop	 ebp
  00501	c2 08 00	 ret	 8
?RemoveIceEffect@CBuffManager@@QAEXPAUOBJECTSTRUCT@@H@Z ENDP ; CBuffManager::RemoveIceEffect
_TEXT	ENDS
PUBLIC	?SearchAndClearEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@H@Z ; CBuffManager::SearchAndClearEffect
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$219947 = -16						; size = 4
_loc3$ = -12						; size = 4
_pEffect$ = -8						; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_iEffectClearType$ = 12					; size = 4
?SearchAndClearEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@H@Z PROC ; CBuffManager::SearchAndClearEffect
; _this$ = ecx

; 196  : {

  00510	55		 push	 ebp
  00511	8b ec		 mov	 ebp, esp
  00513	83 ec 50	 sub	 esp, 80			; 00000050H
  00516	53		 push	 ebx
  00517	56		 push	 esi
  00518	57		 push	 edi
  00519	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 197  : 	LPBUFF_EFFECT_DATA pEffect = NULL;

  0051c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pEffect$[ebp], 0

; 198  : 
; 199  : 	int loc3 = 0; //clear count

  00523	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _loc3$[ebp], 0

; 200  : 	
; 201  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  0052a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$219947[ebp], 0
  00531	eb 09		 jmp	 SHORT $LN11@SearchAndC
$LN10@SearchAndC:
  00533	8b 45 f0	 mov	 eax, DWORD PTR _i$219947[ebp]
  00536	83 c0 01	 add	 eax, 1
  00539	89 45 f0	 mov	 DWORD PTR _i$219947[ebp], eax
$LN11@SearchAndC:
  0053c	83 7d f0 10	 cmp	 DWORD PTR _i$219947[ebp], 16 ; 00000010H
  00540	0f 8d 16 01 00
	00		 jge	 $LN9@SearchAndC

; 202  : 	{
; 203  : 		if( this->SearchActiveEffect(lpObj,lpObj->m_BuffEffectState[i].btBuffIndex) == TRUE )

  00546	8b 45 f0	 mov	 eax, DWORD PTR _i$219947[ebp]
  00549	6b c0 14	 imul	 eax, 20			; 00000014H
  0054c	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0054f	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  00557	52		 push	 edx
  00558	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0055b	50		 push	 eax
  0055c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0055f	e8 00 00 00 00	 call	 ?SearchActiveEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z ; CBuffManager::SearchActiveEffect
  00564	0f b6 c8	 movzx	 ecx, al
  00567	83 f9 01	 cmp	 ecx, 1
  0056a	0f 85 e7 00 00
	00		 jne	 $LN8@SearchAndC

; 204  : 		{
; 205  : 			pEffect = g_BuffEffect.GetBuffData(lpObj->m_BuffEffectState[i].btBuffIndex); //Get Buff Info

  00570	8b 45 f0	 mov	 eax, DWORD PTR _i$219947[ebp]
  00573	6b c0 14	 imul	 eax, 20			; 00000014H
  00576	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00579	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  00581	52		 push	 edx
  00582	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffEffect@@3VCBuffEffect@@A ; g_BuffEffect
  00587	e8 00 00 00 00	 call	 ?GetBuffData@CBuffEffect@@QAEPAUBUFF_EFFECT_DATA@@E@Z ; CBuffEffect::GetBuffData
  0058c	89 45 f8	 mov	 DWORD PTR _pEffect$[ebp], eax

; 206  : 
; 207  : 			if(pEffect == NULL)

  0058f	83 7d f8 00	 cmp	 DWORD PTR _pEffect$[ebp], 0
  00593	75 02		 jne	 SHORT $LN7@SearchAndC

; 208  : 			{
; 209  : 				continue;

  00595	eb 9c		 jmp	 SHORT $LN10@SearchAndC
$LN7@SearchAndC:

; 210  : 			}
; 211  : 
; 212  : 			if(pEffect->btClearType == iEffectClearType)

  00597	8b 45 f8	 mov	 eax, DWORD PTR _pEffect$[ebp]
  0059a	0f b6 48 1a	 movzx	 ecx, BYTE PTR [eax+26]
  0059e	3b 4d 0c	 cmp	 ecx, DWORD PTR _iEffectClearType$[ebp]
  005a1	75 38		 jne	 SHORT $LN6@SearchAndC

; 213  : 			{
; 214  : 				if( this->ClearEffect(lpObj,lpObj->m_BuffEffectState[i].btBuffIndex) == TRUE)

  005a3	8b 45 f0	 mov	 eax, DWORD PTR _i$219947[ebp]
  005a6	6b c0 14	 imul	 eax, 20			; 00000014H
  005a9	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  005ac	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  005b4	52		 push	 edx
  005b5	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  005b8	50		 push	 eax
  005b9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005bc	e8 00 00 00 00	 call	 ?ClearEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z ; CBuffManager::ClearEffect
  005c1	0f b6 c8	 movzx	 ecx, al
  005c4	83 f9 01	 cmp	 ecx, 1
  005c7	75 12		 jne	 SHORT $LN6@SearchAndC

; 215  : 				{
; 216  : 					loc3 += 1;

  005c9	8b 45 f4	 mov	 eax, DWORD PTR _loc3$[ebp]
  005cc	83 c0 01	 add	 eax, 1
  005cf	89 45 f4	 mov	 DWORD PTR _loc3$[ebp], eax

; 217  : 					i -= 1;

  005d2	8b 45 f0	 mov	 eax, DWORD PTR _i$219947[ebp]
  005d5	83 e8 01	 sub	 eax, 1
  005d8	89 45 f0	 mov	 DWORD PTR _i$219947[ebp], eax
$LN6@SearchAndC:

; 218  : 				}
; 219  : 			}
; 220  : 
; 221  : 			if(iEffectClearType == AT_GENERAL)

  005db	83 7d 0c 02	 cmp	 DWORD PTR _iEffectClearType$[ebp], 2
  005df	75 38		 jne	 SHORT $LN4@SearchAndC

; 222  : 			{
; 223  : 				if( this->ClearEffect(lpObj,lpObj->m_BuffEffectState[i].btBuffIndex ) == TRUE)

  005e1	8b 45 f0	 mov	 eax, DWORD PTR _i$219947[ebp]
  005e4	6b c0 14	 imul	 eax, 20			; 00000014H
  005e7	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  005ea	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  005f2	52		 push	 edx
  005f3	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  005f6	50		 push	 eax
  005f7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005fa	e8 00 00 00 00	 call	 ?ClearEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z ; CBuffManager::ClearEffect
  005ff	0f b6 c8	 movzx	 ecx, al
  00602	83 f9 01	 cmp	 ecx, 1
  00605	75 12		 jne	 SHORT $LN4@SearchAndC

; 224  : 				{
; 225  : 					loc3 += 1;

  00607	8b 45 f4	 mov	 eax, DWORD PTR _loc3$[ebp]
  0060a	83 c0 01	 add	 eax, 1
  0060d	89 45 f4	 mov	 DWORD PTR _loc3$[ebp], eax

; 226  : 					i -= 1;

  00610	8b 45 f0	 mov	 eax, DWORD PTR _i$219947[ebp]
  00613	83 e8 01	 sub	 eax, 1
  00616	89 45 f0	 mov	 DWORD PTR _i$219947[ebp], eax
$LN4@SearchAndC:

; 227  : 				}
; 228  : 			}
; 229  : 
; 230  : 			if(iEffectClearType == AT_MONSTER_GENERAL)

  00619	83 7d 0c 01	 cmp	 DWORD PTR _iEffectClearType$[ebp], 1
  0061d	75 38		 jne	 SHORT $LN8@SearchAndC

; 231  : 			{
; 232  : 				if( this->ClearEffect(lpObj,lpObj->m_BuffEffectState[i].btBuffIndex) == TRUE)

  0061f	8b 45 f0	 mov	 eax, DWORD PTR _i$219947[ebp]
  00622	6b c0 14	 imul	 eax, 20			; 00000014H
  00625	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00628	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  00630	52		 push	 edx
  00631	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00634	50		 push	 eax
  00635	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00638	e8 00 00 00 00	 call	 ?ClearEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z ; CBuffManager::ClearEffect
  0063d	0f b6 c8	 movzx	 ecx, al
  00640	83 f9 01	 cmp	 ecx, 1
  00643	75 12		 jne	 SHORT $LN8@SearchAndC

; 233  : 				{
; 234  : 					loc3 += 1;

  00645	8b 45 f4	 mov	 eax, DWORD PTR _loc3$[ebp]
  00648	83 c0 01	 add	 eax, 1
  0064b	89 45 f4	 mov	 DWORD PTR _loc3$[ebp], eax

; 235  : 					i -= 1;

  0064e	8b 45 f0	 mov	 eax, DWORD PTR _i$219947[ebp]
  00651	83 e8 01	 sub	 eax, 1
  00654	89 45 f0	 mov	 DWORD PTR _i$219947[ebp], eax
$LN8@SearchAndC:

; 236  : 				}
; 237  : 			}
; 238  : 		}
; 239  : 	}

  00657	e9 d7 fe ff ff	 jmp	 $LN10@SearchAndC
$LN9@SearchAndC:

; 240  : 	return loc3;

  0065c	8b 45 f4	 mov	 eax, DWORD PTR _loc3$[ebp]

; 241  : }

  0065f	5f		 pop	 edi
  00660	5e		 pop	 esi
  00661	5b		 pop	 ebx
  00662	8b e5		 mov	 esp, ebp
  00664	5d		 pop	 ebp
  00665	c2 08 00	 ret	 8
?SearchAndClearEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@H@Z ENDP ; CBuffManager::SearchAndClearEffect
_TEXT	ENDS
PUBLIC	?GetBuffInfo@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@H@Z ; CBuffManager::GetBuffInfo
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pEffect$ = -8						; size = 4
_this$ = -4						; size = 4
_iEffectIndex$ = 8					; size = 4
?GetBuffInfo@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@H@Z PROC ; CBuffManager::GetBuffInfo
; _this$ = ecx

; 245  : {

  00670	55		 push	 ebp
  00671	8b ec		 mov	 ebp, esp
  00673	83 ec 48	 sub	 esp, 72			; 00000048H
  00676	53		 push	 ebx
  00677	56		 push	 esi
  00678	57		 push	 edi
  00679	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 246  : 	LPBUFF_EFFECT_DATA pEffect = NULL;

  0067c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pEffect$[ebp], 0

; 247  : 
; 248  : 	if(g_BuffEffect.IsValidIndex(iEffectIndex) == FALSE)

  00683	0f b6 45 08	 movzx	 eax, BYTE PTR _iEffectIndex$[ebp]
  00687	50		 push	 eax
  00688	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffEffect@@3VCBuffEffect@@A ; g_BuffEffect
  0068d	e8 00 00 00 00	 call	 ?IsValidIndex@CBuffEffect@@QAE_NE@Z ; CBuffEffect::IsValidIndex
  00692	0f b6 c8	 movzx	 ecx, al
  00695	85 c9		 test	 ecx, ecx
  00697	75 04		 jne	 SHORT $LN1@GetBuffInf

; 249  : 	{
; 250  : 		return NULL;

  00699	33 c0		 xor	 eax, eax
  0069b	eb 15		 jmp	 SHORT $LN2@GetBuffInf
$LN1@GetBuffInf:

; 251  : 	}
; 252  : 	
; 253  : 	pEffect = g_BuffEffect.GetBuffData(iEffectIndex);

  0069d	0f b6 45 08	 movzx	 eax, BYTE PTR _iEffectIndex$[ebp]
  006a1	50		 push	 eax
  006a2	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffEffect@@3VCBuffEffect@@A ; g_BuffEffect
  006a7	e8 00 00 00 00	 call	 ?GetBuffData@CBuffEffect@@QAEPAUBUFF_EFFECT_DATA@@E@Z ; CBuffEffect::GetBuffData
  006ac	89 45 f8	 mov	 DWORD PTR _pEffect$[ebp], eax

; 254  : 
; 255  : 	return pEffect;

  006af	8b 45 f8	 mov	 eax, DWORD PTR _pEffect$[ebp]
$LN2@GetBuffInf:

; 256  : }

  006b2	5f		 pop	 edi
  006b3	5e		 pop	 esi
  006b4	5b		 pop	 ebx
  006b5	8b e5		 mov	 esp, ebp
  006b7	5d		 pop	 ebp
  006b8	c2 04 00	 ret	 4
?GetBuffInfo@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@H@Z ENDP ; CBuffManager::GetBuffInfo
_TEXT	ENDS
PUBLIC	?GetEffectDataFromItemCode@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@G@Z ; CBuffManager::GetEffectDataFromItemCode
EXTRN	?GetBuffDataFromItemCode@CBuffEffect@@QAEPAUBUFF_EFFECT_DATA@@G@Z:PROC ; CBuffEffect::GetBuffDataFromItemCode
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_lpBuffData$ = -8					; size = 4
_this$ = -4						; size = 4
_wItemCode$ = 8						; size = 2
?GetEffectDataFromItemCode@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@G@Z PROC ; CBuffManager::GetEffectDataFromItemCode
; _this$ = ecx

; 259  : {

  006c0	55		 push	 ebp
  006c1	8b ec		 mov	 ebp, esp
  006c3	83 ec 48	 sub	 esp, 72			; 00000048H
  006c6	53		 push	 ebx
  006c7	56		 push	 esi
  006c8	57		 push	 edi
  006c9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 260  : 	BUFF_EFFECT_DATA* lpBuffData = 0;

  006cc	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _lpBuffData$[ebp], 0

; 261  : 
; 262  : 	lpBuffData = g_BuffEffect.GetBuffDataFromItemCode(wItemCode);

  006d3	0f b7 45 08	 movzx	 eax, WORD PTR _wItemCode$[ebp]
  006d7	50		 push	 eax
  006d8	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffEffect@@3VCBuffEffect@@A ; g_BuffEffect
  006dd	e8 00 00 00 00	 call	 ?GetBuffDataFromItemCode@CBuffEffect@@QAEPAUBUFF_EFFECT_DATA@@G@Z ; CBuffEffect::GetBuffDataFromItemCode
  006e2	89 45 f8	 mov	 DWORD PTR _lpBuffData$[ebp], eax

; 263  : 	return lpBuffData;

  006e5	8b 45 f8	 mov	 eax, DWORD PTR _lpBuffData$[ebp]

; 264  : }

  006e8	5f		 pop	 edi
  006e9	5e		 pop	 esi
  006ea	5b		 pop	 ebx
  006eb	8b e5		 mov	 esp, ebp
  006ed	5d		 pop	 ebp
  006ee	c2 04 00	 ret	 4
?GetEffectDataFromItemCode@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@G@Z ENDP ; CBuffManager::GetEffectDataFromItemCode
_TEXT	ENDS
PUBLIC	?GetBuffClearType@CBuffManager@@QAEHE@Z		; CBuffManager::GetBuffClearType
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pEffect$ = -8						; size = 4
_this$ = -4						; size = 4
_btEffectIndex$ = 8					; size = 1
?GetBuffClearType@CBuffManager@@QAEHE@Z PROC		; CBuffManager::GetBuffClearType
; _this$ = ecx

; 268  : {

  00700	55		 push	 ebp
  00701	8b ec		 mov	 ebp, esp
  00703	83 ec 48	 sub	 esp, 72			; 00000048H
  00706	53		 push	 ebx
  00707	56		 push	 esi
  00708	57		 push	 edi
  00709	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 269  : 	LPBUFF_EFFECT_DATA pEffect = NULL;

  0070c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pEffect$[ebp], 0

; 270  : 
; 271  : 	if(g_BuffEffect.IsValidIndex(btEffectIndex) == FALSE)

  00713	0f b6 45 08	 movzx	 eax, BYTE PTR _btEffectIndex$[ebp]
  00717	50		 push	 eax
  00718	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffEffect@@3VCBuffEffect@@A ; g_BuffEffect
  0071d	e8 00 00 00 00	 call	 ?IsValidIndex@CBuffEffect@@QAE_NE@Z ; CBuffEffect::IsValidIndex
  00722	0f b6 c8	 movzx	 ecx, al
  00725	85 c9		 test	 ecx, ecx
  00727	75 05		 jne	 SHORT $LN1@GetBuffCle

; 272  : 	{
; 273  : 		return -1;

  00729	83 c8 ff	 or	 eax, -1
  0072c	eb 19		 jmp	 SHORT $LN2@GetBuffCle
$LN1@GetBuffCle:

; 274  : 	}
; 275  : 
; 276  : 	pEffect = g_BuffEffect.GetBuffData(btEffectIndex);

  0072e	0f b6 45 08	 movzx	 eax, BYTE PTR _btEffectIndex$[ebp]
  00732	50		 push	 eax
  00733	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffEffect@@3VCBuffEffect@@A ; g_BuffEffect
  00738	e8 00 00 00 00	 call	 ?GetBuffData@CBuffEffect@@QAEPAUBUFF_EFFECT_DATA@@E@Z ; CBuffEffect::GetBuffData
  0073d	89 45 f8	 mov	 DWORD PTR _pEffect$[ebp], eax

; 277  : 
; 278  : 	return pEffect->btClearType;

  00740	8b 45 f8	 mov	 eax, DWORD PTR _pEffect$[ebp]
  00743	0f b6 40 1a	 movzx	 eax, BYTE PTR [eax+26]
$LN2@GetBuffCle:

; 279  : }

  00747	5f		 pop	 edi
  00748	5e		 pop	 esi
  00749	5b		 pop	 ebx
  0074a	8b e5		 mov	 esp, ebp
  0074c	5d		 pop	 ebp
  0074d	c2 04 00	 ret	 4
?GetBuffClearType@CBuffManager@@QAEHE@Z ENDP		; CBuffManager::GetBuffClearType
_TEXT	ENDS
PUBLIC	?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z	; gObjRemoveBuffEffect
PUBLIC	?gObjBuffEffectUseProc@@YAXPAUOBJECTSTRUCT@@@Z	; gObjBuffEffectUseProc
EXTRN	?SetDamageType@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z:PROC ; CViewportSkillState::SetDamageType
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv91 = -72						; size = 4
_i$219985 = -4						; size = 4
_lpObj$ = 8						; size = 4
?gObjBuffEffectUseProc@@YAXPAUOBJECTSTRUCT@@@Z PROC	; gObjBuffEffectUseProc

; 283  : {

  00750	55		 push	 ebp
  00751	8b ec		 mov	 ebp, esp
  00753	83 ec 48	 sub	 esp, 72			; 00000048H
  00756	53		 push	 ebx
  00757	56		 push	 esi
  00758	57		 push	 edi

; 284  : 	if(lpObj == NULL)

  00759	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  0075d	75 05		 jne	 SHORT $LN17@gObjBuffEf

; 285  : 	{
; 286  : 		return;

  0075f	e9 de 01 00 00	 jmp	 $LN18@gObjBuffEf
$LN17@gObjBuffEf:

; 287  : 	}
; 288  : 
; 289  : 	if(lpObj->m_Index < 0 || lpObj->m_Index > OBJMAX)

  00764	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00767	83 38 00	 cmp	 DWORD PTR [eax], 0
  0076a	7c 0b		 jl	 SHORT $LN15@gObjBuffEf
  0076c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0076f	81 38 98 3a 00
	00		 cmp	 DWORD PTR [eax], 15000	; 00003a98H
  00775	7e 05		 jle	 SHORT $LN16@gObjBuffEf
$LN15@gObjBuffEf:

; 290  : 	{
; 291  : 		return;

  00777	e9 c6 01 00 00	 jmp	 $LN18@gObjBuffEf
$LN16@gObjBuffEf:

; 292  : 	}
; 293  : 
; 294  : 	if( (lpObj->Type == OBJ_USER && lpObj->Connected >= PLAYER_PLAYING) || lpObj->Type == OBJ_MONSTER) //Connected Users or Monsters General

  0077c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0077f	0f b7 48 68	 movzx	 ecx, WORD PTR [eax+104]
  00783	83 f9 01	 cmp	 ecx, 1
  00786	75 09		 jne	 SHORT $LN12@gObjBuffEf
  00788	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0078b	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  0078f	7d 10		 jge	 SHORT $LN13@gObjBuffEf
$LN12@gObjBuffEf:
  00791	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00794	0f b7 48 68	 movzx	 ecx, WORD PTR [eax+104]
  00798	83 f9 02	 cmp	 ecx, 2
  0079b	0f 85 a1 01 00
	00		 jne	 $LN18@gObjBuffEf
$LN13@gObjBuffEf:

; 295  : 	{
; 296  : 		for(int i = 0; i < MAX_STATE_COUNT; i++)

  007a1	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$219985[ebp], 0
  007a8	eb 09		 jmp	 SHORT $LN11@gObjBuffEf
$LN10@gObjBuffEf:
  007aa	8b 45 fc	 mov	 eax, DWORD PTR _i$219985[ebp]
  007ad	83 c0 01	 add	 eax, 1
  007b0	89 45 fc	 mov	 DWORD PTR _i$219985[ebp], eax
$LN11@gObjBuffEf:
  007b3	83 7d fc 10	 cmp	 DWORD PTR _i$219985[ebp], 16 ; 00000010H
  007b7	0f 8d 85 01 00
	00		 jge	 $LN18@gObjBuffEf

; 297  : 		{
; 298  : 			if(lpObj->m_BuffEffectState[i].iDuration == -10) //Infinite Buff

  007bd	8b 45 fc	 mov	 eax, DWORD PTR _i$219985[ebp]
  007c0	6b c0 14	 imul	 eax, 20			; 00000014H
  007c3	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  007c6	83 bc 01 38 02
	00 00 f6	 cmp	 DWORD PTR [ecx+eax+568], -10 ; fffffff6H
  007ce	75 02		 jne	 SHORT $LN8@gObjBuffEf

; 299  : 			{
; 300  : 				continue;

  007d0	eb d8		 jmp	 SHORT $LN10@gObjBuffEf
$LN8@gObjBuffEf:

; 301  : 			}
; 302  : 
; 303  : 			if(lpObj->m_BuffEffectState[i].btBuffIndex == NULL) //No Buff in the Slot

  007d2	8b 45 fc	 mov	 eax, DWORD PTR _i$219985[ebp]
  007d5	6b c0 14	 imul	 eax, 20			; 00000014H
  007d8	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  007db	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  007e3	85 d2		 test	 edx, edx
  007e5	75 02		 jne	 SHORT $LN7@gObjBuffEf

; 304  : 			{
; 305  : 				continue;

  007e7	eb c1		 jmp	 SHORT $LN10@gObjBuffEf
$LN7@gObjBuffEf:

; 306  : 			}
; 307  : 
; 308  : 			switch(lpObj->m_BuffEffectState[i].btBuffIndex)

  007e9	8b 45 fc	 mov	 eax, DWORD PTR _i$219985[ebp]
  007ec	6b c0 14	 imul	 eax, 20			; 00000014H
  007ef	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  007f2	8a 94 01 28 02
	00 00		 mov	 dl, BYTE PTR [ecx+eax+552]
  007f9	88 55 b8	 mov	 BYTE PTR tv91[ebp], dl
  007fc	80 7d b8 37	 cmp	 BYTE PTR tv91[ebp], 55	; 00000037H
  00800	74 05		 je	 SHORT $LN4@gObjBuffEf
  00802	e9 80 00 00 00	 jmp	 $LN2@gObjBuffEf
$LN4@gObjBuffEf:

; 309  : 			{
; 310  : 			case AT_POISON: //55	27	255	255	Poison	1	1	1	Poisoned status of condition
; 311  : 				{
; 312  : 					if((lpObj->m_BuffEffectState[i].iDuration % 3) == 0) //Rand type??

  00807	8b 45 fc	 mov	 eax, DWORD PTR _i$219985[ebp]
  0080a	6b c0 14	 imul	 eax, 20			; 00000014H
  0080d	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00810	8b 84 01 38 02
	00 00		 mov	 eax, DWORD PTR [ecx+eax+568]
  00817	99		 cdq
  00818	b9 03 00 00 00	 mov	 ecx, 3
  0081d	f7 f9		 idiv	 ecx
  0081f	85 d2		 test	 edx, edx
  00821	75 62		 jne	 SHORT $LN3@gObjBuffEf

; 313  : 					{
; 314  : 						g_ViewportSkillState.SetDamageType(lpObj, lpObj->m_BuffEffectState[i].btEffectType1, lpObj->m_BuffEffectState[i].iValue1);

  00823	8b 45 fc	 mov	 eax, DWORD PTR _i$219985[ebp]
  00826	6b c0 14	 imul	 eax, 20			; 00000014H
  00829	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0082c	8b 94 01 2c 02
	00 00		 mov	 edx, DWORD PTR [ecx+eax+556]
  00833	52		 push	 edx
  00834	8b 45 fc	 mov	 eax, DWORD PTR _i$219985[ebp]
  00837	6b c0 14	 imul	 eax, 20			; 00000014H
  0083a	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0083d	0f b6 94 01 2a
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+554]
  00845	52		 push	 edx
  00846	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00849	50		 push	 eax
  0084a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ViewportSkillState@@3VCViewportSkillState@@A ; g_ViewportSkillState
  0084f	e8 00 00 00 00	 call	 ?SetDamageType@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z ; CViewportSkillState::SetDamageType

; 315  : 						g_ViewportSkillState.SetDamageType(lpObj, lpObj->m_BuffEffectState[i].btEffectType2, lpObj->m_BuffEffectState[i].iValue2);

  00854	8b 45 fc	 mov	 eax, DWORD PTR _i$219985[ebp]
  00857	6b c0 14	 imul	 eax, 20			; 00000014H
  0085a	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0085d	8b 94 01 30 02
	00 00		 mov	 edx, DWORD PTR [ecx+eax+560]
  00864	52		 push	 edx
  00865	8b 45 fc	 mov	 eax, DWORD PTR _i$219985[ebp]
  00868	6b c0 14	 imul	 eax, 20			; 00000014H
  0086b	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0086e	0f b6 94 01 2b
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+555]
  00876	52		 push	 edx
  00877	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0087a	50		 push	 eax
  0087b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ViewportSkillState@@3VCViewportSkillState@@A ; g_ViewportSkillState
  00880	e8 00 00 00 00	 call	 ?SetDamageType@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z ; CViewportSkillState::SetDamageType
$LN3@gObjBuffEf:

; 316  : 					}
; 317  : 				}
; 318  : 				break;

  00885	eb 62		 jmp	 SHORT $LN5@gObjBuffEf
$LN2@gObjBuffEf:

; 319  : 			default:
; 320  : 				{
; 321  : 					g_ViewportSkillState.SetDamageType(lpObj, lpObj->m_BuffEffectState[i].btEffectType1, lpObj->m_BuffEffectState[i].iValue1);

  00887	8b 45 fc	 mov	 eax, DWORD PTR _i$219985[ebp]
  0088a	6b c0 14	 imul	 eax, 20			; 00000014H
  0088d	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00890	8b 94 01 2c 02
	00 00		 mov	 edx, DWORD PTR [ecx+eax+556]
  00897	52		 push	 edx
  00898	8b 45 fc	 mov	 eax, DWORD PTR _i$219985[ebp]
  0089b	6b c0 14	 imul	 eax, 20			; 00000014H
  0089e	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  008a1	0f b6 94 01 2a
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+554]
  008a9	52		 push	 edx
  008aa	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  008ad	50		 push	 eax
  008ae	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ViewportSkillState@@3VCViewportSkillState@@A ; g_ViewportSkillState
  008b3	e8 00 00 00 00	 call	 ?SetDamageType@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z ; CViewportSkillState::SetDamageType

; 322  : 					g_ViewportSkillState.SetDamageType(lpObj, lpObj->m_BuffEffectState[i].btEffectType2, lpObj->m_BuffEffectState[i].iValue2);

  008b8	8b 45 fc	 mov	 eax, DWORD PTR _i$219985[ebp]
  008bb	6b c0 14	 imul	 eax, 20			; 00000014H
  008be	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  008c1	8b 94 01 30 02
	00 00		 mov	 edx, DWORD PTR [ecx+eax+560]
  008c8	52		 push	 edx
  008c9	8b 45 fc	 mov	 eax, DWORD PTR _i$219985[ebp]
  008cc	6b c0 14	 imul	 eax, 20			; 00000014H
  008cf	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  008d2	0f b6 94 01 2b
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+555]
  008da	52		 push	 edx
  008db	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  008de	50		 push	 eax
  008df	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ViewportSkillState@@3VCViewportSkillState@@A ; g_ViewportSkillState
  008e4	e8 00 00 00 00	 call	 ?SetDamageType@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z ; CViewportSkillState::SetDamageType
$LN5@gObjBuffEf:

; 323  : 				}
; 324  : 				break;
; 325  : 			}
; 326  : 			
; 327  : 			lpObj->m_BuffEffectState[i].iDuration--; //Reduce Time per Second

  008e9	8b 45 fc	 mov	 eax, DWORD PTR _i$219985[ebp]
  008ec	6b c0 14	 imul	 eax, 20			; 00000014H
  008ef	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  008f2	8b 94 01 38 02
	00 00		 mov	 edx, DWORD PTR [ecx+eax+568]
  008f9	83 ea 01	 sub	 edx, 1
  008fc	8b 45 fc	 mov	 eax, DWORD PTR _i$219985[ebp]
  008ff	6b c0 14	 imul	 eax, 20			; 00000014H
  00902	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00905	89 94 01 38 02
	00 00		 mov	 DWORD PTR [ecx+eax+568], edx

; 328  : 
; 329  : 			if(lpObj->m_BuffEffectState[i].iDuration <= 0) //Clear if Zero!

  0090c	8b 45 fc	 mov	 eax, DWORD PTR _i$219985[ebp]
  0090f	6b c0 14	 imul	 eax, 20			; 00000014H
  00912	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00915	83 bc 01 38 02
	00 00 00	 cmp	 DWORD PTR [ecx+eax+568], 0
  0091d	7f 1e		 jg	 SHORT $LN1@gObjBuffEf

; 330  : 			{
; 331  : 				gObjRemoveBuffEffect(lpObj, lpObj->m_BuffEffectState[i].btBuffIndex);

  0091f	8b 45 fc	 mov	 eax, DWORD PTR _i$219985[ebp]
  00922	6b c0 14	 imul	 eax, 20			; 00000014H
  00925	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00928	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  00930	52		 push	 edx
  00931	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00934	50		 push	 eax
  00935	e8 00 00 00 00	 call	 ?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjRemoveBuffEffect
  0093a	83 c4 08	 add	 esp, 8
$LN1@gObjBuffEf:

; 332  : 			}
; 333  : 		}

  0093d	e9 68 fe ff ff	 jmp	 $LN10@gObjBuffEf
$LN18@gObjBuffEf:

; 334  : 	}
; 335  : }

  00942	5f		 pop	 edi
  00943	5e		 pop	 esi
  00944	5b		 pop	 ebx
  00945	8b e5		 mov	 esp, ebp
  00947	5d		 pop	 ebp
  00948	c3		 ret	 0
?gObjBuffEffectUseProc@@YAXPAUOBJECTSTRUCT@@@Z ENDP	; gObjBuffEffectUseProc
_TEXT	ENDS
PUBLIC	?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z	; GCUseBuffEffect
PUBLIC	?gObjSetItemEffect@@YAEPAUOBJECTSTRUCT@@H@Z	; gObjSetItemEffect
EXTRN	?SearchItemEffectType1@CItemAddOption@@QAEPAUITEMEFFECT@@H@Z:PROC ; CItemAddOption::SearchItemEffectType1
EXTRN	?SearchForClearItemEffect@CItemAddOption@@QAEEH@Z:PROC ; CItemAddOption::SearchForClearItemEffect
EXTRN	?g_ItemAddOption@@3VCItemAddOption@@A:BYTE	; g_ItemAddOption
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_InsertEffectResult$ = -16				; size = 4
_pEffect$ = -12						; size = 4
_lpItemEffect$ = -8					; size = 4
_iEffectOption$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
?gObjSetItemEffect@@YAEPAUOBJECTSTRUCT@@H@Z PROC	; gObjSetItemEffect

; 339  : {

  00950	55		 push	 ebp
  00951	8b ec		 mov	 ebp, esp
  00953	83 ec 50	 sub	 esp, 80			; 00000050H
  00956	53		 push	 ebx
  00957	56		 push	 esi
  00958	57		 push	 edi

; 340  : 	if(lpObj == NULL)

  00959	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  0095d	75 07		 jne	 SHORT $LN8@gObjSetIte

; 341  : 	{
; 342  : 		return 0;

  0095f	32 c0		 xor	 al, al
  00961	e9 41 01 00 00	 jmp	 $LN9@gObjSetIte
$LN8@gObjSetIte:

; 343  : 	}
; 344  : 
; 345  : 	if(lpObj->m_Index < 0 || lpObj->m_Index > OBJMAX)

  00966	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00969	83 38 00	 cmp	 DWORD PTR [eax], 0
  0096c	7c 0b		 jl	 SHORT $LN6@gObjSetIte
  0096e	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00971	81 38 98 3a 00
	00		 cmp	 DWORD PTR [eax], 15000	; 00003a98H
  00977	7e 07		 jle	 SHORT $LN7@gObjSetIte
$LN6@gObjSetIte:

; 346  : 	{
; 347  : 		return 0;

  00979	32 c0		 xor	 al, al
  0097b	e9 27 01 00 00	 jmp	 $LN9@gObjSetIte
$LN7@gObjSetIte:

; 348  : 	}
; 349  : 
; 350  : 	int iEffectOption = 0; //loc1

  00980	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _iEffectOption$[ebp], 0

; 351  : 	LPITEMEFFECT lpItemEffect = NULL; //loc2

  00987	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _lpItemEffect$[ebp], 0

; 352  : 	LPBUFF_EFFECT_DATA pEffect = NULL; //loc3

  0098e	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pEffect$[ebp], 0

; 353  : 
; 354  : 	pEffect = g_BuffManager.GetBuffInfo(iEffectIndex);

  00995	8b 45 0c	 mov	 eax, DWORD PTR _iEffectIndex$[ebp]
  00998	50		 push	 eax
  00999	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  0099e	e8 00 00 00 00	 call	 ?GetBuffInfo@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@H@Z ; CBuffManager::GetBuffInfo
  009a3	89 45 f4	 mov	 DWORD PTR _pEffect$[ebp], eax

; 355  : 
; 356  : 	if(pEffect == NULL)

  009a6	83 7d f4 00	 cmp	 DWORD PTR _pEffect$[ebp], 0
  009aa	75 07		 jne	 SHORT $LN5@gObjSetIte

; 357  : 	{
; 358  : 		return 0;

  009ac	32 c0		 xor	 al, al
  009ae	e9 f4 00 00 00	 jmp	 $LN9@gObjSetIte
$LN5@gObjSetIte:

; 359  : 	}
; 360  : 
; 361  : 	iEffectOption = (pEffect->btItemType << 9) + pEffect->btItemIndex;

  009b3	8b 45 f4	 mov	 eax, DWORD PTR _pEffect$[ebp]
  009b6	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  009ba	c1 e1 09	 shl	 ecx, 9
  009bd	8b 55 f4	 mov	 edx, DWORD PTR _pEffect$[ebp]
  009c0	0f b6 42 03	 movzx	 eax, BYTE PTR [edx+3]
  009c4	03 c8		 add	 ecx, eax
  009c6	89 4d fc	 mov	 DWORD PTR _iEffectOption$[ebp], ecx

; 362  : 
; 363  : #ifdef DEBUG_CODE
; 364  : 	LogAddC(1,"Type: %d, Index: %d iEffectOption: %d",pEffect->btItemType,pEffect->btItemIndex,iEffectOption);
; 365  : #endif
; 366  : 
; 367  : 	if(g_ItemAddOption.SearchForClearItemEffect(iEffectOption) == FALSE)

  009c9	8b 45 fc	 mov	 eax, DWORD PTR _iEffectOption$[ebp]
  009cc	50		 push	 eax
  009cd	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ItemAddOption@@3VCItemAddOption@@A ; g_ItemAddOption
  009d2	e8 00 00 00 00	 call	 ?SearchForClearItemEffect@CItemAddOption@@QAEEH@Z ; CItemAddOption::SearchForClearItemEffect
  009d7	0f b6 c8	 movzx	 ecx, al
  009da	85 c9		 test	 ecx, ecx
  009dc	75 07		 jne	 SHORT $LN4@gObjSetIte

; 368  : 	{
; 369  : 		return 0;

  009de	32 c0		 xor	 al, al
  009e0	e9 c2 00 00 00	 jmp	 $LN9@gObjSetIte
$LN4@gObjSetIte:

; 370  : 	}
; 371  : 
; 372  : 	lpItemEffect = g_ItemAddOption.SearchItemEffectType1(iEffectOption);

  009e5	8b 45 fc	 mov	 eax, DWORD PTR _iEffectOption$[ebp]
  009e8	50		 push	 eax
  009e9	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ItemAddOption@@3VCItemAddOption@@A ; g_ItemAddOption
  009ee	e8 00 00 00 00	 call	 ?SearchItemEffectType1@CItemAddOption@@QAEPAUITEMEFFECT@@H@Z ; CItemAddOption::SearchItemEffectType1
  009f3	89 45 f8	 mov	 DWORD PTR _lpItemEffect$[ebp], eax

; 373  : 
; 374  : 	int InsertEffectResult = 0; //loc4

  009f6	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _InsertEffectResult$[ebp], 0

; 375  : 
; 376  : 	InsertEffectResult = g_BuffManager.InsertEffect(lpObj, iEffectIndex, lpItemEffect->wEffectType1, lpItemEffect->wEffectType2, lpItemEffect->iEffectValue1, lpItemEffect->iEffectValue2, lpItemEffect->iEffectValidTime);

  009fd	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00a00	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00a03	51		 push	 ecx
  00a04	8b 55 f8	 mov	 edx, DWORD PTR _lpItemEffect$[ebp]
  00a07	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00a0a	50		 push	 eax
  00a0b	8b 4d f8	 mov	 ecx, DWORD PTR _lpItemEffect$[ebp]
  00a0e	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00a11	52		 push	 edx
  00a12	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00a15	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00a19	51		 push	 ecx
  00a1a	8b 55 f8	 mov	 edx, DWORD PTR _lpItemEffect$[ebp]
  00a1d	0f b6 42 02	 movzx	 eax, BYTE PTR [edx+2]
  00a21	50		 push	 eax
  00a22	8b 4d 0c	 mov	 ecx, DWORD PTR _iEffectIndex$[ebp]
  00a25	51		 push	 ecx
  00a26	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00a29	52		 push	 edx
  00a2a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  00a2f	e8 00 00 00 00	 call	 ?InsertEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@HEEHHH@Z ; CBuffManager::InsertEffect
  00a34	89 45 f0	 mov	 DWORD PTR _InsertEffectResult$[ebp], eax

; 377  : 
; 378  : 	if(InsertEffectResult != -1)

  00a37	83 7d f0 ff	 cmp	 DWORD PTR _InsertEffectResult$[ebp], -1
  00a3b	74 68		 je	 SHORT $LN3@gObjSetIte

; 379  : 	{
; 380  : 		if(InsertEffectResult > 0)

  00a3d	83 7d f0 00	 cmp	 DWORD PTR _InsertEffectResult$[ebp], 0
  00a41	7e 20		 jle	 SHORT $LN2@gObjSetIte

; 381  : 		{
; 382  : 			GCUseBuffEffect(lpObj, InsertEffectResult, 2, lpItemEffect->wOptionType, 0, 0);

  00a43	6a 00		 push	 0
  00a45	6a 00		 push	 0
  00a47	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00a4a	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00a4d	51		 push	 ecx
  00a4e	6a 02		 push	 2
  00a50	0f b6 55 f0	 movzx	 edx, BYTE PTR _InsertEffectResult$[ebp]
  00a54	52		 push	 edx
  00a55	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00a58	50		 push	 eax
  00a59	e8 00 00 00 00	 call	 ?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z ; GCUseBuffEffect
  00a5e	83 c4 18	 add	 esp, 24			; 00000018H

; 383  : 		}
; 384  : 		else

  00a61	eb 15		 jmp	 SHORT $LN1@gObjSetIte
$LN2@gObjSetIte:

; 385  : 		{
; 386  : 			lpObj->m_btViewStateCount++;

  00a63	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00a66	8a 88 27 02 00
	00		 mov	 cl, BYTE PTR [eax+551]
  00a6c	80 c1 01	 add	 cl, 1
  00a6f	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00a72	88 8a 27 02 00
	00		 mov	 BYTE PTR [edx+551], cl
$LN1@gObjSetIte:

; 387  : 		}
; 388  : 
; 389  : 		GCUseBuffEffect(lpObj, iEffectIndex, 0, lpItemEffect->wOptionType, lpItemEffect->wEffectType1, lpItemEffect->iEffectValidTime);

  00a78	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00a7b	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00a7e	51		 push	 ecx
  00a7f	8b 55 f8	 mov	 edx, DWORD PTR _lpItemEffect$[ebp]
  00a82	0f b7 42 02	 movzx	 eax, WORD PTR [edx+2]
  00a86	50		 push	 eax
  00a87	8b 4d f8	 mov	 ecx, DWORD PTR _lpItemEffect$[ebp]
  00a8a	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00a8d	52		 push	 edx
  00a8e	6a 00		 push	 0
  00a90	0f b6 45 0c	 movzx	 eax, BYTE PTR _iEffectIndex$[ebp]
  00a94	50		 push	 eax
  00a95	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00a98	51		 push	 ecx
  00a99	e8 00 00 00 00	 call	 ?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z ; GCUseBuffEffect
  00a9e	83 c4 18	 add	 esp, 24			; 00000018H

; 390  : 		return 1;

  00aa1	b0 01		 mov	 al, 1
  00aa3	eb 02		 jmp	 SHORT $LN9@gObjSetIte
$LN3@gObjSetIte:

; 391  : 	}
; 392  : 	
; 393  : 	return 0;

  00aa5	32 c0		 xor	 al, al
$LN9@gObjSetIte:

; 394  : }

  00aa7	5f		 pop	 edi
  00aa8	5e		 pop	 esi
  00aa9	5b		 pop	 ebx
  00aaa	8b e5		 mov	 esp, ebp
  00aac	5d		 pop	 ebp
  00aad	c3		 ret	 0
?gObjSetItemEffect@@YAEPAUOBJECTSTRUCT@@H@Z ENDP	; gObjSetItemEffect
_TEXT	ENDS
PUBLIC	?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_InsertEffectResult$ = -8				; size = 4
_pEffect$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
_btEffectType1$ = 16					; size = 1
_iValue1$ = 20						; size = 4
_btEffectType2$ = 24					; size = 1
_iValue2$ = 28						; size = 4
_iDuration$ = 32					; size = 4
?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z PROC ; gObjApplyBuffEffectDuration

; 398  : {

  00ab0	55		 push	 ebp
  00ab1	8b ec		 mov	 ebp, esp
  00ab3	83 ec 48	 sub	 esp, 72			; 00000048H
  00ab6	53		 push	 ebx
  00ab7	56		 push	 esi
  00ab8	57		 push	 edi

; 399  : 	if(lpObj == NULL)

  00ab9	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  00abd	75 07		 jne	 SHORT $LN6@gObjApplyB

; 400  : 	{
; 401  : 		return 0;

  00abf	32 c0		 xor	 al, al
  00ac1	e9 dc 00 00 00	 jmp	 $LN7@gObjApplyB
$LN6@gObjApplyB:

; 402  : 	}
; 403  : 
; 404  : 	if(lpObj->m_Index < 0 || lpObj->m_Index > OBJMAX)

  00ac6	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00ac9	83 38 00	 cmp	 DWORD PTR [eax], 0
  00acc	7c 0b		 jl	 SHORT $LN4@gObjApplyB
  00ace	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00ad1	81 38 98 3a 00
	00		 cmp	 DWORD PTR [eax], 15000	; 00003a98H
  00ad7	7e 07		 jle	 SHORT $LN5@gObjApplyB
$LN4@gObjApplyB:

; 405  : 	{
; 406  : 		return 0;

  00ad9	32 c0		 xor	 al, al
  00adb	e9 c2 00 00 00	 jmp	 $LN7@gObjApplyB
$LN5@gObjApplyB:

; 407  : 	}
; 408  : 
; 409  : 	LPBUFF_EFFECT_DATA pEffect = NULL; //loc1

  00ae0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pEffect$[ebp], 0

; 410  : 
; 411  : 	pEffect = g_BuffManager.GetBuffInfo(iEffectIndex);

  00ae7	8b 45 0c	 mov	 eax, DWORD PTR _iEffectIndex$[ebp]
  00aea	50		 push	 eax
  00aeb	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  00af0	e8 00 00 00 00	 call	 ?GetBuffInfo@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@H@Z ; CBuffManager::GetBuffInfo
  00af5	89 45 fc	 mov	 DWORD PTR _pEffect$[ebp], eax

; 412  : 
; 413  : 	int InsertEffectResult = 0; //loc2

  00af8	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _InsertEffectResult$[ebp], 0

; 414  : 
; 415  : 	InsertEffectResult = g_BuffManager.InsertEffect(lpObj, iEffectIndex, btEffectType1, btEffectType2, iValue1, iValue2, iDuration);

  00aff	8b 45 20	 mov	 eax, DWORD PTR _iDuration$[ebp]
  00b02	50		 push	 eax
  00b03	8b 4d 1c	 mov	 ecx, DWORD PTR _iValue2$[ebp]
  00b06	51		 push	 ecx
  00b07	8b 55 14	 mov	 edx, DWORD PTR _iValue1$[ebp]
  00b0a	52		 push	 edx
  00b0b	0f b6 45 18	 movzx	 eax, BYTE PTR _btEffectType2$[ebp]
  00b0f	50		 push	 eax
  00b10	0f b6 4d 10	 movzx	 ecx, BYTE PTR _btEffectType1$[ebp]
  00b14	51		 push	 ecx
  00b15	8b 55 0c	 mov	 edx, DWORD PTR _iEffectIndex$[ebp]
  00b18	52		 push	 edx
  00b19	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00b1c	50		 push	 eax
  00b1d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  00b22	e8 00 00 00 00	 call	 ?InsertEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@HEEHHH@Z ; CBuffManager::InsertEffect
  00b27	89 45 f8	 mov	 DWORD PTR _InsertEffectResult$[ebp], eax

; 416  : 
; 417  : 	if(InsertEffectResult != -1)

  00b2a	83 7d f8 ff	 cmp	 DWORD PTR _InsertEffectResult$[ebp], -1
  00b2e	74 70		 je	 SHORT $LN3@gObjApplyB

; 418  : 	{
; 419  : 		if(InsertEffectResult > 0)

  00b30	83 7d f8 00	 cmp	 DWORD PTR _InsertEffectResult$[ebp], 0
  00b34	7e 25		 jle	 SHORT $LN2@gObjApplyB

; 420  : 		{
; 421  : 			GCUseBuffEffect(lpObj, InsertEffectResult, 2, pEffect->btViewPortIndex, 0, 0);

  00b36	6a 00		 push	 0
  00b38	6a 00		 push	 0
  00b3a	8b 45 fc	 mov	 eax, DWORD PTR _pEffect$[ebp]
  00b3d	66 0f b6 48 01	 movzx	 cx, BYTE PTR [eax+1]
  00b42	0f b7 d1	 movzx	 edx, cx
  00b45	52		 push	 edx
  00b46	6a 02		 push	 2
  00b48	0f b6 45 f8	 movzx	 eax, BYTE PTR _InsertEffectResult$[ebp]
  00b4c	50		 push	 eax
  00b4d	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00b50	51		 push	 ecx
  00b51	e8 00 00 00 00	 call	 ?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z ; GCUseBuffEffect
  00b56	83 c4 18	 add	 esp, 24			; 00000018H

; 422  : 		}
; 423  : 		else

  00b59	eb 15		 jmp	 SHORT $LN1@gObjApplyB
$LN2@gObjApplyB:

; 424  : 		{
; 425  : 			lpObj->m_btViewStateCount++;

  00b5b	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00b5e	8a 88 27 02 00
	00		 mov	 cl, BYTE PTR [eax+551]
  00b64	80 c1 01	 add	 cl, 1
  00b67	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00b6a	88 8a 27 02 00
	00		 mov	 BYTE PTR [edx+551], cl
$LN1@gObjApplyB:

; 426  : 		}
; 427  : 
; 428  : 		GCUseBuffEffect(lpObj, iEffectIndex, 0, pEffect->btViewPortIndex, btEffectType1, iDuration);

  00b70	8b 45 20	 mov	 eax, DWORD PTR _iDuration$[ebp]
  00b73	50		 push	 eax
  00b74	66 0f b6 4d 10	 movzx	 cx, BYTE PTR _btEffectType1$[ebp]
  00b79	0f b7 d1	 movzx	 edx, cx
  00b7c	52		 push	 edx
  00b7d	8b 45 fc	 mov	 eax, DWORD PTR _pEffect$[ebp]
  00b80	66 0f b6 48 01	 movzx	 cx, BYTE PTR [eax+1]
  00b85	0f b7 d1	 movzx	 edx, cx
  00b88	52		 push	 edx
  00b89	6a 00		 push	 0
  00b8b	0f b6 45 0c	 movzx	 eax, BYTE PTR _iEffectIndex$[ebp]
  00b8f	50		 push	 eax
  00b90	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00b93	51		 push	 ecx
  00b94	e8 00 00 00 00	 call	 ?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z ; GCUseBuffEffect
  00b99	83 c4 18	 add	 esp, 24			; 00000018H

; 429  : #if(DEBUG_BUFF_EFFECT == 1)
; 430  : 	char szTemp[256];
; 431  : 	sprintf(szTemp, "[BUFFMANAGER] Insert Common-Buff Name %s Effect1[%d] Value1[%d] Effect2[%d] Value2[%d] Dur[%d]", pEffect->szBuffName, btEffectType1, iValue1, btEffectType2, iValue2, iDuration);
; 432  : 	LogAddTD(szTemp);
; 433  : 
; 434  : 	switch(lpObj->Type)
; 435  : 	{
; 436  : 	case OBJ_USER:
; 437  : 		GCServerMsgStringSend(szTemp, lpObj->m_Index, 1);
; 438  : 		break;
; 439  : 	case OBJ_MONSTER:
; 440  : 	case OBJ_NPC:
; 441  : 		GCServerMsgStringSend(szTemp, lpObj->lpAttackObj->m_Index, 1);
; 442  : 		break;
; 443  : 	}
; 444  : #endif
; 445  : 		return 1;

  00b9c	b0 01		 mov	 al, 1
  00b9e	eb 02		 jmp	 SHORT $LN7@gObjApplyB
$LN3@gObjApplyB:

; 446  : 	}
; 447  : 
; 448  : 	return 0;

  00ba0	32 c0		 xor	 al, al
$LN7@gObjApplyB:

; 449  : }

  00ba2	5f		 pop	 edi
  00ba3	5e		 pop	 esi
  00ba4	5b		 pop	 ebx
  00ba5	8b e5		 mov	 esp, ebp
  00ba7	5d		 pop	 ebp
  00ba8	c3		 ret	 0
?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ENDP ; gObjApplyBuffEffectDuration
_TEXT	ENDS
PUBLIC	?gObjApplyBuffEffectItemPeriod@@YAEPAUOBJECTSTRUCT@@HH@Z ; gObjApplyBuffEffectItemPeriod
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_InsertEffectResult$ = -16				; size = 4
_pEffect$ = -12						; size = 4
_lpItemEffect$ = -8					; size = 4
_iEffectOption$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
_iDuration$ = 16					; size = 4
?gObjApplyBuffEffectItemPeriod@@YAEPAUOBJECTSTRUCT@@HH@Z PROC ; gObjApplyBuffEffectItemPeriod

; 453  : {

  00bb0	55		 push	 ebp
  00bb1	8b ec		 mov	 ebp, esp
  00bb3	83 ec 50	 sub	 esp, 80			; 00000050H
  00bb6	53		 push	 ebx
  00bb7	56		 push	 esi
  00bb8	57		 push	 edi

; 454  : 	if(lpObj == NULL)

  00bb9	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  00bbd	75 07		 jne	 SHORT $LN8@gObjApplyB@2

; 455  : 	{
; 456  : 		return 0;

  00bbf	32 c0		 xor	 al, al
  00bc1	e9 3b 01 00 00	 jmp	 $LN9@gObjApplyB@2
$LN8@gObjApplyB@2:

; 457  : 	}
; 458  : 
; 459  : 	if(lpObj->m_Index < 0 || lpObj->m_Index > OBJMAX)

  00bc6	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00bc9	83 38 00	 cmp	 DWORD PTR [eax], 0
  00bcc	7c 0b		 jl	 SHORT $LN6@gObjApplyB@2
  00bce	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00bd1	81 38 98 3a 00
	00		 cmp	 DWORD PTR [eax], 15000	; 00003a98H
  00bd7	7e 07		 jle	 SHORT $LN7@gObjApplyB@2
$LN6@gObjApplyB@2:

; 460  : 	{
; 461  : 		return 0;

  00bd9	32 c0		 xor	 al, al
  00bdb	e9 21 01 00 00	 jmp	 $LN9@gObjApplyB@2
$LN7@gObjApplyB@2:

; 462  : 	}
; 463  : 
; 464  : 	int iEffectOption = 0; //loc1

  00be0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _iEffectOption$[ebp], 0

; 465  : 	LPITEMEFFECT lpItemEffect = NULL; //loc2

  00be7	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _lpItemEffect$[ebp], 0

; 466  : 	LPBUFF_EFFECT_DATA pEffect = NULL; //loc3

  00bee	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pEffect$[ebp], 0

; 467  : 
; 468  : 	pEffect = g_BuffManager.GetBuffInfo(iEffectIndex);

  00bf5	8b 45 0c	 mov	 eax, DWORD PTR _iEffectIndex$[ebp]
  00bf8	50		 push	 eax
  00bf9	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  00bfe	e8 00 00 00 00	 call	 ?GetBuffInfo@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@H@Z ; CBuffManager::GetBuffInfo
  00c03	89 45 f4	 mov	 DWORD PTR _pEffect$[ebp], eax

; 469  : 
; 470  : 	if(pEffect == NULL)

  00c06	83 7d f4 00	 cmp	 DWORD PTR _pEffect$[ebp], 0
  00c0a	75 07		 jne	 SHORT $LN5@gObjApplyB@2

; 471  : 	{
; 472  : 		return 0;

  00c0c	32 c0		 xor	 al, al
  00c0e	e9 ee 00 00 00	 jmp	 $LN9@gObjApplyB@2
$LN5@gObjApplyB@2:

; 473  : 	}
; 474  : 
; 475  : 	iEffectOption = (pEffect->btItemType << 9) + pEffect->btItemIndex;

  00c13	8b 45 f4	 mov	 eax, DWORD PTR _pEffect$[ebp]
  00c16	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  00c1a	c1 e1 09	 shl	 ecx, 9
  00c1d	8b 55 f4	 mov	 edx, DWORD PTR _pEffect$[ebp]
  00c20	0f b6 42 03	 movzx	 eax, BYTE PTR [edx+3]
  00c24	03 c8		 add	 ecx, eax
  00c26	89 4d fc	 mov	 DWORD PTR _iEffectOption$[ebp], ecx

; 476  : 
; 477  : 	if(g_ItemAddOption.SearchForClearItemEffect(iEffectOption) == FALSE)

  00c29	8b 45 fc	 mov	 eax, DWORD PTR _iEffectOption$[ebp]
  00c2c	50		 push	 eax
  00c2d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ItemAddOption@@3VCItemAddOption@@A ; g_ItemAddOption
  00c32	e8 00 00 00 00	 call	 ?SearchForClearItemEffect@CItemAddOption@@QAEEH@Z ; CItemAddOption::SearchForClearItemEffect
  00c37	0f b6 c8	 movzx	 ecx, al
  00c3a	85 c9		 test	 ecx, ecx
  00c3c	75 07		 jne	 SHORT $LN4@gObjApplyB@2

; 478  : 	{
; 479  : 		return 0;

  00c3e	32 c0		 xor	 al, al
  00c40	e9 bc 00 00 00	 jmp	 $LN9@gObjApplyB@2
$LN4@gObjApplyB@2:

; 480  : 	}
; 481  : 
; 482  : 	lpItemEffect = g_ItemAddOption.SearchItemEffectType1(iEffectOption);

  00c45	8b 45 fc	 mov	 eax, DWORD PTR _iEffectOption$[ebp]
  00c48	50		 push	 eax
  00c49	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ItemAddOption@@3VCItemAddOption@@A ; g_ItemAddOption
  00c4e	e8 00 00 00 00	 call	 ?SearchItemEffectType1@CItemAddOption@@QAEPAUITEMEFFECT@@H@Z ; CItemAddOption::SearchItemEffectType1
  00c53	89 45 f8	 mov	 DWORD PTR _lpItemEffect$[ebp], eax

; 483  : 
; 484  : 	int InsertEffectResult = 0; //loc4

  00c56	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _InsertEffectResult$[ebp], 0

; 485  : 
; 486  : 	InsertEffectResult = g_BuffManager.InsertEffect(lpObj, iEffectIndex, lpItemEffect->wEffectType1, lpItemEffect->wEffectType2, lpItemEffect->iEffectValue1, lpItemEffect->iEffectValue2, iDuration);

  00c5d	8b 45 10	 mov	 eax, DWORD PTR _iDuration$[ebp]
  00c60	50		 push	 eax
  00c61	8b 4d f8	 mov	 ecx, DWORD PTR _lpItemEffect$[ebp]
  00c64	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00c67	52		 push	 edx
  00c68	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00c6b	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00c6e	51		 push	 ecx
  00c6f	8b 55 f8	 mov	 edx, DWORD PTR _lpItemEffect$[ebp]
  00c72	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  00c76	50		 push	 eax
  00c77	8b 4d f8	 mov	 ecx, DWORD PTR _lpItemEffect$[ebp]
  00c7a	0f b6 51 02	 movzx	 edx, BYTE PTR [ecx+2]
  00c7e	52		 push	 edx
  00c7f	8b 45 0c	 mov	 eax, DWORD PTR _iEffectIndex$[ebp]
  00c82	50		 push	 eax
  00c83	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00c86	51		 push	 ecx
  00c87	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  00c8c	e8 00 00 00 00	 call	 ?InsertEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@HEEHHH@Z ; CBuffManager::InsertEffect
  00c91	89 45 f0	 mov	 DWORD PTR _InsertEffectResult$[ebp], eax

; 487  : 
; 488  : 	if(InsertEffectResult != -1)

  00c94	83 7d f0 ff	 cmp	 DWORD PTR _InsertEffectResult$[ebp], -1
  00c98	74 65		 je	 SHORT $LN3@gObjApplyB@2

; 489  : 	{
; 490  : 		if(InsertEffectResult > 0)

  00c9a	83 7d f0 00	 cmp	 DWORD PTR _InsertEffectResult$[ebp], 0
  00c9e	7e 20		 jle	 SHORT $LN2@gObjApplyB@2

; 491  : 		{
; 492  : 			GCUseBuffEffect(lpObj, InsertEffectResult, 2, lpItemEffect->wOptionType, 0, 0);

  00ca0	6a 00		 push	 0
  00ca2	6a 00		 push	 0
  00ca4	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00ca7	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00caa	51		 push	 ecx
  00cab	6a 02		 push	 2
  00cad	0f b6 55 f0	 movzx	 edx, BYTE PTR _InsertEffectResult$[ebp]
  00cb1	52		 push	 edx
  00cb2	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00cb5	50		 push	 eax
  00cb6	e8 00 00 00 00	 call	 ?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z ; GCUseBuffEffect
  00cbb	83 c4 18	 add	 esp, 24			; 00000018H

; 493  : 		}
; 494  : 		else

  00cbe	eb 15		 jmp	 SHORT $LN1@gObjApplyB@2
$LN2@gObjApplyB@2:

; 495  : 		{
; 496  : 			lpObj->m_btViewStateCount++;

  00cc0	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00cc3	8a 88 27 02 00
	00		 mov	 cl, BYTE PTR [eax+551]
  00cc9	80 c1 01	 add	 cl, 1
  00ccc	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00ccf	88 8a 27 02 00
	00		 mov	 BYTE PTR [edx+551], cl
$LN1@gObjApplyB@2:

; 497  : 		}
; 498  : 
; 499  : 		GCUseBuffEffect(lpObj, iEffectIndex, 0, lpItemEffect->wOptionType, lpItemEffect->wEffectType1, iDuration);

  00cd5	8b 45 10	 mov	 eax, DWORD PTR _iDuration$[ebp]
  00cd8	50		 push	 eax
  00cd9	8b 4d f8	 mov	 ecx, DWORD PTR _lpItemEffect$[ebp]
  00cdc	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00ce0	52		 push	 edx
  00ce1	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00ce4	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00ce7	51		 push	 ecx
  00ce8	6a 00		 push	 0
  00cea	0f b6 55 0c	 movzx	 edx, BYTE PTR _iEffectIndex$[ebp]
  00cee	52		 push	 edx
  00cef	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00cf2	50		 push	 eax
  00cf3	e8 00 00 00 00	 call	 ?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z ; GCUseBuffEffect
  00cf8	83 c4 18	 add	 esp, 24			; 00000018H

; 500  : #if(DEBUG_BUFF_EFFECT == 1)
; 501  : 	char szTemp[256];
; 502  : 	sprintf(szTemp, "[BUFFMANAGER] Insert CashShop-Buff Name %s ItemAddOption-IDX[%d] Effect1[%d] Value1[%d] Effect2[%d] Value2[%d] Dur[%d]", pEffect->szBuffName, iEffectOption, lpItemEffect->wEffectType1, lpItemEffect->iEffectValue1, lpItemEffect->wEffectType2, lpItemEffect->iEffectValue2, iDuration);
; 503  : 	LogAddTD(szTemp);
; 504  : 
; 505  : 	switch(lpObj->Type)
; 506  : 	{
; 507  : 	case OBJ_USER:
; 508  : 		GCServerMsgStringSend(szTemp, lpObj->m_Index, 1);
; 509  : 		break;
; 510  : 	case OBJ_MONSTER:
; 511  : 	case OBJ_NPC:
; 512  : 		GCServerMsgStringSend(szTemp, lpObj->lpAttackObj->m_Index, 1);
; 513  : 		break;
; 514  : 	}
; 515  : #endif
; 516  : 		return 1;

  00cfb	b0 01		 mov	 al, 1
  00cfd	eb 02		 jmp	 SHORT $LN9@gObjApplyB@2
$LN3@gObjApplyB@2:

; 517  : 	}
; 518  : 
; 519  : 	return 0;

  00cff	32 c0		 xor	 al, al
$LN9@gObjApplyB@2:

; 520  : }

  00d01	5f		 pop	 edi
  00d02	5e		 pop	 esi
  00d03	5b		 pop	 ebx
  00d04	8b e5		 mov	 esp, ebp
  00d06	5d		 pop	 ebp
  00d07	c3		 ret	 0
?gObjApplyBuffEffectItemPeriod@@YAEPAUOBJECTSTRUCT@@HH@Z ENDP ; gObjApplyBuffEffectItemPeriod
; Function compile flags: /Odtp /ZI
_pEffect$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z PROC	; gObjRemoveBuffEffect

; 524  : {

  00d10	55		 push	 ebp
  00d11	8b ec		 mov	 ebp, esp
  00d13	83 ec 44	 sub	 esp, 68			; 00000044H
  00d16	53		 push	 ebx
  00d17	56		 push	 esi
  00d18	57		 push	 edi

; 525  : 	if(lpObj == NULL)

  00d19	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  00d1d	75 07		 jne	 SHORT $LN5@gObjRemove

; 526  : 	{
; 527  : 		return 0;

  00d1f	32 c0		 xor	 al, al
  00d21	e9 a6 00 00 00	 jmp	 $LN6@gObjRemove
$LN5@gObjRemove:

; 528  : 	}
; 529  : 
; 530  : 	if(lpObj->m_Index < 0 || lpObj->m_Index > OBJMAX)

  00d26	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00d29	83 38 00	 cmp	 DWORD PTR [eax], 0
  00d2c	7c 0b		 jl	 SHORT $LN3@gObjRemove
  00d2e	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00d31	81 38 98 3a 00
	00		 cmp	 DWORD PTR [eax], 15000	; 00003a98H
  00d37	7e 07		 jle	 SHORT $LN4@gObjRemove
$LN3@gObjRemove:

; 531  : 	{
; 532  : 		return 0;

  00d39	32 c0		 xor	 al, al
  00d3b	e9 8c 00 00 00	 jmp	 $LN6@gObjRemove
$LN4@gObjRemove:

; 533  : 	}
; 534  : 
; 535  : 	LPBUFF_EFFECT_DATA pEffect = NULL; //loc1

  00d40	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pEffect$[ebp], 0

; 536  : 
; 537  : 	pEffect = g_BuffManager.GetBuffInfo(iEffectIndex);

  00d47	8b 45 0c	 mov	 eax, DWORD PTR _iEffectIndex$[ebp]
  00d4a	50		 push	 eax
  00d4b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  00d50	e8 00 00 00 00	 call	 ?GetBuffInfo@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@H@Z ; CBuffManager::GetBuffInfo
  00d55	89 45 fc	 mov	 DWORD PTR _pEffect$[ebp], eax

; 538  : 
; 539  : 	if(pEffect == NULL)

  00d58	83 7d fc 00	 cmp	 DWORD PTR _pEffect$[ebp], 0
  00d5c	75 04		 jne	 SHORT $LN2@gObjRemove

; 540  : 	{
; 541  : 		return 0;

  00d5e	32 c0		 xor	 al, al
  00d60	eb 6a		 jmp	 SHORT $LN6@gObjRemove
$LN2@gObjRemove:

; 542  : 	}
; 543  : 
; 544  : 	if(g_BuffManager.ClearEffect(lpObj, iEffectIndex) == TRUE)

  00d62	8b 45 0c	 mov	 eax, DWORD PTR _iEffectIndex$[ebp]
  00d65	50		 push	 eax
  00d66	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00d69	51		 push	 ecx
  00d6a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  00d6f	e8 00 00 00 00	 call	 ?ClearEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z ; CBuffManager::ClearEffect
  00d74	0f b6 d0	 movzx	 edx, al
  00d77	83 fa 01	 cmp	 edx, 1
  00d7a	75 4e		 jne	 SHORT $LN1@gObjRemove

; 545  : 	{
; 546  : 		g_BuffManager.RemoveIceEffect(lpObj, iEffectIndex); //For Ice Effect Only

  00d7c	8b 45 0c	 mov	 eax, DWORD PTR _iEffectIndex$[ebp]
  00d7f	50		 push	 eax
  00d80	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00d83	51		 push	 ecx
  00d84	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  00d89	e8 00 00 00 00	 call	 ?RemoveIceEffect@CBuffManager@@QAEXPAUOBJECTSTRUCT@@H@Z ; CBuffManager::RemoveIceEffect

; 547  : 		lpObj->m_btViewStateCount--;

  00d8e	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00d91	8a 88 27 02 00
	00		 mov	 cl, BYTE PTR [eax+551]
  00d97	80 e9 01	 sub	 cl, 1
  00d9a	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00d9d	88 8a 27 02 00
	00		 mov	 BYTE PTR [edx+551], cl

; 548  : 		GCUseBuffEffect(lpObj, iEffectIndex, 1, 0, pEffect->btViewPortIndex, 0);

  00da3	6a 00		 push	 0
  00da5	8b 45 fc	 mov	 eax, DWORD PTR _pEffect$[ebp]
  00da8	66 0f b6 48 01	 movzx	 cx, BYTE PTR [eax+1]
  00dad	0f b7 d1	 movzx	 edx, cx
  00db0	52		 push	 edx
  00db1	6a 00		 push	 0
  00db3	6a 01		 push	 1
  00db5	0f b6 45 0c	 movzx	 eax, BYTE PTR _iEffectIndex$[ebp]
  00db9	50		 push	 eax
  00dba	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00dbd	51		 push	 ecx
  00dbe	e8 00 00 00 00	 call	 ?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z ; GCUseBuffEffect
  00dc3	83 c4 18	 add	 esp, 24			; 00000018H

; 549  : #if(DEBUG_BUFF_EFFECT == 1)
; 550  : 	char szTemp[256];
; 551  : 	sprintf(szTemp, "[BUFFMANAGER] Remove Buff Name %s", pEffect->szBuffName);
; 552  : 	LogAddTD(szTemp);
; 553  : 
; 554  : 	switch(lpObj->Type)
; 555  : 	{
; 556  : 	case OBJ_USER:
; 557  : 		GCServerMsgStringSend(szTemp, lpObj->m_Index, 1);
; 558  : 		break;
; 559  : 	case OBJ_MONSTER:
; 560  : 	case OBJ_NPC:
; 561  : 		GCServerMsgStringSend(szTemp, lpObj->lpAttackObj->m_Index, 1);
; 562  : 		break;
; 563  : 	}
; 564  : #endif
; 565  : 		return 1;

  00dc6	b0 01		 mov	 al, 1
  00dc8	eb 02		 jmp	 SHORT $LN6@gObjRemove
$LN1@gObjRemove:

; 566  : 	}
; 567  : 
; 568  : 	return 0;

  00dca	32 c0		 xor	 al, al
$LN6@gObjRemove:

; 569  : }

  00dcc	5f		 pop	 edi
  00dcd	5e		 pop	 esi
  00dce	5b		 pop	 ebx
  00dcf	8b e5		 mov	 esp, ebp
  00dd1	5d		 pop	 ebp
  00dd2	c3		 ret	 0
?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ENDP	; gObjRemoveBuffEffect
_TEXT	ENDS
PUBLIC	?gObjNotifyUserViewportBuffEffect@@YAXPAUOBJECTSTRUCT@@@Z ; gObjNotifyUserViewportBuffEffect
PUBLIC	?gObjClearStandardBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjClearStandardBuffEffect
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv151 = -76						; size = 4
tv128 = -76						; size = 4
tv74 = -76						; size = 4
tv67 = -76						; size = 4
_i$ = -8						; size = 4
_RemovedCount$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_iEffectClearType$ = 12					; size = 4
?gObjClearStandardBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z PROC ; gObjClearStandardBuffEffect

; 573  : {

  00de0	55		 push	 ebp
  00de1	8b ec		 mov	 ebp, esp
  00de3	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00de6	53		 push	 ebx
  00de7	56		 push	 esi
  00de8	57		 push	 edi

; 574  : 	if(lpObj == NULL)

  00de9	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  00ded	75 07		 jne	 SHORT $LN40@gObjClearS

; 575  : 	{
; 576  : 		return 0;

  00def	32 c0		 xor	 al, al
  00df1	e9 79 02 00 00	 jmp	 $LN41@gObjClearS
$LN40@gObjClearS:

; 577  : 	}
; 578  : 
; 579  : 	if(lpObj->m_Index < 0 || lpObj->m_Index > OBJMAX)

  00df6	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00df9	83 38 00	 cmp	 DWORD PTR [eax], 0
  00dfc	7c 0b		 jl	 SHORT $LN38@gObjClearS
  00dfe	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00e01	81 38 98 3a 00
	00		 cmp	 DWORD PTR [eax], 15000	; 00003a98H
  00e07	7e 07		 jle	 SHORT $LN39@gObjClearS
$LN38@gObjClearS:

; 580  : 	{
; 581  : 		return 0;

  00e09	32 c0		 xor	 al, al
  00e0b	e9 5f 02 00 00	 jmp	 $LN41@gObjClearS
$LN39@gObjClearS:

; 582  : 	}
; 583  : 
; 584  : 	int RemovedCount = 0; //ebp-4

  00e10	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _RemovedCount$[ebp], 0

; 585  : 	int i = 0; //ebp-8

  00e17	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0

; 586  : 	
; 587  : 	switch(iEffectClearType)

  00e1e	8b 45 0c	 mov	 eax, DWORD PTR _iEffectClearType$[ebp]
  00e21	89 45 b4	 mov	 DWORD PTR tv67[ebp], eax
  00e24	8b 4d b4	 mov	 ecx, DWORD PTR tv67[ebp]
  00e27	83 e9 02	 sub	 ecx, 2
  00e2a	89 4d b4	 mov	 DWORD PTR tv67[ebp], ecx
  00e2d	83 7d b4 05	 cmp	 DWORD PTR tv67[ebp], 5
  00e31	0f 87 ee 01 00
	00		 ja	 $LN3@gObjClearS
  00e37	8b 55 b4	 mov	 edx, DWORD PTR tv67[ebp]
  00e3a	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN44@gObjClearS[edx*4]
$LN35@gObjClearS:

; 588  : 	{
; 589  : 	case AT_SIEGE_GENERAL: //Siege ??
; 590  : 		{
; 591  : 			for(i = 0; i < MAX_STATE_COUNT; i++)

  00e41	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00e48	eb 09		 jmp	 SHORT $LN34@gObjClearS
$LN33@gObjClearS:
  00e4a	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00e4d	83 c0 01	 add	 eax, 1
  00e50	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN34@gObjClearS:
  00e53	83 7d f8 10	 cmp	 DWORD PTR _i$[ebp], 16	; 00000010H
  00e57	7d 5b		 jge	 SHORT $LN32@gObjClearS

; 592  : 			{
; 593  : 				switch(lpObj->m_BuffEffectState[i].btBuffIndex)

  00e59	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00e5c	6b c0 14	 imul	 eax, 20			; 00000014H
  00e5f	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00e62	8a 94 01 28 02
	00 00		 mov	 dl, BYTE PTR [ecx+eax+552]
  00e69	88 55 b4	 mov	 BYTE PTR tv74[ebp], dl
  00e6c	80 7d b4 0e	 cmp	 BYTE PTR tv74[ebp], 14	; 0000000eH
  00e70	72 40		 jb	 SHORT $LN30@gObjClearS
  00e72	80 7d b4 11	 cmp	 BYTE PTR tv74[ebp], 17	; 00000011H
  00e76	76 02		 jbe	 SHORT $LN29@gObjClearS
  00e78	eb 38		 jmp	 SHORT $LN30@gObjClearS
$LN29@gObjClearS:

; 594  : 				{
; 595  : 				case AT_WATCHING_TOWER:
; 596  : 				case AT_ATTACKING_GUILD1:
; 597  : 				case AT_ATTACKING_GUILD2:
; 598  : 				case AT_ATTACKING_GUILD3:
; 599  : 					{
; 600  : 						if(gObjRemoveBuffEffect(lpObj, lpObj->m_BuffEffectState[i].btBuffIndex) == TRUE)

  00e7a	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00e7d	6b c0 14	 imul	 eax, 20			; 00000014H
  00e80	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00e83	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  00e8b	52		 push	 edx
  00e8c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00e8f	50		 push	 eax
  00e90	e8 00 00 00 00	 call	 ?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjRemoveBuffEffect
  00e95	83 c4 08	 add	 esp, 8
  00e98	0f b6 c8	 movzx	 ecx, al
  00e9b	83 f9 01	 cmp	 ecx, 1
  00e9e	75 12		 jne	 SHORT $LN30@gObjClearS

; 601  : 						{
; 602  : 							RemovedCount++;

  00ea0	8b 45 fc	 mov	 eax, DWORD PTR _RemovedCount$[ebp]
  00ea3	83 c0 01	 add	 eax, 1
  00ea6	89 45 fc	 mov	 DWORD PTR _RemovedCount$[ebp], eax

; 603  : 							i--;

  00ea9	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00eac	83 e8 01	 sub	 eax, 1
  00eaf	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN30@gObjClearS:

; 604  : 						}
; 605  : 					}
; 606  : 					break;
; 607  : 				default:
; 608  : 					{
; 609  : 						break;
; 610  : 					}
; 611  : 					break;
; 612  : 				}
; 613  : 			}

  00eb2	eb 96		 jmp	 SHORT $LN33@gObjClearS
$LN32@gObjClearS:

; 614  : 		}
; 615  : 		break;

  00eb4	e9 81 01 00 00	 jmp	 $LN36@gObjClearS
$LN26@gObjClearS:

; 616  : 	case AT_PCBANG_GENERAL://PcBang General
; 617  : 		{
; 618  : 			for(i = 0; i < MAX_STATE_COUNT; i++)

  00eb9	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00ec0	eb 09		 jmp	 SHORT $LN25@gObjClearS
$LN24@gObjClearS:
  00ec2	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00ec5	83 c0 01	 add	 eax, 1
  00ec8	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN25@gObjClearS:
  00ecb	83 7d f8 10	 cmp	 DWORD PTR _i$[ebp], 16	; 00000010H
  00ecf	7d 61		 jge	 SHORT $LN23@gObjClearS

; 619  : 			{
; 620  : 				switch(lpObj->m_BuffEffectState[i].btBuffIndex)

  00ed1	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00ed4	6b c0 14	 imul	 eax, 20			; 00000014H
  00ed7	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00eda	8a 94 01 28 02
	00 00		 mov	 dl, BYTE PTR [ecx+eax+552]
  00ee1	88 55 b4	 mov	 BYTE PTR tv128[ebp], dl
  00ee4	80 7d b4 1d	 cmp	 BYTE PTR tv128[ebp], 29	; 0000001dH
  00ee8	72 46		 jb	 SHORT $LN21@gObjClearS
  00eea	80 7d b4 1f	 cmp	 BYTE PTR tv128[ebp], 31	; 0000001fH
  00eee	76 08		 jbe	 SHORT $LN20@gObjClearS
  00ef0	80 7d b4 68	 cmp	 BYTE PTR tv128[ebp], 104 ; 00000068H
  00ef4	74 02		 je	 SHORT $LN20@gObjClearS
  00ef6	eb 38		 jmp	 SHORT $LN21@gObjClearS
$LN20@gObjClearS:

; 621  : 				{
; 622  : 				case AT_PCBANG_SEAL_OF_ASCENSION:
; 623  : 				case AT_PCBANG_SEAL_OF_WEALTH:
; 624  : 				case AT_PCBANG_SEAL_OF_SUSTENANCE:
; 625  : 				case AT_PCBANG_SEAL_OF_BALANCE: //season 4.5 add-on
; 626  : 					{
; 627  : 						if(gObjRemoveBuffEffect(lpObj, lpObj->m_BuffEffectState[i].btBuffIndex) == TRUE)

  00ef8	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00efb	6b c0 14	 imul	 eax, 20			; 00000014H
  00efe	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00f01	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  00f09	52		 push	 edx
  00f0a	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00f0d	50		 push	 eax
  00f0e	e8 00 00 00 00	 call	 ?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjRemoveBuffEffect
  00f13	83 c4 08	 add	 esp, 8
  00f16	0f b6 c8	 movzx	 ecx, al
  00f19	83 f9 01	 cmp	 ecx, 1
  00f1c	75 12		 jne	 SHORT $LN21@gObjClearS

; 628  : 						{
; 629  : 							RemovedCount++;

  00f1e	8b 45 fc	 mov	 eax, DWORD PTR _RemovedCount$[ebp]
  00f21	83 c0 01	 add	 eax, 1
  00f24	89 45 fc	 mov	 DWORD PTR _RemovedCount$[ebp], eax

; 630  : 							i--;

  00f27	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00f2a	83 e8 01	 sub	 eax, 1
  00f2d	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN21@gObjClearS:

; 631  : 						}
; 632  : 					}
; 633  : 					break;
; 634  : 				default:
; 635  : 					{
; 636  : 						break;
; 637  : 					}
; 638  : 					break;
; 639  : 				}
; 640  : 			}

  00f30	eb 90		 jmp	 SHORT $LN24@gObjClearS
$LN23@gObjClearS:

; 641  : 		}
; 642  : 		break;

  00f32	e9 03 01 00 00	 jmp	 $LN36@gObjClearS
$LN17@gObjClearS:

; 643  : 	case AT_GENERAL_NOPERIOD_ITEM: //CashShop + PcBang General
; 644  : 		{
; 645  : 			for(i = 0; i < MAX_STATE_COUNT; i++)

  00f37	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00f3e	eb 09		 jmp	 SHORT $LN16@gObjClearS
$LN15@gObjClearS:
  00f40	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00f43	83 c0 01	 add	 eax, 1
  00f46	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN16@gObjClearS:
  00f49	83 7d f8 10	 cmp	 DWORD PTR _i$[ebp], 16	; 00000010H
  00f4d	7d 76		 jge	 SHORT $LN14@gObjClearS

; 646  : 			{
; 647  : 				switch(lpObj->m_BuffEffectState[i].btBuffIndex)

  00f4f	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00f52	6b c0 14	 imul	 eax, 20			; 00000014H
  00f55	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00f58	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  00f60	89 55 b4	 mov	 DWORD PTR tv151[ebp], edx
  00f63	8b 45 b4	 mov	 eax, DWORD PTR tv151[ebp]
  00f66	83 e8 1d	 sub	 eax, 29			; 0000001dH
  00f69	89 45 b4	 mov	 DWORD PTR tv151[ebp], eax
  00f6c	81 7d b4 a6 00
	00 00		 cmp	 DWORD PTR tv151[ebp], 166 ; 000000a6H
  00f73	77 13		 ja	 SHORT $LN10@gObjClearS
  00f75	8b 4d b4	 mov	 ecx, DWORD PTR tv151[ebp]
  00f78	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN43@gObjClearS[ecx]
  00f7f	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN45@gObjClearS[edx*4]
$LN11@gObjClearS:

; 648  : 				{
; 649  : 				case AT_PCBANG_SEAL_OF_ASCENSION:
; 650  : 				case AT_PCBANG_SEAL_OF_WEALTH:
; 651  : 				case AT_PCBANG_SEAL_OF_SUSTENANCE:
; 652  : 
; 653  : 				case AT_CSHOP_SEAL_OF_ASCENSION:
; 654  : 				case AT_CSHOP_SEAL_OF_WEALTH:
; 655  : 				case AT_CSHOP_SEAL_OF_SUSTENANCE:
; 656  : 				case AT_CSHOP_SEAL_OF_MOBILITY:
; 657  : 
; 658  : 				case AT_CSHOP_SCROLL_OF_QUICKNESS:
; 659  : 				case AT_CSHOP_SCROLL_OF_DEFENSE:
; 660  : 				case AT_CSHOP_SCROLL_OF_WRATH:
; 661  : 				case AT_CSHOP_SCROLL_OF_WIZARDRY:
; 662  : 				case AT_CSHOP_SCROLL_OF_HEALTH:
; 663  : 				case AT_CSHOP_SCROLL_OF_MANA:
; 664  : 
; 665  : 				case AT_CSHOP_LEAP_OF_STRENGTH:
; 666  : 				case AT_CSHOP_LEAP_OF_QUICKNESS:
; 667  : 				case AT_CSHOP_LEAP_OF_HEALTH:
; 668  : 				case AT_CSHOP_LEAP_OF_ENERGY:
; 669  : 				case AT_CSHOP_LEAP_OF_CONTROL:
; 670  : 
; 671  : 				case AT_CSHOP_SEAL_OF_HEALING:
; 672  : 				case AT_CSHOP_SEAL_OF_DIVINITY:
; 673  : 
; 674  : 				case AT_CSHOP_SCROLL_OF_BATTLE:
; 675  : 				case AT_CSHOP_SCROLL_OF_STRENGTHENER:
; 676  : 
; 677  : 					//Season 4.5 add-on
; 678  : 				case AT_CSHOP_GUARDIAN_AMULET:
; 679  : 				case AT_CSHOP_PROTECT_AMULET:
; 680  : 				case AT_CSHOP_MASTER_SEAL_OF_ASCENSION:
; 681  : 				case AT_CSHOP_MASTER_SEAL_OF_WEALTH:
; 682  : 				case AT_PCBANG_SEAL_OF_BALANCE:
; 683  : 				case AT_BT_BROTHERHOOD_BUFF:
; 684  : 
; 685  : 				case AT_VIP_SILVER:
; 686  : 				case AT_VIP_GOLD:
; 687  : 				case AT_VIP_PLATINUM:
; 688  : 				case AT_GUILD_BUFF:
; 689  : 				case AT_NPC_BUFF_EXP:
; 690  : 				case AT_NPC_BUFF_DAMAGE:
; 691  : 				case AT_NPC_BUFF_DEFENCE:
; 692  : 				case AT_NPC_BUFF_EXL_CRIT:
; 693  : 				case AT_NPC_BUFF_DROP:
; 694  : 				case AT_NPC_BUFF_DOUBLE:
; 695  : 				case AT_NOOB_BUFF:
; 696  : 				case AT_QUEST_BUFF:
; 697  : 				case AT_DUNGEON_BUFF:
; 698  : 				case AT_MARRI_BUFF:
; 699  : 				case AT_MARRI_BUFF2:
; 700  : 				//
; 701  : 				case AT_MMOTOP_BUFF:
; 702  : 				case AT_QTOP_BUFF:
; 703  : 					break;

  00f86	eb 38		 jmp	 SHORT $LN12@gObjClearS
$LN10@gObjClearS:

; 704  : 				default:
; 705  : 					{
; 706  : 						if(gObjRemoveBuffEffect(lpObj, lpObj->m_BuffEffectState[i].btBuffIndex) == TRUE)

  00f88	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00f8b	6b c0 14	 imul	 eax, 20			; 00000014H
  00f8e	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00f91	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  00f99	52		 push	 edx
  00f9a	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00f9d	50		 push	 eax
  00f9e	e8 00 00 00 00	 call	 ?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjRemoveBuffEffect
  00fa3	83 c4 08	 add	 esp, 8
  00fa6	0f b6 c8	 movzx	 ecx, al
  00fa9	83 f9 01	 cmp	 ecx, 1
  00fac	75 12		 jne	 SHORT $LN12@gObjClearS

; 707  : 						{
; 708  : 							RemovedCount++;

  00fae	8b 45 fc	 mov	 eax, DWORD PTR _RemovedCount$[ebp]
  00fb1	83 c0 01	 add	 eax, 1
  00fb4	89 45 fc	 mov	 DWORD PTR _RemovedCount$[ebp], eax

; 709  : 							i--;

  00fb7	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00fba	83 e8 01	 sub	 eax, 1
  00fbd	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN12@gObjClearS:

; 710  : 						}
; 711  : 					}
; 712  : 					break;
; 713  : 				}
; 714  : 			}

  00fc0	e9 7b ff ff ff	 jmp	 $LN15@gObjClearS
$LN14@gObjClearS:

; 715  : 		}
; 716  : 		break;

  00fc5	eb 73		 jmp	 SHORT $LN36@gObjClearS
$LN8@gObjClearS:

; 717  : 	case AT_GENERAL: //All??
; 718  : 		{
; 719  : 			for(i = 0; i < MAX_STATE_COUNT; i++)

  00fc7	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00fce	eb 09		 jmp	 SHORT $LN7@gObjClearS
$LN6@gObjClearS:
  00fd0	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00fd3	83 c0 01	 add	 eax, 1
  00fd6	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN7@gObjClearS:
  00fd9	83 7d f8 10	 cmp	 DWORD PTR _i$[ebp], 16	; 00000010H
  00fdd	7d 3a		 jge	 SHORT $LN5@gObjClearS

; 720  : 			{
; 721  : 				if(gObjRemoveBuffEffect(lpObj, lpObj->m_BuffEffectState[i].btBuffIndex) == TRUE)

  00fdf	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00fe2	6b c0 14	 imul	 eax, 20			; 00000014H
  00fe5	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00fe8	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  00ff0	52		 push	 edx
  00ff1	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00ff4	50		 push	 eax
  00ff5	e8 00 00 00 00	 call	 ?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjRemoveBuffEffect
  00ffa	83 c4 08	 add	 esp, 8
  00ffd	0f b6 c8	 movzx	 ecx, al
  01000	83 f9 01	 cmp	 ecx, 1
  01003	75 12		 jne	 SHORT $LN4@gObjClearS

; 722  : 				{
; 723  : 					RemovedCount++;

  01005	8b 45 fc	 mov	 eax, DWORD PTR _RemovedCount$[ebp]
  01008	83 c0 01	 add	 eax, 1
  0100b	89 45 fc	 mov	 DWORD PTR _RemovedCount$[ebp], eax

; 724  : 					i--;

  0100e	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  01011	83 e8 01	 sub	 eax, 1
  01014	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN4@gObjClearS:

; 725  : 				}
; 726  : 			}

  01017	eb b7		 jmp	 SHORT $LN6@gObjClearS
$LN5@gObjClearS:

; 727  : 			lpObj->m_btViewStateCount = 0;

  01019	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0101c	c6 80 27 02 00
	00 00		 mov	 BYTE PTR [eax+551], 0

; 728  : 		}
; 729  : 		break;

  01023	eb 15		 jmp	 SHORT $LN36@gObjClearS
$LN3@gObjClearS:

; 730  : 	default: //Other
; 731  : 		{
; 732  : 			RemovedCount = g_BuffManager.SearchAndClearEffect(lpObj, iEffectClearType);

  01025	8b 45 0c	 mov	 eax, DWORD PTR _iEffectClearType$[ebp]
  01028	50		 push	 eax
  01029	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0102c	51		 push	 ecx
  0102d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  01032	e8 00 00 00 00	 call	 ?SearchAndClearEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@H@Z ; CBuffManager::SearchAndClearEffect
  01037	89 45 fc	 mov	 DWORD PTR _RemovedCount$[ebp], eax
$LN36@gObjClearS:

; 733  : 		}
; 734  : 		break;
; 735  : 	}
; 736  : 
; 737  : 	if(lpObj->m_btViewStateCount < 0 || lpObj->m_btViewStateCount > MAX_STATE_COUNT)

  0103a	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0103d	0f b6 88 27 02
	00 00		 movzx	 ecx, BYTE PTR [eax+551]
  01044	85 c9		 test	 ecx, ecx
  01046	7c 0f		 jl	 SHORT $LN1@gObjClearS
  01048	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0104b	0f b6 88 27 02
	00 00		 movzx	 ecx, BYTE PTR [eax+551]
  01052	83 f9 10	 cmp	 ecx, 16			; 00000010H
  01055	7e 0a		 jle	 SHORT $LN2@gObjClearS
$LN1@gObjClearS:

; 738  : 	{
; 739  : 		lpObj->m_btViewStateCount = 0;

  01057	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0105a	c6 80 27 02 00
	00 00		 mov	 BYTE PTR [eax+551], 0
$LN2@gObjClearS:

; 740  : 	}
; 741  : 
; 742  : 	gObjNotifyUserViewportBuffEffect(lpObj);

  01061	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01064	50		 push	 eax
  01065	e8 00 00 00 00	 call	 ?gObjNotifyUserViewportBuffEffect@@YAXPAUOBJECTSTRUCT@@@Z ; gObjNotifyUserViewportBuffEffect
  0106a	83 c4 04	 add	 esp, 4

; 743  : 	return 1;

  0106d	b0 01		 mov	 al, 1
$LN41@gObjClearS:

; 744  : }

  0106f	5f		 pop	 edi
  01070	5e		 pop	 esi
  01071	5b		 pop	 ebx
  01072	8b e5		 mov	 esp, ebp
  01074	5d		 pop	 ebp
  01075	c3		 ret	 0
  01076	8b ff		 npad	 2
$LN44@gObjClearS:
  01078	00 00 00 00	 DD	 $LN8@gObjClearS
  0107c	00 00 00 00	 DD	 $LN3@gObjClearS
  01080	00 00 00 00	 DD	 $LN3@gObjClearS
  01084	00 00 00 00	 DD	 $LN26@gObjClearS
  01088	00 00 00 00	 DD	 $LN17@gObjClearS
  0108c	00 00 00 00	 DD	 $LN35@gObjClearS
$LN45@gObjClearS:
  01090	00 00 00 00	 DD	 $LN11@gObjClearS
  01094	00 00 00 00	 DD	 $LN10@gObjClearS
$LN43@gObjClearS:
  01098	00		 DB	 0
  01099	00		 DB	 0
  0109a	00		 DB	 0
  0109b	01		 DB	 1
  0109c	01		 DB	 1
  0109d	01		 DB	 1
  0109e	01		 DB	 1
  0109f	01		 DB	 1
  010a0	01		 DB	 1
  010a1	01		 DB	 1
  010a2	01		 DB	 1
  010a3	00		 DB	 0
  010a4	00		 DB	 0
  010a5	00		 DB	 0
  010a6	00		 DB	 0
  010a7	00		 DB	 0
  010a8	00		 DB	 0
  010a9	00		 DB	 0
  010aa	00		 DB	 0
  010ab	00		 DB	 0
  010ac	00		 DB	 0
  010ad	00		 DB	 0
  010ae	00		 DB	 0
  010af	00		 DB	 0
  010b0	00		 DB	 0
  010b1	00		 DB	 0
  010b2	01		 DB	 1
  010b3	01		 DB	 1
  010b4	01		 DB	 1
  010b5	01		 DB	 1
  010b6	01		 DB	 1
  010b7	01		 DB	 1
  010b8	01		 DB	 1
  010b9	01		 DB	 1
  010ba	01		 DB	 1
  010bb	01		 DB	 1
  010bc	01		 DB	 1
  010bd	01		 DB	 1
  010be	01		 DB	 1
  010bf	01		 DB	 1
  010c0	01		 DB	 1
  010c1	01		 DB	 1
  010c2	01		 DB	 1
  010c3	01		 DB	 1
  010c4	01		 DB	 1
  010c5	01		 DB	 1
  010c6	01		 DB	 1
  010c7	01		 DB	 1
  010c8	01		 DB	 1
  010c9	01		 DB	 1
  010ca	01		 DB	 1
  010cb	01		 DB	 1
  010cc	01		 DB	 1
  010cd	01		 DB	 1
  010ce	01		 DB	 1
  010cf	01		 DB	 1
  010d0	01		 DB	 1
  010d1	01		 DB	 1
  010d2	00		 DB	 0
  010d3	00		 DB	 0
  010d4	00		 DB	 0
  010d5	00		 DB	 0
  010d6	01		 DB	 1
  010d7	01		 DB	 1
  010d8	01		 DB	 1
  010d9	01		 DB	 1
  010da	01		 DB	 1
  010db	01		 DB	 1
  010dc	01		 DB	 1
  010dd	01		 DB	 1
  010de	00		 DB	 0
  010df	00		 DB	 0
  010e0	00		 DB	 0
  010e1	00		 DB	 0
  010e2	01		 DB	 1
  010e3	00		 DB	 0
  010e4	01		 DB	 1
  010e5	01		 DB	 1
  010e6	01		 DB	 1
  010e7	01		 DB	 1
  010e8	01		 DB	 1
  010e9	01		 DB	 1
  010ea	01		 DB	 1
  010eb	01		 DB	 1
  010ec	01		 DB	 1
  010ed	01		 DB	 1
  010ee	01		 DB	 1
  010ef	01		 DB	 1
  010f0	01		 DB	 1
  010f1	01		 DB	 1
  010f2	01		 DB	 1
  010f3	01		 DB	 1
  010f4	01		 DB	 1
  010f5	01		 DB	 1
  010f6	01		 DB	 1
  010f7	01		 DB	 1
  010f8	01		 DB	 1
  010f9	01		 DB	 1
  010fa	01		 DB	 1
  010fb	01		 DB	 1
  010fc	01		 DB	 1
  010fd	01		 DB	 1
  010fe	01		 DB	 1
  010ff	01		 DB	 1
  01100	01		 DB	 1
  01101	01		 DB	 1
  01102	01		 DB	 1
  01103	01		 DB	 1
  01104	01		 DB	 1
  01105	01		 DB	 1
  01106	01		 DB	 1
  01107	01		 DB	 1
  01108	01		 DB	 1
  01109	01		 DB	 1
  0110a	01		 DB	 1
  0110b	01		 DB	 1
  0110c	01		 DB	 1
  0110d	01		 DB	 1
  0110e	01		 DB	 1
  0110f	01		 DB	 1
  01110	01		 DB	 1
  01111	01		 DB	 1
  01112	01		 DB	 1
  01113	01		 DB	 1
  01114	01		 DB	 1
  01115	01		 DB	 1
  01116	01		 DB	 1
  01117	01		 DB	 1
  01118	01		 DB	 1
  01119	01		 DB	 1
  0111a	01		 DB	 1
  0111b	01		 DB	 1
  0111c	01		 DB	 1
  0111d	01		 DB	 1
  0111e	01		 DB	 1
  0111f	01		 DB	 1
  01120	01		 DB	 1
  01121	01		 DB	 1
  01122	01		 DB	 1
  01123	01		 DB	 1
  01124	01		 DB	 1
  01125	01		 DB	 1
  01126	01		 DB	 1
  01127	01		 DB	 1
  01128	01		 DB	 1
  01129	00		 DB	 0
  0112a	00		 DB	 0
  0112b	00		 DB	 0
  0112c	00		 DB	 0
  0112d	00		 DB	 0
  0112e	00		 DB	 0
  0112f	00		 DB	 0
  01130	00		 DB	 0
  01131	00		 DB	 0
  01132	00		 DB	 0
  01133	00		 DB	 0
  01134	00		 DB	 0
  01135	01		 DB	 1
  01136	01		 DB	 1
  01137	01		 DB	 1
  01138	01		 DB	 1
  01139	00		 DB	 0
  0113a	00		 DB	 0
  0113b	00		 DB	 0
  0113c	00		 DB	 0
  0113d	00		 DB	 0
  0113e	00		 DB	 0
?gObjClearStandardBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ENDP ; gObjClearStandardBuffEffect
_TEXT	ENDS
PUBLIC	?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z PROC	; gObjSearchActiveEffect

; 748  : {

  01140	55		 push	 ebp
  01141	8b ec		 mov	 ebp, esp
  01143	83 ec 40	 sub	 esp, 64			; 00000040H
  01146	53		 push	 ebx
  01147	56		 push	 esi
  01148	57		 push	 edi

; 749  : 	if(lpObj == NULL)

  01149	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  0114d	75 04		 jne	 SHORT $LN3@gObjSearch

; 750  : 	{
; 751  : 		return 0;

  0114f	32 c0		 xor	 al, al
  01151	eb 29		 jmp	 SHORT $LN4@gObjSearch
$LN3@gObjSearch:

; 752  : 	}
; 753  : 
; 754  : 	if(lpObj->m_Index < 0 || lpObj->m_Index > OBJMAX)

  01153	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01156	83 38 00	 cmp	 DWORD PTR [eax], 0
  01159	7c 0b		 jl	 SHORT $LN1@gObjSearch
  0115b	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0115e	81 38 98 3a 00
	00		 cmp	 DWORD PTR [eax], 15000	; 00003a98H
  01164	7e 04		 jle	 SHORT $LN2@gObjSearch
$LN1@gObjSearch:

; 755  : 	{
; 756  : 		return 0;

  01166	32 c0		 xor	 al, al
  01168	eb 12		 jmp	 SHORT $LN4@gObjSearch
$LN2@gObjSearch:

; 757  : 	}
; 758  : 
; 759  : 	return g_BuffManager.SearchActiveEffect(lpObj, iEffectIndex);

  0116a	8b 45 0c	 mov	 eax, DWORD PTR _iEffectIndex$[ebp]
  0116d	50		 push	 eax
  0116e	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01171	51		 push	 ecx
  01172	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  01177	e8 00 00 00 00	 call	 ?SearchActiveEffect@CBuffManager@@QAEEPAUOBJECTSTRUCT@@H@Z ; CBuffManager::SearchActiveEffect
$LN4@gObjSearch:

; 760  : }

  0117c	5f		 pop	 edi
  0117d	5e		 pop	 esi
  0117e	5b		 pop	 ebx
  0117f	8b e5		 mov	 esp, ebp
  01181	5d		 pop	 ebp
  01182	c3		 ret	 0
?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ENDP	; gObjSearchActiveEffect
_TEXT	ENDS
PUBLIC	?gObjUpdateSpecificBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HH@Z ; gObjUpdateSpecificBuffEffectDuration
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$220128 = -8						; size = 4
_dwTick$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
_iDuration$ = 16					; size = 4
?gObjUpdateSpecificBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HH@Z PROC ; gObjUpdateSpecificBuffEffectDuration

; 764  : {

  01190	55		 push	 ebp
  01191	8b ec		 mov	 ebp, esp
  01193	83 ec 48	 sub	 esp, 72			; 00000048H
  01196	53		 push	 ebx
  01197	56		 push	 esi
  01198	57		 push	 edi

; 765  : 	if(lpObj == NULL)

  01199	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  0119d	75 07		 jne	 SHORT $LN8@gObjUpdate

; 766  : 	{
; 767  : 		return 0;

  0119f	32 c0		 xor	 al, al
  011a1	e9 ab 00 00 00	 jmp	 $LN9@gObjUpdate
$LN8@gObjUpdate:

; 768  : 	}
; 769  : 
; 770  : 	if(lpObj->Connected < PLAYER_PLAYING)

  011a6	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  011a9	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  011ad	7d 07		 jge	 SHORT $LN7@gObjUpdate

; 771  : 	{
; 772  : 		return 0;

  011af	32 c0		 xor	 al, al
  011b1	e9 9b 00 00 00	 jmp	 $LN9@gObjUpdate
$LN7@gObjUpdate:

; 773  : 	}
; 774  : 
; 775  : 	DWORD dwTick = GetTickCount(); //loc1

  011b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  011bc	89 45 fc	 mov	 DWORD PTR _dwTick$[ebp], eax

; 776  : 
; 777  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  011bf	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$220128[ebp], 0
  011c6	eb 09		 jmp	 SHORT $LN6@gObjUpdate
$LN5@gObjUpdate:
  011c8	8b 45 f8	 mov	 eax, DWORD PTR _i$220128[ebp]
  011cb	83 c0 01	 add	 eax, 1
  011ce	89 45 f8	 mov	 DWORD PTR _i$220128[ebp], eax
$LN6@gObjUpdate:
  011d1	83 7d f8 10	 cmp	 DWORD PTR _i$220128[ebp], 16 ; 00000010H
  011d5	7d 78		 jge	 SHORT $LN4@gObjUpdate

; 778  : 	{
; 779  : 		if(i > lpObj->m_btViewStateCount)

  011d7	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  011da	0f b6 88 27 02
	00 00		 movzx	 ecx, BYTE PTR [eax+551]
  011e1	39 4d f8	 cmp	 DWORD PTR _i$220128[ebp], ecx
  011e4	7e 04		 jle	 SHORT $LN3@gObjUpdate

; 780  : 		{
; 781  : 			return 0;

  011e6	32 c0		 xor	 al, al
  011e8	eb 67		 jmp	 SHORT $LN9@gObjUpdate
$LN3@gObjUpdate:

; 782  : 		}
; 783  : 
; 784  : 		if(lpObj->m_BuffEffectState[i].btBuffIndex == iEffectIndex)

  011ea	8b 45 f8	 mov	 eax, DWORD PTR _i$220128[ebp]
  011ed	6b c0 14	 imul	 eax, 20			; 00000014H
  011f0	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  011f3	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  011fb	3b 55 0c	 cmp	 edx, DWORD PTR _iEffectIndex$[ebp]
  011fe	75 4a		 jne	 SHORT $LN2@gObjUpdate

; 785  : 		{
; 786  : 			lpObj->m_BuffEffectState[i].iDuration += iDuration;

  01200	8b 45 f8	 mov	 eax, DWORD PTR _i$220128[ebp]
  01203	6b c0 14	 imul	 eax, 20			; 00000014H
  01206	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01209	8b 94 01 38 02
	00 00		 mov	 edx, DWORD PTR [ecx+eax+568]
  01210	03 55 10	 add	 edx, DWORD PTR _iDuration$[ebp]
  01213	8b 45 f8	 mov	 eax, DWORD PTR _i$220128[ebp]
  01216	6b c0 14	 imul	 eax, 20			; 00000014H
  01219	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0121c	89 94 01 38 02
	00 00		 mov	 DWORD PTR [ecx+eax+568], edx

; 787  : 
; 788  : 			if(lpObj->m_BuffEffectState[i].iDuration < 0)

  01223	8b 45 f8	 mov	 eax, DWORD PTR _i$220128[ebp]
  01226	6b c0 14	 imul	 eax, 20			; 00000014H
  01229	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0122c	83 bc 01 38 02
	00 00 00	 cmp	 DWORD PTR [ecx+eax+568], 0
  01234	7d 10		 jge	 SHORT $LN1@gObjUpdate

; 789  : 			{
; 790  : 				gObjRemoveBuffEffect(lpObj, iEffectIndex);

  01236	8b 45 0c	 mov	 eax, DWORD PTR _iEffectIndex$[ebp]
  01239	50		 push	 eax
  0123a	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0123d	51		 push	 ecx
  0123e	e8 00 00 00 00	 call	 ?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjRemoveBuffEffect
  01243	83 c4 08	 add	 esp, 8
$LN1@gObjUpdate:

; 791  : 			}
; 792  : 			return 1;

  01246	b0 01		 mov	 al, 1
  01248	eb 07		 jmp	 SHORT $LN9@gObjUpdate
$LN2@gObjUpdate:

; 793  : 		}
; 794  : 	}

  0124a	e9 79 ff ff ff	 jmp	 $LN5@gObjUpdate
$LN4@gObjUpdate:

; 795  : 	return 0;

  0124f	32 c0		 xor	 al, al
$LN9@gObjUpdate:

; 796  : }

  01251	5f		 pop	 edi
  01252	5e		 pop	 esi
  01253	5b		 pop	 ebx
  01254	8b e5		 mov	 esp, ebp
  01256	5d		 pop	 ebp
  01257	c3		 ret	 0
?gObjUpdateSpecificBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HH@Z ENDP ; gObjUpdateSpecificBuffEffectDuration
_TEXT	ENDS
PUBLIC	?gObjApplyBuffEffectDamageType@@YAXPAUOBJECTSTRUCT@@@Z ; gObjApplyBuffEffectDamageType
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$220139 = -8						; size = 4
_loc1$ = -4						; size = 4
_lpObj$ = 8						; size = 4
?gObjApplyBuffEffectDamageType@@YAXPAUOBJECTSTRUCT@@@Z PROC ; gObjApplyBuffEffectDamageType

; 800  : {

  01260	55		 push	 ebp
  01261	8b ec		 mov	 ebp, esp
  01263	83 ec 48	 sub	 esp, 72			; 00000048H
  01266	53		 push	 ebx
  01267	56		 push	 esi
  01268	57		 push	 edi

; 801  : 	int loc1 = 0; //??

  01269	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loc1$[ebp], 0

; 802  : 
; 803  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  01270	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$220139[ebp], 0
  01277	eb 09		 jmp	 SHORT $LN4@gObjApplyB@3
$LN3@gObjApplyB@3:
  01279	8b 45 f8	 mov	 eax, DWORD PTR _i$220139[ebp]
  0127c	83 c0 01	 add	 eax, 1
  0127f	89 45 f8	 mov	 DWORD PTR _i$220139[ebp], eax
$LN4@gObjApplyB@3:
  01282	83 7d f8 10	 cmp	 DWORD PTR _i$220139[ebp], 16 ; 00000010H
  01286	7d 7c		 jge	 SHORT $LN5@gObjApplyB@3

; 804  : 	{
; 805  : 		if(lpObj->m_BuffEffectState[i].btBuffIndex != NULL)

  01288	8b 45 f8	 mov	 eax, DWORD PTR _i$220139[ebp]
  0128b	6b c0 14	 imul	 eax, 20			; 00000014H
  0128e	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01291	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  01299	85 d2		 test	 edx, edx
  0129b	74 62		 je	 SHORT $LN1@gObjApplyB@3

; 806  : 		{
; 807  : 			g_ViewportSkillState.SetDamageType(lpObj, lpObj->m_BuffEffectState[i].btEffectType1, lpObj->m_BuffEffectState[i].iValue1);

  0129d	8b 45 f8	 mov	 eax, DWORD PTR _i$220139[ebp]
  012a0	6b c0 14	 imul	 eax, 20			; 00000014H
  012a3	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  012a6	8b 94 01 2c 02
	00 00		 mov	 edx, DWORD PTR [ecx+eax+556]
  012ad	52		 push	 edx
  012ae	8b 45 f8	 mov	 eax, DWORD PTR _i$220139[ebp]
  012b1	6b c0 14	 imul	 eax, 20			; 00000014H
  012b4	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  012b7	0f b6 94 01 2a
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+554]
  012bf	52		 push	 edx
  012c0	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  012c3	50		 push	 eax
  012c4	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ViewportSkillState@@3VCViewportSkillState@@A ; g_ViewportSkillState
  012c9	e8 00 00 00 00	 call	 ?SetDamageType@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z ; CViewportSkillState::SetDamageType

; 808  : 			g_ViewportSkillState.SetDamageType(lpObj, lpObj->m_BuffEffectState[i].btEffectType2, lpObj->m_BuffEffectState[i].iValue2);

  012ce	8b 45 f8	 mov	 eax, DWORD PTR _i$220139[ebp]
  012d1	6b c0 14	 imul	 eax, 20			; 00000014H
  012d4	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  012d7	8b 94 01 30 02
	00 00		 mov	 edx, DWORD PTR [ecx+eax+560]
  012de	52		 push	 edx
  012df	8b 45 f8	 mov	 eax, DWORD PTR _i$220139[ebp]
  012e2	6b c0 14	 imul	 eax, 20			; 00000014H
  012e5	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  012e8	0f b6 94 01 2b
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+555]
  012f0	52		 push	 edx
  012f1	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  012f4	50		 push	 eax
  012f5	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ViewportSkillState@@3VCViewportSkillState@@A ; g_ViewportSkillState
  012fa	e8 00 00 00 00	 call	 ?SetDamageType@CViewportSkillState@@QAEXPAUOBJECTSTRUCT@@EH@Z ; CViewportSkillState::SetDamageType
$LN1@gObjApplyB@3:

; 809  : 		}
; 810  : 	}

  012ff	e9 75 ff ff ff	 jmp	 $LN3@gObjApplyB@3
$LN5@gObjApplyB@3:

; 811  : }

  01304	5f		 pop	 edi
  01305	5e		 pop	 esi
  01306	5b		 pop	 ebx
  01307	8b e5		 mov	 esp, ebp
  01309	5d		 pop	 ebp
  0130a	c3		 ret	 0
?gObjApplyBuffEffectDamageType@@YAXPAUOBJECTSTRUCT@@@Z ENDP ; gObjApplyBuffEffectDamageType
_TEXT	ENDS
PUBLIC	?gObjCountAppliedBuffEffect@@YAHPAUOBJECTSTRUCT@@PAE@Z ; gObjCountAppliedBuffEffect
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv82 = -76						; size = 4
_i$220151 = -8						; size = 4
_count$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_btEffectIndex$ = 12					; size = 4
?gObjCountAppliedBuffEffect@@YAHPAUOBJECTSTRUCT@@PAE@Z PROC ; gObjCountAppliedBuffEffect

; 815  : {

  01310	55		 push	 ebp
  01311	8b ec		 mov	 ebp, esp
  01313	83 ec 4c	 sub	 esp, 76			; 0000004cH
  01316	53		 push	 ebx
  01317	56		 push	 esi
  01318	57		 push	 edi

; 816  : 	if(lpObj == NULL)

  01319	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  0131d	75 08		 jne	 SHORT $LN12@gObjCountA

; 817  : 	{
; 818  : 		return -1;

  0131f	83 c8 ff	 or	 eax, -1
  01322	e9 a1 00 00 00	 jmp	 $LN13@gObjCountA
$LN12@gObjCountA:

; 819  : 	}
; 820  : 
; 821  : 	if(lpObj->Connected < PLAYER_PLAYING)

  01327	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0132a	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  0132e	7d 08		 jge	 SHORT $LN11@gObjCountA

; 822  : 	{
; 823  : 		return -1;

  01330	83 c8 ff	 or	 eax, -1
  01333	e9 90 00 00 00	 jmp	 $LN13@gObjCountA
$LN11@gObjCountA:

; 824  : 	}
; 825  : 
; 826  : 	int count = 0; //loc1 ebp-4

  01338	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 827  : 
; 828  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  0133f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$220151[ebp], 0
  01346	eb 09		 jmp	 SHORT $LN10@gObjCountA
$LN9@gObjCountA:
  01348	8b 45 f8	 mov	 eax, DWORD PTR _i$220151[ebp]
  0134b	83 c0 01	 add	 eax, 1
  0134e	89 45 f8	 mov	 DWORD PTR _i$220151[ebp], eax
$LN10@gObjCountA:
  01351	83 7d f8 10	 cmp	 DWORD PTR _i$220151[ebp], 16 ; 00000010H
  01355	7d 6e		 jge	 SHORT $LN8@gObjCountA

; 829  : 	{
; 830  : 		if(count >= MAX_STATE_COUNT || count >= lpObj->m_btViewStateCount)

  01357	83 7d fc 10	 cmp	 DWORD PTR _count$[ebp], 16 ; 00000010H
  0135b	7d 0f		 jge	 SHORT $LN6@gObjCountA
  0135d	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01360	0f b6 88 27 02
	00 00		 movzx	 ecx, BYTE PTR [eax+551]
  01367	39 4d fc	 cmp	 DWORD PTR _count$[ebp], ecx
  0136a	7c 02		 jl	 SHORT $LN7@gObjCountA
$LN6@gObjCountA:

; 831  : 		{
; 832  : 			break;

  0136c	eb 57		 jmp	 SHORT $LN8@gObjCountA
$LN7@gObjCountA:

; 833  : 		}
; 834  : 
; 835  : 		if(lpObj->m_BuffEffectState[i].btBuffIndex == NULL)

  0136e	8b 45 f8	 mov	 eax, DWORD PTR _i$220151[ebp]
  01371	6b c0 14	 imul	 eax, 20			; 00000014H
  01374	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01377	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  0137f	85 d2		 test	 edx, edx
  01381	75 02		 jne	 SHORT $LN5@gObjCountA

; 836  : 		{
; 837  : 			continue;

  01383	eb c3		 jmp	 SHORT $LN9@gObjCountA
$LN5@gObjCountA:

; 838  : 		}
; 839  : 
; 840  : 		switch(lpObj->m_BuffEffectState[i].btBuffIndex)

  01385	8b 45 f8	 mov	 eax, DWORD PTR _i$220151[ebp]
  01388	6b c0 14	 imul	 eax, 20			; 00000014H
  0138b	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0138e	8a 94 01 28 02
	00 00		 mov	 dl, BYTE PTR [ecx+eax+552]
  01395	88 55 b4	 mov	 BYTE PTR tv82[ebp], dl
  01398	80 7d b4 00	 cmp	 BYTE PTR tv82[ebp], 0
  0139c	74 02		 je	 SHORT $LN2@gObjCountA
  0139e	eb 02		 jmp	 SHORT $LN1@gObjCountA
$LN2@gObjCountA:

; 841  : 		{
; 842  : 		case 0: //NULL
; 843  : 			break;

  013a0	eb 21		 jmp	 SHORT $LN3@gObjCountA
$LN1@gObjCountA:

; 844  : 		default:
; 845  : 			btEffectIndex[count] = lpObj->m_BuffEffectState[i].btBuffIndex;

  013a2	8b 45 f8	 mov	 eax, DWORD PTR _i$220151[ebp]
  013a5	6b c0 14	 imul	 eax, 20			; 00000014H
  013a8	8b 4d 0c	 mov	 ecx, DWORD PTR _btEffectIndex$[ebp]
  013ab	03 4d fc	 add	 ecx, DWORD PTR _count$[ebp]
  013ae	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  013b1	8a 84 02 28 02
	00 00		 mov	 al, BYTE PTR [edx+eax+552]
  013b8	88 01		 mov	 BYTE PTR [ecx], al

; 846  : 			count++;

  013ba	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  013bd	83 c0 01	 add	 eax, 1
  013c0	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN3@gObjCountA:

; 847  : 			break;
; 848  : 		}		
; 849  : 	}

  013c3	eb 83		 jmp	 SHORT $LN9@gObjCountA
$LN8@gObjCountA:

; 850  : 
; 851  : 	return count;

  013c5	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
$LN13@gObjCountA:

; 852  : }

  013c8	5f		 pop	 edi
  013c9	5e		 pop	 esi
  013ca	5b		 pop	 ebx
  013cb	8b e5		 mov	 esp, ebp
  013cd	5d		 pop	 ebp
  013ce	c3		 ret	 0
?gObjCountAppliedBuffEffect@@YAHPAUOBJECTSTRUCT@@PAE@Z ENDP ; gObjCountAppliedBuffEffect
_TEXT	ENDS
PUBLIC	?gObjCheckBuffEffectValue@@YAEPAUOBJECTSTRUCT@@HHH@Z ; gObjCheckBuffEffectValue
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$220172 = -4						; size = 4
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
_iValue1$ = 16						; size = 4
_iValue2$ = 20						; size = 4
?gObjCheckBuffEffectValue@@YAEPAUOBJECTSTRUCT@@HHH@Z PROC ; gObjCheckBuffEffectValue

; 856  : {

  013d0	55		 push	 ebp
  013d1	8b ec		 mov	 ebp, esp
  013d3	83 ec 44	 sub	 esp, 68			; 00000044H
  013d6	53		 push	 ebx
  013d7	56		 push	 esi
  013d8	57		 push	 edi

; 857  : 	if(lpObj == NULL)

  013d9	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  013dd	75 04		 jne	 SHORT $LN8@gObjCheckB

; 858  : 	{
; 859  : 		return 0;

  013df	32 c0		 xor	 al, al
  013e1	eb 71		 jmp	 SHORT $LN9@gObjCheckB
$LN8@gObjCheckB:

; 860  : 	}
; 861  : 
; 862  : 	if(lpObj->Connected < PLAYER_PLAYING)

  013e3	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  013e6	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  013ea	7d 04		 jge	 SHORT $LN7@gObjCheckB

; 863  : 	{
; 864  : 		return 0;

  013ec	32 c0		 xor	 al, al
  013ee	eb 64		 jmp	 SHORT $LN9@gObjCheckB
$LN7@gObjCheckB:

; 865  : 	}
; 866  : 
; 867  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  013f0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$220172[ebp], 0
  013f7	eb 09		 jmp	 SHORT $LN6@gObjCheckB
$LN5@gObjCheckB:
  013f9	8b 45 fc	 mov	 eax, DWORD PTR _i$220172[ebp]
  013fc	83 c0 01	 add	 eax, 1
  013ff	89 45 fc	 mov	 DWORD PTR _i$220172[ebp], eax
$LN6@gObjCheckB:
  01402	83 7d fc 10	 cmp	 DWORD PTR _i$220172[ebp], 16 ; 00000010H
  01406	7d 4a		 jge	 SHORT $LN4@gObjCheckB

; 868  : 	{
; 869  : 		if(lpObj->m_BuffEffectState[i].btBuffIndex == iEffectIndex)

  01408	8b 45 fc	 mov	 eax, DWORD PTR _i$220172[ebp]
  0140b	6b c0 14	 imul	 eax, 20			; 00000014H
  0140e	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01411	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  01419	3b 55 0c	 cmp	 edx, DWORD PTR _iEffectIndex$[ebp]
  0141c	75 32		 jne	 SHORT $LN3@gObjCheckB

; 870  : 		{
; 871  : 			if(lpObj->m_BuffEffectState[i].iValue1 > iValue1)

  0141e	8b 45 fc	 mov	 eax, DWORD PTR _i$220172[ebp]
  01421	6b c0 14	 imul	 eax, 20			; 00000014H
  01424	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01427	8b 94 01 2c 02
	00 00		 mov	 edx, DWORD PTR [ecx+eax+556]
  0142e	3b 55 10	 cmp	 edx, DWORD PTR _iValue1$[ebp]
  01431	7e 04		 jle	 SHORT $LN2@gObjCheckB

; 872  : 			{
; 873  : 				return 1;

  01433	b0 01		 mov	 al, 1
  01435	eb 1d		 jmp	 SHORT $LN9@gObjCheckB
$LN2@gObjCheckB:

; 874  : 			}
; 875  : 
; 876  : 			if(lpObj->m_BuffEffectState[i].iValue2 > iValue2)

  01437	8b 45 fc	 mov	 eax, DWORD PTR _i$220172[ebp]
  0143a	6b c0 14	 imul	 eax, 20			; 00000014H
  0143d	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01440	8b 94 01 30 02
	00 00		 mov	 edx, DWORD PTR [ecx+eax+560]
  01447	3b 55 14	 cmp	 edx, DWORD PTR _iValue2$[ebp]
  0144a	7e 04		 jle	 SHORT $LN3@gObjCheckB

; 877  : 			{
; 878  : 				return 1;

  0144c	b0 01		 mov	 al, 1
  0144e	eb 04		 jmp	 SHORT $LN9@gObjCheckB
$LN3@gObjCheckB:

; 879  : 			}			
; 880  : 		}
; 881  : 	}

  01450	eb a7		 jmp	 SHORT $LN5@gObjCheckB
$LN4@gObjCheckB:

; 882  : 
; 883  : 	return 0;

  01452	32 c0		 xor	 al, al
$LN9@gObjCheckB:

; 884  : }

  01454	5f		 pop	 edi
  01455	5e		 pop	 esi
  01456	5b		 pop	 ebx
  01457	8b e5		 mov	 esp, ebp
  01459	5d		 pop	 ebp
  0145a	c3		 ret	 0
?gObjCheckBuffEffectValue@@YAEPAUOBJECTSTRUCT@@HHH@Z ENDP ; gObjCheckBuffEffectValue
_TEXT	ENDS
PUBLIC	?gObjGetActiveEffect@@YAHPAUOBJECTSTRUCT@@H@Z	; gObjGetActiveEffect
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$220186 = -8						; size = 4
_iIndex$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_iEffectType$ = 12					; size = 4
?gObjGetActiveEffect@@YAHPAUOBJECTSTRUCT@@H@Z PROC	; gObjGetActiveEffect

; 888  : {

  01460	55		 push	 ebp
  01461	8b ec		 mov	 ebp, esp
  01463	83 ec 48	 sub	 esp, 72			; 00000048H
  01466	53		 push	 ebx
  01467	56		 push	 esi
  01468	57		 push	 edi

; 889  : 	if(lpObj == NULL)

  01469	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  0146d	75 07		 jne	 SHORT $LN8@gObjGetAct

; 890  : 	{
; 891  : 		return 0;

  0146f	33 c0		 xor	 eax, eax
  01471	e9 a3 00 00 00	 jmp	 $LN9@gObjGetAct
$LN8@gObjGetAct:

; 892  : 	}
; 893  : 
; 894  : 	if(lpObj->Connected < PLAYER_PLAYING)

  01476	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01479	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  0147d	7d 07		 jge	 SHORT $LN7@gObjGetAct

; 895  : 	{
; 896  : 		return 0;

  0147f	33 c0		 xor	 eax, eax
  01481	e9 93 00 00 00	 jmp	 $LN9@gObjGetAct
$LN7@gObjGetAct:

; 897  : 	}
; 898  : 
; 899  : 	int iIndex = 0;

  01486	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _iIndex$[ebp], 0

; 900  : 
; 901  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  0148d	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$220186[ebp], 0
  01494	eb 09		 jmp	 SHORT $LN6@gObjGetAct
$LN5@gObjGetAct:
  01496	8b 45 f8	 mov	 eax, DWORD PTR _i$220186[ebp]
  01499	83 c0 01	 add	 eax, 1
  0149c	89 45 f8	 mov	 DWORD PTR _i$220186[ebp], eax
$LN6@gObjGetAct:
  0149f	83 7d f8 10	 cmp	 DWORD PTR _i$220186[ebp], 16 ; 00000010H
  014a3	7d 71		 jge	 SHORT $LN4@gObjGetAct

; 902  : 	{
; 903  : 		if(lpObj->m_BuffEffectState[i].btBuffIndex == NULL)

  014a5	8b 45 f8	 mov	 eax, DWORD PTR _i$220186[ebp]
  014a8	6b c0 14	 imul	 eax, 20			; 00000014H
  014ab	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  014ae	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  014b6	85 d2		 test	 edx, edx
  014b8	75 02		 jne	 SHORT $LN3@gObjGetAct

; 904  : 		{
; 905  : 			continue;

  014ba	eb da		 jmp	 SHORT $LN5@gObjGetAct
$LN3@gObjGetAct:

; 906  : 		}
; 907  : 
; 908  : 		if(lpObj->m_BuffEffectState[i].btEffectType1 == iEffectType)

  014bc	8b 45 f8	 mov	 eax, DWORD PTR _i$220186[ebp]
  014bf	6b c0 14	 imul	 eax, 20			; 00000014H
  014c2	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  014c5	0f b6 94 01 2a
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+554]
  014cd	3b 55 0c	 cmp	 edx, DWORD PTR _iEffectType$[ebp]
  014d0	75 16		 jne	 SHORT $LN2@gObjGetAct

; 909  : 		{
; 910  : 			iIndex += lpObj->m_BuffEffectState[i].iValue1;

  014d2	8b 45 f8	 mov	 eax, DWORD PTR _i$220186[ebp]
  014d5	6b c0 14	 imul	 eax, 20			; 00000014H
  014d8	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  014db	8b 55 fc	 mov	 edx, DWORD PTR _iIndex$[ebp]
  014de	03 94 01 2c 02
	00 00		 add	 edx, DWORD PTR [ecx+eax+556]
  014e5	89 55 fc	 mov	 DWORD PTR _iIndex$[ebp], edx
$LN2@gObjGetAct:

; 911  : 		}
; 912  : 
; 913  : 		if(lpObj->m_BuffEffectState[i].btEffectType2 == iEffectType)

  014e8	8b 45 f8	 mov	 eax, DWORD PTR _i$220186[ebp]
  014eb	6b c0 14	 imul	 eax, 20			; 00000014H
  014ee	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  014f1	0f b6 94 01 2b
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+555]
  014f9	3b 55 0c	 cmp	 edx, DWORD PTR _iEffectType$[ebp]
  014fc	75 16		 jne	 SHORT $LN1@gObjGetAct

; 914  : 		{
; 915  : 			iIndex += lpObj->m_BuffEffectState[i].iValue2;

  014fe	8b 45 f8	 mov	 eax, DWORD PTR _i$220186[ebp]
  01501	6b c0 14	 imul	 eax, 20			; 00000014H
  01504	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01507	8b 55 fc	 mov	 edx, DWORD PTR _iIndex$[ebp]
  0150a	03 94 01 30 02
	00 00		 add	 edx, DWORD PTR [ecx+eax+560]
  01511	89 55 fc	 mov	 DWORD PTR _iIndex$[ebp], edx
$LN1@gObjGetAct:

; 916  : 		}
; 917  : 	}

  01514	eb 80		 jmp	 SHORT $LN5@gObjGetAct
$LN4@gObjGetAct:

; 918  : 
; 919  : 	return iIndex;

  01516	8b 45 fc	 mov	 eax, DWORD PTR _iIndex$[ebp]
$LN9@gObjGetAct:

; 920  : }

  01519	5f		 pop	 edi
  0151a	5e		 pop	 esi
  0151b	5b		 pop	 ebx
  0151c	8b e5		 mov	 esp, ebp
  0151e	5d		 pop	 ebp
  0151f	c3		 ret	 0
?gObjGetActiveEffect@@YAHPAUOBJECTSTRUCT@@H@Z ENDP	; gObjGetActiveEffect
_TEXT	ENDS
PUBLIC	?gObjUpdateAppliedBuffEffect@@YAEPAUOBJECTSTRUCT@@HPAH1@Z ; gObjUpdateAppliedBuffEffect
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$220201 = -4						; size = 4
_lpObj$ = 8						; size = 4
_iEffectIndex$ = 12					; size = 4
_iValue1$ = 16						; size = 4
_iValue2$ = 20						; size = 4
?gObjUpdateAppliedBuffEffect@@YAEPAUOBJECTSTRUCT@@HPAH1@Z PROC ; gObjUpdateAppliedBuffEffect

; 924  : {

  01520	55		 push	 ebp
  01521	8b ec		 mov	 ebp, esp
  01523	83 ec 44	 sub	 esp, 68			; 00000044H
  01526	53		 push	 ebx
  01527	56		 push	 esi
  01528	57		 push	 edi

; 925  : 	if(lpObj == NULL)

  01529	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  0152d	75 04		 jne	 SHORT $LN7@gObjUpdate@2

; 926  : 	{
; 927  : 		return 0;

  0152f	32 c0		 xor	 al, al
  01531	eb 73		 jmp	 SHORT $LN8@gObjUpdate@2
$LN7@gObjUpdate@2:

; 928  : 	}
; 929  : 
; 930  : 	if(lpObj->Connected < PLAYER_PLAYING)

  01533	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01536	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  0153a	7d 04		 jge	 SHORT $LN6@gObjUpdate@2

; 931  : 	{
; 932  : 		return 0;

  0153c	32 c0		 xor	 al, al
  0153e	eb 66		 jmp	 SHORT $LN8@gObjUpdate@2
$LN6@gObjUpdate@2:

; 933  : 	}
; 934  : 
; 935  : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  01540	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$220201[ebp], 0
  01547	eb 09		 jmp	 SHORT $LN5@gObjUpdate@2
$LN4@gObjUpdate@2:
  01549	8b 45 fc	 mov	 eax, DWORD PTR _i$220201[ebp]
  0154c	83 c0 01	 add	 eax, 1
  0154f	89 45 fc	 mov	 DWORD PTR _i$220201[ebp], eax
$LN5@gObjUpdate@2:
  01552	83 7d fc 10	 cmp	 DWORD PTR _i$220201[ebp], 16 ; 00000010H
  01556	7d 4c		 jge	 SHORT $LN3@gObjUpdate@2

; 936  : 	{
; 937  : 		if(lpObj->m_BuffEffectState[i].btBuffIndex == iEffectIndex)

  01558	8b 45 fc	 mov	 eax, DWORD PTR _i$220201[ebp]
  0155b	6b c0 14	 imul	 eax, 20			; 00000014H
  0155e	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01561	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  01569	3b 55 0c	 cmp	 edx, DWORD PTR _iEffectIndex$[ebp]
  0156c	75 34		 jne	 SHORT $LN2@gObjUpdate@2

; 938  : 		{
; 939  : 			*iValue1 = lpObj->m_BuffEffectState[i].iValue1;

  0156e	8b 45 fc	 mov	 eax, DWORD PTR _i$220201[ebp]
  01571	6b c0 14	 imul	 eax, 20			; 00000014H
  01574	8b 4d 10	 mov	 ecx, DWORD PTR _iValue1$[ebp]
  01577	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0157a	8b 84 02 2c 02
	00 00		 mov	 eax, DWORD PTR [edx+eax+556]
  01581	89 01		 mov	 DWORD PTR [ecx], eax

; 940  : 
; 941  : 			if(iValue2 != 0)

  01583	83 7d 14 00	 cmp	 DWORD PTR _iValue2$[ebp], 0
  01587	74 15		 je	 SHORT $LN1@gObjUpdate@2

; 942  : 			{
; 943  : 				*iValue2 = lpObj->m_BuffEffectState[i].iValue2;

  01589	8b 45 fc	 mov	 eax, DWORD PTR _i$220201[ebp]
  0158c	6b c0 14	 imul	 eax, 20			; 00000014H
  0158f	8b 4d 14	 mov	 ecx, DWORD PTR _iValue2$[ebp]
  01592	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01595	8b 84 02 30 02
	00 00		 mov	 eax, DWORD PTR [edx+eax+560]
  0159c	89 01		 mov	 DWORD PTR [ecx], eax
$LN1@gObjUpdate@2:

; 944  : 			}
; 945  : 
; 946  : 			return 1;

  0159e	b0 01		 mov	 al, 1
  015a0	eb 04		 jmp	 SHORT $LN8@gObjUpdate@2
$LN2@gObjUpdate@2:

; 947  : 		}
; 948  : 	}

  015a2	eb a5		 jmp	 SHORT $LN4@gObjUpdate@2
$LN3@gObjUpdate@2:

; 949  : 
; 950  : 	return 0;

  015a4	32 c0		 xor	 al, al
$LN8@gObjUpdate@2:

; 951  : }

  015a6	5f		 pop	 edi
  015a7	5e		 pop	 esi
  015a8	5b		 pop	 ebx
  015a9	8b e5		 mov	 esp, ebp
  015ab	5d		 pop	 ebp
  015ac	c3		 ret	 0
?gObjUpdateAppliedBuffEffect@@YAEPAUOBJECTSTRUCT@@HPAH1@Z ENDP ; gObjUpdateAppliedBuffEffect
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?GCDisplayBuffeffectPartyMember@@YAXH@Z:PROC	; GCDisplayBuffeffectPartyMember
EXTRN	?GCStateInfoSend@@YAXPAUOBJECTSTRUCT@@EE@Z:PROC	; GCStateInfoSend
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	?PHeadSetB@@YAXPAEEH@Z:PROC			; PHeadSetB
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pMsg$ = -24						; size = 20
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_btEffectIndex$ = 12					; size = 1
_btEffectUseOption$ = 16				; size = 1
_wOptionType$ = 20					; size = 2
_wEffectType$ = 24					; size = 2
_iLeftTime$ = 28					; size = 4
?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z PROC	; GCUseBuffEffect

; 955  : {

  015b0	55		 push	 ebp
  015b1	8b ec		 mov	 ebp, esp
  015b3	83 ec 58	 sub	 esp, 88			; 00000058H
  015b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  015bb	33 c5		 xor	 eax, ebp
  015bd	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  015c0	53		 push	 ebx
  015c1	56		 push	 esi
  015c2	57		 push	 edi

; 956  : 	PMSG_SEND_BUFF_ICON pMsg;
; 957  : 
; 958  : 	PHeadSetB((LPBYTE)&pMsg, 0x2D, sizeof(PMSG_SEND_BUFF_ICON));

  015c3	6a 14		 push	 20			; 00000014H
  015c5	6a 2d		 push	 45			; 0000002dH
  015c7	8d 45 e8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  015ca	50		 push	 eax
  015cb	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  015d0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 959  : 
; 960  : 	pMsg.btEffectIndex = btEffectIndex;

  015d3	8a 45 0c	 mov	 al, BYTE PTR _btEffectIndex$[ebp]
  015d6	88 45 f8	 mov	 BYTE PTR _pMsg$[ebp+16], al

; 961  : 	pMsg.byEffectOption = btEffectUseOption;

  015d9	8a 45 10	 mov	 al, BYTE PTR _btEffectUseOption$[ebp]
  015dc	88 45 f0	 mov	 BYTE PTR _pMsg$[ebp+8], al

; 962  : 	pMsg.wOptionType = wOptionType;

  015df	66 8b 45 14	 mov	 ax, WORD PTR _wOptionType$[ebp]
  015e3	66 89 45 ec	 mov	 WORD PTR _pMsg$[ebp+4], ax

; 963  : 	pMsg.wEffectType = wEffectType;

  015e7	66 8b 45 18	 mov	 ax, WORD PTR _wEffectType$[ebp]
  015eb	66 89 45 ee	 mov	 WORD PTR _pMsg$[ebp+6], ax

; 964  : 	pMsg.iLeftTime = iLeftTime;

  015ef	8b 45 1c	 mov	 eax, DWORD PTR _iLeftTime$[ebp]
  015f2	89 45 f4	 mov	 DWORD PTR _pMsg$[ebp+12], eax

; 965  : 
; 966  : 	if ( lpObj->Type == OBJ_USER )

  015f5	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  015f8	0f b7 48 68	 movzx	 ecx, WORD PTR [eax+104]
  015fc	83 f9 01	 cmp	 ecx, 1
  015ff	75 17		 jne	 SHORT $LN3@GCUseBuffE

; 967  : 	{
; 968  : 		DataSend(lpObj->m_Index, (LPBYTE)&pMsg, pMsg.h.size);

  01601	0f b6 45 e9	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  01605	50		 push	 eax
  01606	8d 4d e8	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  01609	51		 push	 ecx
  0160a	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0160d	8b 02		 mov	 eax, DWORD PTR [edx]
  0160f	50		 push	 eax
  01610	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  01615	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@GCUseBuffE:

; 969  : 	}
; 970  : 
; 971  : 	if(btEffectUseOption == 0)

  01618	0f b6 45 10	 movzx	 eax, BYTE PTR _btEffectUseOption$[ebp]
  0161c	85 c0		 test	 eax, eax
  0161e	75 15		 jne	 SHORT $LN2@GCUseBuffE

; 972  : 	{
; 973  : 		GCStateInfoSend(lpObj, 1, btEffectIndex);

  01620	0f b6 45 0c	 movzx	 eax, BYTE PTR _btEffectIndex$[ebp]
  01624	50		 push	 eax
  01625	6a 01		 push	 1
  01627	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0162a	51		 push	 ecx
  0162b	e8 00 00 00 00	 call	 ?GCStateInfoSend@@YAXPAUOBJECTSTRUCT@@EE@Z ; GCStateInfoSend
  01630	83 c4 0c	 add	 esp, 12			; 0000000cH

; 974  : 	}
; 975  : 	else

  01633	eb 13		 jmp	 SHORT $LN1@GCUseBuffE
$LN2@GCUseBuffE:

; 976  : 	{
; 977  : 		GCStateInfoSend(lpObj, 0, btEffectIndex);

  01635	0f b6 45 0c	 movzx	 eax, BYTE PTR _btEffectIndex$[ebp]
  01639	50		 push	 eax
  0163a	6a 00		 push	 0
  0163c	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0163f	51		 push	 ecx
  01640	e8 00 00 00 00	 call	 ?GCStateInfoSend@@YAXPAUOBJECTSTRUCT@@EE@Z ; GCStateInfoSend
  01645	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@GCUseBuffE:

; 978  : 	}
; 979  : #ifdef _EX_DEV_BUFF_PT_
; 980  : 	//GCUseBuffEffect
; 981  : 	//GCDisplayBuffeffectPartyMember(v10);
; 982  : 	GCDisplayBuffeffectPartyMember(lpObj->m_Index);

  01648	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0164b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0164d	51		 push	 ecx
  0164e	e8 00 00 00 00	 call	 ?GCDisplayBuffeffectPartyMember@@YAXH@Z ; GCDisplayBuffeffectPartyMember
  01653	83 c4 04	 add	 esp, 4

; 983  : #endif
; 984  : }

  01656	5f		 pop	 edi
  01657	5e		 pop	 esi
  01658	5b		 pop	 ebx
  01659	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0165c	33 cd		 xor	 ecx, ebp
  0165e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01663	8b e5		 mov	 esp, ebp
  01665	5d		 pop	 ebp
  01666	c3		 ret	 0
?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z ENDP	; GCUseBuffEffect
; Function compile flags: /Odtp /ZI
_i$220228 = -4						; size = 4
_lpObj$ = 8						; size = 4
?gObjNotifyUserViewportBuffEffect@@YAXPAUOBJECTSTRUCT@@@Z PROC ; gObjNotifyUserViewportBuffEffect

; 988  : {

  01670	55		 push	 ebp
  01671	8b ec		 mov	 ebp, esp
  01673	83 ec 44	 sub	 esp, 68			; 00000044H
  01676	53		 push	 ebx
  01677	56		 push	 esi
  01678	57		 push	 edi

; 989  : 	if(lpObj == NULL)

  01679	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  0167d	75 02		 jne	 SHORT $LN7@gObjNotify

; 990  : 	{
; 991  : 		return;

  0167f	eb 6d		 jmp	 SHORT $LN8@gObjNotify
$LN7@gObjNotify:

; 992  : 	}
; 993  : 
; 994  : 	if(lpObj->Type != OBJ_USER)

  01681	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01684	0f b7 48 68	 movzx	 ecx, WORD PTR [eax+104]
  01688	83 f9 01	 cmp	 ecx, 1
  0168b	74 02		 je	 SHORT $LN6@gObjNotify

; 995  : 	{
; 996  : 		return;

  0168d	eb 5f		 jmp	 SHORT $LN8@gObjNotify
$LN6@gObjNotify:

; 997  : 	}
; 998  : 
; 999  : 	if(lpObj->m_btViewStateCount <= 0)

  0168f	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01692	0f b6 88 27 02
	00 00		 movzx	 ecx, BYTE PTR [eax+551]
  01699	85 c9		 test	 ecx, ecx
  0169b	7f 02		 jg	 SHORT $LN5@gObjNotify

; 1000 : 	{
; 1001 : 		return;

  0169d	eb 4f		 jmp	 SHORT $LN8@gObjNotify
$LN5@gObjNotify:

; 1002 : 	}
; 1003 : 
; 1004 : 	for(int i = 0; i < MAX_STATE_COUNT; i++)

  0169f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$220228[ebp], 0
  016a6	eb 09		 jmp	 SHORT $LN4@gObjNotify
$LN3@gObjNotify:
  016a8	8b 45 fc	 mov	 eax, DWORD PTR _i$220228[ebp]
  016ab	83 c0 01	 add	 eax, 1
  016ae	89 45 fc	 mov	 DWORD PTR _i$220228[ebp], eax
$LN4@gObjNotify:
  016b1	83 7d fc 10	 cmp	 DWORD PTR _i$220228[ebp], 16 ; 00000010H
  016b5	7d 37		 jge	 SHORT $LN8@gObjNotify

; 1005 : 	{
; 1006 : 		if(lpObj->m_BuffEffectState[i].btBuffIndex != NULL)

  016b7	8b 45 fc	 mov	 eax, DWORD PTR _i$220228[ebp]
  016ba	6b c0 14	 imul	 eax, 20			; 00000014H
  016bd	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  016c0	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  016c8	85 d2		 test	 edx, edx
  016ca	74 20		 je	 SHORT $LN1@gObjNotify

; 1007 : 		{
; 1008 : 			GCStateInfoSend(lpObj, 1, lpObj->m_BuffEffectState[i].btBuffIndex);

  016cc	8b 45 fc	 mov	 eax, DWORD PTR _i$220228[ebp]
  016cf	6b c0 14	 imul	 eax, 20			; 00000014H
  016d2	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  016d5	0f b6 94 01 28
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+552]
  016dd	52		 push	 edx
  016de	6a 01		 push	 1
  016e0	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  016e3	50		 push	 eax
  016e4	e8 00 00 00 00	 call	 ?GCStateInfoSend@@YAXPAUOBJECTSTRUCT@@EE@Z ; GCStateInfoSend
  016e9	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@gObjNotify:

; 1009 : 		}
; 1010 : 	}

  016ec	eb ba		 jmp	 SHORT $LN3@gObjNotify
$LN8@gObjNotify:

; 1011 : }

  016ee	5f		 pop	 edi
  016ef	5e		 pop	 esi
  016f0	5b		 pop	 ebx
  016f1	8b e5		 mov	 esp, ebp
  016f3	5d		 pop	 ebp
  016f4	c3		 ret	 0
?gObjNotifyUserViewportBuffEffect@@YAXPAUOBJECTSTRUCT@@@Z ENDP ; gObjNotifyUserViewportBuffEffect
_TEXT	ENDS
PUBLIC	?gObjGiveRewardBuff@@YAHPAUOBJECTSTRUCT@@HPAHHEHEHH@Z ; gObjGiveRewardBuff
EXTRN	?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z:PROC	; gObjCalDistance
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_lpTargetObj$220249 = -8				; size = 4
_iIndex$220245 = -4					; size = 4
_lpObj$ = 8						; size = 4
_dis$ = 12						; size = 4
_count$ = 16						; size = 4
_EffectIndex$ = 20					; size = 4
_btEffectType1$ = 24					; size = 1
_iValue1$ = 28						; size = 4
_btEffectType2$ = 32					; size = 1
_iValue2$ = 36						; size = 4
_iDuration$ = 40					; size = 4
?gObjGiveRewardBuff@@YAHPAUOBJECTSTRUCT@@HPAHHEHEHH@Z PROC ; gObjGiveRewardBuff

; 1015 : {

  01700	55		 push	 ebp
  01701	8b ec		 mov	 ebp, esp
  01703	83 ec 48	 sub	 esp, 72			; 00000048H
  01706	53		 push	 ebx
  01707	56		 push	 esi
  01708	57		 push	 edi

; 1016 : 	if(lpObj == NULL)

  01709	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  0170d	75 07		 jne	 SHORT $LN7@gObjGiveRe

; 1017 : 	{
; 1018 : 		return FALSE;

  0170f	33 c0		 xor	 eax, eax
  01711	e9 b7 00 00 00	 jmp	 $LN8@gObjGiveRe
$LN7@gObjGiveRe:

; 1019 : 	}
; 1020 : 
; 1021 : 	for(int iIndex = OBJ_STARTUSERINDEX; iIndex < OBJMAX; iIndex++)

  01716	c7 45 fc b0 36
	00 00		 mov	 DWORD PTR _iIndex$220245[ebp], 14000 ; 000036b0H
  0171d	eb 09		 jmp	 SHORT $LN6@gObjGiveRe
$LN5@gObjGiveRe:
  0171f	8b 45 fc	 mov	 eax, DWORD PTR _iIndex$220245[ebp]
  01722	83 c0 01	 add	 eax, 1
  01725	89 45 fc	 mov	 DWORD PTR _iIndex$220245[ebp], eax
$LN6@gObjGiveRe:
  01728	81 7d fc 98 3a
	00 00		 cmp	 DWORD PTR _iIndex$220245[ebp], 15000 ; 00003a98H
  0172f	0f 8d 93 00 00
	00		 jge	 $LN4@gObjGiveRe

; 1022 : 	{
; 1023 : 		LPOBJ lpTargetObj = &gObj[iIndex];

  01735	8b 45 fc	 mov	 eax, DWORD PTR _iIndex$220245[ebp]
  01738	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0173e	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01744	89 45 f8	 mov	 DWORD PTR _lpTargetObj$220249[ebp], eax

; 1024 : 
; 1025 : 		if(lpTargetObj->Type == OBJ_USER && gObjIsConnected(iIndex) != FALSE)

  01747	8b 45 f8	 mov	 eax, DWORD PTR _lpTargetObj$220249[ebp]
  0174a	0f b7 48 68	 movzx	 ecx, WORD PTR [eax+104]
  0174e	83 f9 01	 cmp	 ecx, 1
  01751	75 70		 jne	 SHORT $LN3@gObjGiveRe
  01753	8b 45 fc	 mov	 eax, DWORD PTR _iIndex$220245[ebp]
  01756	50		 push	 eax
  01757	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0175c	83 c4 04	 add	 esp, 4
  0175f	85 c0		 test	 eax, eax
  01761	74 60		 je	 SHORT $LN3@gObjGiveRe

; 1026 : 		{
; 1027 : 			if(lpTargetObj->MapNumber == lpObj->MapNumber)

  01763	8b 45 f8	 mov	 eax, DWORD PTR _lpTargetObj$220249[ebp]
  01766	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  0176d	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01770	0f b6 82 49 01
	00 00		 movzx	 eax, BYTE PTR [edx+329]
  01777	3b c8		 cmp	 ecx, eax
  01779	75 48		 jne	 SHORT $LN3@gObjGiveRe

; 1028 : 			{
; 1029 : 				if(gObjCalDistance(lpObj, lpTargetObj) < dis)

  0177b	8b 45 f8	 mov	 eax, DWORD PTR _lpTargetObj$220249[ebp]
  0177e	50		 push	 eax
  0177f	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01782	51		 push	 ecx
  01783	e8 00 00 00 00	 call	 ?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z ; gObjCalDistance
  01788	83 c4 08	 add	 esp, 8
  0178b	3b 45 0c	 cmp	 eax, DWORD PTR _dis$[ebp]
  0178e	7d 33		 jge	 SHORT $LN3@gObjGiveRe

; 1030 : 				{
; 1031 : 					gObjApplyBuffEffectDuration(lpTargetObj, EffectIndex, btEffectType1, iValue1, btEffectType2, iValue2, iDuration);

  01790	8b 45 28	 mov	 eax, DWORD PTR _iDuration$[ebp]
  01793	50		 push	 eax
  01794	8b 4d 24	 mov	 ecx, DWORD PTR _iValue2$[ebp]
  01797	51		 push	 ecx
  01798	0f b6 55 20	 movzx	 edx, BYTE PTR _btEffectType2$[ebp]
  0179c	52		 push	 edx
  0179d	8b 45 1c	 mov	 eax, DWORD PTR _iValue1$[ebp]
  017a0	50		 push	 eax
  017a1	0f b6 4d 18	 movzx	 ecx, BYTE PTR _btEffectType1$[ebp]
  017a5	51		 push	 ecx
  017a6	8b 55 14	 mov	 edx, DWORD PTR _EffectIndex$[ebp]
  017a9	52		 push	 edx
  017aa	8b 45 f8	 mov	 eax, DWORD PTR _lpTargetObj$220249[ebp]
  017ad	50		 push	 eax
  017ae	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration
  017b3	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1032 : 					*count+= 1;

  017b6	8b 45 10	 mov	 eax, DWORD PTR _count$[ebp]
  017b9	8b 08		 mov	 ecx, DWORD PTR [eax]
  017bb	83 c1 01	 add	 ecx, 1
  017be	8b 55 10	 mov	 edx, DWORD PTR _count$[ebp]
  017c1	89 0a		 mov	 DWORD PTR [edx], ecx
$LN3@gObjGiveRe:

; 1033 : 				}
; 1034 : 			}
; 1035 : 		}
; 1036 : 	}

  017c3	e9 57 ff ff ff	 jmp	 $LN5@gObjGiveRe
$LN4@gObjGiveRe:

; 1037 : 	return TRUE;

  017c8	b8 01 00 00 00	 mov	 eax, 1
$LN8@gObjGiveRe:

; 1038 : }

  017cd	5f		 pop	 edi
  017ce	5e		 pop	 esi
  017cf	5b		 pop	 ebx
  017d0	8b e5		 mov	 esp, ebp
  017d2	5d		 pop	 ebp
  017d3	c3		 ret	 0
?gObjGiveRewardBuff@@YAHPAUOBJECTSTRUCT@@HPAHHEHEHH@Z ENDP ; gObjGiveRewardBuff
_TEXT	ENDS
PUBLIC	?gObjSealUserSetExp@@YAXPAUOBJECTSTRUCT@@AA_JH@Z ; gObjSealUserSetExp
EXTRN	?CheckIsMasterLevelCharacter@CMasterLevelSystem@@QAEHPAUOBJECTSTRUCT@@@Z:PROC ; CMasterLevelSystem::CheckIsMasterLevelCharacter
EXTRN	?g_MasterLevelSystem@@3VCMasterLevelSystem@@A:BYTE ; g_MasterLevelSystem
EXTRN	__alldiv:PROC
EXTRN	__allmul:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_iMasterLevelCharacter$220265 = -16			; size = 4
_iGAIN_EXP$220264 = -12					; size = 4
_iCAL_EXP$ = -8						; size = 8
_lpObj$ = 8						; size = 4
_Experience$ = 12					; size = 4
_bDisableExtraGainExp$ = 16				; size = 4
?gObjSealUserSetExp@@YAXPAUOBJECTSTRUCT@@AA_JH@Z PROC	; gObjSealUserSetExp

; 1043 : {

  017e0	55		 push	 ebp
  017e1	8b ec		 mov	 ebp, esp
  017e3	83 ec 50	 sub	 esp, 80			; 00000050H
  017e6	53		 push	 ebx
  017e7	56		 push	 esi
  017e8	57		 push	 edi

; 1044 : 	__int64 iCAL_EXP = Experience; //loc2

  017e9	8b 45 0c	 mov	 eax, DWORD PTR _Experience$[ebp]
  017ec	8b 08		 mov	 ecx, DWORD PTR [eax]
  017ee	89 4d f8	 mov	 DWORD PTR _iCAL_EXP$[ebp], ecx
  017f1	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  017f4	89 55 fc	 mov	 DWORD PTR _iCAL_EXP$[ebp+4], edx

; 1045 : 
; 1046 : 	if( gObjSearchActiveEffect(lpObj, AT_CSHOP_SEAL_OF_SUSTENANCE) != FALSE || //Seal of Sustenance
; 1047 : 		gObjSearchActiveEffect(lpObj, AT_PCBANG_SEAL_OF_SUSTENANCE) != FALSE) 

  017f7	6a 2a		 push	 42			; 0000002aH
  017f9	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  017fc	50		 push	 eax
  017fd	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  01802	83 c4 08	 add	 esp, 8
  01805	0f b6 c8	 movzx	 ecx, al
  01808	85 c9		 test	 ecx, ecx
  0180a	75 15		 jne	 SHORT $LN14@gObjSealUs
  0180c	6a 1f		 push	 31			; 0000001fH
  0180e	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01811	50		 push	 eax
  01812	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  01817	83 c4 08	 add	 esp, 8
  0181a	0f b6 c8	 movzx	 ecx, al
  0181d	85 c9		 test	 ecx, ecx
  0181f	74 13		 je	 SHORT $LN15@gObjSealUs
$LN14@gObjSealUs:

; 1048 : 	{
; 1049 : 		iCAL_EXP = 0;

  01821	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iCAL_EXP$[ebp], 0
  01828	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _iCAL_EXP$[ebp+4], 0

; 1050 : 	}
; 1051 : 	else if( gObjSearchActiveEffect(lpObj, AT_CSHOP_SEAL_OF_ASCENSION) != FALSE || 

  0182f	e9 70 01 00 00	 jmp	 $LN13@gObjSealUs
$LN15@gObjSealUs:

; 1052 : 		     gObjSearchActiveEffect(lpObj, AT_CSHOP_SEAL_OF_WEALTH) != FALSE ||
; 1053 : 			 
; 1054 : 			 //Season 4.5 fix
; 1055 : 			 gObjSearchActiveEffect(lpObj, AT_PCBANG_SEAL_OF_ASCENSION) != FALSE ||
; 1056 : 			 gObjSearchActiveEffect(lpObj, AT_PCBANG_SEAL_OF_WEALTH) != FALSE ||
; 1057 : 			
; 1058 : 			 gObjSearchActiveEffect(lpObj, AT_CSHOP_SEAL_OF_HEALING) != FALSE ||
; 1059 : 
; 1060 : 			 //Season 4.5 update
; 1061 : 			 gObjSearchActiveEffect(lpObj, AT_CSHOP_MASTER_SEAL_OF_ASCENSION) != FALSE ||
; 1062 : 			 gObjSearchActiveEffect(lpObj, AT_CSHOP_MASTER_SEAL_OF_WEALTH) != FALSE ) //Seal of Ascension & Seal of Wealth & Seal of Healing

  01834	6a 28		 push	 40			; 00000028H
  01836	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01839	50		 push	 eax
  0183a	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  0183f	83 c4 08	 add	 esp, 8
  01842	0f b6 c8	 movzx	 ecx, al
  01845	85 c9		 test	 ecx, ecx
  01847	0f 85 82 00 00
	00		 jne	 $LN11@gObjSealUs
  0184d	6a 29		 push	 41			; 00000029H
  0184f	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01852	50		 push	 eax
  01853	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  01858	83 c4 08	 add	 esp, 8
  0185b	0f b6 c8	 movzx	 ecx, al
  0185e	85 c9		 test	 ecx, ecx
  01860	75 6d		 jne	 SHORT $LN11@gObjSealUs
  01862	6a 1d		 push	 29			; 0000001dH
  01864	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01867	50		 push	 eax
  01868	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  0186d	83 c4 08	 add	 esp, 8
  01870	0f b6 c8	 movzx	 ecx, al
  01873	85 c9		 test	 ecx, ecx
  01875	75 58		 jne	 SHORT $LN11@gObjSealUs
  01877	6a 1e		 push	 30			; 0000001eH
  01879	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0187c	50		 push	 eax
  0187d	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  01882	83 c4 08	 add	 esp, 8
  01885	0f b6 c8	 movzx	 ecx, al
  01888	85 c9		 test	 ecx, ecx
  0188a	75 43		 jne	 SHORT $LN11@gObjSealUs
  0188c	6a 57		 push	 87			; 00000057H
  0188e	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01891	50		 push	 eax
  01892	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  01897	83 c4 08	 add	 esp, 8
  0189a	0f b6 c8	 movzx	 ecx, al
  0189d	85 c9		 test	 ecx, ecx
  0189f	75 2e		 jne	 SHORT $LN11@gObjSealUs
  018a1	6a 65		 push	 101			; 00000065H
  018a3	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  018a6	50		 push	 eax
  018a7	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  018ac	83 c4 08	 add	 esp, 8
  018af	0f b6 c8	 movzx	 ecx, al
  018b2	85 c9		 test	 ecx, ecx
  018b4	75 19		 jne	 SHORT $LN11@gObjSealUs
  018b6	6a 66		 push	 102			; 00000066H
  018b8	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  018bb	50		 push	 eax
  018bc	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  018c1	83 c4 08	 add	 esp, 8
  018c4	0f b6 c8	 movzx	 ecx, al
  018c7	85 c9		 test	 ecx, ecx
  018c9	0f 84 d5 00 00
	00		 je	 $LN13@gObjSealUs
$LN11@gObjSealUs:

; 1063 : 	{
; 1064 : 		int iGAIN_EXP = 0; //Set Gain Exp Disable (Dangerous should be 100 = Default)

  018cf	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _iGAIN_EXP$220264[ebp], 0

; 1065 : 
; 1066 : 		iGAIN_EXP = gObjGetActiveEffect(lpObj, ADD_OPTION_EXPERIENCE); //#define ADD_OPTION_EXPERIENCE	6

  018d6	6a 06		 push	 6
  018d8	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  018db	50		 push	 eax
  018dc	e8 00 00 00 00	 call	 ?gObjGetActiveEffect@@YAHPAUOBJECTSTRUCT@@H@Z ; gObjGetActiveEffect
  018e1	83 c4 08	 add	 esp, 8
  018e4	89 45 f4	 mov	 DWORD PTR _iGAIN_EXP$220264[ebp], eax

; 1067 : 
; 1068 : 		int iMasterLevelCharacter = g_MasterLevelSystem.CheckIsMasterLevelCharacter(lpObj); //season 4.5 add-on

  018e7	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  018ea	50		 push	 eax
  018eb	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MasterLevelSystem@@3VCMasterLevelSystem@@A ; g_MasterLevelSystem
  018f0	e8 00 00 00 00	 call	 ?CheckIsMasterLevelCharacter@CMasterLevelSystem@@QAEHPAUOBJECTSTRUCT@@@Z ; CMasterLevelSystem::CheckIsMasterLevelCharacter
  018f5	89 45 f0	 mov	 DWORD PTR _iMasterLevelCharacter$220265[ebp], eax

; 1069 : 
; 1070 : 		if( iMasterLevelCharacter != 0 )

  018f8	83 7d f0 00	 cmp	 DWORD PTR _iMasterLevelCharacter$220265[ebp], 0
  018fc	74 42		 je	 SHORT $LN10@gObjSealUs

; 1071 : 		{
; 1072 : 			if(gObjSearchActiveEffect(lpObj, AT_CSHOP_MASTER_SEAL_OF_ASCENSION) != FALSE || 
; 1073 : 				gObjSearchActiveEffect(lpObj, AT_CSHOP_MASTER_SEAL_OF_WEALTH) != FALSE)

  018fe	6a 65		 push	 101			; 00000065H
  01900	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01903	50		 push	 eax
  01904	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  01909	83 c4 08	 add	 esp, 8
  0190c	0f b6 c8	 movzx	 ecx, al
  0190f	85 c9		 test	 ecx, ecx
  01911	75 15		 jne	 SHORT $LN8@gObjSealUs
  01913	6a 66		 push	 102			; 00000066H
  01915	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01918	50		 push	 eax
  01919	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  0191e	83 c4 08	 add	 esp, 8
  01921	0f b6 c8	 movzx	 ecx, al
  01924	85 c9		 test	 ecx, ecx
  01926	74 0f		 je	 SHORT $LN9@gObjSealUs
$LN8@gObjSealUs:

; 1074 : 			{
; 1075 : 				if(bDisableExtraGainExp != FALSE)

  01928	83 7d 10 00	 cmp	 DWORD PTR _bDisableExtraGainExp$[ebp], 0
  0192c	74 07		 je	 SHORT $LN7@gObjSealUs

; 1076 : 				{
; 1077 : 					iGAIN_EXP = 100; //100% Gain EXP from g_MLAddExperience (Default value) if using Master Seal and bDisableExtraGainExp = TRUE

  0192e	c7 45 f4 64 00
	00 00		 mov	 DWORD PTR _iGAIN_EXP$220264[ebp], 100 ; 00000064H
$LN7@gObjSealUs:

; 1078 : 				}
; 1079 : 				//else will be X by ItemAddOption :)
; 1080 : 			}
; 1081 : 			else //in case of not Using Master Seal T_T = default EXP

  01935	eb 07		 jmp	 SHORT $LN6@gObjSealUs
$LN9@gObjSealUs:

; 1082 : 			{
; 1083 : 				iGAIN_EXP = 100; //100% Gain EXP from g_MLAddExperience (Default value)

  01937	c7 45 f4 64 00
	00 00		 mov	 DWORD PTR _iGAIN_EXP$220264[ebp], 100 ; 00000064H
$LN6@gObjSealUs:

; 1084 : 			}
; 1085 : 		}
; 1086 : 		else if(gObjSearchActiveEffect(lpObj, AT_CSHOP_MASTER_SEAL_OF_ASCENSION) != FALSE || 

  0193e	eb 40		 jmp	 SHORT $LN5@gObjSealUs
$LN10@gObjSealUs:

; 1087 : 				gObjSearchActiveEffect(lpObj, AT_CSHOP_MASTER_SEAL_OF_WEALTH) != FALSE)

  01940	6a 65		 push	 101			; 00000065H
  01942	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01945	50		 push	 eax
  01946	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  0194b	83 c4 08	 add	 esp, 8
  0194e	0f b6 c8	 movzx	 ecx, al
  01951	85 c9		 test	 ecx, ecx
  01953	75 15		 jne	 SHORT $LN3@gObjSealUs
  01955	6a 66		 push	 102			; 00000066H
  01957	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0195a	50		 push	 eax
  0195b	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  01960	83 c4 08	 add	 esp, 8
  01963	0f b6 c8	 movzx	 ecx, al
  01966	85 c9		 test	 ecx, ecx
  01968	74 09		 je	 SHORT $LN4@gObjSealUs
$LN3@gObjSealUs:

; 1088 : 		{
; 1089 : 			iGAIN_EXP = 100; //100% Gain EXP from gAddExperience (Default value) if using Master Seal and not Master Character

  0196a	c7 45 f4 64 00
	00 00		 mov	 DWORD PTR _iGAIN_EXP$220264[ebp], 100 ; 00000064H
  01971	eb 0d		 jmp	 SHORT $LN5@gObjSealUs
$LN4@gObjSealUs:

; 1090 : 		}
; 1091 : 		else if(bDisableExtraGainExp != FALSE)

  01973	83 7d 10 00	 cmp	 DWORD PTR _bDisableExtraGainExp$[ebp], 0
  01977	74 07		 je	 SHORT $LN5@gObjSealUs

; 1092 : 		{
; 1093 : 			iGAIN_EXP = 100; //100% Gain EXP from gAddExperience (Default value) if is not Master Character and bDisableExtraGainExp = TRUE

  01979	c7 45 f4 64 00
	00 00		 mov	 DWORD PTR _iGAIN_EXP$220264[ebp], 100 ; 00000064H
$LN5@gObjSealUs:

; 1094 : 		}
; 1095 : 
; 1096 : 		iCAL_EXP = iCAL_EXP * iGAIN_EXP / 100;

  01980	8b 45 f4	 mov	 eax, DWORD PTR _iGAIN_EXP$220264[ebp]
  01983	99		 cdq
  01984	52		 push	 edx
  01985	50		 push	 eax
  01986	8b 45 fc	 mov	 eax, DWORD PTR _iCAL_EXP$[ebp+4]
  01989	50		 push	 eax
  0198a	8b 4d f8	 mov	 ecx, DWORD PTR _iCAL_EXP$[ebp]
  0198d	51		 push	 ecx
  0198e	e8 00 00 00 00	 call	 __allmul
  01993	6a 00		 push	 0
  01995	6a 64		 push	 100			; 00000064H
  01997	52		 push	 edx
  01998	50		 push	 eax
  01999	e8 00 00 00 00	 call	 __alldiv
  0199e	89 45 f8	 mov	 DWORD PTR _iCAL_EXP$[ebp], eax
  019a1	89 55 fc	 mov	 DWORD PTR _iCAL_EXP$[ebp+4], edx
$LN13@gObjSealUs:

; 1097 : 	}
; 1098 : 
; 1099 : 	Experience = iCAL_EXP; //Apply the new Experience

  019a4	8b 45 0c	 mov	 eax, DWORD PTR _Experience$[ebp]
  019a7	8b 4d f8	 mov	 ecx, DWORD PTR _iCAL_EXP$[ebp]
  019aa	89 08		 mov	 DWORD PTR [eax], ecx
  019ac	8b 55 fc	 mov	 edx, DWORD PTR _iCAL_EXP$[ebp+4]
  019af	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 1100 : }

  019b2	5f		 pop	 edi
  019b3	5e		 pop	 esi
  019b4	5b		 pop	 ebx
  019b5	8b e5		 mov	 esp, ebp
  019b7	5d		 pop	 ebp
  019b8	c3		 ret	 0
?gObjSealUserSetExp@@YAXPAUOBJECTSTRUCT@@AA_JH@Z ENDP	; gObjSealUserSetExp
_TEXT	ENDS
PUBLIC	?gObjApplyBuffEffectDurationForInGameShop@@YA_NPAUOBJECTSTRUCT@@GH@Z ; gObjApplyBuffEffectDurationForInGameShop
EXTRN	?gObjCalCharacter@@YAXH@Z:PROC			; gObjCalCharacter
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_iRemoveBuffIndex$ = -16				; size = 4
_lpBuffData$ = -12					; size = 4
_lpItemEffectInfo$ = -8					; size = 4
_iItemCode$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_wItemCode$ = 12					; size = 2
_iDuration$ = 16					; size = 4
?gObjApplyBuffEffectDurationForInGameShop@@YA_NPAUOBJECTSTRUCT@@GH@Z PROC ; gObjApplyBuffEffectDurationForInGameShop

; 1103 : {

  019c0	55		 push	 ebp
  019c1	8b ec		 mov	 ebp, esp
  019c3	83 ec 50	 sub	 esp, 80			; 00000050H
  019c6	53		 push	 ebx
  019c7	56		 push	 esi
  019c8	57		 push	 edi

; 1104 : 	if(lpObj == NULL)

  019c9	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  019cd	75 07		 jne	 SHORT $LN8@gObjApplyB@4

; 1105 : 		return false;

  019cf	32 c0		 xor	 al, al
  019d1	e9 4f 01 00 00	 jmp	 $LN9@gObjApplyB@4
$LN8@gObjApplyB@4:

; 1106 : 
; 1107 : 	if(lpObj->m_Index < 0 || lpObj->m_Index > OBJMAX)

  019d6	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  019d9	83 38 00	 cmp	 DWORD PTR [eax], 0
  019dc	7c 0b		 jl	 SHORT $LN6@gObjApplyB@4
  019de	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  019e1	81 38 98 3a 00
	00		 cmp	 DWORD PTR [eax], 15000	; 00003a98H
  019e7	7e 07		 jle	 SHORT $LN7@gObjApplyB@4
$LN6@gObjApplyB@4:

; 1108 : 		return false;

  019e9	32 c0		 xor	 al, al
  019eb	e9 35 01 00 00	 jmp	 $LN9@gObjApplyB@4
$LN7@gObjApplyB@4:

; 1109 : 
; 1110 : 	int iItemCode = 0;

  019f0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _iItemCode$[ebp], 0

; 1111 : 	LPITEMEFFECT lpItemEffectInfo = NULL;

  019f7	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _lpItemEffectInfo$[ebp], 0

; 1112 : 	LPBUFF_EFFECT_DATE lpBuffData = NULL;

  019fe	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _lpBuffData$[ebp], 0

; 1113 : 
; 1114 : 	lpBuffData = (LPBUFF_EFFECT_DATE)g_BuffManager.GetBuffInfo(wItemCode);	//nowork

  01a05	0f b7 45 0c	 movzx	 eax, WORD PTR _wItemCode$[ebp]
  01a09	50		 push	 eax
  01a0a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  01a0f	e8 00 00 00 00	 call	 ?GetBuffInfo@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@H@Z ; CBuffManager::GetBuffInfo
  01a14	89 45 f4	 mov	 DWORD PTR _lpBuffData$[ebp], eax

; 1115 : 
; 1116 : 	if(lpBuffData == NULL)

  01a17	83 7d f4 00	 cmp	 DWORD PTR _lpBuffData$[ebp], 0
  01a1b	75 07		 jne	 SHORT $LN5@gObjApplyB@4

; 1117 : 		return false;

  01a1d	32 c0		 xor	 al, al
  01a1f	e9 01 01 00 00	 jmp	 $LN9@gObjApplyB@4
$LN5@gObjApplyB@4:

; 1118 : 
; 1119 : 	iItemCode = (lpBuffData->btItemType << 9) + lpBuffData->btItemIndex;

  01a24	8b 45 f4	 mov	 eax, DWORD PTR _lpBuffData$[ebp]
  01a27	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  01a2b	c1 e1 09	 shl	 ecx, 9
  01a2e	8b 55 f4	 mov	 edx, DWORD PTR _lpBuffData$[ebp]
  01a31	0f b6 42 03	 movzx	 eax, BYTE PTR [edx+3]
  01a35	03 c8		 add	 ecx, eax
  01a37	89 4d fc	 mov	 DWORD PTR _iItemCode$[ebp], ecx

; 1120 : 
; 1121 : 	if(g_ItemAddOption.SearchForClearItemEffect(iItemCode) == FALSE)

  01a3a	8b 45 fc	 mov	 eax, DWORD PTR _iItemCode$[ebp]
  01a3d	50		 push	 eax
  01a3e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ItemAddOption@@3VCItemAddOption@@A ; g_ItemAddOption
  01a43	e8 00 00 00 00	 call	 ?SearchForClearItemEffect@CItemAddOption@@QAEEH@Z ; CItemAddOption::SearchForClearItemEffect
  01a48	0f b6 c8	 movzx	 ecx, al
  01a4b	85 c9		 test	 ecx, ecx
  01a4d	75 07		 jne	 SHORT $LN4@gObjApplyB@4

; 1122 : 		return false;

  01a4f	32 c0		 xor	 al, al
  01a51	e9 cf 00 00 00	 jmp	 $LN9@gObjApplyB@4
$LN4@gObjApplyB@4:

; 1123 : 
; 1124 : 	lpItemEffectInfo = g_ItemAddOption.SearchItemEffectType1(iItemCode);

  01a56	8b 45 fc	 mov	 eax, DWORD PTR _iItemCode$[ebp]
  01a59	50		 push	 eax
  01a5a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ItemAddOption@@3VCItemAddOption@@A ; g_ItemAddOption
  01a5f	e8 00 00 00 00	 call	 ?SearchItemEffectType1@CItemAddOption@@QAEPAUITEMEFFECT@@H@Z ; CItemAddOption::SearchItemEffectType1
  01a64	89 45 f8	 mov	 DWORD PTR _lpItemEffectInfo$[ebp], eax

; 1125 : 
; 1126 : 	int iRemoveBuffIndex = 0;

  01a67	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _iRemoveBuffIndex$[ebp], 0

; 1127 : 
; 1128 : 	iRemoveBuffIndex = g_BuffManager.InsertEffect(lpObj, lpBuffData->btIndex, lpItemEffectInfo->wEffectType1, lpItemEffectInfo->wEffectType2, lpItemEffectInfo->iEffectValue1, lpItemEffectInfo->iEffectValue2, iDuration);

  01a6e	8b 45 10	 mov	 eax, DWORD PTR _iDuration$[ebp]
  01a71	50		 push	 eax
  01a72	8b 4d f8	 mov	 ecx, DWORD PTR _lpItemEffectInfo$[ebp]
  01a75	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  01a78	52		 push	 edx
  01a79	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffectInfo$[ebp]
  01a7c	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  01a7f	51		 push	 ecx
  01a80	8b 55 f8	 mov	 edx, DWORD PTR _lpItemEffectInfo$[ebp]
  01a83	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  01a87	50		 push	 eax
  01a88	8b 4d f8	 mov	 ecx, DWORD PTR _lpItemEffectInfo$[ebp]
  01a8b	0f b6 51 02	 movzx	 edx, BYTE PTR [ecx+2]
  01a8f	52		 push	 edx
  01a90	8b 45 f4	 mov	 eax, DWORD PTR _lpBuffData$[ebp]
  01a93	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  01a96	51		 push	 ecx
  01a97	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01a9a	52		 push	 edx
  01a9b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  01aa0	e8 00 00 00 00	 call	 ?InsertEffect@CBuffManager@@QAEHPAUOBJECTSTRUCT@@HEEHHH@Z ; CBuffManager::InsertEffect
  01aa5	89 45 f0	 mov	 DWORD PTR _iRemoveBuffIndex$[ebp], eax

; 1129 : 
; 1130 : 	if(iRemoveBuffIndex != -1)

  01aa8	83 7d f0 ff	 cmp	 DWORD PTR _iRemoveBuffIndex$[ebp], -1
  01aac	74 75		 je	 SHORT $LN3@gObjApplyB@4

; 1131 : 	{
; 1132 : 		if(iRemoveBuffIndex > 0)

  01aae	83 7d f0 00	 cmp	 DWORD PTR _iRemoveBuffIndex$[ebp], 0
  01ab2	7e 20		 jle	 SHORT $LN2@gObjApplyB@4

; 1133 : 		{
; 1134 : 			GCUseBuffEffect(lpObj, iRemoveBuffIndex, 2, lpItemEffectInfo->wOptionType, 0, 0);

  01ab4	6a 00		 push	 0
  01ab6	6a 00		 push	 0
  01ab8	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffectInfo$[ebp]
  01abb	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  01abe	51		 push	 ecx
  01abf	6a 02		 push	 2
  01ac1	0f b6 55 f0	 movzx	 edx, BYTE PTR _iRemoveBuffIndex$[ebp]
  01ac5	52		 push	 edx
  01ac6	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01ac9	50		 push	 eax
  01aca	e8 00 00 00 00	 call	 ?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z ; GCUseBuffEffect
  01acf	83 c4 18	 add	 esp, 24			; 00000018H

; 1135 : 		}
; 1136 : 		else

  01ad2	eb 23		 jmp	 SHORT $LN1@gObjApplyB@4
$LN2@gObjApplyB@4:

; 1137 : 		{
; 1138 : 			lpObj->m_btViewStateCount++;

  01ad4	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01ad7	8a 88 27 02 00
	00		 mov	 cl, BYTE PTR [eax+551]
  01add	80 c1 01	 add	 cl, 1
  01ae0	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01ae3	88 8a 27 02 00
	00		 mov	 BYTE PTR [edx+551], cl

; 1139 : 			gObjCalCharacter(lpObj->m_Index);

  01ae9	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01aec	8b 08		 mov	 ecx, DWORD PTR [eax]
  01aee	51		 push	 ecx
  01aef	e8 00 00 00 00	 call	 ?gObjCalCharacter@@YAXH@Z ; gObjCalCharacter
  01af4	83 c4 04	 add	 esp, 4
$LN1@gObjApplyB@4:

; 1140 : 		}
; 1141 : 
; 1142 : 		GCUseBuffEffect(lpObj, lpBuffData->btIndex, 0, lpItemEffectInfo->wOptionType, lpItemEffectInfo->wEffectType1, iDuration);

  01af7	8b 45 10	 mov	 eax, DWORD PTR _iDuration$[ebp]
  01afa	50		 push	 eax
  01afb	8b 4d f8	 mov	 ecx, DWORD PTR _lpItemEffectInfo$[ebp]
  01afe	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  01b02	52		 push	 edx
  01b03	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffectInfo$[ebp]
  01b06	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  01b09	51		 push	 ecx
  01b0a	6a 00		 push	 0
  01b0c	8b 55 f4	 mov	 edx, DWORD PTR _lpBuffData$[ebp]
  01b0f	0f b6 02	 movzx	 eax, BYTE PTR [edx]
  01b12	50		 push	 eax
  01b13	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01b16	51		 push	 ecx
  01b17	e8 00 00 00 00	 call	 ?GCUseBuffEffect@@YAXPAUOBJECTSTRUCT@@EEGGH@Z ; GCUseBuffEffect
  01b1c	83 c4 18	 add	 esp, 24			; 00000018H

; 1143 : 		return true;

  01b1f	b0 01		 mov	 al, 1
  01b21	eb 02		 jmp	 SHORT $LN9@gObjApplyB@4
$LN3@gObjApplyB@4:

; 1144 : 	}
; 1145 : 	return false;

  01b23	32 c0		 xor	 al, al
$LN9@gObjApplyB@4:

; 1146 : }

  01b25	5f		 pop	 edi
  01b26	5e		 pop	 esi
  01b27	5b		 pop	 ebx
  01b28	8b e5		 mov	 esp, ebp
  01b2a	5d		 pop	 ebp
  01b2b	c3		 ret	 0
?gObjApplyBuffEffectDurationForInGameShop@@YA_NPAUOBJECTSTRUCT@@GH@Z ENDP ; gObjApplyBuffEffectDurationForInGameShop
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ??__Eg_BuffManager@@YAXXZ
text$yc	SEGMENT
??__Eg_BuffManager@@YAXXZ PROC				; `dynamic initializer for 'g_BuffManager'', COMDAT

; 18   : CBuffManager g_BuffManager;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  0000e	e8 00 00 00 00	 call	 ??0CBuffManager@@QAE@XZ	; CBuffManager::CBuffManager
  00013	68 00 00 00 00	 push	 OFFSET ??__Fg_BuffManager@@YAXXZ ; `dynamic atexit destructor for 'g_BuffManager''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__Eg_BuffManager@@YAXXZ ENDP				; `dynamic initializer for 'g_BuffManager''
; Function compile flags: /Odtp /ZI
text$yc	ENDS
;	COMDAT ??__Fg_BuffManager@@YAXXZ
text$yd	SEGMENT
??__Fg_BuffManager@@YAXXZ PROC				; `dynamic atexit destructor for 'g_BuffManager'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  0000e	e8 00 00 00 00	 call	 ??1CBuffManager@@UAE@XZ	; CBuffManager::~CBuffManager
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__Fg_BuffManager@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_BuffManager''
text$yd	ENDS
PUBLIC	?g_BuffManager@@3VCBuffManager@@A		; g_BuffManager
_BSS	SEGMENT
?g_BuffManager@@3VCBuffManager@@A DD 01H DUP (?)	; g_BuffManager
_BSS	ENDS
CRT$XCU	SEGMENT
_g_BuffManager$initializer$ DD FLAT:??__Eg_BuffManager@@YAXXZ
CRT$XCU	ENDS
END
