; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\CannonTower.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_7CCannonTower@@6B@				; CCannonTower::`vftable'
PUBLIC	??0CCannonTower@@QAE@XZ				; CCannonTower::CCannonTower
PUBLIC	??_R4CCannonTower@@6B@				; CCannonTower::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCannonTower@@@8			; CCannonTower `RTTI Type Descriptor'
PUBLIC	??_R3CCannonTower@@8				; CCannonTower::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCannonTower@@8				; CCannonTower::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCannonTower@@8			; CCannonTower::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECCannonTower@@UAEPAXI@Z:PROC		; CCannonTower::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CCannonTower@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\cannontower.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CCannonTower@@8 DD FLAT:??_R0?AVCCannonTower@@@8 ; CCannonTower::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCannonTower@@8
rdata$r	ENDS
;	COMDAT ??_R2CCannonTower@@8
rdata$r	SEGMENT
??_R2CCannonTower@@8 DD FLAT:??_R1A@?0A@EA@CCannonTower@@8 ; CCannonTower::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CCannonTower@@8
rdata$r	SEGMENT
??_R3CCannonTower@@8 DD 00H				; CCannonTower::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CCannonTower@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCannonTower@@@8
_DATA	SEGMENT
??_R0?AVCCannonTower@@@8 DD FLAT:??_7type_info@@6B@	; CCannonTower `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCannonTower@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CCannonTower@@6B@
rdata$r	SEGMENT
??_R4CCannonTower@@6B@ DD 00H				; CCannonTower::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCannonTower@@@8
	DD	FLAT:??_R3CCannonTower@@8
rdata$r	ENDS
;	COMDAT ??_7CCannonTower@@6B@
CONST	SEGMENT
??_7CCannonTower@@6B@ DD FLAT:??_R4CCannonTower@@6B@	; CCannonTower::`vftable'
	DD	FLAT:??_ECCannonTower@@UAEPAXI@Z
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CCannonTower@@QAE@XZ PROC				; CCannonTower::CCannonTower
; _this$ = ecx

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CCannonTower@@6B@

; 19   : 
; 20   : }

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CCannonTower@@QAE@XZ ENDP				; CCannonTower::CCannonTower
_TEXT	ENDS
PUBLIC	??1CCannonTower@@UAE@XZ				; CCannonTower::~CCannonTower
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCCannonTower@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCCannonTower@@UAEPAXI@Z PROC			; CCannonTower::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CCannonTower@@UAE@XZ	; CCannonTower::~CCannonTower
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCCannonTower@@UAEPAXI@Z ENDP			; CCannonTower::`scalar deleting destructor'
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CCannonTower@@UAE@XZ PROC				; CCannonTower::~CCannonTower
; _this$ = ecx

; 23   : {

  00020	55		 push	 ebp
  00021	8b ec		 mov	 ebp, esp
  00023	83 ec 44	 sub	 esp, 68			; 00000044H
  00026	53		 push	 ebx
  00027	56		 push	 esi
  00028	57		 push	 edi
  00029	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CCannonTower@@6B@

; 24   : 
; 25   : }

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??1CCannonTower@@UAE@XZ ENDP				; CCannonTower::~CCannonTower
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?CannonTowerAct@CCannonTower@@QAEXH@Z		; CCannonTower::CannonTowerAct
EXTRN	?MsgSendV2@@YAXPAUOBJECTSTRUCT@@PAEH@Z:PROC	; MsgSendV2
EXTRN	?PHeadSetBE@@YAXPAEEH@Z:PROC			; PHeadSetBE
EXTRN	?CGBeattackRecv@@YAXPAEHH@Z:PROC		; CGBeattackRecv
EXTRN	_memcpy:PROC
EXTRN	?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z:PROC	; gObjCalDistance
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	_rand:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pSend$222548 = -308					; size = 10
_ASBOfs$ = -296						; size = 4
_AttackSendBuff$ = -292					; size = 256
_pAttack$ = -36						; size = 3
_pCount$ = -32						; size = 9
_count$ = -20						; size = 4
_tObjNum$ = -16						; size = 4
_lpObj$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_iIndex$ = 8						; size = 4
?CannonTowerAct@CCannonTower@@QAEXH@Z PROC		; CCannonTower::CannonTowerAct
; _this$ = ecx

; 28   : {	

  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
  00043	81 ec 74 01 00
	00		 sub	 esp, 372		; 00000174H
  00049	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0004e	33 c5		 xor	 eax, ebp
  00050	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00053	53		 push	 ebx
  00054	56		 push	 esi
  00055	57		 push	 edi
  00056	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 29   : 	if( ( rand() % 2 ) != 0 )

  00059	e8 00 00 00 00	 call	 _rand
  0005e	25 01 00 00 80	 and	 eax, -2147483647	; 80000001H
  00063	79 05		 jns	 SHORT $LN13@CannonTowe
  00065	48		 dec	 eax
  00066	83 c8 fe	 or	 eax, -2			; fffffffeH
  00069	40		 inc	 eax
$LN13@CannonTowe:
  0006a	85 c0		 test	 eax, eax
  0006c	74 05		 je	 SHORT $LN10@CannonTowe

; 30   : 	{
; 31   : 		return;

  0006e	e9 11 02 00 00	 jmp	 $LN11@CannonTowe
$LN10@CannonTowe:

; 32   : 	}
; 33   : 
; 34   : 	LPOBJ lpObj = &gObj[iIndex];

  00073	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00076	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0007c	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00082	89 45 f4	 mov	 DWORD PTR _lpObj$[ebp], eax

; 35   : 	int tObjNum;
; 36   : 	int count = 0;

  00085	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 37   : 	PMSG_BEATTACK_COUNT pCount;
; 38   : 	PMSG_BEATTACK pAttack;
; 39   : 	BYTE AttackSendBuff[256];
; 40   : 	int ASBOfs;
; 41   : 
; 42   : 	ASBOfs = 0;

  0008c	c7 85 d8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _ASBOfs$[ebp], 0

; 43   : 
; 44   : 	pCount.h.c = 0xC1;

  00096	c6 45 e0 c1	 mov	 BYTE PTR _pCount$[ebp], 193 ; 000000c1H

; 45   : 	pCount.h.headcode = PROTOCOL_BEATTACK;

  0009a	c6 45 e2 db	 mov	 BYTE PTR _pCount$[ebp+2], 219 ; 000000dbH

; 46   : 	pCount.h.size = 0x00;

  0009e	c6 45 e1 00	 mov	 BYTE PTR _pCount$[ebp+1], 0

; 47   : 	pCount.MagicNumberH = 0x00;

  000a2	c6 45 e3 00	 mov	 BYTE PTR _pCount$[ebp+3], 0

; 48   : 	pCount.MagicNumberL = 0x00;

  000a6	c6 45 e4 00	 mov	 BYTE PTR _pCount$[ebp+4], 0

; 49   : 	pCount.Count = 0x00;

  000aa	c6 45 e8 00	 mov	 BYTE PTR _pCount$[ebp+8], 0

; 50   : 	pCount.X = lpObj->X;

  000ae	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  000b1	8a 88 44 01 00
	00		 mov	 cl, BYTE PTR [eax+324]
  000b7	88 4d e5	 mov	 BYTE PTR _pCount$[ebp+5], cl

; 51   : 	pCount.Y = lpObj->Y;

  000ba	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  000bd	8a 88 46 01 00
	00		 mov	 cl, BYTE PTR [eax+326]
  000c3	88 4d e6	 mov	 BYTE PTR _pCount$[ebp+6], cl

; 52   : 
; 53   : 	ASBOfs = sizeof(PMSG_BEATTACK_COUNT);

  000c6	c7 85 d8 fe ff
	ff 09 00 00 00	 mov	 DWORD PTR _ASBOfs$[ebp], 9
$LN9@CannonTowe:

; 54   : 
; 55   : 	while( true ) 

  000d0	b8 01 00 00 00	 mov	 eax, 1
  000d5	85 c0		 test	 eax, eax
  000d7	0f 84 eb 00 00
	00		 je	 $LN8@CannonTowe

; 56   : 	{
; 57   : 		if( lpObj->VpPlayer2[count].state ) 

  000dd	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  000e0	6b c0 0c	 imul	 eax, 12			; 0000000cH
  000e3	8b 4d f4	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  000e6	0f be 94 01 ac
	08 00 00	 movsx	 edx, BYTE PTR [ecx+eax+2220]
  000ee	85 d2		 test	 edx, edx
  000f0	0f 84 bc 00 00
	00		 je	 $LN7@CannonTowe

; 58   : 		{
; 59   : 			if( lpObj->VpPlayer2[count].type == OBJ_USER ) 

  000f6	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  000f9	6b c0 0c	 imul	 eax, 12			; 0000000cH
  000fc	8b 4d f4	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  000ff	0f b6 94 01 b0
	08 00 00	 movzx	 edx, BYTE PTR [ecx+eax+2224]
  00107	83 fa 01	 cmp	 edx, 1
  0010a	0f 85 a2 00 00
	00		 jne	 $LN7@CannonTowe

; 60   : 			{
; 61   : 				tObjNum = lpObj->VpPlayer2[count].number;

  00110	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  00113	6b c0 0c	 imul	 eax, 12			; 0000000cH
  00116	8b 4d f4	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00119	0f bf 94 01 ae
	08 00 00	 movsx	 edx, WORD PTR [ecx+eax+2222]
  00121	89 55 f0	 mov	 DWORD PTR _tObjNum$[ebp], edx

; 62   : 
; 63   : 				if( tObjNum >= 0 ) 

  00124	83 7d f0 00	 cmp	 DWORD PTR _tObjNum$[ebp], 0
  00128	0f 8c 84 00 00
	00		 jl	 $LN7@CannonTowe

; 64   : 				{
; 65   : 					if( gObj[tObjNum].m_btCsJoinSide != 1 )

  0012e	8b 45 f0	 mov	 eax, DWORD PTR _tObjNum$[ebp]
  00131	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00137	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0013d	0f b6 94 01 02
	1c 00 00	 movzx	 edx, BYTE PTR [ecx+eax+7170]
  00145	83 fa 01	 cmp	 edx, 1
  00148	74 68		 je	 SHORT $LN7@CannonTowe

; 66   : 					{
; 67   : 						if( gObjCalDistance(lpObj, &gObj[tObjNum]) < 7 ) 

  0014a	8b 45 f0	 mov	 eax, DWORD PTR _tObjNum$[ebp]
  0014d	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00153	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00159	50		 push	 eax
  0015a	8b 4d f4	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0015d	51		 push	 ecx
  0015e	e8 00 00 00 00	 call	 ?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z ; gObjCalDistance
  00163	83 c4 08	 add	 esp, 8
  00166	83 f8 07	 cmp	 eax, 7
  00169	7d 47		 jge	 SHORT $LN7@CannonTowe

; 68   : 						{
; 69   : 							pAttack.NumberH = SET_NUMBERH(tObjNum);

  0016b	8b 45 f0	 mov	 eax, DWORD PTR _tObjNum$[ebp]
  0016e	c1 e8 08	 shr	 eax, 8
  00171	88 45 dc	 mov	 BYTE PTR _pAttack$[ebp], al

; 70   : 							pAttack.NumberL = SET_NUMBERL(tObjNum);

  00174	8b 45 f0	 mov	 eax, DWORD PTR _tObjNum$[ebp]
  00177	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0017c	88 45 dd	 mov	 BYTE PTR _pAttack$[ebp+1], al

; 71   : 							memcpy( (AttackSendBuff+ASBOfs), (LPBYTE)&pAttack, sizeof(PMSG_BEATTACK));

  0017f	6a 03		 push	 3
  00181	8d 45 dc	 lea	 eax, DWORD PTR _pAttack$[ebp]
  00184	50		 push	 eax
  00185	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR _ASBOfs$[ebp]
  0018b	8d 94 0d dc fe
	ff ff		 lea	 edx, DWORD PTR _AttackSendBuff$[ebp+ecx]
  00192	52		 push	 edx
  00193	e8 00 00 00 00	 call	 _memcpy
  00198	83 c4 0c	 add	 esp, 12			; 0000000cH

; 72   : 							ASBOfs += sizeof(PMSG_BEATTACK);

  0019b	8b 85 d8 fe ff
	ff		 mov	 eax, DWORD PTR _ASBOfs$[ebp]
  001a1	83 c0 03	 add	 eax, 3
  001a4	89 85 d8 fe ff
	ff		 mov	 DWORD PTR _ASBOfs$[ebp], eax

; 73   : 							pCount.Count++;

  001aa	8a 45 e8	 mov	 al, BYTE PTR _pCount$[ebp+8]
  001ad	04 01		 add	 al, 1
  001af	88 45 e8	 mov	 BYTE PTR _pCount$[ebp+8], al
$LN7@CannonTowe:

; 74   : 						}
; 75   : 					}
; 76   : 				}
; 77   : 			}
; 78   : 		}
; 79   : 		count++;

  001b2	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  001b5	83 c0 01	 add	 eax, 1
  001b8	89 45 ec	 mov	 DWORD PTR _count$[ebp], eax

; 80   : 
; 81   : 		if( count > MAX_VIEWPORT-1 ) break;

  001bb	83 7d ec 4a	 cmp	 DWORD PTR _count$[ebp], 74 ; 0000004aH
  001bf	7e 02		 jle	 SHORT $LN2@CannonTowe
  001c1	eb 05		 jmp	 SHORT $LN8@CannonTowe
$LN2@CannonTowe:

; 82   : 	}

  001c3	e9 08 ff ff ff	 jmp	 $LN9@CannonTowe
$LN8@CannonTowe:

; 83   : 	if( pCount.Count > 0 ) 

  001c8	0f b6 45 e8	 movzx	 eax, BYTE PTR _pCount$[ebp+8]
  001cc	85 c0		 test	 eax, eax
  001ce	0f 8e b0 00 00
	00		 jle	 $LN11@CannonTowe

; 84   : 	{
; 85   : 		pCount.h.size = ASBOfs;

  001d4	8a 85 d8 fe ff
	ff		 mov	 al, BYTE PTR _ASBOfs$[ebp]
  001da	88 45 e1	 mov	 BYTE PTR _pCount$[ebp+1], al

; 86   : 
; 87   : 		memcpy(AttackSendBuff, (LPBYTE)&pCount, sizeof(PMSG_BEATTACK_COUNT));

  001dd	6a 09		 push	 9
  001df	8d 45 e0	 lea	 eax, DWORD PTR _pCount$[ebp]
  001e2	50		 push	 eax
  001e3	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _AttackSendBuff$[ebp]
  001e9	51		 push	 ecx
  001ea	e8 00 00 00 00	 call	 _memcpy
  001ef	83 c4 0c	 add	 esp, 12			; 0000000cH

; 88   : 		CGBeattackRecv(AttackSendBuff, lpObj->m_Index, 1);

  001f2	6a 01		 push	 1
  001f4	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  001f7	8b 08		 mov	 ecx, DWORD PTR [eax]
  001f9	51		 push	 ecx
  001fa	8d 95 dc fe ff
	ff		 lea	 edx, DWORD PTR _AttackSendBuff$[ebp]
  00200	52		 push	 edx
  00201	e8 00 00 00 00	 call	 ?CGBeattackRecv@@YAXPAEHH@Z ; CGBeattackRecv
  00206	83 c4 0c	 add	 esp, 12			; 0000000cH

; 89   : 
; 90   : 		PMSG_DURATION_MAGIC_SEND pSend;
; 91   : 		PHeadSetBE((LPBYTE)&pSend, 0x1E, sizeof(PMSG_DURATION_MAGIC_SEND));

  00209	6a 0a		 push	 10			; 0000000aH
  0020b	6a 1e		 push	 30			; 0000001eH
  0020d	8d 85 cc fe ff
	ff		 lea	 eax, DWORD PTR _pSend$222548[ebp]
  00213	50		 push	 eax
  00214	e8 00 00 00 00	 call	 ?PHeadSetBE@@YAXPAEEH@Z	; PHeadSetBE
  00219	83 c4 0c	 add	 esp, 12			; 0000000cH

; 92   : 		pSend.MagicNumberH	= 0;

  0021c	c6 85 cf fe ff
	ff 00		 mov	 BYTE PTR _pSend$222548[ebp+3], 0

; 93   : 		pSend.MagicNumberL	= 0x32;

  00223	c6 85 d0 fe ff
	ff 32		 mov	 BYTE PTR _pSend$222548[ebp+4], 50 ; 00000032H

; 94   : 		pSend.X			= lpObj->X;

  0022a	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0022d	8a 88 44 01 00
	00		 mov	 cl, BYTE PTR [eax+324]
  00233	88 8d d3 fe ff
	ff		 mov	 BYTE PTR _pSend$222548[ebp+7], cl

; 95   : 		pSend.Y			= lpObj->Y;

  00239	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0023c	8a 88 46 01 00
	00		 mov	 cl, BYTE PTR [eax+326]
  00242	88 8d d4 fe ff
	ff		 mov	 BYTE PTR _pSend$222548[ebp+8], cl

; 96   : 		pSend.Dir		= 0;

  00248	c6 85 d5 fe ff
	ff 00		 mov	 BYTE PTR _pSend$222548[ebp+9], 0

; 97   : 		pSend.NumberH	= SET_NUMBERH(iIndex);

  0024f	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00252	c1 e8 08	 shr	 eax, 8
  00255	88 85 d1 fe ff
	ff		 mov	 BYTE PTR _pSend$222548[ebp+5], al

; 98   : 		pSend.NumberL	= SET_NUMBERL(iIndex);

  0025b	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0025e	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00263	88 85 d2 fe ff
	ff		 mov	 BYTE PTR _pSend$222548[ebp+6], al

; 99   : 			
; 100  : 		::MsgSendV2(lpObj, (LPBYTE)&pSend, pSend.h.size);

  00269	0f b6 85 cd fe
	ff ff		 movzx	 eax, BYTE PTR _pSend$222548[ebp+1]
  00270	50		 push	 eax
  00271	8d 8d cc fe ff
	ff		 lea	 ecx, DWORD PTR _pSend$222548[ebp]
  00277	51		 push	 ecx
  00278	8b 55 f4	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0027b	52		 push	 edx
  0027c	e8 00 00 00 00	 call	 ?MsgSendV2@@YAXPAUOBJECTSTRUCT@@PAEH@Z ; MsgSendV2
  00281	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN11@CannonTowe:

; 101  : 
; 102  : 	}
; 103  : }

  00284	5f		 pop	 edi
  00285	5e		 pop	 esi
  00286	5b		 pop	 ebx
  00287	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0028a	33 cd		 xor	 ecx, ebp
  0028c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00291	8b e5		 mov	 esp, ebp
  00293	5d		 pop	 ebp
  00294	c2 04 00	 ret	 4
?CannonTowerAct@CCannonTower@@QAEXH@Z ENDP		; CCannonTower::CannonTowerAct
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ??__Eg_CsNPC_CannonTower@@YAXXZ
text$yc	SEGMENT
??__Eg_CsNPC_CannonTower@@YAXXZ PROC			; `dynamic initializer for 'g_CsNPC_CannonTower'', COMDAT

; 12   : CCannonTower g_CsNPC_CannonTower;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CsNPC_CannonTower@@3VCCannonTower@@A ; g_CsNPC_CannonTower
  0000e	e8 00 00 00 00	 call	 ??0CCannonTower@@QAE@XZ	; CCannonTower::CCannonTower
  00013	68 00 00 00 00	 push	 OFFSET ??__Fg_CsNPC_CannonTower@@YAXXZ ; `dynamic atexit destructor for 'g_CsNPC_CannonTower''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__Eg_CsNPC_CannonTower@@YAXXZ ENDP			; `dynamic initializer for 'g_CsNPC_CannonTower''
; Function compile flags: /Odtp /ZI
text$yc	ENDS
;	COMDAT ??__Fg_CsNPC_CannonTower@@YAXXZ
text$yd	SEGMENT
??__Fg_CsNPC_CannonTower@@YAXXZ PROC			; `dynamic atexit destructor for 'g_CsNPC_CannonTower'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CsNPC_CannonTower@@3VCCannonTower@@A ; g_CsNPC_CannonTower
  0000e	e8 00 00 00 00	 call	 ??1CCannonTower@@UAE@XZ	; CCannonTower::~CCannonTower
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__Fg_CsNPC_CannonTower@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_CsNPC_CannonTower''
text$yd	ENDS
PUBLIC	?g_CsNPC_CannonTower@@3VCCannonTower@@A		; g_CsNPC_CannonTower
_BSS	SEGMENT
?g_CsNPC_CannonTower@@3VCCannonTower@@A DD 01H DUP (?)	; g_CsNPC_CannonTower
_BSS	ENDS
CRT$XCU	SEGMENT
_g_CsNPC_CannonTower$initializer$ DD FLAT:??__Eg_CsNPC_CannonTower@@YAXXZ
CRT$XCU	ENDS
END
