; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\CrywolfUtil.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_7CCrywolfUtil@@6B@				; CCrywolfUtil::`vftable'
PUBLIC	??0CCrywolfUtil@@QAE@XZ				; CCrywolfUtil::CCrywolfUtil
PUBLIC	??_R4CCrywolfUtil@@6B@				; CCrywolfUtil::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCrywolfUtil@@@8			; CCrywolfUtil `RTTI Type Descriptor'
PUBLIC	??_R3CCrywolfUtil@@8				; CCrywolfUtil::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCrywolfUtil@@8				; CCrywolfUtil::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCrywolfUtil@@8			; CCrywolfUtil::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECCrywolfUtil@@UAEPAXI@Z:PROC		; CCrywolfUtil::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CCrywolfUtil@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\crywolfutil.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CCrywolfUtil@@8 DD FLAT:??_R0?AVCCrywolfUtil@@@8 ; CCrywolfUtil::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCrywolfUtil@@8
rdata$r	ENDS
;	COMDAT ??_R2CCrywolfUtil@@8
rdata$r	SEGMENT
??_R2CCrywolfUtil@@8 DD FLAT:??_R1A@?0A@EA@CCrywolfUtil@@8 ; CCrywolfUtil::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CCrywolfUtil@@8
rdata$r	SEGMENT
??_R3CCrywolfUtil@@8 DD 00H				; CCrywolfUtil::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CCrywolfUtil@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCrywolfUtil@@@8
_DATA	SEGMENT
??_R0?AVCCrywolfUtil@@@8 DD FLAT:??_7type_info@@6B@	; CCrywolfUtil `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCrywolfUtil@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CCrywolfUtil@@6B@
rdata$r	SEGMENT
??_R4CCrywolfUtil@@6B@ DD 00H				; CCrywolfUtil::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCrywolfUtil@@@8
	DD	FLAT:??_R3CCrywolfUtil@@8
rdata$r	ENDS
;	COMDAT ??_7CCrywolfUtil@@6B@
CONST	SEGMENT
??_7CCrywolfUtil@@6B@ DD FLAT:??_R4CCrywolfUtil@@6B@	; CCrywolfUtil::`vftable'
	DD	FLAT:??_ECCrywolfUtil@@UAEPAXI@Z
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CCrywolfUtil@@QAE@XZ PROC				; CCrywolfUtil::CCrywolfUtil
; _this$ = ecx

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CCrywolfUtil@@6B@

; 22   : 	return;
; 23   : }

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CCrywolfUtil@@QAE@XZ ENDP				; CCrywolfUtil::CCrywolfUtil
_TEXT	ENDS
PUBLIC	??1CCrywolfUtil@@UAE@XZ				; CCrywolfUtil::~CCrywolfUtil
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCCrywolfUtil@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCCrywolfUtil@@UAEPAXI@Z PROC			; CCrywolfUtil::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CCrywolfUtil@@UAE@XZ	; CCrywolfUtil::~CCrywolfUtil
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCCrywolfUtil@@UAEPAXI@Z ENDP			; CCrywolfUtil::`scalar deleting destructor'
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CCrywolfUtil@@UAE@XZ PROC				; CCrywolfUtil::~CCrywolfUtil
; _this$ = ecx

; 26   : {

  00020	55		 push	 ebp
  00021	8b ec		 mov	 ebp, esp
  00023	83 ec 44	 sub	 esp, 68			; 00000044H
  00026	53		 push	 ebx
  00027	56		 push	 esi
  00028	57		 push	 edi
  00029	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CCrywolfUtil@@6B@

; 27   : 	return;
; 28   : }

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??1CCrywolfUtil@@UAE@XZ ENDP				; CCrywolfUtil::~CCrywolfUtil
_TEXT	ENDS
PUBLIC	?GetMapSvrGroup@CMapServerManager@@QAEHXZ	; CMapServerManager::GetMapSvrGroup
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?SendMapServerGroupMsg@CCrywolfUtil@@QAAXPADZZ	; CCrywolfUtil::SendMapServerGroupMsg
EXTRN	?GS_GDReqMapSvrMsgMultiCast@@YAXHPAD@Z:PROC	; GS_GDReqMapSvrMsgMultiCast
EXTRN	?g_MapServerManager@@3VCMapServerManager@@A:BYTE ; g_MapServerManager
EXTRN	_vsprintf:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_pArguments$ = -520					; size = 4
_szBuffer$ = -516					; size = 512
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_lpszMsg$ = 12						; size = 4
?SendMapServerGroupMsg@CCrywolfUtil@@QAAXPADZZ PROC	; CCrywolfUtil::SendMapServerGroupMsg

; 31   : {

  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
  00043	81 ec 48 02 00
	00		 sub	 esp, 584		; 00000248H
  00049	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0004e	33 c5		 xor	 eax, ebp
  00050	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00053	53		 push	 ebx
  00054	56		 push	 esi
  00055	57		 push	 edi

; 32   : 	if ( !lpszMsg )

  00056	83 7d 0c 00	 cmp	 DWORD PTR _lpszMsg$[ebp], 0
  0005a	75 02		 jne	 SHORT $LN1@SendMapSer

; 33   : 		return;

  0005c	eb 68		 jmp	 SHORT $LN2@SendMapSer
$LN1@SendMapSer:

; 34   : 
; 35   : 	char szBuffer[512] = "";

  0005e	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
  00063	88 85 fc fd ff
	ff		 mov	 BYTE PTR _szBuffer$[ebp], al
  00069	68 ff 01 00 00	 push	 511			; 000001ffH
  0006e	6a 00		 push	 0
  00070	8d 85 fd fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp+1]
  00076	50		 push	 eax
  00077	e8 00 00 00 00	 call	 _memset
  0007c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 36   : 	va_list	pArguments;
; 37   : 
; 38   : 	va_start(pArguments, lpszMsg);

  0007f	8d 45 10	 lea	 eax, DWORD PTR _lpszMsg$[ebp+4]
  00082	89 85 f8 fd ff
	ff		 mov	 DWORD PTR _pArguments$[ebp], eax

; 39   : 	vsprintf(szBuffer, lpszMsg, pArguments);

  00088	8b 85 f8 fd ff
	ff		 mov	 eax, DWORD PTR _pArguments$[ebp]
  0008e	50		 push	 eax
  0008f	8b 4d 0c	 mov	 ecx, DWORD PTR _lpszMsg$[ebp]
  00092	51		 push	 ecx
  00093	8d 95 fc fd ff
	ff		 lea	 edx, DWORD PTR _szBuffer$[ebp]
  00099	52		 push	 edx
  0009a	e8 00 00 00 00	 call	 _vsprintf
  0009f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 40   : 	va_end(pArguments);

  000a2	c7 85 f8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _pArguments$[ebp], 0

; 41   : 
; 42   : 	GS_GDReqMapSvrMsgMultiCast(g_MapServerManager.GetMapSvrGroup(), szBuffer);

  000ac	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  000b2	50		 push	 eax
  000b3	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MapServerManager@@3VCMapServerManager@@A ; g_MapServerManager
  000b8	e8 00 00 00 00	 call	 ?GetMapSvrGroup@CMapServerManager@@QAEHXZ ; CMapServerManager::GetMapSvrGroup
  000bd	50		 push	 eax
  000be	e8 00 00 00 00	 call	 ?GS_GDReqMapSvrMsgMultiCast@@YAXHPAD@Z ; GS_GDReqMapSvrMsgMultiCast
  000c3	83 c4 08	 add	 esp, 8
$LN2@SendMapSer:

; 43   : }

  000c6	5f		 pop	 edi
  000c7	5e		 pop	 esi
  000c8	5b		 pop	 ebx
  000c9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000cc	33 cd		 xor	 ecx, ebp
  000ce	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c3		 ret	 0
?SendMapServerGroupMsg@CCrywolfUtil@@QAAXPADZZ ENDP	; CCrywolfUtil::SendMapServerGroupMsg
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\mapservermanager.h
_TEXT	ENDS
;	COMDAT ?GetMapSvrGroup@CMapServerManager@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMapSvrGroup@CMapServerManager@@QAEHXZ PROC		; CMapServerManager::GetMapSvrGroup, COMDAT
; _this$ = ecx

; 49   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 50   : 		if ( this->m_lpThisMapSvrData != NULL )

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 b8 c0 4b 01
	00 00		 cmp	 DWORD PTR [eax+84928], 0
  00016	74 0f		 je	 SHORT $LN1@GetMapSvrG

; 51   : 		{
; 52   : 			return m_lpThisMapSvrData->m_btMAPSVR_GROUP;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 88 c0 4b 01
	00		 mov	 ecx, DWORD PTR [eax+84928]
  00021	0f b6 41 08	 movzx	 eax, BYTE PTR [ecx+8]
  00025	eb 03		 jmp	 SHORT $LN2@GetMapSvrG
$LN1@GetMapSvrG:

; 53   : 		}
; 54   : 		return -1;

  00027	83 c8 ff	 or	 eax, -1
$LN2@GetMapSvrG:

; 55   : 	}

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
?GetMapSvrGroup@CMapServerManager@@QAEHXZ ENDP		; CMapServerManager::GetMapSvrGroup
_TEXT	ENDS
PUBLIC	?SendAllUserAnyData@CCrywolfUtil@@QAEXPAEH@Z	; CCrywolfUtil::SendAllUserAnyData
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\crywolfutil.cpp
_TEXT	SEGMENT
_i$228703 = -8						; size = 4
_this$ = -4						; size = 4
_lpMsg$ = 8						; size = 4
_iSize$ = 12						; size = 4
?SendAllUserAnyData@CCrywolfUtil@@QAEXPAEH@Z PROC	; CCrywolfUtil::SendAllUserAnyData
; _this$ = ecx

; 46   : {

  000e0	55		 push	 ebp
  000e1	8b ec		 mov	 ebp, esp
  000e3	83 ec 48	 sub	 esp, 72			; 00000048H
  000e6	53		 push	 ebx
  000e7	56		 push	 esi
  000e8	57		 push	 edi
  000e9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 47   : 	for ( int i=OBJ_STARTUSERINDEX;i<OBJMAX;i++)

  000ec	c7 45 f8 b0 36
	00 00		 mov	 DWORD PTR _i$228703[ebp], 14000 ; 000036b0H
  000f3	eb 09		 jmp	 SHORT $LN5@SendAllUse
$LN4@SendAllUse:
  000f5	8b 45 f8	 mov	 eax, DWORD PTR _i$228703[ebp]
  000f8	83 c0 01	 add	 eax, 1
  000fb	89 45 f8	 mov	 DWORD PTR _i$228703[ebp], eax
$LN5@SendAllUse:
  000fe	81 7d f8 98 3a
	00 00		 cmp	 DWORD PTR _i$228703[ebp], 15000 ; 00003a98H
  00105	7d 45		 jge	 SHORT $LN6@SendAllUse

; 48   : 	{
; 49   : 		if ( gObj[i].Connected == PLAYER_PLAYING )

  00107	8b 45 f8	 mov	 eax, DWORD PTR _i$228703[ebp]
  0010a	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00110	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00116	83 7c 01 04 03	 cmp	 DWORD PTR [ecx+eax+4], 3
  0011b	75 2d		 jne	 SHORT $LN2@SendAllUse

; 50   : 		{
; 51   : 			if ( gObj[i].Type == OBJ_USER )

  0011d	8b 45 f8	 mov	 eax, DWORD PTR _i$228703[ebp]
  00120	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00126	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0012c	0f b7 54 01 68	 movzx	 edx, WORD PTR [ecx+eax+104]
  00131	83 fa 01	 cmp	 edx, 1
  00134	75 14		 jne	 SHORT $LN2@SendAllUse

; 52   : 			{
; 53   : 				DataSend(i, lpMsg, iSize);

  00136	8b 45 0c	 mov	 eax, DWORD PTR _iSize$[ebp]
  00139	50		 push	 eax
  0013a	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  0013d	51		 push	 ecx
  0013e	8b 55 f8	 mov	 edx, DWORD PTR _i$228703[ebp]
  00141	52		 push	 edx
  00142	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00147	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@SendAllUse:

; 54   : 			}
; 55   : 		}
; 56   : 	}

  0014a	eb a9		 jmp	 SHORT $LN4@SendAllUse
$LN6@SendAllUse:

; 57   : }

  0014c	5f		 pop	 edi
  0014d	5e		 pop	 esi
  0014e	5b		 pop	 ebx
  0014f	8b e5		 mov	 esp, ebp
  00151	5d		 pop	 ebp
  00152	c2 08 00	 ret	 8
?SendAllUserAnyData@CCrywolfUtil@@QAEXPAEH@Z ENDP	; CCrywolfUtil::SendAllUserAnyData
_TEXT	ENDS
PUBLIC	?_ARGB@@YAKEEEE@Z				; _ARGB
PUBLIC	__$ArrayPad$
PUBLIC	?SendAllUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ	; CCrywolfUtil::SendAllUserAnyMsg
EXTRN	?SendNoticeToAllUser@TNotice@@SAXPAX@Z:PROC	; TNotice::SendNoticeToAllUser
EXTRN	?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z:PROC	; TNotice::SetNoticeProperty
EXTRN	?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z:PROC	; TNotice::MakeNoticeMsg
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv74 = -860						; size = 4
_pNotice$ = -792					; size = 272
_pArguments$ = -520					; size = 4
_szBuffer$ = -516					; size = 512
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_iType$ = 12						; size = 4
_lpszMsg$ = 16						; size = 4
?SendAllUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ PROC	; CCrywolfUtil::SendAllUserAnyMsg

; 62   : {

  00160	55		 push	 ebp
  00161	8b ec		 mov	 ebp, esp
  00163	81 ec 5c 03 00
	00		 sub	 esp, 860		; 0000035cH
  00169	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0016e	33 c5		 xor	 eax, ebp
  00170	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00173	53		 push	 ebx
  00174	56		 push	 esi
  00175	57		 push	 edi

; 63   : 	if ( !lpszMsg )

  00176	83 7d 10 00	 cmp	 DWORD PTR _lpszMsg$[ebp], 0
  0017a	75 05		 jne	 SHORT $LN5@SendAllUse@2

; 64   : 		return;

  0017c	e9 ef 00 00 00	 jmp	 $LN6@SendAllUse@2
$LN5@SendAllUse@2:

; 65   : 
; 66   : 	char szBuffer[512] = "";

  00181	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
  00186	88 85 fc fd ff
	ff		 mov	 BYTE PTR _szBuffer$[ebp], al
  0018c	68 ff 01 00 00	 push	 511			; 000001ffH
  00191	6a 00		 push	 0
  00193	8d 85 fd fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp+1]
  00199	50		 push	 eax
  0019a	e8 00 00 00 00	 call	 _memset
  0019f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 67   : 	va_list	pArguments;
; 68   : 
; 69   : 	va_start(pArguments, lpszMsg);

  001a2	8d 45 14	 lea	 eax, DWORD PTR _lpszMsg$[ebp+4]
  001a5	89 85 f8 fd ff
	ff		 mov	 DWORD PTR _pArguments$[ebp], eax

; 70   : 	vsprintf(szBuffer, lpszMsg, pArguments);

  001ab	8b 85 f8 fd ff
	ff		 mov	 eax, DWORD PTR _pArguments$[ebp]
  001b1	50		 push	 eax
  001b2	8b 4d 10	 mov	 ecx, DWORD PTR _lpszMsg$[ebp]
  001b5	51		 push	 ecx
  001b6	8d 95 fc fd ff
	ff		 lea	 edx, DWORD PTR _szBuffer$[ebp]
  001bc	52		 push	 edx
  001bd	e8 00 00 00 00	 call	 _vsprintf
  001c2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 71   : 	va_end(pArguments);

  001c5	c7 85 f8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _pArguments$[ebp], 0

; 72   : 
; 73   : 	PMSG_NOTICE pNotice;
; 74   : 
; 75   : 	switch ( iType )

  001cf	8b 45 0c	 mov	 eax, DWORD PTR _iType$[ebp]
  001d2	89 85 a4 fc ff
	ff		 mov	 DWORD PTR tv74[ebp], eax
  001d8	83 bd a4 fc ff
	ff 01		 cmp	 DWORD PTR tv74[ebp], 1
  001df	74 0e		 je	 SHORT $LN2@SendAllUse@2
  001e1	83 bd a4 fc ff
	ff 02		 cmp	 DWORD PTR tv74[ebp], 2
  001e8	74 5f		 je	 SHORT $LN1@SendAllUse@2
  001ea	e9 81 00 00 00	 jmp	 $LN6@SendAllUse@2
$LN2@SendAllUse@2:

; 76   : 	{
; 77   : 		case 1:
; 78   : 			TNotice::MakeNoticeMsg(&pNotice, 0, szBuffer);

  001ef	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  001f5	50		 push	 eax
  001f6	6a 00		 push	 0
  001f8	8d 8d e8 fc ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  001fe	51		 push	 ecx
  001ff	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg
  00204	83 c4 0c	 add	 esp, 12			; 0000000cH

; 79   : 			TNotice::SetNoticeProperty(&pNotice, 10, _ARGB(255, 255, 200, 80), 1, 0, 20);

  00207	6a 14		 push	 20			; 00000014H
  00209	6a 00		 push	 0
  0020b	6a 01		 push	 1
  0020d	6a 50		 push	 80			; 00000050H
  0020f	68 c8 00 00 00	 push	 200			; 000000c8H
  00214	68 ff 00 00 00	 push	 255			; 000000ffH
  00219	68 ff 00 00 00	 push	 255			; 000000ffH
  0021e	e8 00 00 00 00	 call	 ?_ARGB@@YAKEEEE@Z	; _ARGB
  00223	83 c4 10	 add	 esp, 16			; 00000010H
  00226	50		 push	 eax
  00227	6a 0a		 push	 10			; 0000000aH
  00229	8d 85 e8 fc ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  0022f	50		 push	 eax
  00230	e8 00 00 00 00	 call	 ?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z ; TNotice::SetNoticeProperty
  00235	83 c4 18	 add	 esp, 24			; 00000018H

; 80   : 			TNotice::SendNoticeToAllUser(&pNotice);

  00238	8d 85 e8 fc ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  0023e	50		 push	 eax
  0023f	e8 00 00 00 00	 call	 ?SendNoticeToAllUser@TNotice@@SAXPAX@Z ; TNotice::SendNoticeToAllUser
  00244	83 c4 04	 add	 esp, 4

; 81   : 			break;

  00247	eb 27		 jmp	 SHORT $LN6@SendAllUse@2
$LN1@SendAllUse@2:

; 82   : 
; 83   : 		case 2:
; 84   : 			TNotice::MakeNoticeMsg(&pNotice, 0, szBuffer);

  00249	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  0024f	50		 push	 eax
  00250	6a 00		 push	 0
  00252	8d 8d e8 fc ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  00258	51		 push	 ecx
  00259	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg
  0025e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 85   : 			TNotice::SendNoticeToAllUser(&pNotice);

  00261	8d 85 e8 fc ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  00267	50		 push	 eax
  00268	e8 00 00 00 00	 call	 ?SendNoticeToAllUser@TNotice@@SAXPAX@Z ; TNotice::SendNoticeToAllUser
  0026d	83 c4 04	 add	 esp, 4
$LN6@SendAllUse@2:

; 86   : 			break;
; 87   : 	}
; 88   : }

  00270	5f		 pop	 edi
  00271	5e		 pop	 esi
  00272	5b		 pop	 ebx
  00273	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00276	33 cd		 xor	 ecx, ebp
  00278	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0027d	8b e5		 mov	 esp, ebp
  0027f	5d		 pop	 ebp
  00280	c3		 ret	 0
?SendAllUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ ENDP	; CCrywolfUtil::SendAllUserAnyMsg
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\tnotice.h
_TEXT	ENDS
;	COMDAT ?_ARGB@@YAKEEEE@Z
_TEXT	SEGMENT
_a$ = 8							; size = 1
_r$ = 12						; size = 1
_g$ = 16						; size = 1
_b$ = 20						; size = 1
?_ARGB@@YAKEEEE@Z PROC					; _ARGB, COMDAT

; 9    : __inline DWORD _ARGB(BYTE a, BYTE r, BYTE g, BYTE b){ return a*16777216 + b*65536 + g*256 + r;}; // in tnotice.h : line 8

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 08	 movzx	 eax, BYTE PTR _a$[ebp]
  0000d	c1 e0 18	 shl	 eax, 24			; 00000018H
  00010	0f b6 4d 14	 movzx	 ecx, BYTE PTR _b$[ebp]
  00014	c1 e1 10	 shl	 ecx, 16			; 00000010H
  00017	03 c1		 add	 eax, ecx
  00019	0f b6 55 10	 movzx	 edx, BYTE PTR _g$[ebp]
  0001d	c1 e2 08	 shl	 edx, 8
  00020	03 c2		 add	 eax, edx
  00022	0f b6 4d 0c	 movzx	 ecx, BYTE PTR _r$[ebp]
  00026	03 c1		 add	 eax, ecx
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?_ARGB@@YAKEEEE@Z ENDP					; _ARGB
_TEXT	ENDS
PUBLIC	?SendCrywolfUserAnyData@CCrywolfUtil@@QAEXPAEH@Z ; CCrywolfUtil::SendCrywolfUserAnyData
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\crywolfutil.cpp
_TEXT	SEGMENT
_i$228735 = -8						; size = 4
_this$ = -4						; size = 4
_lpMsg$ = 8						; size = 4
_iSize$ = 12						; size = 4
?SendCrywolfUserAnyData@CCrywolfUtil@@QAEXPAEH@Z PROC	; CCrywolfUtil::SendCrywolfUserAnyData
; _this$ = ecx

; 91   : {

  00290	55		 push	 ebp
  00291	8b ec		 mov	 ebp, esp
  00293	83 ec 48	 sub	 esp, 72			; 00000048H
  00296	53		 push	 ebx
  00297	56		 push	 esi
  00298	57		 push	 edi
  00299	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 92   : 	for ( int i=OBJ_STARTUSERINDEX;i<OBJMAX;i++)

  0029c	c7 45 f8 b0 36
	00 00		 mov	 DWORD PTR _i$228735[ebp], 14000 ; 000036b0H
  002a3	eb 09		 jmp	 SHORT $LN6@SendCrywol
$LN5@SendCrywol:
  002a5	8b 45 f8	 mov	 eax, DWORD PTR _i$228735[ebp]
  002a8	83 c0 01	 add	 eax, 1
  002ab	89 45 f8	 mov	 DWORD PTR _i$228735[ebp], eax
$LN6@SendCrywol:
  002ae	81 7d f8 98 3a
	00 00		 cmp	 DWORD PTR _i$228735[ebp], 15000 ; 00003a98H
  002b5	7d 61		 jge	 SHORT $LN7@SendCrywol

; 93   : 	{
; 94   : 		if ( gObj[i].Connected == PLAYER_PLAYING )

  002b7	8b 45 f8	 mov	 eax, DWORD PTR _i$228735[ebp]
  002ba	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  002c0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002c6	83 7c 01 04 03	 cmp	 DWORD PTR [ecx+eax+4], 3
  002cb	75 49		 jne	 SHORT $LN3@SendCrywol

; 95   : 		{
; 96   : 			if ( gObj[i].Type == OBJ_USER )

  002cd	8b 45 f8	 mov	 eax, DWORD PTR _i$228735[ebp]
  002d0	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  002d6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002dc	0f b7 54 01 68	 movzx	 edx, WORD PTR [ecx+eax+104]
  002e1	83 fa 01	 cmp	 edx, 1
  002e4	75 30		 jne	 SHORT $LN3@SendCrywol

; 97   : 			{
; 98   : 				if ( gObj[i].MapNumber == MAP_INDEX_CRYWOLF_FIRSTZONE )

  002e6	8b 45 f8	 mov	 eax, DWORD PTR _i$228735[ebp]
  002e9	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  002ef	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002f5	0f b6 94 01 49
	01 00 00	 movzx	 edx, BYTE PTR [ecx+eax+329]
  002fd	83 fa 22	 cmp	 edx, 34			; 00000022H
  00300	75 14		 jne	 SHORT $LN3@SendCrywol

; 99   : 				{
; 100  : 					DataSend(i, lpMsg, iSize);

  00302	8b 45 0c	 mov	 eax, DWORD PTR _iSize$[ebp]
  00305	50		 push	 eax
  00306	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  00309	51		 push	 ecx
  0030a	8b 55 f8	 mov	 edx, DWORD PTR _i$228735[ebp]
  0030d	52		 push	 edx
  0030e	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00313	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@SendCrywol:

; 101  : 				}
; 102  : 			}
; 103  : 		}
; 104  : 	}

  00316	eb 8d		 jmp	 SHORT $LN5@SendCrywol
$LN7@SendCrywol:

; 105  : }

  00318	5f		 pop	 edi
  00319	5e		 pop	 esi
  0031a	5b		 pop	 ebx
  0031b	8b e5		 mov	 esp, ebp
  0031d	5d		 pop	 ebp
  0031e	c2 08 00	 ret	 8
?SendCrywolfUserAnyData@CCrywolfUtil@@QAEXPAEH@Z ENDP	; CCrywolfUtil::SendCrywolfUserAnyData
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SendCrywolfUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ	; CCrywolfUtil::SendCrywolfUserAnyMsg
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv74 = -864						; size = 4
_i$228779 = -796					; size = 4
_pNotice$ = -792					; size = 272
_pArguments$ = -520					; size = 4
_szBuffer$ = -516					; size = 512
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_iType$ = 12						; size = 4
_lpszMsg$ = 16						; size = 4
?SendCrywolfUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ PROC	; CCrywolfUtil::SendCrywolfUserAnyMsg

; 108  : {

  00330	55		 push	 ebp
  00331	8b ec		 mov	 ebp, esp
  00333	81 ec 60 03 00
	00		 sub	 esp, 864		; 00000360H
  00339	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0033e	33 c5		 xor	 eax, ebp
  00340	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00343	53		 push	 ebx
  00344	56		 push	 esi
  00345	57		 push	 edi

; 109  : 	if ( !lpszMsg )

  00346	83 7d 10 00	 cmp	 DWORD PTR _lpszMsg$[ebp], 0
  0034a	75 05		 jne	 SHORT $LN11@SendCrywol@2

; 110  : 		return;

  0034c	e9 6c 01 00 00	 jmp	 $LN12@SendCrywol@2
$LN11@SendCrywol@2:

; 111  : 
; 112  : 	char szBuffer[512] = "";

  00351	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
  00356	88 85 fc fd ff
	ff		 mov	 BYTE PTR _szBuffer$[ebp], al
  0035c	68 ff 01 00 00	 push	 511			; 000001ffH
  00361	6a 00		 push	 0
  00363	8d 85 fd fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp+1]
  00369	50		 push	 eax
  0036a	e8 00 00 00 00	 call	 _memset
  0036f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 113  : 	va_list	pArguments;
; 114  : 
; 115  : 	va_start(pArguments, lpszMsg);

  00372	8d 45 14	 lea	 eax, DWORD PTR _lpszMsg$[ebp+4]
  00375	89 85 f8 fd ff
	ff		 mov	 DWORD PTR _pArguments$[ebp], eax

; 116  : 	vsprintf(szBuffer, lpszMsg, pArguments);

  0037b	8b 85 f8 fd ff
	ff		 mov	 eax, DWORD PTR _pArguments$[ebp]
  00381	50		 push	 eax
  00382	8b 4d 10	 mov	 ecx, DWORD PTR _lpszMsg$[ebp]
  00385	51		 push	 ecx
  00386	8d 95 fc fd ff
	ff		 lea	 edx, DWORD PTR _szBuffer$[ebp]
  0038c	52		 push	 edx
  0038d	e8 00 00 00 00	 call	 _vsprintf
  00392	83 c4 0c	 add	 esp, 12			; 0000000cH

; 117  : 	va_end(pArguments);

  00395	c7 85 f8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _pArguments$[ebp], 0

; 118  : 
; 119  : 	PMSG_NOTICE pNotice;
; 120  : 
; 121  : 	switch ( iType )

  0039f	8b 45 0c	 mov	 eax, DWORD PTR _iType$[ebp]
  003a2	89 85 a0 fc ff
	ff		 mov	 DWORD PTR tv74[ebp], eax
  003a8	83 bd a0 fc ff
	ff 01		 cmp	 DWORD PTR tv74[ebp], 1
  003af	74 0b		 je	 SHORT $LN8@SendCrywol@2
  003b1	83 bd a0 fc ff
	ff 02		 cmp	 DWORD PTR tv74[ebp], 2
  003b8	74 4d		 je	 SHORT $LN7@SendCrywol@2
  003ba	eb 63		 jmp	 SHORT $LN9@SendCrywol@2
$LN8@SendCrywol@2:

; 122  : 	{
; 123  : 		case 1:
; 124  : 			TNotice::MakeNoticeMsg(&pNotice, 0, szBuffer);

  003bc	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  003c2	50		 push	 eax
  003c3	6a 00		 push	 0
  003c5	8d 8d e8 fc ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  003cb	51		 push	 ecx
  003cc	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg
  003d1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 125  : 			TNotice::SetNoticeProperty(&pNotice, 10, _ARGB(255, 255, 200, 80), 1, 0, 20);

  003d4	6a 14		 push	 20			; 00000014H
  003d6	6a 00		 push	 0
  003d8	6a 01		 push	 1
  003da	6a 50		 push	 80			; 00000050H
  003dc	68 c8 00 00 00	 push	 200			; 000000c8H
  003e1	68 ff 00 00 00	 push	 255			; 000000ffH
  003e6	68 ff 00 00 00	 push	 255			; 000000ffH
  003eb	e8 00 00 00 00	 call	 ?_ARGB@@YAKEEEE@Z	; _ARGB
  003f0	83 c4 10	 add	 esp, 16			; 00000010H
  003f3	50		 push	 eax
  003f4	6a 0a		 push	 10			; 0000000aH
  003f6	8d 85 e8 fc ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  003fc	50		 push	 eax
  003fd	e8 00 00 00 00	 call	 ?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z ; TNotice::SetNoticeProperty
  00402	83 c4 18	 add	 esp, 24			; 00000018H

; 126  : 			break;

  00405	eb 18		 jmp	 SHORT $LN9@SendCrywol@2
$LN7@SendCrywol@2:

; 127  : 
; 128  : 		case 2:
; 129  : 			TNotice::MakeNoticeMsg(&pNotice, 0, szBuffer);

  00407	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  0040d	50		 push	 eax
  0040e	6a 00		 push	 0
  00410	8d 8d e8 fc ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  00416	51		 push	 ecx
  00417	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg
  0041c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN9@SendCrywol@2:

; 130  : 			break;
; 131  : 	}
; 132  : 
; 133  : 	for ( int i=OBJ_STARTUSERINDEX;i<OBJMAX;i++)

  0041f	c7 85 e4 fc ff
	ff b0 36 00 00	 mov	 DWORD PTR _i$228779[ebp], 14000 ; 000036b0H
  00429	eb 0f		 jmp	 SHORT $LN6@SendCrywol@2
$LN5@SendCrywol@2:
  0042b	8b 85 e4 fc ff
	ff		 mov	 eax, DWORD PTR _i$228779[ebp]
  00431	83 c0 01	 add	 eax, 1
  00434	89 85 e4 fc ff
	ff		 mov	 DWORD PTR _i$228779[ebp], eax
$LN6@SendCrywol@2:
  0043a	81 bd e4 fc ff
	ff 98 3a 00 00	 cmp	 DWORD PTR _i$228779[ebp], 15000 ; 00003a98H
  00444	7d 77		 jge	 SHORT $LN12@SendCrywol@2

; 134  : 	{
; 135  : 		if ( gObj[i].Connected == PLAYER_PLAYING )

  00446	8b 85 e4 fc ff
	ff		 mov	 eax, DWORD PTR _i$228779[ebp]
  0044c	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00452	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00458	83 7c 01 04 03	 cmp	 DWORD PTR [ecx+eax+4], 3
  0045d	75 59		 jne	 SHORT $LN3@SendCrywol@2

; 136  : 		{
; 137  : 			if ( gObj[i].Type == OBJ_USER )

  0045f	8b 85 e4 fc ff
	ff		 mov	 eax, DWORD PTR _i$228779[ebp]
  00465	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0046b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00471	0f b7 54 01 68	 movzx	 edx, WORD PTR [ecx+eax+104]
  00476	83 fa 01	 cmp	 edx, 1
  00479	75 3d		 jne	 SHORT $LN3@SendCrywol@2

; 138  : 			{
; 139  : 				if ( gObj[i].MapNumber == MAP_INDEX_CRYWOLF_FIRSTZONE )

  0047b	8b 85 e4 fc ff
	ff		 mov	 eax, DWORD PTR _i$228779[ebp]
  00481	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00487	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0048d	0f b6 94 01 49
	01 00 00	 movzx	 edx, BYTE PTR [ecx+eax+329]
  00495	83 fa 22	 cmp	 edx, 34			; 00000022H
  00498	75 1e		 jne	 SHORT $LN3@SendCrywol@2

; 140  : 				{
; 141  : 					DataSend(i, (LPBYTE)&pNotice, pNotice.h.size);

  0049a	0f b6 85 e9 fc
	ff ff		 movzx	 eax, BYTE PTR _pNotice$[ebp+1]
  004a1	50		 push	 eax
  004a2	8d 8d e8 fc ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  004a8	51		 push	 ecx
  004a9	8b 95 e4 fc ff
	ff		 mov	 edx, DWORD PTR _i$228779[ebp]
  004af	52		 push	 edx
  004b0	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  004b5	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@SendCrywol@2:

; 142  : 				}
; 143  : 			}
; 144  : 		}
; 145  : 	}

  004b8	e9 6e ff ff ff	 jmp	 $LN5@SendCrywol@2
$LN12@SendCrywol@2:

; 146  : 
; 147  : }

  004bd	5f		 pop	 edi
  004be	5e		 pop	 esi
  004bf	5b		 pop	 ebx
  004c0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  004c3	33 cd		 xor	 ecx, ebp
  004c5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004ca	8b e5		 mov	 esp, ebp
  004cc	5d		 pop	 ebp
  004cd	c3		 ret	 0
?SendCrywolfUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ ENDP	; CCrywolfUtil::SendCrywolfUserAnyMsg
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SendCrywolfChattingMsg@CCrywolfUtil@@QAAXHPADZZ ; CCrywolfUtil::SendCrywolfChattingMsg
EXTRN	?ChatTargetSend@@YAXPAUOBJECTSTRUCT@@PADH@Z:PROC ; ChatTargetSend
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv137 = -660						; size = 4
tv68 = -660						; size = 4
_iTargetNumber$228809 = -592				; size = 4
_i$228804 = -588					; size = 4
_szChat$ = -584						; size = 60
_pArguments$ = -524					; size = 4
_szBuffer$ = -520					; size = 512
_lpObj$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_iObjIndex$ = 12					; size = 4
_lpszMsg$ = 16						; size = 4
?SendCrywolfChattingMsg@CCrywolfUtil@@QAAXHPADZZ PROC	; CCrywolfUtil::SendCrywolfChattingMsg

; 150  : {

  004d0	55		 push	 ebp
  004d1	8b ec		 mov	 ebp, esp
  004d3	81 ec 94 02 00
	00		 sub	 esp, 660		; 00000294H
  004d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  004de	33 c5		 xor	 eax, ebp
  004e0	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  004e3	53		 push	 ebx
  004e4	56		 push	 esi
  004e5	57		 push	 edi

; 151  : #if(TESTSERVER==0)
; 152  : 	return;

  004e6	e9 7b 01 00 00	 jmp	 $LN8@SendCrywol@3

; 153  : #endif
; 154  : 
; 155  : 	if ( !lpszMsg )

  004eb	83 7d 10 00	 cmp	 DWORD PTR _lpszMsg$[ebp], 0
  004ef	75 05		 jne	 SHORT $LN7@SendCrywol@3

; 156  : 	{
; 157  : 		return;

  004f1	e9 70 01 00 00	 jmp	 $LN8@SendCrywol@3
$LN7@SendCrywol@3:

; 158  : 	}
; 159  : 
; 160  : 	if ( !OBJMAX_RANGE(iObjIndex))

  004f6	83 7d 0c 00	 cmp	 DWORD PTR _iObjIndex$[ebp], 0
  004fa	7d 0c		 jge	 SHORT $LN10@SendCrywol@3
  004fc	c7 85 6c fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv68[ebp], 0
  00506	eb 12		 jmp	 SHORT $LN11@SendCrywol@3
$LN10@SendCrywol@3:
  00508	33 c0		 xor	 eax, eax
  0050a	81 7d 0c 97 3a
	00 00		 cmp	 DWORD PTR _iObjIndex$[ebp], 14999 ; 00003a97H
  00511	0f 9e c0	 setle	 al
  00514	89 85 6c fd ff
	ff		 mov	 DWORD PTR tv68[ebp], eax
$LN11@SendCrywol@3:
  0051a	83 bd 6c fd ff
	ff 00		 cmp	 DWORD PTR tv68[ebp], 0
  00521	75 05		 jne	 SHORT $LN6@SendCrywol@3

; 161  : 	{
; 162  : 		return;

  00523	e9 3e 01 00 00	 jmp	 $LN8@SendCrywol@3
$LN6@SendCrywol@3:

; 163  : 	}
; 164  : 
; 165  : 	LPOBJ lpObj = &gObj[iObjIndex];

  00528	8b 45 0c	 mov	 eax, DWORD PTR _iObjIndex$[ebp]
  0052b	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00531	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00537	89 45 f8	 mov	 DWORD PTR _lpObj$[ebp], eax

; 166  : 	char szBuffer[512] = "";

  0053a	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
  0053f	88 85 f8 fd ff
	ff		 mov	 BYTE PTR _szBuffer$[ebp], al
  00545	68 ff 01 00 00	 push	 511			; 000001ffH
  0054a	6a 00		 push	 0
  0054c	8d 85 f9 fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp+1]
  00552	50		 push	 eax
  00553	e8 00 00 00 00	 call	 _memset
  00558	83 c4 0c	 add	 esp, 12			; 0000000cH

; 167  : 	va_list pArguments;
; 168  : 
; 169  : 	va_start(pArguments, lpszMsg);

  0055b	8d 45 14	 lea	 eax, DWORD PTR _lpszMsg$[ebp+4]
  0055e	89 85 f4 fd ff
	ff		 mov	 DWORD PTR _pArguments$[ebp], eax

; 170  : 	vsprintf(szBuffer, lpszMsg, pArguments);

  00564	8b 85 f4 fd ff
	ff		 mov	 eax, DWORD PTR _pArguments$[ebp]
  0056a	50		 push	 eax
  0056b	8b 4d 10	 mov	 ecx, DWORD PTR _lpszMsg$[ebp]
  0056e	51		 push	 ecx
  0056f	8d 95 f8 fd ff
	ff		 lea	 edx, DWORD PTR _szBuffer$[ebp]
  00575	52		 push	 edx
  00576	e8 00 00 00 00	 call	 _vsprintf
  0057b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 171  : 	va_end(pArguments);

  0057e	c7 85 f4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _pArguments$[ebp], 0

; 172  : 
; 173  : 	char szChat[60] = {0};

  00588	c6 85 b8 fd ff
	ff 00		 mov	 BYTE PTR _szChat$[ebp], 0
  0058f	6a 3b		 push	 59			; 0000003bH
  00591	6a 00		 push	 0
  00593	8d 85 b9 fd ff
	ff		 lea	 eax, DWORD PTR _szChat$[ebp+1]
  00599	50		 push	 eax
  0059a	e8 00 00 00 00	 call	 _memset
  0059f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 174  : 	memcpy(szChat, szBuffer, sizeof(szChat)-1);

  005a2	6a 3b		 push	 59			; 0000003bH
  005a4	8d 85 f8 fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  005aa	50		 push	 eax
  005ab	8d 8d b8 fd ff
	ff		 lea	 ecx, DWORD PTR _szChat$[ebp]
  005b1	51		 push	 ecx
  005b2	e8 00 00 00 00	 call	 _memcpy
  005b7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 175  : 
; 176  : 	for(int i=0;i<MAX_VIEWPORT_MONSTER;i++)

  005ba	c7 85 b4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$228804[ebp], 0
  005c4	eb 0f		 jmp	 SHORT $LN5@SendCrywol@3
$LN4@SendCrywol@3:
  005c6	8b 85 b4 fd ff
	ff		 mov	 eax, DWORD PTR _i$228804[ebp]
  005cc	83 c0 01	 add	 eax, 1
  005cf	89 85 b4 fd ff
	ff		 mov	 DWORD PTR _i$228804[ebp], eax
$LN5@SendCrywol@3:
  005d5	83 bd b4 fd ff
	ff 4b		 cmp	 DWORD PTR _i$228804[ebp], 75 ; 0000004bH
  005dc	0f 8d 84 00 00
	00		 jge	 $LN8@SendCrywol@3

; 177  : 	{
; 178  : 		if ( lpObj->VpPlayer2[i].state )

  005e2	8b 85 b4 fd ff
	ff		 mov	 eax, DWORD PTR _i$228804[ebp]
  005e8	6b c0 0c	 imul	 eax, 12			; 0000000cH
  005eb	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  005ee	0f be 94 01 ac
	08 00 00	 movsx	 edx, BYTE PTR [ecx+eax+2220]
  005f6	85 d2		 test	 edx, edx
  005f8	74 67		 je	 SHORT $LN2@SendCrywol@3

; 179  : 		{
; 180  : 			int iTargetNumber = lpObj->VpPlayer2[i].number;

  005fa	8b 85 b4 fd ff
	ff		 mov	 eax, DWORD PTR _i$228804[ebp]
  00600	6b c0 0c	 imul	 eax, 12			; 0000000cH
  00603	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00606	0f bf 94 01 ae
	08 00 00	 movsx	 edx, WORD PTR [ecx+eax+2222]
  0060e	89 95 b0 fd ff
	ff		 mov	 DWORD PTR _iTargetNumber$228809[ebp], edx

; 181  : 
; 182  : 			if ( OBJMAX_RANGE(iTargetNumber) )

  00614	83 bd b0 fd ff
	ff 00		 cmp	 DWORD PTR _iTargetNumber$228809[ebp], 0
  0061b	7d 0c		 jge	 SHORT $LN12@SendCrywol@3
  0061d	c7 85 6c fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv137[ebp], 0
  00627	eb 15		 jmp	 SHORT $LN13@SendCrywol@3
$LN12@SendCrywol@3:
  00629	33 c0		 xor	 eax, eax
  0062b	81 bd b0 fd ff
	ff 97 3a 00 00	 cmp	 DWORD PTR _iTargetNumber$228809[ebp], 14999 ; 00003a97H
  00635	0f 9e c0	 setle	 al
  00638	89 85 6c fd ff
	ff		 mov	 DWORD PTR tv137[ebp], eax
$LN13@SendCrywol@3:
  0063e	83 bd 6c fd ff
	ff 00		 cmp	 DWORD PTR tv137[ebp], 0
  00645	74 1a		 je	 SHORT $LN2@SendCrywol@3

; 183  : 			{
; 184  : 				ChatTargetSend(lpObj, szChat, iTargetNumber);

  00647	8b 85 b0 fd ff
	ff		 mov	 eax, DWORD PTR _iTargetNumber$228809[ebp]
  0064d	50		 push	 eax
  0064e	8d 8d b8 fd ff
	ff		 lea	 ecx, DWORD PTR _szChat$[ebp]
  00654	51		 push	 ecx
  00655	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00658	52		 push	 edx
  00659	e8 00 00 00 00	 call	 ?ChatTargetSend@@YAXPAUOBJECTSTRUCT@@PADH@Z ; ChatTargetSend
  0065e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@SendCrywol@3:

; 185  : 			}
; 186  : 		}
; 187  : 	}

  00661	e9 60 ff ff ff	 jmp	 $LN4@SendCrywol@3
$LN8@SendCrywol@3:

; 188  : }

  00666	5f		 pop	 edi
  00667	5e		 pop	 esi
  00668	5b		 pop	 ebx
  00669	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0066c	33 cd		 xor	 ecx, ebp
  0066e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00673	8b e5		 mov	 esp, ebp
  00675	5d		 pop	 ebp
  00676	c3		 ret	 0
?SendCrywolfChattingMsg@CCrywolfUtil@@QAAXHPADZZ ENDP	; CCrywolfUtil::SendCrywolfChattingMsg
_TEXT	ENDS
PUBLIC	??_C@_0L@MNKEEMGH@?0?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5?$AA@ ; `string'
PUBLIC	??_C@_0BM@DJAOLMAF@400?5LevelUp?5?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5Party?5?$AA@ ; `string'
PUBLIC	??_C@_0EG@NEGEKGDM@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5L@ ; `string'
PUBLIC	??_C@_0FC@MCCJHJPM@Experience?5?3?5Map?$FL?$CFd?$FN?9?$CI?$CFd?0?$CFd?$CJ?5?$FL?$CFs@ ; `string'
PUBLIC	??_C@_0CL@HMJDDJO@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?3?5?$FL?$CFs?$FN?$FL?$CFs?$FN@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?CrywolfMVPLevelUp@CCrywolfUtil@@QAEHHH@Z	; CCrywolfUtil::CrywolfMVPLevelUp
EXTRN	_strlen:PROC
EXTRN	?gParty@@3VPartyClass@@A:BYTE			; gParty
EXTRN	_sprintf:PROC
EXTRN	?gObjCalcMaxLifePower@@YAXH@Z:PROC		; gObjCalcMaxLifePower
EXTRN	?GCLevelUpMsgSend@@YAXHH@Z:PROC			; GCLevelUpMsgSend
EXTRN	?gObjSetBP@@YAXH@Z:PROC				; gObjSetBP
EXTRN	?gObjNextExpCal@@YAXPAUOBJECTSTRUCT@@@Z:PROC	; gObjNextExpCal
EXTRN	?DCInfo@@3Vclassdef@@A:BYTE			; DCInfo
EXTRN	?GCServerMsgStringSend@@YAXPADHE@Z:PROC		; GCServerMsgStringSend
EXTRN	?Get@CMsg@@QAEPADH@Z:PROC			; CMsg::Get
EXTRN	?lMsg@@3VCMsg@@A:BYTE				; lMsg
EXTRN	?gObjSetExpPetItem@@YAXHH@Z:PROC		; gObjSetExpPetItem
EXTRN	?MasterLevelUp@CMasterLevelSystem@@QAEHPAUOBJECTSTRUCT@@AA_J_NH@Z:PROC ; CMasterLevelSystem::MasterLevelUp
EXTRN	?g_MasterLevelSystem@@3VCMasterLevelSystem@@A:BYTE ; g_MasterLevelSystem
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_0L@MNKEEMGH@?0?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5?$AA@
CONST	SEGMENT
??_C@_0L@MNKEEMGH@?0?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5?$AA@ DB ',(%s)(%s) ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@DJAOLMAF@400?5LevelUp?5?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5Party?5?$AA@
CONST	SEGMENT
??_C@_0BM@DJAOLMAF@400?5LevelUp?5?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5Party?5?$AA@ DB '4'
	DB	'00 LevelUp (%s)(%s) Party ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@NEGEKGDM@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5L@
CONST	SEGMENT
??_C@_0EG@NEGEKGDM@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5L@ DB '['
	DB	' Crywolf ][MVP Exp.] [%s][%s] LevelUp PlusStatQuest Clear Add'
	DB	'Stat %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FC@MCCJHJPM@Experience?5?3?5Map?$FL?$CFd?$FN?9?$CI?$CFd?0?$CFd?$CJ?5?$FL?$CFs@
CONST	SEGMENT
??_C@_0FC@MCCJHJPM@Experience?5?3?5Map?$FL?$CFd?$FN?9?$CI?$CFd?0?$CFd?$CJ?5?$FL?$CFs@ DB 'E'
	DB	'xperience : Map[%d]-(%d,%d) [%s][%s](%d) %u %d MonsterIndex :'
	DB	' %d, EventType : %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@HMJDDJO@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?3?5?$FL?$CFs?$FN?$FL?$CFs?$FN@
CONST	SEGMENT
??_C@_0CL@HMJDDJO@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?3?5?$FL?$CFs?$FN?$FL?$CFs?$FN@ DB '['
	DB	' Crywolf ][MVP Exp.] : [%s][%s](%d) %u %d', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
tv67 = -352						; size = 4
_iSize$228856 = -284					; size = 4
_i$228851 = -280					; size = 4
_iPartyNumIndex$228850 = -276				; size = 4
_szMsg$228848 = -272					; size = 256
_iPartyNumber$228847 = -16				; size = 4
_iLEFT_EXP$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_iUserIndex$ = 8					; size = 4
_iAddExp$ = 12						; size = 4
?CrywolfMVPLevelUp@CCrywolfUtil@@QAEHHH@Z PROC		; CCrywolfUtil::CrywolfMVPLevelUp
; _this$ = ecx

; 191  : {

  00680	55		 push	 ebp
  00681	8b ec		 mov	 ebp, esp
  00683	81 ec 60 01 00
	00		 sub	 esp, 352		; 00000160H
  00689	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0068e	33 c5		 xor	 eax, ebp
  00690	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00693	53		 push	 ebx
  00694	56		 push	 esi
  00695	57		 push	 edi
  00696	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 192  : 	if ( !OBJMAX_RANGE(iUserIndex ) )

  00699	83 7d 08 00	 cmp	 DWORD PTR _iUserIndex$[ebp], 0
  0069d	7d 0c		 jge	 SHORT $LN17@CrywolfMVP
  0069f	c7 85 a0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv67[ebp], 0
  006a9	eb 12		 jmp	 SHORT $LN18@CrywolfMVP
$LN17@CrywolfMVP:
  006ab	33 c0		 xor	 eax, eax
  006ad	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _iUserIndex$[ebp], 14999 ; 00003a97H
  006b4	0f 9e c0	 setle	 al
  006b7	89 85 a0 fe ff
	ff		 mov	 DWORD PTR tv67[ebp], eax
$LN18@CrywolfMVP:
  006bd	83 bd a0 fe ff
	ff 00		 cmp	 DWORD PTR tv67[ebp], 0
  006c4	75 07		 jne	 SHORT $LN14@CrywolfMVP

; 193  : 	{
; 194  : 		return 0;

  006c6	33 c0		 xor	 eax, eax
  006c8	e9 e8 06 00 00	 jmp	 $LN15@CrywolfMVP
$LN14@CrywolfMVP:

; 195  : 	}
; 196  : 
; 197  : 	LogAddTD("[ Crywolf ][MVP Exp.] : [%s][%s](%d) %u %d", gObj[iUserIndex].AccountID, gObj[iUserIndex].Name, gObj[iUserIndex].Level, gObj[iUserIndex].Experience, iAddExp);

  006cd	8b 45 0c	 mov	 eax, DWORD PTR _iAddExp$[ebp]
  006d0	50		 push	 eax
  006d1	8b 4d 08	 mov	 ecx, DWORD PTR _iUserIndex$[ebp]
  006d4	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  006da	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  006e0	8b 84 0a c8 00
	00 00		 mov	 eax, DWORD PTR [edx+ecx+200]
  006e7	50		 push	 eax
  006e8	8b 4d 08	 mov	 ecx, DWORD PTR _iUserIndex$[ebp]
  006eb	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  006f1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  006f7	0f bf 84 0a be
	00 00 00	 movsx	 eax, WORD PTR [edx+ecx+190]
  006ff	50		 push	 eax
  00700	8b 4d 08	 mov	 ecx, DWORD PTR _iUserIndex$[ebp]
  00703	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00709	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0070f	8d 44 0a 77	 lea	 eax, DWORD PTR [edx+ecx+119]
  00713	50		 push	 eax
  00714	8b 4d 08	 mov	 ecx, DWORD PTR _iUserIndex$[ebp]
  00717	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0071d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00723	8d 44 0a 6c	 lea	 eax, DWORD PTR [edx+ecx+108]
  00727	50		 push	 eax
  00728	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@HMJDDJO@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?3?5?$FL?$CFs?$FN?$FL?$CFs?$FN@
  0072d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00733	83 c4 18	 add	 esp, 24			; 00000018H

; 198  : 
; 199  : 	if(g_MasterLevelSystem.MasterLevelUp(&gObj[iUserIndex], (__int64&)iAddExp,1,0) != 0) //season3 add-on

  00736	6a 00		 push	 0
  00738	6a 01		 push	 1
  0073a	8d 45 0c	 lea	 eax, DWORD PTR _iAddExp$[ebp]
  0073d	50		 push	 eax
  0073e	8b 4d 08	 mov	 ecx, DWORD PTR _iUserIndex$[ebp]
  00741	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00747	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0074d	51		 push	 ecx
  0074e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MasterLevelSystem@@3VCMasterLevelSystem@@A ; g_MasterLevelSystem
  00753	e8 00 00 00 00	 call	 ?MasterLevelUp@CMasterLevelSystem@@QAEHPAUOBJECTSTRUCT@@AA_J_NH@Z ; CMasterLevelSystem::MasterLevelUp
  00758	85 c0		 test	 eax, eax
  0075a	74 07		 je	 SHORT $LN13@CrywolfMVP

; 200  : 	{
; 201  : 		return 0;

  0075c	33 c0		 xor	 eax, eax
  0075e	e9 52 06 00 00	 jmp	 $LN15@CrywolfMVP
$LN13@CrywolfMVP:

; 202  : 	}
; 203  : 
; 204  : 	gObjSetExpPetItem(iUserIndex, iAddExp);

  00763	8b 45 0c	 mov	 eax, DWORD PTR _iAddExp$[ebp]
  00766	50		 push	 eax
  00767	8b 4d 08	 mov	 ecx, DWORD PTR _iUserIndex$[ebp]
  0076a	51		 push	 ecx
  0076b	e8 00 00 00 00	 call	 ?gObjSetExpPetItem@@YAXHH@Z ; gObjSetExpPetItem
  00770	83 c4 08	 add	 esp, 8

; 205  : 
; 206  : 	int iLEFT_EXP = 0;

  00773	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _iLEFT_EXP$[ebp], 0

; 207  : 
; 208  : 	LogAddTD("Experience : Map[%d]-(%d,%d) [%s][%s](%d) %u %d MonsterIndex : %d, EventType : %d", gObj[iUserIndex].MapNumber, gObj[iUserIndex].X, gObj[iUserIndex].X, gObj[iUserIndex].AccountID, gObj[iUserIndex].Name, gObj[iUserIndex].Level, gObj[iUserIndex].Experience, iAddExp, 0, EVENT_TYPE_CRYWOLF);

  0077a	6a 05		 push	 5
  0077c	6a 00		 push	 0
  0077e	8b 45 0c	 mov	 eax, DWORD PTR _iAddExp$[ebp]
  00781	50		 push	 eax
  00782	8b 4d 08	 mov	 ecx, DWORD PTR _iUserIndex$[ebp]
  00785	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0078b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00791	8b 84 0a c8 00
	00 00		 mov	 eax, DWORD PTR [edx+ecx+200]
  00798	50		 push	 eax
  00799	8b 4d 08	 mov	 ecx, DWORD PTR _iUserIndex$[ebp]
  0079c	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  007a2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  007a8	0f bf 84 0a be
	00 00 00	 movsx	 eax, WORD PTR [edx+ecx+190]
  007b0	50		 push	 eax
  007b1	8b 4d 08	 mov	 ecx, DWORD PTR _iUserIndex$[ebp]
  007b4	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  007ba	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  007c0	8d 44 0a 77	 lea	 eax, DWORD PTR [edx+ecx+119]
  007c4	50		 push	 eax
  007c5	8b 4d 08	 mov	 ecx, DWORD PTR _iUserIndex$[ebp]
  007c8	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  007ce	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  007d4	8d 44 0a 6c	 lea	 eax, DWORD PTR [edx+ecx+108]
  007d8	50		 push	 eax
  007d9	8b 4d 08	 mov	 ecx, DWORD PTR _iUserIndex$[ebp]
  007dc	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  007e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  007e8	0f bf 84 0a 44
	01 00 00	 movsx	 eax, WORD PTR [edx+ecx+324]
  007f0	50		 push	 eax
  007f1	8b 4d 08	 mov	 ecx, DWORD PTR _iUserIndex$[ebp]
  007f4	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  007fa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00800	0f bf 84 0a 44
	01 00 00	 movsx	 eax, WORD PTR [edx+ecx+324]
  00808	50		 push	 eax
  00809	8b 4d 08	 mov	 ecx, DWORD PTR _iUserIndex$[ebp]
  0080c	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00812	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00818	0f b6 84 0a 49
	01 00 00	 movzx	 eax, BYTE PTR [edx+ecx+329]
  00820	50		 push	 eax
  00821	68 00 00 00 00	 push	 OFFSET ??_C@_0FC@MCCJHJPM@Experience?5?3?5Map?$FL?$CFd?$FN?9?$CI?$CFd?0?$CFd?$CJ?5?$FL?$CFs@
  00826	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0082c	83 c4 2c	 add	 esp, 44			; 0000002cH

; 209  : 
; 210  : 	if ( gObj[iUserIndex].Level >= MAX_CHAR_LEVEL )

  0082f	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00832	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00838	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0083e	0f bf 94 01 be
	00 00 00	 movsx	 edx, WORD PTR [ecx+eax+190]
  00846	81 fa 90 01 00
	00		 cmp	 edx, 400		; 00000190H
  0084c	7c 34		 jl	 SHORT $LN12@CrywolfMVP

; 211  : 	{
; 212  : 		GCServerMsgStringSend(lMsg.Get(MSGGET(4, 112)), gObj[iUserIndex].m_Index, 1);

  0084e	6a 01		 push	 1
  00850	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00853	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00859	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0085f	8b 14 01	 mov	 edx, DWORD PTR [ecx+eax]
  00862	52		 push	 edx
  00863	68 70 04 00 00	 push	 1136			; 00000470H
  00868	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0086d	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00872	50		 push	 eax
  00873	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00878	83 c4 0c	 add	 esp, 12			; 0000000cH

; 213  : 		return 0;

  0087b	33 c0		 xor	 eax, eax
  0087d	e9 33 05 00 00	 jmp	 $LN15@CrywolfMVP
$LN12@CrywolfMVP:

; 214  : 	}
; 215  : 
; 216  : 	if ( (gObj[iUserIndex].Experience + iAddExp) < gObj[iUserIndex].NextExp )

  00882	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00885	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0088b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00891	8b 94 01 c8 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+200]
  00898	03 55 0c	 add	 edx, DWORD PTR _iAddExp$[ebp]
  0089b	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  0089e	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  008a4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  008aa	3b 94 01 cc 00
	00 00		 cmp	 edx, DWORD PTR [ecx+eax+204]
  008b1	73 34		 jae	 SHORT $LN11@CrywolfMVP

; 217  : 	{
; 218  : 		gObj[iUserIndex].Experience += iAddExp;

  008b3	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  008b6	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  008bc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  008c2	8b 94 01 c8 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+200]
  008c9	03 55 0c	 add	 edx, DWORD PTR _iAddExp$[ebp]
  008cc	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  008cf	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  008d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  008db	89 94 01 c8 00
	00 00		 mov	 DWORD PTR [ecx+eax+200], edx

; 219  : 	}
; 220  : 	else

  008e2	e9 cb 04 00 00	 jmp	 $LN5@CrywolfMVP
$LN11@CrywolfMVP:

; 221  : 	{
; 222  : 		iLEFT_EXP = gObj[iUserIndex].Experience + iAddExp - gObj[iUserIndex].NextExp;

  008e7	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  008ea	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  008f0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  008f6	8b 94 01 c8 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+200]
  008fd	03 55 0c	 add	 edx, DWORD PTR _iAddExp$[ebp]
  00900	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00903	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00909	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0090f	2b 94 01 cc 00
	00 00		 sub	 edx, DWORD PTR [ecx+eax+204]
  00916	89 55 f4	 mov	 DWORD PTR _iLEFT_EXP$[ebp], edx

; 223  : 		gObj[iUserIndex].Experience = gObj[iUserIndex].NextExp;

  00919	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  0091c	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00922	8b 4d 08	 mov	 ecx, DWORD PTR _iUserIndex$[ebp]
  00925	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0092b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00931	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00937	8b 84 06 cc 00
	00 00		 mov	 eax, DWORD PTR [esi+eax+204]
  0093e	89 84 0a c8 00
	00 00		 mov	 DWORD PTR [edx+ecx+200], eax

; 224  : 		gObj[iUserIndex].Level++;

  00945	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00948	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0094e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00954	66 8b 94 01 be
	00 00 00	 mov	 dx, WORD PTR [ecx+eax+190]
  0095c	66 83 c2 01	 add	 dx, 1
  00960	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00963	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00969	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0096f	66 89 94 01 be
	00 00 00	 mov	 WORD PTR [ecx+eax+190], dx

; 225  : 
; 226  : 		if ( gObj[iUserIndex].Class == CLASS_DARKLORD || gObj[iUserIndex].Class == CLASS_MAGUMSA )

  00977	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  0097a	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00980	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00986	0f b7 94 01 b8
	00 00 00	 movzx	 edx, WORD PTR [ecx+eax+184]
  0098e	83 fa 04	 cmp	 edx, 4
  00991	74 1c		 je	 SHORT $LN8@CrywolfMVP
  00993	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00996	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0099c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  009a2	0f b7 94 01 b8
	00 00 00	 movzx	 edx, WORD PTR [ecx+eax+184]
  009aa	83 fa 03	 cmp	 edx, 3
  009ad	75 31		 jne	 SHORT $LN9@CrywolfMVP
$LN8@CrywolfMVP:

; 227  : 		{
; 228  : 			gObj[iUserIndex].LevelUpPoint += 7;

  009af	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  009b2	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  009b8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  009be	8b 94 01 c0 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+192]
  009c5	83 c2 07	 add	 edx, 7
  009c8	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  009cb	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  009d1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  009d7	89 94 01 c0 00
	00 00		 mov	 DWORD PTR [ecx+eax+192], edx

; 229  : 		}
; 230  : 		else

  009de	eb 2f		 jmp	 SHORT $LN7@CrywolfMVP
$LN9@CrywolfMVP:

; 231  : 		{
; 232  : 			gObj[iUserIndex].LevelUpPoint += 5;

  009e0	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  009e3	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  009e9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  009ef	8b 94 01 c0 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+192]
  009f6	83 c2 05	 add	 edx, 5
  009f9	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  009fc	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00a02	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a08	89 94 01 c0 00
	00 00		 mov	 DWORD PTR [ecx+eax+192], edx
$LN7@CrywolfMVP:

; 233  : 		}
; 234  : 
; 235  : 		if ( gObj[iUserIndex].PlusStatQuestClear != false )

  00a0f	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00a12	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00a18	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a1e	0f b6 94 01 a5
	00 00 00	 movzx	 edx, BYTE PTR [ecx+eax+165]
  00a26	85 d2		 test	 edx, edx
  00a28	74 7c		 je	 SHORT $LN6@CrywolfMVP

; 236  : 		{
; 237  : 			gObj[iUserIndex].LevelUpPoint++;

  00a2a	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00a2d	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00a33	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a39	8b 94 01 c0 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+192]
  00a40	83 c2 01	 add	 edx, 1
  00a43	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00a46	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00a4c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a52	89 94 01 c0 00
	00 00		 mov	 DWORD PTR [ecx+eax+192], edx

; 238  : 			LogAddTD("[ Crywolf ][MVP Exp.] [%s][%s] LevelUp PlusStatQuest Clear AddStat %d", gObj[iUserIndex].AccountID, gObj[iUserIndex].Name, gObj[iUserIndex].LevelUpPoint);

  00a59	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00a5c	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00a62	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a68	8b 94 01 c0 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+192]
  00a6f	52		 push	 edx
  00a70	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00a73	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00a79	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a7f	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  00a83	52		 push	 edx
  00a84	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00a87	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00a8d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a93	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  00a97	52		 push	 edx
  00a98	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@NEGEKGDM@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5L@
  00a9d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00aa3	83 c4 10	 add	 esp, 16			; 00000010H
$LN6@CrywolfMVP:

; 239  : 		}
; 240  : 
; 241  : 		gObj[iUserIndex].MaxLife += DCInfo.DefClass[gObj[iUserIndex].Class].LevelLife;

  00aa6	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00aa9	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00aaf	8b 4d 08	 mov	 ecx, DWORD PTR _iUserIndex$[ebp]
  00ab2	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00ab8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00abe	0f b7 8c 0a b8
	00 00 00	 movzx	 ecx, WORD PTR [edx+ecx+184]
  00ac6	69 c9 c8 0b 00
	00		 imul	 ecx, 3016		; 00000bc8H
  00acc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00ad2	d9 84 02 00 01
	00 00		 fld	 DWORD PTR [edx+eax+256]
  00ad9	d8 81 10 00 00
	00		 fadd	 DWORD PTR ?DCInfo@@3Vclassdef@@A[ecx+16]
  00adf	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00ae2	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00ae8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00aee	d9 9c 01 00 01
	00 00		 fstp	 DWORD PTR [ecx+eax+256]

; 242  : 		gObj[iUserIndex].MaxMana += DCInfo.DefClass[gObj[iUserIndex].Class].LevelMana;

  00af5	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00af8	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00afe	8b 4d 08	 mov	 ecx, DWORD PTR _iUserIndex$[ebp]
  00b01	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00b07	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00b0d	0f b7 8c 0a b8
	00 00 00	 movzx	 ecx, WORD PTR [edx+ecx+184]
  00b15	69 c9 c8 0b 00
	00		 imul	 ecx, 3016		; 00000bc8H
  00b1b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00b21	d9 84 02 14 01
	00 00		 fld	 DWORD PTR [edx+eax+276]
  00b28	d8 81 1c 00 00
	00		 fadd	 DWORD PTR ?DCInfo@@3Vclassdef@@A[ecx+28]
  00b2e	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00b31	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00b37	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00b3d	d9 9c 01 14 01
	00 00		 fstp	 DWORD PTR [ecx+eax+276]

; 243  : 		gObj[iUserIndex].Life = gObj[iUserIndex].MaxLife;

  00b44	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00b47	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00b4d	8b 4d 08	 mov	 ecx, DWORD PTR _iUserIndex$[ebp]
  00b50	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00b56	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00b5c	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00b62	d9 84 06 00 01
	00 00		 fld	 DWORD PTR [esi+eax+256]
  00b69	d9 9c 0a fc 00
	00 00		 fstp	 DWORD PTR [edx+ecx+252]

; 244  : 		gObj[iUserIndex].Mana = gObj[iUserIndex].MaxMana;

  00b70	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00b73	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00b79	8b 4d 08	 mov	 ecx, DWORD PTR _iUserIndex$[ebp]
  00b7c	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00b82	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00b88	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00b8e	d9 84 06 14 01
	00 00		 fld	 DWORD PTR [esi+eax+276]
  00b95	d9 9c 0a 10 01
	00 00		 fstp	 DWORD PTR [edx+ecx+272]

; 245  : 		gObjNextExpCal(&gObj[iUserIndex]);

  00b9c	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00b9f	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00ba5	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00bab	50		 push	 eax
  00bac	e8 00 00 00 00	 call	 ?gObjNextExpCal@@YAXPAUOBJECTSTRUCT@@@Z ; gObjNextExpCal
  00bb1	83 c4 04	 add	 esp, 4

; 246  : 		gObjSetBP(gObj[iUserIndex].m_Index);

  00bb4	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00bb7	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00bbd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00bc3	8b 14 01	 mov	 edx, DWORD PTR [ecx+eax]
  00bc6	52		 push	 edx
  00bc7	e8 00 00 00 00	 call	 ?gObjSetBP@@YAXH@Z	; gObjSetBP
  00bcc	83 c4 04	 add	 esp, 4

; 247  : 		GCLevelUpMsgSend(gObj[iUserIndex].m_Index, 1);

  00bcf	6a 01		 push	 1
  00bd1	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00bd4	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00bda	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00be0	8b 14 01	 mov	 edx, DWORD PTR [ecx+eax]
  00be3	52		 push	 edx
  00be4	e8 00 00 00 00	 call	 ?GCLevelUpMsgSend@@YAXHH@Z ; GCLevelUpMsgSend
  00be9	83 c4 08	 add	 esp, 8

; 248  : 		gObjCalcMaxLifePower(gObj[iUserIndex].m_Index);

  00bec	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00bef	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00bf5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00bfb	8b 14 01	 mov	 edx, DWORD PTR [ecx+eax]
  00bfe	52		 push	 edx
  00bff	e8 00 00 00 00	 call	 ?gObjCalcMaxLifePower@@YAXH@Z ; gObjCalcMaxLifePower
  00c04	83 c4 04	 add	 esp, 4

; 249  : 
; 250  : 		LogAddTD(lMsg.Get(MSGGET(2, 8)), gObj[iUserIndex].AccountID, gObj[iUserIndex].Name, gObj[iUserIndex].Level);

  00c07	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00c0a	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00c10	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00c16	0f bf 94 01 be
	00 00 00	 movsx	 edx, WORD PTR [ecx+eax+190]
  00c1e	52		 push	 edx
  00c1f	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00c22	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00c28	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00c2e	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  00c32	52		 push	 edx
  00c33	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00c36	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00c3c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00c42	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  00c46	52		 push	 edx
  00c47	68 08 02 00 00	 push	 520			; 00000208H
  00c4c	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00c51	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00c56	50		 push	 eax
  00c57	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00c5d	83 c4 10	 add	 esp, 16			; 00000010H

; 251  : 
; 252  : 		//----------------------------------------------------------------------------------------------
; 253  : 
; 254  : 		if( gObj[iUserIndex].Level == 400 && gObj[iUserIndex].PartyNumber >= 0 ) //Season 2.5 add-on (Party Level 400 Display)

  00c60	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00c63	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00c69	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00c6f	0f bf 94 01 be
	00 00 00	 movsx	 edx, WORD PTR [ecx+eax+190]
  00c77	81 fa 90 01 00
	00		 cmp	 edx, 400		; 00000190H
  00c7d	0f 85 2f 01 00
	00		 jne	 $LN5@CrywolfMVP
  00c83	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00c86	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00c8c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00c92	83 bc 01 2c 04
	00 00 00	 cmp	 DWORD PTR [ecx+eax+1068], 0
  00c9a	0f 8c 12 01 00
	00		 jl	 $LN5@CrywolfMVP

; 255  : 		{
; 256  : 			int iPartyNumber = gObj[iUserIndex].PartyNumber;

  00ca0	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00ca3	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00ca9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00caf	8b 94 01 2c 04
	00 00		 mov	 edx, DWORD PTR [ecx+eax+1068]
  00cb6	89 55 f0	 mov	 DWORD PTR _iPartyNumber$228847[ebp], edx

; 257  : 			char szMsg[256];
; 258  : 			sprintf(szMsg,"400 LevelUp (%s)(%s) Party ",gObj[iUserIndex].AccountID,gObj[iUserIndex].Name);

  00cb9	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00cbc	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00cc2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00cc8	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  00ccc	52		 push	 edx
  00ccd	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  00cd0	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00cd6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00cdc	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  00ce0	52		 push	 edx
  00ce1	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DJAOLMAF@400?5LevelUp?5?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5Party?5?$AA@
  00ce6	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _szMsg$228848[ebp]
  00cec	50		 push	 eax
  00ced	e8 00 00 00 00	 call	 _sprintf
  00cf2	83 c4 10	 add	 esp, 16			; 00000010H

; 259  : 			int iPartyNumIndex;
; 260  : 
; 261  : 			for( int i = 0; i<MAX_USER_IN_PARTY; i++ )

  00cf5	c7 85 e8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$228851[ebp], 0
  00cff	eb 0f		 jmp	 SHORT $LN4@CrywolfMVP
$LN3@CrywolfMVP:
  00d01	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _i$228851[ebp]
  00d07	83 c0 01	 add	 eax, 1
  00d0a	89 85 e8 fe ff
	ff		 mov	 DWORD PTR _i$228851[ebp], eax
$LN4@CrywolfMVP:
  00d10	83 bd e8 fe ff
	ff 0a		 cmp	 DWORD PTR _i$228851[ebp], 10 ; 0000000aH
  00d17	0f 8d 85 00 00
	00		 jge	 $LN2@CrywolfMVP

; 262  : 			{
; 263  : 				iPartyNumIndex = gParty.m_PartyS[iPartyNumber].Number[i];

  00d1d	8b 45 f0	 mov	 eax, DWORD PTR _iPartyNumber$228847[ebp]
  00d20	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00d23	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR _i$228851[ebp]
  00d29	8b 94 88 0c 00
	00 00		 mov	 edx, DWORD PTR ?gParty@@3VPartyClass@@A[eax+ecx*4+12]
  00d30	89 95 ec fe ff
	ff		 mov	 DWORD PTR _iPartyNumIndex$228850[ebp], edx

; 264  : 
; 265  : 				if( iPartyNumIndex >= 0  )

  00d36	83 bd ec fe ff
	ff 00		 cmp	 DWORD PTR _iPartyNumIndex$228850[ebp], 0
  00d3d	7c 5e		 jl	 SHORT $LN1@CrywolfMVP

; 266  : 				{
; 267  : 					int iSize = strlen(szMsg);

  00d3f	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _szMsg$228848[ebp]
  00d45	50		 push	 eax
  00d46	e8 00 00 00 00	 call	 _strlen
  00d4b	83 c4 04	 add	 esp, 4
  00d4e	89 85 e4 fe ff
	ff		 mov	 DWORD PTR _iSize$228856[ebp], eax

; 268  : 					sprintf(&szMsg[iSize],",(%s)(%s) ",gObj[iPartyNumIndex].AccountID,gObj[iPartyNumIndex].Name);

  00d54	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _iPartyNumIndex$228850[ebp]
  00d5a	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00d60	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00d66	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  00d6a	52		 push	 edx
  00d6b	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _iPartyNumIndex$228850[ebp]
  00d71	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00d77	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00d7d	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  00d81	52		 push	 edx
  00d82	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MNKEEMGH@?0?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5?$AA@
  00d87	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _iSize$228856[ebp]
  00d8d	8d 8c 05 f0 fe
	ff ff		 lea	 ecx, DWORD PTR _szMsg$228848[ebp+eax]
  00d94	51		 push	 ecx
  00d95	e8 00 00 00 00	 call	 _sprintf
  00d9a	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@CrywolfMVP:

; 269  : 				}
; 270  : 			}

  00d9d	e9 5f ff ff ff	 jmp	 $LN3@CrywolfMVP
$LN2@CrywolfMVP:

; 271  : 			LogAddTD(szMsg);

  00da2	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _szMsg$228848[ebp]
  00da8	50		 push	 eax
  00da9	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00daf	83 c4 04	 add	 esp, 4
$LN5@CrywolfMVP:

; 272  : 		}
; 273  : 	}
; 274  : 
; 275  : 	return iLEFT_EXP;

  00db2	8b 45 f4	 mov	 eax, DWORD PTR _iLEFT_EXP$[ebp]
$LN15@CrywolfMVP:

; 276  : }

  00db5	5f		 pop	 edi
  00db6	5e		 pop	 esi
  00db7	5b		 pop	 ebx
  00db8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00dbb	33 cd		 xor	 ecx, ebp
  00dbd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00dc2	8b e5		 mov	 esp, ebp
  00dc4	5d		 pop	 ebp
  00dc5	c2 08 00	 ret	 8
?CrywolfMVPLevelUp@CCrywolfUtil@@QAEHHH@Z ENDP		; CCrywolfUtil::CrywolfMVPLevelUp
_TEXT	ENDS
END
