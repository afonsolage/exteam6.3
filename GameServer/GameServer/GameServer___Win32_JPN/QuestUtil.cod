; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\QuestUtil.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_7CQuestUtil@@6B@				; CQuestUtil::`vftable'
PUBLIC	??0CQuestUtil@@QAE@XZ				; CQuestUtil::CQuestUtil
PUBLIC	??_R4CQuestUtil@@6B@				; CQuestUtil::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCQuestUtil@@@8				; CQuestUtil `RTTI Type Descriptor'
PUBLIC	??_R3CQuestUtil@@8				; CQuestUtil::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CQuestUtil@@8				; CQuestUtil::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CQuestUtil@@8			; CQuestUtil::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECQuestUtil@@UAEPAXI@Z:PROC			; CQuestUtil::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CQuestUtil@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\questutil.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CQuestUtil@@8 DD FLAT:??_R0?AVCQuestUtil@@@8 ; CQuestUtil::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CQuestUtil@@8
rdata$r	ENDS
;	COMDAT ??_R2CQuestUtil@@8
rdata$r	SEGMENT
??_R2CQuestUtil@@8 DD FLAT:??_R1A@?0A@EA@CQuestUtil@@8	; CQuestUtil::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CQuestUtil@@8
rdata$r	SEGMENT
??_R3CQuestUtil@@8 DD 00H				; CQuestUtil::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CQuestUtil@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCQuestUtil@@@8
_DATA	SEGMENT
??_R0?AVCQuestUtil@@@8 DD FLAT:??_7type_info@@6B@	; CQuestUtil `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCQuestUtil@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CQuestUtil@@6B@
rdata$r	SEGMENT
??_R4CQuestUtil@@6B@ DD 00H				; CQuestUtil::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCQuestUtil@@@8
	DD	FLAT:??_R3CQuestUtil@@8
rdata$r	ENDS
;	COMDAT ??_7CQuestUtil@@6B@
CONST	SEGMENT
??_7CQuestUtil@@6B@ DD FLAT:??_R4CQuestUtil@@6B@	; CQuestUtil::`vftable'
	DD	FLAT:??_ECQuestUtil@@UAEPAXI@Z
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CQuestUtil@@QAE@XZ PROC				; CQuestUtil::CQuestUtil
; _this$ = ecx

; 16   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CQuestUtil@@6B@

; 17   : 
; 18   : }

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CQuestUtil@@QAE@XZ ENDP				; CQuestUtil::CQuestUtil
_TEXT	ENDS
PUBLIC	??1CQuestUtil@@UAE@XZ				; CQuestUtil::~CQuestUtil
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCQuestUtil@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCQuestUtil@@UAEPAXI@Z PROC				; CQuestUtil::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CQuestUtil@@UAE@XZ	; CQuestUtil::~CQuestUtil
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCQuestUtil@@UAEPAXI@Z ENDP				; CQuestUtil::`scalar deleting destructor'
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CQuestUtil@@UAE@XZ PROC				; CQuestUtil::~CQuestUtil
; _this$ = ecx

; 21   : {

  00020	55		 push	 ebp
  00021	8b ec		 mov	 ebp, esp
  00023	83 ec 44	 sub	 esp, 68			; 00000044H
  00026	53		 push	 ebx
  00027	56		 push	 esi
  00028	57		 push	 edi
  00029	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CQuestUtil@@6B@

; 22   : 
; 23   : }

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??1CQuestUtil@@UAE@XZ ENDP				; CQuestUtil::~CQuestUtil
_TEXT	ENDS
PUBLIC	?set@PBMSG_HEAD@@QAEXPAEEE@Z			; PBMSG_HEAD::set
PUBLIC	__$ArrayPad$
PUBLIC	?Quest3rdRequestInfo@CQuestUtil@@QAEXPAUOBJECTSTRUCT@@@Z ; CQuestUtil::Quest3rdRequestInfo
EXTRN	?Send@DBSockMng@@QAEHPADH@Z:PROC		; DBSockMng::Send
EXTRN	?cDBSMng@@3VDBSockMng@@A:BYTE			; cDBSMng
EXTRN	_memcpy:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pMsg$ = -28						; size = 20
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
?Quest3rdRequestInfo@CQuestUtil@@QAEXPAUOBJECTSTRUCT@@@Z PROC ; CQuestUtil::Quest3rdRequestInfo
; _this$ = ecx

; 27   : {

  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
  00043	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0004b	33 c5		 xor	 eax, ebp
  0004d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00050	53		 push	 ebx
  00051	56		 push	 esi
  00052	57		 push	 edi
  00053	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 28   : 	PMSG_004A2100 pMsg;
; 29   : 
; 30   : 	if(lpObj->m_i3rdQuestState == 1)

  00056	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00059	83 b8 5c 10 00
	00 01		 cmp	 DWORD PTR [eax+4188], 1
  00060	75 02		 jne	 SHORT $LN1@Quest3rdRe

; 31   : 	{
; 32   : 		return;

  00062	eb 44		 jmp	 SHORT $LN2@Quest3rdRe
$LN1@Quest3rdRe:

; 33   : 	}
; 34   : 
; 35   : 	pMsg.h.set((LPBYTE)&pMsg, 0x13, sizeof(pMsg));

  00064	6a 14		 push	 20			; 00000014H
  00066	6a 13		 push	 19			; 00000013H
  00068	8d 45 e4	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0006b	50		 push	 eax
  0006c	8d 4d e4	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  0006f	e8 00 00 00 00	 call	 ?set@PBMSG_HEAD@@QAEXPAEEE@Z ; PBMSG_HEAD::set

; 36   : 	pMsg.iUserIndex = lpObj->m_Index;

  00074	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00077	8b 08		 mov	 ecx, DWORD PTR [eax]
  00079	89 4d e8	 mov	 DWORD PTR _pMsg$[ebp+4], ecx

; 37   : 	memcpy(pMsg.chCharacterName, lpObj->Name, 10);

  0007c	6a 0a		 push	 10			; 0000000aH
  0007e	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00081	83 c0 77	 add	 eax, 119		; 00000077H
  00084	50		 push	 eax
  00085	8d 4d ec	 lea	 ecx, DWORD PTR _pMsg$[ebp+8]
  00088	51		 push	 ecx
  00089	e8 00 00 00 00	 call	 _memcpy
  0008e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 38   : 	pMsg.chCharacterName[10] = '\0';

  00091	c6 45 f6 00	 mov	 BYTE PTR _pMsg$[ebp+18], 0

; 39   : 	cDBSMng.Send((char*)&pMsg, pMsg.h.size);

  00095	0f b6 45 e5	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  00099	50		 push	 eax
  0009a	8d 4d e4	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  0009d	51		 push	 ecx
  0009e	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  000a3	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
$LN2@Quest3rdRe:

; 40   : }

  000a8	5f		 pop	 edi
  000a9	5e		 pop	 esi
  000aa	5b		 pop	 ebx
  000ab	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ae	33 cd		 xor	 ecx, ebp
  000b0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c2 04 00	 ret	 4
?Quest3rdRequestInfo@CQuestUtil@@QAEXPAUOBJECTSTRUCT@@@Z ENDP ; CQuestUtil::Quest3rdRequestInfo
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\include\prodef.h
_TEXT	ENDS
;	COMDAT ?set@PBMSG_HEAD@@QAEXPAEEE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpBuf$ = 8						; size = 4
_head$ = 12						; size = 1
_size$ = 16						; size = 1
?set@PBMSG_HEAD@@QAEXPAEEE@Z PROC			; PBMSG_HEAD::set, COMDAT
; _this$ = ecx

; 80   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 81   : 		lpBuf[0] = 0xC1;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  0000f	c6 00 c1	 mov	 BYTE PTR [eax], 193	; 000000c1H

; 82   : 		lpBuf[1] = size;

  00012	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  00015	8a 4d 10	 mov	 cl, BYTE PTR _size$[ebp]
  00018	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 83   : 		lpBuf[2] = head;

  0001b	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  0001e	8a 4d 0c	 mov	 cl, BYTE PTR _head$[ebp]
  00021	88 48 02	 mov	 BYTE PTR [eax+2], cl

; 84   : 	};	// line : 22

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 0c 00	 ret	 12			; 0000000cH
?set@PBMSG_HEAD@@QAEXPAEEE@Z ENDP			; PBMSG_HEAD::set
_TEXT	ENDS
PUBLIC	??_C@_0FC@NKLIHJLF@?$FLQuest?$FN?5Set?5MonsterKillInfo?5?$FL?$CFs?$FN@ ; `string'
PUBLIC	?Quest3rdLoadInfo@CQuestUtil@@QAEXPAE@Z		; CQuestUtil::Quest3rdLoadInfo
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?gObjIsConnectedGP@@YAHH@Z:PROC			; gObjIsConnectedGP
;	COMDAT ??_C@_0FC@NKLIHJLF@?$FLQuest?$FN?5Set?5MonsterKillInfo?5?$FL?$CFs?$FN@
; File d:\projects\exteam6.3\source\gameserver\gameserver\questutil.cpp
CONST	SEGMENT
??_C@_0FC@NKLIHJLF@?$FLQuest?$FN?5Set?5MonsterKillInfo?5?$FL?$CFs?$FN@ DB '['
	DB	'Quest] Set MonsterKillInfo [%s][%s](%d) (%d : %d/%d, %d/%d, %'
	DB	'd/%d, %d/%d, %d/%d)', 00H			; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_lpObj$ = -16						; size = 4
_aIndex$ = -12						; size = 4
_pRecv$ = -8						; size = 4
_this$ = -4						; size = 4
_aRecv$ = 8						; size = 4
?Quest3rdLoadInfo@CQuestUtil@@QAEXPAE@Z PROC		; CQuestUtil::Quest3rdLoadInfo
; _this$ = ecx

; 44   : {

  000c0	55		 push	 ebp
  000c1	8b ec		 mov	 ebp, esp
  000c3	83 ec 50	 sub	 esp, 80			; 00000050H
  000c6	53		 push	 ebx
  000c7	56		 push	 esi
  000c8	57		 push	 edi
  000c9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 45   : 	PMSG_ANS_MONSTERKILLINFO * pRecv = (PMSG_ANS_MONSTERKILLINFO *)aRecv;

  000cc	8b 45 08	 mov	 eax, DWORD PTR _aRecv$[ebp]
  000cf	89 45 f8	 mov	 DWORD PTR _pRecv$[ebp], eax

; 46   : 
; 47   : 	if(!gObjIsConnectedGP(pRecv->Index))

  000d2	8b 45 f8	 mov	 eax, DWORD PTR _pRecv$[ebp]
  000d5	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d8	51		 push	 ecx
  000d9	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  000de	83 c4 04	 add	 esp, 4
  000e1	85 c0		 test	 eax, eax
  000e3	75 05		 jne	 SHORT $LN2@Quest3rdLo

; 48   : 	{
; 49   : 		return;

  000e5	e9 6d 01 00 00	 jmp	 $LN3@Quest3rdLo
$LN2@Quest3rdLo:

; 50   : 	}
; 51   : 
; 52   : 	int aIndex = pRecv->Index;

  000ea	8b 45 f8	 mov	 eax, DWORD PTR _pRecv$[ebp]
  000ed	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f0	89 4d f4	 mov	 DWORD PTR _aIndex$[ebp], ecx

; 53   : 
; 54   : 	LPOBJ lpObj = &gObj[aIndex];

  000f3	8b 45 f4	 mov	 eax, DWORD PTR _aIndex$[ebp]
  000f6	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  000fc	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00102	89 45 f0	 mov	 DWORD PTR _lpObj$[ebp], eax

; 55   : 
; 56   : 	if(lpObj->m_i3rdQuestState == 0)

  00105	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00108	83 b8 5c 10 00
	00 00		 cmp	 DWORD PTR [eax+4188], 0
  0010f	0f 85 42 01 00
	00		 jne	 $LN3@Quest3rdLo

; 57   : 	{
; 58   : 		lpObj->m_i3rdQuestIndex = pRecv->QuestIndex;

  00115	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00118	8b 4d f8	 mov	 ecx, DWORD PTR _pRecv$[ebp]
  0011b	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0011e	89 90 60 10 00
	00		 mov	 DWORD PTR [eax+4192], edx

; 59   : 
; 60   : 		lpObj->MonsterKillInfo[0].MonIndex = pRecv->KillInfo[0].MonIndex;

  00124	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00127	8b 4d f8	 mov	 ecx, DWORD PTR _pRecv$[ebp]
  0012a	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0012d	89 90 64 10 00
	00		 mov	 DWORD PTR [eax+4196], edx

; 61   : 		lpObj->MonsterKillInfo[0].KillCount = pRecv->KillInfo[0].KillCount;

  00133	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00136	8b 4d f8	 mov	 ecx, DWORD PTR _pRecv$[ebp]
  00139	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  0013c	89 90 68 10 00
	00		 mov	 DWORD PTR [eax+4200], edx

; 62   : 
; 63   : 		lpObj->MonsterKillInfo[1].MonIndex = pRecv->KillInfo[1].MonIndex;

  00142	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00145	8b 4d f8	 mov	 ecx, DWORD PTR _pRecv$[ebp]
  00148	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  0014b	89 90 6c 10 00
	00		 mov	 DWORD PTR [eax+4204], edx

; 64   : 		lpObj->MonsterKillInfo[1].KillCount = pRecv->KillInfo[1].KillCount;

  00151	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00154	8b 4d f8	 mov	 ecx, DWORD PTR _pRecv$[ebp]
  00157	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  0015a	89 90 70 10 00
	00		 mov	 DWORD PTR [eax+4208], edx

; 65   : 
; 66   : 		lpObj->MonsterKillInfo[2].MonIndex = pRecv->KillInfo[2].MonIndex;

  00160	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00163	8b 4d f8	 mov	 ecx, DWORD PTR _pRecv$[ebp]
  00166	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  00169	89 90 74 10 00
	00		 mov	 DWORD PTR [eax+4212], edx

; 67   : 		lpObj->MonsterKillInfo[2].KillCount = pRecv->KillInfo[2].KillCount;

  0016f	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00172	8b 4d f8	 mov	 ecx, DWORD PTR _pRecv$[ebp]
  00175	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00178	89 90 78 10 00
	00		 mov	 DWORD PTR [eax+4216], edx

; 68   : 
; 69   : 		lpObj->MonsterKillInfo[3].MonIndex = pRecv->KillInfo[3].MonIndex;

  0017e	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00181	8b 4d f8	 mov	 ecx, DWORD PTR _pRecv$[ebp]
  00184	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  00187	89 90 7c 10 00
	00		 mov	 DWORD PTR [eax+4220], edx

; 70   : 		lpObj->MonsterKillInfo[3].KillCount = pRecv->KillInfo[3].KillCount;

  0018d	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00190	8b 4d f8	 mov	 ecx, DWORD PTR _pRecv$[ebp]
  00193	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  00196	89 90 80 10 00
	00		 mov	 DWORD PTR [eax+4224], edx

; 71   : 
; 72   : 		lpObj->MonsterKillInfo[4].MonIndex = pRecv->KillInfo[4].MonIndex;

  0019c	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0019f	8b 4d f8	 mov	 ecx, DWORD PTR _pRecv$[ebp]
  001a2	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  001a5	89 90 84 10 00
	00		 mov	 DWORD PTR [eax+4228], edx

; 73   : 		lpObj->MonsterKillInfo[4].KillCount = pRecv->KillInfo[4].KillCount;

  001ab	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  001ae	8b 4d f8	 mov	 ecx, DWORD PTR _pRecv$[ebp]
  001b1	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  001b4	89 90 88 10 00
	00		 mov	 DWORD PTR [eax+4232], edx

; 74   : 
; 75   : 		lpObj->m_i3rdQuestState = 1;

  001ba	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  001bd	c7 80 5c 10 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+4188], 1

; 76   : 
; 77   : 		LogAddTD("[Quest] Set MonsterKillInfo [%s][%s](%d) (%d : %d/%d, %d/%d, %d/%d, %d/%d, %d/%d)", lpObj->AccountID, lpObj->Name, lpObj->m_Index, lpObj->m_i3rdQuestIndex,
; 78   : 		lpObj->MonsterKillInfo[0].MonIndex, lpObj->MonsterKillInfo[0].KillCount, 
; 79   : 		lpObj->MonsterKillInfo[1].MonIndex, lpObj->MonsterKillInfo[1].KillCount,
; 80   : 		lpObj->MonsterKillInfo[2].MonIndex, lpObj->MonsterKillInfo[2].KillCount,
; 81   : 		lpObj->MonsterKillInfo[3].MonIndex, lpObj->MonsterKillInfo[3].KillCount,
; 82   : 		lpObj->MonsterKillInfo[4].MonIndex, lpObj->MonsterKillInfo[4].KillCount);

  001c7	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  001ca	8b 88 88 10 00
	00		 mov	 ecx, DWORD PTR [eax+4232]
  001d0	51		 push	 ecx
  001d1	8b 55 f0	 mov	 edx, DWORD PTR _lpObj$[ebp]
  001d4	8b 82 84 10 00
	00		 mov	 eax, DWORD PTR [edx+4228]
  001da	50		 push	 eax
  001db	8b 4d f0	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  001de	8b 91 80 10 00
	00		 mov	 edx, DWORD PTR [ecx+4224]
  001e4	52		 push	 edx
  001e5	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  001e8	8b 88 7c 10 00
	00		 mov	 ecx, DWORD PTR [eax+4220]
  001ee	51		 push	 ecx
  001ef	8b 55 f0	 mov	 edx, DWORD PTR _lpObj$[ebp]
  001f2	8b 82 78 10 00
	00		 mov	 eax, DWORD PTR [edx+4216]
  001f8	50		 push	 eax
  001f9	8b 4d f0	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  001fc	8b 91 74 10 00
	00		 mov	 edx, DWORD PTR [ecx+4212]
  00202	52		 push	 edx
  00203	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00206	8b 88 70 10 00
	00		 mov	 ecx, DWORD PTR [eax+4208]
  0020c	51		 push	 ecx
  0020d	8b 55 f0	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00210	8b 82 6c 10 00
	00		 mov	 eax, DWORD PTR [edx+4204]
  00216	50		 push	 eax
  00217	8b 4d f0	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0021a	8b 91 68 10 00
	00		 mov	 edx, DWORD PTR [ecx+4200]
  00220	52		 push	 edx
  00221	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00224	8b 88 64 10 00
	00		 mov	 ecx, DWORD PTR [eax+4196]
  0022a	51		 push	 ecx
  0022b	8b 55 f0	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0022e	8b 82 60 10 00
	00		 mov	 eax, DWORD PTR [edx+4192]
  00234	50		 push	 eax
  00235	8b 4d f0	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00238	8b 11		 mov	 edx, DWORD PTR [ecx]
  0023a	52		 push	 edx
  0023b	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0023e	83 c0 77	 add	 eax, 119		; 00000077H
  00241	50		 push	 eax
  00242	8b 4d f0	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00245	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00248	51		 push	 ecx
  00249	68 00 00 00 00	 push	 OFFSET ??_C@_0FC@NKLIHJLF@?$FLQuest?$FN?5Set?5MonsterKillInfo?5?$FL?$CFs?$FN@
  0024e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00254	83 c4 3c	 add	 esp, 60			; 0000003cH
$LN3@Quest3rdLo:

; 83   : 	}
; 84   : }

  00257	5f		 pop	 edi
  00258	5e		 pop	 esi
  00259	5b		 pop	 ebx
  0025a	8b e5		 mov	 esp, ebp
  0025c	5d		 pop	 ebp
  0025d	c2 04 00	 ret	 4
?Quest3rdLoadInfo@CQuestUtil@@QAEXPAE@Z ENDP		; CQuestUtil::Quest3rdLoadInfo
_TEXT	ENDS
PUBLIC	??_C@_0EP@JGJNAFCF@?$FLQuest?$FN?5Save?5MonsterKillInfo?5?$FL?$CFs@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?Quest3rdSaveInfo@CQuestUtil@@QAEXPAUOBJECTSTRUCT@@@Z ; CQuestUtil::Quest3rdSaveInfo
EXTRN	?PHeadSetB@@YAXPAEEH@Z:PROC			; PHeadSetB
;	COMDAT ??_C@_0EP@JGJNAFCF@?$FLQuest?$FN?5Save?5MonsterKillInfo?5?$FL?$CFs@
CONST	SEGMENT
??_C@_0EP@JGJNAFCF@?$FLQuest?$FN?5Save?5MonsterKillInfo?5?$FL?$CFs@ DB '['
	DB	'Quest] Save MonsterKillInfo [%s][%s] (%d : %d/%d, %d/%d, %d/%'
	DB	'd, %d/%d, %d/%d)', 00H			; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_pMsg$ = -72						; size = 64
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
?Quest3rdSaveInfo@CQuestUtil@@QAEXPAUOBJECTSTRUCT@@@Z PROC ; CQuestUtil::Quest3rdSaveInfo
; _this$ = ecx

; 88   : {

  00260	55		 push	 ebp
  00261	8b ec		 mov	 ebp, esp
  00263	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00269	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0026e	33 c5		 xor	 eax, ebp
  00270	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00273	53		 push	 ebx
  00274	56		 push	 esi
  00275	57		 push	 edi
  00276	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 89   : 	PMSG_SAVE_MONSTERKILLINFO pMsg;
; 90   : 
; 91   : 	if(lpObj->m_i3rdQuestState == 0)

  00279	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0027c	83 b8 5c 10 00
	00 00		 cmp	 DWORD PTR [eax+4188], 0
  00283	75 05		 jne	 SHORT $LN1@Quest3rdSa

; 92   : 	{
; 93   : 		return;

  00285	e9 09 01 00 00	 jmp	 $LN2@Quest3rdSa
$LN1@Quest3rdSa:

; 94   : 	}
; 95   : 
; 96   : 	PHeadSetB( (LPBYTE)&pMsg, 0x14, sizeof(pMsg)); //check packet with load

  0028a	6a 40		 push	 64			; 00000040H
  0028c	6a 14		 push	 20			; 00000014H
  0028e	8d 45 b8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00291	50		 push	 eax
  00292	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  00297	83 c4 0c	 add	 esp, 12			; 0000000cH

; 97   : 	
; 98   : 	memcpy(pMsg.szName, lpObj->Name, 10);

  0029a	6a 0a		 push	 10			; 0000000aH
  0029c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0029f	83 c0 77	 add	 eax, 119		; 00000077H
  002a2	50		 push	 eax
  002a3	8d 4d c0	 lea	 ecx, DWORD PTR _pMsg$[ebp+8]
  002a6	51		 push	 ecx
  002a7	e8 00 00 00 00	 call	 _memcpy
  002ac	83 c4 0c	 add	 esp, 12			; 0000000cH

; 99   : 	pMsg.Index = lpObj->m_Index;

  002af	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  002b2	8b 08		 mov	 ecx, DWORD PTR [eax]
  002b4	89 4d bc	 mov	 DWORD PTR _pMsg$[ebp+4], ecx

; 100  : 	pMsg.QuestIndex = lpObj->m_i3rdQuestIndex;

  002b7	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  002ba	8b 88 60 10 00
	00		 mov	 ecx, DWORD PTR [eax+4192]
  002c0	89 4d cc	 mov	 DWORD PTR _pMsg$[ebp+20], ecx

; 101  : 
; 102  : 	pMsg.KillInfo[0].MonIndex = lpObj->MonsterKillInfo[0].MonIndex;

  002c3	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  002c6	8b 88 64 10 00
	00		 mov	 ecx, DWORD PTR [eax+4196]
  002cc	89 4d d0	 mov	 DWORD PTR _pMsg$[ebp+24], ecx

; 103  : 	pMsg.KillInfo[0].KillCount = lpObj->MonsterKillInfo[0].KillCount;

  002cf	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  002d2	8b 88 68 10 00
	00		 mov	 ecx, DWORD PTR [eax+4200]
  002d8	89 4d d4	 mov	 DWORD PTR _pMsg$[ebp+28], ecx

; 104  : 
; 105  : 	pMsg.KillInfo[1].MonIndex = lpObj->MonsterKillInfo[1].MonIndex;

  002db	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  002de	8b 88 6c 10 00
	00		 mov	 ecx, DWORD PTR [eax+4204]
  002e4	89 4d d8	 mov	 DWORD PTR _pMsg$[ebp+32], ecx

; 106  : 	pMsg.KillInfo[1].KillCount = lpObj->MonsterKillInfo[1].KillCount;

  002e7	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  002ea	8b 88 70 10 00
	00		 mov	 ecx, DWORD PTR [eax+4208]
  002f0	89 4d dc	 mov	 DWORD PTR _pMsg$[ebp+36], ecx

; 107  : 
; 108  : 	pMsg.KillInfo[2].MonIndex = lpObj->MonsterKillInfo[2].MonIndex;

  002f3	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  002f6	8b 88 74 10 00
	00		 mov	 ecx, DWORD PTR [eax+4212]
  002fc	89 4d e0	 mov	 DWORD PTR _pMsg$[ebp+40], ecx

; 109  : 	pMsg.KillInfo[2].KillCount = lpObj->MonsterKillInfo[2].KillCount;

  002ff	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00302	8b 88 78 10 00
	00		 mov	 ecx, DWORD PTR [eax+4216]
  00308	89 4d e4	 mov	 DWORD PTR _pMsg$[ebp+44], ecx

; 110  : 
; 111  : 	pMsg.KillInfo[3].MonIndex = lpObj->MonsterKillInfo[3].MonIndex;

  0030b	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0030e	8b 88 7c 10 00
	00		 mov	 ecx, DWORD PTR [eax+4220]
  00314	89 4d e8	 mov	 DWORD PTR _pMsg$[ebp+48], ecx

; 112  : 	pMsg.KillInfo[3].KillCount = lpObj->MonsterKillInfo[3].KillCount;

  00317	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0031a	8b 88 80 10 00
	00		 mov	 ecx, DWORD PTR [eax+4224]
  00320	89 4d ec	 mov	 DWORD PTR _pMsg$[ebp+52], ecx

; 113  : 
; 114  : 	pMsg.KillInfo[4].MonIndex = lpObj->MonsterKillInfo[4].MonIndex;

  00323	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00326	8b 88 84 10 00
	00		 mov	 ecx, DWORD PTR [eax+4228]
  0032c	89 4d f0	 mov	 DWORD PTR _pMsg$[ebp+56], ecx

; 115  : 	pMsg.KillInfo[4].KillCount = lpObj->MonsterKillInfo[4].KillCount;

  0032f	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00332	8b 88 88 10 00
	00		 mov	 ecx, DWORD PTR [eax+4232]
  00338	89 4d f4	 mov	 DWORD PTR _pMsg$[ebp+60], ecx

; 116  : 	
; 117  : 	LogAddTD("[Quest] Save MonsterKillInfo [%s][%s] (%d : %d/%d, %d/%d, %d/%d, %d/%d, %d/%d)", lpObj->AccountID, lpObj->Name, pMsg.QuestIndex,
; 118  : 		pMsg.KillInfo[0].MonIndex, pMsg.KillInfo[0].KillCount, 
; 119  : 		pMsg.KillInfo[1].MonIndex, pMsg.KillInfo[1].KillCount,
; 120  : 		pMsg.KillInfo[2].MonIndex, pMsg.KillInfo[2].KillCount,
; 121  : 		pMsg.KillInfo[3].MonIndex, pMsg.KillInfo[3].KillCount,
; 122  : 		pMsg.KillInfo[4].MonIndex, pMsg.KillInfo[4].KillCount);

  0033b	8b 45 f4	 mov	 eax, DWORD PTR _pMsg$[ebp+60]
  0033e	50		 push	 eax
  0033f	8b 4d f0	 mov	 ecx, DWORD PTR _pMsg$[ebp+56]
  00342	51		 push	 ecx
  00343	8b 55 ec	 mov	 edx, DWORD PTR _pMsg$[ebp+52]
  00346	52		 push	 edx
  00347	8b 45 e8	 mov	 eax, DWORD PTR _pMsg$[ebp+48]
  0034a	50		 push	 eax
  0034b	8b 4d e4	 mov	 ecx, DWORD PTR _pMsg$[ebp+44]
  0034e	51		 push	 ecx
  0034f	8b 55 e0	 mov	 edx, DWORD PTR _pMsg$[ebp+40]
  00352	52		 push	 edx
  00353	8b 45 dc	 mov	 eax, DWORD PTR _pMsg$[ebp+36]
  00356	50		 push	 eax
  00357	8b 4d d8	 mov	 ecx, DWORD PTR _pMsg$[ebp+32]
  0035a	51		 push	 ecx
  0035b	8b 55 d4	 mov	 edx, DWORD PTR _pMsg$[ebp+28]
  0035e	52		 push	 edx
  0035f	8b 45 d0	 mov	 eax, DWORD PTR _pMsg$[ebp+24]
  00362	50		 push	 eax
  00363	8b 4d cc	 mov	 ecx, DWORD PTR _pMsg$[ebp+20]
  00366	51		 push	 ecx
  00367	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0036a	83 c2 77	 add	 edx, 119		; 00000077H
  0036d	52		 push	 edx
  0036e	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00371	83 c0 6c	 add	 eax, 108		; 0000006cH
  00374	50		 push	 eax
  00375	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@JGJNAFCF@?$FLQuest?$FN?5Save?5MonsterKillInfo?5?$FL?$CFs@
  0037a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00380	83 c4 38	 add	 esp, 56			; 00000038H

; 123  : 
; 124  : 	cDBSMng.Send((char*)&pMsg, sizeof(pMsg));

  00383	6a 40		 push	 64			; 00000040H
  00385	8d 45 b8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00388	50		 push	 eax
  00389	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  0038e	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
$LN2@Quest3rdSa:

; 125  : }

  00393	5f		 pop	 edi
  00394	5e		 pop	 esi
  00395	5b		 pop	 ebx
  00396	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00399	33 cd		 xor	 ecx, ebp
  0039b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003a0	8b e5		 mov	 esp, ebp
  003a2	5d		 pop	 ebp
  003a3	c2 04 00	 ret	 4
?Quest3rdSaveInfo@CQuestUtil@@QAEXPAUOBJECTSTRUCT@@@Z ENDP ; CQuestUtil::Quest3rdSaveInfo
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ??__Eg_QuestUtil@@YAXXZ
text$yc	SEGMENT
??__Eg_QuestUtil@@YAXXZ PROC				; `dynamic initializer for 'g_QuestUtil'', COMDAT

; 13   : CQuestUtil g_QuestUtil;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_QuestUtil@@3VCQuestUtil@@A ; g_QuestUtil
  0000e	e8 00 00 00 00	 call	 ??0CQuestUtil@@QAE@XZ	; CQuestUtil::CQuestUtil
  00013	68 00 00 00 00	 push	 OFFSET ??__Fg_QuestUtil@@YAXXZ ; `dynamic atexit destructor for 'g_QuestUtil''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__Eg_QuestUtil@@YAXXZ ENDP				; `dynamic initializer for 'g_QuestUtil''
; Function compile flags: /Odtp /ZI
text$yc	ENDS
;	COMDAT ??__Fg_QuestUtil@@YAXXZ
text$yd	SEGMENT
??__Fg_QuestUtil@@YAXXZ PROC				; `dynamic atexit destructor for 'g_QuestUtil'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_QuestUtil@@3VCQuestUtil@@A ; g_QuestUtil
  0000e	e8 00 00 00 00	 call	 ??1CQuestUtil@@UAE@XZ	; CQuestUtil::~CQuestUtil
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__Fg_QuestUtil@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_QuestUtil''
text$yd	ENDS
PUBLIC	?g_QuestUtil@@3VCQuestUtil@@A			; g_QuestUtil
_BSS	SEGMENT
?g_QuestUtil@@3VCQuestUtil@@A DD 01H DUP (?)		; g_QuestUtil
_BSS	ENDS
CRT$XCU	SEGMENT
_g_QuestUtil$initializer$ DD FLAT:??__Eg_QuestUtil@@YAXXZ
CRT$XCU	ENDS
END
