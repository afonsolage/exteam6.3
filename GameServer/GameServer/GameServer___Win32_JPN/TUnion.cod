; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\TUnion.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??1?$map@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@@std@@QAE@XZ ; std::map<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> > >::~map<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> > >
PUBLIC	??0?$map@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@@std@@QAE@XZ ; std::map<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> > >::map<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> > >
PUBLIC	??_7TUnion@@6B@					; TUnion::`vftable'
PUBLIC	??0TUnion@@QAE@XZ				; TUnion::TUnion
PUBLIC	??_R4TUnion@@6B@				; TUnion::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTUnion@@@8				; TUnion `RTTI Type Descriptor'
PUBLIC	??_R3TUnion@@8					; TUnion::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TUnion@@8					; TUnion::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TUnion@@8				; TUnion::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??0TSync@@QAE@XZ:PROC				; TSync::TSync
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ETUnion@@UAEPAXI@Z:PROC			; TUnion::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@TUnion@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\tunion.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@TUnion@@8 DD FLAT:??_R0?AVTUnion@@@8	; TUnion::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TUnion@@8
rdata$r	ENDS
;	COMDAT ??_R2TUnion@@8
rdata$r	SEGMENT
??_R2TUnion@@8 DD FLAT:??_R1A@?0A@EA@TUnion@@8		; TUnion::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3TUnion@@8
rdata$r	SEGMENT
??_R3TUnion@@8 DD 00H					; TUnion::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2TUnion@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTUnion@@@8
_DATA	SEGMENT
??_R0?AVTUnion@@@8 DD FLAT:??_7type_info@@6B@		; TUnion `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTUnion@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TUnion@@6B@
rdata$r	SEGMENT
??_R4TUnion@@6B@ DD 00H					; TUnion::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTUnion@@@8
	DD	FLAT:??_R3TUnion@@8
rdata$r	ENDS
;	COMDAT ??_7TUnion@@6B@
CONST	SEGMENT
??_7TUnion@@6B@ DD FLAT:??_R4TUnion@@6B@		; TUnion::`vftable'
	DD	FLAT:??_ETUnion@@UAEPAXI@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??0TUnion@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TUnion@@QAE@XZ$0
__ehfuncinfo$??0TUnion@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0TUnion@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0TUnion@@QAE@XZ PROC					; TUnion::TUnion
; _this$ = ecx

; 10   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0TUnion@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7TUnion@@6B@
  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 c1 04	 add	 ecx, 4
  0003a	e8 00 00 00 00	 call	 ??0?$map@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@@std@@QAE@XZ ; std::map<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> > >::map<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> > >
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	83 c1 14	 add	 ecx, 20			; 00000014H
  0004c	e8 00 00 00 00	 call	 ??0TSync@@QAE@XZ	; TSync::TSync

; 11   : 	return;
; 12   : }

  00051	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00065	59		 pop	 ecx
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0TUnion@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$map@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@@std@@QAE@XZ
__ehhandler$??0TUnion@@QAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0TUnion@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0TUnion@@QAE@XZ ENDP					; TUnion::TUnion
PUBLIC	??1TUnion@@UAE@XZ				; TUnion::~TUnion
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GTUnion@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GTUnion@@UAEPAXI@Z PROC				; TUnion::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1TUnion@@UAE@XZ	; TUnion::~TUnion
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GTUnion@@UAEPAXI@Z ENDP				; TUnion::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::~_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$map@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$map@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@@std@@QAE@XZ PROC ; std::map<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> > >::~map<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::~_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >
  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??1?$map@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> > >::~map<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> > >
_TEXT	ENDS
EXTRN	??1TSync@@QAE@XZ:PROC				; TSync::~TSync
xdata$x	SEGMENT
__unwindtable$??1TUnion@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1TUnion@@UAE@XZ$0
__ehfuncinfo$??1TUnion@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1TUnion@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1TUnion@@UAE@XZ PROC					; TUnion::~TUnion
; _this$ = ecx

; 15   : {

  00070	55		 push	 ebp
  00071	8b ec		 mov	 ebp, esp
  00073	6a ff		 push	 -1
  00075	68 00 00 00 00	 push	 __ehhandler$??1TUnion@@UAE@XZ
  0007a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00080	50		 push	 eax
  00081	83 ec 44	 sub	 esp, 68			; 00000044H
  00084	53		 push	 ebx
  00085	56		 push	 esi
  00086	57		 push	 edi
  00087	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0008c	33 c5		 xor	 eax, ebp
  0008e	50		 push	 eax
  0008f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00092	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00098	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0009b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7TUnion@@6B@
  000a4	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 16   : 	return;
; 17   : }

  000ab	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	83 c1 14	 add	 ecx, 20			; 00000014H
  000b1	e8 00 00 00 00	 call	 ??1TSync@@QAE@XZ	; TSync::~TSync
  000b6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000bd	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	83 c1 04	 add	 ecx, 4
  000c3	e8 00 00 00 00	 call	 ??1?$map@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@@std@@QAE@XZ
  000c8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000cb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d2	59		 pop	 ecx
  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
  000d5	5b		 pop	 ebx
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1TUnion@@UAE@XZ$0:
  00026	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	83 c1 04	 add	 ecx, 4
  0002c	e9 00 00 00 00	 jmp	 ??1?$map@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@@std@@QAE@XZ
__ehhandler$??1TUnion@@UAE@XZ:
  00031	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00035	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00038	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0003b	33 c8		 xor	 ecx, eax
  0003d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00042	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1TUnion@@UAE@XZ
  00047	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1TUnion@@UAE@XZ ENDP					; TUnion::~TUnion
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::clear
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAVTUnionInfo@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator->
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator!=
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::end
PUBLIC	??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator++
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::begin
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >
PUBLIC	?DelAllUnion@TUnion@@QAEHXZ			; TUnion::DelAllUnion
EXTRN	?Unlock@TSync@@QAEXXZ:PROC			; TSync::Unlock
EXTRN	?Lock@TSync@@QAEXXZ:PROC			; TSync::Lock
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv143 = -92						; size = 4
$T207986 = -88						; size = 4
$T207987 = -84						; size = 4
$T207988 = -80						; size = 4
$T207989 = -76						; size = 4
__PosItor$ = -8						; size = 4
_this$ = -4						; size = 4
?DelAllUnion@TUnion@@QAEHXZ PROC			; TUnion::DelAllUnion
; _this$ = ecx

; 20   : {

  000e0	55		 push	 ebp
  000e1	8b ec		 mov	 ebp, esp
  000e3	83 ec 5c	 sub	 esp, 92			; 0000005cH
  000e6	53		 push	 ebx
  000e7	56		 push	 esi
  000e8	57		 push	 edi
  000e9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 21   : 	this->m_Sync.Lock();

  000ec	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ef	83 c1 14	 add	 ecx, 20			; 00000014H
  000f2	e8 00 00 00 00	 call	 ?Lock@TSync@@QAEXXZ	; TSync::Lock

; 22   : 	std::map<int, TUnionInfo*>::iterator _PosItor;

  000f7	8d 4d f8	 lea	 ecx, DWORD PTR __PosItor$[ebp]
  000fa	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >

; 23   : 		
; 24   : 	
; 25   : 	for ( _PosItor = this->m_mpUnion.begin() ; _PosItor != this->m_mpUnion.end() ; ++_PosItor )

  000ff	8d 45 a8	 lea	 eax, DWORD PTR $T207986[ebp]
  00102	50		 push	 eax
  00103	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00106	83 c1 04	 add	 ecx, 4
  00109	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::begin
  0010e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00110	89 4d f8	 mov	 DWORD PTR __PosItor$[ebp], ecx
  00113	eb 08		 jmp	 SHORT $LN3@DelAllUnio
$LN2@DelAllUnio:
  00115	8d 4d f8	 lea	 ecx, DWORD PTR __PosItor$[ebp]
  00118	e8 00 00 00 00	 call	 ??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator++
$LN3@DelAllUnio:
  0011d	8d 45 ac	 lea	 eax, DWORD PTR $T207987[ebp]
  00120	50		 push	 eax
  00121	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00124	83 c1 04	 add	 ecx, 4
  00127	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::end
  0012c	50		 push	 eax
  0012d	8d 4d f8	 lea	 ecx, DWORD PTR __PosItor$[ebp]
  00130	e8 00 00 00 00	 call	 ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator!=
  00135	0f b6 c8	 movzx	 ecx, al
  00138	85 c9		 test	 ecx, ecx
  0013a	74 36		 je	 SHORT $LN1@DelAllUnio

; 26   : 	{
; 27   : 		delete _PosItor->second;

  0013c	8d 4d f8	 lea	 ecx, DWORD PTR __PosItor$[ebp]
  0013f	e8 00 00 00 00	 call	 ??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAVTUnionInfo@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator->
  00144	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00147	89 45 b4	 mov	 DWORD PTR $T207989[ebp], eax
  0014a	8b 4d b4	 mov	 ecx, DWORD PTR $T207989[ebp]
  0014d	89 4d b0	 mov	 DWORD PTR $T207988[ebp], ecx
  00150	83 7d b0 00	 cmp	 DWORD PTR $T207988[ebp], 0
  00154	74 13		 je	 SHORT $LN6@DelAllUnio
  00156	6a 01		 push	 1
  00158	8b 55 b0	 mov	 edx, DWORD PTR $T207988[ebp]
  0015b	8b 02		 mov	 eax, DWORD PTR [edx]
  0015d	8b 4d b0	 mov	 ecx, DWORD PTR $T207988[ebp]
  00160	8b 10		 mov	 edx, DWORD PTR [eax]
  00162	ff d2		 call	 edx
  00164	89 45 a4	 mov	 DWORD PTR tv143[ebp], eax
  00167	eb 07		 jmp	 SHORT $LN7@DelAllUnio
$LN6@DelAllUnio:
  00169	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN7@DelAllUnio:

; 28   : 	}

  00170	eb a3		 jmp	 SHORT $LN2@DelAllUnio
$LN1@DelAllUnio:

; 29   : 
; 30   : 	this->m_mpUnion.clear();

  00172	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00175	83 c1 04	 add	 ecx, 4
  00178	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::clear

; 31   : 	this->m_Sync.Unlock();

  0017d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00180	83 c1 14	 add	 ecx, 20			; 00000014H
  00183	e8 00 00 00 00	 call	 ?Unlock@TSync@@QAEXXZ	; TSync::Unlock

; 32   : 	return -1;

  00188	83 c8 ff	 or	 eax, -1

; 33   : }

  0018b	5f		 pop	 edi
  0018c	5e		 pop	 esi
  0018d	5b		 pop	 ebx
  0018e	8b e5		 mov	 esp, ebp
  00190	5d		 pop	 ebp
  00191	c3		 ret	 0
?DelAllUnion@TUnion@@QAEHXZ ENDP			; TUnion::DelAllUnion
_TEXT	ENDS
PUBLIC	?SearchUnion@TUnion@@QAEPAVTUnionInfo@@H@Z	; TUnion::SearchUnion
PUBLIC	?GetGuildRelationShip@TUnion@@QAEHHH@Z		; TUnion::GetGuildRelationShip
EXTRN	?IsRivalMember@TUnionInfo@@QAEHH@Z:PROC		; TUnionInfo::IsRivalMember
EXTRN	?IsUnionMember@TUnionInfo@@QAEHH@Z:PROC		; TUnionInfo::IsUnionMember
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pUnionInfo$ = -8					; size = 4
_this$ = -4						; size = 4
_iGuildNumber$ = 8					; size = 4
_iTargetGuildNumber$ = 12				; size = 4
?GetGuildRelationShip@TUnion@@QAEHHH@Z PROC		; TUnion::GetGuildRelationShip
; _this$ = ecx

; 37   : {

  001a0	55		 push	 ebp
  001a1	8b ec		 mov	 ebp, esp
  001a3	83 ec 48	 sub	 esp, 72			; 00000048H
  001a6	53		 push	 ebx
  001a7	56		 push	 esi
  001a8	57		 push	 edi
  001a9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 38   : 	TUnionInfo * pUnionInfo = this->SearchUnion(iGuildNumber);

  001ac	8b 45 08	 mov	 eax, DWORD PTR _iGuildNumber$[ebp]
  001af	50		 push	 eax
  001b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b3	e8 00 00 00 00	 call	 ?SearchUnion@TUnion@@QAEPAVTUnionInfo@@H@Z ; TUnion::SearchUnion
  001b8	89 45 f8	 mov	 DWORD PTR _pUnionInfo$[ebp], eax

; 39   : 
; 40   : 	if ( pUnionInfo == NULL )

  001bb	83 7d f8 00	 cmp	 DWORD PTR _pUnionInfo$[ebp], 0
  001bf	75 04		 jne	 SHORT $LN3@GetGuildRe

; 41   : 	{
; 42   : 		return 0;

  001c1	33 c0		 xor	 eax, eax
  001c3	eb 30		 jmp	 SHORT $LN4@GetGuildRe
$LN3@GetGuildRe:

; 43   : 	}
; 44   : 
; 45   : 	if ( pUnionInfo->IsUnionMember(iTargetGuildNumber) != FALSE )

  001c5	8b 45 0c	 mov	 eax, DWORD PTR _iTargetGuildNumber$[ebp]
  001c8	50		 push	 eax
  001c9	8b 4d f8	 mov	 ecx, DWORD PTR _pUnionInfo$[ebp]
  001cc	e8 00 00 00 00	 call	 ?IsUnionMember@TUnionInfo@@QAEHH@Z ; TUnionInfo::IsUnionMember
  001d1	85 c0		 test	 eax, eax
  001d3	74 07		 je	 SHORT $LN2@GetGuildRe

; 46   : 	{
; 47   : 		return 1;

  001d5	b8 01 00 00 00	 mov	 eax, 1
  001da	eb 19		 jmp	 SHORT $LN4@GetGuildRe
$LN2@GetGuildRe:

; 48   : 	}
; 49   : 
; 50   : 	if ( pUnionInfo->IsRivalMember(iTargetGuildNumber) != FALSE )

  001dc	8b 45 0c	 mov	 eax, DWORD PTR _iTargetGuildNumber$[ebp]
  001df	50		 push	 eax
  001e0	8b 4d f8	 mov	 ecx, DWORD PTR _pUnionInfo$[ebp]
  001e3	e8 00 00 00 00	 call	 ?IsRivalMember@TUnionInfo@@QAEHH@Z ; TUnionInfo::IsRivalMember
  001e8	85 c0		 test	 eax, eax
  001ea	74 07		 je	 SHORT $LN1@GetGuildRe

; 51   : 	{
; 52   : 		return 2;

  001ec	b8 02 00 00 00	 mov	 eax, 2
  001f1	eb 02		 jmp	 SHORT $LN4@GetGuildRe
$LN1@GetGuildRe:

; 53   : 	}
; 54   : 	
; 55   : 	return 0;

  001f3	33 c0		 xor	 eax, eax
$LN4@GetGuildRe:

; 56   : }

  001f5	5f		 pop	 edi
  001f6	5e		 pop	 esi
  001f7	5b		 pop	 ebx
  001f8	8b e5		 mov	 esp, ebp
  001fa	5d		 pop	 ebp
  001fb	c2 08 00	 ret	 8
?GetGuildRelationShip@TUnion@@QAEHHH@Z ENDP		; TUnion::GetGuildRelationShip
_TEXT	ENDS
PUBLIC	?GetGuildRelationShipCount@TUnion@@QAEHHH@Z	; TUnion::GetGuildRelationShipCount
EXTRN	?GetRivalMemberCount@TUnionInfo@@QAEHXZ:PROC	; TUnionInfo::GetRivalMemberCount
EXTRN	?GetUnionMemberCount@TUnionInfo@@QAEHXZ:PROC	; TUnionInfo::GetUnionMemberCount
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pUnionInfo$ = -8					; size = 4
_this$ = -4						; size = 4
_iGuildNumber$ = 8					; size = 4
_iRelationShipType$ = 12				; size = 4
?GetGuildRelationShipCount@TUnion@@QAEHHH@Z PROC	; TUnion::GetGuildRelationShipCount
; _this$ = ecx

; 60   : {

  00200	55		 push	 ebp
  00201	8b ec		 mov	 ebp, esp
  00203	83 ec 48	 sub	 esp, 72			; 00000048H
  00206	53		 push	 ebx
  00207	56		 push	 esi
  00208	57		 push	 edi
  00209	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 61   : 	TUnionInfo * pUnionInfo = this->SearchUnion(iGuildNumber);

  0020c	8b 45 08	 mov	 eax, DWORD PTR _iGuildNumber$[ebp]
  0020f	50		 push	 eax
  00210	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00213	e8 00 00 00 00	 call	 ?SearchUnion@TUnion@@QAEPAVTUnionInfo@@H@Z ; TUnion::SearchUnion
  00218	89 45 f8	 mov	 DWORD PTR _pUnionInfo$[ebp], eax

; 62   : 
; 63   : 	if ( pUnionInfo == NULL )

  0021b	83 7d f8 00	 cmp	 DWORD PTR _pUnionInfo$[ebp], 0
  0021f	75 04		 jne	 SHORT $LN4@GetGuildRe@2

; 64   : 	{
; 65   : 		return 0;

  00221	33 c0		 xor	 eax, eax
  00223	eb 24		 jmp	 SHORT $LN5@GetGuildRe@2
$LN4@GetGuildRe@2:

; 66   : 	}
; 67   : 
; 68   : 	if ( iRelationShipType == 1 )

  00225	83 7d 0c 01	 cmp	 DWORD PTR _iRelationShipType$[ebp], 1
  00229	75 0c		 jne	 SHORT $LN3@GetGuildRe@2

; 69   : 	{
; 70   : 		return pUnionInfo->GetUnionMemberCount();

  0022b	8b 4d f8	 mov	 ecx, DWORD PTR _pUnionInfo$[ebp]
  0022e	e8 00 00 00 00	 call	 ?GetUnionMemberCount@TUnionInfo@@QAEHXZ ; TUnionInfo::GetUnionMemberCount
  00233	eb 14		 jmp	 SHORT $LN5@GetGuildRe@2
  00235	eb 10		 jmp	 SHORT $LN2@GetGuildRe@2
$LN3@GetGuildRe@2:

; 71   : 	}
; 72   : 	else if ( iRelationShipType == 2 )

  00237	83 7d 0c 02	 cmp	 DWORD PTR _iRelationShipType$[ebp], 2
  0023b	75 0a		 jne	 SHORT $LN2@GetGuildRe@2

; 73   : 	{
; 74   : 		return pUnionInfo->GetRivalMemberCount();

  0023d	8b 4d f8	 mov	 ecx, DWORD PTR _pUnionInfo$[ebp]
  00240	e8 00 00 00 00	 call	 ?GetRivalMemberCount@TUnionInfo@@QAEHXZ ; TUnionInfo::GetRivalMemberCount
  00245	eb 02		 jmp	 SHORT $LN5@GetGuildRe@2
$LN2@GetGuildRe@2:

; 75   : 	}
; 76   : 	return 0;

  00247	33 c0		 xor	 eax, eax
$LN5@GetGuildRe@2:

; 77   : }

  00249	5f		 pop	 edi
  0024a	5e		 pop	 esi
  0024b	5b		 pop	 ebx
  0024c	8b e5		 mov	 esp, ebp
  0024e	5d		 pop	 ebp
  0024f	c2 08 00	 ret	 8
?GetGuildRelationShipCount@TUnion@@QAEHHH@Z ENDP	; TUnion::GetGuildRelationShipCount
_TEXT	ENDS
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAVTUnionInfo@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator*
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::find
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
$T207995 = -76						; size = 4
__Itor$ = -8						; size = 4
_this$ = -4						; size = 4
_iMasterGuildNumber$ = 8				; size = 4
?SearchUnion@TUnion@@QAEPAVTUnionInfo@@H@Z PROC		; TUnion::SearchUnion
; _this$ = ecx

; 80   : {

  00260	55		 push	 ebp
  00261	8b ec		 mov	 ebp, esp
  00263	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00266	53		 push	 ebx
  00267	56		 push	 esi
  00268	57		 push	 edi
  00269	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 81   : 	this->m_Sync.Lock();

  0026c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0026f	83 c1 14	 add	 ecx, 20			; 00000014H
  00272	e8 00 00 00 00	 call	 ?Lock@TSync@@QAEXXZ	; TSync::Lock

; 82   : 
; 83   : 	std::map<int, TUnionInfo *>::iterator _Itor = this->m_mpUnion.find(iMasterGuildNumber);

  00277	8d 45 08	 lea	 eax, DWORD PTR _iMasterGuildNumber$[ebp]
  0027a	50		 push	 eax
  0027b	8d 4d f8	 lea	 ecx, DWORD PTR __Itor$[ebp]
  0027e	51		 push	 ecx
  0027f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00282	83 c1 04	 add	 ecx, 4
  00285	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::find

; 84   : 
; 85   : 	if ( _Itor != this->m_mpUnion.end() )

  0028a	8d 45 b4	 lea	 eax, DWORD PTR $T207995[ebp]
  0028d	50		 push	 eax
  0028e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00291	83 c1 04	 add	 ecx, 4
  00294	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::end
  00299	50		 push	 eax
  0029a	8d 4d f8	 lea	 ecx, DWORD PTR __Itor$[ebp]
  0029d	e8 00 00 00 00	 call	 ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator!=
  002a2	0f b6 c8	 movzx	 ecx, al
  002a5	85 c9		 test	 ecx, ecx
  002a7	74 18		 je	 SHORT $LN1@SearchUnio

; 86   : 	{
; 87   : 		this->m_Sync.Unlock();

  002a9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002ac	83 c1 14	 add	 ecx, 20			; 00000014H
  002af	e8 00 00 00 00	 call	 ?Unlock@TSync@@QAEXXZ	; TSync::Unlock

; 88   : 		return (*(_Itor)).second;

  002b4	8d 4d f8	 lea	 ecx, DWORD PTR __Itor$[ebp]
  002b7	e8 00 00 00 00	 call	 ??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAVTUnionInfo@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator*
  002bc	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  002bf	eb 0d		 jmp	 SHORT $LN2@SearchUnio
$LN1@SearchUnio:

; 89   : 	}
; 90   : 
; 91   : 	this->m_Sync.Unlock();

  002c1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002c4	83 c1 14	 add	 ecx, 20			; 00000014H
  002c7	e8 00 00 00 00	 call	 ?Unlock@TSync@@QAEXXZ	; TSync::Unlock

; 92   : 	return NULL;

  002cc	33 c0		 xor	 eax, eax
$LN2@SearchUnio:

; 93   : }

  002ce	5f		 pop	 edi
  002cf	5e		 pop	 esi
  002d0	5b		 pop	 ebx
  002d1	8b e5		 mov	 esp, ebp
  002d3	5d		 pop	 ebp
  002d4	c2 04 00	 ret	 4
?SearchUnion@TUnion@@QAEPAVTUnionInfo@@H@Z ENDP		; TUnion::SearchUnion
_TEXT	ENDS
PUBLIC	??A?$map@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@@std@@QAEAAPAVTUnionInfo@@ABH@Z ; std::map<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> > >::operator[]
PUBLIC	?AddUnion@TUnion@@QAEHHPAD@Z			; TUnion::AddUnion
EXTRN	?SetUnionMaster@TUnionInfo@@QAEHHPAD@Z:PROC	; TUnionInfo::SetUnionMaster
EXTRN	??0TUnionInfo@@QAE@XZ:PROC			; TUnionInfo::TUnionInfo
EXTRN	??2@YAPAXI@Z:PROC				; operator new
xdata$x	SEGMENT
__unwindtable$?AddUnion@TUnion@@QAEHHPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddUnion@TUnion@@QAEHHPAD@Z$0
__ehfuncinfo$?AddUnion@TUnion@@QAEHHPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddUnion@TUnion@@QAEHHPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
_TEXT	SEGMENT
tv77 = -96						; size = 4
$T207997 = -92						; size = 4
$T207998 = -88						; size = 4
_pUnionInfo$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_iMasterGuildNumber$ = 8				; size = 4
_szUnionMasterGuildName$ = 12				; size = 4
?AddUnion@TUnion@@QAEHHPAD@Z PROC			; TUnion::AddUnion
; _this$ = ecx

; 96   : {

  002e0	55		 push	 ebp
  002e1	8b ec		 mov	 ebp, esp
  002e3	6a ff		 push	 -1
  002e5	68 00 00 00 00	 push	 __ehhandler$?AddUnion@TUnion@@QAEHHPAD@Z
  002ea	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  002f0	50		 push	 eax
  002f1	83 ec 54	 sub	 esp, 84			; 00000054H
  002f4	53		 push	 ebx
  002f5	56		 push	 esi
  002f6	57		 push	 edi
  002f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  002fc	33 c5		 xor	 eax, ebp
  002fe	50		 push	 eax
  002ff	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00302	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00308	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 97   : 	TUnionInfo * pUnionInfo = this->SearchUnion(iMasterGuildNumber);

  0030b	8b 45 08	 mov	 eax, DWORD PTR _iMasterGuildNumber$[ebp]
  0030e	50		 push	 eax
  0030f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00312	e8 00 00 00 00	 call	 ?SearchUnion@TUnion@@QAEPAVTUnionInfo@@H@Z ; TUnion::SearchUnion
  00317	89 45 ec	 mov	 DWORD PTR _pUnionInfo$[ebp], eax

; 98   : 
; 99   : 	if ( pUnionInfo == NULL )

  0031a	83 7d ec 00	 cmp	 DWORD PTR _pUnionInfo$[ebp], 0
  0031e	0f 85 82 00 00
	00		 jne	 $LN1@AddUnion

; 100  : 	{
; 101  : 		this->m_Sync.Lock();

  00324	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00327	83 c1 14	 add	 ecx, 20			; 00000014H
  0032a	e8 00 00 00 00	 call	 ?Lock@TSync@@QAEXXZ	; TSync::Lock

; 102  : 		pUnionInfo = new TUnionInfo;

  0032f	6a 58		 push	 88			; 00000058H
  00331	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00336	83 c4 04	 add	 esp, 4
  00339	89 45 a8	 mov	 DWORD PTR $T207998[ebp], eax
  0033c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00343	83 7d a8 00	 cmp	 DWORD PTR $T207998[ebp], 0
  00347	74 0d		 je	 SHORT $LN4@AddUnion
  00349	8b 4d a8	 mov	 ecx, DWORD PTR $T207998[ebp]
  0034c	e8 00 00 00 00	 call	 ??0TUnionInfo@@QAE@XZ	; TUnionInfo::TUnionInfo
  00351	89 45 a0	 mov	 DWORD PTR tv77[ebp], eax
  00354	eb 07		 jmp	 SHORT $LN5@AddUnion
$LN4@AddUnion:
  00356	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN5@AddUnion:
  0035d	8b 45 a0	 mov	 eax, DWORD PTR tv77[ebp]
  00360	89 45 a4	 mov	 DWORD PTR $T207997[ebp], eax
  00363	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0036a	8b 4d a4	 mov	 ecx, DWORD PTR $T207997[ebp]
  0036d	89 4d ec	 mov	 DWORD PTR _pUnionInfo$[ebp], ecx

; 103  : 		pUnionInfo->SetUnionMaster(iMasterGuildNumber, szUnionMasterGuildName);

  00370	8b 45 0c	 mov	 eax, DWORD PTR _szUnionMasterGuildName$[ebp]
  00373	50		 push	 eax
  00374	8b 4d 08	 mov	 ecx, DWORD PTR _iMasterGuildNumber$[ebp]
  00377	51		 push	 ecx
  00378	8b 4d ec	 mov	 ecx, DWORD PTR _pUnionInfo$[ebp]
  0037b	e8 00 00 00 00	 call	 ?SetUnionMaster@TUnionInfo@@QAEHHPAD@Z ; TUnionInfo::SetUnionMaster

; 104  : 		this->m_mpUnion[iMasterGuildNumber] = pUnionInfo;

  00380	8d 45 08	 lea	 eax, DWORD PTR _iMasterGuildNumber$[ebp]
  00383	50		 push	 eax
  00384	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00387	83 c1 04	 add	 ecx, 4
  0038a	e8 00 00 00 00	 call	 ??A?$map@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@@std@@QAEAAPAVTUnionInfo@@ABH@Z ; std::map<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> > >::operator[]
  0038f	8b 4d ec	 mov	 ecx, DWORD PTR _pUnionInfo$[ebp]
  00392	89 08		 mov	 DWORD PTR [eax], ecx

; 105  : 		this->m_Sync.Unlock();

  00394	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00397	83 c1 14	 add	 ecx, 20			; 00000014H
  0039a	e8 00 00 00 00	 call	 ?Unlock@TSync@@QAEXXZ	; TSync::Unlock

; 106  : 		return TRUE;

  0039f	b8 01 00 00 00	 mov	 eax, 1
  003a4	eb 28		 jmp	 SHORT $LN2@AddUnion
$LN1@AddUnion:

; 107  : 	}
; 108  : 
; 109  : 	this->m_Sync.Lock();

  003a6	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  003a9	83 c1 14	 add	 ecx, 20			; 00000014H
  003ac	e8 00 00 00 00	 call	 ?Lock@TSync@@QAEXXZ	; TSync::Lock

; 110  : 	pUnionInfo->SetUnionMaster(iMasterGuildNumber, szUnionMasterGuildName);

  003b1	8b 45 0c	 mov	 eax, DWORD PTR _szUnionMasterGuildName$[ebp]
  003b4	50		 push	 eax
  003b5	8b 4d 08	 mov	 ecx, DWORD PTR _iMasterGuildNumber$[ebp]
  003b8	51		 push	 ecx
  003b9	8b 4d ec	 mov	 ecx, DWORD PTR _pUnionInfo$[ebp]
  003bc	e8 00 00 00 00	 call	 ?SetUnionMaster@TUnionInfo@@QAEHHPAD@Z ; TUnionInfo::SetUnionMaster

; 111  : 	this->m_Sync.Unlock();

  003c1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  003c4	83 c1 14	 add	 ecx, 20			; 00000014H
  003c7	e8 00 00 00 00	 call	 ?Unlock@TSync@@QAEXXZ	; TSync::Unlock

; 112  : 	return FALSE;

  003cc	33 c0		 xor	 eax, eax
$LN2@AddUnion:

; 113  : }

  003ce	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  003d1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  003d8	59		 pop	 ecx
  003d9	5f		 pop	 edi
  003da	5e		 pop	 esi
  003db	5b		 pop	 ebx
  003dc	8b e5		 mov	 esp, ebp
  003de	5d		 pop	 ebp
  003df	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddUnion@TUnion@@QAEHHPAD@Z$0:
  0004c	8b 45 a8	 mov	 eax, DWORD PTR $T207998[ebp]
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00055	59		 pop	 ecx
  00056	c3		 ret	 0
__ehhandler$?AddUnion@TUnion@@QAEHHPAD@Z:
  00057	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0005b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0005e	8b 4a 9c	 mov	 ecx, DWORD PTR [edx-100]
  00061	33 c8		 xor	 ecx, eax
  00063	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00068	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddUnion@TUnion@@QAEHHPAD@Z
  0006d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddUnion@TUnion@@QAEHHPAD@Z ENDP			; TUnion::AddUnion
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEIABH@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::erase
PUBLIC	?DelUnion@TUnion@@QAEHH@Z			; TUnion::DelUnion
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv83 = -84						; size = 4
$T208007 = -80						; size = 4
$T208008 = -76						; size = 4
_pUnionInfo$ = -8					; size = 4
_this$ = -4						; size = 4
_iMasterGuildNumber$ = 8				; size = 4
?DelUnion@TUnion@@QAEHH@Z PROC				; TUnion::DelUnion
; _this$ = ecx

; 117  : {

  003f0	55		 push	 ebp
  003f1	8b ec		 mov	 ebp, esp
  003f3	83 ec 54	 sub	 esp, 84			; 00000054H
  003f6	53		 push	 ebx
  003f7	56		 push	 esi
  003f8	57		 push	 edi
  003f9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 118  : 
; 119  : 	TUnionInfo * pUnionInfo = this->SearchUnion(iMasterGuildNumber);

  003fc	8b 45 08	 mov	 eax, DWORD PTR _iMasterGuildNumber$[ebp]
  003ff	50		 push	 eax
  00400	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00403	e8 00 00 00 00	 call	 ?SearchUnion@TUnion@@QAEPAVTUnionInfo@@H@Z ; TUnion::SearchUnion
  00408	89 45 f8	 mov	 DWORD PTR _pUnionInfo$[ebp], eax

; 120  : 
; 121  : 	if ( pUnionInfo != NULL )

  0040b	83 7d f8 00	 cmp	 DWORD PTR _pUnionInfo$[ebp], 0
  0040f	74 58		 je	 SHORT $LN1@DelUnion

; 122  : 	{
; 123  : 		this->m_Sync.Lock();

  00411	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00414	83 c1 14	 add	 ecx, 20			; 00000014H
  00417	e8 00 00 00 00	 call	 ?Lock@TSync@@QAEXXZ	; TSync::Lock

; 124  : 		this->m_mpUnion.erase(iMasterGuildNumber);

  0041c	8d 45 08	 lea	 eax, DWORD PTR _iMasterGuildNumber$[ebp]
  0041f	50		 push	 eax
  00420	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00423	83 c1 04	 add	 ecx, 4
  00426	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEIABH@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::erase

; 125  : 		delete pUnionInfo;

  0042b	8b 45 f8	 mov	 eax, DWORD PTR _pUnionInfo$[ebp]
  0042e	89 45 b4	 mov	 DWORD PTR $T208008[ebp], eax
  00431	8b 4d b4	 mov	 ecx, DWORD PTR $T208008[ebp]
  00434	89 4d b0	 mov	 DWORD PTR $T208007[ebp], ecx
  00437	83 7d b0 00	 cmp	 DWORD PTR $T208007[ebp], 0
  0043b	74 13		 je	 SHORT $LN4@DelUnion
  0043d	6a 01		 push	 1
  0043f	8b 55 b0	 mov	 edx, DWORD PTR $T208007[ebp]
  00442	8b 02		 mov	 eax, DWORD PTR [edx]
  00444	8b 4d b0	 mov	 ecx, DWORD PTR $T208007[ebp]
  00447	8b 10		 mov	 edx, DWORD PTR [eax]
  00449	ff d2		 call	 edx
  0044b	89 45 ac	 mov	 DWORD PTR tv83[ebp], eax
  0044e	eb 07		 jmp	 SHORT $LN5@DelUnion
$LN4@DelUnion:
  00450	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN5@DelUnion:

; 126  : 		this->m_Sync.Unlock();

  00457	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0045a	83 c1 14	 add	 ecx, 20			; 00000014H
  0045d	e8 00 00 00 00	 call	 ?Unlock@TSync@@QAEXXZ	; TSync::Unlock

; 127  : 		return TRUE;

  00462	b8 01 00 00 00	 mov	 eax, 1
  00467	eb 03		 jmp	 SHORT $LN2@DelUnion
$LN1@DelUnion:

; 128  : 	}
; 129  : 
; 130  : 	return -1;

  00469	83 c8 ff	 or	 eax, -1
$LN2@DelUnion:

; 131  : }

  0046c	5f		 pop	 edi
  0046d	5e		 pop	 esi
  0046e	5b		 pop	 ebx
  0046f	8b e5		 mov	 esp, ebp
  00471	5d		 pop	 ebp
  00472	c2 04 00	 ret	 4
?DelUnion@TUnion@@QAEHH@Z ENDP				; TUnion::DelUnion
_TEXT	ENDS
PUBLIC	?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEXABH@Z ; std::vector<int,std::allocator<int> >::push_back
PUBLIC	?SetGuildUnionMemberList@TUnion@@QAEHHHPBH@Z	; TUnion::SetGuildUnionMemberList
EXTRN	?Clear@TUnionInfo@@QAEXH@Z:PROC			; TUnionInfo::Clear
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$205864 = -12						; size = 4
_pUnionInfo$ = -8					; size = 4
_this$ = -4						; size = 4
_iMasterGuildNumber$ = 8				; size = 4
_iCount$ = 12						; size = 4
_iList$ = 16						; size = 4
?SetGuildUnionMemberList@TUnion@@QAEHHHPBH@Z PROC	; TUnion::SetGuildUnionMemberList
; _this$ = ecx

; 135  : {

  00480	55		 push	 ebp
  00481	8b ec		 mov	 ebp, esp
  00483	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00486	53		 push	 ebx
  00487	56		 push	 esi
  00488	57		 push	 edi
  00489	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 136  : 	TUnionInfo * pUnionInfo = this->SearchUnion(iMasterGuildNumber);

  0048c	8b 45 08	 mov	 eax, DWORD PTR _iMasterGuildNumber$[ebp]
  0048f	50		 push	 eax
  00490	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00493	e8 00 00 00 00	 call	 ?SearchUnion@TUnion@@QAEPAVTUnionInfo@@H@Z ; TUnion::SearchUnion
  00498	89 45 f8	 mov	 DWORD PTR _pUnionInfo$[ebp], eax

; 137  : 
; 138  : 	if ( pUnionInfo != NULL )

  0049b	83 7d f8 00	 cmp	 DWORD PTR _pUnionInfo$[ebp], 0
  0049f	74 58		 je	 SHORT $LN4@SetGuildUn

; 139  : 	{
; 140  : 		pUnionInfo->Clear(1);

  004a1	6a 01		 push	 1
  004a3	8b 4d f8	 mov	 ecx, DWORD PTR _pUnionInfo$[ebp]
  004a6	e8 00 00 00 00	 call	 ?Clear@TUnionInfo@@QAEXH@Z ; TUnionInfo::Clear

; 141  : 		this->m_Sync.Lock();

  004ab	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004ae	83 c1 14	 add	 ecx, 20			; 00000014H
  004b1	e8 00 00 00 00	 call	 ?Lock@TSync@@QAEXXZ	; TSync::Lock

; 142  : 
; 143  : 		for ( int i=0;i<iCount;i++)

  004b6	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$205864[ebp], 0
  004bd	eb 09		 jmp	 SHORT $LN3@SetGuildUn
$LN2@SetGuildUn:
  004bf	8b 45 f4	 mov	 eax, DWORD PTR _i$205864[ebp]
  004c2	83 c0 01	 add	 eax, 1
  004c5	89 45 f4	 mov	 DWORD PTR _i$205864[ebp], eax
$LN3@SetGuildUn:
  004c8	8b 45 f4	 mov	 eax, DWORD PTR _i$205864[ebp]
  004cb	3b 45 0c	 cmp	 eax, DWORD PTR _iCount$[ebp]
  004ce	7d 17		 jge	 SHORT $LN1@SetGuildUn

; 144  : 		{
; 145  : 			pUnionInfo->m_vtUnionMember.push_back(iList[i]);

  004d0	8b 45 f4	 mov	 eax, DWORD PTR _i$205864[ebp]
  004d3	8b 4d 10	 mov	 ecx, DWORD PTR _iList$[ebp]
  004d6	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  004d9	52		 push	 edx
  004da	8b 4d f8	 mov	 ecx, DWORD PTR _pUnionInfo$[ebp]
  004dd	83 c1 1c	 add	 ecx, 28			; 0000001cH
  004e0	e8 00 00 00 00	 call	 ?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEXABH@Z ; std::vector<int,std::allocator<int> >::push_back

; 146  : 		}

  004e5	eb d8		 jmp	 SHORT $LN2@SetGuildUn
$LN1@SetGuildUn:

; 147  : 
; 148  : 		this->m_Sync.Unlock();

  004e7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004ea	83 c1 14	 add	 ecx, 20			; 00000014H
  004ed	e8 00 00 00 00	 call	 ?Unlock@TSync@@QAEXXZ	; TSync::Unlock

; 149  : 		return TRUE;

  004f2	b8 01 00 00 00	 mov	 eax, 1
  004f7	eb 03		 jmp	 SHORT $LN5@SetGuildUn
$LN4@SetGuildUn:

; 150  : 	}
; 151  : 
; 152  : 	return -1;

  004f9	83 c8 ff	 or	 eax, -1
$LN5@SetGuildUn:

; 153  : }

  004fc	5f		 pop	 edi
  004fd	5e		 pop	 esi
  004fe	5b		 pop	 ebx
  004ff	8b e5		 mov	 esp, ebp
  00501	5d		 pop	 ebp
  00502	c2 0c 00	 ret	 12			; 0000000cH
?SetGuildUnionMemberList@TUnion@@QAEHHHPBH@Z ENDP	; TUnion::SetGuildUnionMemberList
_TEXT	ENDS
PUBLIC	?SetGuildRivalMemberList@TUnion@@QAEHHHPBH@Z	; TUnion::SetGuildRivalMemberList
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$205876 = -12						; size = 4
_pUnionInfo$ = -8					; size = 4
_this$ = -4						; size = 4
_iMasterGuildNumber$ = 8				; size = 4
_iCount$ = 12						; size = 4
_iList$ = 16						; size = 4
?SetGuildRivalMemberList@TUnion@@QAEHHHPBH@Z PROC	; TUnion::SetGuildRivalMemberList
; _this$ = ecx

; 157  : {

  00510	55		 push	 ebp
  00511	8b ec		 mov	 ebp, esp
  00513	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00516	53		 push	 ebx
  00517	56		 push	 esi
  00518	57		 push	 edi
  00519	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 158  : 	TUnionInfo * pUnionInfo = this->SearchUnion(iMasterGuildNumber);

  0051c	8b 45 08	 mov	 eax, DWORD PTR _iMasterGuildNumber$[ebp]
  0051f	50		 push	 eax
  00520	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00523	e8 00 00 00 00	 call	 ?SearchUnion@TUnion@@QAEPAVTUnionInfo@@H@Z ; TUnion::SearchUnion
  00528	89 45 f8	 mov	 DWORD PTR _pUnionInfo$[ebp], eax

; 159  : 
; 160  : 	if ( pUnionInfo != NULL )

  0052b	83 7d f8 00	 cmp	 DWORD PTR _pUnionInfo$[ebp], 0
  0052f	74 58		 je	 SHORT $LN4@SetGuildRi

; 161  : 	{
; 162  : 		pUnionInfo->Clear(2);

  00531	6a 02		 push	 2
  00533	8b 4d f8	 mov	 ecx, DWORD PTR _pUnionInfo$[ebp]
  00536	e8 00 00 00 00	 call	 ?Clear@TUnionInfo@@QAEXH@Z ; TUnionInfo::Clear

; 163  : 		this->m_Sync.Lock();

  0053b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0053e	83 c1 14	 add	 ecx, 20			; 00000014H
  00541	e8 00 00 00 00	 call	 ?Lock@TSync@@QAEXXZ	; TSync::Lock

; 164  : 
; 165  : 		for ( int i=0;i<iCount;i++)

  00546	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$205876[ebp], 0
  0054d	eb 09		 jmp	 SHORT $LN3@SetGuildRi
$LN2@SetGuildRi:
  0054f	8b 45 f4	 mov	 eax, DWORD PTR _i$205876[ebp]
  00552	83 c0 01	 add	 eax, 1
  00555	89 45 f4	 mov	 DWORD PTR _i$205876[ebp], eax
$LN3@SetGuildRi:
  00558	8b 45 f4	 mov	 eax, DWORD PTR _i$205876[ebp]
  0055b	3b 45 0c	 cmp	 eax, DWORD PTR _iCount$[ebp]
  0055e	7d 17		 jge	 SHORT $LN1@SetGuildRi

; 166  : 		{
; 167  : 			pUnionInfo->m_vtRivalMember.push_back(iList[i]);

  00560	8b 45 f4	 mov	 eax, DWORD PTR _i$205876[ebp]
  00563	8b 4d 10	 mov	 ecx, DWORD PTR _iList$[ebp]
  00566	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00569	52		 push	 edx
  0056a	8b 4d f8	 mov	 ecx, DWORD PTR _pUnionInfo$[ebp]
  0056d	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00570	e8 00 00 00 00	 call	 ?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEXABH@Z ; std::vector<int,std::allocator<int> >::push_back

; 168  : 		}

  00575	eb d8		 jmp	 SHORT $LN2@SetGuildRi
$LN1@SetGuildRi:

; 169  : 
; 170  : 		this->m_Sync.Unlock();

  00577	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0057a	83 c1 14	 add	 ecx, 20			; 00000014H
  0057d	e8 00 00 00 00	 call	 ?Unlock@TSync@@QAEXXZ	; TSync::Unlock

; 171  : 		return TRUE;

  00582	b8 01 00 00 00	 mov	 eax, 1
  00587	eb 03		 jmp	 SHORT $LN5@SetGuildRi
$LN4@SetGuildRi:

; 172  : 	}
; 173  : 
; 174  : 	return -1;

  00589	83 c8 ff	 or	 eax, -1
$LN5@SetGuildRi:

; 175  : }

  0058c	5f		 pop	 edi
  0058d	5e		 pop	 esi
  0058e	5b		 pop	 ebx
  0058f	8b e5		 mov	 esp, ebp
  00591	5d		 pop	 ebp
  00592	c2 0c 00	 ret	 12			; 0000000cH
?SetGuildRivalMemberList@TUnion@@QAEHHHPBH@Z ENDP	; TUnion::SetGuildRivalMemberList
_TEXT	ENDS
PUBLIC	?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::end
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEAAHXZ ; std::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >::operator*
PUBLIC	?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::begin
PUBLIC	?GetGuildUnionMemberList@TUnion@@QAEHHAAHPAH@Z	; TUnion::GetGuildUnionMemberList
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
$T208014 = -88						; size = 4
$T208015 = -84						; size = 4
_iE$206016 = -16					; size = 4
_iB$205888 = -12					; size = 4
_pUnionInfo$ = -8					; size = 4
_this$ = -4						; size = 4
_iMasterGuildNumber$ = 8				; size = 4
_iCount$ = 12						; size = 4
_iList$ = 16						; size = 4
?GetGuildUnionMemberList@TUnion@@QAEHHAAHPAH@Z PROC	; TUnion::GetGuildUnionMemberList
; _this$ = ecx

; 178  : {

  005a0	55		 push	 ebp
  005a1	8b ec		 mov	 ebp, esp
  005a3	83 ec 58	 sub	 esp, 88			; 00000058H
  005a6	53		 push	 ebx
  005a7	56		 push	 esi
  005a8	57		 push	 edi
  005a9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 179  : 
; 180  : 	TUnionInfo * pUnionInfo = this->SearchUnion(iMasterGuildNumber);

  005ac	8b 45 08	 mov	 eax, DWORD PTR _iMasterGuildNumber$[ebp]
  005af	50		 push	 eax
  005b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005b3	e8 00 00 00 00	 call	 ?SearchUnion@TUnion@@QAEPAVTUnionInfo@@H@Z ; TUnion::SearchUnion
  005b8	89 45 f8	 mov	 DWORD PTR _pUnionInfo$[ebp], eax

; 181  : 
; 182  : 	if ( pUnionInfo != NULL )

  005bb	83 7d f8 00	 cmp	 DWORD PTR _pUnionInfo$[ebp], 0
  005bf	0f 84 91 00 00
	00		 je	 $LN5@GetGuildUn

; 183  : 	{
; 184  : 		this->m_Sync.Lock();

  005c5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005c8	83 c1 14	 add	 ecx, 20			; 00000014H
  005cb	e8 00 00 00 00	 call	 ?Lock@TSync@@QAEXXZ	; TSync::Lock

; 185  : 		//int * iB = pUnionInfo->m_vtUnionMember.begin();
; 186  : 		//int * iE = pUnionInfo->m_vtUnionMember.end();
; 187  : 
; 188  : 		int *iB = &(*pUnionInfo->m_vtUnionMember.begin());

  005d0	8d 45 a8	 lea	 eax, DWORD PTR $T208014[ebp]
  005d3	50		 push	 eax
  005d4	8b 4d f8	 mov	 ecx, DWORD PTR _pUnionInfo$[ebp]
  005d7	83 c1 1c	 add	 ecx, 28			; 0000001cH
  005da	e8 00 00 00 00	 call	 ?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::begin
  005df	8b c8		 mov	 ecx, eax
  005e1	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEAAHXZ ; std::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >::operator*
  005e6	89 45 f4	 mov	 DWORD PTR _iB$205888[ebp], eax

; 189  : 		int *iE = &(*pUnionInfo->m_vtUnionMember.end());

  005e9	8d 45 ac	 lea	 eax, DWORD PTR $T208015[ebp]
  005ec	50		 push	 eax
  005ed	8b 4d f8	 mov	 ecx, DWORD PTR _pUnionInfo$[ebp]
  005f0	83 c1 1c	 add	 ecx, 28			; 0000001cH
  005f3	e8 00 00 00 00	 call	 ?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::end
  005f8	8b c8		 mov	 ecx, eax
  005fa	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEAAHXZ ; std::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >::operator*
  005ff	89 45 f0	 mov	 DWORD PTR _iE$206016[ebp], eax
  00602	eb 09		 jmp	 SHORT $LN4@GetGuildUn
$LN3@GetGuildUn:

; 190  : 
; 191  : 		for ( ; iB != iE ; iB++ )

  00604	8b 45 f4	 mov	 eax, DWORD PTR _iB$205888[ebp]
  00607	83 c0 04	 add	 eax, 4
  0060a	89 45 f4	 mov	 DWORD PTR _iB$205888[ebp], eax
$LN4@GetGuildUn:
  0060d	8b 45 f4	 mov	 eax, DWORD PTR _iB$205888[ebp]
  00610	3b 45 f0	 cmp	 eax, DWORD PTR _iE$206016[ebp]
  00613	74 1f		 je	 SHORT $LN2@GetGuildUn

; 192  : 		{
; 193  : 			iList[iCount] = *iB;

  00615	8b 45 0c	 mov	 eax, DWORD PTR _iCount$[ebp]
  00618	8b 08		 mov	 ecx, DWORD PTR [eax]
  0061a	8b 55 10	 mov	 edx, DWORD PTR _iList$[ebp]
  0061d	8b 45 f4	 mov	 eax, DWORD PTR _iB$205888[ebp]
  00620	8b 00		 mov	 eax, DWORD PTR [eax]
  00622	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 194  : 			iCount++;

  00625	8b 45 0c	 mov	 eax, DWORD PTR _iCount$[ebp]
  00628	8b 08		 mov	 ecx, DWORD PTR [eax]
  0062a	83 c1 01	 add	 ecx, 1
  0062d	8b 55 0c	 mov	 edx, DWORD PTR _iCount$[ebp]
  00630	89 0a		 mov	 DWORD PTR [edx], ecx

; 195  : 		}

  00632	eb d0		 jmp	 SHORT $LN3@GetGuildUn
$LN2@GetGuildUn:

; 196  : 
; 197  : 		this->m_Sync.Unlock();

  00634	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00637	83 c1 14	 add	 ecx, 20			; 00000014H
  0063a	e8 00 00 00 00	 call	 ?Unlock@TSync@@QAEXXZ	; TSync::Unlock

; 198  : 
; 199  : 		if ( iCount > 0 &&  iCount < 100 )

  0063f	8b 45 0c	 mov	 eax, DWORD PTR _iCount$[ebp]
  00642	83 38 00	 cmp	 DWORD PTR [eax], 0
  00645	7e 0f		 jle	 SHORT $LN5@GetGuildUn
  00647	8b 45 0c	 mov	 eax, DWORD PTR _iCount$[ebp]
  0064a	83 38 64	 cmp	 DWORD PTR [eax], 100	; 00000064H
  0064d	7d 07		 jge	 SHORT $LN5@GetGuildUn

; 200  : 		{
; 201  : 			return TRUE;

  0064f	b8 01 00 00 00	 mov	 eax, 1
  00654	eb 03		 jmp	 SHORT $LN6@GetGuildUn
$LN5@GetGuildUn:

; 202  : 		}
; 203  : 	}
; 204  : 
; 205  : 	return -1;

  00656	83 c8 ff	 or	 eax, -1
$LN6@GetGuildUn:

; 206  : }

  00659	5f		 pop	 edi
  0065a	5e		 pop	 esi
  0065b	5b		 pop	 ebx
  0065c	8b e5		 mov	 esp, ebp
  0065e	5d		 pop	 ebp
  0065f	c2 0c 00	 ret	 12			; 0000000cH
?GetGuildUnionMemberList@TUnion@@QAEHHAAHPAH@Z ENDP	; TUnion::GetGuildUnionMemberList
_TEXT	ENDS
PUBLIC	?GetUnionName@TUnion@@QAEHHPAD@Z		; TUnion::GetUnionName
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pUnionInfo$ = -8					; size = 4
_this$ = -4						; size = 4
_iMasterGuildNumber$ = 8				; size = 4
_szMasterGuildName$ = 12				; size = 4
?GetUnionName@TUnion@@QAEHHPAD@Z PROC			; TUnion::GetUnionName
; _this$ = ecx

; 210  : {

  00670	55		 push	 ebp
  00671	8b ec		 mov	 ebp, esp
  00673	83 ec 48	 sub	 esp, 72			; 00000048H
  00676	53		 push	 ebx
  00677	56		 push	 esi
  00678	57		 push	 edi
  00679	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 211  : 	TUnionInfo * pUnionInfo = this->SearchUnion(iMasterGuildNumber);

  0067c	8b 45 08	 mov	 eax, DWORD PTR _iMasterGuildNumber$[ebp]
  0067f	50		 push	 eax
  00680	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00683	e8 00 00 00 00	 call	 ?SearchUnion@TUnion@@QAEPAVTUnionInfo@@H@Z ; TUnion::SearchUnion
  00688	89 45 f8	 mov	 DWORD PTR _pUnionInfo$[ebp], eax

; 212  : 
; 213  : 	if ( pUnionInfo != NULL )

  0068b	83 7d f8 00	 cmp	 DWORD PTR _pUnionInfo$[ebp], 0
  0068f	74 32		 je	 SHORT $LN1@GetUnionNa

; 214  : 	{
; 215  : 		this->m_Sync.Lock();

  00691	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00694	83 c1 14	 add	 ecx, 20			; 00000014H
  00697	e8 00 00 00 00	 call	 ?Lock@TSync@@QAEXXZ	; TSync::Lock

; 216  : 		memcpy(szMasterGuildName, pUnionInfo->m_szMasterGuild, sizeof(pUnionInfo->m_szMasterGuild)-1);

  0069c	6a 08		 push	 8
  0069e	8b 45 f8	 mov	 eax, DWORD PTR _pUnionInfo$[ebp]
  006a1	83 c0 10	 add	 eax, 16			; 00000010H
  006a4	50		 push	 eax
  006a5	8b 4d 0c	 mov	 ecx, DWORD PTR _szMasterGuildName$[ebp]
  006a8	51		 push	 ecx
  006a9	e8 00 00 00 00	 call	 _memcpy
  006ae	83 c4 0c	 add	 esp, 12			; 0000000cH

; 217  : 		this->m_Sync.Unlock();

  006b1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006b4	83 c1 14	 add	 ecx, 20			; 00000014H
  006b7	e8 00 00 00 00	 call	 ?Unlock@TSync@@QAEXXZ	; TSync::Unlock

; 218  : 		return TRUE;

  006bc	b8 01 00 00 00	 mov	 eax, 1
  006c1	eb 03		 jmp	 SHORT $LN2@GetUnionNa
$LN1@GetUnionNa:

; 219  : 	}
; 220  : 
; 221  : 	return -1;

  006c3	83 c8 ff	 or	 eax, -1
$LN2@GetUnionNa:

; 222  : }

  006c6	5f		 pop	 edi
  006c7	5e		 pop	 esi
  006c8	5b		 pop	 ebx
  006c9	8b e5		 mov	 esp, ebp
  006cb	5d		 pop	 ebp
  006cc	c2 08 00	 ret	 8
?GetUnionName@TUnion@@QAEHHPAD@Z ENDP			; TUnion::GetUnionName
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ PROC ; std::vector<int,std::allocator<int> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 782  : 		return (iterator(this->_Myfirst, this));

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	8b 11		 mov	 edx, DWORD PTR [ecx]
  00015	52		 push	 edx
  00016	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00019	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >
  0001e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 783  : 		}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ ENDP ; std::vector<int,std::allocator<int> >::begin
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ PROC ; std::vector<int,std::allocator<int> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 792  : 		return (iterator(this->_Mylast, this));

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00016	52		 push	 edx
  00017	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001a	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >
  0001f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 793  : 		}

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ ENDP ; std::vector<int,std::allocator<int> >::end
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@H@std@@HABH@std@@YAXAAV?$allocator@H@0@PAHABH@Z ; std::_Cons_val<std::allocator<int>,int,int const &>
PUBLIC	??$_Cons_val@V?$allocator@H@std@@HAAH@std@@YAXAAV?$allocator@H@0@PAHAAH@Z ; std::_Cons_val<std::allocator<int>,int,int &>
PUBLIC	?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range
PUBLIC	?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z ; std::vector<int,std::allocator<int> >::_Reserve
PUBLIC	?_Inside@?$vector@HV?$allocator@H@std@@@std@@IBE_NPBH@Z ; std::vector<int,std::allocator<int> >::_Inside
PUBLIC	??$addressof@$$CBH@std@@YAPBHABH@Z		; std::addressof<int const >
; Function compile flags: /Odtp /ZI
;	COMDAT ?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEXABH@Z
_TEXT	SEGMENT
__Idx$206044 = -8					; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEXABH@Z PROC ; std::vector<int,std::allocator<int> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$addressof@$$CBH@std@@YAPBHABH@Z ; std::addressof<int const >
  00015	83 c4 04	 add	 esp, 4
  00018	50		 push	 eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Inside@?$vector@HV?$allocator@H@std@@@std@@IBE_NPBH@Z ; std::vector<int,std::allocator<int> >::_Inside
  00021	0f b6 c8	 movzx	 ecx, al
  00024	85 c9		 test	 ecx, ecx
  00026	74 78		 je	 SHORT $LN4@push_back

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00028	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$addressof@$$CBH@std@@YAPBHABH@Z ; std::addressof<int const >
  00031	83 c4 04	 add	 esp, 4
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	2b 01		 sub	 eax, DWORD PTR [ecx]
  00039	c1 f8 02	 sar	 eax, 2
  0003c	89 45 f8	 mov	 DWORD PTR __Idx$206044[ebp], eax

; 980  : 			if (this->_Mylast == this->_Myend)

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00048	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0004b	75 0a		 jne	 SHORT $LN3@push_back

; 981  : 				_Reserve(1);

  0004d	6a 01		 push	 1
  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z ; std::vector<int,std::allocator<int> >::_Reserve
$LN3@push_back:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);

  00057	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0005d	51		 push	 ecx
  0005e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00061	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00064	50		 push	 eax
  00065	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range

; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  0006d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00070	8b 08		 mov	 ecx, DWORD PTR [eax]
  00072	8b 55 f8	 mov	 edx, DWORD PTR __Idx$206044[ebp]
  00075	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00078	50		 push	 eax
  00079	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0007f	52		 push	 edx
  00080	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00083	83 c0 0c	 add	 eax, 12			; 0000000cH
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@H@std@@HAAH@std@@YAXAAV?$allocator@H@0@PAHAAH@Z ; std::_Cons_val<std::allocator<int>,int,int &>
  0008c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 986  : 			++this->_Mylast;

  0008f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00095	83 c1 04	 add	 ecx, 4
  00098	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0009b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 987  : 			}
; 988  : 		else

  0009e	eb 57		 jmp	 SHORT $LN5@push_back
$LN4@push_back:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  000a0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000a9	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  000ac	75 0a		 jne	 SHORT $LN1@push_back

; 991  : 				_Reserve(1);

  000ae	6a 01		 push	 1
  000b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	e8 00 00 00 00	 call	 ?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z ; std::vector<int,std::allocator<int> >::_Reserve
$LN1@push_back:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);

  000b8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bb	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000be	51		 push	 ecx
  000bf	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c5	50		 push	 eax
  000c6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c9	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range

; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  000ce	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  000d1	50		 push	 eax
  000d2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d5	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d8	52		 push	 edx
  000d9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000dc	83 c0 0c	 add	 eax, 12			; 0000000cH
  000df	50		 push	 eax
  000e0	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@H@std@@HABH@std@@YAXAAV?$allocator@H@0@PAHABH@Z ; std::_Cons_val<std::allocator<int>,int,int const &>
  000e5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 996  : 			++this->_Mylast;

  000e8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000eb	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ee	83 c1 04	 add	 ecx, 4
  000f1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000f4	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$LN5@push_back:

; 997  : 			}
; 998  : 		}

  000f7	5f		 pop	 edi
  000f8	5e		 pop	 esi
  000f9	5b		 pop	 ebx
  000fa	8b e5		 mov	 esp, ebp
  000fc	5d		 pop	 ebp
  000fd	c2 04 00	 ret	 4
?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEXABH@Z ENDP ; std::vector<int,std::allocator<int> >::push_back
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >
PUBLIC	??0?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<int const ,TUnionInfo *> >::allocator<std::pair<int const ,TUnionInfo *> >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$map@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T208024 = -70						; size = 1
$T208025 = -69						; size = 1
_this$ = -4						; size = 4
??0?$map@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@@std@@QAE@XZ PROC ; std::map<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> > >::map<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> > >, COMDAT
; _this$ = ecx

; 106  : 		{	// construct empty map from defaults

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8d 4d ba	 lea	 ecx, DWORD PTR $T208024[ebp]
  0000f	e8 00 00 00 00	 call	 ??0?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<int const ,TUnionInfo *> >::allocator<std::pair<int const ,TUnionInfo *> >
  00014	50		 push	 eax
  00015	8d 45 bb	 lea	 eax, DWORD PTR $T208025[ebp]
  00018	50		 push	 eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >

; 107  : 		}

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??0?$map@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> > >::map<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> > >
_TEXT	ENDS
PUBLIC	??$insert@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::insert<std::pair<int const ,TUnionInfo *> >
PUBLIC	??0?$pair@$$CBHPAVTUnionInfo@@@std@@QAE@ABH$$QAPAVTUnionInfo@@@Z ; std::pair<int const ,TUnionInfo *>::pair<int const ,TUnionInfo *>
PUBLIC	??R?$less@H@std@@QBE_NABH0@Z			; std::less<int>::operator()
PUBLIC	?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator==
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::lower_bound
; Function compile flags: /Odtp /ZI
;	COMDAT ??A?$map@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@@std@@QAEAAPAVTUnionInfo@@ABH@Z
_TEXT	SEGMENT
$T208029 = -96						; size = 4
$T208030 = -92						; size = 8
$T208031 = -84						; size = 4
$T208032 = -80						; size = 4
$T208033 = -76						; size = 4
__Where$ = -8						; size = 4
_this$ = -4						; size = 4
__Keyval$ = 8						; size = 4
??A?$map@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@@std@@QAEAAPAVTUnionInfo@@ABH@Z PROC ; std::map<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> > >::operator[], COMDAT
; _this$ = ecx

; 210  : 		{	// find element matching _Keyval or insert with default mapped

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 211  : 		iterator _Where = this->lower_bound(_Keyval);

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Keyval$[ebp]
  0000f	50		 push	 eax
  00010	8d 4d f8	 lea	 ecx, DWORD PTR __Where$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?lower_bound@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::lower_bound

; 212  : 		if (_Where == this->end()
; 213  : 			|| this->comp(_Keyval, this->_Key(_Where._Mynode())))

  0001c	8d 45 a0	 lea	 eax, DWORD PTR $T208029[ebp]
  0001f	50		 push	 eax
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::end
  00028	50		 push	 eax
  00029	8d 4d f8	 lea	 ecx, DWORD PTR __Where$[ebp]
  0002c	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator==
  00031	0f b6 c8	 movzx	 ecx, al
  00034	85 c9		 test	 ecx, ecx
  00036	75 25		 jne	 SHORT $LN1@operator
  00038	8d 4d f8	 lea	 ecx, DWORD PTR __Where$[ebp]
  0003b	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key
  00046	83 c4 04	 add	 esp, 4
  00049	50		 push	 eax
  0004a	8b 45 08	 mov	 eax, DWORD PTR __Keyval$[ebp]
  0004d	50		 push	 eax
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  00056	0f b6 c8	 movzx	 ecx, al
  00059	85 c9		 test	 ecx, ecx
  0005b	74 33		 je	 SHORT $LN2@operator
$LN1@operator:

; 214  : 			_Where = this->insert(_Where,
; 215  : 				value_type(_Keyval, mapped_type()));

  0005d	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR $T208031[ebp], 0
  00064	8b 45 f8	 mov	 eax, DWORD PTR __Where$[ebp]
  00067	89 45 b0	 mov	 DWORD PTR $T208032[ebp], eax
  0006a	8d 4d ac	 lea	 ecx, DWORD PTR $T208031[ebp]
  0006d	51		 push	 ecx
  0006e	8b 55 08	 mov	 edx, DWORD PTR __Keyval$[ebp]
  00071	52		 push	 edx
  00072	8d 4d a4	 lea	 ecx, DWORD PTR $T208030[ebp]
  00075	e8 00 00 00 00	 call	 ??0?$pair@$$CBHPAVTUnionInfo@@@std@@QAE@ABH$$QAPAVTUnionInfo@@@Z ; std::pair<int const ,TUnionInfo *>::pair<int const ,TUnionInfo *>
  0007a	50		 push	 eax
  0007b	8b 45 b0	 mov	 eax, DWORD PTR $T208032[ebp]
  0007e	50		 push	 eax
  0007f	8d 4d b4	 lea	 ecx, DWORD PTR $T208033[ebp]
  00082	51		 push	 ecx
  00083	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	e8 00 00 00 00	 call	 ??$insert@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::insert<std::pair<int const ,TUnionInfo *> >
  0008b	8b 10		 mov	 edx, DWORD PTR [eax]
  0008d	89 55 f8	 mov	 DWORD PTR __Where$[ebp], edx
$LN2@operator:

; 216  : 		return ((*_Where).second);

  00090	8d 4d f8	 lea	 ecx, DWORD PTR __Where$[ebp]
  00093	e8 00 00 00 00	 call	 ??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAVTUnionInfo@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator*
  00098	83 c0 04	 add	 eax, 4

; 217  : 		}

  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	5b		 pop	 ebx
  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c2 04 00	 ret	 4
??A?$map@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@@std@@QAEAAPAVTUnionInfo@@ABH@Z ENDP ; std::map<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> > >::operator[]
_TEXT	ENDS
PUBLIC	??1?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::~_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Tidy
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$??1?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::~_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >, COMDAT
; _this$ = ecx

; 790  : 		{	// destroy tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 791  : 		_Tidy();

  00032	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ?_Tidy@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Tidy

; 792  : 		}

  0003a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00041	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ??1?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::~_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >
  00049	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00053	59		 pop	 ecx
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::~_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >
__ehhandler$??1?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::~_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Lmost
; Function compile flags: /Odtp /ZI
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::begin, COMDAT
; _this$ = ecx

; 806  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 807  : 		return (iterator(_Lmost(), this));

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Lmost
  00018	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001a	51		 push	 ecx
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 808  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::begin
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::end, COMDAT
; _this$ = ecx

; 816  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 817  : 		return (iterator(this->_Myhead, this));

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00016	52		 push	 edx
  00017	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001a	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >
  0001f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 818  : 		}

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::end
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::erase
PUBLIC	??$_Distance@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,unsigned int>
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@V12@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::equal_range
; Function compile flags: /Odtp /ZI
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEIABH@Z
_TEXT	SEGMENT
$T208049 = -92						; size = 4
$T208050 = -88						; size = 4
$T208051 = -84						; size = 4
__Num$ = -16						; size = 4
__Where$ = -12						; size = 8
_this$ = -4						; size = 4
__Keyval$ = 8						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEIABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1394 : 		{	// erase and count all that match _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1395 : 		_Pairii _Where = equal_range(_Keyval);

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Keyval$[ebp]
  0000f	50		 push	 eax
  00010	8d 4d f4	 lea	 ecx, DWORD PTR __Where$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?equal_range@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@V12@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::equal_range

; 1396 : 		size_type _Num = 0;

  0001c	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __Num$[ebp], 0

; 1397 : 		_Distance(_Where.first, _Where.second, _Num);

  00023	8d 45 f0	 lea	 eax, DWORD PTR __Num$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR __Where$[ebp+4]
  0002a	51		 push	 ecx
  0002b	8b 55 f4	 mov	 edx, DWORD PTR __Where$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ??$_Distance@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,unsigned int>
  00034	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1398 : 		erase(_Where.first, _Where.second);

  00037	8b 45 f8	 mov	 eax, DWORD PTR __Where$[ebp+4]
  0003a	89 45 a4	 mov	 DWORD PTR $T208049[ebp], eax
  0003d	8b 4d f4	 mov	 ecx, DWORD PTR __Where$[ebp]
  00040	89 4d a8	 mov	 DWORD PTR $T208050[ebp], ecx
  00043	8b 55 a4	 mov	 edx, DWORD PTR $T208049[ebp]
  00046	52		 push	 edx
  00047	8b 45 a8	 mov	 eax, DWORD PTR $T208050[ebp]
  0004a	50		 push	 eax
  0004b	8d 4d ac	 lea	 ecx, DWORD PTR $T208051[ebp]
  0004e	51		 push	 ecx
  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::erase

; 1399 : 		return (_Num);

  00057	8b 45 f0	 mov	 eax, DWORD PTR __Num$[ebp]

; 1400 : 		}

  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	5b		 pop	 ebx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c2 04 00	 ret	 4
?erase@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEIABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Rmost
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Erase
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Root
; Function compile flags: /Odtp /ZI
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::clear, COMDAT
; _this$ = ecx

; 1410 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1411 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1412 : 		this->_Orphan_ptr(*this, 0);
; 1413 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1414 : 
; 1415 : 		_Erase(_Root());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Root
  00014	8b 00		 mov	 eax, DWORD PTR [eax]
  00016	50		 push	 eax
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Erase

; 1416 : 		_Root() = this->_Myhead;

  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Root
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002d	89 10		 mov	 DWORD PTR [eax], edx

; 1417 : 		_Lmost() = this->_Myhead;

  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Lmost
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0003d	89 10		 mov	 DWORD PTR [eax], edx

; 1418 : 		_Rmost() = this->_Myhead;

  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Rmost
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0004d	89 10		 mov	 DWORD PTR [eax], edx

; 1419 : 		this->_Mysize = 0;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 1420 : 		}

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::clear
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z
_TEXT	SEGMENT
tv137 = -88						; size = 4
$T208056 = -84						; size = 4
$T208057 = -80						; size = 4
$T208059 = -76						; size = 4
__Where$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::find, COMDAT
; _this$ = ecx

; 1423 : 		{	// find an element in mutable sequence that matches _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1424 : 		iterator _Where = lower_bound(_Keyval);

  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Keyval$[ebp]
  0000f	50		 push	 eax
  00010	8d 4d f8	 lea	 ecx, DWORD PTR __Where$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?lower_bound@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::lower_bound

; 1425 : 		return (_Where == end()
; 1426 : 			|| _DEBUG_LT_PRED(this->comp,
; 1427 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1428 : 					? end() : _Where);

  0001c	8d 45 b0	 lea	 eax, DWORD PTR $T208057[ebp]
  0001f	50		 push	 eax
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::end
  00028	50		 push	 eax
  00029	8d 4d f8	 lea	 ecx, DWORD PTR __Where$[ebp]
  0002c	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator==
  00031	0f b6 c8	 movzx	 ecx, al
  00034	85 c9		 test	 ecx, ecx
  00036	75 2d		 jne	 SHORT $LN3@find
  00038	8d 4d f8	 lea	 ecx, DWORD PTR __Where$[ebp]
  0003b	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key
  00046	83 c4 04	 add	 esp, 4
  00049	50		 push	 eax
  0004a	8b 55 0c	 mov	 edx, DWORD PTR __Keyval$[ebp]
  0004d	52		 push	 edx
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  00056	0f b6 c0	 movzx	 eax, al
  00059	85 c0		 test	 eax, eax
  0005b	75 08		 jne	 SHORT $LN3@find
  0005d	8d 4d f8	 lea	 ecx, DWORD PTR __Where$[ebp]
  00060	89 4d a8	 mov	 DWORD PTR tv137[ebp], ecx
  00063	eb 0f		 jmp	 SHORT $LN4@find
$LN3@find:
  00065	8d 55 b4	 lea	 edx, DWORD PTR $T208059[ebp]
  00068	52		 push	 edx
  00069	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::end
  00071	89 45 a8	 mov	 DWORD PTR tv137[ebp], eax
$LN4@find:
  00074	8b 45 a8	 mov	 eax, DWORD PTR tv137[ebp]
  00077	89 45 ac	 mov	 DWORD PTR $T208056[ebp], eax
  0007a	8b 4d ac	 mov	 ecx, DWORD PTR $T208056[ebp]
  0007d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00082	89 10		 mov	 DWORD PTR [eax], edx
  00084	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1429 : 		}

  00087	5f		 pop	 edi
  00088	5e		 pop	 esi
  00089	5b		 pop	 ebx
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::find
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >, COMDAT
; _this$ = ecx

; 372  : 	_Tree_iterator()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >

; 373  : 		{	// construct with null node
; 374  : 		}

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >
_TEXT	ENDS
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHPAVTUnionInfo@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator*
; Function compile flags: /Odtp /ZI
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAVTUnionInfo@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAVTUnionInfo@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 395  : 		{	// return designated value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 396  : 		return ((reference)**(_Mybase *)this);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHPAVTUnionInfo@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator*

; 397  : 		}

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAVTUnionInfo@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator*
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAVTUnionInfo@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAVTUnionInfo@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator->, COMDAT
; _this$ = ecx

; 400  : 		{	// return pointer to class object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 401  : 		return (&**this);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAVTUnionInfo@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator*

; 402  : 		}

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAVTUnionInfo@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator->
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator++
; Function compile flags: /Odtp /ZI
;	COMDAT ??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 405  : 		{	// preincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 406  : 		++(*(_Mybase *)this);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator++

; 407  : 		return (*this);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 408  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator++
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator!=, COMDAT
; _this$ = ecx

; 334  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 335  : 		return (!(*this == _Right));

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator==
  00018	0f b6 c0	 movzx	 eax, al
  0001b	f7 d8		 neg	 eax
  0001d	1b c0		 sbb	 eax, eax
  0001f	83 c0 01	 add	 eax, 1

; 336  : 		}

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator!=
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEABHXZ ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator*
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEAAHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEAAHXZ PROC ; std::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >::operator*, COMDAT
; _this$ = ecx

; 321  : 		{	// return designated object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 322  : 		return ((reference)**(_Mybase *)this);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEABHXZ ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator*

; 323  : 		}

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEAAHXZ ENDP ; std::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >::operator*
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Inside@?$vector@HV?$allocator@H@std@@@std@@IBE_NPBH@Z
_TEXT	SEGMENT
tv76 = -72						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@HV?$allocator@H@std@@@std@@IBE_NPBH@Z PROC ; std::vector<int,std::allocator<int> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00012	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00015	73 13		 jae	 SHORT $LN3@Inside
  00017	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001a	8b 02		 mov	 eax, DWORD PTR [edx]
  0001c	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  0001f	77 09		 ja	 SHORT $LN3@Inside
  00021	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  0002a	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN4@Inside:
  00031	8a 45 b8	 mov	 al, BYTE PTR tv76[ebp]

; 1287 : 		}

  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
?_Inside@?$vector@HV?$allocator@H@std@@@std@@IBE_NPBH@Z ENDP ; std::vector<int,std::allocator<int> >::_Inside
_TEXT	ENDS
PUBLIC	?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z ; std::vector<int,std::allocator<int> >::reserve
PUBLIC	?_Grow_to@?$vector@HV?$allocator@H@std@@@std@@IBEII@Z ; std::vector<int,std::allocator<int> >::_Grow_to
PUBLIC	?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::capacity
PUBLIC	?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ ; std::vector<int,std::allocator<int> >::_Xlen
PUBLIC	?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::max_size
PUBLIC	?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::size
; Function compile flags: /Odtp /ZI
;	COMDAT ?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -8						; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z PROC ; std::vector<int,std::allocator<int> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1291 : 		size_type _Size = size();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::size
  00014	89 45 f8	 mov	 DWORD PTR __Size$[ebp], eax

; 1292 : 		if (max_size() - _Count < _Size)

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::max_size
  0001f	2b 45 08	 sub	 eax, DWORD PTR __Count$[ebp]
  00022	3b 45 f8	 cmp	 eax, DWORD PTR __Size$[ebp]
  00025	73 0a		 jae	 SHORT $LN4@Reserve

; 1293 : 			_Xlen();

  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ ; std::vector<int,std::allocator<int> >::_Xlen
  0002f	eb 2d		 jmp	 SHORT $LN6@Reserve
$LN4@Reserve:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  00031	8b 45 f8	 mov	 eax, DWORD PTR __Size$[ebp]
  00034	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  00037	89 45 f8	 mov	 DWORD PTR __Size$[ebp], eax
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::capacity
  00042	39 45 f8	 cmp	 DWORD PTR __Size$[ebp], eax
  00045	77 02		 ja	 SHORT $LN2@Reserve

; 1295 : 			;
; 1296 : 		else

  00047	eb 15		 jmp	 SHORT $LN6@Reserve
$LN2@Reserve:

; 1297 : 			reserve(_Grow_to(_Size));

  00049	8b 45 f8	 mov	 eax, DWORD PTR __Size$[ebp]
  0004c	50		 push	 eax
  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@HV?$allocator@H@std@@@std@@IBEII@Z ; std::vector<int,std::allocator<int> >::_Grow_to
  00055	50		 push	 eax
  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z ; std::vector<int,std::allocator<int> >::reserve
$LN6@Reserve:

; 1298 : 		}

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z ENDP ; std::vector<int,std::allocator<int> >::_Reserve
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z PROC ; std::vector<int,std::allocator<int> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1453 : 		{	// orphan iterators within specified (inclusive) range

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1454 : 		}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z ENDP ; std::vector<int,std::allocator<int> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >
PUBLIC	??0?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<int const ,TUnionInfo *> >::allocator<std::pair<int const ,TUnionInfo *> >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@1@@Z
_TEXT	SEGMENT
$T208083 = -72						; size = 4
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >, COMDAT
; _this$ = ecx

; 698  : 		{	// construct empty tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	51		 push	 ecx
  0000d	8b cc		 mov	 ecx, esp
  0000f	89 65 b8	 mov	 DWORD PTR $T208083[ebp], esp
  00012	8b 45 0c	 mov	 eax, DWORD PTR __Al$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??0?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<int const ,TUnionInfo *> >::allocator<std::pair<int const ,TUnionInfo *> >
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >

; 699  : 		}

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::erase
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator++
; Function compile flags: /Odtp /ZI
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T208087 = -84						; size = 4
$T208088 = -80						; size = 4
$T208089 = -76						; size = 4
$T208090 = -72						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1379 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1380 : 		if (_First == begin() && _Last == end())

  0000c	8d 45 ac	 lea	 eax, DWORD PTR $T208087[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::begin
  00018	50		 push	 eax
  00019	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  0001c	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator==
  00021	0f b6 c8	 movzx	 ecx, al
  00024	85 c9		 test	 ecx, ecx
  00026	74 37		 je	 SHORT $LN2@erase
  00028	8d 45 b0	 lea	 eax, DWORD PTR $T208088[ebp]
  0002b	50		 push	 eax
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::end
  00034	50		 push	 eax
  00035	8d 4d 10	 lea	 ecx, DWORD PTR __Last$[ebp]
  00038	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator==
  0003d	0f b6 c8	 movzx	 ecx, al
  00040	85 c9		 test	 ecx, ecx
  00042	74 1b		 je	 SHORT $LN2@erase

; 1381 : 			{	// erase all
; 1382 : 			clear();

  00044	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::clear

; 1383 : 			return (begin());

  0004c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0004f	50		 push	 eax
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::begin
  00058	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0005b	eb 47		 jmp	 SHORT $LN5@erase

; 1384 : 			}
; 1385 : 		else

  0005d	eb 45		 jmp	 SHORT $LN5@erase
$LN2@erase:

; 1386 : 			{	// partial erase, one at a time
; 1387 : 			while (_First != _Last)

  0005f	8d 45 10	 lea	 eax, DWORD PTR __Last$[ebp]
  00062	50		 push	 eax
  00063	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  00066	e8 00 00 00 00	 call	 ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator!=
  0006b	0f b6 c8	 movzx	 ecx, al
  0006e	85 c9		 test	 ecx, ecx
  00070	74 1f		 je	 SHORT $LN1@erase

; 1388 : 				erase(_First++);

  00072	6a 00		 push	 0
  00074	8d 45 b4	 lea	 eax, DWORD PTR $T208089[ebp]
  00077	50		 push	 eax
  00078	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  0007b	e8 00 00 00 00	 call	 ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator++
  00080	8b 08		 mov	 ecx, DWORD PTR [eax]
  00082	51		 push	 ecx
  00083	8d 55 b8	 lea	 edx, DWORD PTR $T208090[ebp]
  00086	52		 push	 edx
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::erase
  0008f	eb ce		 jmp	 SHORT $LN2@erase
$LN1@erase:

; 1389 : 			return (iterator(_First._Ptr, this));

  00091	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00094	50		 push	 eax
  00095	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  00098	51		 push	 ecx
  00099	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0009c	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >
  000a1	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@erase:

; 1390 : 			}
; 1391 : 		}

  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Lbound
; Function compile flags: /Odtp /ZI
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 1449 : 		{	// find leftmost node not less than _Keyval in mutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1450 : 		return (iterator(_Lbound(_Keyval), this));

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Lbound
  0001c	50		 push	 eax
  0001d	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00020	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >
  00025	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1451 : 		}

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Eqrange@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@V12@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Eqrange
; Function compile flags: /Odtp /ZI
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@V12@@2@ABH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@V12@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::equal_range, COMDAT
; _this$ = ecx

; 1469 : 		{	// find range equivalent to _Keyval in mutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1470 : 		return (_Eqrange(_Keyval));

  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Keyval$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?_Eqrange@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@V12@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Eqrange
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1471 : 		}

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
?equal_range@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@V12@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::equal_range
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node>::deallocate
PUBLIC	??$_Dest_val@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@U?$pair@$$CBHPAVTUnionInfo@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@0@PAU?$pair@$$CBHPAVTUnionInfo@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<int const ,TUnionInfo *> >,std::pair<int const ,TUnionInfo *> >
PUBLIC	??$addressof@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@YAPAU?$pair@$$CBHPAVTUnionInfo@@@0@AAU10@@Z ; std::addressof<std::pair<int const ,TUnionInfo *> >
PUBLIC	?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAVTUnionInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Myval
PUBLIC	?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
PUBLIC	?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
PUBLIC	?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
; Function compile flags: /Odtp /ZI
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$206397 = -8					; size = 4
_this$ = -4						; size = 4
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 1610 : 		{	// free entire subtree, recursively

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1611 : 		for (_Nodeptr _Pnode = _Rootnode;

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Rootnode$[ebp]
  0000f	89 45 f8	 mov	 DWORD PTR __Pnode$206397[ebp], eax
  00012	eb 06		 jmp	 SHORT $LN3@Erase
$LN2@Erase:

; 1612 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

  00014	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$206397[ebp]
  00017	89 45 08	 mov	 DWORD PTR __Rootnode$[ebp], eax
$LN3@Erase:
  0001a	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$206397[ebp]
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  00023	83 c4 04	 add	 esp, 4
  00026	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00029	85 c9		 test	 ecx, ecx
  0002b	75 60		 jne	 SHORT $LN4@Erase

; 1613 : 			{	// free subtrees, then node
; 1614 : 			_Erase(this->_Right(_Pnode));

  0002d	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$206397[ebp]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00036	83 c4 04	 add	 esp, 4
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	51		 push	 ecx
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Erase

; 1615 : 			_Pnode = this->_Left(_Pnode);

  00044	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$206397[ebp]
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  0004d	83 c4 04	 add	 esp, 4
  00050	8b 08		 mov	 ecx, DWORD PTR [eax]
  00052	89 4d f8	 mov	 DWORD PTR __Pnode$206397[ebp], ecx

; 1616 : 			_Dest_val(this->_Alval,
; 1617 : 				_STD addressof(this->_Myval(_Rootnode)));

  00055	8b 45 08	 mov	 eax, DWORD PTR __Rootnode$[ebp]
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAVTUnionInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Myval
  0005e	83 c4 04	 add	 esp, 4
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ??$addressof@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@YAPAU?$pair@$$CBHPAVTUnionInfo@@@0@AAU10@@Z ; std::addressof<std::pair<int const ,TUnionInfo *> >
  00067	83 c4 04	 add	 esp, 4
  0006a	50		 push	 eax
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	83 c1 0d	 add	 ecx, 13			; 0000000dH
  00071	51		 push	 ecx
  00072	e8 00 00 00 00	 call	 ??$_Dest_val@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@U?$pair@$$CBHPAVTUnionInfo@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@0@PAU?$pair@$$CBHPAVTUnionInfo@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<int const ,TUnionInfo *> >,std::pair<int const ,TUnionInfo *> >
  00077	83 c4 08	 add	 esp, 8

; 1618 : 
; 1619 : 			this->_Alnod.deallocate(_Rootnode, 1);

  0007a	6a 01		 push	 1
  0007c	8b 45 08	 mov	 eax, DWORD PTR __Rootnode$[ebp]
  0007f	50		 push	 eax
  00080	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00086	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node>::deallocate

; 1620 : 			}

  0008b	eb 87		 jmp	 SHORT $LN2@Erase
$LN4@Erase:

; 1621 : 		}

  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	5b		 pop	 ebx
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Erase
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Lmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1758 : 		{	// return leftmost node in nonmutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1759 : 		return (this->_Left(this->_Myhead));

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00018	83 c4 04	 add	 esp, 4

; 1760 : 		}

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Lmost
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Rmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1783 : 		{	// return rightmost node in nonmutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1784 : 		return (this->_Right(this->_Myhead));

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00018	83 c4 04	 add	 esp, 4

; 1785 : 		}

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
; Function compile flags: /Odtp /ZI
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Root@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1788 : 		{	// return root of nonmutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1789 : 		return (this->_Parent(this->_Myhead));

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00018	83 c4 04	 add	 esp, 4

; 1790 : 		}

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Root
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T208105 = -88						; size = 4
$T208106 = -84						; size = 4
$T208107 = -80						; size = 4
$T208108 = -76						; size = 4
$T208109 = -72						; size = 4
_this$ = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1865 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1866 : 		erase(begin(), end());

  0000c	8d 45 ac	 lea	 eax, DWORD PTR $T208106[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::end
  00018	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001a	89 4d a8	 mov	 DWORD PTR $T208105[ebp], ecx
  0001d	8d 55 b4	 lea	 edx, DWORD PTR $T208108[ebp]
  00020	52		 push	 edx
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::begin
  00029	8b 00		 mov	 eax, DWORD PTR [eax]
  0002b	89 45 b0	 mov	 DWORD PTR $T208107[ebp], eax
  0002e	8b 4d a8	 mov	 ecx, DWORD PTR $T208105[ebp]
  00031	51		 push	 ecx
  00032	8b 55 b0	 mov	 edx, DWORD PTR $T208107[ebp]
  00035	52		 push	 edx
  00036	8d 45 b8	 lea	 eax, DWORD PTR $T208109[ebp]
  00039	50		 push	 eax
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::erase

; 1867 : 		}

  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Tidy
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??1?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::~_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >, COMDAT
; _this$ = ecx

; 554  : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 555  : 		this->_Alnod.deallocate(this->_Myhead, 1);

  0000c	6a 01		 push	 1
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00014	51		 push	 ecx
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0001b	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node>::deallocate

; 556  : 		}

  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??1?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::~_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >
_TEXT	ENDS
PUBLIC	??$_Kfn@$$CBHPAVTUnionInfo@@@?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ; std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>::_Kfn<int const ,TUnionInfo *>
; Function compile flags: /Odtp /ZI
;	COMDAT ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key, COMDAT

; 616  : 		{	// return reference to key in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 617  : 		return ((key_type&)_Traits::_Kfn(_Myval(_Pnode)));

  00009	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAVTUnionInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Myval
  00012	83 c4 04	 add	 esp, 4
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??$_Kfn@$$CBHPAVTUnionInfo@@@?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ; std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>::_Kfn<int const ,TUnionInfo *>
  0001b	83 c4 04	 add	 esp, 4

; 618  : 		}

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<int const ,TUnionInfo *> >::allocator<std::pair<int const ,TUnionInfo *> >, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<int const ,TUnionInfo *> >::allocator<std::pair<int const ,TUnionInfo *> >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xfunctional
_TEXT	ENDS
;	COMDAT ??R?$less@H@std@@QBE_NABH0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@H@std@@QBE_NABH0@Z PROC			; std::less<int>::operator(), COMDAT
; _this$ = ecx

; 124  : 		{	// apply operator< to operands

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 125  : 		return (_Left < _Right);

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000f	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  00012	8b 10		 mov	 edx, DWORD PTR [eax]
  00014	33 c0		 xor	 eax, eax
  00016	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00018	0f 9c c0	 setl	 al

; 126  : 		}

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 08 00	 ret	 8
??R?$less@H@std@@QBE_NABH0@Z ENDP			; std::less<int>::operator()
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >, COMDAT
; _this$ = ecx

; 378  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Plist$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >

; 379  : 		}

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >, COMDAT
; _this$ = ecx

; 208  : 		{	// construct with null node pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>

; 209  : 		}

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHPAVTUnionInfo@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHPAVTUnionInfo@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 230  : 		{	// return designated value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 231  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 232  : 		if (this->_Getcont() == 0
; 233  : 			|| this->_Ptr == 0
; 234  : 			|| this->_Ptr == ((_Mytree *)this->_Getcont())->_Myhead)
; 235  : 			{	// report error
; 236  : 			_DEBUG_ERROR("map/set iterator not dereferencable");
; 237  : 			_SCL_SECURE_OUT_OF_RANGE;
; 238  : 			}
; 239  : 
; 240  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 241  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 242  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 243  : 			((_Mytree *)this->_Getcont())->_Myhead);
; 244  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 245  : 
; 246  : 		return (_Mytree::_Myval(this->_Ptr));

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAVTUnionInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Myval
  00017	83 c4 04	 add	 esp, 4

; 247  : 		}

  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	5b		 pop	 ebx
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHPAVTUnionInfo@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::operator++
; Function compile flags: /Odtp /ZI
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 250  : 		{	// preincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 251  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 252  : 		if (this->_Getcont() == 0
; 253  : 			|| this->_Ptr == 0
; 254  : 			|| _Mytree::_Isnil(this->_Ptr))
; 255  : 			{	// report error
; 256  : 			_DEBUG_ERROR("map/set iterator not incrementable");
; 257  : 			_SCL_SECURE_OUT_OF_RANGE;
; 258  : 			}
; 259  : 
; 260  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 261  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 262  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 263  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 264  : 
; 265  : 		++(*(_Mybase *)this);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::operator++

; 266  : 		return (*this);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 267  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator++
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator==, COMDAT
; _this$ = ecx

; 316  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 318  : 		if (this->_Getcont() == 0
; 319  : 			|| this->_Getcont() != _Right._Getcont())
; 320  : 			{	// report error
; 321  : 			_DEBUG_ERROR("map/set iterators incompatible");
; 322  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 323  : 			}
; 324  : 
; 325  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 326  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 327  : 			&& this->_Getcont() == _Right._Getcont());
; 328  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 329  : 
; 330  : 		return (this->_Ptr == _Right._Ptr);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00012	8b 10		 mov	 edx, DWORD PTR [eax]
  00014	33 c0		 xor	 eax, eax
  00016	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00018	0f 94 c0	 sete	 al

; 331  : 		}

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator==
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 121  : 		{	// return node pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 122  : 		return (_Ptr);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 00		 mov	 eax, DWORD PTR [eax]

; 123  : 		}

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@$$CBHPAVTUnionInfo@@@std@@QAE@ABH$$QAPAVTUnionInfo@@@Z ; std::_Pair_base<int const ,TUnionInfo *>::_Pair_base<int const ,TUnionInfo *>
PUBLIC	??$move@AAPAVTUnionInfo@@@std@@YA$$QAPAVTUnionInfo@@AAPAV1@@Z ; std::move<TUnionInfo * &>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$pair@$$CBHPAVTUnionInfo@@@std@@QAE@ABH$$QAPAVTUnionInfo@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBHPAVTUnionInfo@@@std@@QAE@ABH$$QAPAVTUnionInfo@@@Z PROC ; std::pair<int const ,TUnionInfo *>::pair<int const ,TUnionInfo *>, COMDAT
; _this$ = ecx

; 233  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$move@AAPAVTUnionInfo@@@std@@YA$$QAPAVTUnionInfo@@AAPAV1@@Z ; std::move<TUnionInfo * &>
  00015	83 c4 04	 add	 esp, 4
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ??0?$_Pair_base@$$CBHPAVTUnionInfo@@@std@@QAE@ABH$$QAPAVTUnionInfo@@@Z ; std::_Pair_base<int const ,TUnionInfo *>::_Pair_base<int const ,TUnionInfo *>

; 234  : 		}

  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
??0?$pair@$$CBHPAVTUnionInfo@@@std@@QAE@ABH$$QAPAVTUnionInfo@@@Z ENDP ; std::pair<int const ,TUnionInfo *>::pair<int const ,TUnionInfo *>
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Pvector$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >

; 305  : 		}

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEABHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEABHXZ PROC ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator*, COMDAT
; _this$ = ecx

; 63   : 		{	// return designated object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN2@operator@2:

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);

  0000c	33 c0		 xor	 eax, eax
  0000e	75 fc		 jne	 SHORT $LN2@operator@2

; 83   : 
; 84   : 		return (*this->_Ptr);

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 00		 mov	 eax, DWORD PTR [eax]

; 85   : 		}

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEABHXZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator*
_TEXT	ENDS
PUBLIC	?_Orphan_all@_Container_base0@std@@QAEXXZ	; std::_Container_base0::_Orphan_all
PUBLIC	?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z ; std::vector<int,std::allocator<int> >::_Destroy
PUBLIC	?deallocate@?$allocator@H@std@@QAEXPAHI@Z	; std::allocator<int>::deallocate
PUBLIC	??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ; std::vector<int,std::allocator<int> >::_Umove<int *>
PUBLIC	?allocate@?$allocator@H@std@@QAEPAHI@Z		; std::allocator<int>::allocate
EXTRN	__CxxThrowException@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Size$206491 = -28					; size = 4
__Ptr$206484 = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z PROC ; std::vector<int,std::allocator<int> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 747  : 		if (max_size() < _Count)

  0002f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::max_size
  00037	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0003a	73 0d		 jae	 SHORT $LN5@reserve

; 748  : 			_Xlen();	// result too long

  0003c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ ; std::vector<int,std::allocator<int> >::_Xlen
  00044	e9 eb 00 00 00	 jmp	 $LN7@reserve
$LN5@reserve:

; 749  : 		else if (capacity() < _Count)

  00049	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::capacity
  00051	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00054	0f 83 da 00 00
	00		 jae	 $LN7@reserve

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  0005a	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0005d	50		 push	 eax
  0005e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00064	e8 00 00 00 00	 call	 ?allocate@?$allocator@H@std@@QAEPAHI@Z ; std::allocator<int>::allocate
  00069	89 45 e8	 mov	 DWORD PTR __Ptr$206484[ebp], eax

; 752  : 
; 753  : 			_TRY_BEGIN

  0006c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  00073	8b 45 e8	 mov	 eax, DWORD PTR __Ptr$206484[ebp]
  00076	50		 push	 eax
  00077	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0007d	52		 push	 edx
  0007e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00081	8b 08		 mov	 ecx, DWORD PTR [eax]
  00083	51		 push	 ecx
  00084	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00087	e8 00 00 00 00	 call	 ??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ; std::vector<int,std::allocator<int> >::_Umove<int *>
  0008c	eb 29		 jmp	 SHORT $LN8@reserve
__catch$?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z$0:

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);

  0008e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00091	50		 push	 eax
  00092	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$206484[ebp]
  00095	51		 push	 ecx
  00096	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0009c	e8 00 00 00 00	 call	 ?deallocate@?$allocator@H@std@@QAEXPAHI@Z ; std::allocator<int>::deallocate

; 757  : 			_RERAISE;

  000a1	6a 00		 push	 0
  000a3	6a 00		 push	 0
  000a5	e8 00 00 00 00	 call	 __CxxThrowException@8

; 758  : 			_CATCH_END

  000aa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000b1	b8 00 00 00 00	 mov	 eax, __tryend$?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z$1
  000b6	c3		 ret	 0
$LN8@reserve:
  000b7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z$1:

; 759  : 
; 760  : 			size_type _Size = size();

  000be	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	e8 00 00 00 00	 call	 ?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::size
  000c6	89 45 e4	 mov	 DWORD PTR __Size$206491[ebp], eax

; 761  : 			if (this->_Myfirst != 0)

  000c9	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000cc	83 38 00	 cmp	 DWORD PTR [eax], 0
  000cf	74 35		 je	 SHORT $LN1@reserve

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);

  000d1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000d4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d7	51		 push	 ecx
  000d8	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000db	8b 02		 mov	 eax, DWORD PTR [edx]
  000dd	50		 push	 eax
  000de	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	e8 00 00 00 00	 call	 ?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z ; std::vector<int,std::allocator<int> >::_Destroy

; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  000e6	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000e9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ec	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000ef	2b 11		 sub	 edx, DWORD PTR [ecx]
  000f1	c1 fa 02	 sar	 edx, 2
  000f4	52		 push	 edx
  000f5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fa	51		 push	 ecx
  000fb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000fe	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00101	e8 00 00 00 00	 call	 ?deallocate@?$allocator@H@std@@QAEXPAHI@Z ; std::allocator<int>::deallocate
$LN1@reserve:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  00106	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00109	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 769  : 			this->_Myend = _Ptr + _Count;

  0010e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00111	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$206484[ebp]
  00114	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00117	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0011a	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 770  : 			this->_Mylast = _Ptr + _Size;

  0011d	8b 45 e4	 mov	 eax, DWORD PTR __Size$206491[ebp]
  00120	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$206484[ebp]
  00123	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00126	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00129	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 771  : 			this->_Myfirst = _Ptr;

  0012c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0012f	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$206484[ebp]
  00132	89 08		 mov	 DWORD PTR [eax], ecx
$LN7@reserve:

; 772  : 			}
; 773  : 		}

  00134	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00137	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0013e	59		 pop	 ecx
  0013f	5f		 pop	 edi
  00140	5e		 pop	 esi
  00141	5b		 pop	 ebx
  00142	8b e5		 mov	 esp, ebp
  00144	5d		 pop	 ebp
  00145	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z ENDP ; std::vector<int,std::allocator<int> >::reserve
; Function compile flags: /Odtp /ZI
;	COMDAT ?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC ; std::vector<int,std::allocator<int> >::capacity, COMDAT
; _this$ = ecx

; 776  : 		{	// return current length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00015	2b 01		 sub	 eax, DWORD PTR [ecx]
  00017	c1 f8 02	 sar	 eax, 2

; 778  : 		}

  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	5b		 pop	 ebx
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP ; std::vector<int,std::allocator<int> >::capacity
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC	; std::vector<int,std::allocator<int> >::size, COMDAT
; _this$ = ecx

; 878  : 		{	// return length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00015	2b 01		 sub	 eax, DWORD PTR [ecx]
  00017	c1 f8 02	 sar	 eax, 2

; 880  : 		}

  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	5b		 pop	 ebx
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP	; std::vector<int,std::allocator<int> >::size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@H@std@@QBEIXZ		; std::allocator<int>::max_size
; Function compile flags: /Odtp /ZI
;	COMDAT ?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC ; std::vector<int,std::allocator<int> >::max_size, COMDAT
; _this$ = ecx

; 883  : 		{	// return maximum possible length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 884  : 		return (this->_Alval.max_size());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00012	e8 00 00 00 00	 call	 ?max_size@?$allocator@H@std@@QBEIXZ ; std::allocator<int>::max_size

; 885  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP ; std::vector<int,std::allocator<int> >::max_size
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Grow_to@?$vector@HV?$allocator@H@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -76						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@HV?$allocator@H@std@@@std@@IBEII@Z PROC ; std::vector<int,std::allocator<int> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1275 : 		size_type _Capacity = capacity();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::capacity
  00014	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::max_size
  0001f	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00022	d1 e9		 shr	 ecx, 1
  00024	2b c1		 sub	 eax, ecx
  00026	3b 45 f8	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  00029	73 09		 jae	 SHORT $LN4@Grow_to
  0002b	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
  00032	eb 0b		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00034	8b 55 f8	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00037	d1 ea		 shr	 edx, 1
  00039	03 55 f8	 add	 edx, DWORD PTR __Capacity$[ebp]
  0003c	89 55 b4	 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  0003f	8b 45 b4	 mov	 eax, DWORD PTR tv73[ebp]
  00042	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax

; 1279 : 		if (_Capacity < _Count)

  00045	8b 45 f8	 mov	 eax, DWORD PTR __Capacity$[ebp]
  00048	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0004b	73 06		 jae	 SHORT $LN1@Grow_to

; 1280 : 			_Capacity = _Count;

  0004d	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00050	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
$LN1@Grow_to:

; 1281 : 		return (_Capacity);

  00053	8b 45 f8	 mov	 eax, DWORD PTR __Capacity$[ebp]

; 1282 : 		}

  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
?_Grow_to@?$vector@HV?$allocator@H@std@@@std@@IBEII@Z ENDP ; std::vector<int,std::allocator<int> >::_Grow_to
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ PROC	; std::vector<int,std::allocator<int> >::_Xlen, COMDAT
; _this$ = ecx

; 1426 : 		{	// report a length_error

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00011	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN2@Xlen:

; 1428 : 		}

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ ENDP	; std::vector<int,std::allocator<int> >::_Xlen
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Rrotate
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Lrotate
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
PUBLIC	?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
PUBLIC	?_Max@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Max
PUBLIC	?_Min@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Min
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
; File d:\microsoft visual studio 10.0\vc\include\xtree
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv182 = -88						; size = 4
tv170 = -88						; size = 4
__Pnode$ = -20						; size = 4
__Fixnodeparent$ = -16					; size = 4
__Fixnode$ = -12					; size = 4
__Erasednode$ = -8					; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1195 : 		{	// erase element at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 		if (_Where._Getcont() != this || this->_Isnil(_Where._Mynode()))
; 1198 : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 1199 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1200 : 		++_Where;	// save successor iterator for return
; 1201 : 		_Orphan_ptr(*this, _Erasednode);
; 1202 : 
; 1203 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1204 : 		if (this->_Isnil(_Where._Mynode()))

  0000c	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  0001a	83 c4 04	 add	 esp, 4
  0001d	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00020	85 c0		 test	 eax, eax
  00022	74 0a		 je	 SHORT $LN40@erase@2

; 1205 : 			_Xout_of_range("invalid map/set<T> iterator");

  00024	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00029	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN40@erase@2:

; 1206 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  0002e	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  00036	89 45 f8	 mov	 DWORD PTR __Erasednode$[ebp], eax

; 1207 : 		++_Where;	// save successor iterator for return

  00039	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0003c	e8 00 00 00 00	 call	 ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator++

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1211 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1212 : 		_Nodeptr _Pnode = _Erasednode;

  00041	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  00044	89 45 ec	 mov	 DWORD PTR __Pnode$[ebp], eax

; 1213 : 
; 1214 : 		if (this->_Isnil(this->_Left(_Pnode)))

  00047	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00050	83 c4 04	 add	 esp, 4
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	51		 push	 ecx
  00056	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  0005b	83 c4 04	 add	 esp, 4
  0005e	0f be 10	 movsx	 edx, BYTE PTR [eax]
  00061	85 d2		 test	 edx, edx
  00063	74 13		 je	 SHORT $LN39@erase@2

; 1215 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

  00065	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  0006e	83 c4 04	 add	 esp, 4
  00071	8b 08		 mov	 ecx, DWORD PTR [eax]
  00073	89 4d f4	 mov	 DWORD PTR __Fixnode$[ebp], ecx
  00076	eb 4d		 jmp	 SHORT $LN38@erase@2
$LN39@erase@2:

; 1216 : 		else if (this->_Isnil(this->_Right(_Pnode)))

  00078	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00081	83 c4 04	 add	 esp, 4
  00084	8b 08		 mov	 ecx, DWORD PTR [eax]
  00086	51		 push	 ecx
  00087	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  0008c	83 c4 04	 add	 esp, 4
  0008f	0f be 10	 movsx	 edx, BYTE PTR [eax]
  00092	85 d2		 test	 edx, edx
  00094	74 13		 je	 SHORT $LN37@erase@2

; 1217 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

  00096	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  0009f	83 c4 04	 add	 esp, 4
  000a2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a4	89 4d f4	 mov	 DWORD PTR __Fixnode$[ebp], ecx

; 1218 : 		else

  000a7	eb 1c		 jmp	 SHORT $LN38@erase@2
$LN37@erase@2:

; 1219 : 			{	// two subtrees, must lift successor node to replace erased
; 1220 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

  000a9	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  000ac	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  000b1	89 45 ec	 mov	 DWORD PTR __Pnode$[ebp], eax

; 1221 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

  000b4	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  000bd	83 c4 04	 add	 esp, 4
  000c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c2	89 4d f4	 mov	 DWORD PTR __Fixnode$[ebp], ecx
$LN38@erase@2:

; 1222 : 			}
; 1223 : 
; 1224 : 		if (_Pnode == _Erasednode)

  000c5	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  000c8	3b 45 f8	 cmp	 eax, DWORD PTR __Erasednode$[ebp]
  000cb	0f 85 1b 01 00
	00		 jne	 $LN35@erase@2

; 1225 : 			{	// at most one subtree, relink it
; 1226 : 			_Fixnodeparent = this->_Parent(_Erasednode);

  000d1	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  000d4	50		 push	 eax
  000d5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  000da	83 c4 04	 add	 esp, 4
  000dd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000df	89 4d f0	 mov	 DWORD PTR __Fixnodeparent$[ebp], ecx

; 1227 : 			if (!this->_Isnil(_Fixnode))

  000e2	8b 45 f4	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  000e5	50		 push	 eax
  000e6	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  000eb	83 c4 04	 add	 esp, 4
  000ee	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  000f1	85 c9		 test	 ecx, ecx
  000f3	75 11		 jne	 SHORT $LN34@erase@2

; 1228 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000f5	8b 45 f4	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  000fe	83 c4 04	 add	 esp, 4
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  00104	89 08		 mov	 DWORD PTR [eax], ecx
$LN34@erase@2:

; 1229 : 
; 1230 : 			if (_Root() == _Erasednode)

  00106	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00109	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Root
  0010e	8b 00		 mov	 eax, DWORD PTR [eax]
  00110	3b 45 f8	 cmp	 eax, DWORD PTR __Erasednode$[ebp]
  00113	75 0f		 jne	 SHORT $LN33@erase@2

; 1231 : 				_Root() = _Fixnode;	// link down from root

  00115	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00118	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Root
  0011d	8b 4d f4	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  00120	89 08		 mov	 DWORD PTR [eax], ecx
  00122	eb 37		 jmp	 SHORT $LN32@erase@2
$LN33@erase@2:

; 1232 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

  00124	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00127	50		 push	 eax
  00128	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  0012d	83 c4 04	 add	 esp, 4
  00130	8b 08		 mov	 ecx, DWORD PTR [eax]
  00132	3b 4d f8	 cmp	 ecx, DWORD PTR __Erasednode$[ebp]
  00135	75 13		 jne	 SHORT $LN31@erase@2

; 1233 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  00137	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  0013a	50		 push	 eax
  0013b	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00140	83 c4 04	 add	 esp, 4
  00143	8b 4d f4	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  00146	89 08		 mov	 DWORD PTR [eax], ecx

; 1234 : 			else

  00148	eb 11		 jmp	 SHORT $LN32@erase@2
$LN31@erase@2:

; 1235 : 				this->_Right(_Fixnodeparent) =
; 1236 : 					_Fixnode;	// link down to right

  0014a	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  0014d	50		 push	 eax
  0014e	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00153	83 c4 04	 add	 esp, 4
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  00159	89 08		 mov	 DWORD PTR [eax], ecx
$LN32@erase@2:

; 1237 : 
; 1238 : 			if (_Lmost() == _Erasednode)

  0015b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0015e	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Lmost
  00163	8b 00		 mov	 eax, DWORD PTR [eax]
  00165	3b 45 f8	 cmp	 eax, DWORD PTR __Erasednode$[ebp]
  00168	75 37		 jne	 SHORT $LN29@erase@2

; 1239 : 				_Lmost() = this->_Isnil(_Fixnode)
; 1240 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1241 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree

  0016a	8b 45 f4	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  0016d	50		 push	 eax
  0016e	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  00173	83 c4 04	 add	 esp, 4
  00176	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00179	85 c9		 test	 ecx, ecx
  0017b	74 08		 je	 SHORT $LN43@erase@2
  0017d	8b 55 f0	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  00180	89 55 a8	 mov	 DWORD PTR tv170[ebp], edx
  00183	eb 0f		 jmp	 SHORT $LN44@erase@2
$LN43@erase@2:
  00185	8b 45 f4	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  00188	50		 push	 eax
  00189	e8 00 00 00 00	 call	 ?_Min@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Min
  0018e	83 c4 04	 add	 esp, 4
  00191	89 45 a8	 mov	 DWORD PTR tv170[ebp], eax
$LN44@erase@2:
  00194	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00197	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Lmost
  0019c	8b 4d a8	 mov	 ecx, DWORD PTR tv170[ebp]
  0019f	89 08		 mov	 DWORD PTR [eax], ecx
$LN29@erase@2:

; 1242 : 
; 1243 : 			if (_Rmost() == _Erasednode)

  001a1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001a4	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Rmost
  001a9	8b 00		 mov	 eax, DWORD PTR [eax]
  001ab	3b 45 f8	 cmp	 eax, DWORD PTR __Erasednode$[ebp]
  001ae	75 37		 jne	 SHORT $LN28@erase@2

; 1244 : 				_Rmost() = this->_Isnil(_Fixnode)
; 1245 : 					? _Fixnodeparent	// largest is parent of erased node
; 1246 : 					: this->_Max(_Fixnode);	// largest in relinked subtree

  001b0	8b 45 f4	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  001b3	50		 push	 eax
  001b4	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  001b9	83 c4 04	 add	 esp, 4
  001bc	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  001bf	85 c9		 test	 ecx, ecx
  001c1	74 08		 je	 SHORT $LN45@erase@2
  001c3	8b 55 f0	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  001c6	89 55 a8	 mov	 DWORD PTR tv182[ebp], edx
  001c9	eb 0f		 jmp	 SHORT $LN46@erase@2
$LN45@erase@2:
  001cb	8b 45 f4	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  001ce	50		 push	 eax
  001cf	e8 00 00 00 00	 call	 ?_Max@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Max
  001d4	83 c4 04	 add	 esp, 4
  001d7	89 45 a8	 mov	 DWORD PTR tv182[ebp], eax
$LN46@erase@2:
  001da	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001dd	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Rmost
  001e2	8b 4d a8	 mov	 ecx, DWORD PTR tv182[ebp]
  001e5	89 08		 mov	 DWORD PTR [eax], ecx
$LN28@erase@2:

; 1247 : 			}
; 1248 : 		else

  001e7	e9 8e 01 00 00	 jmp	 $LN27@erase@2
$LN35@erase@2:

; 1249 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1250 : 			this->_Parent(this->_Left(_Erasednode)) =
; 1251 : 				_Pnode;	// link left up

  001ec	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  001ef	50		 push	 eax
  001f0	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  001f5	83 c4 04	 add	 esp, 4
  001f8	8b 08		 mov	 ecx, DWORD PTR [eax]
  001fa	51		 push	 ecx
  001fb	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00200	83 c4 04	 add	 esp, 4
  00203	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00206	89 10		 mov	 DWORD PTR [eax], edx

; 1252 : 			this->_Left(_Pnode) =
; 1253 : 				this->_Left(_Erasednode);	// link successor down

  00208	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  0020b	50		 push	 eax
  0020c	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00211	83 c4 04	 add	 esp, 4
  00214	8b f0		 mov	 esi, eax
  00216	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00219	51		 push	 ecx
  0021a	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  0021f	83 c4 04	 add	 esp, 4
  00222	8b 16		 mov	 edx, DWORD PTR [esi]
  00224	89 10		 mov	 DWORD PTR [eax], edx

; 1254 : 
; 1255 : 			if (_Pnode == this->_Right(_Erasednode))

  00226	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  00229	50		 push	 eax
  0022a	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  0022f	83 c4 04	 add	 esp, 4
  00232	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00235	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00237	75 0b		 jne	 SHORT $LN26@erase@2

; 1256 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00239	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0023c	89 45 f0	 mov	 DWORD PTR __Fixnodeparent$[ebp], eax

; 1257 : 			else

  0023f	e9 80 00 00 00	 jmp	 $LN25@erase@2
$LN26@erase@2:

; 1258 : 				{	// successor further down, link in place of erased
; 1259 : 				_Fixnodeparent =
; 1260 : 					this->_Parent(_Pnode);	// parent is successor's

  00244	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00247	50		 push	 eax
  00248	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  0024d	83 c4 04	 add	 esp, 4
  00250	8b 08		 mov	 ecx, DWORD PTR [eax]
  00252	89 4d f0	 mov	 DWORD PTR __Fixnodeparent$[ebp], ecx

; 1261 : 				if (!this->_Isnil(_Fixnode))

  00255	8b 45 f4	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  00258	50		 push	 eax
  00259	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  0025e	83 c4 04	 add	 esp, 4
  00261	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00264	85 c9		 test	 ecx, ecx
  00266	75 11		 jne	 SHORT $LN24@erase@2

; 1262 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00268	8b 45 f4	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  0026b	50		 push	 eax
  0026c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00271	83 c4 04	 add	 esp, 4
  00274	8b 4d f0	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  00277	89 08		 mov	 DWORD PTR [eax], ecx
$LN24@erase@2:

; 1263 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00279	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00282	83 c4 04	 add	 esp, 4
  00285	8b 4d f4	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  00288	89 08		 mov	 DWORD PTR [eax], ecx

; 1264 : 				this->_Right(_Pnode) =
; 1265 : 					this->_Right(_Erasednode);	// link next down

  0028a	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  0028d	50		 push	 eax
  0028e	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00293	83 c4 04	 add	 esp, 4
  00296	8b f0		 mov	 esi, eax
  00298	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0029b	51		 push	 ecx
  0029c	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  002a1	83 c4 04	 add	 esp, 4
  002a4	8b 16		 mov	 edx, DWORD PTR [esi]
  002a6	89 10		 mov	 DWORD PTR [eax], edx

; 1266 : 				this->_Parent(this->_Right(_Erasednode)) =
; 1267 : 					_Pnode;	// right up

  002a8	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  002ab	50		 push	 eax
  002ac	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  002b1	83 c4 04	 add	 esp, 4
  002b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  002b6	51		 push	 ecx
  002b7	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  002bc	83 c4 04	 add	 esp, 4
  002bf	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$[ebp]
  002c2	89 10		 mov	 DWORD PTR [eax], edx
$LN25@erase@2:

; 1268 : 				}
; 1269 : 
; 1270 : 			if (_Root() == _Erasednode)

  002c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002c7	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Root
  002cc	8b 00		 mov	 eax, DWORD PTR [eax]
  002ce	3b 45 f8	 cmp	 eax, DWORD PTR __Erasednode$[ebp]
  002d1	75 0f		 jne	 SHORT $LN23@erase@2

; 1271 : 				_Root() = _Pnode;	// link down from root

  002d3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002d6	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Root
  002db	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  002de	89 08		 mov	 DWORD PTR [eax], ecx
  002e0	eb 58		 jmp	 SHORT $LN22@erase@2
$LN23@erase@2:

; 1272 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

  002e2	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  002e5	50		 push	 eax
  002e6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  002eb	83 c4 04	 add	 esp, 4
  002ee	8b 08		 mov	 ecx, DWORD PTR [eax]
  002f0	51		 push	 ecx
  002f1	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  002f6	83 c4 04	 add	 esp, 4
  002f9	8b 10		 mov	 edx, DWORD PTR [eax]
  002fb	3b 55 f8	 cmp	 edx, DWORD PTR __Erasednode$[ebp]
  002fe	75 1e		 jne	 SHORT $LN21@erase@2

; 1273 : 				this->_Left(this->_Parent(_Erasednode)) =
; 1274 : 					_Pnode;	// link down to left

  00300	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  00303	50		 push	 eax
  00304	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00309	83 c4 04	 add	 esp, 4
  0030c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0030e	51		 push	 ecx
  0030f	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00314	83 c4 04	 add	 esp, 4
  00317	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0031a	89 10		 mov	 DWORD PTR [eax], edx

; 1275 : 			else

  0031c	eb 1c		 jmp	 SHORT $LN22@erase@2
$LN21@erase@2:

; 1276 : 				this->_Right(this->_Parent(_Erasednode)) =
; 1277 : 					_Pnode;	// link down to right

  0031e	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  00321	50		 push	 eax
  00322	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00327	83 c4 04	 add	 esp, 4
  0032a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0032c	51		 push	 ecx
  0032d	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00332	83 c4 04	 add	 esp, 4
  00335	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00338	89 10		 mov	 DWORD PTR [eax], edx
$LN22@erase@2:

; 1278 : 
; 1279 : 			this->_Parent(_Pnode) =
; 1280 : 				this->_Parent(_Erasednode);	// link successor up

  0033a	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  0033d	50		 push	 eax
  0033e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00343	83 c4 04	 add	 esp, 4
  00346	8b f0		 mov	 esi, eax
  00348	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0034b	51		 push	 ecx
  0034c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00351	83 c4 04	 add	 esp, 4
  00354	8b 16		 mov	 edx, DWORD PTR [esi]
  00356	89 10		 mov	 DWORD PTR [eax], edx

; 1281 : 			_STD swap(this->_Color(_Pnode),
; 1282 : 				this->_Color(_Erasednode));	// recolor it

  00358	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  0035b	50		 push	 eax
  0035c	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  00361	83 c4 04	 add	 esp, 4
  00364	50		 push	 eax
  00365	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00368	51		 push	 ecx
  00369	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  0036e	83 c4 04	 add	 esp, 4
  00371	50		 push	 eax
  00372	e8 00 00 00 00	 call	 ??$swap@D@std@@YAXAAD0@Z ; std::swap<char>
  00377	83 c4 08	 add	 esp, 8
$LN27@erase@2:

; 1283 : 			}
; 1284 : 
; 1285 : 		if (this->_Color(_Erasednode) == this->_Black)

  0037a	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  0037d	50		 push	 eax
  0037e	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  00383	83 c4 04	 add	 esp, 4
  00386	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00389	83 f9 01	 cmp	 ecx, 1
  0038c	0f 85 8f 03 00
	00		 jne	 $LN19@erase@2
  00392	eb 11		 jmp	 SHORT $LN18@erase@2
$LN17@erase@2:

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  00394	8b 45 f4	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  00397	50		 push	 eax
  00398	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  0039d	83 c4 04	 add	 esp, 4
  003a0	8b 08		 mov	 ecx, DWORD PTR [eax]
  003a2	89 4d f0	 mov	 DWORD PTR __Fixnodeparent$[ebp], ecx
$LN18@erase@2:
  003a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003a8	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Root
  003ad	8b 4d f4	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  003b0	3b 08		 cmp	 ecx, DWORD PTR [eax]
  003b2	0f 84 5a 03 00
	00		 je	 $LN16@erase@2
  003b8	8b 45 f4	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  003bb	50		 push	 eax
  003bc	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  003c1	83 c4 04	 add	 esp, 4
  003c4	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  003c7	83 f9 01	 cmp	 ecx, 1
  003ca	0f 85 42 03 00
	00		 jne	 $LN16@erase@2

; 1290 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

  003d0	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  003d3	50		 push	 eax
  003d4	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  003d9	83 c4 04	 add	 esp, 4
  003dc	8b 4d f4	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  003df	3b 08		 cmp	 ecx, DWORD PTR [eax]
  003e1	0f 85 97 01 00
	00		 jne	 $LN15@erase@2

; 1291 : 					{	// fixup left subtree
; 1292 : 					_Pnode = this->_Right(_Fixnodeparent);

  003e7	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  003ea	50		 push	 eax
  003eb	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  003f0	83 c4 04	 add	 esp, 4
  003f3	8b 08		 mov	 ecx, DWORD PTR [eax]
  003f5	89 4d ec	 mov	 DWORD PTR __Pnode$[ebp], ecx

; 1293 : 					if (this->_Color(_Pnode) == this->_Red)

  003f8	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  003fb	50		 push	 eax
  003fc	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  00401	83 c4 04	 add	 esp, 4
  00404	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00407	85 c9		 test	 ecx, ecx
  00409	75 3b		 jne	 SHORT $LN14@erase@2

; 1294 : 						{	// rotate red up from right subtree
; 1295 : 						this->_Color(_Pnode) = this->_Black;

  0040b	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0040e	50		 push	 eax
  0040f	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  00414	83 c4 04	 add	 esp, 4
  00417	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1296 : 						this->_Color(_Fixnodeparent) = this->_Red;

  0041a	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  0041d	50		 push	 eax
  0041e	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  00423	83 c4 04	 add	 esp, 4
  00426	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1297 : 						_Lrotate(_Fixnodeparent);

  00429	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  0042c	50		 push	 eax
  0042d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00430	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Lrotate

; 1298 : 						_Pnode = this->_Right(_Fixnodeparent);

  00435	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00438	50		 push	 eax
  00439	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  0043e	83 c4 04	 add	 esp, 4
  00441	8b 08		 mov	 ecx, DWORD PTR [eax]
  00443	89 4d ec	 mov	 DWORD PTR __Pnode$[ebp], ecx
$LN14@erase@2:

; 1299 : 						}
; 1300 : 
; 1301 : 					if (this->_Isnil(_Pnode))

  00446	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00449	50		 push	 eax
  0044a	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  0044f	83 c4 04	 add	 esp, 4
  00452	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00455	85 c9		 test	 ecx, ecx
  00457	74 0b		 je	 SHORT $LN13@erase@2

; 1302 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

  00459	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  0045c	89 45 f4	 mov	 DWORD PTR __Fixnode$[ebp], eax

; 1303 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

  0045f	e9 15 01 00 00	 jmp	 $LN12@erase@2
$LN13@erase@2:

; 1304 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

  00464	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00467	50		 push	 eax
  00468	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  0046d	83 c4 04	 add	 esp, 4
  00470	8b 08		 mov	 ecx, DWORD PTR [eax]
  00472	51		 push	 ecx
  00473	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  00478	83 c4 04	 add	 esp, 4
  0047b	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0047e	83 fa 01	 cmp	 edx, 1
  00481	75 39		 jne	 SHORT $LN11@erase@2
  00483	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00486	50		 push	 eax
  00487	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  0048c	83 c4 04	 add	 esp, 4
  0048f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00491	51		 push	 ecx
  00492	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  00497	83 c4 04	 add	 esp, 4
  0049a	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0049d	83 fa 01	 cmp	 edx, 1
  004a0	75 1a		 jne	 SHORT $LN11@erase@2

; 1305 : 						{	// redden right subtree with black children
; 1306 : 						this->_Color(_Pnode) = this->_Red;

  004a2	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  004a5	50		 push	 eax
  004a6	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  004ab	83 c4 04	 add	 esp, 4
  004ae	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1307 : 						_Fixnode = _Fixnodeparent;

  004b1	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  004b4	89 45 f4	 mov	 DWORD PTR __Fixnode$[ebp], eax

; 1308 : 						}
; 1309 : 					else

  004b7	e9 bd 00 00 00	 jmp	 $LN12@erase@2
$LN11@erase@2:

; 1310 : 						{	// must rearrange right subtree
; 1311 : 						if (this->_Color(this->_Right(_Pnode))
; 1312 : 							== this->_Black)

  004bc	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  004bf	50		 push	 eax
  004c0	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  004c5	83 c4 04	 add	 esp, 4
  004c8	8b 08		 mov	 ecx, DWORD PTR [eax]
  004ca	51		 push	 ecx
  004cb	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  004d0	83 c4 04	 add	 esp, 4
  004d3	0f be 10	 movsx	 edx, BYTE PTR [eax]
  004d6	83 fa 01	 cmp	 edx, 1
  004d9	75 46		 jne	 SHORT $LN9@erase@2

; 1313 : 							{	// rotate red up from left sub-subtree
; 1314 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

  004db	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  004de	50		 push	 eax
  004df	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  004e4	83 c4 04	 add	 esp, 4
  004e7	8b 08		 mov	 ecx, DWORD PTR [eax]
  004e9	51		 push	 ecx
  004ea	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  004ef	83 c4 04	 add	 esp, 4
  004f2	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1315 : 							this->_Color(_Pnode) = this->_Red;

  004f5	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  004f8	50		 push	 eax
  004f9	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  004fe	83 c4 04	 add	 esp, 4
  00501	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1316 : 							_Rrotate(_Pnode);

  00504	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00507	50		 push	 eax
  00508	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0050b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Rrotate

; 1317 : 							_Pnode = this->_Right(_Fixnodeparent);

  00510	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00513	50		 push	 eax
  00514	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00519	83 c4 04	 add	 esp, 4
  0051c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0051e	89 4d ec	 mov	 DWORD PTR __Pnode$[ebp], ecx
$LN9@erase@2:

; 1318 : 							}
; 1319 : 
; 1320 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  00521	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00524	50		 push	 eax
  00525	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  0052a	83 c4 04	 add	 esp, 4
  0052d	8b f0		 mov	 esi, eax
  0052f	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00532	51		 push	 ecx
  00533	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  00538	83 c4 04	 add	 esp, 4
  0053b	8a 16		 mov	 dl, BYTE PTR [esi]
  0053d	88 10		 mov	 BYTE PTR [eax], dl

; 1321 : 						this->_Color(_Fixnodeparent) = this->_Black;

  0053f	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00542	50		 push	 eax
  00543	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  00548	83 c4 04	 add	 esp, 4
  0054b	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1322 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;

  0054e	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00551	50		 push	 eax
  00552	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00557	83 c4 04	 add	 esp, 4
  0055a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0055c	51		 push	 ecx
  0055d	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  00562	83 c4 04	 add	 esp, 4
  00565	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1323 : 						_Lrotate(_Fixnodeparent);

  00568	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  0056b	50		 push	 eax
  0056c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0056f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Lrotate

; 1324 : 						break;	// tree now recolored/rebalanced

  00574	e9 99 01 00 00	 jmp	 $LN16@erase@2
$LN12@erase@2:

; 1325 : 						}
; 1326 : 					}
; 1327 : 				else

  00579	e9 8f 01 00 00	 jmp	 $LN8@erase@2
$LN15@erase@2:

; 1328 : 					{	// fixup right subtree
; 1329 : 					_Pnode = this->_Left(_Fixnodeparent);

  0057e	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00581	50		 push	 eax
  00582	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00587	83 c4 04	 add	 esp, 4
  0058a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0058c	89 4d ec	 mov	 DWORD PTR __Pnode$[ebp], ecx

; 1330 : 					if (this->_Color(_Pnode) == this->_Red)

  0058f	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00592	50		 push	 eax
  00593	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  00598	83 c4 04	 add	 esp, 4
  0059b	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0059e	85 c9		 test	 ecx, ecx
  005a0	75 3b		 jne	 SHORT $LN7@erase@2

; 1331 : 						{	// rotate red up from left subtree
; 1332 : 						this->_Color(_Pnode) = this->_Black;

  005a2	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  005a5	50		 push	 eax
  005a6	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  005ab	83 c4 04	 add	 esp, 4
  005ae	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1333 : 						this->_Color(_Fixnodeparent) = this->_Red;

  005b1	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  005b4	50		 push	 eax
  005b5	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  005ba	83 c4 04	 add	 esp, 4
  005bd	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1334 : 						_Rrotate(_Fixnodeparent);

  005c0	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  005c3	50		 push	 eax
  005c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005c7	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Rrotate

; 1335 : 						_Pnode = this->_Left(_Fixnodeparent);

  005cc	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  005cf	50		 push	 eax
  005d0	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  005d5	83 c4 04	 add	 esp, 4
  005d8	8b 08		 mov	 ecx, DWORD PTR [eax]
  005da	89 4d ec	 mov	 DWORD PTR __Pnode$[ebp], ecx
$LN7@erase@2:

; 1336 : 						}
; 1337 : 					if (this->_Isnil(_Pnode))

  005dd	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  005e0	50		 push	 eax
  005e1	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  005e6	83 c4 04	 add	 esp, 4
  005e9	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  005ec	85 c9		 test	 ecx, ecx
  005ee	74 0b		 je	 SHORT $LN6@erase@2

; 1338 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

  005f0	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  005f3	89 45 f4	 mov	 DWORD PTR __Fixnode$[ebp], eax

; 1339 : 					else if (this->_Color(this->_Right(_Pnode)) ==

  005f6	e9 12 01 00 00	 jmp	 $LN8@erase@2
$LN6@erase@2:

; 1340 : 						this->_Black
; 1341 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

  005fb	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  005fe	50		 push	 eax
  005ff	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00604	83 c4 04	 add	 esp, 4
  00607	8b 08		 mov	 ecx, DWORD PTR [eax]
  00609	51		 push	 ecx
  0060a	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  0060f	83 c4 04	 add	 esp, 4
  00612	0f be 10	 movsx	 edx, BYTE PTR [eax]
  00615	83 fa 01	 cmp	 edx, 1
  00618	75 39		 jne	 SHORT $LN4@erase@2
  0061a	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0061d	50		 push	 eax
  0061e	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00623	83 c4 04	 add	 esp, 4
  00626	8b 08		 mov	 ecx, DWORD PTR [eax]
  00628	51		 push	 ecx
  00629	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  0062e	83 c4 04	 add	 esp, 4
  00631	0f be 10	 movsx	 edx, BYTE PTR [eax]
  00634	83 fa 01	 cmp	 edx, 1
  00637	75 1a		 jne	 SHORT $LN4@erase@2

; 1342 : 						{	// redden left subtree with black children
; 1343 : 						this->_Color(_Pnode) = this->_Red;

  00639	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0063c	50		 push	 eax
  0063d	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  00642	83 c4 04	 add	 esp, 4
  00645	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1344 : 						_Fixnode = _Fixnodeparent;

  00648	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  0064b	89 45 f4	 mov	 DWORD PTR __Fixnode$[ebp], eax

; 1345 : 						}
; 1346 : 					else

  0064e	e9 ba 00 00 00	 jmp	 $LN8@erase@2
$LN4@erase@2:

; 1347 : 						{	// must rearrange left subtree
; 1348 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

  00653	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00656	50		 push	 eax
  00657	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  0065c	83 c4 04	 add	 esp, 4
  0065f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00661	51		 push	 ecx
  00662	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  00667	83 c4 04	 add	 esp, 4
  0066a	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0066d	83 fa 01	 cmp	 edx, 1
  00670	75 46		 jne	 SHORT $LN2@erase@2

; 1349 : 							{	// rotate red up from right sub-subtree
; 1350 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

  00672	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00675	50		 push	 eax
  00676	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  0067b	83 c4 04	 add	 esp, 4
  0067e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00680	51		 push	 ecx
  00681	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  00686	83 c4 04	 add	 esp, 4
  00689	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1351 : 							this->_Color(_Pnode) = this->_Red;

  0068c	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0068f	50		 push	 eax
  00690	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  00695	83 c4 04	 add	 esp, 4
  00698	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1352 : 							_Lrotate(_Pnode);

  0069b	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0069e	50		 push	 eax
  0069f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006a2	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Lrotate

; 1353 : 							_Pnode = this->_Left(_Fixnodeparent);

  006a7	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  006aa	50		 push	 eax
  006ab	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  006b0	83 c4 04	 add	 esp, 4
  006b3	8b 08		 mov	 ecx, DWORD PTR [eax]
  006b5	89 4d ec	 mov	 DWORD PTR __Pnode$[ebp], ecx
$LN2@erase@2:

; 1354 : 							}
; 1355 : 
; 1356 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  006b8	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  006bb	50		 push	 eax
  006bc	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  006c1	83 c4 04	 add	 esp, 4
  006c4	8b f0		 mov	 esi, eax
  006c6	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  006c9	51		 push	 ecx
  006ca	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  006cf	83 c4 04	 add	 esp, 4
  006d2	8a 16		 mov	 dl, BYTE PTR [esi]
  006d4	88 10		 mov	 BYTE PTR [eax], dl

; 1357 : 						this->_Color(_Fixnodeparent) = this->_Black;

  006d6	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  006d9	50		 push	 eax
  006da	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  006df	83 c4 04	 add	 esp, 4
  006e2	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1358 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;

  006e5	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  006e8	50		 push	 eax
  006e9	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  006ee	83 c4 04	 add	 esp, 4
  006f1	8b 08		 mov	 ecx, DWORD PTR [eax]
  006f3	51		 push	 ecx
  006f4	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  006f9	83 c4 04	 add	 esp, 4
  006fc	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1359 : 						_Rrotate(_Fixnodeparent);

  006ff	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00702	50		 push	 eax
  00703	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00706	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Rrotate

; 1360 : 						break;	// tree now recolored/rebalanced

  0070b	eb 05		 jmp	 SHORT $LN16@erase@2
$LN8@erase@2:

; 1361 : 						}
; 1362 : 					}

  0070d	e9 82 fc ff ff	 jmp	 $LN17@erase@2
$LN16@erase@2:

; 1363 : 
; 1364 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

  00712	8b 45 f4	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  00715	50		 push	 eax
  00716	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  0071b	83 c4 04	 add	 esp, 4
  0071e	c6 00 01	 mov	 BYTE PTR [eax], 1
$LN19@erase@2:

; 1365 : 			}
; 1366 : 
; 1367 : 		_Dest_val(this->_Alval,
; 1368 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node

  00721	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  00724	50		 push	 eax
  00725	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAVTUnionInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Myval
  0072a	83 c4 04	 add	 esp, 4
  0072d	50		 push	 eax
  0072e	e8 00 00 00 00	 call	 ??$addressof@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@YAPAU?$pair@$$CBHPAVTUnionInfo@@@0@AAU10@@Z ; std::addressof<std::pair<int const ,TUnionInfo *> >
  00733	83 c4 04	 add	 esp, 4
  00736	50		 push	 eax
  00737	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0073a	83 c1 0d	 add	 ecx, 13			; 0000000dH
  0073d	51		 push	 ecx
  0073e	e8 00 00 00 00	 call	 ??$_Dest_val@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@U?$pair@$$CBHPAVTUnionInfo@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@0@PAU?$pair@$$CBHPAVTUnionInfo@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<int const ,TUnionInfo *> >,std::pair<int const ,TUnionInfo *> >
  00743	83 c4 08	 add	 esp, 8

; 1369 : 
; 1370 : 		this->_Alnod.deallocate(_Erasednode, 1);

  00746	6a 01		 push	 1
  00748	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  0074b	50		 push	 eax
  0074c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0074f	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00752	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node>::deallocate

; 1371 : 
; 1372 : 		if (0 < this->_Mysize)

  00757	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0075a	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0075e	76 0f		 jbe	 SHORT $LN1@erase@2

; 1373 : 			--this->_Mysize;

  00760	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00763	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00766	83 e9 01	 sub	 ecx, 1
  00769	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0076c	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN1@erase@2:

; 1374 : 
; 1375 : 		return (iterator(_Where._Ptr, this));	// return successor iterator

  0076f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00772	50		 push	 eax
  00773	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00776	51		 push	 ecx
  00777	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0077a	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >
  0077f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN42@erase@2:

; 1376 : 		}

  00782	5f		 pop	 edi
  00783	5e		 pop	 esi
  00784	5b		 pop	 ebx
  00785	8b e5		 mov	 esp, ebp
  00787	5d		 pop	 ebp
  00788	c2 08 00	 ret	 8
?erase@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::erase
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@AAV01@@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > ><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &>
; Function compile flags: /Odtp /ZI
;	COMDAT ?_Eqrange@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@V12@@2@ABH@Z
_TEXT	SEGMENT
tv154 = -92						; size = 4
__Last$ = -24						; size = 4
__First$ = -20						; size = 4
__Hinode$ = -16						; size = 4
__Lonode$ = -12						; size = 4
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?_Eqrange@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@V12@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Eqrange, COMDAT
; _this$ = ecx

; 1575 : 		{	// find leftmost node not less than _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1576 : 		_Nodeptr _Pnode = _Root();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Root
  00014	8b 00		 mov	 eax, DWORD PTR [eax]
  00016	89 45 f8	 mov	 DWORD PTR __Pnode$[ebp], eax

; 1577 : 		_Nodeptr _Lonode = this->_Myhead;	// end() if search fails

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001f	89 4d f4	 mov	 DWORD PTR __Lonode$[ebp], ecx

; 1578 : 		_Nodeptr _Hinode = this->_Myhead;	// end() if search fails

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00028	89 4d f0	 mov	 DWORD PTR __Hinode$[ebp], ecx
$LN9@Eqrange:

; 1579 : 
; 1580 : 		while (!this->_Isnil(_Pnode))

  0002b	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  00034	83 c4 04	 add	 esp, 4
  00037	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0003a	85 c9		 test	 ecx, ecx
  0003c	0f 85 88 00 00
	00		 jne	 $LN8@Eqrange

; 1581 : 			if (_DEBUG_LT_PRED(this->comp, this->_Key(_Pnode), _Keyval))

  00042	8b 45 0c	 mov	 eax, DWORD PTR __Keyval$[ebp]
  00045	50		 push	 eax
  00046	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00049	51		 push	 ecx
  0004a	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key
  0004f	83 c4 04	 add	 esp, 4
  00052	50		 push	 eax
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  0005b	0f b6 d0	 movzx	 edx, al
  0005e	85 d2		 test	 edx, edx
  00060	74 13		 je	 SHORT $LN7@Eqrange

; 1582 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

  00062	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  0006b	83 c4 04	 add	 esp, 4
  0006e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00070	89 4d f8	 mov	 DWORD PTR __Pnode$[ebp], ecx

; 1583 : 			else

  00073	eb 50		 jmp	 SHORT $LN6@Eqrange
$LN7@Eqrange:

; 1584 : 				{	// _Pnode not less than _Keyval, remember it
; 1585 : 				if (this->_Isnil(_Hinode)
; 1586 : 						&& _DEBUG_LT_PRED(this->comp, _Keyval,

  00075	8b 45 f0	 mov	 eax, DWORD PTR __Hinode$[ebp]
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  0007e	83 c4 04	 add	 esp, 4
  00081	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00084	85 c9		 test	 ecx, ecx
  00086	74 26		 je	 SHORT $LN5@Eqrange
  00088	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0008b	50		 push	 eax
  0008c	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key
  00091	83 c4 04	 add	 esp, 4
  00094	50		 push	 eax
  00095	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00098	51		 push	 ecx
  00099	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  000a1	0f b6 d0	 movzx	 edx, al
  000a4	85 d2		 test	 edx, edx
  000a6	74 06		 je	 SHORT $LN5@Eqrange

; 1587 : 						 this->_Key(_Pnode)))
; 1588 : 					_Hinode = _Pnode;	// _Pnode greater, remember it

  000a8	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  000ab	89 45 f0	 mov	 DWORD PTR __Hinode$[ebp], eax
$LN5@Eqrange:

; 1589 : 				_Lonode = _Pnode;

  000ae	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  000b1	89 45 f4	 mov	 DWORD PTR __Lonode$[ebp], eax

; 1590 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

  000b4	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  000bd	83 c4 04	 add	 esp, 4
  000c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c2	89 4d f8	 mov	 DWORD PTR __Pnode$[ebp], ecx
$LN6@Eqrange:

; 1591 : 				}

  000c5	e9 61 ff ff ff	 jmp	 $LN9@Eqrange
$LN8@Eqrange:

; 1592 : 
; 1593 : 		_Pnode = this->_Isnil(_Hinode) ? _Root()
; 1594 : 			: this->_Left(_Hinode);	// continue scan for upper bound

  000ca	8b 45 f0	 mov	 eax, DWORD PTR __Hinode$[ebp]
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  000d3	83 c4 04	 add	 esp, 4
  000d6	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  000d9	85 c9		 test	 ecx, ecx
  000db	74 0f		 je	 SHORT $LN12@Eqrange
  000dd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Root
  000e5	8b 10		 mov	 edx, DWORD PTR [eax]
  000e7	89 55 a4	 mov	 DWORD PTR tv154[ebp], edx
  000ea	eb 11		 jmp	 SHORT $LN13@Eqrange
$LN12@Eqrange:
  000ec	8b 45 f0	 mov	 eax, DWORD PTR __Hinode$[ebp]
  000ef	50		 push	 eax
  000f0	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  000f5	83 c4 04	 add	 esp, 4
  000f8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fa	89 4d a4	 mov	 DWORD PTR tv154[ebp], ecx
$LN13@Eqrange:
  000fd	8b 55 a4	 mov	 edx, DWORD PTR tv154[ebp]
  00100	89 55 f8	 mov	 DWORD PTR __Pnode$[ebp], edx
$LN4@Eqrange:

; 1595 : 		while (!this->_Isnil(_Pnode))

  00103	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  0010c	83 c4 04	 add	 esp, 4
  0010f	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00112	85 c9		 test	 ecx, ecx
  00114	75 4c		 jne	 SHORT $LN3@Eqrange

; 1596 : 			if (_DEBUG_LT_PRED(this->comp, _Keyval, this->_Key(_Pnode)))

  00116	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00119	50		 push	 eax
  0011a	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key
  0011f	83 c4 04	 add	 esp, 4
  00122	50		 push	 eax
  00123	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00126	51		 push	 ecx
  00127	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0012a	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  0012f	0f b6 d0	 movzx	 edx, al
  00132	85 d2		 test	 edx, edx
  00134	74 19		 je	 SHORT $LN2@Eqrange

; 1597 : 				{	// _Pnode greater than _Keyval, remember it
; 1598 : 				_Hinode = _Pnode;

  00136	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00139	89 45 f0	 mov	 DWORD PTR __Hinode$[ebp], eax

; 1599 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

  0013c	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0013f	50		 push	 eax
  00140	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00145	83 c4 04	 add	 esp, 4
  00148	8b 08		 mov	 ecx, DWORD PTR [eax]
  0014a	89 4d f8	 mov	 DWORD PTR __Pnode$[ebp], ecx

; 1600 : 				}
; 1601 : 			else

  0014d	eb 11		 jmp	 SHORT $LN1@Eqrange
$LN2@Eqrange:

; 1602 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

  0014f	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00152	50		 push	 eax
  00153	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00158	83 c4 04	 add	 esp, 4
  0015b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015d	89 4d f8	 mov	 DWORD PTR __Pnode$[ebp], ecx
$LN1@Eqrange:
  00160	eb a1		 jmp	 SHORT $LN4@Eqrange
$LN3@Eqrange:

; 1603 : 
; 1604 : 		iterator _First = iterator(_Lonode, this);

  00162	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00165	50		 push	 eax
  00166	8b 4d f4	 mov	 ecx, DWORD PTR __Lonode$[ebp]
  00169	51		 push	 ecx
  0016a	8d 4d ec	 lea	 ecx, DWORD PTR __First$[ebp]
  0016d	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >

; 1605 : 		iterator _Last = iterator(_Hinode, this);

  00172	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00175	50		 push	 eax
  00176	8b 4d f0	 mov	 ecx, DWORD PTR __Hinode$[ebp]
  00179	51		 push	 ecx
  0017a	8d 4d e8	 lea	 ecx, DWORD PTR __Last$[ebp]
  0017d	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >

; 1606 : 		return (_Pairii(_First, _Last));

  00182	8d 45 e8	 lea	 eax, DWORD PTR __Last$[ebp]
  00185	50		 push	 eax
  00186	8d 4d ec	 lea	 ecx, DWORD PTR __First$[ebp]
  00189	51		 push	 ecx
  0018a	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0018d	e8 00 00 00 00	 call	 ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@AAV01@@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > ><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &>
  00192	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1607 : 		}

  00195	5f		 pop	 edi
  00196	5e		 pop	 esi
  00197	5b		 pop	 ebx
  00198	8b e5		 mov	 esp, ebp
  0019a	5d		 pop	 ebp
  0019b	c2 08 00	 ret	 8
?_Eqrange@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@V12@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Eqrange
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@ABH@Z
_TEXT	SEGMENT
__Wherenode$ = -12					; size = 4
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 1741 : 		{	// find leftmost node not less than _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1742 : 		_Nodeptr _Pnode = _Root();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Root
  00014	8b 00		 mov	 eax, DWORD PTR [eax]
  00016	89 45 f8	 mov	 DWORD PTR __Pnode$[ebp], eax

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001f	89 4d f4	 mov	 DWORD PTR __Wherenode$[ebp], ecx
$LN4@Lbound:

; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00022	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  0002b	83 c4 04	 add	 esp, 4
  0002e	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00031	85 c9		 test	 ecx, ecx
  00033	75 4c		 jne	 SHORT $LN3@Lbound

; 1746 : 			if (_DEBUG_LT_PRED(this->comp, this->_Key(_Pnode), _Keyval))

  00035	8b 45 08	 mov	 eax, DWORD PTR __Keyval$[ebp]
  00038	50		 push	 eax
  00039	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0003c	51		 push	 ecx
  0003d	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key
  00042	83 c4 04	 add	 esp, 4
  00045	50		 push	 eax
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  0004e	0f b6 d0	 movzx	 edx, al
  00051	85 d2		 test	 edx, edx
  00053	74 13		 je	 SHORT $LN2@Lbound

; 1747 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

  00055	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  0005e	83 c4 04	 add	 esp, 4
  00061	8b 08		 mov	 ecx, DWORD PTR [eax]
  00063	89 4d f8	 mov	 DWORD PTR __Pnode$[ebp], ecx

; 1748 : 			else

  00066	eb 17		 jmp	 SHORT $LN1@Lbound
$LN2@Lbound:

; 1749 : 				{	// _Pnode not less than _Keyval, remember it
; 1750 : 				_Wherenode = _Pnode;

  00068	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0006b	89 45 f4	 mov	 DWORD PTR __Wherenode$[ebp], eax

; 1751 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

  0006e	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00077	83 c4 04	 add	 esp, 4
  0007a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007c	89 4d f8	 mov	 DWORD PTR __Pnode$[ebp], ecx
$LN1@Lbound:

; 1752 : 				}

  0007f	eb a1		 jmp	 SHORT $LN4@Lbound
$LN3@Lbound:

; 1753 : 
; 1754 : 		return (_Wherenode);	// return best remembered candidate

  00081	8b 45 f4	 mov	 eax, DWORD PTR __Wherenode$[ebp]

; 1755 : 		}

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node>::allocate
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >, COMDAT
; _this$ = ecx

; 542  : 		{	// construct base, and allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	51		 push	 ecx
  0000d	8b cc		 mov	 ecx, esp
  0000f	8d 45 0c	 lea	 eax, DWORD PTR __Al$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??0?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<int const ,TUnionInfo *> >::allocator<std::pair<int const ,TUnionInfo *> >
  00018	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  0001b	51		 push	 ecx
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ??0?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >

; 543  : 		this->_Mysize = 0;

  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

  0002e	6a 01		 push	 1
  00030	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00036	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node>::allocate
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 545  : 
; 546  : 		this->_Left(this->_Myhead) = this->_Myhead;

  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  0004d	83 c4 04	 add	 esp, 4
  00050	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00053	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00056	89 08		 mov	 DWORD PTR [eax], ecx

; 547  : 		this->_Parent(this->_Myhead) = this->_Myhead;

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0005e	51		 push	 ecx
  0005f	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00064	83 c4 04	 add	 esp, 4
  00067	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006a	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  0006d	89 08		 mov	 DWORD PTR [eax], ecx

; 548  : 		this->_Right(this->_Myhead) = this->_Myhead;

  0006f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00072	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00075	51		 push	 ecx
  00076	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  0007b	83 c4 04	 add	 esp, 4
  0007e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00081	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00084	89 08		 mov	 DWORD PTR [eax], ecx

; 549  : 		this->_Color(this->_Myhead) = this->_Black;

  00086	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00089	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0008c	51		 push	 ecx
  0008d	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  00092	83 c4 04	 add	 esp, 4
  00095	c6 00 01	 mov	 BYTE PTR [eax], 1

; 550  : 		this->_Isnil(this->_Myhead) = true;

  00098	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0009e	51		 push	 ecx
  0009f	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  000a4	83 c4 04	 add	 esp, 4
  000a7	c6 00 01	 mov	 BYTE PTR [eax], 1

; 551  : 		}

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil, COMDAT

; 611  : 		{	// return reference to nil flag in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 612  : 		return ((char&)(*_Pnode)._Isnil);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0000c	83 c0 15	 add	 eax, 21			; 00000015H

; 613  : 		}

  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left, COMDAT

; 621  : 		{	// return reference to left pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 622  : 		return ((_Nodepref)(*_Pnode)._Left);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 623  : 		}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent, COMDAT

; 626  : 		{	// return reference to parent pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 627  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0000c	83 c0 04	 add	 eax, 4

; 628  : 		}

  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right, COMDAT

; 631  : 		{	// return reference to right pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 632  : 		return ((_Nodepref)(*_Pnode)._Right);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0000c	83 c0 08	 add	 eax, 8

; 633  : 		}

  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAVTUnionInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAVTUnionInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Myval, COMDAT

; 636  : 		{	// return reference to value in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 637  : 		return ((reference)(*_Pnode)._Myval);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0000c	83 c0 0c	 add	 eax, 12			; 0000000cH

; 638  : 		}

  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAVTUnionInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Myval
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<int const ,TUnionInfo *> >::allocator<std::pair<int const ,TUnionInfo *> >, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<int const ,TUnionInfo *> >::allocator<std::pair<int const ,TUnionInfo *> >
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 182  : 		::operator delete(_Ptr);

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4

; 183  : 		}

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >, COMDAT
; _this$ = ecx

; 213  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Plist$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>

; 214  : 		}

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 270  : 		{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 271  : 		_Myiter _Tmp = *this;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	89 4d f8	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 272  : 		++*this;

  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator++

; 273  : 		return (_Tmp);

  0001c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001f	8b 4d f8	 mov	 ecx, DWORD PTR __Tmp$[ebp]
  00022	89 08		 mov	 DWORD PTR [eax], ecx
  00024	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 274  : 		}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator++
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with null node pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 39   : 		}

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Pnode$206655 = -8					; size = 4
_this$ = -4						; size = 4
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 58   : 		{	// preincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 59   : 		if (_Mytree::_Isnil(_Ptr))

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  00017	83 c4 04	 add	 esp, 4
  0001a	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0001d	85 d2		 test	 edx, edx
  0001f	74 05		 je	 SHORT $LN6@operator@3
  00021	e9 8d 00 00 00	 jmp	 $LN5@operator@3
$LN6@operator@3:

; 60   : 			;	// end() shouldn't be incremented, don't move
; 61   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	51		 push	 ecx
  0002c	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00031	83 c4 04	 add	 esp, 4
  00034	8b 10		 mov	 edx, DWORD PTR [eax]
  00036	52		 push	 edx
  00037	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  0003c	83 c4 04	 add	 esp, 4
  0003f	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00042	85 c0		 test	 eax, eax
  00044	75 20		 jne	 SHORT $LN2@operator@3

; 62   : 			_Ptr = _Mytree::_Min(
; 63   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree

  00046	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00049	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00051	83 c4 04	 add	 esp, 4
  00054	8b 10		 mov	 edx, DWORD PTR [eax]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?_Min@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Min
  0005c	83 c4 04	 add	 esp, 4
  0005f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	89 01		 mov	 DWORD PTR [ecx], eax

; 64   : 		else

  00064	eb 4d		 jmp	 SHORT $LN5@operator@3
$LN2@operator@3:

; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  00066	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00069	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006b	51		 push	 ecx
  0006c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00071	83 c4 04	 add	 esp, 4
  00074	8b 10		 mov	 edx, DWORD PTR [eax]
  00076	89 55 f8	 mov	 DWORD PTR __Pnode$206655[ebp], edx
  00079	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$206655[ebp]
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  00082	83 c4 04	 add	 esp, 4
  00085	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00088	85 c9		 test	 ecx, ecx
  0008a	75 1f		 jne	 SHORT $LN1@operator@3
  0008c	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$206655[ebp]
  0008f	50		 push	 eax
  00090	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00095	83 c4 04	 add	 esp, 4
  00098	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009d	3b 10		 cmp	 edx, DWORD PTR [eax]
  0009f	75 0a		 jne	 SHORT $LN1@operator@3

; 69   : 				_Ptr = _Pnode;	// ==> parent while right subtree

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$206655[ebp]
  000a7	89 08		 mov	 DWORD PTR [eax], ecx
  000a9	eb bb		 jmp	 SHORT $LN2@operator@3
$LN1@operator@3:

; 70   : 			_Ptr = _Pnode;	// ==> parent (head if end())

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$206655[ebp]
  000b1	89 08		 mov	 DWORD PTR [eax], ecx
$LN5@operator@3:

; 71   : 			}
; 72   : 		return (*this);

  000b3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 73   : 		}

  000b6	5f		 pop	 edi
  000b7	5e		 pop	 esi
  000b8	5b		 pop	 ebx
  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c3		 ret	 0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::operator++
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??0?$_Pair_base@$$CBHPAVTUnionInfo@@@std@@QAE@ABH$$QAPAVTUnionInfo@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@$$CBHPAVTUnionInfo@@@std@@QAE@ABH$$QAPAVTUnionInfo@@@Z PROC ; std::_Pair_base<int const ,TUnionInfo *>::_Pair_base<int const ,TUnionInfo *>, COMDAT
; _this$ = ecx

; 150  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00012	8b 11		 mov	 edx, DWORD PTR [ecx]
  00014	89 10		 mov	 DWORD PTR [eax], edx
  00016	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ??$move@AAPAVTUnionInfo@@@std@@YA$$QAPAVTUnionInfo@@AAPAV1@@Z ; std::move<TUnionInfo * &>
  0001f	83 c4 04	 add	 esp, 4
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	8b 10		 mov	 edx, DWORD PTR [eax]
  00027	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 151  : 		}

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 08 00	 ret	 8
??0?$_Pair_base@$$CBHPAVTUnionInfo@@@std@@QAE@ABH$$QAPAVTUnionInfo@@@Z ENDP ; std::_Pair_base<int const ,TUnionInfo *>::_Pair_base<int const ,TUnionInfo *>
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00012	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);

  00014	8b 45 0c	 mov	 eax, DWORD PTR __Pvector$[ebp]
  00017	50		 push	 eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ; std::_Iterator_base0::_Adopt

; 47   : 		}

  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >
; Function compile flags: /Odtp /ZI
;	COMDAT ?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z PROC ; std::vector<int,std::allocator<int> >::_Destroy, COMDAT
; _this$ = ecx

; 1269 : 		{	// destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 0c	 add	 eax, 12			; 0000000cH
  00012	50		 push	 eax
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0001a	52		 push	 edx
  0001b	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1271 : 		}

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 08 00	 ret	 8
?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z ENDP ; std::vector<int,std::allocator<int> >::_Destroy
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@H@std@@QAEXPAHI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@H@std@@QAEXPAHI@Z PROC		; std::allocator<int>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 182  : 		::operator delete(_Ptr);

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4

; 183  : 		}

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
?deallocate@?$allocator@H@std@@QAEXPAHI@Z ENDP		; std::allocator<int>::deallocate
_TEXT	ENDS
PUBLIC	??$_Allocate@H@std@@YAPAHIPAH@Z			; std::_Allocate<int>
; Function compile flags: /Odtp /ZI
;	COMDAT ?allocate@?$allocator@H@std@@QAEPAHI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@H@std@@QAEPAHI@Z PROC		; std::allocator<int>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 187  : 		return (_Allocate(_Count, (pointer)0));

  0000c	6a 00		 push	 0
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$_Allocate@H@std@@YAPAHIPAH@Z ; std::_Allocate<int>
  00017	83 c4 08	 add	 esp, 8

; 188  : 		}

  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	5b		 pop	 ebx
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
?allocate@?$allocator@H@std@@QAEPAHI@Z ENDP		; std::allocator<int>::allocate
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@H@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -76						; size = 4
__Count$ = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$allocator@H@std@@QBEIXZ PROC		; std::allocator<int>::max_size, COMDAT
; _this$ = ecx

; 217  : 		{	// estimate maximum array size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);

  0000c	c7 45 f8 ff ff
	ff 3f		 mov	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH

; 219  : 		return (0 < _Count ? _Count : 1);

  00013	83 7d f8 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00017	76 08		 jbe	 SHORT $LN3@max_size
  00019	8b 45 f8	 mov	 eax, DWORD PTR __Count$[ebp]
  0001c	89 45 b4	 mov	 DWORD PTR tv65[ebp], eax
  0001f	eb 07		 jmp	 SHORT $LN4@max_size
$LN3@max_size:
  00021	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv65[ebp], 1
$LN4@max_size:
  00028	8b 45 b4	 mov	 eax, DWORD PTR tv65[ebp]

; 220  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?max_size@?$allocator@H@std@@QBEIXZ ENDP		; std::allocator<int>::max_size
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1763 : 		{	// promote right node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1764 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00015	83 c4 04	 add	 esp, 4
  00018	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001a	89 4d f8	 mov	 DWORD PTR __Pnode$[ebp], ecx

; 1765 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

  0001d	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00026	83 c4 04	 add	 esp, 4
  00029	8b f0		 mov	 esi, eax
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  0002e	51		 push	 ecx
  0002f	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00034	83 c4 04	 add	 esp, 4
  00037	8b 16		 mov	 edx, DWORD PTR [esi]
  00039	89 10		 mov	 DWORD PTR [eax], edx

; 1766 : 
; 1767 : 		if (!this->_Isnil(this->_Left(_Pnode)))

  0003b	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00044	83 c4 04	 add	 esp, 4
  00047	8b 08		 mov	 ecx, DWORD PTR [eax]
  00049	51		 push	 ecx
  0004a	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  0004f	83 c4 04	 add	 esp, 4
  00052	0f be 10	 movsx	 edx, BYTE PTR [eax]
  00055	85 d2		 test	 edx, edx
  00057	75 1c		 jne	 SHORT $LN5@Lrotate

; 1768 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

  00059	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00062	83 c4 04	 add	 esp, 4
  00065	8b 08		 mov	 ecx, DWORD PTR [eax]
  00067	51		 push	 ecx
  00068	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  0006d	83 c4 04	 add	 esp, 4
  00070	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00073	89 10		 mov	 DWORD PTR [eax], edx
$LN5@Lrotate:

; 1769 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  00075	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  0007e	83 c4 04	 add	 esp, 4
  00081	8b f0		 mov	 esi, eax
  00083	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00086	51		 push	 ecx
  00087	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  0008c	83 c4 04	 add	 esp, 4
  0008f	8b 16		 mov	 edx, DWORD PTR [esi]
  00091	89 10		 mov	 DWORD PTR [eax], edx

; 1770 : 
; 1771 : 		if (_Wherenode == _Root())

  00093	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Root
  0009b	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  0009e	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000a0	75 0f		 jne	 SHORT $LN4@Lrotate

; 1772 : 			_Root() = _Pnode;

  000a2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Root
  000aa	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  000ad	89 08		 mov	 DWORD PTR [eax], ecx
  000af	eb 58		 jmp	 SHORT $LN3@Lrotate
$LN4@Lrotate:

; 1773 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

  000b1	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  000b4	50		 push	 eax
  000b5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  000ba	83 c4 04	 add	 esp, 4
  000bd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  000c5	83 c4 04	 add	 esp, 4
  000c8	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000cb	3b 10		 cmp	 edx, DWORD PTR [eax]
  000cd	75 1e		 jne	 SHORT $LN2@Lrotate

; 1774 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  000cf	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  000d2	50		 push	 eax
  000d3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  000d8	83 c4 04	 add	 esp, 4
  000db	8b 08		 mov	 ecx, DWORD PTR [eax]
  000dd	51		 push	 ecx
  000de	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  000e3	83 c4 04	 add	 esp, 4
  000e6	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  000e9	89 10		 mov	 DWORD PTR [eax], edx

; 1775 : 		else

  000eb	eb 1c		 jmp	 SHORT $LN3@Lrotate
$LN2@Lrotate:

; 1776 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  000ed	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  000f0	50		 push	 eax
  000f1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  000f6	83 c4 04	 add	 esp, 4
  000f9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fb	51		 push	 ecx
  000fc	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00101	83 c4 04	 add	 esp, 4
  00104	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00107	89 10		 mov	 DWORD PTR [eax], edx
$LN3@Lrotate:

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  00109	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0010c	50		 push	 eax
  0010d	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00112	83 c4 04	 add	 esp, 4
  00115	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  00118	89 08		 mov	 DWORD PTR [eax], ecx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  0011a	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0011d	50		 push	 eax
  0011e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00123	83 c4 04	 add	 esp, 4
  00126	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00129	89 08		 mov	 DWORD PTR [eax], ecx

; 1780 : 		}

  0012b	5f		 pop	 edi
  0012c	5e		 pop	 esi
  0012d	5b		 pop	 ebx
  0012e	8b e5		 mov	 esp, ebp
  00130	5d		 pop	 ebp
  00131	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Lrotate
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1793 : 		{	// promote left node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1794 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00015	83 c4 04	 add	 esp, 4
  00018	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001a	89 4d f8	 mov	 DWORD PTR __Pnode$[ebp], ecx

; 1795 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

  0001d	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00026	83 c4 04	 add	 esp, 4
  00029	8b f0		 mov	 esi, eax
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  0002e	51		 push	 ecx
  0002f	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00034	83 c4 04	 add	 esp, 4
  00037	8b 16		 mov	 edx, DWORD PTR [esi]
  00039	89 10		 mov	 DWORD PTR [eax], edx

; 1796 : 
; 1797 : 		if (!this->_Isnil(this->_Right(_Pnode)))

  0003b	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00044	83 c4 04	 add	 esp, 4
  00047	8b 08		 mov	 ecx, DWORD PTR [eax]
  00049	51		 push	 ecx
  0004a	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  0004f	83 c4 04	 add	 esp, 4
  00052	0f be 10	 movsx	 edx, BYTE PTR [eax]
  00055	85 d2		 test	 edx, edx
  00057	75 1c		 jne	 SHORT $LN5@Rrotate

; 1798 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

  00059	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00062	83 c4 04	 add	 esp, 4
  00065	8b 08		 mov	 ecx, DWORD PTR [eax]
  00067	51		 push	 ecx
  00068	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  0006d	83 c4 04	 add	 esp, 4
  00070	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00073	89 10		 mov	 DWORD PTR [eax], edx
$LN5@Rrotate:

; 1799 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  00075	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  0007e	83 c4 04	 add	 esp, 4
  00081	8b f0		 mov	 esi, eax
  00083	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00086	51		 push	 ecx
  00087	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  0008c	83 c4 04	 add	 esp, 4
  0008f	8b 16		 mov	 edx, DWORD PTR [esi]
  00091	89 10		 mov	 DWORD PTR [eax], edx

; 1800 : 
; 1801 : 		if (_Wherenode == _Root())

  00093	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Root
  0009b	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  0009e	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000a0	75 0f		 jne	 SHORT $LN4@Rrotate

; 1802 : 			_Root() = _Pnode;

  000a2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Root
  000aa	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  000ad	89 08		 mov	 DWORD PTR [eax], ecx
  000af	eb 58		 jmp	 SHORT $LN3@Rrotate
$LN4@Rrotate:

; 1803 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

  000b1	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  000b4	50		 push	 eax
  000b5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  000ba	83 c4 04	 add	 esp, 4
  000bd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  000c5	83 c4 04	 add	 esp, 4
  000c8	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000cb	3b 10		 cmp	 edx, DWORD PTR [eax]
  000cd	75 1e		 jne	 SHORT $LN2@Rrotate

; 1804 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  000cf	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  000d2	50		 push	 eax
  000d3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  000d8	83 c4 04	 add	 esp, 4
  000db	8b 08		 mov	 ecx, DWORD PTR [eax]
  000dd	51		 push	 ecx
  000de	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  000e3	83 c4 04	 add	 esp, 4
  000e6	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  000e9	89 10		 mov	 DWORD PTR [eax], edx

; 1805 : 		else

  000eb	eb 1c		 jmp	 SHORT $LN3@Rrotate
$LN2@Rrotate:

; 1806 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  000ed	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  000f0	50		 push	 eax
  000f1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  000f6	83 c4 04	 add	 esp, 4
  000f9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fb	51		 push	 ecx
  000fc	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00101	83 c4 04	 add	 esp, 4
  00104	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00107	89 10		 mov	 DWORD PTR [eax], edx
$LN3@Rrotate:

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  00109	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0010c	50		 push	 eax
  0010d	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00112	83 c4 04	 add	 esp, 4
  00115	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  00118	89 08		 mov	 DWORD PTR [eax], ecx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  0011a	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0011d	50		 push	 eax
  0011e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00123	83 c4 04	 add	 esp, 4
  00126	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00129	89 08		 mov	 DWORD PTR [eax], ecx

; 1810 : 		}

  0012b	5f		 pop	 edi
  0012c	5e		 pop	 esi
  0012d	5b		 pop	 ebx
  0012e	8b e5		 mov	 esp, ebp
  00130	5d		 pop	 ebp
  00131	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Rrotate
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color, COMDAT

; 606  : 		{	// return reference to color in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 607  : 		return ((char&)(*_Pnode)._Color);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0000c	83 c0 14	 add	 eax, 20			; 00000014H

; 608  : 		}

  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Max, COMDAT

; 641  : 		{	// return rightmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@Max:

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  00009	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00012	83 c4 04	 add	 esp, 4
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	51		 push	 ecx
  00018	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  0001d	83 c4 04	 add	 esp, 4
  00020	0f be 10	 movsx	 edx, BYTE PTR [eax]
  00023	85 d2		 test	 edx, edx
  00025	75 13		 jne	 SHORT $LN1@Max

; 643  : 			_Pnode = _Right(_Pnode);

  00027	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00030	83 c4 04	 add	 esp, 4
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 4d 08	 mov	 DWORD PTR __Pnode$[ebp], ecx
  00038	eb cf		 jmp	 SHORT $LN2@Max
$LN1@Max:

; 644  : 		return (_Pnode);

  0003a	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 645  : 		}

  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
?_Max@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Max
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Min, COMDAT

; 648  : 		{	// return leftmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@Min:

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  00009	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00012	83 c4 04	 add	 esp, 4
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	51		 push	 ecx
  00018	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  0001d	83 c4 04	 add	 esp, 4
  00020	0f be 10	 movsx	 edx, BYTE PTR [eax]
  00023	85 d2		 test	 edx, edx
  00025	75 13		 jne	 SHORT $LN1@Min

; 650  : 			_Pnode = _Left(_Pnode);

  00027	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00030	83 c4 04	 add	 esp, 4
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 4d 08	 mov	 DWORD PTR __Pnode$[ebp], ecx
  00038	eb cf		 jmp	 SHORT $LN2@Min
$LN1@Min:

; 651  : 		return (_Pnode);

  0003a	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 652  : 		}

  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
?_Min@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node><std::pair<int const ,TUnionInfo *> >
PUBLIC	??0?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z ; std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >, COMDAT
; _this$ = ecx

; 482  : 		{	// construct traits from _Parg and allocators from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR __Parg$[ebp]
  0000f	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00012	51		 push	 ecx
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	e8 00 00 00 00	 call	 ??0?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z ; std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>
  0001b	8d 45 0c	 lea	 eax, DWORD PTR __Al$[ebp]
  0001e	50		 push	 eax
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00025	e8 00 00 00 00	 call	 ??$?0U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node><std::pair<int const ,TUnionInfo *> >
  0002a	8d 45 0c	 lea	 eax, DWORD PTR __Al$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	83 c1 0d	 add	 ecx, 13			; 0000000dH
  00034	e8 00 00 00 00	 call	 ??0?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<int const ,TUnionInfo *> >::allocator<std::pair<int const ,TUnionInfo *> >

; 483  : 		}

  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 187  : 		return (_Allocate(_Count, (pointer)0));

  0000c	6a 00		 push	 0
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node>
  00017	83 c4 08	 add	 esp, 8

; 188  : 		}

  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	5b		 pop	 ebx
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node>::allocate
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 43   : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00012	89 08		 mov	 DWORD PTR [eax], ecx

; 44   : 		this->_Adopt(_Plist);

  00014	8b 45 0c	 mov	 eax, DWORD PTR __Plist$[ebp]
  00017	50		 push	 eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ; std::_Iterator_base0::_Adopt

; 45   : 		}

  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 08 00	 ret	 8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\map
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z PROC ; std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>, COMDAT
; _this$ = ecx

; 40   : 		{	// construct with specified comparator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 41   : 		}

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z ENDP ; std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$addressof@$$CBH@std@@YAPBHABH@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBH@std@@YAPBHABH@Z PROC			; std::addressof<int const >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 111  : 	return ((_Ty *) &(char&)_Val);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$addressof@$$CBH@std@@YAPBHABH@Z ENDP			; std::addressof<int const >
_TEXT	ENDS
PUBLIC	??$construct@AAH@?$allocator@H@std@@QAEXPAHAAH@Z ; std::allocator<int>::construct<int &>
PUBLIC	??$forward@AAH@std@@YAAAHAAH@Z			; std::forward<int &>
; Function compile flags: /Odtp /ZI
;	COMDAT ??$_Cons_val@V?$allocator@H@std@@HAAH@std@@YAXAAV?$allocator@H@0@PAHAAH@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@H@std@@HAAH@std@@YAXAAV?$allocator@H@0@PAHAAH@Z PROC ; std::_Cons_val<std::allocator<int>,int,int &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00009	8b 45 10	 mov	 eax, DWORD PTR __Src$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??$forward@AAH@std@@YAAAHAAH@Z ; std::forward<int &>
  00012	83 c4 04	 add	 esp, 4
  00015	50		 push	 eax
  00016	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]
  00019	51		 push	 ecx
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __Alval$[ebp]
  0001d	e8 00 00 00 00	 call	 ??$construct@AAH@?$allocator@H@std@@QAEXPAHAAH@Z ; std::allocator<int>::construct<int &>

; 281  : 	}

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$_Cons_val@V?$allocator@H@std@@HAAH@std@@YAXAAV?$allocator@H@0@PAHAAH@Z ENDP ; std::_Cons_val<std::allocator<int>,int,int &>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@H@std@@QAEXPAHABH@Z	; std::allocator<int>::construct
PUBLIC	??$forward@ABH@std@@YAABHABH@Z			; std::forward<int const &>
; Function compile flags: /Odtp /ZI
;	COMDAT ??$_Cons_val@V?$allocator@H@std@@HABH@std@@YAXAAV?$allocator@H@0@PAHABH@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@H@std@@HABH@std@@YAXAAV?$allocator@H@0@PAHABH@Z PROC ; std::_Cons_val<std::allocator<int>,int,int const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00009	8b 45 10	 mov	 eax, DWORD PTR __Src$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??$forward@ABH@std@@YAABHABH@Z ; std::forward<int const &>
  00012	83 c4 04	 add	 esp, 4
  00015	50		 push	 eax
  00016	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]
  00019	51		 push	 ecx
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __Alval$[ebp]
  0001d	e8 00 00 00 00	 call	 ?construct@?$allocator@H@std@@QAEXPAHABH@Z ; std::allocator<int>::construct

; 281  : 	}

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$_Cons_val@V?$allocator@H@std@@HABH@std@@YAXAAV?$allocator@H@0@PAHABH@Z ENDP ; std::_Cons_val<std::allocator<int>,int,int const &>
_TEXT	ENDS
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Insert
PUBLIC	??$_Buynode@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Buynode<std::pair<int const ,TUnionInfo *> >
PUBLIC	??$forward@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@YA$$QAU?$pair@$$CBHPAVTUnionInfo@@@0@AAU10@@Z ; std::forward<std::pair<int const ,TUnionInfo *> >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??$insert@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
??$insert@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::insert<std::pair<int const ,TUnionInfo *> >, COMDAT
; _this$ = ecx

; 760  : 		typename _STD tr1::enable_if<!_STD tr1::is_same<const_iterator,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 761  : 			typename _STD tr1::remove_reference<_Valty>::type>::value,
; 762  : 				iterator>::type
; 763  : 		insert(const_iterator _Where,
; 764  : 			_Valty&& _Val)
; 765  : 		{	// try to insert node with value _Val using _Where as a hint
; 766  : 		return (_Insert(_Where,
; 767  : 			this->_Buynode(_STD forward<_Valty>(_Val))));

  0000c	8b 45 10	 mov	 eax, DWORD PTR __Val$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$forward@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@YA$$QAU?$pair@$$CBHPAVTUnionInfo@@@0@AAU10@@Z ; std::forward<std::pair<int const ,TUnionInfo *> >
  00015	83 c4 04	 add	 esp, 4
  00018	50		 push	 eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Buynode<std::pair<int const ,TUnionInfo *> >
  00021	50		 push	 eax
  00022	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00025	51		 push	 ecx
  00026	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00029	52		 push	 edx
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Insert
  00032	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 768  : 		}

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 0c 00	 ret	 12			; 0000000cH
??$insert@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::insert<std::pair<int const ,TUnionInfo *> >
_TEXT	ENDS
PUBLIC	??$_Distance2@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,unsigned int>
PUBLIC	??$_Iter_cat@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@@Z ; std::_Iter_cat<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Distance@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@0AAI@Z
_TEXT	SEGMENT
$T208243 = -65						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
??$_Distance@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@0AAI@Z PROC ; std::_Distance<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,unsigned int>, COMDAT

; 909  : 	{	// add to _Off distance between iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 910  : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

  00009	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d bf	 lea	 ecx, DWORD PTR $T208243[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ??$_Iter_cat@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@@Z ; std::_Iter_cat<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > >
  00016	83 c4 08	 add	 esp, 8
  00019	0f b6 10	 movzx	 edx, BYTE PTR [eax]
  0001c	52		 push	 edx
  0001d	8b 45 10	 mov	 eax, DWORD PTR __Off$[ebp]
  00020	50		 push	 eax
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00024	51		 push	 ecx
  00025	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00028	52		 push	 edx
  00029	e8 00 00 00 00	 call	 ??$_Distance2@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,unsigned int>
  0002e	83 c4 10	 add	 esp, 16			; 00000010H

; 911  : 	}

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
??$_Distance@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@0AAI@Z ENDP ; std::_Distance<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,unsigned int>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$addressof@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@YAPAU?$pair@$$CBHPAVTUnionInfo@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@YAPAU?$pair@$$CBHPAVTUnionInfo@@@0@AAU10@@Z PROC ; std::addressof<std::pair<int const ,TUnionInfo *> >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 111  : 	return ((_Ty *) &(char&)_Val);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$addressof@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@YAPAU?$pair@$$CBHPAVTUnionInfo@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<int const ,TUnionInfo *> >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVTUnionInfo@@@2@@Z ; std::allocator<std::pair<int const ,TUnionInfo *> >::destroy
; Function compile flags: /Odtp /ZI
;	COMDAT ??$_Dest_val@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@U?$pair@$$CBHPAVTUnionInfo@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@0@PAU?$pair@$$CBHPAVTUnionInfo@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@U?$pair@$$CBHPAVTUnionInfo@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@0@PAU?$pair@$$CBHPAVTUnionInfo@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::pair<int const ,TUnionInfo *> >,std::pair<int const ,TUnionInfo *> >, COMDAT

; 286  : 	{	// destroy using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 287  : 	_Alval.destroy(_Pdest);

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR __Alval$[ebp]
  00010	e8 00 00 00 00	 call	 ?destroy@?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVTUnionInfo@@@2@@Z ; std::allocator<std::pair<int const ,TUnionInfo *> >::destroy

; 288  : 	}

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Dest_val@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@U?$pair@$$CBHPAVTUnionInfo@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@0@PAU?$pair@$$CBHPAVTUnionInfo@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::pair<int const ,TUnionInfo *> >,std::pair<int const ,TUnionInfo *> >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\map
_TEXT	ENDS
;	COMDAT ??$_Kfn@$$CBHPAVTUnionInfo@@@?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVTUnionInfo@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBHPAVTUnionInfo@@@?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVTUnionInfo@@@1@@Z PROC ; std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>::_Kfn<int const ,TUnionInfo *>, COMDAT

; 66   : 		static const _Kty& _Kfn(const _STD pair<_Ty1, _Ty2>& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 67   : 		{	// extract key from element value
; 68   : 		return (_Val.first);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 69   : 		}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Kfn@$$CBHPAVTUnionInfo@@@?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ENDP ; std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>::_Kfn<int const ,TUnionInfo *>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$move@AAPAVTUnionInfo@@@std@@YA$$QAPAVTUnionInfo@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAPAVTUnionInfo@@@std@@YA$$QAPAVTUnionInfo@@AAPAV1@@Z PROC ; std::move<TUnionInfo * &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$move@AAPAVTUnionInfo@@@std@@YA$$QAPAVTUnionInfo@@AAPAV1@@Z ENDP ; std::move<TUnionInfo * &>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z ; std::_Uninitialized_move<int *,int *,std::allocator<int> >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z PROC ; std::vector<int,std::allocator<int> >::_Umove<int *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 0c	 add	 eax, 12			; 0000000cH
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  0001a	52		 push	 edx
  0001b	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z ; std::_Uninitialized_move<int *,int *,std::allocator<int> >
  00024	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ENDP ; std::vector<int,std::allocator<int> >::_Umove<int *>
_TEXT	ENDS
PUBLIC	??$_Move@AAD@std@@YA$$QADAAD@Z			; std::_Move<char &>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Tmp$ = -1						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC				; std::swap<char>, COMDAT

; 101  : 	{	// exchange values stored at _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 102  : 	_Ty _Tmp = _Move(_Left);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??$_Move@AAD@std@@YA$$QADAAD@Z ; std::_Move<char &>
  00012	83 c4 04	 add	 esp, 4
  00015	8a 08		 mov	 cl, BYTE PTR [eax]
  00017	88 4d ff	 mov	 BYTE PTR __Tmp$[ebp], cl

; 103  : 	_Left = _Move(_Right);

  0001a	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ??$_Move@AAD@std@@YA$$QADAAD@Z ; std::_Move<char &>
  00023	83 c4 04	 add	 esp, 4
  00026	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00029	8a 10		 mov	 dl, BYTE PTR [eax]
  0002b	88 11		 mov	 BYTE PTR [ecx], dl

; 104  : 	_Right = _Move(_Tmp);

  0002d	8d 45 ff	 lea	 eax, DWORD PTR __Tmp$[ebp]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ??$_Move@AAD@std@@YA$$QADAAD@Z ; std::_Move<char &>
  00036	83 c4 04	 add	 esp, 4
  00039	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0003c	8a 10		 mov	 dl, BYTE PTR [eax]
  0003e	88 11		 mov	 BYTE PTR [ecx], dl

; 105  : 	}

  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@AAV01@@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@0@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > >::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > ><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &>
PUBLIC	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &>
; Function compile flags: /Odtp /ZI
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@AAV01@@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@AAV01@@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@0@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > ><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &>
  00015	83 c4 04	 add	 esp, 4
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &>
  00022	83 c4 04	 add	 esp, 4
  00025	50		 push	 eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@AAV01@@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@0@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > >::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > ><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &>

; 248  : 		}

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@AAV01@@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@0@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > ><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<int> >
PUBLIC	??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z ; std::_Ptr_cat<int,int>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z
_TEXT	SEGMENT
$T208260 = -65						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z PROC ; std::_Destroy_range<std::allocator<int> >, COMDAT

; 87   : 	{	// destroy [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z ; std::_Ptr_cat<int,int>
  00016	83 c4 08	 add	 esp, 8
  00019	88 45 bf	 mov	 BYTE PTR $T208260[ebp], al
  0001c	0f b6 55 bf	 movzx	 edx, BYTE PTR $T208260[ebp]
  00020	52		 push	 edx
  00021	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  00024	50		 push	 eax
  00025	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00028	51		 push	 ecx
  00029	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0002c	52		 push	 edx
  0002d	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<int> >
  00032	83 c4 10	 add	 esp, 16			; 00000010H

; 89   : 	}

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z ENDP ; std::_Destroy_range<std::allocator<int> >
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ??$_Allocate@H@std@@YAPAHIPAH@Z
_TEXT	SEGMENT
$T208263 = -80						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@H@std@@YAPAHIPAH@Z PROC			; std::_Allocate<int>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 31   : 	void *_Ptr = 0;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0

; 32   : 
; 33   : 	if (_Count <= 0)

  00010	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00014	77 09		 ja	 SHORT $LN4@Allocate

; 34   : 		_Count = 0;

  00016	c7 45 08 00 00
	00 00		 mov	 DWORD PTR __Count$[ebp], 0

; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0001d	eb 39		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0001f	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH
  00026	77 18		 ja	 SHORT $LN1@Allocate
  00028	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0002b	c1 e0 02	 shl	 eax, 2
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00034	83 c4 04	 add	 esp, 4
  00037	89 45 fc	 mov	 DWORD PTR __Ptr$[ebp], eax
  0003a	83 7d fc 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0003e	75 18		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00040	6a 00		 push	 0
  00042	8d 4d b0	 lea	 ecx, DWORD PTR $T208263[ebp]
  00045	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QAE@PBD@Z ; std::bad_alloc::bad_alloc
  0004a	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0004f	8d 45 b0	 lea	 eax, DWORD PTR $T208263[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Allocate:

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00058	8b 45 fc	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 40   : 	}

  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi
  0005d	5b		 pop	 ebx
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
??$_Allocate@H@std@@YAPAHIPAH@Z ENDP			; std::_Allocate<int>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node><std::pair<int const ,TUnionInfo *> >, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??$?0U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node><std::pair<int const ,TUnionInfo *> >
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T208268 = -80						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 31   : 	void *_Ptr = 0;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0

; 32   : 
; 33   : 	if (_Count <= 0)

  00010	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00014	77 09		 ja	 SHORT $LN4@Allocate@2

; 34   : 		_Count = 0;

  00016	c7 45 08 00 00
	00 00		 mov	 DWORD PTR __Count$[ebp], 0

; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0001d	eb 39		 jmp	 SHORT $LN3@Allocate@2
$LN4@Allocate@2:

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0001f	81 7d 08 aa aa
	aa 0a		 cmp	 DWORD PTR __Count$[ebp], 178956970 ; 0aaaaaaaH
  00026	77 18		 ja	 SHORT $LN1@Allocate@2
  00028	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0002b	6b c0 18	 imul	 eax, 24			; 00000018H
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00034	83 c4 04	 add	 esp, 4
  00037	89 45 fc	 mov	 DWORD PTR __Ptr$[ebp], eax
  0003a	83 7d fc 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0003e	75 18		 jne	 SHORT $LN3@Allocate@2
$LN1@Allocate@2:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00040	6a 00		 push	 0
  00042	8d 4d b0	 lea	 ecx, DWORD PTR $T208268[ebp]
  00045	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QAE@PBD@Z ; std::bad_alloc::bad_alloc
  0004a	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0004f	8d 45 b0	 lea	 eax, DWORD PTR $T208268[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Allocate@2:

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00058	8b 45 fc	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@2:

; 40   : 	}

  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi
  0005d	5b		 pop	 ebx
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Construct@HABH@std@@YAXPAHABH@Z		; std::_Construct<int,int const &>
; Function compile flags: /Odtp /ZI
;	COMDAT ?construct@?$allocator@H@std@@QAEXPAHABH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@H@std@@QAEXPAHABH@Z PROC		; std::allocator<int>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 197  : 		_Construct(_Ptr, _Val);

  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ??$_Construct@HABH@std@@YAXPAHABH@Z ; std::_Construct<int,int const &>
  00019	83 c4 08	 add	 esp, 8

; 198  : 		}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
?construct@?$allocator@H@std@@QAEXPAHABH@Z ENDP		; std::allocator<int>::construct
_TEXT	ENDS
PUBLIC	?_Linsert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Linsert
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator--
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Insert
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::size
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
$T208273 = -112						; size = 4
$T208274 = -108						; size = 4
$T208275 = -104						; size = 4
$T208276 = -100						; size = 4
$T208277 = -96						; size = 4
$T208278 = -92						; size = 4
$T208279 = -88						; size = 8
__Leftish$ = -13					; size = 1
__Next$ = -12						; size = 4
__Val$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Node$ = 16						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 1089 : 		{	// try to insert node at _Node using _Where as a hint

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1090 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1091 : 		if (_Where._Getcont() != this)
; 1092 : 			_DEBUG_ERROR("map/set insert iterator outside range");
; 1093 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1094 : 
; 1095 : 		const value_type& _Val = this->_Myval(_Node);

  0000c	8b 45 10	 mov	 eax, DWORD PTR __Node$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAVTUnionInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Myval
  00015	83 c4 04	 add	 esp, 4
  00018	89 45 f8	 mov	 DWORD PTR __Val$[ebp], eax

; 1096 : 
; 1097 : 		const_iterator _Next;

  0001b	8d 4d f4	 lea	 ecx, DWORD PTR __Next$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >

; 1098 : 		bool _Leftish = false;	// assume nearest point is end of sequence

  00023	c6 45 f3 00	 mov	 BYTE PTR __Leftish$[ebp], 0

; 1099 : 
; 1100 : 		if (size() == 0)

  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?size@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::size
  0002f	85 c0		 test	 eax, eax
  00031	75 26		 jne	 SHORT $LN33@Insert

; 1101 : 			return (_Insert(true, this->_Myhead, _Node));	// empty tree

  00033	8b 45 10	 mov	 eax, DWORD PTR __Node$[ebp]
  00036	50		 push	 eax
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0003d	52		 push	 edx
  0003e	6a 01		 push	 1
  00040	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00043	50		 push	 eax
  00044	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Insert
  0004c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0004f	e9 a7 05 00 00	 jmp	 $LN34@Insert
  00054	e9 83 05 00 00	 jmp	 $LN32@Insert
$LN33@Insert:

; 1102 : 		else if (this->_Multi)

  00059	33 c0		 xor	 eax, eax
  0005b	0f 84 c8 02 00
	00		 je	 $LN31@Insert

; 1103 : 			{	// insert even if duplicate
; 1104 : 			if (_Where == begin())

  00061	8d 45 90	 lea	 eax, DWORD PTR $T208273[ebp]
  00064	50		 push	 eax
  00065	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::begin
  0006d	50		 push	 eax
  0006e	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00071	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator==
  00076	0f b6 c8	 movzx	 ecx, al
  00079	85 c9		 test	 ecx, ecx
  0007b	74 5a		 je	 SHORT $LN30@Insert

; 1105 : 				{	// insert at beginning if before first element
; 1106 : 				if (!_DEBUG_LT_PRED(this->comp,

  0007d	8b 45 f8	 mov	 eax, DWORD PTR __Val$[ebp]
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 ??$_Kfn@$$CBHPAVTUnionInfo@@@?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ; std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>::_Kfn<int const ,TUnionInfo *>
  00086	83 c4 04	 add	 esp, 4
  00089	50		 push	 eax
  0008a	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0008d	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key
  00098	83 c4 04	 add	 esp, 4
  0009b	50		 push	 eax
  0009c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  000a4	0f b6 c8	 movzx	 ecx, al
  000a7	85 c9		 test	 ecx, ecx
  000a9	75 23		 jne	 SHORT $LN29@Insert

; 1107 : 					this->_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 1108 : 					return (_Insert(true, _Where._Mynode(), _Node));

  000ab	8b 45 10	 mov	 eax, DWORD PTR __Node$[ebp]
  000ae	50		 push	 eax
  000af	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  000b2	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  000b7	50		 push	 eax
  000b8	6a 01		 push	 1
  000ba	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000bd	51		 push	 ecx
  000be	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Insert
  000c6	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000c9	e9 2d 05 00 00	 jmp	 $LN34@Insert
$LN29@Insert:

; 1109 : 				_Leftish = true;	// nearest point is beginning of sequence

  000ce	c6 45 f3 01	 mov	 BYTE PTR __Leftish$[ebp], 1
  000d2	e9 4d 02 00 00	 jmp	 $LN28@Insert
$LN30@Insert:

; 1110 : 				}
; 1111 : 			else if (_Where == end())

  000d7	8d 45 94	 lea	 eax, DWORD PTR $T208274[ebp]
  000da	50		 push	 eax
  000db	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000de	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::end
  000e3	50		 push	 eax
  000e4	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  000e7	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator==
  000ec	0f b6 c8	 movzx	 ecx, al
  000ef	85 c9		 test	 ecx, ecx
  000f1	74 5a		 je	 SHORT $LN27@Insert

; 1112 : 				{	// insert at end if after last element
; 1113 : 				if (!_DEBUG_LT_PRED(this->comp,

  000f3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f6	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Rmost
  000fb	8b 00		 mov	 eax, DWORD PTR [eax]
  000fd	50		 push	 eax
  000fe	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key
  00103	83 c4 04	 add	 esp, 4
  00106	50		 push	 eax
  00107	8b 4d f8	 mov	 ecx, DWORD PTR __Val$[ebp]
  0010a	51		 push	 ecx
  0010b	e8 00 00 00 00	 call	 ??$_Kfn@$$CBHPAVTUnionInfo@@@?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ; std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>::_Kfn<int const ,TUnionInfo *>
  00110	83 c4 04	 add	 esp, 4
  00113	50		 push	 eax
  00114	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  0011c	0f b6 d0	 movzx	 edx, al
  0011f	85 d2		 test	 edx, edx
  00121	75 25		 jne	 SHORT $LN26@Insert

; 1114 : 					this->_Kfn(_Val), this->_Key(_Rmost())))
; 1115 : 					return (_Insert(false, _Rmost(), _Node));

  00123	8b 45 10	 mov	 eax, DWORD PTR __Node$[ebp]
  00126	50		 push	 eax
  00127	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0012a	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Rmost
  0012f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00131	51		 push	 ecx
  00132	6a 00		 push	 0
  00134	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00137	52		 push	 edx
  00138	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0013b	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Insert
  00140	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00143	e9 b3 04 00 00	 jmp	 $LN34@Insert
$LN26@Insert:

; 1116 : 				}
; 1117 : 			else if (!_DEBUG_LT_PRED(this->comp,

  00148	e9 d7 01 00 00	 jmp	 $LN28@Insert
$LN27@Insert:

; 1118 : 				this->_Key(_Where._Mynode()), this->_Kfn(_Val))
; 1119 : 				&& !_DEBUG_LT_PRED(this->comp,

  0014d	8b 45 f8	 mov	 eax, DWORD PTR __Val$[ebp]
  00150	50		 push	 eax
  00151	e8 00 00 00 00	 call	 ??$_Kfn@$$CBHPAVTUnionInfo@@@?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ; std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>::_Kfn<int const ,TUnionInfo *>
  00156	83 c4 04	 add	 esp, 4
  00159	50		 push	 eax
  0015a	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0015d	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  00162	50		 push	 eax
  00163	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key
  00168	83 c4 04	 add	 esp, 4
  0016b	50		 push	 eax
  0016c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  00174	0f b6 c8	 movzx	 ecx, al
  00177	85 c9		 test	 ecx, ecx
  00179	0f 85 ab 00 00
	00		 jne	 $LN24@Insert
  0017f	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  00182	89 45 f4	 mov	 DWORD PTR __Next$[ebp], eax
  00185	8d 4d f4	 lea	 ecx, DWORD PTR __Next$[ebp]
  00188	e8 00 00 00 00	 call	 ??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator--
  0018d	8b c8		 mov	 ecx, eax
  0018f	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  00194	50		 push	 eax
  00195	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key
  0019a	83 c4 04	 add	 esp, 4
  0019d	50		 push	 eax
  0019e	8b 4d f8	 mov	 ecx, DWORD PTR __Val$[ebp]
  001a1	51		 push	 ecx
  001a2	e8 00 00 00 00	 call	 ??$_Kfn@$$CBHPAVTUnionInfo@@@?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ; std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>::_Kfn<int const ,TUnionInfo *>
  001a7	83 c4 04	 add	 esp, 4
  001aa	50		 push	 eax
  001ab	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001ae	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  001b3	0f b6 d0	 movzx	 edx, al
  001b6	85 d2		 test	 edx, edx
  001b8	75 70		 jne	 SHORT $LN24@Insert

; 1120 : 					this->_Kfn(_Val),
; 1121 : 					this->_Key((--(_Next = _Where))._Mynode())))
; 1122 : 				{	// insert before _Where
; 1123 : 				if (this->_Isnil(this->_Right(_Next._Mynode())))

  001ba	8d 4d f4	 lea	 ecx, DWORD PTR __Next$[ebp]
  001bd	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  001c2	50		 push	 eax
  001c3	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  001c8	83 c4 04	 add	 esp, 4
  001cb	8b 00		 mov	 eax, DWORD PTR [eax]
  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  001d3	83 c4 04	 add	 esp, 4
  001d6	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  001d9	85 c9		 test	 ecx, ecx
  001db	74 25		 je	 SHORT $LN23@Insert

; 1124 : 					return (_Insert(false, _Next._Mynode(), _Node));

  001dd	8b 45 10	 mov	 eax, DWORD PTR __Node$[ebp]
  001e0	50		 push	 eax
  001e1	8d 4d f4	 lea	 ecx, DWORD PTR __Next$[ebp]
  001e4	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  001e9	50		 push	 eax
  001ea	6a 00		 push	 0
  001ec	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  001ef	51		 push	 ecx
  001f0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001f3	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Insert
  001f8	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  001fb	e9 fb 03 00 00	 jmp	 $LN34@Insert

; 1125 : 				else

  00200	eb 23		 jmp	 SHORT $LN22@Insert
$LN23@Insert:

; 1126 : 					return (_Insert(true, _Where._Mynode(), _Node));

  00202	8b 45 10	 mov	 eax, DWORD PTR __Node$[ebp]
  00205	50		 push	 eax
  00206	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00209	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  0020e	50		 push	 eax
  0020f	6a 01		 push	 1
  00211	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00214	51		 push	 ecx
  00215	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00218	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Insert
  0021d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00220	e9 d6 03 00 00	 jmp	 $LN34@Insert
$LN22@Insert:

; 1127 : 				}
; 1128 : 			else if (!_DEBUG_LT_PRED(this->comp,

  00225	e9 fa 00 00 00	 jmp	 $LN28@Insert
$LN24@Insert:

; 1129 : 				this->_Kfn(_Val), this->_Key(_Where._Mynode()))
; 1130 : 				&& (++(_Next = _Where) == end()
; 1131 : 					|| !_DEBUG_LT_PRED(this->comp,

  0022a	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0022d	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  00232	50		 push	 eax
  00233	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key
  00238	83 c4 04	 add	 esp, 4
  0023b	50		 push	 eax
  0023c	8b 45 f8	 mov	 eax, DWORD PTR __Val$[ebp]
  0023f	50		 push	 eax
  00240	e8 00 00 00 00	 call	 ??$_Kfn@$$CBHPAVTUnionInfo@@@?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ; std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>::_Kfn<int const ,TUnionInfo *>
  00245	83 c4 04	 add	 esp, 4
  00248	50		 push	 eax
  00249	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0024c	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  00251	0f b6 c8	 movzx	 ecx, al
  00254	85 c9		 test	 ecx, ecx
  00256	0f 85 c4 00 00
	00		 jne	 $LN20@Insert
  0025c	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  0025f	89 45 f4	 mov	 DWORD PTR __Next$[ebp], eax
  00262	8d 4d 98	 lea	 ecx, DWORD PTR $T208275[ebp]
  00265	51		 push	 ecx
  00266	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00269	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::end
  0026e	50		 push	 eax
  0026f	8d 4d f4	 lea	 ecx, DWORD PTR __Next$[ebp]
  00272	e8 00 00 00 00	 call	 ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator++
  00277	8b c8		 mov	 ecx, eax
  00279	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator==
  0027e	0f b6 d0	 movzx	 edx, al
  00281	85 d2		 test	 edx, edx
  00283	75 2e		 jne	 SHORT $LN19@Insert
  00285	8b 45 f8	 mov	 eax, DWORD PTR __Val$[ebp]
  00288	50		 push	 eax
  00289	e8 00 00 00 00	 call	 ??$_Kfn@$$CBHPAVTUnionInfo@@@?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ; std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>::_Kfn<int const ,TUnionInfo *>
  0028e	83 c4 04	 add	 esp, 4
  00291	50		 push	 eax
  00292	8d 4d f4	 lea	 ecx, DWORD PTR __Next$[ebp]
  00295	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  0029a	50		 push	 eax
  0029b	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key
  002a0	83 c4 04	 add	 esp, 4
  002a3	50		 push	 eax
  002a4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002a7	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  002ac	0f b6 c8	 movzx	 ecx, al
  002af	85 c9		 test	 ecx, ecx
  002b1	75 6d		 jne	 SHORT $LN20@Insert
$LN19@Insert:

; 1132 : 						this->_Key(_Next._Mynode()), this->_Kfn(_Val))))
; 1133 : 				{	// insert after _Where
; 1134 : 				if (this->_Isnil(this->_Right(_Where._Mynode())))

  002b3	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  002b6	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  002bb	50		 push	 eax
  002bc	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  002c1	83 c4 04	 add	 esp, 4
  002c4	8b 00		 mov	 eax, DWORD PTR [eax]
  002c6	50		 push	 eax
  002c7	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  002cc	83 c4 04	 add	 esp, 4
  002cf	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  002d2	85 c9		 test	 ecx, ecx
  002d4	74 25		 je	 SHORT $LN18@Insert

; 1135 : 					return (_Insert(false, _Where._Mynode(), _Node));

  002d6	8b 45 10	 mov	 eax, DWORD PTR __Node$[ebp]
  002d9	50		 push	 eax
  002da	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  002dd	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  002e2	50		 push	 eax
  002e3	6a 00		 push	 0
  002e5	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  002e8	51		 push	 ecx
  002e9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002ec	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Insert
  002f1	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  002f4	e9 02 03 00 00	 jmp	 $LN34@Insert

; 1136 : 				else

  002f9	eb 23		 jmp	 SHORT $LN17@Insert
$LN18@Insert:

; 1137 : 					return (_Insert(true, _Next._Mynode(), _Node));

  002fb	8b 45 10	 mov	 eax, DWORD PTR __Node$[ebp]
  002fe	50		 push	 eax
  002ff	8d 4d f4	 lea	 ecx, DWORD PTR __Next$[ebp]
  00302	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  00307	50		 push	 eax
  00308	6a 01		 push	 1
  0030a	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0030d	51		 push	 ecx
  0030e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00311	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Insert
  00316	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00319	e9 dd 02 00 00	 jmp	 $LN34@Insert
$LN17@Insert:

; 1138 : 				}
; 1139 : 			else

  0031e	eb 04		 jmp	 SHORT $LN28@Insert
$LN20@Insert:

; 1140 : 				_Leftish = true;	// nearest point is beginning of sequence

  00320	c6 45 f3 01	 mov	 BYTE PTR __Leftish$[ebp], 1
$LN28@Insert:

; 1141 : 			}
; 1142 : 		else

  00324	e9 b3 02 00 00	 jmp	 $LN32@Insert
$LN31@Insert:

; 1143 : 			{	// insert only if unique
; 1144 : 			if (_Where == begin())

  00329	8d 45 9c	 lea	 eax, DWORD PTR $T208276[ebp]
  0032c	50		 push	 eax
  0032d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00330	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::begin
  00335	50		 push	 eax
  00336	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00339	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator==
  0033e	0f b6 c8	 movzx	 ecx, al
  00341	85 c9		 test	 ecx, ecx
  00343	74 56		 je	 SHORT $LN14@Insert

; 1145 : 				{	// insert at beginning if before first element
; 1146 : 				if (_DEBUG_LT_PRED(this->comp,

  00345	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00348	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  0034d	50		 push	 eax
  0034e	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key
  00353	83 c4 04	 add	 esp, 4
  00356	50		 push	 eax
  00357	8b 45 f8	 mov	 eax, DWORD PTR __Val$[ebp]
  0035a	50		 push	 eax
  0035b	e8 00 00 00 00	 call	 ??$_Kfn@$$CBHPAVTUnionInfo@@@?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ; std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>::_Kfn<int const ,TUnionInfo *>
  00360	83 c4 04	 add	 esp, 4
  00363	50		 push	 eax
  00364	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00367	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  0036c	0f b6 c8	 movzx	 ecx, al
  0036f	85 c9		 test	 ecx, ecx
  00371	74 23		 je	 SHORT $LN13@Insert

; 1147 : 					this->_Kfn(_Val), this->_Key(_Where._Mynode())))
; 1148 : 					return (_Insert(true, _Where._Mynode(), _Node));

  00373	8b 45 10	 mov	 eax, DWORD PTR __Node$[ebp]
  00376	50		 push	 eax
  00377	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0037a	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  0037f	50		 push	 eax
  00380	6a 01		 push	 1
  00382	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00385	51		 push	 ecx
  00386	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00389	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Insert
  0038e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00391	e9 65 02 00 00	 jmp	 $LN34@Insert
$LN13@Insert:

; 1149 : 				}

  00396	e9 41 02 00 00	 jmp	 $LN32@Insert
$LN14@Insert:

; 1150 : 			else if (_Where == end())

  0039b	8d 45 a0	 lea	 eax, DWORD PTR $T208277[ebp]
  0039e	50		 push	 eax
  0039f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003a2	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::end
  003a7	50		 push	 eax
  003a8	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  003ab	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator==
  003b0	0f b6 c8	 movzx	 ecx, al
  003b3	85 c9		 test	 ecx, ecx
  003b5	74 5a		 je	 SHORT $LN11@Insert

; 1151 : 				{	// insert at end if after last element
; 1152 : 				if (_DEBUG_LT_PRED(this->comp,

  003b7	8b 45 f8	 mov	 eax, DWORD PTR __Val$[ebp]
  003ba	50		 push	 eax
  003bb	e8 00 00 00 00	 call	 ??$_Kfn@$$CBHPAVTUnionInfo@@@?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ; std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>::_Kfn<int const ,TUnionInfo *>
  003c0	83 c4 04	 add	 esp, 4
  003c3	50		 push	 eax
  003c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003c7	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Rmost
  003cc	8b 08		 mov	 ecx, DWORD PTR [eax]
  003ce	51		 push	 ecx
  003cf	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key
  003d4	83 c4 04	 add	 esp, 4
  003d7	50		 push	 eax
  003d8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003db	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  003e0	0f b6 d0	 movzx	 edx, al
  003e3	85 d2		 test	 edx, edx
  003e5	74 25		 je	 SHORT $LN10@Insert

; 1153 : 					this->_Key(_Rmost()), this->_Kfn(_Val)))
; 1154 : 					return (_Insert(false, _Rmost(), _Node));

  003e7	8b 45 10	 mov	 eax, DWORD PTR __Node$[ebp]
  003ea	50		 push	 eax
  003eb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003ee	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Rmost
  003f3	8b 08		 mov	 ecx, DWORD PTR [eax]
  003f5	51		 push	 ecx
  003f6	6a 00		 push	 0
  003f8	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  003fb	52		 push	 edx
  003fc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003ff	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Insert
  00404	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00407	e9 ef 01 00 00	 jmp	 $LN34@Insert
$LN10@Insert:

; 1155 : 				}
; 1156 : 			else if (_DEBUG_LT_PRED(this->comp,

  0040c	e9 cb 01 00 00	 jmp	 $LN32@Insert
$LN11@Insert:

; 1157 : 				this->_Kfn(_Val), this->_Key(_Where._Mynode()))
; 1158 : 				&& _DEBUG_LT_PRED(this->comp,

  00411	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00414	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  00419	50		 push	 eax
  0041a	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key
  0041f	83 c4 04	 add	 esp, 4
  00422	50		 push	 eax
  00423	8b 45 f8	 mov	 eax, DWORD PTR __Val$[ebp]
  00426	50		 push	 eax
  00427	e8 00 00 00 00	 call	 ??$_Kfn@$$CBHPAVTUnionInfo@@@?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ; std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>::_Kfn<int const ,TUnionInfo *>
  0042c	83 c4 04	 add	 esp, 4
  0042f	50		 push	 eax
  00430	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00433	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  00438	0f b6 c8	 movzx	 ecx, al
  0043b	85 c9		 test	 ecx, ecx
  0043d	0f 84 ab 00 00
	00		 je	 $LN8@Insert
  00443	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  00446	89 45 f4	 mov	 DWORD PTR __Next$[ebp], eax
  00449	8b 4d f8	 mov	 ecx, DWORD PTR __Val$[ebp]
  0044c	51		 push	 ecx
  0044d	e8 00 00 00 00	 call	 ??$_Kfn@$$CBHPAVTUnionInfo@@@?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ; std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>::_Kfn<int const ,TUnionInfo *>
  00452	83 c4 04	 add	 esp, 4
  00455	50		 push	 eax
  00456	8d 4d f4	 lea	 ecx, DWORD PTR __Next$[ebp]
  00459	e8 00 00 00 00	 call	 ??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator--
  0045e	8b c8		 mov	 ecx, eax
  00460	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  00465	50		 push	 eax
  00466	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key
  0046b	83 c4 04	 add	 esp, 4
  0046e	50		 push	 eax
  0046f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00472	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  00477	0f b6 d0	 movzx	 edx, al
  0047a	85 d2		 test	 edx, edx
  0047c	74 70		 je	 SHORT $LN8@Insert

; 1159 : 					this->_Key((--(_Next = _Where))._Mynode()),
; 1160 : 					this->_Kfn(_Val)))
; 1161 : 				{	// insert before _Where
; 1162 : 				if (this->_Isnil(this->_Right(_Next._Mynode())))

  0047e	8d 4d f4	 lea	 ecx, DWORD PTR __Next$[ebp]
  00481	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  00486	50		 push	 eax
  00487	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  0048c	83 c4 04	 add	 esp, 4
  0048f	8b 00		 mov	 eax, DWORD PTR [eax]
  00491	50		 push	 eax
  00492	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  00497	83 c4 04	 add	 esp, 4
  0049a	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0049d	85 c9		 test	 ecx, ecx
  0049f	74 25		 je	 SHORT $LN7@Insert

; 1163 : 					return (_Insert(false, _Next._Mynode(), _Node));

  004a1	8b 45 10	 mov	 eax, DWORD PTR __Node$[ebp]
  004a4	50		 push	 eax
  004a5	8d 4d f4	 lea	 ecx, DWORD PTR __Next$[ebp]
  004a8	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  004ad	50		 push	 eax
  004ae	6a 00		 push	 0
  004b0	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  004b3	51		 push	 ecx
  004b4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004b7	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Insert
  004bc	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  004bf	e9 37 01 00 00	 jmp	 $LN34@Insert

; 1164 : 				else

  004c4	eb 23		 jmp	 SHORT $LN6@Insert
$LN7@Insert:

; 1165 : 					return (_Insert(true, _Where._Mynode(), _Node));

  004c6	8b 45 10	 mov	 eax, DWORD PTR __Node$[ebp]
  004c9	50		 push	 eax
  004ca	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  004cd	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  004d2	50		 push	 eax
  004d3	6a 01		 push	 1
  004d5	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  004d8	51		 push	 ecx
  004d9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004dc	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Insert
  004e1	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  004e4	e9 12 01 00 00	 jmp	 $LN34@Insert
$LN6@Insert:

; 1166 : 				}
; 1167 : 			else if (_DEBUG_LT_PRED(this->comp,

  004e9	e9 ee 00 00 00	 jmp	 $LN32@Insert
$LN8@Insert:

; 1168 : 				this->_Key(_Where._Mynode()), this->_Kfn(_Val))
; 1169 : 				&& (++(_Next = _Where) == end()
; 1170 : 					|| _DEBUG_LT_PRED(this->comp,

  004ee	8b 45 f8	 mov	 eax, DWORD PTR __Val$[ebp]
  004f1	50		 push	 eax
  004f2	e8 00 00 00 00	 call	 ??$_Kfn@$$CBHPAVTUnionInfo@@@?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ; std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>::_Kfn<int const ,TUnionInfo *>
  004f7	83 c4 04	 add	 esp, 4
  004fa	50		 push	 eax
  004fb	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  004fe	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  00503	50		 push	 eax
  00504	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key
  00509	83 c4 04	 add	 esp, 4
  0050c	50		 push	 eax
  0050d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00510	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  00515	0f b6 c8	 movzx	 ecx, al
  00518	85 c9		 test	 ecx, ecx
  0051a	0f 84 bc 00 00
	00		 je	 $LN32@Insert
  00520	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  00523	89 45 f4	 mov	 DWORD PTR __Next$[ebp], eax
  00526	8d 4d a4	 lea	 ecx, DWORD PTR $T208278[ebp]
  00529	51		 push	 ecx
  0052a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0052d	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::end
  00532	50		 push	 eax
  00533	8d 4d f4	 lea	 ecx, DWORD PTR __Next$[ebp]
  00536	e8 00 00 00 00	 call	 ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator++
  0053b	8b c8		 mov	 ecx, eax
  0053d	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator==
  00542	0f b6 d0	 movzx	 edx, al
  00545	85 d2		 test	 edx, edx
  00547	75 2e		 jne	 SHORT $LN3@Insert
  00549	8d 4d f4	 lea	 ecx, DWORD PTR __Next$[ebp]
  0054c	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  00551	50		 push	 eax
  00552	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key
  00557	83 c4 04	 add	 esp, 4
  0055a	50		 push	 eax
  0055b	8b 45 f8	 mov	 eax, DWORD PTR __Val$[ebp]
  0055e	50		 push	 eax
  0055f	e8 00 00 00 00	 call	 ??$_Kfn@$$CBHPAVTUnionInfo@@@?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ; std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>::_Kfn<int const ,TUnionInfo *>
  00564	83 c4 04	 add	 esp, 4
  00567	50		 push	 eax
  00568	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0056b	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  00570	0f b6 c8	 movzx	 ecx, al
  00573	85 c9		 test	 ecx, ecx
  00575	74 65		 je	 SHORT $LN32@Insert
$LN3@Insert:

; 1171 : 						this->_Kfn(_Val), this->_Key(_Next._Mynode()))))
; 1172 : 				{	// insert after _Where
; 1173 : 				if (this->_Isnil(this->_Right(_Where._Mynode())))

  00577	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0057a	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  0057f	50		 push	 eax
  00580	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00585	83 c4 04	 add	 esp, 4
  00588	8b 00		 mov	 eax, DWORD PTR [eax]
  0058a	50		 push	 eax
  0058b	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  00590	83 c4 04	 add	 esp, 4
  00593	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00596	85 c9		 test	 ecx, ecx
  00598	74 22		 je	 SHORT $LN2@Insert

; 1174 : 					return (_Insert(false, _Where._Mynode(), _Node));

  0059a	8b 45 10	 mov	 eax, DWORD PTR __Node$[ebp]
  0059d	50		 push	 eax
  0059e	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  005a1	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  005a6	50		 push	 eax
  005a7	6a 00		 push	 0
  005a9	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  005ac	51		 push	 ecx
  005ad	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005b0	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Insert
  005b5	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  005b8	eb 41		 jmp	 SHORT $LN34@Insert

; 1175 : 				else

  005ba	eb 20		 jmp	 SHORT $LN32@Insert
$LN2@Insert:

; 1176 : 					return (_Insert(true, _Next._Mynode(), _Node));

  005bc	8b 45 10	 mov	 eax, DWORD PTR __Node$[ebp]
  005bf	50		 push	 eax
  005c0	8d 4d f4	 lea	 ecx, DWORD PTR __Next$[ebp]
  005c3	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  005c8	50		 push	 eax
  005c9	6a 01		 push	 1
  005cb	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  005ce	51		 push	 ecx
  005cf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005d2	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Insert
  005d7	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  005da	eb 1f		 jmp	 SHORT $LN34@Insert
$LN32@Insert:

; 1177 : 				}
; 1178 : 			}
; 1179 : 
; 1180 : 		return (_Linsert(_Node, _Leftish).first);	// try usual insert

  005dc	0f b6 45 f3	 movzx	 eax, BYTE PTR __Leftish$[ebp]
  005e0	50		 push	 eax
  005e1	8b 4d 10	 mov	 ecx, DWORD PTR __Node$[ebp]
  005e4	51		 push	 ecx
  005e5	8d 55 a8	 lea	 edx, DWORD PTR $T208279[ebp]
  005e8	52		 push	 edx
  005e9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005ec	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Linsert
  005f1	8b 00		 mov	 eax, DWORD PTR [eax]
  005f3	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  005f6	89 01		 mov	 DWORD PTR [ecx], eax
  005f8	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN34@Insert:

; 1181 : 		}

  005fb	5f		 pop	 edi
  005fc	5e		 pop	 esi
  005fd	5b		 pop	 ebx
  005fe	8b e5		 mov	 esp, ebp
  00600	5d		 pop	 ebp
  00601	c2 0c 00	 ret	 12			; 0000000cH
?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Insert
_TEXT	ENDS
PUBLIC	??$_Destroy@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@YAXPAU?$pair@$$CBHPAVTUnionInfo@@@0@@Z ; std::_Destroy<std::pair<int const ,TUnionInfo *> >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVTUnionInfo@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVTUnionInfo@@@2@@Z PROC ; std::allocator<std::pair<int const ,TUnionInfo *> >::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 213  : 		_Destroy(_Ptr);

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$_Destroy@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@YAXPAU?$pair@$$CBHPAVTUnionInfo@@@0@@Z ; std::_Destroy<std::pair<int const ,TUnionInfo *> >
  00015	83 c4 04	 add	 esp, 4

; 214  : 		}

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?destroy@?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVTUnionInfo@@@2@@Z ENDP ; std::allocator<std::pair<int const ,TUnionInfo *> >::destroy
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::size, COMDAT
; _this$ = ecx

; 868  : 		{	// return length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 869  : 		return (this->_Mysize);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 870  : 		}

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::size
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &,bool>
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator--
PUBLIC	??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>
; Function compile flags: /Odtp /ZI
;	COMDAT ?_Linsert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@_N@Z
_TEXT	SEGMENT
tv147 = -124						; size = 4
$T208288 = -117						; size = 1
$T208289 = -116						; size = 4
$T208290 = -112						; size = 4
$T208291 = -105						; size = 1
$T208292 = -104						; size = 4
$T208293 = -97						; size = 1
$T208294 = -96						; size = 4
$T208295 = -89						; size = 1
__Where$207406 = -24					; size = 4
__Addleft$ = -17					; size = 1
__Wherenode$ = -16					; size = 4
__Trynode$ = -12					; size = 4
__Val$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Node$ = 12						; size = 4
__Leftish$ = 16						; size = 1
?_Linsert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@_N@Z PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Linsert, COMDAT
; _this$ = ecx

; 944  : 		{	// try to insert node at _Node, on left if _Leftish

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 945  : 		const value_type& _Val = this->_Myval(_Node);

  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Node$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAVTUnionInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Myval
  00015	83 c4 04	 add	 esp, 4
  00018	89 45 f8	 mov	 DWORD PTR __Val$[ebp], eax

; 946  : 
; 947  : 		_Nodeptr _Trynode = _Root();

  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Root
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
  00025	89 45 f4	 mov	 DWORD PTR __Trynode$[ebp], eax

; 948  : 		_Nodeptr _Wherenode = this->_Myhead;

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002e	89 4d f0	 mov	 DWORD PTR __Wherenode$[ebp], ecx

; 949  : 		bool _Addleft = true;	// add to left of head if tree empty

  00031	c6 45 ef 01	 mov	 BYTE PTR __Addleft$[ebp], 1
$LN12@Linsert:

; 950  : 		while (!this->_Isnil(_Trynode))

  00035	8b 45 f4	 mov	 eax, DWORD PTR __Trynode$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  0003e	83 c4 04	 add	 esp, 4
  00041	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00044	85 c9		 test	 ecx, ecx
  00046	0f 85 9b 00 00
	00		 jne	 $LN11@Linsert

; 951  : 			{	// look for leaf to insert before (_Addleft) or after
; 952  : 			_Wherenode = _Trynode;

  0004c	8b 45 f4	 mov	 eax, DWORD PTR __Trynode$[ebp]
  0004f	89 45 f0	 mov	 DWORD PTR __Wherenode$[ebp], eax

; 953  : 			if (_Leftish)

  00052	0f b6 45 10	 movzx	 eax, BYTE PTR __Leftish$[ebp]
  00056	85 c0		 test	 eax, eax
  00058	74 31		 je	 SHORT $LN10@Linsert

; 954  : 				_Addleft = !_DEBUG_LT_PRED(this->comp,

  0005a	8b 45 f8	 mov	 eax, DWORD PTR __Val$[ebp]
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ??$_Kfn@$$CBHPAVTUnionInfo@@@?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ; std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>::_Kfn<int const ,TUnionInfo *>
  00063	83 c4 04	 add	 esp, 4
  00066	50		 push	 eax
  00067	8b 4d f4	 mov	 ecx, DWORD PTR __Trynode$[ebp]
  0006a	51		 push	 ecx
  0006b	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key
  00070	83 c4 04	 add	 esp, 4
  00073	50		 push	 eax
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  0007c	0f b6 d0	 movzx	 edx, al
  0007f	f7 da		 neg	 edx
  00081	1b d2		 sbb	 edx, edx
  00083	83 c2 01	 add	 edx, 1
  00086	88 55 ef	 mov	 BYTE PTR __Addleft$[ebp], dl

; 955  : 					this->_Key(_Trynode),
; 956  : 					this->_Kfn(_Val));	// favor left end
; 957  : 			else

  00089	eb 25		 jmp	 SHORT $LN9@Linsert
$LN10@Linsert:

; 958  : 				_Addleft = _DEBUG_LT_PRED(this->comp,

  0008b	8b 45 f4	 mov	 eax, DWORD PTR __Trynode$[ebp]
  0008e	50		 push	 eax
  0008f	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key
  00094	83 c4 04	 add	 esp, 4
  00097	50		 push	 eax
  00098	8b 4d f8	 mov	 ecx, DWORD PTR __Val$[ebp]
  0009b	51		 push	 ecx
  0009c	e8 00 00 00 00	 call	 ??$_Kfn@$$CBHPAVTUnionInfo@@@?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ; std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>::_Kfn<int const ,TUnionInfo *>
  000a1	83 c4 04	 add	 esp, 4
  000a4	50		 push	 eax
  000a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  000ad	88 45 ef	 mov	 BYTE PTR __Addleft$[ebp], al
$LN9@Linsert:

; 959  : 					this->_Kfn(_Val),
; 960  : 					this->_Key(_Trynode));	// favor right end
; 961  : 			_Trynode = _Addleft ? this->_Left(_Trynode)
; 962  : 				: this->_Right(_Trynode);

  000b0	0f b6 45 ef	 movzx	 eax, BYTE PTR __Addleft$[ebp]
  000b4	85 c0		 test	 eax, eax
  000b6	74 13		 je	 SHORT $LN15@Linsert
  000b8	8b 4d f4	 mov	 ecx, DWORD PTR __Trynode$[ebp]
  000bb	51		 push	 ecx
  000bc	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  000c1	83 c4 04	 add	 esp, 4
  000c4	8b 10		 mov	 edx, DWORD PTR [eax]
  000c6	89 55 84	 mov	 DWORD PTR tv147[ebp], edx
  000c9	eb 11		 jmp	 SHORT $LN16@Linsert
$LN15@Linsert:
  000cb	8b 45 f4	 mov	 eax, DWORD PTR __Trynode$[ebp]
  000ce	50		 push	 eax
  000cf	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  000d4	83 c4 04	 add	 esp, 4
  000d7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d9	89 4d 84	 mov	 DWORD PTR tv147[ebp], ecx
$LN16@Linsert:
  000dc	8b 55 84	 mov	 edx, DWORD PTR tv147[ebp]
  000df	89 55 f4	 mov	 DWORD PTR __Trynode$[ebp], edx

; 963  : 			}

  000e2	e9 4e ff ff ff	 jmp	 $LN12@Linsert
$LN11@Linsert:

; 964  : 
; 965  : 		if (this->_Multi)

  000e7	33 c0		 xor	 eax, eax
  000e9	74 37		 je	 SHORT $LN8@Linsert

; 966  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));

  000eb	c6 45 8b 01	 mov	 BYTE PTR $T208288[ebp], 1
  000ef	8d 45 8b	 lea	 eax, DWORD PTR $T208288[ebp]
  000f2	50		 push	 eax
  000f3	8b 4d 0c	 mov	 ecx, DWORD PTR __Node$[ebp]
  000f6	51		 push	 ecx
  000f7	8b 55 f0	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000fa	52		 push	 edx
  000fb	0f b6 45 ef	 movzx	 eax, BYTE PTR __Addleft$[ebp]
  000ff	50		 push	 eax
  00100	8d 4d 8c	 lea	 ecx, DWORD PTR $T208289[ebp]
  00103	51		 push	 ecx
  00104	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00107	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Insert
  0010c	50		 push	 eax
  0010d	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00110	e8 00 00 00 00	 call	 ??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>
  00115	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00118	e9 20 01 00 00	 jmp	 $LN13@Linsert

; 967  : 		else

  0011d	e9 1b 01 00 00	 jmp	 $LN13@Linsert
$LN8@Linsert:

; 968  : 			{	// insert only if unique
; 969  : 			iterator _Where = iterator(_Wherenode, this);

  00122	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00125	50		 push	 eax
  00126	8b 4d f0	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  00129	51		 push	 ecx
  0012a	8d 4d e8	 lea	 ecx, DWORD PTR __Where$207406[ebp]
  0012d	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >

; 970  : 			if (!_Addleft)

  00132	0f b6 45 ef	 movzx	 eax, BYTE PTR __Addleft$[ebp]
  00136	85 c0		 test	 eax, eax
  00138	75 02		 jne	 SHORT $LN6@Linsert
  0013a	eb 55		 jmp	 SHORT $LN5@Linsert
$LN6@Linsert:

; 971  : 				;	// need to test if insert after is okay
; 972  : 			else if (_Where == begin())

  0013c	8d 45 90	 lea	 eax, DWORD PTR $T208290[ebp]
  0013f	50		 push	 eax
  00140	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00143	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::begin
  00148	50		 push	 eax
  00149	8d 4d e8	 lea	 ecx, DWORD PTR __Where$207406[ebp]
  0014c	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator==
  00151	0f b6 c8	 movzx	 ecx, al
  00154	85 c9		 test	 ecx, ecx
  00156	74 31		 je	 SHORT $LN4@Linsert

; 973  : 				return (_Pairib(_Insert(true, _Wherenode, _Node), true));

  00158	c6 45 97 01	 mov	 BYTE PTR $T208291[ebp], 1
  0015c	8d 45 97	 lea	 eax, DWORD PTR $T208291[ebp]
  0015f	50		 push	 eax
  00160	8b 4d 0c	 mov	 ecx, DWORD PTR __Node$[ebp]
  00163	51		 push	 ecx
  00164	8b 55 f0	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00167	52		 push	 edx
  00168	6a 01		 push	 1
  0016a	8d 45 98	 lea	 eax, DWORD PTR $T208292[ebp]
  0016d	50		 push	 eax
  0016e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00171	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Insert
  00176	50		 push	 eax
  00177	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0017a	e8 00 00 00 00	 call	 ??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>
  0017f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00182	e9 b6 00 00 00	 jmp	 $LN13@Linsert

; 974  : 			else

  00187	eb 08		 jmp	 SHORT $LN5@Linsert
$LN4@Linsert:

; 975  : 				--_Where;	// need to test if insert before is okay

  00189	8d 4d e8	 lea	 ecx, DWORD PTR __Where$207406[ebp]
  0018c	e8 00 00 00 00	 call	 ??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator--
$LN5@Linsert:

; 976  : 
; 977  : 			if (_DEBUG_LT_PRED(this->comp,

  00191	8b 45 f8	 mov	 eax, DWORD PTR __Val$[ebp]
  00194	50		 push	 eax
  00195	e8 00 00 00 00	 call	 ??$_Kfn@$$CBHPAVTUnionInfo@@@?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ; std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0>::_Kfn<int const ,TUnionInfo *>
  0019a	83 c4 04	 add	 esp, 4
  0019d	50		 push	 eax
  0019e	8d 4d e8	 lea	 ecx, DWORD PTR __Where$207406[ebp]
  001a1	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::_Mynode
  001a6	50		 push	 eax
  001a7	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Key
  001ac	83 c4 04	 add	 esp, 4
  001af	50		 push	 eax
  001b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b3	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  001b8	0f b6 c8	 movzx	 ecx, al
  001bb	85 c9		 test	 ecx, ecx
  001bd	74 31		 je	 SHORT $LN2@Linsert

; 978  : 				this->_Key(_Where._Mynode()),
; 979  : 				this->_Kfn(_Val)))
; 980  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));

  001bf	c6 45 9f 01	 mov	 BYTE PTR $T208293[ebp], 1
  001c3	8d 45 9f	 lea	 eax, DWORD PTR $T208293[ebp]
  001c6	50		 push	 eax
  001c7	8b 4d 0c	 mov	 ecx, DWORD PTR __Node$[ebp]
  001ca	51		 push	 ecx
  001cb	8b 55 f0	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  001ce	52		 push	 edx
  001cf	0f b6 45 ef	 movzx	 eax, BYTE PTR __Addleft$[ebp]
  001d3	50		 push	 eax
  001d4	8d 4d a0	 lea	 ecx, DWORD PTR $T208294[ebp]
  001d7	51		 push	 ecx
  001d8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001db	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Insert
  001e0	50		 push	 eax
  001e1	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  001e4	e8 00 00 00 00	 call	 ??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>
  001e9	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  001ec	eb 4f		 jmp	 SHORT $LN13@Linsert

; 981  : 			else

  001ee	eb 4d		 jmp	 SHORT $LN13@Linsert
$LN2@Linsert:

; 982  : 				{	// duplicate, don't insert
; 983  : 				_Dest_val(this->_Alval,
; 984  : 					_STD addressof(this->_Myval(_Node)));

  001f0	8b 45 0c	 mov	 eax, DWORD PTR __Node$[ebp]
  001f3	50		 push	 eax
  001f4	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAVTUnionInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Myval
  001f9	83 c4 04	 add	 esp, 4
  001fc	50		 push	 eax
  001fd	e8 00 00 00 00	 call	 ??$addressof@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@YAPAU?$pair@$$CBHPAVTUnionInfo@@@0@AAU10@@Z ; std::addressof<std::pair<int const ,TUnionInfo *> >
  00202	83 c4 04	 add	 esp, 4
  00205	50		 push	 eax
  00206	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00209	83 c1 0d	 add	 ecx, 13			; 0000000dH
  0020c	51		 push	 ecx
  0020d	e8 00 00 00 00	 call	 ??$_Dest_val@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@U?$pair@$$CBHPAVTUnionInfo@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@0@PAU?$pair@$$CBHPAVTUnionInfo@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<int const ,TUnionInfo *> >,std::pair<int const ,TUnionInfo *> >
  00212	83 c4 08	 add	 esp, 8

; 985  : 
; 986  : 				this->_Alnod.deallocate(_Node, 1);

  00215	6a 01		 push	 1
  00217	8b 45 0c	 mov	 eax, DWORD PTR __Node$[ebp]
  0021a	50		 push	 eax
  0021b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0021e	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00221	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node>::deallocate

; 987  : 
; 988  : 				return (_Pairib(_Where, false));

  00226	c6 45 a7 00	 mov	 BYTE PTR $T208295[ebp], 0
  0022a	8d 45 a7	 lea	 eax, DWORD PTR $T208295[ebp]
  0022d	50		 push	 eax
  0022e	8d 4d e8	 lea	 ecx, DWORD PTR __Where$207406[ebp]
  00231	51		 push	 ecx
  00232	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00235	e8 00 00 00 00	 call	 ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &,bool>
  0023a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN13@Linsert:

; 989  : 				}
; 990  : 			}
; 991  : 		}

  0023d	5f		 pop	 edi
  0023e	5e		 pop	 esi
  0023f	5b		 pop	 ebx
  00240	8b e5		 mov	 esp, ebp
  00242	5d		 pop	 ebp
  00243	c2 0c 00	 ret	 12			; 0000000cH
?_Linsert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@_N@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Linsert
_TEXT	ENDS
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::max_size
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@1@Z
_TEXT	SEGMENT
__Pnode$207439 = -8					; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@1@Z PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 1631 : 		{	// add node with value next to _Wherenode, to left if _Addleft

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1632 : 		if (max_size() - 1 <= this->_Mysize)

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?max_size@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::max_size
  00014	83 e8 01	 sub	 eax, 1
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  0001d	77 40		 ja	 SHORT $LN17@Insert@2

; 1633 : 			{	// tree would get too big, fail
; 1634 : 			_Dest_val(this->_Alval,
; 1635 : 				_STD addressof(this->_Myval(_Newnode)));

  0001f	8b 45 14	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAVTUnionInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Myval
  00028	83 c4 04	 add	 esp, 4
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$addressof@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@YAPAU?$pair@$$CBHPAVTUnionInfo@@@0@AAU10@@Z ; std::addressof<std::pair<int const ,TUnionInfo *> >
  00031	83 c4 04	 add	 esp, 4
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	83 c1 0d	 add	 ecx, 13			; 0000000dH
  0003b	51		 push	 ecx
  0003c	e8 00 00 00 00	 call	 ??$_Dest_val@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@U?$pair@$$CBHPAVTUnionInfo@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@0@PAU?$pair@$$CBHPAVTUnionInfo@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<int const ,TUnionInfo *> >,std::pair<int const ,TUnionInfo *> >
  00041	83 c4 08	 add	 esp, 8

; 1636 : 
; 1637 : 			this->_Alnod.deallocate(_Newnode, 1);

  00044	6a 01		 push	 1
  00046	8b 45 14	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00049	50		 push	 eax
  0004a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00050	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node>::deallocate

; 1638 : 
; 1639 : 			_Xlength_error("map/set<T> too long");

  00055	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0005a	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN17@Insert@2:

; 1640 : 			}
; 1641 : 		++this->_Mysize;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00065	83 c1 01	 add	 ecx, 1
  00068	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006b	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1642 : 		_Newnode->_Parent = _Wherenode;

  0006e	8b 45 14	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00071	8b 4d 10	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  00074	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 1643 : 
; 1644 : 		if (_Wherenode == this->_Myhead)

  00077	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007a	8b 4d 10	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  0007d	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00080	75 29		 jne	 SHORT $LN16@Insert@2

; 1645 : 			{	// first node in tree, just set head values
; 1646 : 			_Root() = _Newnode;

  00082	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Root
  0008a	8b 4d 14	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  0008d	89 08		 mov	 DWORD PTR [eax], ecx

; 1647 : 			_Lmost() = _Newnode;

  0008f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Lmost
  00097	8b 4d 14	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  0009a	89 08		 mov	 DWORD PTR [eax], ecx

; 1648 : 			_Rmost() = _Newnode;

  0009c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Rmost
  000a4	8b 4d 14	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  000a7	89 08		 mov	 DWORD PTR [eax], ecx
  000a9	eb 64		 jmp	 SHORT $LN15@Insert@2
$LN16@Insert@2:

; 1649 : 			}
; 1650 : 		else if (_Addleft)

  000ab	0f b6 45 0c	 movzx	 eax, BYTE PTR __Addleft$[ebp]
  000af	85 c0		 test	 eax, eax
  000b1	74 2f		 je	 SHORT $LN14@Insert@2

; 1651 : 			{	// add to left of _Wherenode
; 1652 : 			this->_Left(_Wherenode) = _Newnode;

  000b3	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  000b6	50		 push	 eax
  000b7	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  000bc	83 c4 04	 add	 esp, 4
  000bf	8b 4d 14	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  000c2	89 08		 mov	 DWORD PTR [eax], ecx

; 1653 : 			if (_Wherenode == _Lmost())

  000c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c7	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Lmost
  000cc	8b 4d 10	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  000cf	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000d1	75 0d		 jne	 SHORT $LN13@Insert@2

; 1654 : 				_Lmost() = _Newnode;

  000d3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d6	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Lmost
  000db	8b 4d 14	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  000de	89 08		 mov	 DWORD PTR [eax], ecx
$LN13@Insert@2:

; 1655 : 			}
; 1656 : 		else

  000e0	eb 2d		 jmp	 SHORT $LN15@Insert@2
$LN14@Insert@2:

; 1657 : 			{	// add to right of _Wherenode
; 1658 : 			this->_Right(_Wherenode) = _Newnode;

  000e2	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  000e5	50		 push	 eax
  000e6	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  000eb	83 c4 04	 add	 esp, 4
  000ee	8b 4d 14	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  000f1	89 08		 mov	 DWORD PTR [eax], ecx

; 1659 : 			if (_Wherenode == _Rmost())

  000f3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f6	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Rmost
  000fb	8b 4d 10	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  000fe	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00100	75 0d		 jne	 SHORT $LN15@Insert@2

; 1660 : 				_Rmost() = _Newnode;

  00102	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00105	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Rmost
  0010a	8b 4d 14	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  0010d	89 08		 mov	 DWORD PTR [eax], ecx
$LN15@Insert@2:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;

  0010f	8b 45 14	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00112	89 45 f8	 mov	 DWORD PTR __Pnode$207439[ebp], eax
$LN10@Insert@2:

; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  00115	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207439[ebp]
  00118	50		 push	 eax
  00119	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  0011e	83 c4 04	 add	 esp, 4
  00121	8b 08		 mov	 ecx, DWORD PTR [eax]
  00123	51		 push	 ecx
  00124	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  00129	83 c4 04	 add	 esp, 4
  0012c	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0012f	85 d2		 test	 edx, edx
  00131	0f 85 ce 02 00
	00		 jne	 $LN9@Insert@2

; 1665 : 			if (this->_Parent(_Pnode)
; 1666 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

  00137	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207439[ebp]
  0013a	50		 push	 eax
  0013b	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00140	83 c4 04	 add	 esp, 4
  00143	8b f0		 mov	 esi, eax
  00145	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$207439[ebp]
  00148	51		 push	 ecx
  00149	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  0014e	83 c4 04	 add	 esp, 4
  00151	8b 10		 mov	 edx, DWORD PTR [eax]
  00153	52		 push	 edx
  00154	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00159	83 c4 04	 add	 esp, 4
  0015c	8b 00		 mov	 eax, DWORD PTR [eax]
  0015e	50		 push	 eax
  0015f	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00164	83 c4 04	 add	 esp, 4
  00167	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00169	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0016b	0f 85 4a 01 00
	00		 jne	 $LN8@Insert@2

; 1667 : 				{	// fixup red-red in left subtree
; 1668 : 				_Wherenode =
; 1669 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));

  00171	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207439[ebp]
  00174	50		 push	 eax
  00175	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  0017a	83 c4 04	 add	 esp, 4
  0017d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0017f	51		 push	 ecx
  00180	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00185	83 c4 04	 add	 esp, 4
  00188	8b 10		 mov	 edx, DWORD PTR [eax]
  0018a	52		 push	 edx
  0018b	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  00190	83 c4 04	 add	 esp, 4
  00193	8b 00		 mov	 eax, DWORD PTR [eax]
  00195	89 45 10	 mov	 DWORD PTR __Wherenode$[ebp], eax

; 1670 : 				if (this->_Color(_Wherenode) == this->_Red)

  00198	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0019b	50		 push	 eax
  0019c	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  001a1	83 c4 04	 add	 esp, 4
  001a4	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  001a7	85 c9		 test	 ecx, ecx
  001a9	75 6f		 jne	 SHORT $LN7@Insert@2

; 1671 : 					{	// parent has two red children, blacken both
; 1672 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

  001ab	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207439[ebp]
  001ae	50		 push	 eax
  001af	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  001b4	83 c4 04	 add	 esp, 4
  001b7	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b9	51		 push	 ecx
  001ba	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  001bf	83 c4 04	 add	 esp, 4
  001c2	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1673 : 					this->_Color(_Wherenode) = this->_Black;

  001c5	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  001c8	50		 push	 eax
  001c9	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  001ce	83 c4 04	 add	 esp, 4
  001d1	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1674 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))
; 1675 : 						= this->_Red;

  001d4	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207439[ebp]
  001d7	50		 push	 eax
  001d8	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  001dd	83 c4 04	 add	 esp, 4
  001e0	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e2	51		 push	 ecx
  001e3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  001e8	83 c4 04	 add	 esp, 4
  001eb	8b 10		 mov	 edx, DWORD PTR [eax]
  001ed	52		 push	 edx
  001ee	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  001f3	83 c4 04	 add	 esp, 4
  001f6	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1676 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

  001f9	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207439[ebp]
  001fc	50		 push	 eax
  001fd	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00202	83 c4 04	 add	 esp, 4
  00205	8b 08		 mov	 ecx, DWORD PTR [eax]
  00207	51		 push	 ecx
  00208	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  0020d	83 c4 04	 add	 esp, 4
  00210	8b 10		 mov	 edx, DWORD PTR [eax]
  00212	89 55 f8	 mov	 DWORD PTR __Pnode$207439[ebp], edx

; 1677 : 					}
; 1678 : 				else

  00215	e9 9c 00 00 00	 jmp	 $LN6@Insert@2
$LN7@Insert@2:

; 1679 : 					{	// parent has red and black children
; 1680 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

  0021a	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207439[ebp]
  0021d	50		 push	 eax
  0021e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00223	83 c4 04	 add	 esp, 4
  00226	8b 08		 mov	 ecx, DWORD PTR [eax]
  00228	51		 push	 ecx
  00229	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  0022e	83 c4 04	 add	 esp, 4
  00231	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$207439[ebp]
  00234	3b 10		 cmp	 edx, DWORD PTR [eax]
  00236	75 1d		 jne	 SHORT $LN5@Insert@2

; 1681 : 						{	// rotate right child to left
; 1682 : 						_Pnode = this->_Parent(_Pnode);

  00238	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207439[ebp]
  0023b	50		 push	 eax
  0023c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00241	83 c4 04	 add	 esp, 4
  00244	8b 08		 mov	 ecx, DWORD PTR [eax]
  00246	89 4d f8	 mov	 DWORD PTR __Pnode$207439[ebp], ecx

; 1683 : 						_Lrotate(_Pnode);

  00249	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207439[ebp]
  0024c	50		 push	 eax
  0024d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00250	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Lrotate
$LN5@Insert@2:

; 1684 : 						}
; 1685 : 					this->_Color(this->_Parent(_Pnode)) =
; 1686 : 						this->_Black;	// propagate red up

  00255	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207439[ebp]
  00258	50		 push	 eax
  00259	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  0025e	83 c4 04	 add	 esp, 4
  00261	8b 08		 mov	 ecx, DWORD PTR [eax]
  00263	51		 push	 ecx
  00264	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  00269	83 c4 04	 add	 esp, 4
  0026c	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1687 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1688 : 						this->_Red;

  0026f	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207439[ebp]
  00272	50		 push	 eax
  00273	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00278	83 c4 04	 add	 esp, 4
  0027b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0027d	51		 push	 ecx
  0027e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00283	83 c4 04	 add	 esp, 4
  00286	8b 10		 mov	 edx, DWORD PTR [eax]
  00288	52		 push	 edx
  00289	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  0028e	83 c4 04	 add	 esp, 4
  00291	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

  00294	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207439[ebp]
  00297	50		 push	 eax
  00298	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  0029d	83 c4 04	 add	 esp, 4
  002a0	8b 08		 mov	 ecx, DWORD PTR [eax]
  002a2	51		 push	 ecx
  002a3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  002a8	83 c4 04	 add	 esp, 4
  002ab	8b 10		 mov	 edx, DWORD PTR [eax]
  002ad	52		 push	 edx
  002ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002b1	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Rrotate
$LN6@Insert@2:

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

  002b6	e9 45 01 00 00	 jmp	 $LN4@Insert@2
$LN8@Insert@2:

; 1693 : 				{	// fixup red-red in right subtree
; 1694 : 				_Wherenode =
; 1695 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));

  002bb	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207439[ebp]
  002be	50		 push	 eax
  002bf	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  002c4	83 c4 04	 add	 esp, 4
  002c7	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c9	51		 push	 ecx
  002ca	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  002cf	83 c4 04	 add	 esp, 4
  002d2	8b 10		 mov	 edx, DWORD PTR [eax]
  002d4	52		 push	 edx
  002d5	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  002da	83 c4 04	 add	 esp, 4
  002dd	8b 00		 mov	 eax, DWORD PTR [eax]
  002df	89 45 10	 mov	 DWORD PTR __Wherenode$[ebp], eax

; 1696 : 				if (this->_Color(_Wherenode) == this->_Red)

  002e2	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  002e5	50		 push	 eax
  002e6	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  002eb	83 c4 04	 add	 esp, 4
  002ee	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  002f1	85 c9		 test	 ecx, ecx
  002f3	75 6f		 jne	 SHORT $LN3@Insert@2

; 1697 : 					{	// parent has two red children, blacken both
; 1698 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

  002f5	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207439[ebp]
  002f8	50		 push	 eax
  002f9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  002fe	83 c4 04	 add	 esp, 4
  00301	8b 08		 mov	 ecx, DWORD PTR [eax]
  00303	51		 push	 ecx
  00304	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  00309	83 c4 04	 add	 esp, 4
  0030c	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1699 : 					this->_Color(_Wherenode) = this->_Black;

  0030f	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  00312	50		 push	 eax
  00313	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  00318	83 c4 04	 add	 esp, 4
  0031b	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1700 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1701 : 						this->_Red;

  0031e	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207439[ebp]
  00321	50		 push	 eax
  00322	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00327	83 c4 04	 add	 esp, 4
  0032a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0032c	51		 push	 ecx
  0032d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00332	83 c4 04	 add	 esp, 4
  00335	8b 10		 mov	 edx, DWORD PTR [eax]
  00337	52		 push	 edx
  00338	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  0033d	83 c4 04	 add	 esp, 4
  00340	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1702 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

  00343	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207439[ebp]
  00346	50		 push	 eax
  00347	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  0034c	83 c4 04	 add	 esp, 4
  0034f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00351	51		 push	 ecx
  00352	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00357	83 c4 04	 add	 esp, 4
  0035a	8b 10		 mov	 edx, DWORD PTR [eax]
  0035c	89 55 f8	 mov	 DWORD PTR __Pnode$207439[ebp], edx

; 1703 : 					}
; 1704 : 				else

  0035f	e9 9c 00 00 00	 jmp	 $LN4@Insert@2
$LN3@Insert@2:

; 1705 : 					{	// parent has red and black children
; 1706 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

  00364	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207439[ebp]
  00367	50		 push	 eax
  00368	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  0036d	83 c4 04	 add	 esp, 4
  00370	8b 08		 mov	 ecx, DWORD PTR [eax]
  00372	51		 push	 ecx
  00373	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00378	83 c4 04	 add	 esp, 4
  0037b	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$207439[ebp]
  0037e	3b 10		 cmp	 edx, DWORD PTR [eax]
  00380	75 1d		 jne	 SHORT $LN1@Insert@2

; 1707 : 						{	// rotate left child to right
; 1708 : 						_Pnode = this->_Parent(_Pnode);

  00382	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207439[ebp]
  00385	50		 push	 eax
  00386	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  0038b	83 c4 04	 add	 esp, 4
  0038e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00390	89 4d f8	 mov	 DWORD PTR __Pnode$207439[ebp], ecx

; 1709 : 						_Rrotate(_Pnode);

  00393	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207439[ebp]
  00396	50		 push	 eax
  00397	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0039a	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Rrotate
$LN1@Insert@2:

; 1710 : 						}
; 1711 : 					this->_Color(this->_Parent(_Pnode)) =
; 1712 : 						this->_Black;	// propagate red up

  0039f	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207439[ebp]
  003a2	50		 push	 eax
  003a3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  003a8	83 c4 04	 add	 esp, 4
  003ab	8b 08		 mov	 ecx, DWORD PTR [eax]
  003ad	51		 push	 ecx
  003ae	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  003b3	83 c4 04	 add	 esp, 4
  003b6	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1713 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1714 : 						this->_Red;

  003b9	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207439[ebp]
  003bc	50		 push	 eax
  003bd	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  003c2	83 c4 04	 add	 esp, 4
  003c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  003c7	51		 push	 ecx
  003c8	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  003cd	83 c4 04	 add	 esp, 4
  003d0	8b 10		 mov	 edx, DWORD PTR [eax]
  003d2	52		 push	 edx
  003d3	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  003d8	83 c4 04	 add	 esp, 4
  003db	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1715 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

  003de	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207439[ebp]
  003e1	50		 push	 eax
  003e2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  003e7	83 c4 04	 add	 esp, 4
  003ea	8b 08		 mov	 ecx, DWORD PTR [eax]
  003ec	51		 push	 ecx
  003ed	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  003f2	83 c4 04	 add	 esp, 4
  003f5	8b 10		 mov	 edx, DWORD PTR [eax]
  003f7	52		 push	 edx
  003f8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003fb	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Lrotate
$LN4@Insert@2:

; 1716 : 					}
; 1717 : 				}

  00400	e9 10 fd ff ff	 jmp	 $LN10@Insert@2
$LN9@Insert@2:

; 1718 : 
; 1719 : 		this->_Color(_Root()) = this->_Black;	// root is always black

  00405	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00408	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Root
  0040d	8b 00		 mov	 eax, DWORD PTR [eax]
  0040f	50		 push	 eax
  00410	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  00415	83 c4 04	 add	 esp, 4
  00418	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1720 : 		return (iterator(_Newnode, this));

  0041b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0041e	50		 push	 eax
  0041f	8b 4d 14	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  00422	51		 push	 ecx
  00423	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00426	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >
  0042b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN19@Insert@2:

; 1721 : 		}

  0042e	5f		 pop	 edi
  0042f	5e		 pop	 esi
  00430	5b		 pop	 ebx
  00431	8b e5		 mov	 esp, ebp
  00433	5d		 pop	 ebp
  00434	c2 10 00	 ret	 16			; 00000010H
?_Insert@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@1@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Insert
_TEXT	ENDS
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::operator--
; Function compile flags: /Odtp /ZI
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 277  : 		{	// predecrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 278  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 279  : 		if (this->_Getcont() == 0
; 280  : 			|| this->_Ptr == 0)
; 281  : 			{	// report error
; 282  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 283  : 			_SCL_SECURE_OUT_OF_RANGE;
; 284  : 			}
; 285  : 
; 286  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 287  : 		--(*(_Mybase *)this);
; 288  : 		if (_Ptrsav == this->_Ptr)
; 289  : 			{	// report error
; 290  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 291  : 			_SCL_SECURE_OUT_OF_RANGE;
; 292  : 			}
; 293  : 
; 294  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 295  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 296  : 
; 297  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 298  : 		--(*(_Mybase *)this);
; 299  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 300  : 
; 301  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 302  : 		--(*(_Mybase *)this);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::operator--

; 303  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 304  : 
; 305  : 		return (*this);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 306  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<int const ,TUnionInfo *> >::max_size
; Function compile flags: /Odtp /ZI
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 873  : 		{	// return maximum possible length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 874  : 		return (this->_Alval.max_size());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 0d	 add	 ecx, 13			; 0000000dH
  00012	e8 00 00 00 00	 call	 ?max_size@?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<int const ,TUnionInfo *> >::max_size

; 875  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::max_size
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 418  : 		{	// predecrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 419  : 		--(*(_Mybase *)this);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator--

; 420  : 		return (*this);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 421  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator--
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Pnode$207466 = -8					; size = 4
_this$ = -4						; size = 4
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 83   : 		{	// predecrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 84   : 		if (_Mytree::_Isnil(_Ptr))

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  00017	83 c4 04	 add	 esp, 4
  0001a	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0001d	85 d2		 test	 edx, edx
  0001f	74 1a		 je	 SHORT $LN8@operator@4

; 85   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 08		 mov	 ecx, DWORD PTR [eax]
  00026	51		 push	 ecx
  00027	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  0002c	83 c4 04	 add	 esp, 4
  0002f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00032	8b 00		 mov	 eax, DWORD PTR [eax]
  00034	89 02		 mov	 DWORD PTR [edx], eax
  00036	e9 a4 00 00 00	 jmp	 $LN7@operator@4
$LN8@operator@4:

; 86   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00046	83 c4 04	 add	 esp, 4
  00049	8b 10		 mov	 edx, DWORD PTR [eax]
  0004b	52		 push	 edx
  0004c	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  00051	83 c4 04	 add	 esp, 4
  00054	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00057	85 c0		 test	 eax, eax
  00059	75 20		 jne	 SHORT $LN4@operator@4

; 87   : 			_Ptr = _Mytree::_Max(
; 88   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree

  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00060	51		 push	 ecx
  00061	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00066	83 c4 04	 add	 esp, 4
  00069	8b 10		 mov	 edx, DWORD PTR [eax]
  0006b	52		 push	 edx
  0006c	e8 00 00 00 00	 call	 ?_Max@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Max
  00071	83 c4 04	 add	 esp, 4
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	89 01		 mov	 DWORD PTR [ecx], eax

; 89   : 		else

  00079	eb 64		 jmp	 SHORT $LN7@operator@4
$LN4@operator@4:

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  0007b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00080	51		 push	 ecx
  00081	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00086	83 c4 04	 add	 esp, 4
  00089	8b 10		 mov	 edx, DWORD PTR [eax]
  0008b	89 55 f8	 mov	 DWORD PTR __Pnode$207466[ebp], edx
  0008e	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207466[ebp]
  00091	50		 push	 eax
  00092	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  00097	83 c4 04	 add	 esp, 4
  0009a	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0009d	85 c9		 test	 ecx, ecx
  0009f	75 1f		 jne	 SHORT $LN3@operator@4
  000a1	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$207466[ebp]
  000a4	50		 push	 eax
  000a5	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  000aa	83 c4 04	 add	 esp, 4
  000ad	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b2	3b 10		 cmp	 edx, DWORD PTR [eax]
  000b4	75 0a		 jne	 SHORT $LN3@operator@4

; 94   : 				_Ptr = _Pnode;	// ==> parent while left subtree

  000b6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b9	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$207466[ebp]
  000bc	89 08		 mov	 DWORD PTR [eax], ecx
  000be	eb bb		 jmp	 SHORT $LN4@operator@4
$LN3@operator@4:

; 95   : 			if (_Mytree::_Isnil(_Ptr))

  000c0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c5	51		 push	 ecx
  000c6	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  000cb	83 c4 04	 add	 esp, 4
  000ce	0f be 10	 movsx	 edx, BYTE PTR [eax]
  000d1	85 d2		 test	 edx, edx
  000d3	74 02		 je	 SHORT $LN2@operator@4

; 96   : 				;	// begin() shouldn't be decremented, don't move
; 97   : 			else

  000d5	eb 08		 jmp	 SHORT $LN7@operator@4
$LN2@operator@4:

; 98   : 				_Ptr = _Pnode;	// ==> parent if not head

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$207466[ebp]
  000dd	89 08		 mov	 DWORD PTR [eax], ecx
$LN7@operator@4:

; 99   : 			}
; 100  : 		return (*this);

  000df	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 101  : 		}

  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi
  000e4	5b		 pop	 ebx
  000e5	8b e5		 mov	 esp, ebp
  000e7	5d		 pop	 ebp
  000e8	c3		 ret	 0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >,std::_Iterator_base0>::operator--
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>
PUBLIC	??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &>
PUBLIC	??$move@AA_N@std@@YA$$QA_NAA_N@Z		; std::move<bool &>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 227  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$move@AA_N@std@@YA$$QA_NAA_N@Z ; std::move<bool &>
  00015	83 c4 04	 add	 esp, 4
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &>
  00022	83 c4 04	 add	 esp, 4
  00025	50		 push	 eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>

; 228  : 		}

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 08 00	 ret	 8
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -76						; size = 4
__Count$ = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<int const ,TUnionInfo *> >::max_size, COMDAT
; _this$ = ecx

; 217  : 		{	// estimate maximum array size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);

  0000c	c7 45 f8 ff ff
	ff 1f		 mov	 DWORD PTR __Count$[ebp], 536870911 ; 1fffffffH

; 219  : 		return (0 < _Count ? _Count : 1);

  00013	83 7d f8 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00017	76 08		 jbe	 SHORT $LN3@max_size@2
  00019	8b 45 f8	 mov	 eax, DWORD PTR __Count$[ebp]
  0001c	89 45 b4	 mov	 DWORD PTR tv65[ebp], eax
  0001f	eb 07		 jmp	 SHORT $LN4@max_size@2
$LN3@max_size@2:
  00021	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv65[ebp], 1
$LN4@max_size@2:
  00028	8b 45 b4	 mov	 eax, DWORD PTR tv65[ebp]

; 220  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<int const ,TUnionInfo *> >::max_size
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &>
  00015	83 c4 04	 add	 esp, 4
  00018	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001d	89 0a		 mov	 DWORD PTR [edx], ecx
  0001f	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ??$move@AA_N@std@@YA$$QA_NAA_N@Z ; std::move<bool &>
  00028	83 c4 04	 add	 esp, 4
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	8a 10		 mov	 dl, BYTE PTR [eax]
  00030	88 51 04	 mov	 BYTE PTR [ecx+4], dl

; 146  : 		}

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$forward@AAH@std@@YAAAHAAH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAH@std@@YAAAHAAH@Z PROC			; std::forward<int &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 79   : 	return ((_Ty&&)_Arg);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$forward@AAH@std@@YAAAHAAH@Z ENDP			; std::forward<int &>
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??$construct@AAH@?$allocator@H@std@@QAEXPAHAAH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@AAH@?$allocator@H@std@@QAEXPAHAAH@Z$0
__ehfuncinfo$??$construct@AAH@?$allocator@H@std@@QAEXPAHAAH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@AAH@?$allocator@H@std@@QAEXPAHAAH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ??$construct@AAH@?$allocator@H@std@@QAEXPAHAAH@Z
_TEXT	SEGMENT
tv73 = -92						; size = 4
$T208318 = -88						; size = 4
$T208319 = -84						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAH@?$allocator@H@std@@QAEXPAHAAH@Z PROC	; std::allocator<int>::construct<int &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@AAH@?$allocator@H@std@@QAEXPAHAAH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  0002b	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0002e	50		 push	 eax
  0002f	6a 04		 push	 4
  00031	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00036	83 c4 08	 add	 esp, 8
  00039	89 45 ac	 mov	 DWORD PTR $T208319[ebp], eax
  0003c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00043	83 7d ac 00	 cmp	 DWORD PTR $T208319[ebp], 0
  00047	74 1b		 je	 SHORT $LN3@construct
  00049	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0004c	51		 push	 ecx
  0004d	e8 00 00 00 00	 call	 ??$forward@AAH@std@@YAAAHAAH@Z ; std::forward<int &>
  00052	83 c4 04	 add	 esp, 4
  00055	8b 55 ac	 mov	 edx, DWORD PTR $T208319[ebp]
  00058	8b 00		 mov	 eax, DWORD PTR [eax]
  0005a	89 02		 mov	 DWORD PTR [edx], eax
  0005c	8b 4d ac	 mov	 ecx, DWORD PTR $T208319[ebp]
  0005f	89 4d a4	 mov	 DWORD PTR tv73[ebp], ecx
  00062	eb 07		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00064	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN4@construct:
  0006b	8b 55 a4	 mov	 edx, DWORD PTR tv73[ebp]
  0006e	89 55 a8	 mov	 DWORD PTR $T208318[ebp], edx
  00071	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 209  : 		}

  00078	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00082	59		 pop	 ecx
  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@AAH@?$allocator@H@std@@QAEXPAHAAH@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 4d ac	 mov	 ecx, DWORD PTR $T208319[ebp]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$construct@AAH@?$allocator@H@std@@QAEXPAHAAH@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@AAH@?$allocator@H@std@@QAEXPAHAAH@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@AAH@?$allocator@H@std@@QAEXPAHAAH@Z ENDP	; std::allocator<int>::construct<int &>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 81   :         {return (_Where); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 83   :         {return; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$forward@ABH@std@@YAABHABH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABH@std@@YAABHABH@Z PROC			; std::forward<int const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 79   : 	return ((_Ty&&)_Arg);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$forward@ABH@std@@YAABHABH@Z ENDP			; std::forward<int const &>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$forward@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@YA$$QAU?$pair@$$CBHPAVTUnionInfo@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@YA$$QAU?$pair@$$CBHPAVTUnionInfo@@@0@AAU10@@Z PROC ; std::forward<std::pair<int const ,TUnionInfo *> >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 79   : 	return ((_Ty&&)_Arg);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$forward@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@YA$$QAU?$pair@$$CBHPAVTUnionInfo@@@0@AAU10@@Z ENDP ; std::forward<std::pair<int const ,TUnionInfo *> >
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@U?$pair@$$CBHPAVTUnionInfo@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@0@PAU?$pair@$$CBHPAVTUnionInfo@@@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::pair<int const ,TUnionInfo *> >,std::pair<int const ,TUnionInfo *>,std::pair<int const ,TUnionInfo *> >
PUBLIC	?_Buynode@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Buynode
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__catchsym$??$_Buynode@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z$0
__unwindtable$??$_Buynode@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z$2
__ehfuncinfo$??$_Buynode@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ??$_Buynode@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z
_TEXT	SEGMENT
tv93 = -100						; size = 4
tv92 = -96						; size = 4
tv91 = -92						; size = 4
__Wherenode$ = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Val$ = 8						; size = 4
??$_Buynode@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Buynode<std::pair<int const ,TUnionInfo *> >, COMDAT
; _this$ = ecx

; 586  : 		_Nodeptr _Buynode(_Valty&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Buynode@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 54	 sub	 esp, 84			; 00000054H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 587  : 		{	// allocate a node with defaults
; 588  : 		_Nodeptr _Wherenode = _Buynode();

  0002f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Buynode
  00037	89 45 e8	 mov	 DWORD PTR __Wherenode$[ebp], eax

; 589  : 
; 590  : 		_TRY_BEGIN

  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 591  : 		_Cons_val(this->_Alval, _STD addressof(this->_Myval(_Wherenode)),
; 592  : 			_STD forward<_Valty>(_Val));

  00041	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ??$forward@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@YA$$QAU?$pair@$$CBHPAVTUnionInfo@@@0@AAU10@@Z ; std::forward<std::pair<int const ,TUnionInfo *> >
  0004a	83 c4 04	 add	 esp, 4
  0004d	89 45 a4	 mov	 DWORD PTR tv91[ebp], eax
  00050	8b 4d e8	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  00053	51		 push	 ecx
  00054	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAVTUnionInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Myval
  00059	83 c4 04	 add	 esp, 4
  0005c	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  0005f	8b 55 a0	 mov	 edx, DWORD PTR tv92[ebp]
  00062	52		 push	 edx
  00063	e8 00 00 00 00	 call	 ??$addressof@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@YAPAU?$pair@$$CBHPAVTUnionInfo@@@0@AAU10@@Z ; std::addressof<std::pair<int const ,TUnionInfo *> >
  00068	83 c4 04	 add	 esp, 4
  0006b	89 45 9c	 mov	 DWORD PTR tv93[ebp], eax
  0006e	8b 45 a4	 mov	 eax, DWORD PTR tv91[ebp]
  00071	50		 push	 eax
  00072	8b 4d 9c	 mov	 ecx, DWORD PTR tv93[ebp]
  00075	51		 push	 ecx
  00076	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00079	83 c2 0d	 add	 edx, 13			; 0000000dH
  0007c	52		 push	 edx
  0007d	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@U?$pair@$$CBHPAVTUnionInfo@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@0@PAU?$pair@$$CBHPAVTUnionInfo@@@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::pair<int const ,TUnionInfo *> >,std::pair<int const ,TUnionInfo *>,std::pair<int const ,TUnionInfo *> >
  00082	83 c4 0c	 add	 esp, 12			; 0000000cH
  00085	eb 27		 jmp	 SHORT $LN4@Buynode
__catch$??$_Buynode@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z$0:

; 593  : 		_CATCH_ALL
; 594  : 		this->_Alnod.deallocate(_Wherenode, 1);

  00087	6a 01		 push	 1
  00089	8b 45 e8	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0008c	50		 push	 eax
  0008d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00093	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node>::deallocate

; 595  : 		_RERAISE;

  00098	6a 00		 push	 0
  0009a	6a 00		 push	 0
  0009c	e8 00 00 00 00	 call	 __CxxThrowException@8

; 596  : 		_CATCH_END

  000a1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000a8	b8 00 00 00 00	 mov	 eax, __tryend$??$_Buynode@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z$1
  000ad	c3		 ret	 0
$LN4@Buynode:
  000ae	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Buynode@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z$1:

; 597  : 
; 598  : 		return (_Wherenode);

  000b5	8b 45 e8	 mov	 eax, DWORD PTR __Wherenode$[ebp]
$LN3@Buynode:

; 599  : 		}

  000b8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000bb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c2	59		 pop	 ecx
  000c3	5f		 pop	 edi
  000c4	5e		 pop	 esi
  000c5	5b		 pop	 ebx
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a 98	 mov	 ecx, DWORD PTR [edx-104]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Buynode@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Buynode@U?$pair@$$CBHPAVTUnionInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVTUnionInfo@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Buynode<std::pair<int const ,TUnionInfo *> >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Iter_cat@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@@Z PROC ; std::_Iter_cat<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > >, COMDAT

; 476  : 	{	// return category from iterator argument

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 477  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 478  : 	return (_Cat);

  00009	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0000c	8a 4d ff	 mov	 cl, BYTE PTR __Cat$[ebp]
  0000f	88 08		 mov	 BYTE PTR [eax], cl
  00011	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 479  : 	}

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??$_Iter_cat@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > >
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$_Distance2@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Distance2@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z PROC ; std::_Distance2<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,unsigned int>, COMDAT

; 876  : 	{	// add to _Off distance between bidirectional iterators (redundant)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 877  : 	for (; _First != _Last; ++_First)

  00009	eb 08		 jmp	 SHORT $LN3@Distance2
$LN2@Distance2:
  0000b	8d 4d 08	 lea	 ecx, DWORD PTR __First$[ebp]
  0000e	e8 00 00 00 00	 call	 ??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator++
$LN3@Distance2:
  00013	8d 45 0c	 lea	 eax, DWORD PTR __Last$[ebp]
  00016	50		 push	 eax
  00017	8d 4d 08	 lea	 ecx, DWORD PTR __First$[ebp]
  0001a	e8 00 00 00 00	 call	 ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >::operator!=
  0001f	0f b6 c8	 movzx	 ecx, al
  00022	85 c9		 test	 ecx, ecx
  00024	74 0f		 je	 SHORT $LN4@Distance2

; 878  : 		++_Off;

  00026	8b 45 10	 mov	 eax, DWORD PTR __Off$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	83 c1 01	 add	 ecx, 1
  0002e	8b 55 10	 mov	 edx, DWORD PTR __Off$[ebp]
  00031	89 0a		 mov	 DWORD PTR [edx], ecx
  00033	eb d6		 jmp	 SHORT $LN2@Distance2
$LN4@Distance2:

; 879  : 	}

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??$_Distance2@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,unsigned int>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@HHH@std@@YAPAHPAH00AAV?$allocator@H@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<int,int,int>
PUBLIC	??$_Val_type@PAH@std@@YAPAHPAH@Z		; std::_Val_type<int *>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z
_TEXT	SEGMENT
$T208358 = -65						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z PROC ; std::_Uninitialized_move<int *,int *,std::allocator<int> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00009	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z ; std::_Ptr_cat<int,int>
  00016	83 c4 08	 add	 esp, 8
  00019	88 45 bf	 mov	 BYTE PTR $T208358[ebp], al
  0001c	0f b6 55 bf	 movzx	 edx, BYTE PTR $T208358[ebp]
  00020	52		 push	 edx
  00021	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Val_type@PAH@std@@YAPAHPAH@Z ; std::_Val_type<int *>
  0002a	83 c4 04	 add	 esp, 4
  0002d	50		 push	 eax
  0002e	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00031	51		 push	 ecx
  00032	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00035	52		 push	 edx
  00036	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00039	50		 push	 eax
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ??$_Uninit_move@HHH@std@@YAPAHPAH00AAV?$allocator@H@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<int,int,int>
  00043	83 c4 18	 add	 esp, 24			; 00000018H

; 472  : 	}

  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	5b		 pop	 ebx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??$_Uninitialized_move@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z ENDP ; std::_Uninitialized_move<int *,int *,std::allocator<int> >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$_Move@AAD@std@@YA$$QADAAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAD@std@@YA$$QADAAD@Z PROC			; std::_Move<char &>, COMDAT

; 94   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 95   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 96   : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Move@AAD@std@@YA$$QADAAD@Z ENDP			; std::_Move<char &>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 79   : 	return ((_Ty&&)_Arg);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@AAV01@@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@AAV01@@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@0@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > >::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > ><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &>
  00015	83 c4 04	 add	 esp, 4
  00018	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001d	89 0a		 mov	 DWORD PTR [edx], ecx
  0001f	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &>
  00028	83 c4 04	 add	 esp, 4
  0002b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00030	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 164  : 		}

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@AAV01@@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@0@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > >::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > ><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &,std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z PROC ; std::_Ptr_cat<int,int>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00009	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z ENDP ; std::_Ptr_cat<int,int>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<int> >, COMDAT

; 104  : 	{	// destroy [_First, _Last), scalar type (do nothing)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 105  : 	}

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<int> >
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Construct@HABH@std@@YAXPAHABH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@HABH@std@@YAXPAHABH@Z$0
__ehfuncinfo$??$_Construct@HABH@std@@YAXPAHABH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@HABH@std@@YAXPAHABH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ??$_Construct@HABH@std@@YAXPAHABH@Z
_TEXT	SEGMENT
tv73 = -92						; size = 4
$T208371 = -88						; size = 4
$T208372 = -84						; size = 4
__Vptr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@HABH@std@@YAXPAHABH@Z PROC		; std::_Construct<int,int const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Construct@HABH@std@@YAXPAHABH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 47   : 	void _FARQ *_Vptr = _Ptr;

  00028	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0002b	89 45 f0	 mov	 DWORD PTR __Vptr$[ebp], eax

; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  0002e	8b 45 f0	 mov	 eax, DWORD PTR __Vptr$[ebp]
  00031	50		 push	 eax
  00032	6a 04		 push	 4
  00034	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00039	83 c4 08	 add	 esp, 8
  0003c	89 45 ac	 mov	 DWORD PTR $T208372[ebp], eax
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	83 7d ac 00	 cmp	 DWORD PTR $T208372[ebp], 0
  0004a	74 1b		 je	 SHORT $LN3@Construct
  0004c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0004f	51		 push	 ecx
  00050	e8 00 00 00 00	 call	 ??$forward@ABH@std@@YAABHABH@Z ; std::forward<int const &>
  00055	83 c4 04	 add	 esp, 4
  00058	8b 55 ac	 mov	 edx, DWORD PTR $T208372[ebp]
  0005b	8b 00		 mov	 eax, DWORD PTR [eax]
  0005d	89 02		 mov	 DWORD PTR [edx], eax
  0005f	8b 4d ac	 mov	 ecx, DWORD PTR $T208372[ebp]
  00062	89 4d a4	 mov	 DWORD PTR tv73[ebp], ecx
  00065	eb 07		 jmp	 SHORT $LN4@Construct
$LN3@Construct:
  00067	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN4@Construct:
  0006e	8b 55 a4	 mov	 edx, DWORD PTR tv73[ebp]
  00071	89 55 a8	 mov	 DWORD PTR $T208371[ebp], edx
  00074	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 49   : 	}

  0007b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00085	59		 pop	 ecx
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	5b		 pop	 ebx
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@HABH@std@@YAXPAHABH@Z$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR __Vptr$[ebp]
  00003	50		 push	 eax
  00004	8b 4d ac	 mov	 ecx, DWORD PTR $T208372[ebp]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$_Construct@HABH@std@@YAXPAHABH@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Construct@HABH@std@@YAXPAHABH@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Construct@HABH@std@@YAXPAHABH@Z ENDP		; std::_Construct<int,int const &>
; Function compile flags: /Odtp /ZI
;	COMDAT ??$_Destroy@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@YAXPAU?$pair@$$CBHPAVTUnionInfo@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@YAXPAU?$pair@$$CBHPAVTUnionInfo@@@0@@Z PROC ; std::_Destroy<std::pair<int const ,TUnionInfo *> >, COMDAT

; 62   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??$_Destroy@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@YAXPAU?$pair@$$CBHPAVTUnionInfo@@@0@@Z ENDP ; std::_Destroy<std::pair<int const ,TUnionInfo *> >
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &,bool>
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$forward@_N@std@@YA$$QA_NAA_N@Z ; std::forward<bool>
  00015	83 c4 04	 add	 esp, 4
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &>
  00022	83 c4 04	 add	 esp, 4
  00025	50		 push	 eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &,bool>

; 248  : 		}

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &,bool>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$move@AA_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AA_N@std@@YA$$QA_NAA_N@Z PROC			; std::move<bool &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$move@AA_N@std@@YA$$QA_NAA_N@Z ENDP			; std::move<bool &>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
__Wherenode$ = -8					; size = 4
_this$ = -4						; size = 4
?_Buynode@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 559  : 		{	// allocate a node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  0000c	6a 01		 push	 1
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00014	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Node>::allocate
  00019	89 45 f8	 mov	 DWORD PTR __Wherenode$[ebp], eax

; 561  : 
; 562  : 		this->_Left(_Wherenode) = this->_Myhead;

  0001c	8b 45 f8	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Left
  00025	83 c4 04	 add	 esp, 4
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002e	89 10		 mov	 DWORD PTR [eax], edx

; 563  : 		this->_Parent(_Wherenode) = this->_Myhead;

  00030	8b 45 f8	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Parent
  00039	83 c4 04	 add	 esp, 4
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00042	89 10		 mov	 DWORD PTR [eax], edx

; 564  : 		this->_Right(_Wherenode) = this->_Myhead;

  00044	8b 45 f8	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Right
  0004d	83 c4 04	 add	 esp, 4
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00056	89 10		 mov	 DWORD PTR [eax], edx

; 565  : 		this->_Color(_Wherenode) = this->_Red;

  00058	8b 45 f8	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Color
  00061	83 c4 04	 add	 esp, 4
  00064	c6 00 00	 mov	 BYTE PTR [eax], 0

; 566  : 		this->_Isnil(_Wherenode) = false;

  00067	8b 45 f8	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Isnil
  00070	83 c4 04	 add	 esp, 4
  00073	c6 00 00	 mov	 BYTE PTR [eax], 0

; 567  : 		return (_Wherenode);

  00076	8b 45 f8	 mov	 eax, DWORD PTR __Wherenode$[ebp]

; 568  : 		}

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c3		 ret	 0
?_Buynode@?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVTUnionInfo@@@2@$$QAU32@@Z ; std::allocator<std::pair<int const ,TUnionInfo *> >::construct
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@U?$pair@$$CBHPAVTUnionInfo@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@0@PAU?$pair@$$CBHPAVTUnionInfo@@@0@$$QAU20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@U?$pair@$$CBHPAVTUnionInfo@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@0@PAU?$pair@$$CBHPAVTUnionInfo@@@0@$$QAU20@@Z PROC ; std::_Cons_val<std::allocator<std::pair<int const ,TUnionInfo *> >,std::pair<int const ,TUnionInfo *>,std::pair<int const ,TUnionInfo *> >, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00009	8b 45 10	 mov	 eax, DWORD PTR __Src$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??$forward@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@YA$$QAU?$pair@$$CBHPAVTUnionInfo@@@0@AAU10@@Z ; std::forward<std::pair<int const ,TUnionInfo *> >
  00012	83 c4 04	 add	 esp, 4
  00015	50		 push	 eax
  00016	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]
  00019	51		 push	 ecx
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __Alval$[ebp]
  0001d	e8 00 00 00 00	 call	 ?construct@?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVTUnionInfo@@@2@$$QAU32@@Z ; std::allocator<std::pair<int const ,TUnionInfo *> >::construct

; 281  : 	}

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$_Cons_val@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@U?$pair@$$CBHPAVTUnionInfo@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@0@PAU?$pair@$$CBHPAVTUnionInfo@@@0@$$QAU20@@Z ENDP ; std::_Cons_val<std::allocator<std::pair<int const ,TUnionInfo *> >,std::pair<int const ,TUnionInfo *>,std::pair<int const ,TUnionInfo *> >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Val_type@PAH@std@@YAPAHPAH@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAH@std@@YAPAHPAH@Z PROC			; std::_Val_type<int *>, COMDAT

; 789  : 	{	// return value type from arbitrary argument

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 790  : 	return (0);

  00009	33 c0		 xor	 eax, eax

; 791  : 	}

  0000b	5f		 pop	 edi
  0000c	5e		 pop	 esi
  0000d	5b		 pop	 ebx
  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
??$_Val_type@PAH@std@@YAPAHPAH@Z ENDP			; std::_Val_type<int *>
_TEXT	ENDS
EXTRN	_memmove:PROC
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_move@HHH@std@@YAPAHPAH00AAV?$allocator@H@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@HHH@std@@YAPAHPAH00AAV?$allocator@H@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<int,int,int>, COMDAT

; 456  : 	{	// move [_First, _Last) to raw _Dest, scalar type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 457  : 	_DEBUG_RANGE(_First, _Last);
; 458  : 	_DEBUG_POINTER(_Dest);
; 459  : 	size_t _Count = (size_t)(_Last - _First);

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000c	2b 45 08	 sub	 eax, DWORD PTR __First$[ebp]
  0000f	c1 f8 02	 sar	 eax, 2
  00012	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 460  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 461  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  00015	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  00018	c1 e0 02	 shl	 eax, 2
  0001b	50		 push	 eax
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00023	52		 push	 edx
  00024	e8 00 00 00 00	 call	 _memmove
  00029	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0002f	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 462  : 	}

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
??$_Uninit_move@HHH@std@@YAPAHPAH00AAV?$allocator@H@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<int,int,int>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 79   : 	return ((_Ty&&)_Arg);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &>
  00015	83 c4 04	 add	 esp, 4
  00018	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001d	89 0a		 mov	 DWORD PTR [edx], ecx
  0001f	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ??$forward@_N@std@@YA$$QA_NAA_N@Z ; std::forward<bool>
  00028	83 c4 04	 add	 esp, 4
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	8a 10		 mov	 dl, BYTE PTR [eax]
  00030	88 51 04	 mov	 BYTE PTR [ecx+4], dl

; 164  : 		}

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVTUnionInfo@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TUnionInfo *,std::less<int>,std::allocator<std::pair<int const ,TUnionInfo *> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	??$?0$$CBHPAVTUnionInfo@@@?$pair@$$CBHPAVTUnionInfo@@@std@@QAE@$$QAU01@@Z ; std::pair<int const ,TUnionInfo *>::pair<int const ,TUnionInfo *><int const ,TUnionInfo *>
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVTUnionInfo@@@2@$$QAU32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVTUnionInfo@@@2@$$QAU32@@Z$0
__ehfuncinfo$?construct@?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVTUnionInfo@@@2@$$QAU32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVTUnionInfo@@@2@$$QAU32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVTUnionInfo@@@2@$$QAU32@@Z
_TEXT	SEGMENT
tv76 = -92						; size = 4
$T208404 = -88						; size = 4
$T208405 = -84						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVTUnionInfo@@@2@$$QAU32@@Z PROC ; std::allocator<std::pair<int const ,TUnionInfo *> >::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?construct@?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVTUnionInfo@@@2@$$QAU32@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  0002b	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0002e	50		 push	 eax
  0002f	6a 08		 push	 8
  00031	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00036	83 c4 08	 add	 esp, 8
  00039	89 45 ac	 mov	 DWORD PTR $T208405[ebp], eax
  0003c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00043	83 7d ac 00	 cmp	 DWORD PTR $T208405[ebp], 0
  00047	74 1a		 je	 SHORT $LN3@construct@2
  00049	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0004c	51		 push	 ecx
  0004d	e8 00 00 00 00	 call	 ??$forward@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@YA$$QAU?$pair@$$CBHPAVTUnionInfo@@@0@AAU10@@Z ; std::forward<std::pair<int const ,TUnionInfo *> >
  00052	83 c4 04	 add	 esp, 4
  00055	50		 push	 eax
  00056	8b 4d ac	 mov	 ecx, DWORD PTR $T208405[ebp]
  00059	e8 00 00 00 00	 call	 ??$?0$$CBHPAVTUnionInfo@@@?$pair@$$CBHPAVTUnionInfo@@@std@@QAE@$$QAU01@@Z ; std::pair<int const ,TUnionInfo *>::pair<int const ,TUnionInfo *><int const ,TUnionInfo *>
  0005e	89 45 a4	 mov	 DWORD PTR tv76[ebp], eax
  00061	eb 07		 jmp	 SHORT $LN4@construct@2
$LN3@construct@2:
  00063	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN4@construct@2:
  0006a	8b 55 a4	 mov	 edx, DWORD PTR tv76[ebp]
  0006d	89 55 a8	 mov	 DWORD PTR $T208404[ebp], edx
  00070	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 203  : 		}

  00077	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00081	59		 pop	 ecx
  00082	5f		 pop	 edi
  00083	5e		 pop	 esi
  00084	5b		 pop	 ebx
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVTUnionInfo@@@2@$$QAU32@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 4d ac	 mov	 ecx, DWORD PTR $T208405[ebp]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$?construct@?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVTUnionInfo@@@2@$$QAU32@@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?construct@?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVTUnionInfo@@@2@$$QAU32@@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@U?$pair@$$CBHPAVTUnionInfo@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVTUnionInfo@@@2@$$QAU32@@Z ENDP ; std::allocator<std::pair<int const ,TUnionInfo *> >::construct
PUBLIC	??0?$_Pair_base@$$CBHPAVTUnionInfo@@@std@@QAE@$$QBH$$QAPAVTUnionInfo@@@Z ; std::_Pair_base<int const ,TUnionInfo *>::_Pair_base<int const ,TUnionInfo *>
PUBLIC	??$forward@$$CBH@std@@YA$$QBHABH@Z		; std::forward<int const >
PUBLIC	??$forward@PAVTUnionInfo@@@std@@YA$$QAPAVTUnionInfo@@AAPAV1@@Z ; std::forward<TUnionInfo *>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0$$CBHPAVTUnionInfo@@@?$pair@$$CBHPAVTUnionInfo@@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??$?0$$CBHPAVTUnionInfo@@@?$pair@$$CBHPAVTUnionInfo@@@std@@QAE@$$QAU01@@Z PROC ; std::pair<int const ,TUnionInfo *>::pair<int const ,TUnionInfo *><int const ,TUnionInfo *>, COMDAT
; _this$ = ecx

; 255  : 		{	// construct from moved compatible pair

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0000f	83 c0 04	 add	 eax, 4
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??$forward@PAVTUnionInfo@@@std@@YA$$QAPAVTUnionInfo@@AAPAV1@@Z ; std::forward<TUnionInfo *>
  00018	83 c4 04	 add	 esp, 4
  0001b	50		 push	 eax
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ??$forward@$$CBH@std@@YA$$QBHABH@Z ; std::forward<int const >
  00025	83 c4 04	 add	 esp, 4
  00028	50		 push	 eax
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ??0?$_Pair_base@$$CBHPAVTUnionInfo@@@std@@QAE@$$QBH$$QAPAVTUnionInfo@@@Z ; std::_Pair_base<int const ,TUnionInfo *>::_Pair_base<int const ,TUnionInfo *>

; 256  : 		}

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??$?0$$CBHPAVTUnionInfo@@@?$pair@$$CBHPAVTUnionInfo@@@std@@QAE@$$QAU01@@Z ENDP ; std::pair<int const ,TUnionInfo *>::pair<int const ,TUnionInfo *><int const ,TUnionInfo *>
_TEXT	ENDS
PUBLIC	??$move@ABH@std@@YA$$QBHABH@Z			; std::move<int const &>
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$_Pair_base@$$CBHPAVTUnionInfo@@@std@@QAE@$$QBH$$QAPAVTUnionInfo@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@$$CBHPAVTUnionInfo@@@std@@QAE@$$QBH$$QAPAVTUnionInfo@@@Z PROC ; std::_Pair_base<int const ,TUnionInfo *>::_Pair_base<int const ,TUnionInfo *>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$move@ABH@std@@YA$$QBHABH@Z ; std::move<int const &>
  00015	83 c4 04	 add	 esp, 4
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	89 11		 mov	 DWORD PTR [ecx], edx
  0001f	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ??$move@AAPAVTUnionInfo@@@std@@YA$$QAPAVTUnionInfo@@AAPAV1@@Z ; std::move<TUnionInfo * &>
  00028	83 c4 04	 add	 esp, 4
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	8b 10		 mov	 edx, DWORD PTR [eax]
  00030	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 146  : 		}

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
??0?$_Pair_base@$$CBHPAVTUnionInfo@@@std@@QAE@$$QBH$$QAPAVTUnionInfo@@@Z ENDP ; std::_Pair_base<int const ,TUnionInfo *>::_Pair_base<int const ,TUnionInfo *>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$forward@$$CBH@std@@YA$$QBHABH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@$$CBH@std@@YA$$QBHABH@Z PROC			; std::forward<int const >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 79   : 	return ((_Ty&&)_Arg);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$forward@$$CBH@std@@YA$$QBHABH@Z ENDP			; std::forward<int const >
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$forward@PAVTUnionInfo@@@std@@YA$$QAPAVTUnionInfo@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAVTUnionInfo@@@std@@YA$$QAPAVTUnionInfo@@AAPAV1@@Z PROC ; std::forward<TUnionInfo *>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 79   : 	return ((_Ty&&)_Arg);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$forward@PAVTUnionInfo@@@std@@YA$$QAPAVTUnionInfo@@AAPAV1@@Z ENDP ; std::forward<TUnionInfo *>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$move@ABH@std@@YA$$QBHABH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@ABH@std@@YA$$QBHABH@Z PROC			; std::move<int const &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$move@ABH@std@@YA$$QBHABH@Z ENDP			; std::move<int const &>
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	??0exception@std@@QAE@ABQBD@Z:PROC		; std::exception::exception
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File d:\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8d 45 08	 lea	 eax, DWORD PTR __Message$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
EXTRN	??1exception@std@@UAE@XZ:PROC			; std::exception::~exception
; Function compile flags: /Odtp /ZI
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UAE@XZ ; std::bad_alloc::~bad_alloc
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar@2
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar@2:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ?_Orphan_all@_Container_base0@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Orphan_all@_Container_base0@std@@QAEXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT
; _this$ = ecx

; 37   : 		{	// orphan all iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 38   : 		}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?_Orphan_all@_Container_base0@std@@QAEXXZ ENDP		; std::_Container_base0::_Orphan_all
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 48   : 		{	// adopt this iterator by parent

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 49   : 		}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABV01@@Z ; std::exception::exception
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\tunion.cpp
;	COMDAT ??__EUnionManager@@YAXXZ
text$yc	SEGMENT
??__EUnionManager@@YAXXZ PROC				; `dynamic initializer for 'UnionManager'', COMDAT

; 6    : TUnion UnionManager;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?UnionManager@@3VTUnion@@A ; UnionManager
  0000e	e8 00 00 00 00	 call	 ??0TUnion@@QAE@XZ	; TUnion::TUnion
  00013	68 00 00 00 00	 push	 OFFSET ??__FUnionManager@@YAXXZ ; `dynamic atexit destructor for 'UnionManager''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__EUnionManager@@YAXXZ ENDP				; `dynamic initializer for 'UnionManager''
; Function compile flags: /Odtp /ZI
text$yc	ENDS
;	COMDAT ??__FUnionManager@@YAXXZ
text$yd	SEGMENT
??__FUnionManager@@YAXXZ PROC				; `dynamic atexit destructor for 'UnionManager'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?UnionManager@@3VTUnion@@A ; UnionManager
  0000e	e8 00 00 00 00	 call	 ??1TUnion@@UAE@XZ	; TUnion::~TUnion
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__FUnionManager@@YAXXZ ENDP				; `dynamic atexit destructor for 'UnionManager''
text$yd	ENDS
PUBLIC	?UnionManager@@3VTUnion@@A			; UnionManager
_BSS	SEGMENT
?UnionManager@@3VTUnion@@A DB 030H DUP (?)		; UnionManager
_BSS	ENDS
CRT$XCU	SEGMENT
_UnionManager$initializer$ DD FLAT:??__EUnionManager@@YAXXZ
CRT$XCU	ENDS
END
