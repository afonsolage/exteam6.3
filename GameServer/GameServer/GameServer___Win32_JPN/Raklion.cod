; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\Raklion.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_iUseRaklionEvent@@3HA			; g_iUseRaklionEvent
_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
?g_iUseRaklionEvent@@3HA DD 01H				; g_iUseRaklionEvent
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?ClearData@CRaklion@@QAEXXZ			; CRaklion::ClearData
PUBLIC	??_7CRaklion@@6B@				; CRaklion::`vftable'
PUBLIC	??0CRaklion@@QAE@XZ				; CRaklion::CRaklion
PUBLIC	??_R4CRaklion@@6B@				; CRaklion::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRaklion@@@8				; CRaklion `RTTI Type Descriptor'
PUBLIC	??_R3CRaklion@@8				; CRaklion::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRaklion@@8				; CRaklion::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRaklion@@8			; CRaklion::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??1CRaklionBattleOfSelupan@@UAE@XZ:PROC		; CRaklionBattleOfSelupan::~CRaklionBattleOfSelupan
EXTRN	??0CRaklionBattleOfSelupan@@QAE@XZ:PROC		; CRaklionBattleOfSelupan::CRaklionBattleOfSelupan
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECRaklion@@UAEPAXI@Z:PROC			; CRaklion::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CRaklion@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\raklion.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CRaklion@@8 DD FLAT:??_R0?AVCRaklion@@@8	; CRaklion::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRaklion@@8
rdata$r	ENDS
;	COMDAT ??_R2CRaklion@@8
rdata$r	SEGMENT
??_R2CRaklion@@8 DD FLAT:??_R1A@?0A@EA@CRaklion@@8	; CRaklion::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CRaklion@@8
rdata$r	SEGMENT
??_R3CRaklion@@8 DD 00H					; CRaklion::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CRaklion@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRaklion@@@8
_DATA	SEGMENT
??_R0?AVCRaklion@@@8 DD FLAT:??_7type_info@@6B@		; CRaklion `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRaklion@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CRaklion@@6B@
rdata$r	SEGMENT
??_R4CRaklion@@6B@ DD 00H				; CRaklion::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRaklion@@@8
	DD	FLAT:??_R3CRaklion@@8
rdata$r	ENDS
;	COMDAT ??_7CRaklion@@6B@
CONST	SEGMENT
??_7CRaklion@@6B@ DD FLAT:??_R4CRaklion@@6B@		; CRaklion::`vftable'
	DD	FLAT:??_ECRaklion@@UAEPAXI@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??0CRaklion@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CRaklion@@QAE@XZ$0
__ehfuncinfo$??0CRaklion@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CRaklion@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
_TEXT	SEGMENT
_ltime$ = -28						; size = 8
_today$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CRaklion@@QAE@XZ PROC				; CRaklion::CRaklion
; _this$ = ecx

; 22   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CRaklion@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CRaklion@@6B@
  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 c1 38	 add	 ecx, 56			; 00000038H
  0003a	e8 00 00 00 00	 call	 ??0CRaklionBattleOfSelupan@@QAE@XZ ; CRaklionBattleOfSelupan::CRaklionBattleOfSelupan
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 23   : 	tm *today;
; 24   : 	time_t ltime;
; 25   : 
; 26   : 	time(&ltime);

  00046	8d 45 e4	 lea	 eax, DWORD PTR _ltime$[ebp]
  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 _time
  0004f	83 c4 04	 add	 esp, 4

; 27   : 	today=localtime(&ltime);

  00052	8d 45 e4	 lea	 eax, DWORD PTR _ltime$[ebp]
  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 _localtime
  0005b	83 c4 04	 add	 esp, 4
  0005e	89 45 ec	 mov	 DWORD PTR _today$[ebp], eax

; 28   : 	
; 29   : 	this->iYear = today->tm_year;

  00061	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00064	8b 4d ec	 mov	 ecx, DWORD PTR _today$[ebp]
  00067	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0006a	89 90 14 0e 00
	00		 mov	 DWORD PTR [eax+3604], edx

; 30   : 	this->iMon = today->tm_mon;

  00070	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00073	8b 4d ec	 mov	 ecx, DWORD PTR _today$[ebp]
  00076	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00079	89 90 18 0e 00
	00		 mov	 DWORD PTR [eax+3608], edx

; 31   : 	this->iDay = today->tm_mday;

  0007f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00082	8b 4d ec	 mov	 ecx, DWORD PTR _today$[ebp]
  00085	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00088	89 90 1c 0e 00
	00		 mov	 DWORD PTR [eax+3612], edx

; 32   : 	this->isUsed = 0;

  0008e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00091	c7 80 10 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+3600], 0

; 33   : 
; 34   : 	this->ClearData();

  0009b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	e8 00 00 00 00	 call	 ?ClearData@CRaklion@@QAEXXZ ; CRaklion::ClearData

; 35   : }

  000a3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000aa	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b7	59		 pop	 ecx
  000b8	5f		 pop	 edi
  000b9	5e		 pop	 esi
  000ba	5b		 pop	 ebx
  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CRaklion@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 38	 add	 ecx, 56			; 00000038H
  00006	e9 00 00 00 00	 jmp	 ??1CRaklionBattleOfSelupan@@UAE@XZ ; CRaklionBattleOfSelupan::~CRaklionBattleOfSelupan
__ehhandler$??0CRaklion@@QAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CRaklion@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CRaklion@@QAE@XZ ENDP				; CRaklion::CRaklion
EXTRN	__localtime64:PROC
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\time.inl
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_localtime PROC

; 113  : {

  000c0	55		 push	 ebp
  000c1	8b ec		 mov	 ebp, esp
  000c3	83 ec 40	 sub	 esp, 64			; 00000040H
  000c6	53		 push	 ebx
  000c7	56		 push	 esi
  000c8	57		 push	 edi

; 114  : #pragma warning( push )
; 115  : #pragma warning( disable : 4996 )
; 116  :     return _localtime64(_Time);

  000c9	8b 45 08	 mov	 eax, DWORD PTR __Time$[ebp]
  000cc	50		 push	 eax
  000cd	e8 00 00 00 00	 call	 __localtime64
  000d2	83 c4 04	 add	 esp, 4

; 117  : #pragma warning( pop )
; 118  : }

  000d5	5f		 pop	 edi
  000d6	5e		 pop	 esi
  000d7	5b		 pop	 ebx
  000d8	8b e5		 mov	 esp, ebp
  000da	5d		 pop	 ebp
  000db	c3		 ret	 0
_localtime ENDP
_TEXT	ENDS
EXTRN	__time64:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC

; 132  : {

  000e0	55		 push	 ebp
  000e1	8b ec		 mov	 ebp, esp
  000e3	83 ec 40	 sub	 esp, 64			; 00000040H
  000e6	53		 push	 ebx
  000e7	56		 push	 esi
  000e8	57		 push	 edi

; 133  :     return _time64(_Time);

  000e9	8b 45 08	 mov	 eax, DWORD PTR __Time$[ebp]
  000ec	50		 push	 eax
  000ed	e8 00 00 00 00	 call	 __time64
  000f2	83 c4 04	 add	 esp, 4

; 134  : }

  000f5	5f		 pop	 edi
  000f6	5e		 pop	 esi
  000f7	5b		 pop	 ebx
  000f8	8b e5		 mov	 esp, ebp
  000fa	5d		 pop	 ebp
  000fb	c3		 ret	 0
_time	ENDP
_TEXT	ENDS
PUBLIC	??1CRaklion@@UAE@XZ				; CRaklion::~CRaklion
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCRaklion@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCRaklion@@UAEPAXI@Z PROC				; CRaklion::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CRaklion@@UAE@XZ	; CRaklion::~CRaklion
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCRaklion@@UAEPAXI@Z ENDP				; CRaklion::`scalar deleting destructor'
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\raklion.cpp
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CRaklion@@UAE@XZ PROC				; CRaklion::~CRaklion
; _this$ = ecx

; 38   : {

  00100	55		 push	 ebp
  00101	8b ec		 mov	 ebp, esp
  00103	83 ec 44	 sub	 esp, 68			; 00000044H
  00106	53		 push	 ebx
  00107	56		 push	 esi
  00108	57		 push	 edi
  00109	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0010c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CRaklion@@6B@

; 39   : 
; 40   : }

  00115	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00118	83 c1 38	 add	 ecx, 56			; 00000038H
  0011b	e8 00 00 00 00	 call	 ??1CRaklionBattleOfSelupan@@UAE@XZ ; CRaklionBattleOfSelupan::~CRaklionBattleOfSelupan
  00120	5f		 pop	 edi
  00121	5e		 pop	 esi
  00122	5b		 pop	 ebx
  00123	8b e5		 mov	 esp, ebp
  00125	5d		 pop	 ebp
  00126	c3		 ret	 0
??1CRaklion@@UAE@XZ ENDP				; CRaklion::~CRaklion
_TEXT	ENDS
PUBLIC	?Init@CRaklion@@QAEXXZ				; CRaklion::Init
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@CRaklion@@QAEXXZ PROC				; CRaklion::Init
; _this$ = ecx

; 43   : {

  00130	55		 push	 ebp
  00131	8b ec		 mov	 ebp, esp
  00133	83 ec 44	 sub	 esp, 68			; 00000044H
  00136	53		 push	 ebx
  00137	56		 push	 esi
  00138	57		 push	 edi
  00139	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 44   : 	//empty
; 45   : }

  0013c	5f		 pop	 edi
  0013d	5e		 pop	 esi
  0013e	5b		 pop	 ebx
  0013f	8b e5		 mov	 esp, ebp
  00141	5d		 pop	 ebp
  00142	c3		 ret	 0
?Init@CRaklion@@QAEXXZ ENDP				; CRaklion::Init
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?ClearData@CRaklion@@QAEXXZ PROC			; CRaklion::ClearData
; _this$ = ecx

; 48   : {

  00150	55		 push	 ebp
  00151	8b ec		 mov	 ebp, esp
  00153	83 ec 44	 sub	 esp, 68			; 00000044H
  00156	53		 push	 ebx
  00157	56		 push	 esi
  00158	57		 push	 edi
  00159	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 49   : 	this->m_iUnk16 = 0;

  0015c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0015f	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 50   : 	this->m_iFileDataLoad = 0;

  00166	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00169	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0

; 51   : 	this->m_iAppearanceMSec = 0;

  00170	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00173	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 52   : 	this->m_iBossZoneCloseMSec = 0;

  0017a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0017d	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 53   : 	this->m_iBossZoneOpenMSec = 0;

  00184	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00187	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0

; 54   : 	this->m_iBossEggHalfChecked = 0;

  0018e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00191	c7 80 08 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+3592], 0

; 55   : 	this->m_iBossEggCount =0;

  0019b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0019e	c7 80 0c 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+3596], 0

; 56   : }

  001a8	5f		 pop	 edi
  001a9	5e		 pop	 esi
  001aa	5b		 pop	 ebx
  001ab	8b e5		 mov	 esp, ebp
  001ad	5d		 pop	 ebp
  001ae	c3		 ret	 0
?ClearData@CRaklion@@QAEXXZ ENDP			; CRaklion::ClearData
_TEXT	ENDS
PUBLIC	??_C@_0DC@PCKIKBLB@?$FL?5RAKLION?5?$FN?5?9?5Loading?5Exception?5@ ; `string'
PUBLIC	??_C@_0CA@GBIHJPJJ@?$FL?5RAKLION?5?$FN?5?9?5?$CFs?5file?5is?5Loaded?$AA@ ; `string'
PUBLIC	??_C@_0DE@GPHCLHNA@?$FL?5RAKLION?5?$FN?5?9?5BossPatternConditi@ ; `string'
PUBLIC	??_C@_0DA@FOJLIBKC@?$FL?5RAKLION?5?$FN?5?9?5BossSkillDelay?5cou@ ; `string'
PUBLIC	??_C@_0CM@OFNGIEBA@?$FL?5RAKLION?5?$FN?5?9?5BossEggMax?5count?5e@ ; `string'
PUBLIC	??_C@_0CN@DCKNIFKD@?$FL?5RAKLION?5?$FN?5?9?5BossEggHalf?5count?5@ ; `string'
PUBLIC	??_C@_0CO@GKIPOEJN@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5BosszoneOpe@ ; `string'
PUBLIC	??_C@_0CP@PLDHODLC@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5BosszoneClo@ ; `string'
PUBLIC	??_C@_0CM@FEIGAFGA@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5AppearanceD@ ; `string'
PUBLIC	??_C@_03JBJLGPFL@end?$AA@			; `string'
PUBLIC	??_C@_0BN@COPFHBAD@?$FL?5RAKLION?5?$FN?5?9?5Can?8t?5Open?5?$CFs?5?$AA@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_0DA@PLIMEMEA@?$FL?5RAKLION?5?$FN?5?9?5File?5load?5error?5?3?5@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?LoadData@CRaklion@@QAEHPAD@Z			; CRaklion::LoadData
EXTRN	?LogAddC@@3P6AXEPADZZA:DWORD			; LogAddC
EXTRN	_fclose:PROC
EXTRN	?SetPatternCondition@CRaklionBattleOfSelupan@@QAEXHH@Z:PROC ; CRaklionBattleOfSelupan::SetPatternCondition
EXTRN	?SetSelupanSkillDelay@CRaklionBattleOfSelupan@@QAEXH@Z:PROC ; CRaklionBattleOfSelupan::SetSelupanSkillDelay
EXTRN	__imp__GetLastError@0:PROC
EXTRN	_fopen:PROC
EXTRN	?MsgBox@@YAXPADZZ:PROC				; MsgBox
EXTRN	_strcmp:PROC
EXTRN	__ftol2_sse:PROC
_BSS	SEGMENT
_TokenString DB	064H DUP (?)
_TokenNumber DD	01H DUP (?)
_SMDFile DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0DC@PCKIKBLB@?$FL?5RAKLION?5?$FN?5?9?5Loading?5Exception?5@
CONST	SEGMENT
??_C@_0DC@PCKIKBLB@?$FL?5RAKLION?5?$FN?5?9?5Loading?5Exception?5@ DB '[ R'
	DB	'AKLION ] - Loading Exception Error (%s) File. ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@GBIHJPJJ@?$FL?5RAKLION?5?$FN?5?9?5?$CFs?5file?5is?5Loaded?$AA@
CONST	SEGMENT
??_C@_0CA@GBIHJPJJ@?$FL?5RAKLION?5?$FN?5?9?5?$CFs?5file?5is?5Loaded?$AA@ DB '['
	DB	' RAKLION ] - %s file is Loaded', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@GPHCLHNA@?$FL?5RAKLION?5?$FN?5?9?5BossPatternConditi@
CONST	SEGMENT
??_C@_0DE@GPHCLHNA@?$FL?5RAKLION?5?$FN?5?9?5BossPatternConditi@ DB '[ RAK'
	DB	'LION ] - BossPatternCondition[%d] error : (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@FOJLIBKC@?$FL?5RAKLION?5?$FN?5?9?5BossSkillDelay?5cou@
CONST	SEGMENT
??_C@_0DA@FOJLIBKC@?$FL?5RAKLION?5?$FN?5?9?5BossSkillDelay?5cou@ DB '[ RA'
	DB	'KLION ] - BossSkillDelay count error : (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@OFNGIEBA@?$FL?5RAKLION?5?$FN?5?9?5BossEggMax?5count?5e@
CONST	SEGMENT
??_C@_0CM@OFNGIEBA@?$FL?5RAKLION?5?$FN?5?9?5BossEggMax?5count?5e@ DB '[ R'
	DB	'AKLION ] - BossEggMax count error : (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@DCKNIFKD@?$FL?5RAKLION?5?$FN?5?9?5BossEggHalf?5count?5@
CONST	SEGMENT
??_C@_0CN@DCKNIFKD@?$FL?5RAKLION?5?$FN?5?9?5BossEggHalf?5count?5@ DB '[ R'
	DB	'AKLION ] - BossEggHalf count error : (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@GKIPOEJN@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5BosszoneOpe@
CONST	SEGMENT
??_C@_0CO@GKIPOEJN@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5BosszoneOpe@ DB '[ RA'
	DB	'KLION ] - Exceed BosszoneOpenDelay : (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@PLDHODLC@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5BosszoneClo@
CONST	SEGMENT
??_C@_0CP@PLDHODLC@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5BosszoneClo@ DB '[ RA'
	DB	'KLION ] - Exceed BosszoneCloseDelay : (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@FEIGAFGA@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5AppearanceD@
CONST	SEGMENT
??_C@_0CM@FEIGAFGA@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5AppearanceD@ DB '[ RA'
	DB	'KLION ] - Exceed AppearanceDelay : (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03JBJLGPFL@end?$AA@
CONST	SEGMENT
??_C@_03JBJLGPFL@end?$AA@ DB 'end', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@COPFHBAD@?$FL?5RAKLION?5?$FN?5?9?5Can?8t?5Open?5?$CFs?5?$AA@
CONST	SEGMENT
??_C@_0BN@COPFHBAD@?$FL?5RAKLION?5?$FN?5?9?5Can?8t?5Open?5?$CFs?5?$AA@ DB '['
	DB	' RAKLION ] - Can''t Open %s ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@PLIMEMEA@?$FL?5RAKLION?5?$FN?5?9?5File?5load?5error?5?3?5@
CONST	SEGMENT
??_C@_0DA@PLIMEMEA@?$FL?5RAKLION?5?$FN?5?9?5File?5load?5error?5?3?5@ DB '['
	DB	' RAKLION ] - File load error : File Name Error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
xdata$x	SEGMENT
__catchsym$?LoadData@CRaklion@@QAEHPAD@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?LoadData@CRaklion@@QAEHPAD@Z$0
__unwindtable$?LoadData@CRaklion@@QAEHPAD@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?LoadData@CRaklion@@QAEHPAD@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?LoadData@CRaklion@@QAEHPAD@Z$2
__ehfuncinfo$?LoadData@CRaklion@@QAEHPAD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?LoadData@CRaklion@@QAEHPAD@Z
	DD	01H
	DD	FLAT:__tryblocktable$?LoadData@CRaklion@@QAEHPAD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
_TEXT	SEGMENT
tv239 = -156						; size = 4
tv238 = -156						; size = 4
tv237 = -156						; size = 4
tv236 = -156						; size = 4
tv235 = -156						; size = 4
tv234 = -156						; size = 4
tv233 = -156						; size = 4
tv232 = -156						; size = 4
tv231 = -156						; size = 4
tv230 = -156						; size = 4
tv229 = -156						; size = 4
tv228 = -156						; size = 4
tv227 = -156						; size = 4
tv226 = -156						; size = 4
_i$227857 = -88						; size = 4
_iPattern$227849 = -84					; size = 24
_iBossSkillDelay$227792 = -60				; size = 4
_iBossEggMax$227791 = -56				; size = 4
_iBossEggHalf$227790 = -52				; size = 4
_iZoneOpenDelay$227789 = -48				; size = 4
_iZoneCloseDelay$227788 = -44				; size = 4
_iAppearanceDelay$227787 = -40				; size = 4
_iType$227786 = -36					; size = 4
_Token$227785 = -32					; size = 4
_dwError$227783 = -28					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_szFileName$ = 8					; size = 4
?LoadData@CRaklion@@QAEHPAD@Z PROC			; CRaklion::LoadData
; _this$ = ecx

; 59   : {

  001b0	55		 push	 ebp
  001b1	8b ec		 mov	 ebp, esp
  001b3	6a ff		 push	 -1
  001b5	68 00 00 00 00	 push	 __ehhandler$?LoadData@CRaklion@@QAEHPAD@Z
  001ba	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  001c0	50		 push	 eax
  001c1	51		 push	 ecx
  001c2	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
  001c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  001cd	33 c5		 xor	 eax, ebp
  001cf	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  001d2	53		 push	 ebx
  001d3	56		 push	 esi
  001d4	57		 push	 edi
  001d5	50		 push	 eax
  001d6	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  001d9	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  001df	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  001e2	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 60   : 	this->m_iFileDataLoad = 0;

  001e5	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  001e8	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0

; 61   : 
; 62   : 	if(!szFileName || !strcmp(szFileName,""))

  001ef	83 7d 08 00	 cmp	 DWORD PTR _szFileName$[ebp], 0
  001f3	74 15		 je	 SHORT $LN34@LoadData
  001f5	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  001fa	8b 45 08	 mov	 eax, DWORD PTR _szFileName$[ebp]
  001fd	50		 push	 eax
  001fe	e8 00 00 00 00	 call	 _strcmp
  00203	83 c4 08	 add	 esp, 8
  00206	85 c0		 test	 eax, eax
  00208	75 14		 jne	 SHORT $LN35@LoadData
$LN34@LoadData:

; 63   : 	{
; 64   : 		MsgBox("[ RAKLION ] - File load error : File Name Error");

  0020a	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@PLIMEMEA@?$FL?5RAKLION?5?$FN?5?9?5File?5load?5error?5?3?5@
  0020f	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00214	83 c4 04	 add	 esp, 4

; 65   : 		return FALSE;

  00217	33 c0		 xor	 eax, eax
  00219	e9 f1 04 00 00	 jmp	 $LN36@LoadData
$LN35@LoadData:

; 66   : 	}
; 67   : 
; 68   : 	try
; 69   : 	{

  0021e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 70   : 
; 71   : 		SMDFile = fopen(szFileName,"r");

  00225	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  0022a	8b 45 08	 mov	 eax, DWORD PTR _szFileName$[ebp]
  0022d	50		 push	 eax
  0022e	e8 00 00 00 00	 call	 _fopen
  00233	83 c4 08	 add	 esp, 8
  00236	a3 00 00 00 00	 mov	 DWORD PTR _SMDFile, eax

; 72   : 		
; 73   : 		if( SMDFile == NULL)

  0023b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _SMDFile, 0
  00242	75 21		 jne	 SHORT $LN32@LoadData

; 74   : 		{
; 75   : 			DWORD dwError = GetLastError();

  00244	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0024a	89 45 e4	 mov	 DWORD PTR _dwError$227783[ebp], eax

; 76   : 			MsgBox("[ RAKLION ] - Can't Open %s ",szFileName);

  0024d	8b 45 08	 mov	 eax, DWORD PTR _szFileName$[ebp]
  00250	50		 push	 eax
  00251	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@COPFHBAD@?$FL?5RAKLION?5?$FN?5?9?5Can?8t?5Open?5?$CFs?5?$AA@
  00256	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  0025b	83 c4 08	 add	 esp, 8

; 77   : 			return FALSE;

  0025e	33 c0		 xor	 eax, eax
  00260	e9 aa 04 00 00	 jmp	 $LN36@LoadData
$LN32@LoadData:

; 78   : 		}
; 79   : 
; 80   : 		enum SMDToken Token;
; 81   : 		int iType = -1;

  00265	c7 45 dc ff ff
	ff ff		 mov	 DWORD PTR _iType$227786[ebp], -1
$LN31@LoadData:

; 82   : 		int iAppearanceDelay;
; 83   : 		int iZoneCloseDelay;
; 84   : 		int iZoneOpenDelay;
; 85   : 		int iBossEggHalf;
; 86   : 		int iBossEggMax;
; 87   : 		int iBossSkillDelay;
; 88   : 
; 89   : 		while ( true )

  0026c	b8 01 00 00 00	 mov	 eax, 1
  00271	85 c0		 test	 eax, eax
  00273	0f 84 3d 04 00
	00		 je	 $LN30@LoadData

; 90   : 		{
; 91   : 
; 92   : 			Token = GetToken();

  00279	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  0027e	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv226[ebp], eax
  00284	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv226[ebp]
  0028a	89 45 e0	 mov	 DWORD PTR _Token$227785[ebp], eax

; 93   : 
; 94   : 			if ( Token == END)

  0028d	83 7d e0 02	 cmp	 DWORD PTR _Token$227785[ebp], 2
  00291	75 05		 jne	 SHORT $LN29@LoadData

; 95   : 			{
; 96   : 				break;

  00293	e9 1e 04 00 00	 jmp	 $LN30@LoadData
$LN29@LoadData:

; 97   : 			}
; 98   : 
; 99   : 			iType = (int)TokenNumber;

  00298	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0029e	e8 00 00 00 00	 call	 __ftol2_sse
  002a3	89 45 dc	 mov	 DWORD PTR _iType$227786[ebp], eax
$LN28@LoadData:

; 100  : 
; 101  : 			while ( true )

  002a6	b8 01 00 00 00	 mov	 eax, 1
  002ab	85 c0		 test	 eax, eax
  002ad	0f 84 fe 03 00
	00		 je	 $LN27@LoadData

; 102  : 			{
; 103  : 				if ( iType == 0 )

  002b3	83 7d dc 00	 cmp	 DWORD PTR _iType$227786[ebp], 0
  002b7	0f 85 22 01 00
	00		 jne	 $LN26@LoadData

; 104  : 				{
; 105  : 					iAppearanceDelay = 0;

  002bd	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _iAppearanceDelay$227787[ebp], 0

; 106  : 					iZoneCloseDelay = 0;

  002c4	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _iZoneCloseDelay$227788[ebp], 0

; 107  : 					iZoneOpenDelay = 0;

  002cb	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _iZoneOpenDelay$227789[ebp], 0

; 108  : 
; 109  : 					Token = GetToken();

  002d2	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  002d7	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv227[ebp], eax
  002dd	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv227[ebp]
  002e3	89 45 e0	 mov	 DWORD PTR _Token$227785[ebp], eax

; 110  : 
; 111  : 					if( strcmp("end", TokenString) == 0 )

  002e6	68 00 00 00 00	 push	 OFFSET _TokenString
  002eb	68 00 00 00 00	 push	 OFFSET ??_C@_03JBJLGPFL@end?$AA@
  002f0	e8 00 00 00 00	 call	 _strcmp
  002f5	83 c4 08	 add	 esp, 8
  002f8	85 c0		 test	 eax, eax
  002fa	75 05		 jne	 SHORT $LN25@LoadData

; 112  : 					{
; 113  : 						break;

  002fc	e9 b0 03 00 00	 jmp	 $LN27@LoadData
$LN25@LoadData:

; 114  : 					}
; 115  : 					
; 116  : 					iAppearanceDelay = (int)TokenNumber;

  00301	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00307	e8 00 00 00 00	 call	 __ftol2_sse
  0030c	89 45 d8	 mov	 DWORD PTR _iAppearanceDelay$227787[ebp], eax

; 117  : 
; 118  : 					Token = GetToken();

  0030f	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00314	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv228[ebp], eax
  0031a	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv228[ebp]
  00320	89 45 e0	 mov	 DWORD PTR _Token$227785[ebp], eax

; 119  : 					iZoneCloseDelay = (int)TokenNumber;

  00323	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00329	e8 00 00 00 00	 call	 __ftol2_sse
  0032e	89 45 d4	 mov	 DWORD PTR _iZoneCloseDelay$227788[ebp], eax

; 120  : 
; 121  : 					Token = GetToken();

  00331	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00336	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv229[ebp], eax
  0033c	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv229[ebp]
  00342	89 45 e0	 mov	 DWORD PTR _Token$227785[ebp], eax

; 122  : 					iZoneOpenDelay = (int)TokenNumber;

  00345	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0034b	e8 00 00 00 00	 call	 __ftol2_sse
  00350	89 45 d0	 mov	 DWORD PTR _iZoneOpenDelay$227789[ebp], eax

; 123  : 
; 124  : 					if (iAppearanceDelay < 0 || iAppearanceDelay > MAX_RAKLION_APPEARANCE_DELAY )

  00353	83 7d d8 00	 cmp	 DWORD PTR _iAppearanceDelay$227787[ebp], 0
  00357	7c 06		 jl	 SHORT $LN23@LoadData
  00359	83 7d d8 0a	 cmp	 DWORD PTR _iAppearanceDelay$227787[ebp], 10 ; 0000000aH
  0035d	7e 16		 jle	 SHORT $LN24@LoadData
$LN23@LoadData:

; 125  : 					{
; 126  : 						MsgBox("[ RAKLION ] - Exceed AppearanceDelay : (%d)",iAppearanceDelay);

  0035f	8b 45 d8	 mov	 eax, DWORD PTR _iAppearanceDelay$227787[ebp]
  00362	50		 push	 eax
  00363	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@FEIGAFGA@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5AppearanceD@
  00368	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  0036d	83 c4 08	 add	 esp, 8

; 127  : 						break;

  00370	e9 3c 03 00 00	 jmp	 $LN27@LoadData
$LN24@LoadData:

; 128  : 					}
; 129  : 					if (iZoneCloseDelay < 0 || iZoneCloseDelay >= MAX_RAKLION_BOSSZONECLOSE_DELAY )

  00375	83 7d d4 00	 cmp	 DWORD PTR _iZoneCloseDelay$227788[ebp], 0
  00379	7c 09		 jl	 SHORT $LN21@LoadData
  0037b	81 7d d4 e4 51
	01 00		 cmp	 DWORD PTR _iZoneCloseDelay$227788[ebp], 86500 ; 000151e4H
  00382	7c 16		 jl	 SHORT $LN22@LoadData
$LN21@LoadData:

; 130  : 					{
; 131  : 						MsgBox("[ RAKLION ] - Exceed BosszoneCloseDelay : (%d)",iZoneCloseDelay);

  00384	8b 45 d4	 mov	 eax, DWORD PTR _iZoneCloseDelay$227788[ebp]
  00387	50		 push	 eax
  00388	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@PLDHODLC@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5BosszoneClo@
  0038d	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00392	83 c4 08	 add	 esp, 8

; 132  : 						break;

  00395	e9 17 03 00 00	 jmp	 $LN27@LoadData
$LN22@LoadData:

; 133  : 					}
; 134  : 					if (iZoneOpenDelay < 0 || iZoneOpenDelay >= MAX_RAKLION_BOSSZONEOPEN_DELAY )

  0039a	83 7d d0 00	 cmp	 DWORD PTR _iZoneOpenDelay$227789[ebp], 0
  0039e	7c 09		 jl	 SHORT $LN19@LoadData
  003a0	81 7d d0 e4 51
	01 00		 cmp	 DWORD PTR _iZoneOpenDelay$227789[ebp], 86500 ; 000151e4H
  003a7	7c 16		 jl	 SHORT $LN20@LoadData
$LN19@LoadData:

; 135  : 					{
; 136  : 						MsgBox("[ RAKLION ] - Exceed BosszoneOpenDelay : (%d)",iZoneOpenDelay);

  003a9	8b 45 d0	 mov	 eax, DWORD PTR _iZoneOpenDelay$227789[ebp]
  003ac	50		 push	 eax
  003ad	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@GKIPOEJN@?$FL?5RAKLION?5?$FN?5?9?5Exceed?5BosszoneOpe@
  003b2	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  003b7	83 c4 08	 add	 esp, 8

; 137  : 						break;

  003ba	e9 f2 02 00 00	 jmp	 $LN27@LoadData
$LN20@LoadData:

; 138  : 					}
; 139  : 
; 140  : 					this->m_iAppearanceDelay	= iAppearanceDelay;

  003bf	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  003c2	8b 4d d8	 mov	 ecx, DWORD PTR _iAppearanceDelay$227787[ebp]
  003c5	89 48 24	 mov	 DWORD PTR [eax+36], ecx

; 141  : 					this->m_iBossZoneCloseDelay	= iZoneCloseDelay;

  003c8	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  003cb	8b 4d d4	 mov	 ecx, DWORD PTR _iZoneCloseDelay$227788[ebp]
  003ce	89 48 28	 mov	 DWORD PTR [eax+40], ecx

; 142  : 					this->m_iBossZoneOpenDelay	= iZoneOpenDelay;

  003d1	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  003d4	8b 4d d0	 mov	 ecx, DWORD PTR _iZoneOpenDelay$227789[ebp]
  003d7	89 48 2c	 mov	 DWORD PTR [eax+44], ecx
  003da	e9 cd 02 00 00	 jmp	 $LN1@LoadData
$LN26@LoadData:

; 143  : 
; 144  : 				}
; 145  : 				
; 146  : 				else if ( iType == 1 )

  003df	83 7d dc 01	 cmp	 DWORD PTR _iType$227786[ebp], 1
  003e3	0f 85 bc 00 00
	00		 jne	 $LN17@LoadData

; 147  : 				{
; 148  : 					iBossEggHalf = 0;

  003e9	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _iBossEggHalf$227790[ebp], 0

; 149  : 					iBossEggMax = 0;

  003f0	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _iBossEggMax$227791[ebp], 0

; 150  : 
; 151  : 					Token = GetToken();

  003f7	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  003fc	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv230[ebp], eax
  00402	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv230[ebp]
  00408	89 45 e0	 mov	 DWORD PTR _Token$227785[ebp], eax

; 152  : 
; 153  : 					if ( strcmp("end",TokenString) == 0)

  0040b	68 00 00 00 00	 push	 OFFSET _TokenString
  00410	68 00 00 00 00	 push	 OFFSET ??_C@_03JBJLGPFL@end?$AA@
  00415	e8 00 00 00 00	 call	 _strcmp
  0041a	83 c4 08	 add	 esp, 8
  0041d	85 c0		 test	 eax, eax
  0041f	75 05		 jne	 SHORT $LN16@LoadData

; 154  : 					{
; 155  : 						break;

  00421	e9 8b 02 00 00	 jmp	 $LN27@LoadData
$LN16@LoadData:

; 156  : 					}
; 157  : 
; 158  : 					iBossEggHalf = (int)TokenNumber;

  00426	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0042c	e8 00 00 00 00	 call	 __ftol2_sse
  00431	89 45 cc	 mov	 DWORD PTR _iBossEggHalf$227790[ebp], eax

; 159  : 
; 160  : 					Token = GetToken();

  00434	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00439	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv231[ebp], eax
  0043f	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv231[ebp]
  00445	89 45 e0	 mov	 DWORD PTR _Token$227785[ebp], eax

; 161  : 					iBossEggMax = (int)TokenNumber;

  00448	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0044e	e8 00 00 00 00	 call	 __ftol2_sse
  00453	89 45 c8	 mov	 DWORD PTR _iBossEggMax$227791[ebp], eax

; 162  : 
; 163  : 
; 164  : 					if(iBossEggHalf < 0 )

  00456	83 7d cc 00	 cmp	 DWORD PTR _iBossEggHalf$227790[ebp], 0
  0045a	7d 16		 jge	 SHORT $LN15@LoadData

; 165  : 					{
; 166  : 						MsgBox("[ RAKLION ] - BossEggHalf count error : (%d)",iBossEggHalf);

  0045c	8b 45 cc	 mov	 eax, DWORD PTR _iBossEggHalf$227790[ebp]
  0045f	50		 push	 eax
  00460	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@DCKNIFKD@?$FL?5RAKLION?5?$FN?5?9?5BossEggHalf?5count?5@
  00465	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  0046a	83 c4 08	 add	 esp, 8

; 167  : 						break;

  0046d	e9 3f 02 00 00	 jmp	 $LN27@LoadData
$LN15@LoadData:

; 168  : 					}
; 169  : 
; 170  : 					if(iBossEggMax < 0 )

  00472	83 7d c8 00	 cmp	 DWORD PTR _iBossEggMax$227791[ebp], 0
  00476	7d 16		 jge	 SHORT $LN14@LoadData

; 171  : 					{
; 172  : 						MsgBox("[ RAKLION ] - BossEggMax count error : (%d)",iBossEggMax);

  00478	8b 45 c8	 mov	 eax, DWORD PTR _iBossEggMax$227791[ebp]
  0047b	50		 push	 eax
  0047c	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@OFNGIEBA@?$FL?5RAKLION?5?$FN?5?9?5BossEggMax?5count?5e@
  00481	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00486	83 c4 08	 add	 esp, 8

; 173  : 						break;

  00489	e9 23 02 00 00	 jmp	 $LN27@LoadData
$LN14@LoadData:

; 174  : 					}
; 175  : 
; 176  : 					this->m_iBossEggHalf = iBossEggHalf;

  0048e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00491	8b 4d cc	 mov	 ecx, DWORD PTR _iBossEggHalf$227790[ebp]
  00494	89 48 30	 mov	 DWORD PTR [eax+48], ecx

; 177  : 					this->m_iBossEggMax = iBossEggMax;

  00497	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0049a	8b 4d c8	 mov	 ecx, DWORD PTR _iBossEggMax$227791[ebp]
  0049d	89 48 34	 mov	 DWORD PTR [eax+52], ecx
  004a0	e9 07 02 00 00	 jmp	 $LN1@LoadData
$LN17@LoadData:

; 178  : 				}
; 179  : 
; 180  : 				else if ( iType == 2 )

  004a5	83 7d dc 02	 cmp	 DWORD PTR _iType$227786[ebp], 2
  004a9	75 74		 jne	 SHORT $LN12@LoadData

; 181  : 				{
; 182  : 					iBossSkillDelay = 0;

  004ab	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _iBossSkillDelay$227792[ebp], 0

; 183  : 
; 184  : 					Token = GetToken();

  004b2	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  004b7	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv232[ebp], eax
  004bd	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv232[ebp]
  004c3	89 45 e0	 mov	 DWORD PTR _Token$227785[ebp], eax

; 185  : 
; 186  : 					if ( strcmp("end",TokenString) == 0)

  004c6	68 00 00 00 00	 push	 OFFSET _TokenString
  004cb	68 00 00 00 00	 push	 OFFSET ??_C@_03JBJLGPFL@end?$AA@
  004d0	e8 00 00 00 00	 call	 _strcmp
  004d5	83 c4 08	 add	 esp, 8
  004d8	85 c0		 test	 eax, eax
  004da	75 05		 jne	 SHORT $LN11@LoadData

; 187  : 					{
; 188  : 						break;

  004dc	e9 d0 01 00 00	 jmp	 $LN27@LoadData
$LN11@LoadData:

; 189  : 					}
; 190  : 
; 191  : 					iBossSkillDelay = (int)TokenNumber;

  004e1	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  004e7	e8 00 00 00 00	 call	 __ftol2_sse
  004ec	89 45 c4	 mov	 DWORD PTR _iBossSkillDelay$227792[ebp], eax

; 192  : 
; 193  : 					if ( iBossSkillDelay < 0)

  004ef	83 7d c4 00	 cmp	 DWORD PTR _iBossSkillDelay$227792[ebp], 0
  004f3	7d 16		 jge	 SHORT $LN10@LoadData

; 194  : 					{
; 195  : 						MsgBox("[ RAKLION ] - BossSkillDelay count error : (%d)",iBossSkillDelay);

  004f5	8b 45 c4	 mov	 eax, DWORD PTR _iBossSkillDelay$227792[ebp]
  004f8	50		 push	 eax
  004f9	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@FOJLIBKC@?$FL?5RAKLION?5?$FN?5?9?5BossSkillDelay?5cou@
  004fe	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00503	83 c4 08	 add	 esp, 8

; 196  : 						break;

  00506	e9 a6 01 00 00	 jmp	 $LN27@LoadData
$LN10@LoadData:

; 197  : 					}
; 198  : 
; 199  : 					this->m_RaklionBattleOfSelupan.SetSelupanSkillDelay(iBossSkillDelay);

  0050b	8b 45 c4	 mov	 eax, DWORD PTR _iBossSkillDelay$227792[ebp]
  0050e	50		 push	 eax
  0050f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00512	83 c1 38	 add	 ecx, 56			; 00000038H
  00515	e8 00 00 00 00	 call	 ?SetSelupanSkillDelay@CRaklionBattleOfSelupan@@QAEXH@Z ; CRaklionBattleOfSelupan::SetSelupanSkillDelay
  0051a	e9 8d 01 00 00	 jmp	 $LN1@LoadData
$LN12@LoadData:

; 200  : 				}
; 201  : 
; 202  : 				else if ( iType == 3 )

  0051f	83 7d dc 03	 cmp	 DWORD PTR _iType$227786[ebp], 3
  00523	0f 85 57 01 00
	00		 jne	 $LN8@LoadData

; 203  : 				{
; 204  : 					int iPattern[6] = { 0 };

  00529	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR _iPattern$227849[ebp], 0
  00530	33 c0		 xor	 eax, eax
  00532	89 45 b0	 mov	 DWORD PTR _iPattern$227849[ebp+4], eax
  00535	89 45 b4	 mov	 DWORD PTR _iPattern$227849[ebp+8], eax
  00538	89 45 b8	 mov	 DWORD PTR _iPattern$227849[ebp+12], eax
  0053b	89 45 bc	 mov	 DWORD PTR _iPattern$227849[ebp+16], eax
  0053e	89 45 c0	 mov	 DWORD PTR _iPattern$227849[ebp+20], eax

; 205  : 
; 206  : 
; 207  : 					Token = GetToken();

  00541	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00546	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv233[ebp], eax
  0054c	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv233[ebp]
  00552	89 45 e0	 mov	 DWORD PTR _Token$227785[ebp], eax

; 208  : 
; 209  : 					if ( strcmp("end",TokenString) == 0)

  00555	68 00 00 00 00	 push	 OFFSET _TokenString
  0055a	68 00 00 00 00	 push	 OFFSET ??_C@_03JBJLGPFL@end?$AA@
  0055f	e8 00 00 00 00	 call	 _strcmp
  00564	83 c4 08	 add	 esp, 8
  00567	85 c0		 test	 eax, eax
  00569	75 05		 jne	 SHORT $LN7@LoadData

; 210  : 					{
; 211  : 						break;

  0056b	e9 41 01 00 00	 jmp	 $LN27@LoadData
$LN7@LoadData:

; 212  : 					}
; 213  : 
; 214  : 					iPattern[0] = (int)TokenNumber;

  00570	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00576	e8 00 00 00 00	 call	 __ftol2_sse
  0057b	89 45 ac	 mov	 DWORD PTR _iPattern$227849[ebp], eax

; 215  : 
; 216  : 					Token = GetToken();

  0057e	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00583	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv234[ebp], eax
  00589	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv234[ebp]
  0058f	89 45 e0	 mov	 DWORD PTR _Token$227785[ebp], eax

; 217  : 					iPattern[1] = (int)TokenNumber;

  00592	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00598	e8 00 00 00 00	 call	 __ftol2_sse
  0059d	89 45 b0	 mov	 DWORD PTR _iPattern$227849[ebp+4], eax

; 218  : 
; 219  : 					Token = GetToken();

  005a0	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  005a5	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv235[ebp], eax
  005ab	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv235[ebp]
  005b1	89 45 e0	 mov	 DWORD PTR _Token$227785[ebp], eax

; 220  : 					iPattern[2] = (int)TokenNumber;

  005b4	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  005ba	e8 00 00 00 00	 call	 __ftol2_sse
  005bf	89 45 b4	 mov	 DWORD PTR _iPattern$227849[ebp+8], eax

; 221  : 
; 222  : 					Token = GetToken();

  005c2	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  005c7	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv236[ebp], eax
  005cd	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv236[ebp]
  005d3	89 45 e0	 mov	 DWORD PTR _Token$227785[ebp], eax

; 223  : 					iPattern[3] = (int)TokenNumber;

  005d6	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  005dc	e8 00 00 00 00	 call	 __ftol2_sse
  005e1	89 45 b8	 mov	 DWORD PTR _iPattern$227849[ebp+12], eax

; 224  : 
; 225  : 					Token = GetToken();

  005e4	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  005e9	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv237[ebp], eax
  005ef	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv237[ebp]
  005f5	89 45 e0	 mov	 DWORD PTR _Token$227785[ebp], eax

; 226  : 					iPattern[4] = (int)TokenNumber;

  005f8	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  005fe	e8 00 00 00 00	 call	 __ftol2_sse
  00603	89 45 bc	 mov	 DWORD PTR _iPattern$227849[ebp+16], eax

; 227  : 
; 228  : 					Token = GetToken();

  00606	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  0060b	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv238[ebp], eax
  00611	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv238[ebp]
  00617	89 45 e0	 mov	 DWORD PTR _Token$227785[ebp], eax

; 229  : 					iPattern[5] = (int)TokenNumber;

  0061a	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00620	e8 00 00 00 00	 call	 __ftol2_sse
  00625	89 45 c0	 mov	 DWORD PTR _iPattern$227849[ebp+20], eax

; 230  : 
; 231  : 					for ( int i = 0; i < 6; i++)

  00628	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _i$227857[ebp], 0
  0062f	eb 09		 jmp	 SHORT $LN6@LoadData
$LN5@LoadData:
  00631	8b 45 a8	 mov	 eax, DWORD PTR _i$227857[ebp]
  00634	83 c0 01	 add	 eax, 1
  00637	89 45 a8	 mov	 DWORD PTR _i$227857[ebp], eax
$LN6@LoadData:
  0063a	83 7d a8 06	 cmp	 DWORD PTR _i$227857[ebp], 6
  0063e	7d 3e		 jge	 SHORT $LN4@LoadData

; 232  : 					{
; 233  : 						if(iPattern[i] < 0)

  00640	8b 45 a8	 mov	 eax, DWORD PTR _i$227857[ebp]
  00643	83 7c 85 ac 00	 cmp	 DWORD PTR _iPattern$227849[ebp+eax*4], 0
  00648	7d 1b		 jge	 SHORT $LN3@LoadData

; 234  : 						{
; 235  : 							MsgBox("[ RAKLION ] - BossPatternCondition[%d] error : (%d)", i, iPattern[i]);

  0064a	8b 45 a8	 mov	 eax, DWORD PTR _i$227857[ebp]
  0064d	8b 4c 85 ac	 mov	 ecx, DWORD PTR _iPattern$227849[ebp+eax*4]
  00651	51		 push	 ecx
  00652	8b 55 a8	 mov	 edx, DWORD PTR _i$227857[ebp]
  00655	52		 push	 edx
  00656	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@GPHCLHNA@?$FL?5RAKLION?5?$FN?5?9?5BossPatternConditi@
  0065b	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00660	83 c4 0c	 add	 esp, 12			; 0000000cH

; 236  : 							break;

  00663	eb 19		 jmp	 SHORT $LN4@LoadData
$LN3@LoadData:

; 237  : 						}
; 238  : 						this->m_RaklionBattleOfSelupan.SetPatternCondition(i,iPattern[i]);

  00665	8b 45 a8	 mov	 eax, DWORD PTR _i$227857[ebp]
  00668	8b 4c 85 ac	 mov	 ecx, DWORD PTR _iPattern$227849[ebp+eax*4]
  0066c	51		 push	 ecx
  0066d	8b 55 a8	 mov	 edx, DWORD PTR _i$227857[ebp]
  00670	52		 push	 edx
  00671	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00674	83 c1 38	 add	 ecx, 56			; 00000038H
  00677	e8 00 00 00 00	 call	 ?SetPatternCondition@CRaklionBattleOfSelupan@@QAEXHH@Z ; CRaklionBattleOfSelupan::SetPatternCondition

; 239  : 					}

  0067c	eb b3		 jmp	 SHORT $LN5@LoadData
$LN4@LoadData:

; 240  : 				}
; 241  : 				else

  0067e	eb 2c		 jmp	 SHORT $LN1@LoadData
$LN8@LoadData:

; 242  : 				{
; 243  : 					Token = (SMDToken)GetToken();

  00680	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00685	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv239[ebp], eax
  0068b	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv239[ebp]
  00691	89 45 e0	 mov	 DWORD PTR _Token$227785[ebp], eax

; 244  : 					
; 245  : 					if ( !strcmp("end", TokenString))

  00694	68 00 00 00 00	 push	 OFFSET _TokenString
  00699	68 00 00 00 00	 push	 OFFSET ??_C@_03JBJLGPFL@end?$AA@
  0069e	e8 00 00 00 00	 call	 _strcmp
  006a3	83 c4 08	 add	 esp, 8
  006a6	85 c0		 test	 eax, eax
  006a8	75 02		 jne	 SHORT $LN1@LoadData

; 246  : 						break;

  006aa	eb 05		 jmp	 SHORT $LN27@LoadData
$LN1@LoadData:

; 247  : 				}
; 248  : 			}

  006ac	e9 f5 fb ff ff	 jmp	 $LN28@LoadData
$LN27@LoadData:

; 249  : 		}

  006b1	e9 b6 fb ff ff	 jmp	 $LN31@LoadData
$LN30@LoadData:

; 250  : 
; 251  : 		fclose(SMDFile);

  006b6	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  006bb	50		 push	 eax
  006bc	e8 00 00 00 00	 call	 _fclose
  006c1	83 c4 04	 add	 esp, 4

; 252  : 		LogAddC(2,"[ RAKLION ] - %s file is Loaded", szFileName);

  006c4	8b 45 08	 mov	 eax, DWORD PTR _szFileName$[ebp]
  006c7	50		 push	 eax
  006c8	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@GBIHJPJJ@?$FL?5RAKLION?5?$FN?5?9?5?$CFs?5file?5is?5Loaded?$AA@
  006cd	6a 02		 push	 2
  006cf	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  006d5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 253  : 		this->m_iFileDataLoad = 1;

  006d8	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  006db	c7 40 20 01 00
	00 00		 mov	 DWORD PTR [eax+32], 1

; 254  : 	}

  006e2	eb 1e		 jmp	 SHORT $LN38@LoadData
__catch$?LoadData@CRaklion@@QAEHPAD@Z$0:

; 255  : 	catch(...)
; 256  : 	{
; 257  : 		MsgBox("[ RAKLION ] - Loading Exception Error (%s) File. ",szFileName);

  006e4	8b 45 08	 mov	 eax, DWORD PTR _szFileName$[ebp]
  006e7	50		 push	 eax
  006e8	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@PCKIKBLB@?$FL?5RAKLION?5?$FN?5?9?5Loading?5Exception?5@
  006ed	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  006f2	83 c4 08	 add	 esp, 8

; 258  : 	}

  006f5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  006fc	b8 00 00 00 00	 mov	 eax, $LN41@LoadData
  00701	c3		 ret	 0
$LN38@LoadData:
  00702	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
$LN41@LoadData:

; 259  : 
; 260  : 	return this->m_iFileDataLoad;

  00709	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0070c	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
$LN36@LoadData:

; 261  : }

  0070f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00712	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00719	59		 pop	 ecx
  0071a	5f		 pop	 edi
  0071b	5e		 pop	 esi
  0071c	5b		 pop	 ebx
  0071d	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00720	33 cd		 xor	 ecx, ebp
  00722	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00727	8b e5		 mov	 esp, ebp
  00729	5d		 pop	 ebp
  0072a	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?LoadData@CRaklion@@QAEHPAD@Z:
  00026	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002d	8b 8a 60 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-160]
  00033	33 c8		 xor	 ecx, eax
  00035	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003a	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0003d	33 c8		 xor	 ecx, eax
  0003f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00044	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadData@CRaklion@@QAEHPAD@Z
  00049	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadData@CRaklion@@QAEHPAD@Z ENDP			; CRaklion::LoadData
PUBLIC	__$ArrayPad$
EXTRN	_isalnum:PROC
EXTRN	_isalpha:PROC
EXTRN	_atof:PROC
EXTRN	_isdigit:PROC
EXTRN	_getc:PROC
EXTRN	_ungetc:PROC
EXTRN	_isspace:PROC
EXTRN	_fgetc:PROC
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_CurrentToken DD 01H DUP (?)
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\include\readscript.h
_BSS	ENDS
_TEXT	SEGMENT
tv90 = -180						; size = 4
_TempString$ = -112					; size = 100
_p$ = -12						; size = 4
_ch$ = -5						; size = 1
__$ArrayPad$ = -4					; size = 4
?GetToken@@YA?AW4SMDToken@@XZ PROC			; GetToken

; 24   : {

  00730	55		 push	 ebp
  00731	8b ec		 mov	 ebp, esp
  00733	81 ec b4 00 00
	00		 sub	 esp, 180		; 000000b4H
  00739	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0073e	33 c5		 xor	 eax, ebp
  00740	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00743	53		 push	 ebx
  00744	56		 push	 esi
  00745	57		 push	 edi

; 25   : 	char ch;
; 26   : 	char* p;
; 27   : 	char TempString[100];
; 28   : 
; 29   : 	TokenString[0]=0;

  00746	c6 05 00 00 00
	00 00		 mov	 BYTE PTR _TokenString, 0
$LN31@GetToken:

; 30   : 
; 31   : 	do
; 32   : 	{
; 33   : 		if ((ch=fgetc(SMDFile)) == -1)

  0074d	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00752	50		 push	 eax
  00753	e8 00 00 00 00	 call	 _fgetc
  00758	83 c4 04	 add	 esp, 4
  0075b	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  0075e	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00762	83 f9 ff	 cmp	 ecx, -1
  00765	75 0c		 jne	 SHORT $LN28@GetToken

; 34   : 		{
; 35   : 			return END;	// End of FILE (EOF)

  00767	b8 02 00 00 00	 mov	 eax, 2
  0076c	e9 f7 02 00 00	 jmp	 $LN32@GetToken

; 36   : 		}
; 37   : 		else

  00771	eb 5b		 jmp	 SHORT $LN22@GetToken
$LN28@GetToken:

; 38   : 		{	
; 39   : 			if (ch=='/')		// this is /

  00773	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00777	83 f8 2f	 cmp	 eax, 47			; 0000002fH
  0077a	75 52		 jne	 SHORT $LN22@GetToken

; 40   : 			{
; 41   : 				if((ch=fgetc(SMDFile)) == '/')

  0077c	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00781	50		 push	 eax
  00782	e8 00 00 00 00	 call	 _fgetc
  00787	83 c4 04	 add	 esp, 4
  0078a	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  0078d	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00791	83 f9 2f	 cmp	 ecx, 47			; 0000002fH
  00794	75 38		 jne	 SHORT $LN22@GetToken
$LN24@GetToken:

; 42   : 				{
; 43   : 					while ((ch != '\n') && (ch != -1))	// End of Line (EOL)

  00796	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  0079a	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0079d	74 1c		 je	 SHORT $LN23@GetToken
  0079f	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  007a3	83 f8 ff	 cmp	 eax, -1
  007a6	74 13		 je	 SHORT $LN23@GetToken

; 44   : 					{
; 45   : 						ch=fgetc(SMDFile);

  007a8	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  007ad	50		 push	 eax
  007ae	e8 00 00 00 00	 call	 _fgetc
  007b3	83 c4 04	 add	 esp, 4
  007b6	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al

; 46   : 					}

  007b9	eb db		 jmp	 SHORT $LN24@GetToken
$LN23@GetToken:

; 47   : 	
; 48   : 					if (ch == -1)

  007bb	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  007bf	83 f8 ff	 cmp	 eax, -1
  007c2	75 0a		 jne	 SHORT $LN22@GetToken

; 49   : 					{
; 50   : 						return END;	// End of FILE

  007c4	b8 02 00 00 00	 mov	 eax, 2
  007c9	e9 9a 02 00 00	 jmp	 $LN32@GetToken
$LN22@GetToken:

; 51   : 					}
; 52   : 				}
; 53   : 			}
; 54   : 		}
; 55   : 	}
; 56   : 	while (isspace(ch) != 0);

  007ce	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  007d2	50		 push	 eax
  007d3	e8 00 00 00 00	 call	 _isspace
  007d8	83 c4 04	 add	 esp, 4
  007db	85 c0		 test	 eax, eax
  007dd	0f 85 6a ff ff
	ff		 jne	 $LN31@GetToken

; 57   : 
; 58   : 	
; 59   : 	switch(ch)

  007e3	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  007e7	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv90[ebp], eax
  007ed	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR tv90[ebp]
  007f3	83 e9 22	 sub	 ecx, 34			; 00000022H
  007f6	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv90[ebp], ecx
  007fc	83 bd 4c ff ff
	ff 5b		 cmp	 DWORD PTR tv90[ebp], 91	; 0000005bH
  00803	0f 87 a3 01 00
	00		 ja	 $LN6@GetToken
  00809	8b 95 4c ff ff
	ff		 mov	 edx, DWORD PTR tv90[ebp]
  0080f	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN34@GetToken[edx]
  00816	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN35@GetToken[eax*4]
$LN19@GetToken:

; 60   : 	{
; 61   : 
; 62   : 	case 0x23:	// #
; 63   : 		return CurrentToken=COMMAND;

  0081d	c7 05 00 00 00
	00 23 00 00 00	 mov	 DWORD PTR _CurrentToken, 35 ; 00000023H
  00827	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  0082c	e9 37 02 00 00	 jmp	 $LN32@GetToken

; 64   : 		break;

  00831	e9 30 02 00 00	 jmp	 $LN20@GetToken
$LN18@GetToken:

; 65   : 	
; 66   : 	case 0x3B:	// ;
; 67   : 		return CurrentToken=SEMICOLON;

  00836	c7 05 00 00 00
	00 3b 00 00 00	 mov	 DWORD PTR _CurrentToken, 59 ; 0000003bH
  00840	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00845	e9 1e 02 00 00	 jmp	 $LN32@GetToken

; 68   : 		break;

  0084a	e9 17 02 00 00	 jmp	 $LN20@GetToken
$LN17@GetToken:

; 69   : 	
; 70   : 	case 0x2C:	// ,
; 71   : 
; 72   : 		return CurrentToken=COMMA;

  0084f	c7 05 00 00 00
	00 2c 00 00 00	 mov	 DWORD PTR _CurrentToken, 44 ; 0000002cH
  00859	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  0085e	e9 05 02 00 00	 jmp	 $LN32@GetToken

; 73   : 		break;

  00863	e9 fe 01 00 00	 jmp	 $LN20@GetToken
$LN16@GetToken:

; 74   : 	
; 75   : 	case 0x7B:	// {
; 76   : 		return CurrentToken = LP;

  00868	c7 05 00 00 00
	00 7b 00 00 00	 mov	 DWORD PTR _CurrentToken, 123 ; 0000007bH
  00872	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00877	e9 ec 01 00 00	 jmp	 $LN32@GetToken

; 77   : 		break;

  0087c	e9 e5 01 00 00	 jmp	 $LN20@GetToken
$LN15@GetToken:

; 78   : 
; 79   : 	case 0x7D:	// }
; 80   : 		return CurrentToken = RP;

  00881	c7 05 00 00 00
	00 7d 00 00 00	 mov	 DWORD PTR _CurrentToken, 125 ; 0000007dH
  0088b	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00890	e9 d3 01 00 00	 jmp	 $LN32@GetToken

; 81   : 		break;

  00895	e9 cc 01 00 00	 jmp	 $LN20@GetToken
$LN14@GetToken:

; 82   : 	// Nice Index Table :)	by Deathway
; 83   : 	// Numbers Case
; 84   : 	case 0x2D:	//-
; 85   : 	case 0x2E:	//.
; 86   : 	case '0':	//0
; 87   : 	case '1':	//1
; 88   : 	case '2':	//2
; 89   : 	case '3':	//3
; 90   : 	case '4':	//4		
; 91   : 	case '5':	//5
; 92   : 	case '6':	//6
; 93   : 	case '7':	//7
; 94   : 	case '8':	//8
; 95   : 	case '9':	//9
; 96   : 		ungetc(ch, SMDFile);

  0089a	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0089f	50		 push	 eax
  008a0	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  008a4	51		 push	 ecx
  008a5	e8 00 00 00 00	 call	 _ungetc
  008aa	83 c4 08	 add	 esp, 8

; 97   : 		p = TempString;

  008ad	8d 45 90	 lea	 eax, DWORD PTR _TempString$[ebp]
  008b0	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax
$LN13@GetToken:

; 98   : 		
; 99   : 		while (((ch=getc(SMDFile)) != -1) && ((ch == 0x2E) || (isdigit(ch) != 0) || (ch == 0x2D)))  // 2e '.'  2D '-'

  008b3	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  008b8	50		 push	 eax
  008b9	e8 00 00 00 00	 call	 _getc
  008be	83 c4 04	 add	 esp, 4
  008c1	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  008c4	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  008c8	83 f9 ff	 cmp	 ecx, -1
  008cb	74 36		 je	 SHORT $LN12@GetToken
  008cd	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  008d1	83 f8 2e	 cmp	 eax, 46			; 0000002eH
  008d4	74 1a		 je	 SHORT $LN11@GetToken
  008d6	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  008da	50		 push	 eax
  008db	e8 00 00 00 00	 call	 _isdigit
  008e0	83 c4 04	 add	 esp, 4
  008e3	85 c0		 test	 eax, eax
  008e5	75 09		 jne	 SHORT $LN11@GetToken
  008e7	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  008eb	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  008ee	75 13		 jne	 SHORT $LN12@GetToken
$LN11@GetToken:

; 100  : 		{
; 101  : 			*p = ch;	// Construct a String

  008f0	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  008f3	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  008f6	88 08		 mov	 BYTE PTR [eax], cl

; 102  : 			p++;

  008f8	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  008fb	83 c0 01	 add	 eax, 1
  008fe	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 103  : 		}		

  00901	eb b0		 jmp	 SHORT $LN13@GetToken
$LN12@GetToken:

; 104  : 		*p = 0;

  00903	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00906	c6 00 00	 mov	 BYTE PTR [eax], 0

; 105  : 		TokenNumber = atof( TempString);	// Select the first Byte as Main ID

  00909	8d 45 90	 lea	 eax, DWORD PTR _TempString$[ebp]
  0090c	50		 push	 eax
  0090d	e8 00 00 00 00	 call	 _atof
  00912	83 c4 04	 add	 esp, 4
  00915	d9 1d 00 00 00
	00		 fstp	 DWORD PTR _TokenNumber

; 106  : 		return CurrentToken  = NUMBER ;

  0091b	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _CurrentToken, 1
  00925	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  0092a	e9 39 01 00 00	 jmp	 $LN32@GetToken

; 107  : 		break;

  0092f	e9 32 01 00 00	 jmp	 $LN20@GetToken
$LN10@GetToken:

; 108  : 
; 109  : 	case '\"':	// "	String Case
; 110  : 		p=&TokenString[0];

  00934	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], OFFSET _TokenString
$LN9@GetToken:

; 111  : 		
; 112  : 		while (((ch=getc(SMDFile)) != -1 ) && (ch != 0x22))	// nice

  0093b	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00940	50		 push	 eax
  00941	e8 00 00 00 00	 call	 _getc
  00946	83 c4 04	 add	 esp, 4
  00949	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  0094c	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00950	83 f9 ff	 cmp	 ecx, -1
  00953	74 1c		 je	 SHORT $LN8@GetToken
  00955	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00959	83 f8 22	 cmp	 eax, 34			; 00000022H
  0095c	74 13		 je	 SHORT $LN8@GetToken

; 113  : 		{
; 114  : 			*p = ch;

  0095e	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00961	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  00964	88 08		 mov	 BYTE PTR [eax], cl

; 115  : 			p++;

  00966	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00969	83 c0 01	 add	 eax, 1
  0096c	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 116  : 		}

  0096f	eb ca		 jmp	 SHORT $LN9@GetToken
$LN8@GetToken:

; 117  : 		if (ch != 0x22 )

  00971	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00975	83 f8 22	 cmp	 eax, 34			; 00000022H
  00978	74 13		 je	 SHORT $LN7@GetToken

; 118  : 		{
; 119  : 			ungetc(ch, SMDFile);

  0097a	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0097f	50		 push	 eax
  00980	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00984	51		 push	 ecx
  00985	e8 00 00 00 00	 call	 _ungetc
  0098a	83 c4 08	 add	 esp, 8
$LN7@GetToken:

; 120  : 		}
; 121  : 		*p = 0;

  0098d	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00990	c6 00 00	 mov	 BYTE PTR [eax], 0

; 122  : 		return CurrentToken = NAME;

  00993	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _CurrentToken, 0
  0099d	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  009a2	e9 c1 00 00 00	 jmp	 $LN32@GetToken

; 123  : 		break;

  009a7	e9 ba 00 00 00	 jmp	 $LN20@GetToken
$LN6@GetToken:

; 124  : 
; 125  : 	default:	// Others
; 126  : 		if (isalpha(ch))

  009ac	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  009b0	50		 push	 eax
  009b1	e8 00 00 00 00	 call	 _isalpha
  009b6	83 c4 04	 add	 esp, 4
  009b9	85 c0		 test	 eax, eax
  009bb	0f 84 94 00 00
	00		 je	 $LN5@GetToken

; 127  : 		{
; 128  : 			p=&TokenString[0];

  009c1	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], OFFSET _TokenString

; 129  : 			*p=ch;

  009c8	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  009cb	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  009ce	88 08		 mov	 BYTE PTR [eax], cl

; 130  : 			p++;

  009d0	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  009d3	83 c0 01	 add	 eax, 1
  009d6	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax
$LN4@GetToken:

; 131  : 
; 132  : 			while ( ((ch=getc(SMDFile)) != -1) && ( (ch == 0x2E) || (ch == 0x5F) || (isalnum(ch) != 0) ) )

  009d9	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  009de	50		 push	 eax
  009df	e8 00 00 00 00	 call	 _getc
  009e4	83 c4 04	 add	 esp, 4
  009e7	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  009ea	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  009ee	83 f9 ff	 cmp	 ecx, -1
  009f1	74 36		 je	 SHORT $LN3@GetToken
  009f3	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  009f7	83 f8 2e	 cmp	 eax, 46			; 0000002eH
  009fa	74 1a		 je	 SHORT $LN2@GetToken
  009fc	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00a00	83 f8 5f	 cmp	 eax, 95			; 0000005fH
  00a03	74 11		 je	 SHORT $LN2@GetToken
  00a05	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00a09	50		 push	 eax
  00a0a	e8 00 00 00 00	 call	 _isalnum
  00a0f	83 c4 04	 add	 esp, 4
  00a12	85 c0		 test	 eax, eax
  00a14	74 13		 je	 SHORT $LN3@GetToken
$LN2@GetToken:

; 133  : 			{
; 134  : 				*p=ch;

  00a16	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00a19	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  00a1c	88 08		 mov	 BYTE PTR [eax], cl

; 135  : 				p++;

  00a1e	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00a21	83 c0 01	 add	 eax, 1
  00a24	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 136  : 				
; 137  : 			}

  00a27	eb b0		 jmp	 SHORT $LN4@GetToken
$LN3@GetToken:

; 138  : 
; 139  : 			ungetc(ch, SMDFile);

  00a29	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00a2e	50		 push	 eax
  00a2f	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00a33	51		 push	 ecx
  00a34	e8 00 00 00 00	 call	 _ungetc
  00a39	83 c4 08	 add	 esp, 8

; 140  : 			*p=0;

  00a3c	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00a3f	c6 00 00	 mov	 BYTE PTR [eax], 0

; 141  : 			CurrentToken=NAME;

  00a42	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _CurrentToken, 0

; 142  : 			return CurrentToken;

  00a4c	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00a51	eb 15		 jmp	 SHORT $LN32@GetToken

; 143  : 		}
; 144  : 		else

  00a53	eb 11		 jmp	 SHORT $LN1@GetToken
$LN5@GetToken:

; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'

  00a55	c7 05 00 00 00
	00 3c 00 00 00	 mov	 DWORD PTR _CurrentToken, 60 ; 0000003cH
  00a5f	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00a64	eb 02		 jmp	 SHORT $LN32@GetToken
$LN1@GetToken:
$LN20@GetToken:

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;

  00a66	33 c0		 xor	 eax, eax
$LN32@GetToken:

; 153  : }

  00a68	5f		 pop	 edi
  00a69	5e		 pop	 esi
  00a6a	5b		 pop	 ebx
  00a6b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00a6e	33 cd		 xor	 ecx, ebp
  00a70	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00a75	8b e5		 mov	 esp, ebp
  00a77	5d		 pop	 ebp
  00a78	c3		 ret	 0
  00a79	8d 49 00	 npad	 3
$LN35@GetToken:
  00a7c	00 00 00 00	 DD	 $LN10@GetToken
  00a80	00 00 00 00	 DD	 $LN19@GetToken
  00a84	00 00 00 00	 DD	 $LN17@GetToken
  00a88	00 00 00 00	 DD	 $LN14@GetToken
  00a8c	00 00 00 00	 DD	 $LN18@GetToken
  00a90	00 00 00 00	 DD	 $LN16@GetToken
  00a94	00 00 00 00	 DD	 $LN15@GetToken
  00a98	00 00 00 00	 DD	 $LN6@GetToken
$LN34@GetToken:
  00a9c	00		 DB	 0
  00a9d	01		 DB	 1
  00a9e	07		 DB	 7
  00a9f	07		 DB	 7
  00aa0	07		 DB	 7
  00aa1	07		 DB	 7
  00aa2	07		 DB	 7
  00aa3	07		 DB	 7
  00aa4	07		 DB	 7
  00aa5	07		 DB	 7
  00aa6	02		 DB	 2
  00aa7	03		 DB	 3
  00aa8	03		 DB	 3
  00aa9	07		 DB	 7
  00aaa	03		 DB	 3
  00aab	03		 DB	 3
  00aac	03		 DB	 3
  00aad	03		 DB	 3
  00aae	03		 DB	 3
  00aaf	03		 DB	 3
  00ab0	03		 DB	 3
  00ab1	03		 DB	 3
  00ab2	03		 DB	 3
  00ab3	03		 DB	 3
  00ab4	07		 DB	 7
  00ab5	04		 DB	 4
  00ab6	07		 DB	 7
  00ab7	07		 DB	 7
  00ab8	07		 DB	 7
  00ab9	07		 DB	 7
  00aba	07		 DB	 7
  00abb	07		 DB	 7
  00abc	07		 DB	 7
  00abd	07		 DB	 7
  00abe	07		 DB	 7
  00abf	07		 DB	 7
  00ac0	07		 DB	 7
  00ac1	07		 DB	 7
  00ac2	07		 DB	 7
  00ac3	07		 DB	 7
  00ac4	07		 DB	 7
  00ac5	07		 DB	 7
  00ac6	07		 DB	 7
  00ac7	07		 DB	 7
  00ac8	07		 DB	 7
  00ac9	07		 DB	 7
  00aca	07		 DB	 7
  00acb	07		 DB	 7
  00acc	07		 DB	 7
  00acd	07		 DB	 7
  00ace	07		 DB	 7
  00acf	07		 DB	 7
  00ad0	07		 DB	 7
  00ad1	07		 DB	 7
  00ad2	07		 DB	 7
  00ad3	07		 DB	 7
  00ad4	07		 DB	 7
  00ad5	07		 DB	 7
  00ad6	07		 DB	 7
  00ad7	07		 DB	 7
  00ad8	07		 DB	 7
  00ad9	07		 DB	 7
  00ada	07		 DB	 7
  00adb	07		 DB	 7
  00adc	07		 DB	 7
  00add	07		 DB	 7
  00ade	07		 DB	 7
  00adf	07		 DB	 7
  00ae0	07		 DB	 7
  00ae1	07		 DB	 7
  00ae2	07		 DB	 7
  00ae3	07		 DB	 7
  00ae4	07		 DB	 7
  00ae5	07		 DB	 7
  00ae6	07		 DB	 7
  00ae7	07		 DB	 7
  00ae8	07		 DB	 7
  00ae9	07		 DB	 7
  00aea	07		 DB	 7
  00aeb	07		 DB	 7
  00aec	07		 DB	 7
  00aed	07		 DB	 7
  00aee	07		 DB	 7
  00aef	07		 DB	 7
  00af0	07		 DB	 7
  00af1	07		 DB	 7
  00af2	07		 DB	 7
  00af3	07		 DB	 7
  00af4	07		 DB	 7
  00af5	05		 DB	 5
  00af6	07		 DB	 7
  00af7	06		 DB	 6
?GetToken@@YA?AW4SMDToken@@XZ ENDP			; GetToken
_TEXT	ENDS
PUBLIC	?CheckData@CRaklion@@QAEXXZ			; CRaklion::CheckData
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\raklion.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CheckData@CRaklion@@QAEXXZ PROC			; CRaklion::CheckData
; _this$ = ecx

; 264  : {

  00b00	55		 push	 ebp
  00b01	8b ec		 mov	 ebp, esp
  00b03	83 ec 44	 sub	 esp, 68			; 00000044H
  00b06	53		 push	 ebx
  00b07	56		 push	 esi
  00b08	57		 push	 edi
  00b09	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 265  : 	return;
; 266  : 	//come code lacking due to return
; 267  : }

  00b0c	5f		 pop	 edi
  00b0d	5e		 pop	 esi
  00b0e	5b		 pop	 ebx
  00b0f	8b e5		 mov	 esp, ebp
  00b11	5d		 pop	 ebp
  00b12	c3		 ret	 0
?CheckData@CRaklion@@QAEXXZ ENDP			; CRaklion::CheckData
_TEXT	ENDS
PUBLIC	?ProcState_END@CRaklion@@QAEXXZ			; CRaklion::ProcState_END
PUBLIC	?ProcState_NOTIFY_4@CRaklion@@QAEXXZ		; CRaklion::ProcState_NOTIFY_4
PUBLIC	?ProcState_ALL_USER_DIE@CRaklion@@QAEXXZ	; CRaklion::ProcState_ALL_USER_DIE
PUBLIC	?ProcState_CLOSE_DOOR@CRaklion@@QAEXXZ		; CRaklion::ProcState_CLOSE_DOOR
PUBLIC	?ProcState_NOTIFY_3@CRaklion@@QAEXXZ		; CRaklion::ProcState_NOTIFY_3
PUBLIC	?ProcState_START_BATTLE@CRaklion@@QAEXXZ	; CRaklion::ProcState_START_BATTLE
PUBLIC	?ProcState_READY@CRaklion@@QAEXXZ		; CRaklion::ProcState_READY
PUBLIC	?ProcState_NOTIFY_2@CRaklion@@QAEXXZ		; CRaklion::ProcState_NOTIFY_2
PUBLIC	?ProcState_STANDBY@CRaklion@@QAEXXZ		; CRaklion::ProcState_STANDBY
PUBLIC	?ProcState_NOTIFY_1@CRaklion@@QAEXXZ		; CRaklion::ProcState_NOTIFY_1
PUBLIC	?ProcState_IDLE@CRaklion@@QAEXXZ		; CRaklion::ProcState_IDLE
PUBLIC	?CheckUserOnRaklionBossMap@CRaklion@@QAEXXZ	; CRaklion::CheckUserOnRaklionBossMap
PUBLIC	?IsRaklionEnable@CRaklion@@QAEHXZ		; CRaklion::IsRaklionEnable
PUBLIC	??_C@_0DJ@DCGHBBHP@?$FLRAKLION?$FN?$FLIsInRaklionEvent?$FN?5?$CFd?1?$CF@ ; `string'
PUBLIC	?Run@CRaklion@@QAEXXZ				; CRaklion::Run
EXTRN	?CheckUserState@CRaklionBattleUserMng@@QAEXXZ:PROC ; CRaklionBattleUserMng::CheckUserState
EXTRN	?g_RaklionBattleUserMng@@3VCRaklionBattleUserMng@@A:BYTE ; g_RaklionBattleUserMng
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
;	COMDAT ??_C@_0DJ@DCGHBBHP@?$FLRAKLION?$FN?$FLIsInRaklionEvent?$FN?5?$CFd?1?$CF@
CONST	SEGMENT
??_C@_0DJ@DCGHBBHP@?$FLRAKLION?$FN?$FLIsInRaklionEvent?$FN?5?$CFd?1?$CF@ DB '['
	DB	'RAKLION][IsInRaklionEvent] %d/%d/%d %dth User : %s (%s)', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
tv169 = -92						; size = 4
_i$227880 = -24						; size = 4
_today$ = -20						; size = 4
_Time$ = -16						; size = 8
_loc2$ = -8						; size = 4
_this$ = -4						; size = 4
?Run@CRaklion@@QAEXXZ PROC				; CRaklion::Run
; _this$ = ecx

; 270  : {

  00b20	55		 push	 ebp
  00b21	8b ec		 mov	 ebp, esp
  00b23	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00b26	53		 push	 ebx
  00b27	56		 push	 esi
  00b28	57		 push	 edi
  00b29	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 271  : 	int loc2 = 0; //loc2

  00b2c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loc2$[ebp], 0

; 272  : 
; 273  : 	time_t Time; //loc3
; 274  : 	tm *today; //loc4
; 275  : 
; 276  : 	time(&Time);

  00b33	8d 45 f0	 lea	 eax, DWORD PTR _Time$[ebp]
  00b36	50		 push	 eax
  00b37	e8 00 00 00 00	 call	 _time
  00b3c	83 c4 04	 add	 esp, 4

; 277  : 	today = localtime(&Time);

  00b3f	8d 45 f0	 lea	 eax, DWORD PTR _Time$[ebp]
  00b42	50		 push	 eax
  00b43	e8 00 00 00 00	 call	 _localtime
  00b48	83 c4 04	 add	 esp, 4
  00b4b	89 45 ec	 mov	 DWORD PTR _today$[ebp], eax

; 278  : 
; 279  : 	if( this->iDay != today->tm_mday ||
; 280  : 		this->iMon != today->tm_mon ||
; 281  : 		this->iYear != today->tm_year)

  00b4e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b51	8b 4d ec	 mov	 ecx, DWORD PTR _today$[ebp]
  00b54	8b 90 1c 0e 00
	00		 mov	 edx, DWORD PTR [eax+3612]
  00b5a	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00b5d	75 22		 jne	 SHORT $LN22@Run
  00b5f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b62	8b 4d ec	 mov	 ecx, DWORD PTR _today$[ebp]
  00b65	8b 90 18 0e 00
	00		 mov	 edx, DWORD PTR [eax+3608]
  00b6b	3b 51 10	 cmp	 edx, DWORD PTR [ecx+16]
  00b6e	75 11		 jne	 SHORT $LN22@Run
  00b70	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b73	8b 4d ec	 mov	 ecx, DWORD PTR _today$[ebp]
  00b76	8b 90 14 0e 00
	00		 mov	 edx, DWORD PTR [eax+3604]
  00b7c	3b 51 14	 cmp	 edx, DWORD PTR [ecx+20]
  00b7f	74 3a		 je	 SHORT $LN23@Run
$LN22@Run:

; 282  : 	{
; 283  : 		this->iDay = today->tm_mday;

  00b81	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b84	8b 4d ec	 mov	 ecx, DWORD PTR _today$[ebp]
  00b87	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00b8a	89 90 1c 0e 00
	00		 mov	 DWORD PTR [eax+3612], edx

; 284  : 		this->iMon = today->tm_mon;

  00b90	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b93	8b 4d ec	 mov	 ecx, DWORD PTR _today$[ebp]
  00b96	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00b99	89 90 18 0e 00
	00		 mov	 DWORD PTR [eax+3608], edx

; 285  : 		this->iYear = today->tm_year;

  00b9f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00ba2	8b 4d ec	 mov	 ecx, DWORD PTR _today$[ebp]
  00ba5	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00ba8	89 90 14 0e 00
	00		 mov	 DWORD PTR [eax+3604], edx

; 286  : 		this->isUsed = 0;

  00bae	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00bb1	c7 80 10 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+3600], 0
$LN23@Run:

; 287  : 	}
; 288  : 	
; 289  : 	if(this->isUsed == 0 && !today->tm_hour && !today->tm_min && !today->tm_sec)

  00bbb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00bbe	83 b8 10 0e 00
	00 00		 cmp	 DWORD PTR [eax+3600], 0
  00bc5	0f 85 22 01 00
	00		 jne	 $LN21@Run
  00bcb	8b 45 ec	 mov	 eax, DWORD PTR _today$[ebp]
  00bce	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00bd2	0f 85 15 01 00
	00		 jne	 $LN21@Run
  00bd8	8b 45 ec	 mov	 eax, DWORD PTR _today$[ebp]
  00bdb	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00bdf	0f 85 08 01 00
	00		 jne	 $LN21@Run
  00be5	8b 45 ec	 mov	 eax, DWORD PTR _today$[ebp]
  00be8	83 38 00	 cmp	 DWORD PTR [eax], 0
  00beb	0f 85 fc 00 00
	00		 jne	 $LN21@Run

; 290  : 	{
; 291  : 		for ( int i = OBJ_STARTUSERINDEX; i < OBJMAX; i++)

  00bf1	c7 45 e8 b0 36
	00 00		 mov	 DWORD PTR _i$227880[ebp], 14000 ; 000036b0H
  00bf8	eb 09		 jmp	 SHORT $LN20@Run
$LN19@Run:
  00bfa	8b 45 e8	 mov	 eax, DWORD PTR _i$227880[ebp]
  00bfd	83 c0 01	 add	 eax, 1
  00c00	89 45 e8	 mov	 DWORD PTR _i$227880[ebp], eax
$LN20@Run:
  00c03	81 7d e8 98 3a
	00 00		 cmp	 DWORD PTR _i$227880[ebp], 15000 ; 00003a98H
  00c0a	0f 8d d0 00 00
	00		 jge	 $LN18@Run

; 292  : 		{
; 293  : 			if(gObj[i].MapNumber == MAP_INDEX_RAKLION || gObj[i].MapNumber == MAP_INDEX_RAKLION_BOSS)

  00c10	8b 45 e8	 mov	 eax, DWORD PTR _i$227880[ebp]
  00c13	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00c19	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00c1f	0f b6 94 01 49
	01 00 00	 movzx	 edx, BYTE PTR [ecx+eax+329]
  00c27	83 fa 39	 cmp	 edx, 57			; 00000039H
  00c2a	74 20		 je	 SHORT $LN16@Run
  00c2c	8b 45 e8	 mov	 eax, DWORD PTR _i$227880[ebp]
  00c2f	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00c35	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00c3b	0f b6 94 01 49
	01 00 00	 movzx	 edx, BYTE PTR [ecx+eax+329]
  00c43	83 fa 3a	 cmp	 edx, 58			; 0000003aH
  00c46	0f 85 8f 00 00
	00		 jne	 $LN17@Run
$LN16@Run:

; 294  : 			{
; 295  : 				if(gObj[i].Connected == PLAYER_PLAYING && gObj[i].Type == OBJ_USER)

  00c4c	8b 45 e8	 mov	 eax, DWORD PTR _i$227880[ebp]
  00c4f	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00c55	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00c5b	83 7c 01 04 03	 cmp	 DWORD PTR [ecx+eax+4], 3
  00c60	75 79		 jne	 SHORT $LN17@Run
  00c62	8b 45 e8	 mov	 eax, DWORD PTR _i$227880[ebp]
  00c65	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00c6b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00c71	0f b7 54 01 68	 movzx	 edx, WORD PTR [ecx+eax+104]
  00c76	83 fa 01	 cmp	 edx, 1
  00c79	75 60		 jne	 SHORT $LN17@Run

; 296  : 				{
; 297  : 					loc2++;

  00c7b	8b 45 f8	 mov	 eax, DWORD PTR _loc2$[ebp]
  00c7e	83 c0 01	 add	 eax, 1
  00c81	89 45 f8	 mov	 DWORD PTR _loc2$[ebp], eax

; 298  : 					LogAdd("[RAKLION][IsInRaklionEvent] %d/%d/%d %dth User : %s (%s)",
; 299  : 						today->tm_year+1900,today->tm_mon+1,today->tm_mday,loc2,gObj[i].Name,gObj[i].AccountID);

  00c84	8b 45 e8	 mov	 eax, DWORD PTR _i$227880[ebp]
  00c87	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00c8d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00c93	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  00c97	52		 push	 edx
  00c98	8b 45 e8	 mov	 eax, DWORD PTR _i$227880[ebp]
  00c9b	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00ca1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00ca7	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  00cab	52		 push	 edx
  00cac	8b 45 f8	 mov	 eax, DWORD PTR _loc2$[ebp]
  00caf	50		 push	 eax
  00cb0	8b 4d ec	 mov	 ecx, DWORD PTR _today$[ebp]
  00cb3	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00cb6	52		 push	 edx
  00cb7	8b 45 ec	 mov	 eax, DWORD PTR _today$[ebp]
  00cba	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00cbd	83 c1 01	 add	 ecx, 1
  00cc0	51		 push	 ecx
  00cc1	8b 55 ec	 mov	 edx, DWORD PTR _today$[ebp]
  00cc4	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00cc7	05 6c 07 00 00	 add	 eax, 1900		; 0000076cH
  00ccc	50		 push	 eax
  00ccd	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@DCGHBBHP@?$FLRAKLION?$FN?$FLIsInRaklionEvent?$FN?5?$CFd?1?$CF@
  00cd2	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00cd8	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN17@Run:

; 300  : 				}
; 301  : 			}
; 302  : 		}

  00cdb	e9 1a ff ff ff	 jmp	 $LN19@Run
$LN18@Run:

; 303  : 		this->isUsed = 1;

  00ce0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00ce3	c7 80 10 0e 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+3600], 1
$LN21@Run:

; 304  : 	}
; 305  : 
; 306  : 	if ( !this->IsRaklionEnable() )

  00ced	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00cf0	e8 00 00 00 00	 call	 ?IsRaklionEnable@CRaklion@@QAEHXZ ; CRaklion::IsRaklionEnable
  00cf5	85 c0		 test	 eax, eax
  00cf7	75 05		 jne	 SHORT $LN14@Run

; 307  : 		return;

  00cf9	e9 97 00 00 00	 jmp	 $LN24@Run
$LN14@Run:

; 308  : 
; 309  : 	this->CheckUserOnRaklionBossMap();

  00cfe	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d01	e8 00 00 00 00	 call	 ?CheckUserOnRaklionBossMap@CRaklion@@QAEXXZ ; CRaklion::CheckUserOnRaklionBossMap

; 310  : 
; 311  : 	g_RaklionBattleUserMng.CheckUserState();

  00d06	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_RaklionBattleUserMng@@3VCRaklionBattleUserMng@@A ; g_RaklionBattleUserMng
  00d0b	e8 00 00 00 00	 call	 ?CheckUserState@CRaklionBattleUserMng@@QAEXXZ ; CRaklionBattleUserMng::CheckUserState

; 312  : 
; 313  : 	switch ( this->m_iRaklionState )

  00d10	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00d13	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00d16	89 4d a4	 mov	 DWORD PTR tv169[ebp], ecx
  00d19	83 7d a4 0a	 cmp	 DWORD PTR tv169[ebp], 10 ; 0000000aH
  00d1d	77 76		 ja	 SHORT $LN24@Run
  00d1f	8b 55 a4	 mov	 edx, DWORD PTR tv169[ebp]
  00d22	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN26@Run[edx*4]
$LN11@Run:

; 314  : 	{
; 315  : 	case RAKLION_STATE_IDLE:			this->ProcState_IDLE();			break;

  00d29	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d2c	e8 00 00 00 00	 call	 ?ProcState_IDLE@CRaklion@@QAEXXZ ; CRaklion::ProcState_IDLE
  00d31	eb 62		 jmp	 SHORT $LN24@Run
$LN10@Run:

; 316  : 	case RAKLION_STATE_NOTIFY_1:		this->ProcState_NOTIFY_1();		break;

  00d33	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d36	e8 00 00 00 00	 call	 ?ProcState_NOTIFY_1@CRaklion@@QAEXXZ ; CRaklion::ProcState_NOTIFY_1
  00d3b	eb 58		 jmp	 SHORT $LN24@Run
$LN9@Run:

; 317  : 	case RAKLION_STATE_STANDBY:			this->ProcState_STANDBY();		break;

  00d3d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d40	e8 00 00 00 00	 call	 ?ProcState_STANDBY@CRaklion@@QAEXXZ ; CRaklion::ProcState_STANDBY
  00d45	eb 4e		 jmp	 SHORT $LN24@Run
$LN8@Run:

; 318  : 	case RAKLION_STATE_NOTIFY_2:		this->ProcState_NOTIFY_2();		break;

  00d47	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d4a	e8 00 00 00 00	 call	 ?ProcState_NOTIFY_2@CRaklion@@QAEXXZ ; CRaklion::ProcState_NOTIFY_2
  00d4f	eb 44		 jmp	 SHORT $LN24@Run
$LN7@Run:

; 319  : 	case RAKLION_STATE_READY:			this->ProcState_READY();		break;

  00d51	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d54	e8 00 00 00 00	 call	 ?ProcState_READY@CRaklion@@QAEXXZ ; CRaklion::ProcState_READY
  00d59	eb 3a		 jmp	 SHORT $LN24@Run
$LN6@Run:

; 320  : 	case RAKLION_STATE_START_BATTLE:	this->ProcState_START_BATTLE();	break;

  00d5b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d5e	e8 00 00 00 00	 call	 ?ProcState_START_BATTLE@CRaklion@@QAEXXZ ; CRaklion::ProcState_START_BATTLE
  00d63	eb 30		 jmp	 SHORT $LN24@Run
$LN5@Run:

; 321  : 	case RAKLION_STATE_NOTIFY_3:		this->ProcState_NOTIFY_3();		break;

  00d65	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d68	e8 00 00 00 00	 call	 ?ProcState_NOTIFY_3@CRaklion@@QAEXXZ ; CRaklion::ProcState_NOTIFY_3
  00d6d	eb 26		 jmp	 SHORT $LN24@Run
$LN4@Run:

; 322  : 	case RAKLION_STATE_CLOSE_DOOR:		this->ProcState_CLOSE_DOOR();	break;

  00d6f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d72	e8 00 00 00 00	 call	 ?ProcState_CLOSE_DOOR@CRaklion@@QAEXXZ ; CRaklion::ProcState_CLOSE_DOOR
  00d77	eb 1c		 jmp	 SHORT $LN24@Run
$LN3@Run:

; 323  : 	case RAKLION_STATE_ALL_USER_DIE:	this->ProcState_ALL_USER_DIE();	break;

  00d79	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d7c	e8 00 00 00 00	 call	 ?ProcState_ALL_USER_DIE@CRaklion@@QAEXXZ ; CRaklion::ProcState_ALL_USER_DIE
  00d81	eb 12		 jmp	 SHORT $LN24@Run
$LN2@Run:

; 324  : 	case RAKLION_STATE_NOTIFY_4:		this->ProcState_NOTIFY_4();		break;

  00d83	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d86	e8 00 00 00 00	 call	 ?ProcState_NOTIFY_4@CRaklion@@QAEXXZ ; CRaklion::ProcState_NOTIFY_4
  00d8b	eb 08		 jmp	 SHORT $LN24@Run
$LN1@Run:

; 325  : 	case RAKLION_STATE_END:				this->ProcState_END();			break;

  00d8d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d90	e8 00 00 00 00	 call	 ?ProcState_END@CRaklion@@QAEXXZ ; CRaklion::ProcState_END
$LN24@Run:

; 326  : 	}
; 327  : 
; 328  : }

  00d95	5f		 pop	 edi
  00d96	5e		 pop	 esi
  00d97	5b		 pop	 ebx
  00d98	8b e5		 mov	 esp, ebp
  00d9a	5d		 pop	 ebp
  00d9b	c3		 ret	 0
$LN26@Run:
  00d9c	00 00 00 00	 DD	 $LN11@Run
  00da0	00 00 00 00	 DD	 $LN10@Run
  00da4	00 00 00 00	 DD	 $LN9@Run
  00da8	00 00 00 00	 DD	 $LN8@Run
  00dac	00 00 00 00	 DD	 $LN7@Run
  00db0	00 00 00 00	 DD	 $LN6@Run
  00db4	00 00 00 00	 DD	 $LN5@Run
  00db8	00 00 00 00	 DD	 $LN4@Run
  00dbc	00 00 00 00	 DD	 $LN3@Run
  00dc0	00 00 00 00	 DD	 $LN2@Run
  00dc4	00 00 00 00	 DD	 $LN1@Run
?Run@CRaklion@@QAEXXZ ENDP				; CRaklion::Run
_TEXT	ENDS
PUBLIC	?GetRaklionState@CRaklion@@QAEHXZ		; CRaklion::GetRaklionState
PUBLIC	?GetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEHXZ ; CRaklionBattleOfSelupan::GetBattleOfSelupanState
PUBLIC	?SetState_END@CRaklion@@QAEXXZ			; CRaklion::SetState_END
PUBLIC	?SetState_NOTIFY_4@CRaklion@@QAEXXZ		; CRaklion::SetState_NOTIFY_4
PUBLIC	?SetState_ALL_USER_DIE@CRaklion@@QAEXXZ		; CRaklion::SetState_ALL_USER_DIE
PUBLIC	?SetState_CLOSE_DOOR@CRaklion@@QAEXXZ		; CRaklion::SetState_CLOSE_DOOR
PUBLIC	?SetState_NOTIFY_3@CRaklion@@QAEXXZ		; CRaklion::SetState_NOTIFY_3
PUBLIC	?SetState_START_BATTLE@CRaklion@@QAEXXZ		; CRaklion::SetState_START_BATTLE
PUBLIC	?SetState_READY@CRaklion@@QAEXXZ		; CRaklion::SetState_READY
PUBLIC	?SetState_NOTIFY_2@CRaklion@@QAEXXZ		; CRaklion::SetState_NOTIFY_2
PUBLIC	?SetState_STANDBY@CRaklion@@QAEXXZ		; CRaklion::SetState_STANDBY
PUBLIC	?SetState_NOTIFY_1@CRaklion@@QAEXXZ		; CRaklion::SetState_NOTIFY_1
PUBLIC	?SetState_IDLE@CRaklion@@QAEXXZ			; CRaklion::SetState_IDLE
PUBLIC	?SetState@CRaklion@@QAEXH@Z			; CRaklion::SetState
EXTRN	?NotifyRaklionChangeState@CRaklionUtil@@QAEXHH@Z:PROC ; CRaklionUtil::NotifyRaklionChangeState
EXTRN	?g_RaklionUtil@@3VCRaklionUtil@@A:DWORD		; g_RaklionUtil
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv64 = -72						; size = 4
_this$ = -4						; size = 4
_iRaklionState$ = 8					; size = 4
?SetState@CRaklion@@QAEXH@Z PROC			; CRaklion::SetState
; _this$ = ecx

; 331  : {

  00dd0	55		 push	 ebp
  00dd1	8b ec		 mov	 ebp, esp
  00dd3	83 ec 48	 sub	 esp, 72			; 00000048H
  00dd6	53		 push	 ebx
  00dd7	56		 push	 esi
  00dd8	57		 push	 edi
  00dd9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 332  : 	switch ( iRaklionState )

  00ddc	8b 45 08	 mov	 eax, DWORD PTR _iRaklionState$[ebp]
  00ddf	89 45 b8	 mov	 DWORD PTR tv64[ebp], eax
  00de2	83 7d b8 0a	 cmp	 DWORD PTR tv64[ebp], 10	; 0000000aH
  00de6	77 76		 ja	 SHORT $LN12@SetState
  00de8	8b 4d b8	 mov	 ecx, DWORD PTR tv64[ebp]
  00deb	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN16@SetState[ecx*4]
$LN11@SetState:

; 333  : 	{
; 334  : 	case RAKLION_STATE_IDLE:			this->SetState_IDLE();			break;

  00df2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00df5	e8 00 00 00 00	 call	 ?SetState_IDLE@CRaklion@@QAEXXZ ; CRaklion::SetState_IDLE
  00dfa	eb 62		 jmp	 SHORT $LN12@SetState
$LN10@SetState:

; 335  : 	case RAKLION_STATE_NOTIFY_1:		this->SetState_NOTIFY_1();		break;

  00dfc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00dff	e8 00 00 00 00	 call	 ?SetState_NOTIFY_1@CRaklion@@QAEXXZ ; CRaklion::SetState_NOTIFY_1
  00e04	eb 58		 jmp	 SHORT $LN12@SetState
$LN9@SetState:

; 336  : 	case RAKLION_STATE_STANDBY:			this->SetState_STANDBY();		break;

  00e06	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e09	e8 00 00 00 00	 call	 ?SetState_STANDBY@CRaklion@@QAEXXZ ; CRaklion::SetState_STANDBY
  00e0e	eb 4e		 jmp	 SHORT $LN12@SetState
$LN8@SetState:

; 337  : 	case RAKLION_STATE_NOTIFY_2:		this->SetState_NOTIFY_2();		break;

  00e10	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e13	e8 00 00 00 00	 call	 ?SetState_NOTIFY_2@CRaklion@@QAEXXZ ; CRaklion::SetState_NOTIFY_2
  00e18	eb 44		 jmp	 SHORT $LN12@SetState
$LN7@SetState:

; 338  : 	case RAKLION_STATE_READY:			this->SetState_READY();			break;

  00e1a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e1d	e8 00 00 00 00	 call	 ?SetState_READY@CRaklion@@QAEXXZ ; CRaklion::SetState_READY
  00e22	eb 3a		 jmp	 SHORT $LN12@SetState
$LN6@SetState:

; 339  : 	case RAKLION_STATE_START_BATTLE:	this->SetState_START_BATTLE();	break;

  00e24	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e27	e8 00 00 00 00	 call	 ?SetState_START_BATTLE@CRaklion@@QAEXXZ ; CRaklion::SetState_START_BATTLE
  00e2c	eb 30		 jmp	 SHORT $LN12@SetState
$LN5@SetState:

; 340  : 	case RAKLION_STATE_NOTIFY_3:		this->SetState_NOTIFY_3();		break;

  00e2e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e31	e8 00 00 00 00	 call	 ?SetState_NOTIFY_3@CRaklion@@QAEXXZ ; CRaklion::SetState_NOTIFY_3
  00e36	eb 26		 jmp	 SHORT $LN12@SetState
$LN4@SetState:

; 341  : 	case RAKLION_STATE_CLOSE_DOOR:		this->SetState_CLOSE_DOOR();	break;

  00e38	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e3b	e8 00 00 00 00	 call	 ?SetState_CLOSE_DOOR@CRaklion@@QAEXXZ ; CRaklion::SetState_CLOSE_DOOR
  00e40	eb 1c		 jmp	 SHORT $LN12@SetState
$LN3@SetState:

; 342  : 	case RAKLION_STATE_ALL_USER_DIE:	this->SetState_ALL_USER_DIE();	break;

  00e42	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e45	e8 00 00 00 00	 call	 ?SetState_ALL_USER_DIE@CRaklion@@QAEXXZ ; CRaklion::SetState_ALL_USER_DIE
  00e4a	eb 12		 jmp	 SHORT $LN12@SetState
$LN2@SetState:

; 343  : 	case RAKLION_STATE_NOTIFY_4:		this->SetState_NOTIFY_4();		break;

  00e4c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e4f	e8 00 00 00 00	 call	 ?SetState_NOTIFY_4@CRaklion@@QAEXXZ ; CRaklion::SetState_NOTIFY_4
  00e54	eb 08		 jmp	 SHORT $LN12@SetState
$LN1@SetState:

; 344  : 	case RAKLION_STATE_END:				this->SetState_END();			break;

  00e56	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e59	e8 00 00 00 00	 call	 ?SetState_END@CRaklion@@QAEXXZ ; CRaklion::SetState_END
$LN12@SetState:

; 345  : 	}
; 346  : 
; 347  : 	g_RaklionUtil.NotifyRaklionChangeState(this->GetRaklionState(),this->m_RaklionBattleOfSelupan.GetBattleOfSelupanState());

  00e5e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e61	83 c1 38	 add	 ecx, 56			; 00000038H
  00e64	e8 00 00 00 00	 call	 ?GetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEHXZ ; CRaklionBattleOfSelupan::GetBattleOfSelupanState
  00e69	50		 push	 eax
  00e6a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e6d	e8 00 00 00 00	 call	 ?GetRaklionState@CRaklion@@QAEHXZ ; CRaklion::GetRaklionState
  00e72	50		 push	 eax
  00e73	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_RaklionUtil@@3VCRaklionUtil@@A ; g_RaklionUtil
  00e78	e8 00 00 00 00	 call	 ?NotifyRaklionChangeState@CRaklionUtil@@QAEXHH@Z ; CRaklionUtil::NotifyRaklionChangeState

; 348  : 
; 349  : }

  00e7d	5f		 pop	 edi
  00e7e	5e		 pop	 esi
  00e7f	5b		 pop	 ebx
  00e80	8b e5		 mov	 esp, ebp
  00e82	5d		 pop	 ebp
  00e83	c2 04 00	 ret	 4
  00e86	8b ff		 npad	 2
$LN16@SetState:
  00e88	00 00 00 00	 DD	 $LN11@SetState
  00e8c	00 00 00 00	 DD	 $LN10@SetState
  00e90	00 00 00 00	 DD	 $LN9@SetState
  00e94	00 00 00 00	 DD	 $LN8@SetState
  00e98	00 00 00 00	 DD	 $LN7@SetState
  00e9c	00 00 00 00	 DD	 $LN6@SetState
  00ea0	00 00 00 00	 DD	 $LN5@SetState
  00ea4	00 00 00 00	 DD	 $LN4@SetState
  00ea8	00 00 00 00	 DD	 $LN3@SetState
  00eac	00 00 00 00	 DD	 $LN2@SetState
  00eb0	00 00 00 00	 DD	 $LN1@SetState
?SetState@CRaklion@@QAEXH@Z ENDP			; CRaklion::SetState
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\raklionbattleofselupan.h
_TEXT	ENDS
;	COMDAT ?GetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEHXZ PROC ; CRaklionBattleOfSelupan::GetBattleOfSelupanState, COMDAT
; _this$ = ecx

; 96   : 	int GetBattleOfSelupanState		(							)	{	return	this->m_iBattleOfSelupanState;								}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEHXZ ENDP ; CRaklionBattleOfSelupan::GetBattleOfSelupanState
_TEXT	ENDS
PUBLIC	?SetNextState@CRaklion@@QAEXH@Z			; CRaklion::SetNextState
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\raklion.cpp
_TEXT	SEGMENT
_iNextState$ = -8					; size = 4
_this$ = -4						; size = 4
_iCurrentState$ = 8					; size = 4
?SetNextState@CRaklion@@QAEXH@Z PROC			; CRaklion::SetNextState
; _this$ = ecx

; 352  : {

  00ec0	55		 push	 ebp
  00ec1	8b ec		 mov	 ebp, esp
  00ec3	83 ec 48	 sub	 esp, 72			; 00000048H
  00ec6	53		 push	 ebx
  00ec7	56		 push	 esi
  00ec8	57		 push	 edi
  00ec9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 353  : 	int iNextState = iCurrentState + 1;

  00ecc	8b 45 08	 mov	 eax, DWORD PTR _iCurrentState$[ebp]
  00ecf	83 c0 01	 add	 eax, 1
  00ed2	89 45 f8	 mov	 DWORD PTR _iNextState$[ebp], eax

; 354  : 
; 355  : 	if( iNextState > 12 )

  00ed5	83 7d f8 0c	 cmp	 DWORD PTR _iNextState$[ebp], 12 ; 0000000cH
  00ed9	7e 07		 jle	 SHORT $LN1@SetNextSta

; 356  : 	{
; 357  : 		iNextState = 0;

  00edb	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iNextState$[ebp], 0
$LN1@SetNextSta:

; 358  : 	}
; 359  : 
; 360  : 	this->SetState(iNextState);

  00ee2	8b 45 f8	 mov	 eax, DWORD PTR _iNextState$[ebp]
  00ee5	50		 push	 eax
  00ee6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00ee9	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 361  : }

  00eee	5f		 pop	 edi
  00eef	5e		 pop	 esi
  00ef0	5b		 pop	 ebx
  00ef1	8b e5		 mov	 esp, ebp
  00ef3	5d		 pop	 ebp
  00ef4	c2 04 00	 ret	 4
?SetNextState@CRaklion@@QAEXH@Z ENDP			; CRaklion::SetNextState
_TEXT	ENDS
PUBLIC	?ChangeState@CRaklion@@QAEXHH@Z			; CRaklion::ChangeState
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iState$ = 8						; size = 4
_iDetailState$ = 12					; size = 4
?ChangeState@CRaklion@@QAEXHH@Z PROC			; CRaklion::ChangeState
; _this$ = ecx

; 364  : {

  00f00	55		 push	 ebp
  00f01	8b ec		 mov	 ebp, esp
  00f03	83 ec 44	 sub	 esp, 68			; 00000044H
  00f06	53		 push	 ebx
  00f07	56		 push	 esi
  00f08	57		 push	 edi
  00f09	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 365  : 	//some stuff
; 366  : }

  00f0c	5f		 pop	 edi
  00f0d	5e		 pop	 esi
  00f0e	5b		 pop	 ebx
  00f0f	8b e5		 mov	 esp, ebp
  00f11	5d		 pop	 ebp
  00f12	c2 08 00	 ret	 8
?ChangeState@CRaklion@@QAEXHH@Z ENDP			; CRaklion::ChangeState
_TEXT	ENDS
PUBLIC	?SetRaklionState@CRaklion@@QAEXH@Z		; CRaklion::SetRaklionState
PUBLIC	??_C@_0BO@LEPLMCLO@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5IDLE?$AA@ ; `string'
;	COMDAT ??_C@_0BO@LEPLMCLO@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5IDLE?$AA@
CONST	SEGMENT
??_C@_0BO@LEPLMCLO@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5IDLE?$AA@ DB '['
	DB	' RAKLION ] State(%d) -> IDLE', 00H		; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_IDLE@CRaklion@@QAEXXZ PROC			; CRaklion::SetState_IDLE
; _this$ = ecx

; 369  : {

  00f20	55		 push	 ebp
  00f21	8b ec		 mov	 ebp, esp
  00f23	83 ec 44	 sub	 esp, 68			; 00000044H
  00f26	53		 push	 ebx
  00f27	56		 push	 esi
  00f28	57		 push	 edi
  00f29	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 370  : 	LogAddC(7, "[ RAKLION ] State(%d) -> IDLE", this->m_iRaklionState);

  00f2c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00f2f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00f32	51		 push	 ecx
  00f33	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@LEPLMCLO@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5IDLE?$AA@
  00f38	6a 07		 push	 7
  00f3a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00f40	83 c4 0c	 add	 esp, 12			; 0000000cH

; 371  : 
; 372  : 	this->SetRaklionState(RAKLION_STATE_IDLE);

  00f43	6a 00		 push	 0
  00f45	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f48	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState

; 373  : }

  00f4d	5f		 pop	 edi
  00f4e	5e		 pop	 esi
  00f4f	5b		 pop	 ebx
  00f50	8b e5		 mov	 esp, ebp
  00f52	5d		 pop	 ebp
  00f53	c3		 ret	 0
?SetState_IDLE@CRaklion@@QAEXXZ ENDP			; CRaklion::SetState_IDLE
_TEXT	ENDS
PUBLIC	??_C@_0CC@IODBNENH@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ ; `string'
;	COMDAT ??_C@_0CC@IODBNENH@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
CONST	SEGMENT
??_C@_0CC@IODBNENH@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ DB '['
	DB	' RAKLION ] State(%d) -> NOTIFY_1', 00H	; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_NOTIFY_1@CRaklion@@QAEXXZ PROC		; CRaklion::SetState_NOTIFY_1
; _this$ = ecx

; 376  : {

  00f60	55		 push	 ebp
  00f61	8b ec		 mov	 ebp, esp
  00f63	83 ec 44	 sub	 esp, 68			; 00000044H
  00f66	53		 push	 ebx
  00f67	56		 push	 esi
  00f68	57		 push	 edi
  00f69	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 377  : 	LogAddC(7, "[ RAKLION ] State(%d) -> NOTIFY_1", this->m_iRaklionState);

  00f6c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00f6f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00f72	51		 push	 ecx
  00f73	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@IODBNENH@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
  00f78	6a 07		 push	 7
  00f7a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00f80	83 c4 0c	 add	 esp, 12			; 0000000cH

; 378  : 
; 379  : 	this->SetRaklionState(RAKLION_STATE_NOTIFY_1);

  00f83	6a 01		 push	 1
  00f85	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f88	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState

; 380  : }

  00f8d	5f		 pop	 edi
  00f8e	5e		 pop	 esi
  00f8f	5b		 pop	 ebx
  00f90	8b e5		 mov	 esp, ebp
  00f92	5d		 pop	 ebp
  00f93	c3		 ret	 0
?SetState_NOTIFY_1@CRaklion@@QAEXXZ ENDP		; CRaklion::SetState_NOTIFY_1
_TEXT	ENDS
PUBLIC	??_C@_0CB@FBJJKOMN@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5STANDBY@ ; `string'
EXTRN	__imp__GetTickCount@0:PROC
;	COMDAT ??_C@_0CB@FBJJKOMN@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5STANDBY@
CONST	SEGMENT
??_C@_0CB@FBJJKOMN@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5STANDBY@ DB '['
	DB	' RAKLION ] State(%d) -> STANDBY', 00H	; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_STANDBY@CRaklion@@QAEXXZ PROC			; CRaklion::SetState_STANDBY
; _this$ = ecx

; 383  : {

  00fa0	55		 push	 ebp
  00fa1	8b ec		 mov	 ebp, esp
  00fa3	83 ec 44	 sub	 esp, 68			; 00000044H
  00fa6	53		 push	 ebx
  00fa7	56		 push	 esi
  00fa8	57		 push	 edi
  00fa9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 384  : 	LogAddC(7, "[ RAKLION ] State(%d) -> STANDBY", this->m_iRaklionState);

  00fac	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00faf	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00fb2	51		 push	 ecx
  00fb3	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@FBJJKOMN@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5STANDBY@
  00fb8	6a 07		 push	 7
  00fba	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00fc0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 385  : 
; 386  : 	this->m_iAppearanceMSec = GetTickCount();

  00fc3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00fc9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00fcc	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 387  : 
; 388  : 	this->SetRaklionState(RAKLION_STATE_STANDBY);

  00fcf	6a 02		 push	 2
  00fd1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00fd4	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState

; 389  : }

  00fd9	5f		 pop	 edi
  00fda	5e		 pop	 esi
  00fdb	5b		 pop	 ebx
  00fdc	8b e5		 mov	 esp, ebp
  00fde	5d		 pop	 ebp
  00fdf	c3		 ret	 0
?SetState_STANDBY@CRaklion@@QAEXXZ ENDP			; CRaklion::SetState_STANDBY
_TEXT	ENDS
PUBLIC	??_C@_0CC@KFBMIHBE@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ ; `string'
EXTRN	?SendMsgAllUser@CRaklionUtil@@QAAXPADZZ:PROC	; CRaklionUtil::SendMsgAllUser
EXTRN	?Get@CMsg@@QAEPADH@Z:PROC			; CMsg::Get
EXTRN	?lMsg@@3VCMsg@@A:BYTE				; lMsg
;	COMDAT ??_C@_0CC@KFBMIHBE@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
CONST	SEGMENT
??_C@_0CC@KFBMIHBE@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ DB '['
	DB	' RAKLION ] State(%d) -> NOTIFY_2', 00H	; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_iGateClosedMsg$ = -8					; size = 4
_this$ = -4						; size = 4
?SetState_NOTIFY_2@CRaklion@@QAEXXZ PROC		; CRaklion::SetState_NOTIFY_2
; _this$ = ecx

; 392  : {

  00fe0	55		 push	 ebp
  00fe1	8b ec		 mov	 ebp, esp
  00fe3	83 ec 48	 sub	 esp, 72			; 00000048H
  00fe6	53		 push	 ebx
  00fe7	56		 push	 esi
  00fe8	57		 push	 edi
  00fe9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 393  : 	LogAddC(7, "[ RAKLION ] State(%d) -> NOTIFY_2", this->m_iRaklionState);

  00fec	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00fef	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00ff2	51		 push	 ecx
  00ff3	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@KFBMIHBE@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
  00ff8	6a 07		 push	 7
  00ffa	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  01000	83 c4 0c	 add	 esp, 12			; 0000000cH

; 394  : 
; 395  : 	int iGateClosedMsg = this->m_iBossZoneCloseDelay / 60;

  01003	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01006	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  01009	99		 cdq
  0100a	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  0100f	f7 f9		 idiv	 ecx
  01011	89 45 f8	 mov	 DWORD PTR _iGateClosedMsg$[ebp], eax

; 396  : 
; 397  : 	if(iGateClosedMsg == 0)

  01014	83 7d f8 00	 cmp	 DWORD PTR _iGateClosedMsg$[ebp], 0
  01018	75 07		 jne	 SHORT $LN1@SetState_N

; 398  : 	{
; 399  : 		iGateClosedMsg = 1;

  0101a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _iGateClosedMsg$[ebp], 1
$LN1@SetState_N:

; 400  : 	}
; 401  : 
; 402  : 	g_RaklionUtil.SendMsgAllUser(lMsg.Get(3410),iGateClosedMsg);

  01021	8b 45 f8	 mov	 eax, DWORD PTR _iGateClosedMsg$[ebp]
  01024	50		 push	 eax
  01025	68 52 0d 00 00	 push	 3410			; 00000d52H
  0102a	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0102f	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  01034	50		 push	 eax
  01035	68 00 00 00 00	 push	 OFFSET ?g_RaklionUtil@@3VCRaklionUtil@@A ; g_RaklionUtil
  0103a	e8 00 00 00 00	 call	 ?SendMsgAllUser@CRaklionUtil@@QAAXPADZZ ; CRaklionUtil::SendMsgAllUser
  0103f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 403  : 
; 404  : 	this->SetRaklionState(RAKLION_STATE_NOTIFY_2);

  01042	6a 03		 push	 3
  01044	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01047	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState

; 405  : }

  0104c	5f		 pop	 edi
  0104d	5e		 pop	 esi
  0104e	5b		 pop	 ebx
  0104f	8b e5		 mov	 esp, ebp
  01051	5d		 pop	 ebp
  01052	c3		 ret	 0
?SetState_NOTIFY_2@CRaklion@@QAEXXZ ENDP		; CRaklion::SetState_NOTIFY_2
_TEXT	ENDS
PUBLIC	??_C@_0BP@OAMNOKFG@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5READY?$AA@ ; `string'
EXTRN	?SetState@CRaklionBattleOfSelupan@@QAEXH@Z:PROC	; CRaklionBattleOfSelupan::SetState
;	COMDAT ??_C@_0BP@OAMNOKFG@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5READY?$AA@
CONST	SEGMENT
??_C@_0BP@OAMNOKFG@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5READY?$AA@ DB '['
	DB	' RAKLION ] State(%d) -> READY', 00H		; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_READY@CRaklion@@QAEXXZ PROC			; CRaklion::SetState_READY
; _this$ = ecx

; 408  : {

  01060	55		 push	 ebp
  01061	8b ec		 mov	 ebp, esp
  01063	83 ec 44	 sub	 esp, 68			; 00000044H
  01066	53		 push	 ebx
  01067	56		 push	 esi
  01068	57		 push	 edi
  01069	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 409  : 	LogAddC(7, "[ RAKLION ] State(%d) -> READY", this->m_iRaklionState);

  0106c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0106f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  01072	51		 push	 ecx
  01073	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@OAMNOKFG@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5READY?$AA@
  01078	6a 07		 push	 7
  0107a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  01080	83 c4 0c	 add	 esp, 12			; 0000000cH

; 410  : 	
; 411  : 	this->m_RaklionBattleOfSelupan.SetState(1);

  01083	6a 01		 push	 1
  01085	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01088	83 c1 38	 add	 ecx, 56			; 00000038H
  0108b	e8 00 00 00 00	 call	 ?SetState@CRaklionBattleOfSelupan@@QAEXH@Z ; CRaklionBattleOfSelupan::SetState

; 412  : 	
; 413  : 	this->SetRaklionState(RAKLION_STATE_READY);

  01090	6a 04		 push	 4
  01092	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01095	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState

; 414  : }

  0109a	5f		 pop	 edi
  0109b	5e		 pop	 esi
  0109c	5b		 pop	 ebx
  0109d	8b e5		 mov	 esp, ebp
  0109f	5d		 pop	 ebp
  010a0	c3		 ret	 0
?SetState_READY@CRaklion@@QAEXXZ ENDP			; CRaklion::SetState_READY
_TEXT	ENDS
PUBLIC	??_C@_0CG@EHBAIFDM@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5START_B@ ; `string'
;	COMDAT ??_C@_0CG@EHBAIFDM@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5START_B@
CONST	SEGMENT
??_C@_0CG@EHBAIFDM@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5START_B@ DB '['
	DB	' RAKLION ] State(%d) -> START_BATTLE', 00H	; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_START_BATTLE@CRaklion@@QAEXXZ PROC		; CRaklion::SetState_START_BATTLE
; _this$ = ecx

; 417  : {

  010b0	55		 push	 ebp
  010b1	8b ec		 mov	 ebp, esp
  010b3	83 ec 44	 sub	 esp, 68			; 00000044H
  010b6	53		 push	 ebx
  010b7	56		 push	 esi
  010b8	57		 push	 edi
  010b9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 418  : 	LogAddC(7, "[ RAKLION ] State(%d) -> START_BATTLE", this->m_iRaklionState);

  010bc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  010bf	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  010c2	51		 push	 ecx
  010c3	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@EHBAIFDM@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5START_B@
  010c8	6a 07		 push	 7
  010ca	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  010d0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 419  : 	
; 420  : 	this->m_iBossZoneCloseMSec = GetTickCount();

  010d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  010d9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  010dc	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 421  : 	
; 422  : 	this->SetRaklionState(RAKLION_STATE_START_BATTLE);

  010df	6a 05		 push	 5
  010e1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  010e4	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState

; 423  : }

  010e9	5f		 pop	 edi
  010ea	5e		 pop	 esi
  010eb	5b		 pop	 ebx
  010ec	8b e5		 mov	 esp, ebp
  010ee	5d		 pop	 ebp
  010ef	c3		 ret	 0
?SetState_START_BATTLE@CRaklion@@QAEXXZ ENDP		; CRaklion::SetState_START_BATTLE
_TEXT	ENDS
PUBLIC	??_C@_0CC@LMAHLGFF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ ; `string'
;	COMDAT ??_C@_0CC@LMAHLGFF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
CONST	SEGMENT
??_C@_0CC@LMAHLGFF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ DB '['
	DB	' RAKLION ] State(%d) -> NOTIFY_3', 00H	; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_NOTIFY_3@CRaklion@@QAEXXZ PROC		; CRaklion::SetState_NOTIFY_3
; _this$ = ecx

; 426  : {

  010f0	55		 push	 ebp
  010f1	8b ec		 mov	 ebp, esp
  010f3	83 ec 44	 sub	 esp, 68			; 00000044H
  010f6	53		 push	 ebx
  010f7	56		 push	 esi
  010f8	57		 push	 edi
  010f9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 427  : 	LogAddC(7, "[ RAKLION ] State(%d) -> NOTIFY_3", this->m_iRaklionState);

  010fc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  010ff	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  01102	51		 push	 ecx
  01103	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@LMAHLGFF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
  01108	6a 07		 push	 7
  0110a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  01110	83 c4 0c	 add	 esp, 12			; 0000000cH

; 428  : 	
; 429  : 	g_RaklionUtil.SendMsgAllUser(lMsg.Get(3411));

  01113	68 53 0d 00 00	 push	 3411			; 00000d53H
  01118	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0111d	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  01122	50		 push	 eax
  01123	68 00 00 00 00	 push	 OFFSET ?g_RaklionUtil@@3VCRaklionUtil@@A ; g_RaklionUtil
  01128	e8 00 00 00 00	 call	 ?SendMsgAllUser@CRaklionUtil@@QAAXPADZZ ; CRaklionUtil::SendMsgAllUser
  0112d	83 c4 08	 add	 esp, 8

; 430  : 	
; 431  : 	this->SetRaklionState(RAKLION_STATE_NOTIFY_3);

  01130	6a 06		 push	 6
  01132	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01135	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState

; 432  : 
; 433  : }

  0113a	5f		 pop	 edi
  0113b	5e		 pop	 esi
  0113c	5b		 pop	 ebx
  0113d	8b e5		 mov	 esp, ebp
  0113f	5d		 pop	 ebp
  01140	c3		 ret	 0
?SetState_NOTIFY_3@CRaklion@@QAEXXZ ENDP		; CRaklion::SetState_NOTIFY_3
_TEXT	ENDS
PUBLIC	??_C@_0CE@CEKALBPI@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5CLOSE_D@ ; `string'
;	COMDAT ??_C@_0CE@CEKALBPI@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5CLOSE_D@
CONST	SEGMENT
??_C@_0CE@CEKALBPI@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5CLOSE_D@ DB '['
	DB	' RAKLION ] State(%d) -> CLOSE_DOOR', 00H	; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_CLOSE_DOOR@CRaklion@@QAEXXZ PROC		; CRaklion::SetState_CLOSE_DOOR
; _this$ = ecx

; 436  : {	

  01150	55		 push	 ebp
  01151	8b ec		 mov	 ebp, esp
  01153	83 ec 44	 sub	 esp, 68			; 00000044H
  01156	53		 push	 ebx
  01157	56		 push	 esi
  01158	57		 push	 edi
  01159	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 437  : 	LogAddC(7, "[ RAKLION ] State(%d) -> CLOSE_DOOR", this->m_iRaklionState);

  0115c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0115f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  01162	51		 push	 ecx
  01163	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@CEKALBPI@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5CLOSE_D@
  01168	6a 07		 push	 7
  0116a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  01170	83 c4 0c	 add	 esp, 12			; 0000000cH

; 438  : 
; 439  : 	this->SetRaklionState(RAKLION_STATE_CLOSE_DOOR);

  01173	6a 07		 push	 7
  01175	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01178	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState

; 440  : }

  0117d	5f		 pop	 edi
  0117e	5e		 pop	 esi
  0117f	5b		 pop	 ebx
  01180	8b e5		 mov	 esp, ebp
  01182	5d		 pop	 ebp
  01183	c3		 ret	 0
?SetState_CLOSE_DOOR@CRaklion@@QAEXXZ ENDP		; CRaklion::SetState_CLOSE_DOOR
_TEXT	ENDS
PUBLIC	??_C@_0CG@IGAGCAMK@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5ALL_USE@ ; `string'
EXTRN	?DeleteSummonMonster@CRaklionBattleOfSelupan@@QAEXXZ:PROC ; CRaklionBattleOfSelupan::DeleteSummonMonster
EXTRN	?DeleteSelupan@CRaklionBattleOfSelupan@@QAEXXZ:PROC ; CRaklionBattleOfSelupan::DeleteSelupan
;	COMDAT ??_C@_0CG@IGAGCAMK@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5ALL_USE@
CONST	SEGMENT
??_C@_0CG@IGAGCAMK@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5ALL_USE@ DB '['
	DB	' RAKLION ] State(%d) -> ALL_USER_DIE', 00H	; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_ALL_USER_DIE@CRaklion@@QAEXXZ PROC		; CRaklion::SetState_ALL_USER_DIE
; _this$ = ecx

; 443  : {

  01190	55		 push	 ebp
  01191	8b ec		 mov	 ebp, esp
  01193	83 ec 44	 sub	 esp, 68			; 00000044H
  01196	53		 push	 ebx
  01197	56		 push	 esi
  01198	57		 push	 edi
  01199	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 444  : 	LogAddC(7, "[ RAKLION ] State(%d) -> ALL_USER_DIE", this->m_iRaklionState);

  0119c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0119f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  011a2	51		 push	 ecx
  011a3	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@IGAGCAMK@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5ALL_USE@
  011a8	6a 07		 push	 7
  011aa	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  011b0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 445  : 	
; 446  : 	this->m_RaklionBattleOfSelupan.DeleteSelupan();

  011b3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  011b6	83 c1 38	 add	 ecx, 56			; 00000038H
  011b9	e8 00 00 00 00	 call	 ?DeleteSelupan@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::DeleteSelupan

; 447  : 	
; 448  : 	this->m_RaklionBattleOfSelupan.DeleteSummonMonster();

  011be	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  011c1	83 c1 38	 add	 ecx, 56			; 00000038H
  011c4	e8 00 00 00 00	 call	 ?DeleteSummonMonster@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::DeleteSummonMonster

; 449  : 	
; 450  : 	this->SetRaklionState(RAKLION_STATE_ALL_USER_DIE);

  011c9	6a 08		 push	 8
  011cb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  011ce	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState

; 451  : }

  011d3	5f		 pop	 edi
  011d4	5e		 pop	 esi
  011d5	5b		 pop	 ebx
  011d6	8b e5		 mov	 esp, ebp
  011d8	5d		 pop	 ebp
  011d9	c3		 ret	 0
?SetState_ALL_USER_DIE@CRaklion@@QAEXXZ ENDP		; CRaklion::SetState_ALL_USER_DIE
_TEXT	ENDS
PUBLIC	?GetSuccessValue@CRaklionBattleOfSelupan@@QAEHXZ ; CRaklionBattleOfSelupan::GetSuccessValue
PUBLIC	??_C@_0CC@PDEGCAJC@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ ; `string'
EXTRN	?NotifyRaklionSuccessValue@CRaklionUtil@@QAEXH@Z:PROC ; CRaklionUtil::NotifyRaklionSuccessValue
;	COMDAT ??_C@_0CC@PDEGCAJC@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
CONST	SEGMENT
??_C@_0CC@PDEGCAJC@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ DB '['
	DB	' RAKLION ] State(%d) -> NOTIFY_4', 00H	; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_iGateOpen$ = -12					; size = 4
_iSuccesValue$ = -8					; size = 4
_this$ = -4						; size = 4
?SetState_NOTIFY_4@CRaklion@@QAEXXZ PROC		; CRaklion::SetState_NOTIFY_4
; _this$ = ecx

; 454  : {

  011e0	55		 push	 ebp
  011e1	8b ec		 mov	 ebp, esp
  011e3	83 ec 4c	 sub	 esp, 76			; 0000004cH
  011e6	53		 push	 ebx
  011e7	56		 push	 esi
  011e8	57		 push	 edi
  011e9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 455  : 	LogAddC(7, "[ RAKLION ] State(%d) -> NOTIFY_4", this->m_iRaklionState);

  011ec	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  011ef	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  011f2	51		 push	 ecx
  011f3	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@PDEGCAJC@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
  011f8	6a 07		 push	 7
  011fa	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  01200	83 c4 0c	 add	 esp, 12			; 0000000cH

; 456  : 
; 457  : 	this->m_iBossZoneOpenMSec = GetTickCount();

  01203	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  01209	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0120c	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 458  : 	
; 459  : 	int iSuccesValue = this->m_RaklionBattleOfSelupan.GetSuccessValue();

  0120f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01212	83 c1 38	 add	 ecx, 56			; 00000038H
  01215	e8 00 00 00 00	 call	 ?GetSuccessValue@CRaklionBattleOfSelupan@@QAEHXZ ; CRaklionBattleOfSelupan::GetSuccessValue
  0121a	89 45 f8	 mov	 DWORD PTR _iSuccesValue$[ebp], eax

; 460  : 
; 461  : 	int iGateOpen = this->m_iBossZoneOpenDelay / 60;

  0121d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01220	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
  01223	99		 cdq
  01224	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  01229	f7 f9		 idiv	 ecx
  0122b	89 45 f4	 mov	 DWORD PTR _iGateOpen$[ebp], eax

; 462  : 
; 463  : 	if(iGateOpen == 0)

  0122e	83 7d f4 00	 cmp	 DWORD PTR _iGateOpen$[ebp], 0
  01232	75 07		 jne	 SHORT $LN1@SetState_N@2

; 464  : 	{
; 465  : 		iGateOpen = 1;

  01234	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _iGateOpen$[ebp], 1
$LN1@SetState_N@2:

; 466  : 	}
; 467  : 
; 468  : 	g_RaklionUtil.SendMsgAllUser(lMsg.Get(3413),iGateOpen);

  0123b	8b 45 f4	 mov	 eax, DWORD PTR _iGateOpen$[ebp]
  0123e	50		 push	 eax
  0123f	68 55 0d 00 00	 push	 3413			; 00000d55H
  01244	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  01249	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0124e	50		 push	 eax
  0124f	68 00 00 00 00	 push	 OFFSET ?g_RaklionUtil@@3VCRaklionUtil@@A ; g_RaklionUtil
  01254	e8 00 00 00 00	 call	 ?SendMsgAllUser@CRaklionUtil@@QAAXPADZZ ; CRaklionUtil::SendMsgAllUser
  01259	83 c4 0c	 add	 esp, 12			; 0000000cH

; 469  : 	g_RaklionUtil.NotifyRaklionSuccessValue(iSuccesValue);

  0125c	8b 45 f8	 mov	 eax, DWORD PTR _iSuccesValue$[ebp]
  0125f	50		 push	 eax
  01260	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_RaklionUtil@@3VCRaklionUtil@@A ; g_RaklionUtil
  01265	e8 00 00 00 00	 call	 ?NotifyRaklionSuccessValue@CRaklionUtil@@QAEXH@Z ; CRaklionUtil::NotifyRaklionSuccessValue

; 470  : 
; 471  : 	this->SetRaklionState(RAKLION_STATE_NOTIFY_4);

  0126a	6a 09		 push	 9
  0126c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0126f	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState

; 472  : }

  01274	5f		 pop	 edi
  01275	5e		 pop	 esi
  01276	5b		 pop	 ebx
  01277	8b e5		 mov	 esp, ebp
  01279	5d		 pop	 ebp
  0127a	c3		 ret	 0
?SetState_NOTIFY_4@CRaklion@@QAEXXZ ENDP		; CRaklion::SetState_NOTIFY_4
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\raklionbattleofselupan.h
_TEXT	ENDS
;	COMDAT ?GetSuccessValue@CRaklionBattleOfSelupan@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSuccessValue@CRaklionBattleOfSelupan@@QAEHXZ PROC	; CRaklionBattleOfSelupan::GetSuccessValue, COMDAT
; _this$ = ecx

; 98   : 	BOOL GetSuccessValue			(							)	{	return	this->m_bIsSucccess;										}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetSuccessValue@CRaklionBattleOfSelupan@@QAEHXZ ENDP	; CRaklionBattleOfSelupan::GetSuccessValue
_TEXT	ENDS
PUBLIC	?BossEggRegenAll@CRaklion@@QAEXXZ		; CRaklion::BossEggRegenAll
PUBLIC	??_C@_0BN@HJFCIMIF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5END?$AA@ ; `string'
EXTRN	?ResetAllData@CRaklionBattleOfSelupan@@QAEXXZ:PROC ; CRaklionBattleOfSelupan::ResetAllData
;	COMDAT ??_C@_0BN@HJFCIMIF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5END?$AA@
; File d:\projects\exteam6.3\source\gameserver\gameserver\raklion.cpp
CONST	SEGMENT
??_C@_0BN@HJFCIMIF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5END?$AA@ DB '['
	DB	' RAKLION ] State(%d) -> END', 00H		; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_END@CRaklion@@QAEXXZ PROC			; CRaklion::SetState_END
; _this$ = ecx

; 475  : {

  01280	55		 push	 ebp
  01281	8b ec		 mov	 ebp, esp
  01283	83 ec 44	 sub	 esp, 68			; 00000044H
  01286	53		 push	 ebx
  01287	56		 push	 esi
  01288	57		 push	 edi
  01289	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 476  : 	LogAddC(7, "[ RAKLION ] State(%d) -> END", this->m_iRaklionState);

  0128c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0128f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  01292	51		 push	 ecx
  01293	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@HJFCIMIF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5END?$AA@
  01298	6a 07		 push	 7
  0129a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  012a0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 477  : 
; 478  : 	this->m_RaklionBattleOfSelupan.DeleteSelupan();

  012a3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  012a6	83 c1 38	 add	 ecx, 56			; 00000038H
  012a9	e8 00 00 00 00	 call	 ?DeleteSelupan@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::DeleteSelupan

; 479  : 	this->m_RaklionBattleOfSelupan.DeleteSummonMonster();

  012ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  012b1	83 c1 38	 add	 ecx, 56			; 00000038H
  012b4	e8 00 00 00 00	 call	 ?DeleteSummonMonster@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::DeleteSummonMonster

; 480  : 	this->m_RaklionBattleOfSelupan.ResetAllData();

  012b9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  012bc	83 c1 38	 add	 ecx, 56			; 00000038H
  012bf	e8 00 00 00 00	 call	 ?ResetAllData@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::ResetAllData

; 481  : 
; 482  : 	this->ClearData();

  012c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  012c7	e8 00 00 00 00	 call	 ?ClearData@CRaklion@@QAEXXZ ; CRaklion::ClearData

; 483  : 
; 484  : 	g_RaklionUtil.SendMsgAllUser(lMsg.Get(3414));

  012cc	68 56 0d 00 00	 push	 3414			; 00000d56H
  012d1	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  012d6	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  012db	50		 push	 eax
  012dc	68 00 00 00 00	 push	 OFFSET ?g_RaklionUtil@@3VCRaklionUtil@@A ; g_RaklionUtil
  012e1	e8 00 00 00 00	 call	 ?SendMsgAllUser@CRaklionUtil@@QAAXPADZZ ; CRaklionUtil::SendMsgAllUser
  012e6	83 c4 08	 add	 esp, 8

; 485  : 
; 486  : 	this->SetRaklionState(RAKLION_STATE_END);

  012e9	6a 0a		 push	 10			; 0000000aH
  012eb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  012ee	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState

; 487  : 
; 488  : 	this->BossEggRegenAll();

  012f3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  012f6	e8 00 00 00 00	 call	 ?BossEggRegenAll@CRaklion@@QAEXXZ ; CRaklion::BossEggRegenAll

; 489  : 
; 490  : }

  012fb	5f		 pop	 edi
  012fc	5e		 pop	 esi
  012fd	5b		 pop	 ebx
  012fe	8b e5		 mov	 esp, ebp
  01300	5d		 pop	 ebp
  01301	c3		 ret	 0
?SetState_END@CRaklion@@QAEXXZ ENDP			; CRaklion::SetState_END
_TEXT	ENDS
PUBLIC	?GetBossEggCount@CRaklion@@QAEHXZ		; CRaklion::GetBossEggCount
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ProcState_IDLE@CRaklion@@QAEXXZ PROC			; CRaklion::ProcState_IDLE
; _this$ = ecx

; 493  : {

  01310	55		 push	 ebp
  01311	8b ec		 mov	 ebp, esp
  01313	83 ec 44	 sub	 esp, 68			; 00000044H
  01316	53		 push	 ebx
  01317	56		 push	 esi
  01318	57		 push	 edi
  01319	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 494  : 	if ( this->GetBossEggCount() == 0 )

  0131c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0131f	e8 00 00 00 00	 call	 ?GetBossEggCount@CRaklion@@QAEHXZ ; CRaklion::GetBossEggCount
  01324	85 c0		 test	 eax, eax
  01326	75 0c		 jne	 SHORT $LN3@ProcState_

; 495  : 	{
; 496  : 		this->SetState(RAKLION_STATE_STANDBY);

  01328	6a 02		 push	 2
  0132a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0132d	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 497  : 		return;

  01332	eb 33		 jmp	 SHORT $LN4@ProcState_
$LN3@ProcState_:

; 498  : 	}
; 499  : 
; 500  : 	if ( this->m_iBossEggHalfChecked == 0)

  01334	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01337	83 b8 08 0e 00
	00 00		 cmp	 DWORD PTR [eax+3592], 0
  0133e	75 27		 jne	 SHORT $LN4@ProcState_

; 501  : 	{
; 502  : 		if ( this->GetBossEggCount() == this->m_iBossEggHalf )

  01340	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01343	e8 00 00 00 00	 call	 ?GetBossEggCount@CRaklion@@QAEHXZ ; CRaklion::GetBossEggCount
  01348	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0134b	3b 41 30	 cmp	 eax, DWORD PTR [ecx+48]
  0134e	75 17		 jne	 SHORT $LN4@ProcState_

; 503  : 		{
; 504  : 			this->SetState(RAKLION_STATE_NOTIFY_1);

  01350	6a 01		 push	 1
  01352	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01355	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 505  : 
; 506  : 			this->m_iBossEggHalfChecked = 1;

  0135a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0135d	c7 80 08 0e 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+3592], 1
$LN4@ProcState_:

; 507  : 		}
; 508  : 	}
; 509  : }

  01367	5f		 pop	 edi
  01368	5e		 pop	 esi
  01369	5b		 pop	 ebx
  0136a	8b e5		 mov	 esp, ebp
  0136c	5d		 pop	 ebp
  0136d	c3		 ret	 0
?ProcState_IDLE@CRaklion@@QAEXXZ ENDP			; CRaklion::ProcState_IDLE
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?ProcState_NOTIFY_1@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_NOTIFY_1
; _this$ = ecx

; 512  : {

  01370	55		 push	 ebp
  01371	8b ec		 mov	 ebp, esp
  01373	83 ec 44	 sub	 esp, 68			; 00000044H
  01376	53		 push	 ebx
  01377	56		 push	 esi
  01378	57		 push	 edi
  01379	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 513  : 	this->SetState(RAKLION_STATE_IDLE);

  0137c	6a 00		 push	 0
  0137e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01381	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 514  : }

  01386	5f		 pop	 edi
  01387	5e		 pop	 esi
  01388	5b		 pop	 ebx
  01389	8b e5		 mov	 esp, ebp
  0138b	5d		 pop	 ebp
  0138c	c3		 ret	 0
?ProcState_NOTIFY_1@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_NOTIFY_1
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?ProcState_STANDBY@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_STANDBY
; _this$ = ecx

; 517  : {

  01390	55		 push	 ebp
  01391	8b ec		 mov	 ebp, esp
  01393	83 ec 44	 sub	 esp, 68			; 00000044H
  01396	53		 push	 ebx
  01397	56		 push	 esi
  01398	57		 push	 edi
  01399	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 518  : 	if ( 1000 * this->m_iAppearanceDelay <= GetTickCount() - this->m_iAppearanceMSec )

  0139c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0139f	8b 70 24	 mov	 esi, DWORD PTR [eax+36]
  013a2	69 f6 e8 03 00
	00		 imul	 esi, 1000		; 000003e8H
  013a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  013ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  013b1	2b 41 14	 sub	 eax, DWORD PTR [ecx+20]
  013b4	3b f0		 cmp	 esi, eax
  013b6	77 0a		 ja	 SHORT $LN2@ProcState_@2

; 519  : 	{
; 520  : 		this->SetState(RAKLION_STATE_NOTIFY_2);

  013b8	6a 03		 push	 3
  013ba	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  013bd	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState
$LN2@ProcState_@2:

; 521  : 	}
; 522  : }

  013c2	5f		 pop	 edi
  013c3	5e		 pop	 esi
  013c4	5b		 pop	 ebx
  013c5	8b e5		 mov	 esp, ebp
  013c7	5d		 pop	 ebp
  013c8	c3		 ret	 0
?ProcState_STANDBY@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_STANDBY
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?ProcState_NOTIFY_2@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_NOTIFY_2
; _this$ = ecx

; 525  : {

  013d0	55		 push	 ebp
  013d1	8b ec		 mov	 ebp, esp
  013d3	83 ec 44	 sub	 esp, 68			; 00000044H
  013d6	53		 push	 ebx
  013d7	56		 push	 esi
  013d8	57		 push	 edi
  013d9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 526  : 	this->SetState(RAKLION_STATE_READY);

  013dc	6a 04		 push	 4
  013de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  013e1	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 527  : }

  013e6	5f		 pop	 edi
  013e7	5e		 pop	 esi
  013e8	5b		 pop	 ebx
  013e9	8b e5		 mov	 esp, ebp
  013eb	5d		 pop	 ebp
  013ec	c3		 ret	 0
?ProcState_NOTIFY_2@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_NOTIFY_2
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?ProcState_READY@CRaklion@@QAEXXZ PROC			; CRaklion::ProcState_READY
; _this$ = ecx

; 530  : {

  013f0	55		 push	 ebp
  013f1	8b ec		 mov	 ebp, esp
  013f3	83 ec 44	 sub	 esp, 68			; 00000044H
  013f6	53		 push	 ebx
  013f7	56		 push	 esi
  013f8	57		 push	 edi
  013f9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 531  : 	this->SetState(RAKLION_STATE_START_BATTLE);

  013fc	6a 05		 push	 5
  013fe	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01401	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 532  : }

  01406	5f		 pop	 edi
  01407	5e		 pop	 esi
  01408	5b		 pop	 ebx
  01409	8b e5		 mov	 esp, ebp
  0140b	5d		 pop	 ebp
  0140c	c3		 ret	 0
?ProcState_READY@CRaklion@@QAEXXZ ENDP			; CRaklion::ProcState_READY
_TEXT	ENDS
EXTRN	?Run@CRaklionBattleOfSelupan@@QAEXXZ:PROC	; CRaklionBattleOfSelupan::Run
EXTRN	?SelupanLifeCheck@CRaklionBattleOfSelupan@@QAEXXZ:PROC ; CRaklionBattleOfSelupan::SelupanLifeCheck
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ProcState_START_BATTLE@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_START_BATTLE
; _this$ = ecx

; 535  : {

  01410	55		 push	 ebp
  01411	8b ec		 mov	 ebp, esp
  01413	83 ec 44	 sub	 esp, 68			; 00000044H
  01416	53		 push	 ebx
  01417	56		 push	 esi
  01418	57		 push	 edi
  01419	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 536  : 	if ( 1000 * this->m_iBossZoneCloseDelay < GetTickCount() - this->m_iBossZoneCloseMSec )

  0141c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0141f	8b 70 28	 mov	 esi, DWORD PTR [eax+40]
  01422	69 f6 e8 03 00
	00		 imul	 esi, 1000		; 000003e8H
  01428	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0142e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01431	2b 41 18	 sub	 eax, DWORD PTR [ecx+24]
  01434	3b f0		 cmp	 esi, eax
  01436	73 0a		 jae	 SHORT $LN1@ProcState_@3

; 537  : 	{
; 538  : 		this->SetState(RAKLION_STATE_NOTIFY_3);

  01438	6a 06		 push	 6
  0143a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0143d	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState
$LN1@ProcState_@3:

; 539  : 	}
; 540  : 
; 541  : 	this->m_RaklionBattleOfSelupan.SelupanLifeCheck();

  01442	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01445	83 c1 38	 add	 ecx, 56			; 00000038H
  01448	e8 00 00 00 00	 call	 ?SelupanLifeCheck@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::SelupanLifeCheck

; 542  : 
; 543  : 	this->m_RaklionBattleOfSelupan.Run();

  0144d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01450	83 c1 38	 add	 ecx, 56			; 00000038H
  01453	e8 00 00 00 00	 call	 ?Run@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::Run

; 544  : }

  01458	5f		 pop	 edi
  01459	5e		 pop	 esi
  0145a	5b		 pop	 ebx
  0145b	8b e5		 mov	 esp, ebp
  0145d	5d		 pop	 ebp
  0145e	c3		 ret	 0
?ProcState_START_BATTLE@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_START_BATTLE
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?ProcState_NOTIFY_3@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_NOTIFY_3
; _this$ = ecx

; 547  : {

  01460	55		 push	 ebp
  01461	8b ec		 mov	 ebp, esp
  01463	83 ec 44	 sub	 esp, 68			; 00000044H
  01466	53		 push	 ebx
  01467	56		 push	 esi
  01468	57		 push	 edi
  01469	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 548  : 	this->m_RaklionBattleOfSelupan.SelupanLifeCheck();

  0146c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0146f	83 c1 38	 add	 ecx, 56			; 00000038H
  01472	e8 00 00 00 00	 call	 ?SelupanLifeCheck@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::SelupanLifeCheck

; 549  : 
; 550  : 	this->m_RaklionBattleOfSelupan.Run();

  01477	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0147a	83 c1 38	 add	 ecx, 56			; 00000038H
  0147d	e8 00 00 00 00	 call	 ?Run@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::Run

; 551  : 
; 552  : 	this->SetState(RAKLION_STATE_CLOSE_DOOR);

  01482	6a 07		 push	 7
  01484	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01487	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 553  : }

  0148c	5f		 pop	 edi
  0148d	5e		 pop	 esi
  0148e	5b		 pop	 ebx
  0148f	8b e5		 mov	 esp, ebp
  01491	5d		 pop	 ebp
  01492	c3		 ret	 0
?ProcState_NOTIFY_3@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_NOTIFY_3
_TEXT	ENDS
PUBLIC	?SetSuccessValue@CRaklionBattleOfSelupan@@QAEXH@Z ; CRaklionBattleOfSelupan::SetSuccessValue
EXTRN	?CheckBattleUsers@CRaklionBattleUserMng@@QAEHXZ:PROC ; CRaklionBattleUserMng::CheckBattleUsers
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ProcState_CLOSE_DOOR@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_CLOSE_DOOR
; _this$ = ecx

; 556  : {

  014a0	55		 push	 ebp
  014a1	8b ec		 mov	 ebp, esp
  014a3	83 ec 44	 sub	 esp, 68			; 00000044H
  014a6	53		 push	 ebx
  014a7	56		 push	 esi
  014a8	57		 push	 edi
  014a9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 557  : 	if ( g_RaklionBattleUserMng.CheckBattleUsers() == 1)

  014ac	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_RaklionBattleUserMng@@3VCRaklionBattleUserMng@@A ; g_RaklionBattleUserMng
  014b1	e8 00 00 00 00	 call	 ?CheckBattleUsers@CRaklionBattleUserMng@@QAEHXZ ; CRaklionBattleUserMng::CheckBattleUsers
  014b6	83 f8 01	 cmp	 eax, 1
  014b9	75 19		 jne	 SHORT $LN2@ProcState_@4

; 558  : 	{
; 559  : 		this->m_RaklionBattleOfSelupan.SetSuccessValue(FALSE);

  014bb	6a 00		 push	 0
  014bd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  014c0	83 c1 38	 add	 ecx, 56			; 00000038H
  014c3	e8 00 00 00 00	 call	 ?SetSuccessValue@CRaklionBattleOfSelupan@@QAEXH@Z ; CRaklionBattleOfSelupan::SetSuccessValue

; 560  : 		this->SetState(RAKLION_STATE_ALL_USER_DIE);

  014c8	6a 08		 push	 8
  014ca	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  014cd	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 561  : 		return;

  014d2	eb 3f		 jmp	 SHORT $LN3@ProcState_@4
$LN2@ProcState_@4:

; 562  : 	}		
; 563  : 
; 564  : 	if ( this->m_RaklionBattleOfSelupan.GetBattleOfSelupanState() == 9 )

  014d4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  014d7	83 c1 38	 add	 ecx, 56			; 00000038H
  014da	e8 00 00 00 00	 call	 ?GetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEHXZ ; CRaklionBattleOfSelupan::GetBattleOfSelupanState
  014df	83 f8 09	 cmp	 eax, 9
  014e2	75 19		 jne	 SHORT $LN1@ProcState_@4

; 565  : 	{
; 566  : 		this->m_RaklionBattleOfSelupan.SetSuccessValue(TRUE);

  014e4	6a 01		 push	 1
  014e6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  014e9	83 c1 38	 add	 ecx, 56			; 00000038H
  014ec	e8 00 00 00 00	 call	 ?SetSuccessValue@CRaklionBattleOfSelupan@@QAEXH@Z ; CRaklionBattleOfSelupan::SetSuccessValue

; 567  : 		this->SetState(RAKLION_STATE_NOTIFY_4);

  014f1	6a 09		 push	 9
  014f3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  014f6	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 568  : 		return;

  014fb	eb 16		 jmp	 SHORT $LN3@ProcState_@4
$LN1@ProcState_@4:

; 569  : 	}
; 570  : 	
; 571  : 	this->m_RaklionBattleOfSelupan.SelupanLifeCheck();

  014fd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01500	83 c1 38	 add	 ecx, 56			; 00000038H
  01503	e8 00 00 00 00	 call	 ?SelupanLifeCheck@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::SelupanLifeCheck

; 572  : 	this->m_RaklionBattleOfSelupan.Run();

  01508	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0150b	83 c1 38	 add	 ecx, 56			; 00000038H
  0150e	e8 00 00 00 00	 call	 ?Run@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::Run
$LN3@ProcState_@4:

; 573  : 
; 574  : 
; 575  : }

  01513	5f		 pop	 edi
  01514	5e		 pop	 esi
  01515	5b		 pop	 ebx
  01516	8b e5		 mov	 esp, ebp
  01518	5d		 pop	 ebp
  01519	c3		 ret	 0
?ProcState_CLOSE_DOOR@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_CLOSE_DOOR
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\raklionbattleofselupan.h
_TEXT	ENDS
;	COMDAT ?SetSuccessValue@CRaklionBattleOfSelupan@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bIsSuccess$ = 8					; size = 4
?SetSuccessValue@CRaklionBattleOfSelupan@@QAEXH@Z PROC	; CRaklionBattleOfSelupan::SetSuccessValue, COMDAT
; _this$ = ecx

; 97   : 	void SetSuccessValue			(BOOL bIsSuccess)				{			this->m_bIsSucccess				= bIsSuccess;				}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _bIsSuccess$[ebp]
  00012	89 48 30	 mov	 DWORD PTR [eax+48], ecx
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetSuccessValue@CRaklionBattleOfSelupan@@QAEXH@Z ENDP	; CRaklionBattleOfSelupan::SetSuccessValue
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\raklion.cpp
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ProcState_ALL_USER_DIE@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_ALL_USER_DIE
; _this$ = ecx

; 578  : {	

  01520	55		 push	 ebp
  01521	8b ec		 mov	 ebp, esp
  01523	83 ec 44	 sub	 esp, 68			; 00000044H
  01526	53		 push	 ebx
  01527	56		 push	 esi
  01528	57		 push	 edi
  01529	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 579  : 	this->SetState(RAKLION_STATE_NOTIFY_4);

  0152c	6a 09		 push	 9
  0152e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01531	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 580  : }

  01536	5f		 pop	 edi
  01537	5e		 pop	 esi
  01538	5b		 pop	 ebx
  01539	8b e5		 mov	 esp, ebp
  0153b	5d		 pop	 ebp
  0153c	c3		 ret	 0
?ProcState_ALL_USER_DIE@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_ALL_USER_DIE
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?ProcState_NOTIFY_4@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_NOTIFY_4
; _this$ = ecx

; 583  : {

  01540	55		 push	 ebp
  01541	8b ec		 mov	 ebp, esp
  01543	83 ec 44	 sub	 esp, 68			; 00000044H
  01546	53		 push	 ebx
  01547	56		 push	 esi
  01548	57		 push	 edi
  01549	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 584  : 	if ( 1000 * this->m_iBossZoneOpenDelay < GetTickCount() - this->m_iBossZoneOpenMSec )

  0154c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0154f	8b 70 2c	 mov	 esi, DWORD PTR [eax+44]
  01552	69 f6 e8 03 00
	00		 imul	 esi, 1000		; 000003e8H
  01558	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0155e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01561	2b 41 1c	 sub	 eax, DWORD PTR [ecx+28]
  01564	3b f0		 cmp	 esi, eax
  01566	73 0a		 jae	 SHORT $LN2@ProcState_@5

; 585  : 	{
; 586  : 		this->SetState(RAKLION_STATE_END);

  01568	6a 0a		 push	 10			; 0000000aH
  0156a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0156d	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState
$LN2@ProcState_@5:

; 587  : 	}
; 588  : }

  01572	5f		 pop	 edi
  01573	5e		 pop	 esi
  01574	5b		 pop	 ebx
  01575	8b e5		 mov	 esp, ebp
  01577	5d		 pop	 ebp
  01578	c3		 ret	 0
?ProcState_NOTIFY_4@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_NOTIFY_4
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?ProcState_END@CRaklion@@QAEXXZ PROC			; CRaklion::ProcState_END
; _this$ = ecx

; 591  : {	

  01580	55		 push	 ebp
  01581	8b ec		 mov	 ebp, esp
  01583	83 ec 44	 sub	 esp, 68			; 00000044H
  01586	53		 push	 ebx
  01587	56		 push	 esi
  01588	57		 push	 edi
  01589	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 592  : 	this->SetState(RAKLION_STATE_IDLE);

  0158c	6a 00		 push	 0
  0158e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01591	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 593  : }

  01596	5f		 pop	 edi
  01597	5e		 pop	 esi
  01598	5b		 pop	 ebx
  01599	8b e5		 mov	 esp, ebp
  0159b	5d		 pop	 ebp
  0159c	c3		 ret	 0
?ProcState_END@CRaklion@@QAEXXZ ENDP			; CRaklion::ProcState_END
_TEXT	ENDS
PUBLIC	?SetRaklionEnable@CRaklion@@QAEXH@Z		; CRaklion::SetRaklionEnable
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bEnable$ = 8						; size = 4
?SetRaklionEnable@CRaklion@@QAEXH@Z PROC		; CRaklion::SetRaklionEnable
; _this$ = ecx

; 596  : {

  015a0	55		 push	 ebp
  015a1	8b ec		 mov	 ebp, esp
  015a3	83 ec 44	 sub	 esp, 68			; 00000044H
  015a6	53		 push	 ebx
  015a7	56		 push	 esi
  015a8	57		 push	 edi
  015a9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 597  : 	this->m_IsRaklionEnable = bEnable;

  015ac	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  015af	8b 4d 08	 mov	 ecx, DWORD PTR _bEnable$[ebp]
  015b2	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 598  : }

  015b5	5f		 pop	 edi
  015b6	5e		 pop	 esi
  015b7	5b		 pop	 ebx
  015b8	8b e5		 mov	 esp, ebp
  015ba	5d		 pop	 ebp
  015bb	c2 04 00	 ret	 4
?SetRaklionEnable@CRaklion@@QAEXH@Z ENDP		; CRaklion::SetRaklionEnable
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?IsRaklionEnable@CRaklion@@QAEHXZ PROC			; CRaklion::IsRaklionEnable
; _this$ = ecx

; 601  : {

  015c0	55		 push	 ebp
  015c1	8b ec		 mov	 ebp, esp
  015c3	83 ec 44	 sub	 esp, 68			; 00000044H
  015c6	53		 push	 ebx
  015c7	56		 push	 esi
  015c8	57		 push	 edi
  015c9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 602  : 	if(g_iUseRaklionEvent != 0 && this->m_IsRaklionEnable != 0)

  015cc	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_iUseRaklionEvent@@3HA, 0 ; g_iUseRaklionEvent
  015d3	74 10		 je	 SHORT $LN1@IsRaklionE
  015d5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  015d8	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  015dc	74 07		 je	 SHORT $LN1@IsRaklionE

; 603  : 	{
; 604  : 		return TRUE;

  015de	b8 01 00 00 00	 mov	 eax, 1
  015e3	eb 02		 jmp	 SHORT $LN2@IsRaklionE
$LN1@IsRaklionE:

; 605  : 	}
; 606  : 
; 607  : 	return FALSE;

  015e5	33 c0		 xor	 eax, eax
$LN2@IsRaklionE:

; 608  : }

  015e7	5f		 pop	 edi
  015e8	5e		 pop	 esi
  015e9	5b		 pop	 ebx
  015ea	8b e5		 mov	 esp, ebp
  015ec	5d		 pop	 ebp
  015ed	c3		 ret	 0
?IsRaklionEnable@CRaklion@@QAEHXZ ENDP			; CRaklion::IsRaklionEnable
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
_iRaklionState$ = 8					; size = 4
?SetRaklionState@CRaklion@@QAEXH@Z PROC			; CRaklion::SetRaklionState
; _this$ = ecx

; 611  : {

  015f0	55		 push	 ebp
  015f1	8b ec		 mov	 ebp, esp
  015f3	83 ec 44	 sub	 esp, 68			; 00000044H
  015f6	53		 push	 ebx
  015f7	56		 push	 esi
  015f8	57		 push	 edi
  015f9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 612  : 	this->m_iRaklionState = iRaklionState;

  015fc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  015ff	8b 4d 08	 mov	 ecx, DWORD PTR _iRaklionState$[ebp]
  01602	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 613  : }

  01605	5f		 pop	 edi
  01606	5e		 pop	 esi
  01607	5b		 pop	 ebx
  01608	8b e5		 mov	 esp, ebp
  0160a	5d		 pop	 ebp
  0160b	c2 04 00	 ret	 4
?SetRaklionState@CRaklion@@QAEXH@Z ENDP			; CRaklion::SetRaklionState
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?GetRaklionState@CRaklion@@QAEHXZ PROC			; CRaklion::GetRaklionState
; _this$ = ecx

; 616  : { 

  01610	55		 push	 ebp
  01611	8b ec		 mov	 ebp, esp
  01613	83 ec 44	 sub	 esp, 68			; 00000044H
  01616	53		 push	 ebx
  01617	56		 push	 esi
  01618	57		 push	 edi
  01619	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 617  : 	return this->m_iRaklionState; 

  0161c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0161f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 618  : }

  01622	5f		 pop	 edi
  01623	5e		 pop	 esi
  01624	5b		 pop	 ebx
  01625	8b e5		 mov	 esp, ebp
  01627	5d		 pop	 ebp
  01628	c3		 ret	 0
?GetRaklionState@CRaklion@@QAEHXZ ENDP			; CRaklion::GetRaklionState
_TEXT	ENDS
PUBLIC	?SetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEXH@Z ; CRaklionBattleOfSelupan::SetBattleOfSelupanState
PUBLIC	?SetRaklionDetailState@CRaklion@@QAEXH@Z	; CRaklion::SetRaklionDetailState
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iState$ = 8						; size = 4
?SetRaklionDetailState@CRaklion@@QAEXH@Z PROC		; CRaklion::SetRaklionDetailState
; _this$ = ecx

; 621  : {

  01630	55		 push	 ebp
  01631	8b ec		 mov	 ebp, esp
  01633	83 ec 44	 sub	 esp, 68			; 00000044H
  01636	53		 push	 ebx
  01637	56		 push	 esi
  01638	57		 push	 edi
  01639	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 622  : 	this->m_RaklionBattleOfSelupan.SetBattleOfSelupanState(iState);

  0163c	8b 45 08	 mov	 eax, DWORD PTR _iState$[ebp]
  0163f	50		 push	 eax
  01640	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01643	83 c1 38	 add	 ecx, 56			; 00000038H
  01646	e8 00 00 00 00	 call	 ?SetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEXH@Z ; CRaklionBattleOfSelupan::SetBattleOfSelupanState

; 623  : }

  0164b	5f		 pop	 edi
  0164c	5e		 pop	 esi
  0164d	5b		 pop	 ebx
  0164e	8b e5		 mov	 esp, ebp
  01650	5d		 pop	 ebp
  01651	c2 04 00	 ret	 4
?SetRaklionDetailState@CRaklion@@QAEXH@Z ENDP		; CRaklion::SetRaklionDetailState
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\raklionbattleofselupan.h
_TEXT	ENDS
;	COMDAT ?SetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m_iBattleOfSelupanState$ = 8				; size = 4
?SetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEXH@Z PROC ; CRaklionBattleOfSelupan::SetBattleOfSelupanState, COMDAT
; _this$ = ecx

; 95   : 	void SetBattleOfSelupanState	(int m_iBattleOfSelupanState)	{			this->m_iBattleOfSelupanState	= m_iBattleOfSelupanState;	}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _m_iBattleOfSelupanState$[ebp]
  00012	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEXH@Z ENDP ; CRaklionBattleOfSelupan::SetBattleOfSelupanState
_TEXT	ENDS
PUBLIC	?GetRaklionDetailState@CRaklion@@QAEHXZ		; CRaklion::GetRaklionDetailState
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\raklion.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRaklionDetailState@CRaklion@@QAEHXZ PROC		; CRaklion::GetRaklionDetailState
; _this$ = ecx

; 626  : {

  01660	55		 push	 ebp
  01661	8b ec		 mov	 ebp, esp
  01663	83 ec 44	 sub	 esp, 68			; 00000044H
  01666	53		 push	 ebx
  01667	56		 push	 esi
  01668	57		 push	 edi
  01669	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 627  : 	return this->m_RaklionBattleOfSelupan.GetBattleOfSelupanState();

  0166c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0166f	83 c1 38	 add	 ecx, 56			; 00000038H
  01672	e8 00 00 00 00	 call	 ?GetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEHXZ ; CRaklionBattleOfSelupan::GetBattleOfSelupanState

; 628  : }

  01677	5f		 pop	 edi
  01678	5e		 pop	 esi
  01679	5b		 pop	 ebx
  0167a	8b e5		 mov	 esp, ebp
  0167c	5d		 pop	 ebp
  0167d	c3		 ret	 0
?GetRaklionDetailState@CRaklion@@QAEHXZ ENDP		; CRaklion::GetRaklionDetailState
_TEXT	ENDS
PUBLIC	??_C@_0CH@JFOLIGOA@?$FLRAKLION?$FN?5BossEggDieCount?5Error?5@ ; `string'
PUBLIC	?BossEggRegen@CRaklion@@QAEXXZ			; CRaklion::BossEggRegen
;	COMDAT ??_C@_0CH@JFOLIGOA@?$FLRAKLION?$FN?5BossEggDieCount?5Error?5@
CONST	SEGMENT
??_C@_0CH@JFOLIGOA@?$FLRAKLION?$FN?5BossEggDieCount?5Error?5@ DB '[RAKLIO'
	DB	'N] BossEggDieCount Error : (%d)', 00H	; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?BossEggRegen@CRaklion@@QAEXXZ PROC			; CRaklion::BossEggRegen
; _this$ = ecx

; 631  : {

  01680	55		 push	 ebp
  01681	8b ec		 mov	 ebp, esp
  01683	83 ec 44	 sub	 esp, 68			; 00000044H
  01686	53		 push	 ebx
  01687	56		 push	 esi
  01688	57		 push	 edi
  01689	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 632  : 	if ( this->m_iBossEggCount >= this->m_iBossEggMax )

  0168c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0168f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01692	8b 90 0c 0e 00
	00		 mov	 edx, DWORD PTR [eax+3596]
  01698	3b 51 34	 cmp	 edx, DWORD PTR [ecx+52]
  0169b	7c 1c		 jl	 SHORT $LN1@BossEggReg

; 633  : 	{
; 634  : 		LogAddC(2, "[RAKLION] BossEggDieCount Error : (%d)",this->m_iBossEggCount);

  0169d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  016a0	8b 88 0c 0e 00
	00		 mov	 ecx, DWORD PTR [eax+3596]
  016a6	51		 push	 ecx
  016a7	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@JFOLIGOA@?$FLRAKLION?$FN?5BossEggDieCount?5Error?5@
  016ac	6a 02		 push	 2
  016ae	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  016b4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 635  : 		return;

  016b7	eb 15		 jmp	 SHORT $LN2@BossEggReg
$LN1@BossEggReg:

; 636  : 	}
; 637  : 
; 638  : 	this->m_iBossEggCount++;

  016b9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  016bc	8b 88 0c 0e 00
	00		 mov	 ecx, DWORD PTR [eax+3596]
  016c2	83 c1 01	 add	 ecx, 1
  016c5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  016c8	89 8a 0c 0e 00
	00		 mov	 DWORD PTR [edx+3596], ecx
$LN2@BossEggReg:

; 639  : }

  016ce	5f		 pop	 edi
  016cf	5e		 pop	 esi
  016d0	5b		 pop	 ebx
  016d1	8b e5		 mov	 esp, ebp
  016d3	5d		 pop	 ebp
  016d4	c3		 ret	 0
?BossEggRegen@CRaklion@@QAEXXZ ENDP			; CRaklion::BossEggRegen
_TEXT	ENDS
PUBLIC	?BossEggDie@CRaklion@@QAEXXZ			; CRaklion::BossEggDie
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?BossEggDie@CRaklion@@QAEXXZ PROC			; CRaklion::BossEggDie
; _this$ = ecx

; 642  : {

  016e0	55		 push	 ebp
  016e1	8b ec		 mov	 ebp, esp
  016e3	83 ec 44	 sub	 esp, 68			; 00000044H
  016e6	53		 push	 ebx
  016e7	56		 push	 esi
  016e8	57		 push	 edi
  016e9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 643  : 	if ( this->m_iBossEggCount <= 0 )

  016ec	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  016ef	83 b8 0c 0e 00
	00 00		 cmp	 DWORD PTR [eax+3596], 0
  016f6	7f 1c		 jg	 SHORT $LN1@BossEggDie

; 644  : 	{
; 645  : 		LogAddC(2, "[RAKLION] BossEggDieCount Error : (%d)",this->m_iBossEggCount);

  016f8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  016fb	8b 88 0c 0e 00
	00		 mov	 ecx, DWORD PTR [eax+3596]
  01701	51		 push	 ecx
  01702	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@JFOLIGOA@?$FLRAKLION?$FN?5BossEggDieCount?5Error?5@
  01707	6a 02		 push	 2
  01709	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  0170f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 646  : 		return;

  01712	eb 15		 jmp	 SHORT $LN2@BossEggDie
$LN1@BossEggDie:

; 647  : 	}
; 648  : 
; 649  : 	this->m_iBossEggCount--;

  01714	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01717	8b 88 0c 0e 00
	00		 mov	 ecx, DWORD PTR [eax+3596]
  0171d	83 e9 01	 sub	 ecx, 1
  01720	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01723	89 8a 0c 0e 00
	00		 mov	 DWORD PTR [edx+3596], ecx
$LN2@BossEggDie:

; 650  : }

  01729	5f		 pop	 edi
  0172a	5e		 pop	 esi
  0172b	5b		 pop	 ebx
  0172c	8b e5		 mov	 esp, ebp
  0172e	5d		 pop	 ebp
  0172f	c3		 ret	 0
?BossEggDie@CRaklion@@QAEXXZ ENDP			; CRaklion::BossEggDie
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?GetBossEggCount@CRaklion@@QAEHXZ PROC			; CRaklion::GetBossEggCount
; _this$ = ecx

; 653  : {

  01730	55		 push	 ebp
  01731	8b ec		 mov	 ebp, esp
  01733	83 ec 44	 sub	 esp, 68			; 00000044H
  01736	53		 push	 ebx
  01737	56		 push	 esi
  01738	57		 push	 edi
  01739	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 654  :   return this->m_iBossEggCount;

  0173c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0173f	8b 80 0c 0e 00
	00		 mov	 eax, DWORD PTR [eax+3596]

; 655  : }

  01745	5f		 pop	 edi
  01746	5e		 pop	 esi
  01747	5b		 pop	 ebx
  01748	8b e5		 mov	 esp, ebp
  0174a	5d		 pop	 ebp
  0174b	c3		 ret	 0
?GetBossEggCount@CRaklion@@QAEHXZ ENDP			; CRaklion::GetBossEggCount
_TEXT	ENDS
PUBLIC	??_C@_0CO@DIEAOLJA@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggRegen?5?$FN?5?3?5B@ ; `string'
EXTRN	?gObjMonsterRegen@@YAHPAUOBJECTSTRUCT@@@Z:PROC	; gObjMonsterRegen
EXTRN	?gObjSetMonster@@YAHHH@Z:PROC			; gObjSetMonster
;	COMDAT ??_C@_0CO@DIEAOLJA@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggRegen?5?$FN?5?3?5B@
CONST	SEGMENT
??_C@_0CO@DIEAOLJA@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggRegen?5?$FN?5?3?5B@ DB '['
	DB	' RAKLION ] [ BossEggRegen ] : BossEgg(%d ea)', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_i$228077 = -8						; size = 4
_this$ = -4						; size = 4
?BossEggRegenAll@CRaklion@@QAEXXZ PROC			; CRaklion::BossEggRegenAll
; _this$ = ecx

; 658  : {

  01750	55		 push	 ebp
  01751	8b ec		 mov	 ebp, esp
  01753	83 ec 48	 sub	 esp, 72			; 00000048H
  01756	53		 push	 ebx
  01757	56		 push	 esi
  01758	57		 push	 edi
  01759	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 659  : 	for ( int i=0;i<OBJ_MAXMONSTER;i++)

  0175c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$228077[ebp], 0
  01763	eb 09		 jmp	 SHORT $LN6@BossEggReg@2
$LN5@BossEggReg@2:
  01765	8b 45 f8	 mov	 eax, DWORD PTR _i$228077[ebp]
  01768	83 c0 01	 add	 eax, 1
  0176b	89 45 f8	 mov	 DWORD PTR _i$228077[ebp], eax
$LN6@BossEggReg@2:
  0176e	81 7d f8 c8 32
	00 00		 cmp	 DWORD PTR _i$228077[ebp], 13000 ; 000032c8H
  01775	0f 8d e8 00 00
	00		 jge	 $LN4@BossEggReg@2

; 660  : 	{
; 661  : 		if (gObj[i].Class == 460 || 
; 662  : 			gObj[i].Class == 461 || 
; 663  : 			gObj[i].Class == 462 )

  0177b	8b 45 f8	 mov	 eax, DWORD PTR _i$228077[ebp]
  0177e	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01784	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0178a	0f b7 94 01 b8
	00 00 00	 movzx	 edx, WORD PTR [ecx+eax+184]
  01792	81 fa cc 01 00
	00		 cmp	 edx, 460		; 000001ccH
  01798	74 42		 je	 SHORT $LN2@BossEggReg@2
  0179a	8b 45 f8	 mov	 eax, DWORD PTR _i$228077[ebp]
  0179d	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  017a3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  017a9	0f b7 94 01 b8
	00 00 00	 movzx	 edx, WORD PTR [ecx+eax+184]
  017b1	81 fa cd 01 00
	00		 cmp	 edx, 461		; 000001cdH
  017b7	74 23		 je	 SHORT $LN2@BossEggReg@2
  017b9	8b 45 f8	 mov	 eax, DWORD PTR _i$228077[ebp]
  017bc	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  017c2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  017c8	0f b7 94 01 b8
	00 00 00	 movzx	 edx, WORD PTR [ecx+eax+184]
  017d0	81 fa ce 01 00
	00		 cmp	 edx, 462		; 000001ceH
  017d6	0f 85 82 00 00
	00		 jne	 $LN3@BossEggReg@2
$LN2@BossEggReg@2:

; 664  : 		{
; 665  : 			gObjSetMonster(gObj[i].m_Index,gObj[i].Class);

  017dc	8b 45 f8	 mov	 eax, DWORD PTR _i$228077[ebp]
  017df	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  017e5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  017eb	0f b7 94 01 b8
	00 00 00	 movzx	 edx, WORD PTR [ecx+eax+184]
  017f3	52		 push	 edx
  017f4	8b 45 f8	 mov	 eax, DWORD PTR _i$228077[ebp]
  017f7	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  017fd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01803	8b 14 01	 mov	 edx, DWORD PTR [ecx+eax]
  01806	52		 push	 edx
  01807	e8 00 00 00 00	 call	 ?gObjSetMonster@@YAHHH@Z ; gObjSetMonster
  0180c	83 c4 08	 add	 esp, 8

; 666  : 
; 667  : 			if (gObjMonsterRegen(&gObj[i]))

  0180f	8b 45 f8	 mov	 eax, DWORD PTR _i$228077[ebp]
  01812	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01818	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0181e	50		 push	 eax
  0181f	e8 00 00 00 00	 call	 ?gObjMonsterRegen@@YAHPAUOBJECTSTRUCT@@@Z ; gObjMonsterRegen
  01824	83 c4 04	 add	 esp, 4
  01827	85 c0		 test	 eax, eax
  01829	74 33		 je	 SHORT $LN3@BossEggReg@2

; 668  : 			{
; 669  : 				gObj[i].Live = TRUE;

  0182b	8b 45 f8	 mov	 eax, DWORD PTR _i$228077[ebp]
  0182e	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01834	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0183a	c6 44 01 6a 01	 mov	 BYTE PTR [ecx+eax+106], 1

; 670  : 				gObj[i].DieRegen = FALSE;

  0183f	8b 45 f8	 mov	 eax, DWORD PTR _i$228077[ebp]
  01842	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01848	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0184e	c6 84 01 a2 03
	00 00 00	 mov	 BYTE PTR [ecx+eax+930], 0

; 671  : 				this->BossEggRegen();

  01856	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01859	e8 00 00 00 00	 call	 ?BossEggRegen@CRaklion@@QAEXXZ ; CRaklion::BossEggRegen
$LN3@BossEggReg@2:

; 672  : 			}
; 673  : 		}
; 674  : 	}

  0185e	e9 02 ff ff ff	 jmp	 $LN5@BossEggReg@2
$LN4@BossEggReg@2:

; 675  : 
; 676  : 	LogAddC(5, "[ RAKLION ] [ BossEggRegen ] : BossEgg(%d ea)",this->GetBossEggCount());

  01863	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01866	e8 00 00 00 00	 call	 ?GetBossEggCount@CRaklion@@QAEHXZ ; CRaklion::GetBossEggCount
  0186b	50		 push	 eax
  0186c	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@DIEAOLJA@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggRegen?5?$FN?5?3?5B@
  01871	6a 05		 push	 5
  01873	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  01879	83 c4 0c	 add	 esp, 12			; 0000000cH

; 677  : }

  0187c	5f		 pop	 edi
  0187d	5e		 pop	 esi
  0187e	5b		 pop	 ebx
  0187f	8b e5		 mov	 esp, ebp
  01881	5d		 pop	 ebp
  01882	c3		 ret	 0
?BossEggRegenAll@CRaklion@@QAEXXZ ENDP			; CRaklion::BossEggRegenAll
_TEXT	ENDS
PUBLIC	??_C@_0CP@ONAPBMEC@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggDelete?5?$FN?5?3?5@ ; `string'
PUBLIC	?BossEggDeleteAll@CRaklion@@QAEXXZ		; CRaklion::BossEggDeleteAll
EXTRN	?gObjViewportClose@@YAXPAUOBJECTSTRUCT@@@Z:PROC	; gObjViewportClose
EXTRN	?gObjViewportListProtocolDestroy@@YAXPAUOBJECTSTRUCT@@@Z:PROC ; gObjViewportListProtocolDestroy
EXTRN	?gObjDel@@YAFH@Z:PROC				; gObjDel
;	COMDAT ??_C@_0CP@ONAPBMEC@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggDelete?5?$FN?5?3?5@
CONST	SEGMENT
??_C@_0CP@ONAPBMEC@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggDelete?5?$FN?5?3?5@ DB '['
	DB	' RAKLION ] [ BossEggDelete ] : BossEgg(%d ea)', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_i$228088 = -8						; size = 4
_this$ = -4						; size = 4
?BossEggDeleteAll@CRaklion@@QAEXXZ PROC			; CRaklion::BossEggDeleteAll
; _this$ = ecx

; 680  : {

  01890	55		 push	 ebp
  01891	8b ec		 mov	 ebp, esp
  01893	83 ec 48	 sub	 esp, 72			; 00000048H
  01896	53		 push	 ebx
  01897	56		 push	 esi
  01898	57		 push	 edi
  01899	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 681  : 	for ( int i=0;i<OBJ_MAXMONSTER;i++)

  0189c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$228088[ebp], 0
  018a3	eb 09		 jmp	 SHORT $LN5@BossEggDel
$LN4@BossEggDel:
  018a5	8b 45 f8	 mov	 eax, DWORD PTR _i$228088[ebp]
  018a8	83 c0 01	 add	 eax, 1
  018ab	89 45 f8	 mov	 DWORD PTR _i$228088[ebp], eax
$LN5@BossEggDel:
  018ae	81 7d f8 c8 32
	00 00		 cmp	 DWORD PTR _i$228088[ebp], 13000 ; 000032c8H
  018b5	0f 8d d4 00 00
	00		 jge	 $LN3@BossEggDel

; 682  : 	{
; 683  : 		if (gObj[i].Class == 460 || 
; 684  : 			gObj[i].Class == 461 || 
; 685  : 			gObj[i].Class == 462 )

  018bb	8b 45 f8	 mov	 eax, DWORD PTR _i$228088[ebp]
  018be	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  018c4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  018ca	0f b7 94 01 b8
	00 00 00	 movzx	 edx, WORD PTR [ecx+eax+184]
  018d2	81 fa cc 01 00
	00		 cmp	 edx, 460		; 000001ccH
  018d8	74 3e		 je	 SHORT $LN1@BossEggDel
  018da	8b 45 f8	 mov	 eax, DWORD PTR _i$228088[ebp]
  018dd	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  018e3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  018e9	0f b7 94 01 b8
	00 00 00	 movzx	 edx, WORD PTR [ecx+eax+184]
  018f1	81 fa cd 01 00
	00		 cmp	 edx, 461		; 000001cdH
  018f7	74 1f		 je	 SHORT $LN1@BossEggDel
  018f9	8b 45 f8	 mov	 eax, DWORD PTR _i$228088[ebp]
  018fc	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01902	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01908	0f b7 94 01 b8
	00 00 00	 movzx	 edx, WORD PTR [ecx+eax+184]
  01910	81 fa ce 01 00
	00		 cmp	 edx, 462		; 000001ceH
  01916	75 72		 jne	 SHORT $LN2@BossEggDel
$LN1@BossEggDel:

; 686  : 		{
; 687  : 			gObjDel(i);

  01918	8b 45 f8	 mov	 eax, DWORD PTR _i$228088[ebp]
  0191b	50		 push	 eax
  0191c	e8 00 00 00 00	 call	 ?gObjDel@@YAFH@Z	; gObjDel
  01921	83 c4 04	 add	 esp, 4

; 688  : 			gObj[i].Live = 0;

  01924	8b 45 f8	 mov	 eax, DWORD PTR _i$228088[ebp]
  01927	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0192d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01933	c6 44 01 6a 00	 mov	 BYTE PTR [ecx+eax+106], 0

; 689  : 			gObj[i].m_State = 0;

  01938	8b 45 f8	 mov	 eax, DWORD PTR _i$228088[ebp]
  0193b	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01941	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01947	c7 84 01 20 02
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+544], 0

; 690  : 			gObjViewportListProtocolDestroy(&gObj[i]);

  01952	8b 45 f8	 mov	 eax, DWORD PTR _i$228088[ebp]
  01955	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0195b	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01961	50		 push	 eax
  01962	e8 00 00 00 00	 call	 ?gObjViewportListProtocolDestroy@@YAXPAUOBJECTSTRUCT@@@Z ; gObjViewportListProtocolDestroy
  01967	83 c4 04	 add	 esp, 4

; 691  : 			gObjViewportClose(&gObj[i]);

  0196a	8b 45 f8	 mov	 eax, DWORD PTR _i$228088[ebp]
  0196d	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01973	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01979	50		 push	 eax
  0197a	e8 00 00 00 00	 call	 ?gObjViewportClose@@YAXPAUOBJECTSTRUCT@@@Z ; gObjViewportClose
  0197f	83 c4 04	 add	 esp, 4

; 692  : 			this->BossEggDie();

  01982	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01985	e8 00 00 00 00	 call	 ?BossEggDie@CRaklion@@QAEXXZ ; CRaklion::BossEggDie
$LN2@BossEggDel:

; 693  : 		}
; 694  : 	}

  0198a	e9 16 ff ff ff	 jmp	 $LN4@BossEggDel
$LN3@BossEggDel:

; 695  : 
; 696  : 	LogAddC(5, "[ RAKLION ] [ BossEggDelete ] : BossEgg(%d ea)",this->GetBossEggCount());

  0198f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01992	e8 00 00 00 00	 call	 ?GetBossEggCount@CRaklion@@QAEHXZ ; CRaklion::GetBossEggCount
  01997	50		 push	 eax
  01998	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@ONAPBMEC@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggDelete?5?$FN?5?3?5@
  0199d	6a 05		 push	 5
  0199f	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  019a5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 697  : }

  019a8	5f		 pop	 edi
  019a9	5e		 pop	 esi
  019aa	5b		 pop	 ebx
  019ab	8b e5		 mov	 esp, ebp
  019ad	5d		 pop	 ebp
  019ae	c3		 ret	 0
?BossEggDeleteAll@CRaklion@@QAEXXZ ENDP			; CRaklion::BossEggDeleteAll
_TEXT	ENDS
PUBLIC	??_C@_0EC@EFHAIMOM@?$FL?5RAKLION?5?$FN?$FL?5Invalid?5User?5?$FN?5Inva@ ; `string'
EXTRN	?gObjMoveGate@@YAHHH@Z:PROC			; gObjMoveGate
EXTRN	?IsBattleUser@CRaklionBattleUserMng@@QAEHH@Z:PROC ; CRaklionBattleUserMng::IsBattleUser
;	COMDAT ??_C@_0EC@EFHAIMOM@?$FL?5RAKLION?5?$FN?$FL?5Invalid?5User?5?$FN?5Inva@
CONST	SEGMENT
??_C@_0EC@EFHAIMOM@?$FL?5RAKLION?5?$FN?$FL?5Invalid?5User?5?$FN?5Inva@ DB '['
	DB	' RAKLION ][ Invalid User ] Invalid Raklion Boss Map User[%s]['
	DB	'%s]', 00H					; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_iCount$228098 = -8					; size = 4
_this$ = -4						; size = 4
?CheckUserOnRaklionBossMap@CRaklion@@QAEXXZ PROC	; CRaklion::CheckUserOnRaklionBossMap
; _this$ = ecx

; 700  : {

  019b0	55		 push	 ebp
  019b1	8b ec		 mov	 ebp, esp
  019b3	83 ec 48	 sub	 esp, 72			; 00000048H
  019b6	53		 push	 ebx
  019b7	56		 push	 esi
  019b8	57		 push	 edi
  019b9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 701  : 	for ( int iCount=OBJ_STARTUSERINDEX;iCount<OBJMAX;iCount++)

  019bc	c7 45 f8 b0 36
	00 00		 mov	 DWORD PTR _iCount$228098[ebp], 14000 ; 000036b0H
  019c3	eb 09		 jmp	 SHORT $LN7@CheckUserO
$LN6@CheckUserO:
  019c5	8b 45 f8	 mov	 eax, DWORD PTR _iCount$228098[ebp]
  019c8	83 c0 01	 add	 eax, 1
  019cb	89 45 f8	 mov	 DWORD PTR _iCount$228098[ebp], eax
$LN7@CheckUserO:
  019ce	81 7d f8 98 3a
	00 00		 cmp	 DWORD PTR _iCount$228098[ebp], 15000 ; 00003a98H
  019d5	0f 8d 28 01 00
	00		 jge	 $LN8@CheckUserO

; 702  : 	{
; 703  : 		if ( gObj[iCount].Connected == PLAYER_PLAYING &&
; 704  : 			 gObj[iCount].Type == OBJ_USER &&
; 705  : 			 gObj[iCount].MapNumber == MAP_INDEX_RAKLION_BOSS)

  019db	8b 45 f8	 mov	 eax, DWORD PTR _iCount$228098[ebp]
  019de	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  019e4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  019ea	83 7c 01 04 03	 cmp	 DWORD PTR [ecx+eax+4], 3
  019ef	0f 85 09 01 00
	00		 jne	 $LN4@CheckUserO
  019f5	8b 45 f8	 mov	 eax, DWORD PTR _iCount$228098[ebp]
  019f8	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  019fe	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01a04	0f b7 54 01 68	 movzx	 edx, WORD PTR [ecx+eax+104]
  01a09	83 fa 01	 cmp	 edx, 1
  01a0c	0f 85 ec 00 00
	00		 jne	 $LN4@CheckUserO
  01a12	8b 45 f8	 mov	 eax, DWORD PTR _iCount$228098[ebp]
  01a15	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01a1b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01a21	0f b6 94 01 49
	01 00 00	 movzx	 edx, BYTE PTR [ecx+eax+329]
  01a29	83 fa 3a	 cmp	 edx, 58			; 0000003aH
  01a2c	0f 85 cc 00 00
	00		 jne	 $LN4@CheckUserO

; 706  : 		{
; 707  : 			if ( (gObj[iCount].Authority&2) != 2 )

  01a32	8b 45 f8	 mov	 eax, DWORD PTR _iCount$228098[ebp]
  01a35	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01a3b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01a41	8b 94 01 0c 02
	00 00		 mov	 edx, DWORD PTR [ecx+eax+524]
  01a48	83 e2 02	 and	 edx, 2
  01a4b	0f 85 ad 00 00
	00		 jne	 $LN4@CheckUserO

; 708  : 			{
; 709  : 				if (g_RaklionBattleUserMng.IsBattleUser(iCount) != 0)

  01a51	8b 45 f8	 mov	 eax, DWORD PTR _iCount$228098[ebp]
  01a54	50		 push	 eax
  01a55	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_RaklionBattleUserMng@@3VCRaklionBattleUserMng@@A ; g_RaklionBattleUserMng
  01a5a	e8 00 00 00 00	 call	 ?IsBattleUser@CRaklionBattleUserMng@@QAEHH@Z ; CRaklionBattleUserMng::IsBattleUser
  01a5f	85 c0		 test	 eax, eax
  01a61	74 05		 je	 SHORT $LN2@CheckUserO

; 710  : 				{
; 711  : 					continue;

  01a63	e9 5d ff ff ff	 jmp	 $LN6@CheckUserO
$LN2@CheckUserO:

; 712  : 				}
; 713  : 
; 714  : 				if (gObj[iCount].RegenOk == 0 &&
; 715  : 					gObj[iCount].m_State == 2 &&
; 716  : 					gObj[iCount].Live == TRUE)

  01a68	8b 45 f8	 mov	 eax, DWORD PTR _iCount$228098[ebp]
  01a6b	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01a71	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01a77	0f be 94 01 a3
	03 00 00	 movsx	 edx, BYTE PTR [ecx+eax+931]
  01a7f	85 d2		 test	 edx, edx
  01a81	75 7b		 jne	 SHORT $LN4@CheckUserO
  01a83	8b 45 f8	 mov	 eax, DWORD PTR _iCount$228098[ebp]
  01a86	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01a8c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01a92	83 bc 01 20 02
	00 00 02	 cmp	 DWORD PTR [ecx+eax+544], 2
  01a9a	75 62		 jne	 SHORT $LN4@CheckUserO
  01a9c	8b 45 f8	 mov	 eax, DWORD PTR _iCount$228098[ebp]
  01a9f	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01aa5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01aab	0f b6 54 01 6a	 movzx	 edx, BYTE PTR [ecx+eax+106]
  01ab0	83 fa 01	 cmp	 edx, 1
  01ab3	75 49		 jne	 SHORT $LN4@CheckUserO

; 717  : 				{
; 718  : 					gObjMoveGate(iCount, 286);

  01ab5	68 1e 01 00 00	 push	 286			; 0000011eH
  01aba	8b 45 f8	 mov	 eax, DWORD PTR _iCount$228098[ebp]
  01abd	50		 push	 eax
  01abe	e8 00 00 00 00	 call	 ?gObjMoveGate@@YAHHH@Z	; gObjMoveGate
  01ac3	83 c4 08	 add	 esp, 8

; 719  : 					LogAddC(2, "[ RAKLION ][ Invalid User ] Invalid Raklion Boss Map User[%s][%s]",
; 720  : 						gObj[iCount].AccountID, gObj[iCount].Name);

  01ac6	8b 45 f8	 mov	 eax, DWORD PTR _iCount$228098[ebp]
  01ac9	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01acf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01ad5	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  01ad9	52		 push	 edx
  01ada	8b 45 f8	 mov	 eax, DWORD PTR _iCount$228098[ebp]
  01add	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01ae3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01ae9	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  01aed	52		 push	 edx
  01aee	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@EFHAIMOM@?$FL?5RAKLION?5?$FN?$FL?5Invalid?5User?5?$FN?5Inva@
  01af3	6a 02		 push	 2
  01af5	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  01afb	83 c4 10	 add	 esp, 16			; 00000010H
$LN4@CheckUserO:

; 721  : 				}
; 722  : 			}	
; 723  : 		}
; 724  : 	}

  01afe	e9 c2 fe ff ff	 jmp	 $LN6@CheckUserO
$LN8@CheckUserO:

; 725  : }

  01b03	5f		 pop	 edi
  01b04	5e		 pop	 esi
  01b05	5b		 pop	 ebx
  01b06	8b e5		 mov	 esp, ebp
  01b08	5d		 pop	 ebp
  01b09	c3		 ret	 0
?CheckUserOnRaklionBossMap@CRaklion@@QAEXXZ ENDP	; CRaklion::CheckUserOnRaklionBossMap
_TEXT	ENDS
PUBLIC	??_C@_0EH@LPEAFAOG@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Inv@ ; `string'
PUBLIC	??_C@_0DA@EGAAKPKD@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5?$FL?$CFs@ ; `string'
PUBLIC	?CheckEnterRaklion@CRaklion@@QAEHH@Z		; CRaklion::CheckEnterRaklion
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
;	COMDAT ??_C@_0EH@LPEAFAOG@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Inv@
CONST	SEGMENT
??_C@_0EH@LPEAFAOG@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Inv@ DB '['
	DB	' RAKLION ][ Entrance Fail ] Invalid Map Number(%d) [%s][%s] S'
	DB	'tate(%d)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@EGAAKPKD@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5?$FL?$CFs@
CONST	SEGMENT
??_C@_0DA@EGAAKPKD@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5?$FL?$CFs@ DB '['
	DB	' RAKLION ][ Entrance Fail ] [%s][%s] State(%d)', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iUserIndex$ = 8					; size = 4
?CheckEnterRaklion@CRaklion@@QAEHH@Z PROC		; CRaklion::CheckEnterRaklion
; _this$ = ecx

; 728  : {

  01b10	55		 push	 ebp
  01b11	8b ec		 mov	 ebp, esp
  01b13	83 ec 44	 sub	 esp, 68			; 00000044H
  01b16	53		 push	 ebx
  01b17	56		 push	 esi
  01b18	57		 push	 edi
  01b19	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 729  : 	if ( !gObjIsConnected(iUserIndex) )

  01b1c	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  01b1f	50		 push	 eax
  01b20	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  01b25	83 c4 04	 add	 esp, 4
  01b28	85 c0		 test	 eax, eax
  01b2a	75 08		 jne	 SHORT $LN3@CheckEnter

; 730  : 		return -1;

  01b2c	83 c8 ff	 or	 eax, -1
  01b2f	e9 cf 00 00 00	 jmp	 $LN4@CheckEnter
$LN3@CheckEnter:

; 731  : 
; 732  : 	if( this->GetRaklionState() == RAKLION_STATE_CLOSE_DOOR )

  01b34	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01b37	e8 00 00 00 00	 call	 ?GetRaklionState@CRaklion@@QAEHXZ ; CRaklion::GetRaklionState
  01b3c	83 f8 07	 cmp	 eax, 7
  01b3f	75 46		 jne	 SHORT $LN2@CheckEnter

; 733  : 	{
; 734  : 		LogAddTD("[ RAKLION ][ Entrance Fail ] [%s][%s] State(%d)",
; 735  : 			gObj[iUserIndex].AccountID, gObj[iUserIndex].Name,this->GetRaklionState());

  01b41	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01b44	e8 00 00 00 00	 call	 ?GetRaklionState@CRaklion@@QAEHXZ ; CRaklion::GetRaklionState
  01b49	50		 push	 eax
  01b4a	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  01b4d	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01b53	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01b59	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  01b5d	52		 push	 edx
  01b5e	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  01b61	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01b67	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01b6d	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  01b71	52		 push	 edx
  01b72	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@EGAAKPKD@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5?$FL?$CFs@
  01b77	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  01b7d	83 c4 10	 add	 esp, 16			; 00000010H

; 736  : 		
; 737  : 		return 3;

  01b80	b8 03 00 00 00	 mov	 eax, 3
  01b85	eb 7c		 jmp	 SHORT $LN4@CheckEnter
$LN2@CheckEnter:

; 738  : 	}
; 739  : 
; 740  : 	if ( gObj[iUserIndex].MapNumber != MAP_INDEX_RAKLION_BOSS ) 

  01b87	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  01b8a	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01b90	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01b96	0f b6 94 01 49
	01 00 00	 movzx	 edx, BYTE PTR [ecx+eax+329]
  01b9e	83 fa 3a	 cmp	 edx, 58			; 0000003aH
  01ba1	74 5e		 je	 SHORT $LN1@CheckEnter

; 741  : 	{
; 742  : 		LogAddTD("[ RAKLION ][ Entrance Fail ] Invalid Map Number(%d) [%s][%s] State(%d)",
; 743  : 			gObj[iUserIndex].MapNumber, gObj[iUserIndex].AccountID, gObj[iUserIndex].Name,this->GetRaklionState());

  01ba3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01ba6	e8 00 00 00 00	 call	 ?GetRaklionState@CRaklion@@QAEHXZ ; CRaklion::GetRaklionState
  01bab	50		 push	 eax
  01bac	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  01baf	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01bb5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01bbb	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  01bbf	52		 push	 edx
  01bc0	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  01bc3	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01bc9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01bcf	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  01bd3	52		 push	 edx
  01bd4	8b 45 08	 mov	 eax, DWORD PTR _iUserIndex$[ebp]
  01bd7	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01bdd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01be3	0f b6 94 01 49
	01 00 00	 movzx	 edx, BYTE PTR [ecx+eax+329]
  01beb	52		 push	 edx
  01bec	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@LPEAFAOG@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Inv@
  01bf1	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  01bf7	83 c4 14	 add	 esp, 20			; 00000014H

; 744  : 
; 745  : 		return 4;

  01bfa	b8 04 00 00 00	 mov	 eax, 4
  01bff	eb 02		 jmp	 SHORT $LN4@CheckEnter
$LN1@CheckEnter:

; 746  : 	}
; 747  : 	
; 748  : 	return 0;

  01c01	33 c0		 xor	 eax, eax
$LN4@CheckEnter:

; 749  : }

  01c03	5f		 pop	 edi
  01c04	5e		 pop	 esi
  01c05	5b		 pop	 ebx
  01c06	8b e5		 mov	 esp, ebp
  01c08	5d		 pop	 ebp
  01c09	c2 04 00	 ret	 4
?CheckEnterRaklion@CRaklion@@QAEHH@Z ENDP		; CRaklion::CheckEnterRaklion
_TEXT	ENDS
PUBLIC	?OperateGmCommand@CRaklion@@QAEXHH@Z		; CRaklion::OperateGmCommand
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iUserIndex$ = 8					; size = 4
_iCommand$ = 12						; size = 4
?OperateGmCommand@CRaklion@@QAEXHH@Z PROC		; CRaklion::OperateGmCommand
; _this$ = ecx

; 752  : {

  01c10	55		 push	 ebp
  01c11	8b ec		 mov	 ebp, esp
  01c13	83 ec 44	 sub	 esp, 68			; 00000044H
  01c16	53		 push	 ebx
  01c17	56		 push	 esi
  01c18	57		 push	 edi
  01c19	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 753  : 	return;
; 754  : 	//
; 755  : }

  01c1c	5f		 pop	 edi
  01c1d	5e		 pop	 esi
  01c1e	5b		 pop	 ebx
  01c1f	8b e5		 mov	 esp, ebp
  01c21	5d		 pop	 ebp
  01c22	c2 08 00	 ret	 8
?OperateGmCommand@CRaklion@@QAEXHH@Z ENDP		; CRaklion::OperateGmCommand
_TEXT	ENDS
PUBLIC	??_C@_0JF@CDLCDPNJ@?$FL?5RAKLION?5?$FN?$FL?5Debug?5?$FN?54?4?5Monster?5@ ; `string'
PUBLIC	??_C@_0DD@ILEPBAOH@?$FL?5RAKLION?5?$FN?$FL?5Debug?5?$FN?52?4?5All?5User@ ; `string'
PUBLIC	?UserMonsterCountCheck@CRaklion@@QAEXXZ		; CRaklion::UserMonsterCountCheck
EXTRN	?Output@CLogToFile@@QAAXPADZZ:PROC		; CLogToFile::Output
;	COMDAT ??_C@_0JF@CDLCDPNJ@?$FL?5RAKLION?5?$FN?$FL?5Debug?5?$FN?54?4?5Monster?5@
CONST	SEGMENT
??_C@_0JF@CDLCDPNJ@?$FL?5RAKLION?5?$FN?$FL?5Debug?5?$FN?54?4?5Monster?5@ DB '['
	DB	' RAKLION ][ Debug ] 4. Monster Info %s(%d/ObjIndex:%d) [%d]%d'
	DB	'-%d HP:%0.1f IsAlive:%d Connected:%d State:%d ActState:Attack'
	DB	'(%d)/Move(%d) DieRegen:%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@ILEPBAOH@?$FL?5RAKLION?5?$FN?$FL?5Debug?5?$FN?52?4?5All?5User@
CONST	SEGMENT
??_C@_0DD@ILEPBAOH@?$FL?5RAKLION?5?$FN?$FL?5Debug?5?$FN?52?4?5All?5User@ DB '['
	DB	' RAKLION ][ Debug ] 2. All User Check:%d/(Die:%d)', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_iAllMonsterCount$228167 = -24				; size = 4
_iMonsterCount$ = -20					; size = 4
_iAllUserCount$228158 = -16				; size = 4
_iUserCount_Die$ = -12					; size = 4
_iUserCount_Live$ = -8					; size = 4
_this$ = -4						; size = 4
?UserMonsterCountCheck@CRaklion@@QAEXXZ PROC		; CRaklion::UserMonsterCountCheck
; _this$ = ecx

; 761  : {

  01c30	55		 push	 ebp
  01c31	8b ec		 mov	 ebp, esp
  01c33	83 ec 58	 sub	 esp, 88			; 00000058H
  01c36	53		 push	 ebx
  01c37	56		 push	 esi
  01c38	57		 push	 edi
  01c39	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 762  : 	int iUserCount_Live = 0;

  01c3c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iUserCount_Live$[ebp], 0

; 763  : 	int iUserCount_Die = 0;

  01c43	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _iUserCount_Die$[ebp], 0

; 764  : 
; 765  : 	for ( int iAllUserCount=OBJ_STARTUSERINDEX;iAllUserCount<OBJMAX;iAllUserCount++)

  01c4a	c7 45 f0 b0 36
	00 00		 mov	 DWORD PTR _iAllUserCount$228158[ebp], 14000 ; 000036b0H
  01c51	eb 09		 jmp	 SHORT $LN11@UserMonste
$LN10@UserMonste:
  01c53	8b 45 f0	 mov	 eax, DWORD PTR _iAllUserCount$228158[ebp]
  01c56	83 c0 01	 add	 eax, 1
  01c59	89 45 f0	 mov	 DWORD PTR _iAllUserCount$228158[ebp], eax
$LN11@UserMonste:
  01c5c	81 7d f0 98 3a
	00 00		 cmp	 DWORD PTR _iAllUserCount$228158[ebp], 15000 ; 00003a98H
  01c63	0f 8d 82 00 00
	00		 jge	 $LN9@UserMonste

; 766  : 	{
; 767  : 		if ( gObj[iAllUserCount].MapNumber == MAP_INDEX_RAKLION_BOSS &&
; 768  : 			 gObj[iAllUserCount].Type == OBJ_USER &&
; 769  : 			 (gObj[iAllUserCount].Authority&2) != 2 )

  01c69	8b 45 f0	 mov	 eax, DWORD PTR _iAllUserCount$228158[ebp]
  01c6c	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01c72	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01c78	0f b6 94 01 49
	01 00 00	 movzx	 edx, BYTE PTR [ecx+eax+329]
  01c80	83 fa 3a	 cmp	 edx, 58			; 0000003aH
  01c83	75 61		 jne	 SHORT $LN6@UserMonste
  01c85	8b 45 f0	 mov	 eax, DWORD PTR _iAllUserCount$228158[ebp]
  01c88	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01c8e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01c94	0f b7 54 01 68	 movzx	 edx, WORD PTR [ecx+eax+104]
  01c99	83 fa 01	 cmp	 edx, 1
  01c9c	75 48		 jne	 SHORT $LN6@UserMonste
  01c9e	8b 45 f0	 mov	 eax, DWORD PTR _iAllUserCount$228158[ebp]
  01ca1	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01ca7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01cad	8b 94 01 0c 02
	00 00		 mov	 edx, DWORD PTR [ecx+eax+524]
  01cb4	83 e2 02	 and	 edx, 2
  01cb7	75 2d		 jne	 SHORT $LN6@UserMonste

; 770  : 		{
; 771  : 			if ( gObj[iAllUserCount].Live == TRUE )

  01cb9	8b 45 f0	 mov	 eax, DWORD PTR _iAllUserCount$228158[ebp]
  01cbc	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01cc2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01cc8	0f b6 54 01 6a	 movzx	 edx, BYTE PTR [ecx+eax+106]
  01ccd	83 fa 01	 cmp	 edx, 1
  01cd0	75 0b		 jne	 SHORT $LN7@UserMonste

; 772  : 			{
; 773  : 				iUserCount_Live++;

  01cd2	8b 45 f8	 mov	 eax, DWORD PTR _iUserCount_Live$[ebp]
  01cd5	83 c0 01	 add	 eax, 1
  01cd8	89 45 f8	 mov	 DWORD PTR _iUserCount_Live$[ebp], eax

; 774  : 			}
; 775  : 			else

  01cdb	eb 09		 jmp	 SHORT $LN6@UserMonste
$LN7@UserMonste:

; 776  : 			{
; 777  : 				iUserCount_Die++;

  01cdd	8b 45 f4	 mov	 eax, DWORD PTR _iUserCount_Die$[ebp]
  01ce0	83 c0 01	 add	 eax, 1
  01ce3	89 45 f4	 mov	 DWORD PTR _iUserCount_Die$[ebp], eax
$LN6@UserMonste:

; 778  : 			}
; 779  : 		}
; 780  : 	}

  01ce6	e9 68 ff ff ff	 jmp	 $LN10@UserMonste
$LN9@UserMonste:

; 781  : 
; 782  : 	RAKLION_TEST_LOG.Output("[ RAKLION ][ Debug ] 2. All User Check:%d/(Die:%d)", iUserCount_Live, iUserCount_Die);

  01ceb	8b 45 f4	 mov	 eax, DWORD PTR _iUserCount_Die$[ebp]
  01cee	50		 push	 eax
  01cef	8b 4d f8	 mov	 ecx, DWORD PTR _iUserCount_Live$[ebp]
  01cf2	51		 push	 ecx
  01cf3	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@ILEPBAOH@?$FL?5RAKLION?5?$FN?$FL?5Debug?5?$FN?52?4?5All?5User@
  01cf8	68 00 00 00 00	 push	 OFFSET ?RAKLION_TEST_LOG@@3VCLogToFile@@A ; RAKLION_TEST_LOG
  01cfd	e8 00 00 00 00	 call	 ?Output@CLogToFile@@QAAXPADZZ ; CLogToFile::Output
  01d02	83 c4 10	 add	 esp, 16			; 00000010H

; 783  : 
; 784  : 	int iMonsterCount=0;

  01d05	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _iMonsterCount$[ebp], 0

; 785  : 
; 786  : 	for ( int iAllMonsterCount=0;iAllMonsterCount<OBJ_STARTUSERINDEX;iAllMonsterCount++)

  01d0c	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _iAllMonsterCount$228167[ebp], 0
  01d13	eb 09		 jmp	 SHORT $LN5@UserMonste
$LN4@UserMonste:
  01d15	8b 45 e8	 mov	 eax, DWORD PTR _iAllMonsterCount$228167[ebp]
  01d18	83 c0 01	 add	 eax, 1
  01d1b	89 45 e8	 mov	 DWORD PTR _iAllMonsterCount$228167[ebp], eax
$LN5@UserMonste:
  01d1e	81 7d e8 b0 36
	00 00		 cmp	 DWORD PTR _iAllMonsterCount$228167[ebp], 14000 ; 000036b0H
  01d25	0f 8d c8 01 00
	00		 jge	 $LN3@UserMonste

; 787  : 	{
; 788  : 		if ( gObj[iAllMonsterCount].MapNumber == MAP_INDEX_RAKLION_BOSS &&
; 789  : 			 gObj[iAllMonsterCount].Connected == PLAYER_PLAYING &&
; 790  : 			 gObj[iAllMonsterCount].Type == OBJ_MONSTER )

  01d2b	8b 45 e8	 mov	 eax, DWORD PTR _iAllMonsterCount$228167[ebp]
  01d2e	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01d34	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01d3a	0f b6 94 01 49
	01 00 00	 movzx	 edx, BYTE PTR [ecx+eax+329]
  01d42	83 fa 3a	 cmp	 edx, 58			; 0000003aH
  01d45	0f 85 a3 01 00
	00		 jne	 $LN1@UserMonste
  01d4b	8b 45 e8	 mov	 eax, DWORD PTR _iAllMonsterCount$228167[ebp]
  01d4e	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01d54	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01d5a	83 7c 01 04 03	 cmp	 DWORD PTR [ecx+eax+4], 3
  01d5f	0f 85 89 01 00
	00		 jne	 $LN1@UserMonste
  01d65	8b 45 e8	 mov	 eax, DWORD PTR _iAllMonsterCount$228167[ebp]
  01d68	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01d6e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01d74	0f b7 54 01 68	 movzx	 edx, WORD PTR [ecx+eax+104]
  01d79	83 fa 02	 cmp	 edx, 2
  01d7c	0f 85 6c 01 00
	00		 jne	 $LN1@UserMonste

; 791  : 		{
; 792  : 			if ( gObj[iAllMonsterCount].Class != 459 )

  01d82	8b 45 e8	 mov	 eax, DWORD PTR _iAllMonsterCount$228167[ebp]
  01d85	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01d8b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01d91	0f b7 94 01 b8
	00 00 00	 movzx	 edx, WORD PTR [ecx+eax+184]
  01d99	81 fa cb 01 00
	00		 cmp	 edx, 459		; 000001cbH
  01d9f	0f 84 49 01 00
	00		 je	 $LN1@UserMonste

; 793  : 			{
; 794  : 				iMonsterCount++;

  01da5	8b 45 ec	 mov	 eax, DWORD PTR _iMonsterCount$[ebp]
  01da8	83 c0 01	 add	 eax, 1
  01dab	89 45 ec	 mov	 DWORD PTR _iMonsterCount$[ebp], eax

; 795  : 
; 796  : 				RAKLION_TEST_LOG.Output("[ RAKLION ][ Debug ] 4. Monster Info %s(%d/ObjIndex:%d) [%d]%d-%d HP:%0.1f IsAlive:%d Connected:%d State:%d ActState:Attack(%d)/Move(%d) DieRegen:%d",
; 797  : 					gObj[iAllMonsterCount].Name, gObj[iAllMonsterCount].Class,
; 798  : 					gObj[iAllMonsterCount].m_Index, gObj[iAllMonsterCount].MapNumber,
; 799  : 					gObj[iAllMonsterCount].X, gObj[iAllMonsterCount].Y,
; 800  : 					gObj[iAllMonsterCount].Life, gObj[iAllMonsterCount].Live,
; 801  : 					gObj[iAllMonsterCount].Connected, gObj[iAllMonsterCount].m_State,
; 802  : 					gObj[iAllMonsterCount].m_ActState.Attack, gObj[iAllMonsterCount].m_ActState.Move,
; 803  : 					gObj[iAllMonsterCount].DieRegen);

  01dae	8b 45 e8	 mov	 eax, DWORD PTR _iAllMonsterCount$228167[ebp]
  01db1	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01db7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01dbd	0f be 94 01 a2
	03 00 00	 movsx	 edx, BYTE PTR [ecx+eax+930]
  01dc5	52		 push	 edx
  01dc6	8b 45 e8	 mov	 eax, DWORD PTR _iAllMonsterCount$228167[ebp]
  01dc9	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01dcf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01dd5	8b 94 01 18 02
	00 00		 mov	 edx, DWORD PTR [ecx+eax+536]
  01ddc	c1 ea 02	 shr	 edx, 2
  01ddf	83 e2 01	 and	 edx, 1
  01de2	52		 push	 edx
  01de3	8b 45 e8	 mov	 eax, DWORD PTR _iAllMonsterCount$228167[ebp]
  01de6	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01dec	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01df2	8b 94 01 18 02
	00 00		 mov	 edx, DWORD PTR [ecx+eax+536]
  01df9	d1 ea		 shr	 edx, 1
  01dfb	83 e2 01	 and	 edx, 1
  01dfe	52		 push	 edx
  01dff	8b 45 e8	 mov	 eax, DWORD PTR _iAllMonsterCount$228167[ebp]
  01e02	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01e08	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01e0e	8b 94 01 20 02
	00 00		 mov	 edx, DWORD PTR [ecx+eax+544]
  01e15	52		 push	 edx
  01e16	8b 45 e8	 mov	 eax, DWORD PTR _iAllMonsterCount$228167[ebp]
  01e19	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01e1f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01e25	8b 54 01 04	 mov	 edx, DWORD PTR [ecx+eax+4]
  01e29	52		 push	 edx
  01e2a	8b 45 e8	 mov	 eax, DWORD PTR _iAllMonsterCount$228167[ebp]
  01e2d	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01e33	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01e39	0f b6 54 01 6a	 movzx	 edx, BYTE PTR [ecx+eax+106]
  01e3e	52		 push	 edx
  01e3f	8b 45 e8	 mov	 eax, DWORD PTR _iAllMonsterCount$228167[ebp]
  01e42	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01e48	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01e4e	d9 84 01 fc 00
	00 00		 fld	 DWORD PTR [ecx+eax+252]
  01e55	83 ec 08	 sub	 esp, 8
  01e58	dd 1c 24	 fstp	 QWORD PTR [esp]
  01e5b	8b 55 e8	 mov	 edx, DWORD PTR _iAllMonsterCount$228167[ebp]
  01e5e	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  01e64	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01e69	0f bf 8c 10 46
	01 00 00	 movsx	 ecx, WORD PTR [eax+edx+326]
  01e71	51		 push	 ecx
  01e72	8b 55 e8	 mov	 edx, DWORD PTR _iAllMonsterCount$228167[ebp]
  01e75	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  01e7b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01e80	0f bf 8c 10 44
	01 00 00	 movsx	 ecx, WORD PTR [eax+edx+324]
  01e88	51		 push	 ecx
  01e89	8b 55 e8	 mov	 edx, DWORD PTR _iAllMonsterCount$228167[ebp]
  01e8c	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  01e92	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01e97	0f b6 8c 10 49
	01 00 00	 movzx	 ecx, BYTE PTR [eax+edx+329]
  01e9f	51		 push	 ecx
  01ea0	8b 55 e8	 mov	 edx, DWORD PTR _iAllMonsterCount$228167[ebp]
  01ea3	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  01ea9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01eae	8b 0c 10	 mov	 ecx, DWORD PTR [eax+edx]
  01eb1	51		 push	 ecx
  01eb2	8b 55 e8	 mov	 edx, DWORD PTR _iAllMonsterCount$228167[ebp]
  01eb5	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  01ebb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01ec0	0f b7 8c 10 b8
	00 00 00	 movzx	 ecx, WORD PTR [eax+edx+184]
  01ec8	51		 push	 ecx
  01ec9	8b 55 e8	 mov	 edx, DWORD PTR _iAllMonsterCount$228167[ebp]
  01ecc	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  01ed2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01ed7	8d 4c 10 77	 lea	 ecx, DWORD PTR [eax+edx+119]
  01edb	51		 push	 ecx
  01edc	68 00 00 00 00	 push	 OFFSET ??_C@_0JF@CDLCDPNJ@?$FL?5RAKLION?5?$FN?$FL?5Debug?5?$FN?54?4?5Monster?5@
  01ee1	68 00 00 00 00	 push	 OFFSET ?RAKLION_TEST_LOG@@3VCLogToFile@@A ; RAKLION_TEST_LOG
  01ee6	e8 00 00 00 00	 call	 ?Output@CLogToFile@@QAAXPADZZ ; CLogToFile::Output
  01eeb	83 c4 40	 add	 esp, 64			; 00000040H
$LN1@UserMonste:

; 804  : 			}
; 805  : 		}
; 806  : 	}

  01eee	e9 22 fe ff ff	 jmp	 $LN4@UserMonste
$LN3@UserMonste:

; 807  : }

  01ef3	5f		 pop	 edi
  01ef4	5e		 pop	 esi
  01ef5	5b		 pop	 ebx
  01ef6	8b e5		 mov	 esp, ebp
  01ef8	5d		 pop	 ebp
  01ef9	c3		 ret	 0
?UserMonsterCountCheck@CRaklion@@QAEXXZ ENDP		; CRaklion::UserMonsterCountCheck
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ??__Eg_Raklion@@YAXXZ
text$yc	SEGMENT
??__Eg_Raklion@@YAXXZ PROC				; `dynamic initializer for 'g_Raklion'', COMDAT

; 19   : CRaklion g_Raklion;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  0000e	e8 00 00 00 00	 call	 ??0CRaklion@@QAE@XZ	; CRaklion::CRaklion
  00013	68 00 00 00 00	 push	 OFFSET ??__Fg_Raklion@@YAXXZ ; `dynamic atexit destructor for 'g_Raklion''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__Eg_Raklion@@YAXXZ ENDP				; `dynamic initializer for 'g_Raklion''
text$yc	ENDS
PUBLIC	??_C@_0BB@IHDOCLEO@RAKLION_TEST_LOG?$AA@	; `string'
PUBLIC	??_C@_0BD@KOPHCGGM@?4?2RAKLION_TEST_LOG?$AA@	; `string'
EXTRN	??0CLogToFile@@QAE@QAD0H@Z:PROC			; CLogToFile::CLogToFile
;	COMDAT ??_C@_0BB@IHDOCLEO@RAKLION_TEST_LOG?$AA@
CONST	SEGMENT
??_C@_0BB@IHDOCLEO@RAKLION_TEST_LOG?$AA@ DB 'RAKLION_TEST_LOG', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KOPHCGGM@?4?2RAKLION_TEST_LOG?$AA@
CONST	SEGMENT
??_C@_0BD@KOPHCGGM@?4?2RAKLION_TEST_LOG?$AA@ DB '.\RAKLION_TEST_LOG', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__ERAKLION_TEST_LOG@@YAXXZ
text$yc	SEGMENT
??__ERAKLION_TEST_LOG@@YAXXZ PROC			; `dynamic initializer for 'RAKLION_TEST_LOG'', COMDAT

; 758  : CLogToFile RAKLION_TEST_LOG("RAKLION_TEST_LOG", ".\\RAKLION_TEST_LOG", TRUE);//identical

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	6a 01		 push	 1
  0000b	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KOPHCGGM@?4?2RAKLION_TEST_LOG?$AA@
  00010	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@IHDOCLEO@RAKLION_TEST_LOG?$AA@
  00015	b9 00 00 00 00	 mov	 ecx, OFFSET ?RAKLION_TEST_LOG@@3VCLogToFile@@A ; RAKLION_TEST_LOG
  0001a	e8 00 00 00 00	 call	 ??0CLogToFile@@QAE@QAD0H@Z ; CLogToFile::CLogToFile
  0001f	68 00 00 00 00	 push	 OFFSET ??__FRAKLION_TEST_LOG@@YAXXZ ; `dynamic atexit destructor for 'RAKLION_TEST_LOG''
  00024	e8 00 00 00 00	 call	 _atexit
  00029	83 c4 04	 add	 esp, 4
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??__ERAKLION_TEST_LOG@@YAXXZ ENDP			; `dynamic initializer for 'RAKLION_TEST_LOG''
; Function compile flags: /Odtp /ZI
text$yc	ENDS
;	COMDAT ??__Fg_Raklion@@YAXXZ
text$yd	SEGMENT
??__Fg_Raklion@@YAXXZ PROC				; `dynamic atexit destructor for 'g_Raklion'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  0000e	e8 00 00 00 00	 call	 ??1CRaklion@@UAE@XZ	; CRaklion::~CRaklion
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__Fg_Raklion@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_Raklion''
text$yd	ENDS
EXTRN	??1CLogToFile@@QAE@XZ:PROC			; CLogToFile::~CLogToFile
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRAKLION_TEST_LOG@@YAXXZ
text$yd	SEGMENT
??__FRAKLION_TEST_LOG@@YAXXZ PROC			; `dynamic atexit destructor for 'RAKLION_TEST_LOG'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?RAKLION_TEST_LOG@@3VCLogToFile@@A ; RAKLION_TEST_LOG
  0000e	e8 00 00 00 00	 call	 ??1CLogToFile@@QAE@XZ	; CLogToFile::~CLogToFile
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__FRAKLION_TEST_LOG@@YAXXZ ENDP			; `dynamic atexit destructor for 'RAKLION_TEST_LOG''
text$yd	ENDS
PUBLIC	?RAKLION_TEST_LOG@@3VCLogToFile@@A		; RAKLION_TEST_LOG
PUBLIC	?g_Raklion@@3VCRaklion@@A			; g_Raklion
_BSS	SEGMENT
?RAKLION_TEST_LOG@@3VCLogToFile@@A DB 010228H DUP (?)	; RAKLION_TEST_LOG
?g_Raklion@@3VCRaklion@@A DB 0e20H DUP (?)		; g_Raklion
_BSS	ENDS
CRT$XCU	SEGMENT
_g_Raklion$initializer$ DD FLAT:??__Eg_Raklion@@YAXXZ
_RAKLION_TEST_LOG$initializer$ DD FLAT:??__ERAKLION_TEST_LOG@@YAXXZ
CRT$XCU	ENDS
END
