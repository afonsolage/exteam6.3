; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\ConnectEx.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?PacketCheckTime2@@YAHPAUOBJECTSTRUCT@@@Z	; PacketCheckTime2
EXTRN	__imp__GetTickCount@0:PROC
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\connectex.cpp
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?PacketCheckTime2@@YAHPAUOBJECTSTRUCT@@@Z PROC		; PacketCheckTime2

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 25   : 	//LogAddC(2, "[DEBUG][2] PACKET TIME: %d", ( GetTickCount() - lpObj->m_PacketCheckTime ));
; 26   : 
; 27   : 	if( (GetTickCount() - lpObj->m_PacketCheckTime) < 300 )

  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00012	2b 81 8c 03 00
	00		 sub	 eax, DWORD PTR [ecx+908]
  00018	3d 2c 01 00 00	 cmp	 eax, 300		; 0000012cH
  0001d	73 04		 jae	 SHORT $LN1@PacketChec

; 28   : 	{
; 29   : 		return FALSE;

  0001f	33 c0		 xor	 eax, eax
  00021	eb 14		 jmp	 SHORT $LN2@PacketChec
$LN1@PacketChec:

; 30   : 	}
; 31   : 
; 32   : 	lpObj->m_PacketCheckTime = GetTickCount();

  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0002c	89 81 8c 03 00
	00		 mov	 DWORD PTR [ecx+908], eax

; 33   : 	return TRUE;

  00032	b8 01 00 00 00	 mov	 eax, 1
$LN2@PacketChec:

; 34   : }

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?PacketCheckTime2@@YAHPAUOBJECTSTRUCT@@@Z ENDP		; PacketCheckTime2
_TEXT	ENDS
PUBLIC	?Init@ConnectEx@@QAEXXZ				; ConnectEx::Init
PUBLIC	??0ConnectEx@@QAE@XZ				; ConnectEx::ConnectEx
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ConnectEx@@QAE@XZ PROC				; ConnectEx::ConnectEx
; _this$ = ecx

; 38   : {

  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
  00043	83 ec 44	 sub	 esp, 68			; 00000044H
  00046	53		 push	 ebx
  00047	56		 push	 esi
  00048	57		 push	 edi
  00049	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 39   : 	this->Init();

  0004c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?Init@ConnectEx@@QAEXXZ	; ConnectEx::Init

; 40   : }

  00054	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
??0ConnectEx@@QAE@XZ ENDP				; ConnectEx::ConnectEx
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?Init@ConnectEx@@QAEXXZ PROC				; ConnectEx::Init
; _this$ = ecx

; 44   : {

  00060	55		 push	 ebp
  00061	8b ec		 mov	 ebp, esp
  00063	83 ec 44	 sub	 esp, 68			; 00000044H
  00066	53		 push	 ebx
  00067	56		 push	 esi
  00068	57		 push	 edi
  00069	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 45   : 	this->ConnectIndex = -1;

  0006c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1

; 46   : 	this->ConnectTick = 0;

  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 47   : }

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
?Init@ConnectEx@@QAEXXZ ENDP				; ConnectEx::Init
_TEXT	ENDS
PUBLIC	??_C@_0BD@CICILPEN@join?5send?5?3?5?$CI?$CFd?$CJ?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0BB@PPEDKKBK@error?5?3?5?$CFd?5?$CFs?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0EB@IHOBIKLP@d?3?2projects?2exteam6?43?2source?2gam@ ; `string'
PUBLIC	?__LINE__Var@?1??SendLogin@ConnectEx@@QAEXHPAUCONNECTEX_LOGIN@@@Z@4JA ; `ConnectEx::SendLogin'::`2'::__LINE__Var
PUBLIC	__$ArrayPad$
PUBLIC	?SendLogin@ConnectEx@@QAEXHPAUCONNECTEX_LOGIN@@@Z ; ConnectEx::SendLogin
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?DataSend@wsJoinServerCli@@QAEHPADH@Z:PROC	; wsJoinServerCli::DataSend
EXTRN	?wsJServerCli@@3VwsJoinServerCli@@A:BYTE	; wsJServerCli
EXTRN	_memset:PROC
EXTRN	?CheckUser@CExLicense@@QAE_NH@Z:PROC		; CExLicense::CheckUser
EXTRN	?g_ExLicense@@3VCExLicense@@A:BYTE		; g_ExLicense
EXTRN	_strcpy:PROC
EXTRN	?PHeadSetB@@YAXPAEEH@Z:PROC			; PHeadSetB
EXTRN	?CloseClient@@YAXH@Z:PROC			; CloseClient
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
EXTRN	?Get@CMsg@@QAEPADH@Z:PROC			; CMsg::Get
EXTRN	?lMsg@@3VCMsg@@A:BYTE				; lMsg
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?GCJoinResult@@YAXEH@Z:PROC			; GCJoinResult
EXTRN	?IsMember@CConMember@@QAEHPAD@Z:PROC		; CConMember::IsMember
EXTRN	?ConMember@@3VCConMember@@A:BYTE		; ConMember
EXTRN	?bCanConnectMember@@3HA:DWORD			; bCanConnectMember
EXTRN	_memcpy:PROC
EXTRN	?BuxConvert@@YAXPADH@Z:PROC			; BuxConvert
EXTRN	?ExConfig@@3VcExConfigs@@A:BYTE			; ExConfig
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT ??_C@_0BD@CICILPEN@join?5send?5?3?5?$CI?$CFd?$CJ?$CFs?$AA@
CONST	SEGMENT
??_C@_0BD@CICILPEN@join?5send?5?3?5?$CI?$CFd?$CJ?$CFs?$AA@ DB 'join send '
	DB	': (%d)%s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PPEDKKBK@error?5?3?5?$CFd?5?$CFs?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BB@PPEDKKBK@error?5?3?5?$CFd?5?$CFs?5?$CFd?$AA@ DB 'error : %d %s '
	DB	'%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@IHOBIKLP@d?3?2projects?2exteam6?43?2source?2gam@
CONST	SEGMENT
??_C@_0EB@IHOBIKLP@d?3?2projects?2exteam6?43?2source?2gam@ DB 'd:\project'
	DB	's\exteam6.3\source\gameserver\gameserver\connectex.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??SendLogin@ConnectEx@@QAEXHPAUCONNECTEX_LOGIN@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??SendLogin@ConnectEx@@QAEXHPAUCONNECTEX_LOGIN@@@Z@4JA DD 033H ; `ConnectEx::SendLogin'::`2'::__LINE__Var
; Function compile flags: /Odtp /ZI
_DATA	ENDS
_TEXT	SEGMENT
_pass$231480 = -92					; size = 21
_spMsg$ = -68						; size = 44
_lpObj$ = -24						; size = 4
_id$ = -20						; size = 11
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_UserIndex$ = 8						; size = 4
_Data$ = 12						; size = 4
?SendLogin@ConnectEx@@QAEXHPAUCONNECTEX_LOGIN@@@Z PROC	; ConnectEx::SendLogin
; _this$ = ecx

; 51   : {

  00090	55		 push	 ebp
  00091	8b ec		 mov	 ebp, esp
  00093	81 ec 9c 00 00
	00		 sub	 esp, 156		; 0000009cH
  00099	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0009e	33 c5		 xor	 eax, ebp
  000a0	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  000a3	53		 push	 ebx
  000a4	56		 push	 esi
  000a5	57		 push	 edi
  000a6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 52   : 	if(!ExConfig.CommonServer.ReConnect) return;

  000a9	0f b6 05 0c 01
	00 00		 movzx	 eax, BYTE PTR ?ExConfig@@3VcExConfigs@@A+268
  000b0	85 c0		 test	 eax, eax
  000b2	75 05		 jne	 SHORT $LN11@SendLogin
  000b4	e9 91 05 00 00	 jmp	 $LN12@SendLogin
$LN11@SendLogin:

; 53   : 	// ----
; 54   : 	if(this->ConnectIndex != -1)

  000b9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000bc	83 38 ff	 cmp	 DWORD PTR [eax], -1
  000bf	74 05		 je	 SHORT $LN10@SendLogin

; 55   : 	{
; 56   : 		return;

  000c1	e9 84 05 00 00	 jmp	 $LN12@SendLogin
$LN10@SendLogin:

; 57   : 	}
; 58   : 	this->ConnectIndex = UserIndex;

  000c6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c9	8b 4d 08	 mov	 ecx, DWORD PTR _UserIndex$[ebp]
  000cc	89 08		 mov	 DWORD PTR [eax], ecx

; 59   : 	this->ConnectTick = GetTickCount();

  000ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  000d4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d7	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 60   : 	// ----
; 61   : 	BuxConvert(Data->AccountID, MAX_ACCOUNT_LEN);

  000da	6a 0a		 push	 10			; 0000000aH
  000dc	8b 45 0c	 mov	 eax, DWORD PTR _Data$[ebp]
  000df	83 c0 04	 add	 eax, 4
  000e2	50		 push	 eax
  000e3	e8 00 00 00 00	 call	 ?BuxConvert@@YAXPADH@Z	; BuxConvert
  000e8	83 c4 08	 add	 esp, 8

; 62   : 	BuxConvert(Data->Password, MAX_ACCOUNT_LEN);

  000eb	6a 0a		 push	 10			; 0000000aH
  000ed	8b 45 0c	 mov	 eax, DWORD PTR _Data$[ebp]
  000f0	83 c0 0e	 add	 eax, 14			; 0000000eH
  000f3	50		 push	 eax
  000f4	e8 00 00 00 00	 call	 ?BuxConvert@@YAXPADH@Z	; BuxConvert
  000f9	83 c4 08	 add	 esp, 8

; 63   : 	// ----
; 64   : 	char id[11];
; 65   : 	id[10]=0;

  000fc	c6 45 f6 00	 mov	 BYTE PTR _id$[ebp+10], 0

; 66   : 	memcpy(id, Data->AccountID, sizeof(Data->AccountID));

  00100	6a 0a		 push	 10			; 0000000aH
  00102	8b 45 0c	 mov	 eax, DWORD PTR _Data$[ebp]
  00105	83 c0 04	 add	 eax, 4
  00108	50		 push	 eax
  00109	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0010c	51		 push	 ecx
  0010d	e8 00 00 00 00	 call	 _memcpy
  00112	83 c4 0c	 add	 esp, 12			; 0000000cH

; 67   : 	BuxConvert(id, MAX_ACCOUNT_LEN);

  00115	6a 0a		 push	 10			; 0000000aH
  00117	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  0011a	50		 push	 eax
  0011b	e8 00 00 00 00	 call	 ?BuxConvert@@YAXPADH@Z	; BuxConvert
  00120	83 c4 08	 add	 esp, 8

; 68   : 
; 69   : 	//char pass[20+1];
; 70   : 	//memset(pass, 0, sizeof(pass));
; 71   : 	//memcpy(pass, lpMsg->Pass, sizeof(lpMsg->Pass));
; 72   : 	//BuxConvert(pass, MAX_ACCOUNT_LEN);
; 73   : 	//memcpy(gObj[aIndex].Pass, pass, MAX_ACCOUNT_LEN);
; 74   : 	// ----
; 75   : 	//GJPUserClose(id); //Force connection
; 76   : 	// ----
; 77   : 	if( bCanConnectMember == TRUE )

  00123	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?bCanConnectMember@@3HA, 1 ; bCanConnectMember
  0012a	75 25		 jne	 SHORT $LN9@SendLogin

; 78   : 	{
; 79   : 		if( ConMember.IsMember(id) == FALSE )

  0012c	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  0012f	50		 push	 eax
  00130	b9 00 00 00 00	 mov	 ecx, OFFSET ?ConMember@@3VCConMember@@A ; ConMember
  00135	e8 00 00 00 00	 call	 ?IsMember@CConMember@@QAEHPAD@Z ; CConMember::IsMember
  0013a	85 c0		 test	 eax, eax
  0013c	75 13		 jne	 SHORT $LN9@SendLogin

; 80   : 		{
; 81   : 			GCJoinResult(JS_ONLY_VIP_MEMBERS, UserIndex);

  0013e	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  00141	50		 push	 eax
  00142	6a 02		 push	 2
  00144	e8 00 00 00 00	 call	 ?GCJoinResult@@YAXEH@Z	; GCJoinResult
  00149	83 c4 08	 add	 esp, 8

; 82   : 			return;

  0014c	e9 f9 04 00 00	 jmp	 $LN12@SendLogin
$LN9@SendLogin:

; 83   : 		}
; 84   : 	}
; 85   : 	// ----
; 86   : 	LPOBJ lpObj = &gObj[UserIndex];

  00151	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  00154	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0015a	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00160	89 45 e8	 mov	 DWORD PTR _lpObj$[ebp], eax

; 87   : 	// ----
; 88   : 	if( gObj[UserIndex].Connected != PLAYER_CONNECTED )

  00163	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  00166	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0016c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00172	83 7c 01 04 01	 cmp	 DWORD PTR [ecx+eax+4], 1
  00177	74 32		 je	 SHORT $LN7@SendLogin

; 89   : 	{
; 90   : 		LogAdd(lMsg.Get(MSGGET(1, 218)), UserIndex, id);

  00179	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  0017c	50		 push	 eax
  0017d	8b 4d 08	 mov	 ecx, DWORD PTR _UserIndex$[ebp]
  00180	51		 push	 ecx
  00181	68 da 01 00 00	 push	 474			; 000001daH
  00186	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0018b	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00190	50		 push	 eax
  00191	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00197	83 c4 0c	 add	 esp, 12			; 0000000cH

; 91   : 		CloseClient(UserIndex);

  0019a	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  0019d	50		 push	 eax
  0019e	e8 00 00 00 00	 call	 ?CloseClient@@YAXH@Z	; CloseClient
  001a3	83 c4 04	 add	 esp, 4

; 92   : 		return;

  001a6	e9 9f 04 00 00	 jmp	 $LN12@SendLogin
$LN7@SendLogin:

; 93   : 	}
; 94   : 	// ----
; 95   : 	if( gObj[UserIndex].LoginMsgSnd != FALSE )

  001ab	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  001ae	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  001b4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001ba	0f be 54 01 08	 movsx	 edx, BYTE PTR [ecx+eax+8]
  001bf	85 d2		 test	 edx, edx
  001c1	0f 84 86 00 00
	00		 je	 $LN6@SendLogin

; 96   : 	{
; 97   : 		if( gObj[UserIndex].LoginMsgSnd == TRUE )

  001c7	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  001ca	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  001d0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001d6	0f be 54 01 08	 movsx	 edx, BYTE PTR [ecx+eax+8]
  001db	83 fa 01	 cmp	 edx, 1
  001de	75 37		 jne	 SHORT $LN5@SendLogin

; 98   : 		{
; 99   : 			LogAdd(lMsg.Get(MSGGET(1, 219)), UserIndex, id, gObj[UserIndex].Ip_addr );

  001e0	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  001e3	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  001e9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001ef	8d 54 01 18	 lea	 edx, DWORD PTR [ecx+eax+24]
  001f3	52		 push	 edx
  001f4	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  001f7	50		 push	 eax
  001f8	8b 4d 08	 mov	 ecx, DWORD PTR _UserIndex$[ebp]
  001fb	51		 push	 ecx
  001fc	68 db 01 00 00	 push	 475			; 000001dbH
  00201	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00206	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0020b	50		 push	 eax
  0020c	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00212	83 c4 10	 add	 esp, 16			; 00000010H

; 100  : 		}
; 101  : 		else

  00215	eb 31		 jmp	 SHORT $LN4@SendLogin
$LN5@SendLogin:

; 102  : 		{
; 103  : 			LogAdd("error : %d %s %d", gObj[UserIndex].LoginMsgSnd, __FILE__, __LINE__);

  00217	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?1??SendLogin@ConnectEx@@QAEXHPAUCONNECTEX_LOGIN@@@Z@4JA
  0021c	83 c0 34	 add	 eax, 52			; 00000034H
  0021f	50		 push	 eax
  00220	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@IHOBIKLP@d?3?2projects?2exteam6?43?2source?2gam@
  00225	8b 4d 08	 mov	 ecx, DWORD PTR _UserIndex$[ebp]
  00228	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0022e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00234	0f be 44 0a 08	 movsx	 eax, BYTE PTR [edx+ecx+8]
  00239	50		 push	 eax
  0023a	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@PPEDKKBK@error?5?3?5?$CFd?5?$CFs?5?$CFd?$AA@
  0023f	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00245	83 c4 10	 add	 esp, 16			; 00000010H
$LN4@SendLogin:

; 104  : 		}
; 105  : 
; 106  : 		return;

  00248	e9 fd 03 00 00	 jmp	 $LN12@SendLogin
$LN6@SendLogin:

; 107  : 	}
; 108  : 	// ----
; 109  : 	if( lpObj->Connected >= PLAYER_LOGGED )

  0024d	8b 45 e8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00250	83 78 04 02	 cmp	 DWORD PTR [eax+4], 2
  00254	7c 05		 jl	 SHORT $LN3@SendLogin

; 110  : 	{
; 111  : 		return;

  00256	e9 ef 03 00 00	 jmp	 $LN12@SendLogin
$LN3@SendLogin:

; 112  : 	}
; 113  : 	// ----
; 114  : 	SDHP_IDPASS spMsg;
; 115  : 	// ----
; 116  : 	PHeadSetB((LPBYTE)&spMsg, 0x01, sizeof(spMsg));

  0025b	6a 2c		 push	 44			; 0000002cH
  0025d	6a 01		 push	 1
  0025f	8d 45 bc	 lea	 eax, DWORD PTR _spMsg$[ebp]
  00262	50		 push	 eax
  00263	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  00268	83 c4 0c	 add	 esp, 12			; 0000000cH

; 117  : 	spMsg.Number = UserIndex;

  0026b	66 8b 45 08	 mov	 ax, WORD PTR _UserIndex$[ebp]
  0026f	66 89 45 d4	 mov	 WORD PTR _spMsg$[ebp+24], ax

; 118  : 	memcpy(spMsg.Id, Data->AccountID, sizeof(spMsg.Id));

  00273	6a 0a		 push	 10			; 0000000aH
  00275	8b 45 0c	 mov	 eax, DWORD PTR _Data$[ebp]
  00278	83 c0 04	 add	 eax, 4
  0027b	50		 push	 eax
  0027c	8d 4d bf	 lea	 ecx, DWORD PTR _spMsg$[ebp+3]
  0027f	51		 push	 ecx
  00280	e8 00 00 00 00	 call	 _memcpy
  00285	83 c4 0c	 add	 esp, 12			; 0000000cH

; 119  : 	memcpy(spMsg.Pass, Data->Password, sizeof(spMsg.Pass));

  00288	6a 0a		 push	 10			; 0000000aH
  0028a	8b 45 0c	 mov	 eax, DWORD PTR _Data$[ebp]
  0028d	83 c0 0e	 add	 eax, 14			; 0000000eH
  00290	50		 push	 eax
  00291	8d 4d c9	 lea	 ecx, DWORD PTR _spMsg$[ebp+13]
  00294	51		 push	 ecx
  00295	e8 00 00 00 00	 call	 _memcpy
  0029a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 120  : 	strcpy(spMsg.IpAddress, gObj[UserIndex].Ip_addr);

  0029d	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  002a0	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  002a6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002ac	8d 54 01 18	 lea	 edx, DWORD PTR [ecx+eax+24]
  002b0	52		 push	 edx
  002b1	8d 45 d6	 lea	 eax, DWORD PTR _spMsg$[ebp+26]
  002b4	50		 push	 eax
  002b5	e8 00 00 00 00	 call	 _strcpy
  002ba	83 c4 08	 add	 esp, 8

; 121  : 	gObj[UserIndex].CheckTick = Data->TickCount;

  002bd	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  002c0	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  002c6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002cc	8b 55 0c	 mov	 edx, DWORD PTR _Data$[ebp]
  002cf	8b 52 22	 mov	 edx, DWORD PTR [edx+34]
  002d2	89 54 01 40	 mov	 DWORD PTR [ecx+eax+64], edx

; 122  : 	gObj[UserIndex].CheckTick2 = GetTickCount();

  002d6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  002dc	8b 4d 08	 mov	 ecx, DWORD PTR _UserIndex$[ebp]
  002df	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  002e5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002eb	89 44 0a 48	 mov	 DWORD PTR [edx+ecx+72], eax

; 123  : 	gObj[UserIndex].ConnectCheckTime = GetTickCount();

  002ef	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  002f5	8b 4d 08	 mov	 ecx, DWORD PTR _UserIndex$[ebp]
  002f8	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  002fe	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00304	89 44 0a 3c	 mov	 DWORD PTR [edx+ecx+60], eax

; 124  : 	gObj[UserIndex].CheckSpeedHack = true;

  00308	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  0030b	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00311	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00317	c6 44 01 44 01	 mov	 BYTE PTR [ecx+eax+68], 1

; 125  : 	gObj[UserIndex].LoginMsgSnd = 1;

  0031c	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  0031f	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00325	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0032b	c6 44 01 08 01	 mov	 BYTE PTR [ecx+eax+8], 1

; 126  : 	gObj[UserIndex].LoginMsgCount = 1;

  00330	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  00333	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00339	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0033f	c6 44 01 09 01	 mov	 BYTE PTR [ecx+eax+9], 1

; 127  : #ifdef DISCONECT_FRIEND
; 128  : 	if( g_ExLicense.CheckUser(eExUB::Local) || g_ExLicense.CheckUser(ulasevich) || g_ExLicense.CheckUser(ulasevich2) || 
; 129  : 		g_ExLicense.CheckUser(eExUB::Gredy) || g_ExLicense.CheckUser(eExUB::GredyLocal) || g_ExLicense.CheckUser(eExUB::Gredy2)
; 130  : 		|| g_ExLicense.CheckUser(eExUB::MU2Play) || g_ExLicense.CheckUser(eExUB::Sentinel) || g_ExLicense.CheckUser(eExUB::Escalate) || g_ExLicense.CheckUser(eExUB::Artem) ||
; 131  : 		g_ExLicense.CheckUser(eExUB::Artem2) || g_ExLicense.CheckUser(eExUB::RevoMU) || g_ExLicense.CheckUser(eExUB::GloryMU) || 
; 132  : 		g_ExLicense.CheckUser(eExUB::mu4you) || g_ExLicense.CheckUser(eExUB::eternalmu) || g_ExLicense.CheckUser(eExUB::NSGames))

  00344	6a 00		 push	 0
  00346	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  0034b	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  00350	0f b6 c0	 movzx	 eax, al
  00353	85 c0		 test	 eax, eax
  00355	0f 85 41 01 00
	00		 jne	 $LN1@SendLogin
  0035b	6a 17		 push	 23			; 00000017H
  0035d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  00362	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  00367	0f b6 c0	 movzx	 eax, al
  0036a	85 c0		 test	 eax, eax
  0036c	0f 85 2a 01 00
	00		 jne	 $LN1@SendLogin
  00372	6a 24		 push	 36			; 00000024H
  00374	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  00379	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  0037e	0f b6 c0	 movzx	 eax, al
  00381	85 c0		 test	 eax, eax
  00383	0f 85 13 01 00
	00		 jne	 $LN1@SendLogin
  00389	6a 20		 push	 32			; 00000020H
  0038b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  00390	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  00395	0f b6 c0	 movzx	 eax, al
  00398	85 c0		 test	 eax, eax
  0039a	0f 85 fc 00 00
	00		 jne	 $LN1@SendLogin
  003a0	6a 21		 push	 33			; 00000021H
  003a2	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  003a7	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  003ac	0f b6 c0	 movzx	 eax, al
  003af	85 c0		 test	 eax, eax
  003b1	0f 85 e5 00 00
	00		 jne	 $LN1@SendLogin
  003b7	6a 22		 push	 34			; 00000022H
  003b9	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  003be	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  003c3	0f b6 c0	 movzx	 eax, al
  003c6	85 c0		 test	 eax, eax
  003c8	0f 85 ce 00 00
	00		 jne	 $LN1@SendLogin
  003ce	6a 36		 push	 54			; 00000036H
  003d0	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  003d5	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  003da	0f b6 c0	 movzx	 eax, al
  003dd	85 c0		 test	 eax, eax
  003df	0f 85 b7 00 00
	00		 jne	 $LN1@SendLogin
  003e5	6a 38		 push	 56			; 00000038H
  003e7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  003ec	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  003f1	0f b6 c0	 movzx	 eax, al
  003f4	85 c0		 test	 eax, eax
  003f6	0f 85 a0 00 00
	00		 jne	 $LN1@SendLogin
  003fc	6a 40		 push	 64			; 00000040H
  003fe	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  00403	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  00408	0f b6 c0	 movzx	 eax, al
  0040b	85 c0		 test	 eax, eax
  0040d	0f 85 89 00 00
	00		 jne	 $LN1@SendLogin
  00413	6a 30		 push	 48			; 00000030H
  00415	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  0041a	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  0041f	0f b6 c0	 movzx	 eax, al
  00422	85 c0		 test	 eax, eax
  00424	75 76		 jne	 SHORT $LN1@SendLogin
  00426	6a 31		 push	 49			; 00000031H
  00428	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  0042d	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  00432	0f b6 c0	 movzx	 eax, al
  00435	85 c0		 test	 eax, eax
  00437	75 63		 jne	 SHORT $LN1@SendLogin
  00439	6a 43		 push	 67			; 00000043H
  0043b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  00440	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  00445	0f b6 c0	 movzx	 eax, al
  00448	85 c0		 test	 eax, eax
  0044a	75 50		 jne	 SHORT $LN1@SendLogin
  0044c	6a 46		 push	 70			; 00000046H
  0044e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  00453	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  00458	0f b6 c0	 movzx	 eax, al
  0045b	85 c0		 test	 eax, eax
  0045d	75 3d		 jne	 SHORT $LN1@SendLogin
  0045f	6a 4e		 push	 78			; 0000004eH
  00461	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  00466	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  0046b	0f b6 c0	 movzx	 eax, al
  0046e	85 c0		 test	 eax, eax
  00470	75 2a		 jne	 SHORT $LN1@SendLogin
  00472	6a 4f		 push	 79			; 0000004fH
  00474	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  00479	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  0047e	0f b6 c0	 movzx	 eax, al
  00481	85 c0		 test	 eax, eax
  00483	75 17		 jne	 SHORT $LN1@SendLogin
  00485	6a 51		 push	 81			; 00000051H
  00487	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  0048c	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  00491	0f b6 c0	 movzx	 eax, al
  00494	85 c0		 test	 eax, eax
  00496	0f 84 86 00 00
	00		 je	 $LN2@SendLogin
$LN1@SendLogin:

; 133  : 	{
; 134  : #define MAX_PASS_LEN 20
; 135  : 		ZeroMemory(&gObj[UserIndex].Pass,sizeof(gObj[UserIndex].Pass));

  0049c	6a 15		 push	 21			; 00000015H
  0049e	6a 00		 push	 0
  004a0	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  004a3	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  004a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  004af	8d 94 01 82 00
	00 00		 lea	 edx, DWORD PTR [ecx+eax+130]
  004b6	52		 push	 edx
  004b7	e8 00 00 00 00	 call	 _memset
  004bc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 136  : 		char pass[MAX_PASS_LEN+1];
; 137  : 		pass[MAX_PASS_LEN]=0;

  004bf	c6 45 b8 00	 mov	 BYTE PTR _pass$231480[ebp+20], 0

; 138  : 		memcpy(pass, Data->Password, sizeof(Data->Password));

  004c3	6a 0a		 push	 10			; 0000000aH
  004c5	8b 45 0c	 mov	 eax, DWORD PTR _Data$[ebp]
  004c8	83 c0 0e	 add	 eax, 14			; 0000000eH
  004cb	50		 push	 eax
  004cc	8d 4d a4	 lea	 ecx, DWORD PTR _pass$231480[ebp]
  004cf	51		 push	 ecx
  004d0	e8 00 00 00 00	 call	 _memcpy
  004d5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 139  : 		BuxConvert(pass, MAX_ACCOUNT_LEN);

  004d8	6a 0a		 push	 10			; 0000000aH
  004da	8d 45 a4	 lea	 eax, DWORD PTR _pass$231480[ebp]
  004dd	50		 push	 eax
  004de	e8 00 00 00 00	 call	 ?BuxConvert@@YAXPADH@Z	; BuxConvert
  004e3	83 c4 08	 add	 esp, 8

; 140  : 		gObj[UserIndex].Pass[MAX_ACCOUNT_LEN] = 0;

  004e6	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  004e9	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  004ef	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  004f5	c6 84 01 8c 00
	00 00 00	 mov	 BYTE PTR [ecx+eax+140], 0

; 141  : 		memcpy(gObj[UserIndex].Pass, pass, MAX_ACCOUNT_LEN);

  004fd	6a 0a		 push	 10			; 0000000aH
  004ff	8d 45 a4	 lea	 eax, DWORD PTR _pass$231480[ebp]
  00502	50		 push	 eax
  00503	8b 4d 08	 mov	 ecx, DWORD PTR _UserIndex$[ebp]
  00506	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0050c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00512	8d 84 0a 82 00
	00 00		 lea	 eax, DWORD PTR [edx+ecx+130]
  00519	50		 push	 eax
  0051a	e8 00 00 00 00	 call	 _memcpy
  0051f	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@SendLogin:

; 142  : 	}
; 143  : #endif // DISCONECT_FRIEND
; 144  : 	gObj[UserIndex].AccountID[MAX_ACCOUNT_LEN] = 0;

  00522	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  00525	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0052b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00531	c6 44 01 76 00	 mov	 BYTE PTR [ecx+eax+118], 0

; 145  : 	gObj[UserIndex].Name[MAX_ACCOUNT_LEN] = 0;

  00536	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  00539	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0053f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00545	c6 84 01 81 00
	00 00 00	 mov	 BYTE PTR [ecx+eax+129], 0

; 146  : 	memcpy(gObj[UserIndex].AccountID, id, MAX_ACCOUNT_LEN);

  0054d	6a 0a		 push	 10			; 0000000aH
  0054f	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  00552	50		 push	 eax
  00553	8b 4d 08	 mov	 ecx, DWORD PTR _UserIndex$[ebp]
  00556	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0055c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00562	8d 44 0a 6c	 lea	 eax, DWORD PTR [edx+ecx+108]
  00566	50		 push	 eax
  00567	e8 00 00 00 00	 call	 _memcpy
  0056c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 147  : 	memcpy(gObj[UserIndex].Name, Data->Name, MAX_ACCOUNT_LEN);

  0056f	6a 0a		 push	 10			; 0000000aH
  00571	8b 45 0c	 mov	 eax, DWORD PTR _Data$[ebp]
  00574	83 c0 18	 add	 eax, 24			; 00000018H
  00577	50		 push	 eax
  00578	8b 4d 08	 mov	 ecx, DWORD PTR _UserIndex$[ebp]
  0057b	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00581	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00587	8d 44 0a 77	 lea	 eax, DWORD PTR [edx+ecx+119]
  0058b	50		 push	 eax
  0058c	e8 00 00 00 00	 call	 _memcpy
  00591	83 c4 0c	 add	 esp, 12			; 0000000cH

; 148  : 	gObj[UserIndex].m_cAccountItemBlock = 0;

  00594	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  00597	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0059d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  005a3	c6 84 01 14 02
	00 00 00	 mov	 BYTE PTR [ecx+eax+532], 0

; 149  : 	gObj[UserIndex].m_ConnectEx = true;

  005ab	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  005ae	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  005b4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  005ba	c6 84 01 ac 27
	00 00 01	 mov	 BYTE PTR [ecx+eax+10156], 1

; 150  : 	gObj[UserIndex].ukn_30 = 0;

  005c2	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  005c5	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  005cb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  005d1	c7 44 01 30 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+48], 0

; 151  : 	// ----
; 152  : 	wsJServerCli.DataSend((char*)&spMsg, spMsg.h.size);

  005d9	0f b6 45 bd	 movzx	 eax, BYTE PTR _spMsg$[ebp+1]
  005dd	50		 push	 eax
  005de	8d 4d bc	 lea	 ecx, DWORD PTR _spMsg$[ebp]
  005e1	51		 push	 ecx
  005e2	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  005e7	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 153  : 	LogAddTD("join send : (%d)%s", UserIndex, gObj[UserIndex].AccountID);

  005ec	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  005ef	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  005f5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  005fb	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  005ff	52		 push	 edx
  00600	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  00603	50		 push	 eax
  00604	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@CICILPEN@join?5send?5?3?5?$CI?$CFd?$CJ?$CFs?$AA@
  00609	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0060f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 154  : 	
; 155  : 	lpObj->m_bMapSvrMoveReq = false;

  00612	8b 45 e8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00615	c6 80 e5 1b 00
	00 00		 mov	 BYTE PTR [eax+7141], 0

; 156  : 	lpObj->m_sPrevMapSvrCode = -1; 

  0061c	83 c8 ff	 or	 eax, -1
  0061f	8b 4d e8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00622	66 89 81 ec 1b
	00 00		 mov	 WORD PTR [ecx+7148], ax

; 157  : 	lpObj->m_sDestMapNumber = -1;

  00629	83 c8 ff	 or	 eax, -1
  0062c	8b 4d e8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0062f	66 89 81 ee 1b
	00 00		 mov	 WORD PTR [ecx+7150], ax

; 158  : 	lpObj->m_btDestX = 0;

  00636	8b 45 e8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00639	c6 80 f0 1b 00
	00 00		 mov	 BYTE PTR [eax+7152], 0

; 159  : 	lpObj->m_btDestY = 0;

  00640	8b 45 e8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00643	c6 80 f1 1b 00
	00 00		 mov	 BYTE PTR [eax+7153], 0
$LN12@SendLogin:

; 160  : }

  0064a	5f		 pop	 edi
  0064b	5e		 pop	 esi
  0064c	5b		 pop	 ebx
  0064d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00650	33 cd		 xor	 ecx, ebp
  00652	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00657	8b e5		 mov	 esp, ebp
  00659	5d		 pop	 ebp
  0065a	c2 08 00	 ret	 8
?SendLogin@ConnectEx@@QAEXHPAUCONNECTEX_LOGIN@@@Z ENDP	; ConnectEx::SendLogin
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SendGame@ConnectEx@@QAEXH@Z			; ConnectEx::SendGame
EXTRN	?Send@DBSockMng@@QAEHPADH@Z:PROC		; DBSockMng::Send
EXTRN	?cDBSMng@@3VDBSockMng@@A:BYTE			; cDBSMng
EXTRN	?gObjIsAccontConnect@@YAHHPAD@Z:PROC		; gObjIsAccontConnect
EXTRN	?DataServerGetCharListRequest@@YAXF@Z:PROC	; DataServerGetCharListRequest
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pCRequest$ = -48					; size = 28
__name$ = -20						; size = 11
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_UserIndex$ = 8						; size = 4
?SendGame@ConnectEx@@QAEXH@Z PROC			; ConnectEx::SendGame
; _this$ = ecx

; 164  : {

  00660	55		 push	 ebp
  00661	8b ec		 mov	 ebp, esp
  00663	83 ec 70	 sub	 esp, 112		; 00000070H
  00666	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0066b	33 c5		 xor	 eax, ebp
  0066d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00670	53		 push	 ebx
  00671	56		 push	 esi
  00672	57		 push	 edi
  00673	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 165  : 	if(!ExConfig.CommonServer.ReConnect) return;

  00676	0f b6 05 0c 01
	00 00		 movzx	 eax, BYTE PTR ?ExConfig@@3VcExConfigs@@A+268
  0067d	85 c0		 test	 eax, eax
  0067f	75 05		 jne	 SHORT $LN4@SendGame
  00681	e9 3d 01 00 00	 jmp	 $LN5@SendGame
$LN4@SendGame:

; 166  : 	// ----
; 167  : 	gObj[UserIndex].m_ConnectEx = false;

  00686	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  00689	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0068f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00695	c6 84 01 ac 27
	00 00 00	 mov	 BYTE PTR [ecx+eax+10156], 0

; 168  : 	DataServerGetCharListRequest(UserIndex);

  0069d	0f b7 45 08	 movzx	 eax, WORD PTR _UserIndex$[ebp]
  006a1	50		 push	 eax
  006a2	e8 00 00 00 00	 call	 ?DataServerGetCharListRequest@@YAXF@Z ; DataServerGetCharListRequest
  006a7	83 c4 04	 add	 esp, 4

; 169  : 	// ----
; 170  : 	if ( !PacketCheckTime2(&gObj[UserIndex]))

  006aa	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  006ad	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  006b3	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  006b9	50		 push	 eax
  006ba	e8 00 00 00 00	 call	 ?PacketCheckTime2@@YAHPAUOBJECTSTRUCT@@@Z ; PacketCheckTime2
  006bf	83 c4 04	 add	 esp, 4
  006c2	85 c0		 test	 eax, eax
  006c4	75 05		 jne	 SHORT $LN3@SendGame

; 171  : 	{
; 172  : 		return;

  006c6	e9 f8 00 00 00	 jmp	 $LN5@SendGame
$LN3@SendGame:

; 173  : 	}
; 174  : 	// ----
; 175  : 	if ( !gObjIsAccontConnect(UserIndex, gObj[UserIndex].AccountID))

  006cb	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  006ce	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  006d4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  006da	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  006de	52		 push	 edx
  006df	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  006e2	50		 push	 eax
  006e3	e8 00 00 00 00	 call	 ?gObjIsAccontConnect@@YAHHPAD@Z ; gObjIsAccontConnect
  006e8	83 c4 08	 add	 esp, 8
  006eb	85 c0		 test	 eax, eax
  006ed	75 05		 jne	 SHORT $LN2@SendGame

; 176  : 	{
; 177  : 		return;

  006ef	e9 cf 00 00 00	 jmp	 $LN5@SendGame
$LN2@SendGame:

; 178  : 	}
; 179  : 	// ----
; 180  : 	if ( gObj[UserIndex].Connected == PLAYER_PLAYING )

  006f4	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  006f7	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  006fd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00703	83 7c 01 04 03	 cmp	 DWORD PTR [ecx+eax+4], 3
  00708	75 05		 jne	 SHORT $LN1@SendGame

; 181  : 	{
; 182  : 		return;

  0070a	e9 b4 00 00 00	 jmp	 $LN5@SendGame
$LN1@SendGame:

; 183  : 	}
; 184  : 	// ----
; 185  : 	gObj[UserIndex].bEnableDelCharacter = FALSE;

  0070f	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  00712	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00718	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0071e	c7 44 01 0c 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+12], 0

; 186  : 	// ----
; 187  : 	char _name[MAX_ACCOUNT_LEN+1];
; 188  : 	SDHP_DBCHARINFOREQUEST pCRequest;
; 189  : 	// ----
; 190  : 	PHeadSetB((LPBYTE)&pCRequest, 0x06, sizeof(pCRequest));

  00726	6a 1c		 push	 28			; 0000001cH
  00728	6a 06		 push	 6
  0072a	8d 45 d0	 lea	 eax, DWORD PTR _pCRequest$[ebp]
  0072d	50		 push	 eax
  0072e	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  00733	83 c4 0c	 add	 esp, 12			; 0000000cH

; 191  : 	memset(_name, 0, MAX_ACCOUNT_LEN);

  00736	6a 0a		 push	 10			; 0000000aH
  00738	6a 00		 push	 0
  0073a	8d 45 ec	 lea	 eax, DWORD PTR __name$[ebp]
  0073d	50		 push	 eax
  0073e	e8 00 00 00 00	 call	 _memset
  00743	83 c4 0c	 add	 esp, 12			; 0000000cH

; 192  : 
; 193  : 	memcpy(_name, gObj[UserIndex].Name, MAX_ACCOUNT_LEN);

  00746	6a 0a		 push	 10			; 0000000aH
  00748	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  0074b	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00751	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00757	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  0075b	52		 push	 edx
  0075c	8d 45 ec	 lea	 eax, DWORD PTR __name$[ebp]
  0075f	50		 push	 eax
  00760	e8 00 00 00 00	 call	 _memcpy
  00765	83 c4 0c	 add	 esp, 12			; 0000000cH

; 194  : 
; 195  : 	BuxConvert(_name, MAX_ACCOUNT_LEN);

  00768	6a 0a		 push	 10			; 0000000aH
  0076a	8d 45 ec	 lea	 eax, DWORD PTR __name$[ebp]
  0076d	50		 push	 eax
  0076e	e8 00 00 00 00	 call	 ?BuxConvert@@YAXPADH@Z	; BuxConvert
  00773	83 c4 08	 add	 esp, 8

; 196  : 	memcpy(pCRequest.Name, _name, MAX_ACCOUNT_LEN);

  00776	6a 0a		 push	 10			; 0000000aH
  00778	8d 45 ec	 lea	 eax, DWORD PTR __name$[ebp]
  0077b	50		 push	 eax
  0077c	8d 4d de	 lea	 ecx, DWORD PTR _pCRequest$[ebp+14]
  0077f	51		 push	 ecx
  00780	e8 00 00 00 00	 call	 _memcpy
  00785	83 c4 0c	 add	 esp, 12			; 0000000cH

; 197  : 	strcpy(pCRequest.AccountID, gObj[UserIndex].AccountID);

  00788	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  0078b	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00791	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00797	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  0079b	52		 push	 edx
  0079c	8d 45 d3	 lea	 eax, DWORD PTR _pCRequest$[ebp+3]
  0079f	50		 push	 eax
  007a0	e8 00 00 00 00	 call	 _strcpy
  007a5	83 c4 08	 add	 esp, 8

; 198  : 	pCRequest.Number = UserIndex;

  007a8	66 8b 45 08	 mov	 ax, WORD PTR _UserIndex$[ebp]
  007ac	66 89 45 ea	 mov	 WORD PTR _pCRequest$[ebp+26], ax

; 199  : 	// ----
; 200  : 	cDBSMng.Send((char*)&pCRequest, pCRequest.h.size);

  007b0	0f b6 45 d1	 movzx	 eax, BYTE PTR _pCRequest$[ebp+1]
  007b4	50		 push	 eax
  007b5	8d 4d d0	 lea	 ecx, DWORD PTR _pCRequest$[ebp]
  007b8	51		 push	 ecx
  007b9	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  007be	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
$LN5@SendGame:

; 201  : }

  007c3	5f		 pop	 edi
  007c4	5e		 pop	 esi
  007c5	5b		 pop	 ebx
  007c6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  007c9	33 cd		 xor	 ecx, ebp
  007cb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  007d0	8b e5		 mov	 esp, ebp
  007d2	5d		 pop	 ebp
  007d3	c2 04 00	 ret	 4
?SendGame@ConnectEx@@QAEXH@Z ENDP			; ConnectEx::SendGame
_TEXT	ENDS
PUBLIC	?set@PBMSG_HEAD2@@QAEXPAEEEE@Z			; PBMSG_HEAD2::set
PUBLIC	?SendClose@ConnectEx@@QAEXHH@Z			; ConnectEx::SendClose
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pRequest$ = -8						; size = 4
_this$ = -4						; size = 4
_UserIndex$ = 8						; size = 4
_Type$ = 12						; size = 4
?SendClose@ConnectEx@@QAEXHH@Z PROC			; ConnectEx::SendClose
; _this$ = ecx

; 205  : {

  007e0	55		 push	 ebp
  007e1	8b ec		 mov	 ebp, esp
  007e3	83 ec 48	 sub	 esp, 72			; 00000048H
  007e6	53		 push	 ebx
  007e7	56		 push	 esi
  007e8	57		 push	 edi
  007e9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 206  : 	if(!ExConfig.CommonServer.ReConnect)

  007ec	0f b6 05 0c 01
	00 00		 movzx	 eax, BYTE PTR ?ExConfig@@3VcExConfigs@@A+268
  007f3	85 c0		 test	 eax, eax
  007f5	75 0e		 jne	 SHORT $LN1@SendClose

; 207  : 	{
; 208  : 		CloseClient(UserIndex);

  007f7	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  007fa	50		 push	 eax
  007fb	e8 00 00 00 00	 call	 ?CloseClient@@YAXH@Z	; CloseClient
  00800	83 c4 04	 add	 esp, 4

; 209  : 		return;

  00803	eb 43		 jmp	 SHORT $LN2@SendClose
$LN1@SendClose:

; 210  : 	}
; 211  : 	// ----
; 212  : 	CONNECTEX_CLOSE pRequest;
; 213  : 	gObj[UserIndex].DisconnectType = Type;

  00805	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  00808	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0080e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00814	8b 55 0c	 mov	 edx, DWORD PTR _Type$[ebp]
  00817	89 94 01 b0 27
	00 00		 mov	 DWORD PTR [ecx+eax+10160], edx

; 214  : 	pRequest.h.set((LPBYTE)&pRequest, 0xFB, 0xC, sizeof(CONNECTEX_CLOSE));

  0081e	6a 04		 push	 4
  00820	6a 0c		 push	 12			; 0000000cH
  00822	68 fb 00 00 00	 push	 251			; 000000fbH
  00827	8d 45 f8	 lea	 eax, DWORD PTR _pRequest$[ebp]
  0082a	50		 push	 eax
  0082b	8d 4d f8	 lea	 ecx, DWORD PTR _pRequest$[ebp]
  0082e	e8 00 00 00 00	 call	 ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ; PBMSG_HEAD2::set

; 215  : 	DataSend(UserIndex, (LPBYTE)&pRequest, pRequest.h.size);

  00833	0f b6 45 f9	 movzx	 eax, BYTE PTR _pRequest$[ebp+1]
  00837	50		 push	 eax
  00838	8d 4d f8	 lea	 ecx, DWORD PTR _pRequest$[ebp]
  0083b	51		 push	 ecx
  0083c	8b 55 08	 mov	 edx, DWORD PTR _UserIndex$[ebp]
  0083f	52		 push	 edx
  00840	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00845	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@SendClose:

; 216  : }

  00848	5f		 pop	 edi
  00849	5e		 pop	 esi
  0084a	5b		 pop	 ebx
  0084b	8b e5		 mov	 esp, ebp
  0084d	5d		 pop	 ebp
  0084e	c2 08 00	 ret	 8
?SendClose@ConnectEx@@QAEXHH@Z ENDP			; ConnectEx::SendClose
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\include\prodef.h
_TEXT	ENDS
;	COMDAT ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpBuf$ = 8						; size = 4
_head$ = 12						; size = 1
_sub$ = 16						; size = 1
_size$ = 20						; size = 1
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z PROC			; PBMSG_HEAD2::set, COMDAT
; _this$ = ecx

; 104  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 105  : 		lpBuf[0] = 0xC1;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  0000f	c6 00 c1	 mov	 BYTE PTR [eax], 193	; 000000c1H

; 106  : 		lpBuf[1] = size;

  00012	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  00015	8a 4d 14	 mov	 cl, BYTE PTR _size$[ebp]
  00018	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 107  : 		lpBuf[2] = head;

  0001b	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  0001e	8a 4d 0c	 mov	 cl, BYTE PTR _head$[ebp]
  00021	88 48 02	 mov	 BYTE PTR [eax+2], cl

; 108  : 		lpBuf[3] = sub;

  00024	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  00027	8a 4d 10	 mov	 cl, BYTE PTR _sub$[ebp]
  0002a	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 109  : 	};

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 10 00	 ret	 16			; 00000010H
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ENDP			; PBMSG_HEAD2::set
_TEXT	ENDS
PUBLIC	?RecvClose@ConnectEx@@QAEXH@Z			; ConnectEx::RecvClose
EXTRN	?GD_OfflineAfk@CExGDManager@@QAEXHEE@Z:PROC	; CExGDManager::GD_OfflineAfk
EXTRN	?g_ExGDManager@@3VCExGDManager@@A:BYTE		; g_ExGDManager
EXTRN	?GDUpdateData@OfflineMode@@QAEXH@Z:PROC		; OfflineMode::GDUpdateData
EXTRN	?g_OfflineMode@@3VOfflineMode@@A:BYTE		; g_OfflineMode
EXTRN	?GJSetCharacterInfo@@YAXPAUOBJECTSTRUCT@@HH@Z:PROC ; GJSetCharacterInfo
EXTRN	?GCCloseMsgSend@@YAXHE@Z:PROC			; GCCloseMsgSend
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\connectex.cpp
_TEXT	SEGMENT
_lpObj$ = -8						; size = 4
_this$ = -4						; size = 4
_UserIndex$ = 8						; size = 4
?RecvClose@ConnectEx@@QAEXH@Z PROC			; ConnectEx::RecvClose
; _this$ = ecx

; 220  : {

  00860	55		 push	 ebp
  00861	8b ec		 mov	 ebp, esp
  00863	83 ec 48	 sub	 esp, 72			; 00000048H
  00866	53		 push	 ebx
  00867	56		 push	 esi
  00868	57		 push	 edi
  00869	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 221  : 	LPOBJ lpObj = &gObj[UserIndex];

  0086c	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  0086f	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00875	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0087b	89 45 f8	 mov	 DWORD PTR _lpObj$[ebp], eax

; 222  : 
; 223  : #if(OFFLINE_MODE==TRUE)
; 224  : 	if(lpObj->DisconnectType == TRUE)

  0087e	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00881	83 b8 b0 27 00
	00 01		 cmp	 DWORD PTR [eax+10160], 1
  00888	75 51		 jne	 SHORT $LN22@RecvClose

; 225  : 	{
; 226  : 		GCCloseMsgSend(UserIndex, 2);

  0088a	6a 02		 push	 2
  0088c	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  0088f	50		 push	 eax
  00890	e8 00 00 00 00	 call	 ?GCCloseMsgSend@@YAXHE@Z ; GCCloseMsgSend
  00895	83 c4 08	 add	 esp, 8

; 227  : 		//CloseClient(UserIndex);
; 228  : 		lpObj->m_OfflineMode = 1;//lpObj->DisconnectType;

  00898	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0089b	c6 80 d4 28 00
	00 01		 mov	 BYTE PTR [eax+10452], 1

; 229  : 		#if(OFFLINE_MODE_RESTORE)
; 230  : 		GJSetCharacterInfo(lpObj, lpObj->m_Index, 0);

  008a2	6a 00		 push	 0
  008a4	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  008a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  008a9	51		 push	 ecx
  008aa	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  008ad	52		 push	 edx
  008ae	e8 00 00 00 00	 call	 ?GJSetCharacterInfo@@YAXPAUOBJECTSTRUCT@@HH@Z ; GJSetCharacterInfo
  008b3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 231  : 		g_OfflineMode.GDUpdateData(UserIndex);

  008b6	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  008b9	50		 push	 eax
  008ba	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_OfflineMode@@3VOfflineMode@@A ; g_OfflineMode
  008bf	e8 00 00 00 00	 call	 ?GDUpdateData@OfflineMode@@QAEXH@Z ; OfflineMode::GDUpdateData

; 232  : 		#endif
; 233  : 		g_ExGDManager.GD_OfflineAfk(UserIndex, 1, 0);

  008c4	6a 00		 push	 0
  008c6	6a 01		 push	 1
  008c8	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  008cb	50		 push	 eax
  008cc	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExGDManager@@3VCExGDManager@@A ; g_ExGDManager
  008d1	e8 00 00 00 00	 call	 ?GD_OfflineAfk@CExGDManager@@QAEXHEE@Z ; CExGDManager::GD_OfflineAfk

; 234  : 		return;

  008d6	e9 2a 02 00 00	 jmp	 $LN23@RecvClose
$LN22@RecvClose:

; 235  : 	}
; 236  : #endif
; 237  : 
; 238  : 	if(lpObj->DisconnectType == NORM_DC)

  008db	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  008de	83 b8 b0 27 00
	00 00		 cmp	 DWORD PTR [eax+10160], 0
  008e5	75 0e		 jne	 SHORT $LN21@RecvClose

; 239  : 	{
; 240  : 		CloseClient(UserIndex);

  008e7	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  008ea	50		 push	 eax
  008eb	e8 00 00 00 00	 call	 ?CloseClient@@YAXH@Z	; CloseClient
  008f0	83 c4 04	 add	 esp, 4

; 241  : 	}
; 242  : 	else

  008f3	eb 0e		 jmp	 SHORT $LN20@RecvClose
$LN21@RecvClose:

; 243  : 	{
; 244  : 		GCCloseMsgSend(UserIndex, 2);

  008f5	6a 02		 push	 2
  008f7	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  008fa	50		 push	 eax
  008fb	e8 00 00 00 00	 call	 ?GCCloseMsgSend@@YAXHE@Z ; GCCloseMsgSend
  00900	83 c4 08	 add	 esp, 8
$LN20@RecvClose:

; 245  : 	}
; 246  : 
; 247  : 	if(lpObj->DisconnectType == OFFZEN_DC)

  00903	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00906	83 b8 b0 27 00
	00 01		 cmp	 DWORD PTR [eax+10160], 1
  0090d	75 29		 jne	 SHORT $LN19@RecvClose

; 248  : 	{
; 249  : 		lpObj->OffTrade = lpObj->DisconnectType;

  0090f	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00912	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00915	8b 91 b0 27 00
	00		 mov	 edx, DWORD PTR [ecx+10160]
  0091b	89 90 ac 22 00
	00		 mov	 DWORD PTR [eax+8876], edx

; 250  : 		g_ExGDManager.GD_OfflineAfk(UserIndex, 1, 0);

  00921	6a 00		 push	 0
  00923	6a 01		 push	 1
  00925	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  00928	50		 push	 eax
  00929	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExGDManager@@3VCExGDManager@@A ; g_ExGDManager
  0092e	e8 00 00 00 00	 call	 ?GD_OfflineAfk@CExGDManager@@QAEXHEE@Z ; CExGDManager::GD_OfflineAfk
  00933	e9 cd 01 00 00	 jmp	 $LN23@RecvClose
$LN19@RecvClose:

; 251  : 	}
; 252  : 	else if(lpObj->DisconnectType == OFFCR_DC)

  00938	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0093b	83 b8 b0 27 00
	00 02		 cmp	 DWORD PTR [eax+10160], 2
  00942	75 29		 jne	 SHORT $LN17@RecvClose

; 253  : 	{
; 254  : 		lpObj->OffTrade = lpObj->DisconnectType;

  00944	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00947	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0094a	8b 91 b0 27 00
	00		 mov	 edx, DWORD PTR [ecx+10160]
  00950	89 90 ac 22 00
	00		 mov	 DWORD PTR [eax+8876], edx

; 255  : 		g_ExGDManager.GD_OfflineAfk(UserIndex, 1, 0);

  00956	6a 00		 push	 0
  00958	6a 01		 push	 1
  0095a	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  0095d	50		 push	 eax
  0095e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExGDManager@@3VCExGDManager@@A ; g_ExGDManager
  00963	e8 00 00 00 00	 call	 ?GD_OfflineAfk@CExGDManager@@QAEXHEE@Z ; CExGDManager::GD_OfflineAfk
  00968	e9 98 01 00 00	 jmp	 $LN23@RecvClose
$LN17@RecvClose:

; 256  : 	}
; 257  : 	else if(lpObj->DisconnectType == OFFWC_DC)

  0096d	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00970	83 b8 b0 27 00
	00 03		 cmp	 DWORD PTR [eax+10160], 3
  00977	75 29		 jne	 SHORT $LN15@RecvClose

; 258  : 	{
; 259  : 		lpObj->OffTrade = lpObj->DisconnectType;

  00979	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0097c	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0097f	8b 91 b0 27 00
	00		 mov	 edx, DWORD PTR [ecx+10160]
  00985	89 90 ac 22 00
	00		 mov	 DWORD PTR [eax+8876], edx

; 260  : 		g_ExGDManager.GD_OfflineAfk(UserIndex, 1, 0);

  0098b	6a 00		 push	 0
  0098d	6a 01		 push	 1
  0098f	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  00992	50		 push	 eax
  00993	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExGDManager@@3VCExGDManager@@A ; g_ExGDManager
  00998	e8 00 00 00 00	 call	 ?GD_OfflineAfk@CExGDManager@@QAEXHEE@Z ; CExGDManager::GD_OfflineAfk
  0099d	e9 63 01 00 00	 jmp	 $LN23@RecvClose
$LN15@RecvClose:

; 261  : 	}
; 262  : 	else if(lpObj->DisconnectType == OFFWP_DC)

  009a2	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  009a5	83 b8 b0 27 00
	00 04		 cmp	 DWORD PTR [eax+10160], 4
  009ac	75 29		 jne	 SHORT $LN13@RecvClose

; 263  : 	{
; 264  : 		lpObj->OffTrade = lpObj->DisconnectType;

  009ae	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  009b1	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  009b4	8b 91 b0 27 00
	00		 mov	 edx, DWORD PTR [ecx+10160]
  009ba	89 90 ac 22 00
	00		 mov	 DWORD PTR [eax+8876], edx

; 265  : 		g_ExGDManager.GD_OfflineAfk(UserIndex, 1, 0);

  009c0	6a 00		 push	 0
  009c2	6a 01		 push	 1
  009c4	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  009c7	50		 push	 eax
  009c8	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExGDManager@@3VCExGDManager@@A ; g_ExGDManager
  009cd	e8 00 00 00 00	 call	 ?GD_OfflineAfk@CExGDManager@@QAEXHEE@Z ; CExGDManager::GD_OfflineAfk
  009d2	e9 2e 01 00 00	 jmp	 $LN23@RecvClose
$LN13@RecvClose:

; 266  : 	}
; 267  : 	else if(lpObj->DisconnectType == OFFWG_DC)

  009d7	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  009da	83 b8 b0 27 00
	00 05		 cmp	 DWORD PTR [eax+10160], 5
  009e1	75 29		 jne	 SHORT $LN11@RecvClose

; 268  : 	{
; 269  : 		lpObj->OffTrade = lpObj->DisconnectType;

  009e3	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  009e6	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  009e9	8b 91 b0 27 00
	00		 mov	 edx, DWORD PTR [ecx+10160]
  009ef	89 90 ac 22 00
	00		 mov	 DWORD PTR [eax+8876], edx

; 270  : 		g_ExGDManager.GD_OfflineAfk(UserIndex, 1, 0);

  009f5	6a 00		 push	 0
  009f7	6a 01		 push	 1
  009f9	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  009fc	50		 push	 eax
  009fd	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExGDManager@@3VCExGDManager@@A ; g_ExGDManager
  00a02	e8 00 00 00 00	 call	 ?GD_OfflineAfk@CExGDManager@@QAEXHEE@Z ; CExGDManager::GD_OfflineAfk
  00a07	e9 f9 00 00 00	 jmp	 $LN23@RecvClose
$LN11@RecvClose:

; 271  : 	}
; 272  : 	else if(lpObj->DisconnectType == OFFCHAOS_DC)

  00a0c	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00a0f	83 b8 b0 27 00
	00 06		 cmp	 DWORD PTR [eax+10160], 6
  00a16	75 29		 jne	 SHORT $LN9@RecvClose

; 273  : 	{
; 274  : 		lpObj->OffTrade = lpObj->DisconnectType;

  00a18	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00a1b	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00a1e	8b 91 b0 27 00
	00		 mov	 edx, DWORD PTR [ecx+10160]
  00a24	89 90 ac 22 00
	00		 mov	 DWORD PTR [eax+8876], edx

; 275  : 		g_ExGDManager.GD_OfflineAfk(UserIndex, 1, 0);

  00a2a	6a 00		 push	 0
  00a2c	6a 01		 push	 1
  00a2e	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  00a31	50		 push	 eax
  00a32	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExGDManager@@3VCExGDManager@@A ; g_ExGDManager
  00a37	e8 00 00 00 00	 call	 ?GD_OfflineAfk@CExGDManager@@QAEXHEE@Z ; CExGDManager::GD_OfflineAfk
  00a3c	e9 c4 00 00 00	 jmp	 $LN23@RecvClose
$LN9@RecvClose:

; 276  : 	}
; 277  : 	else if(lpObj->DisconnectType == OFFBLESS_DC)

  00a41	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00a44	83 b8 b0 27 00
	00 07		 cmp	 DWORD PTR [eax+10160], 7
  00a4b	75 29		 jne	 SHORT $LN7@RecvClose

; 278  : 	{
; 279  : 		lpObj->OffTrade = lpObj->DisconnectType;

  00a4d	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00a50	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00a53	8b 91 b0 27 00
	00		 mov	 edx, DWORD PTR [ecx+10160]
  00a59	89 90 ac 22 00
	00		 mov	 DWORD PTR [eax+8876], edx

; 280  : 		g_ExGDManager.GD_OfflineAfk(UserIndex, 1, 0);

  00a5f	6a 00		 push	 0
  00a61	6a 01		 push	 1
  00a63	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  00a66	50		 push	 eax
  00a67	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExGDManager@@3VCExGDManager@@A ; g_ExGDManager
  00a6c	e8 00 00 00 00	 call	 ?GD_OfflineAfk@CExGDManager@@QAEXHEE@Z ; CExGDManager::GD_OfflineAfk
  00a71	e9 8f 00 00 00	 jmp	 $LN23@RecvClose
$LN7@RecvClose:

; 281  : 	}
; 282  : 	else if(lpObj->DisconnectType == OFFSOUL_DC)

  00a76	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00a79	83 b8 b0 27 00
	00 08		 cmp	 DWORD PTR [eax+10160], 8
  00a80	75 26		 jne	 SHORT $LN5@RecvClose

; 283  : 	{
; 284  : 		lpObj->OffTrade = lpObj->DisconnectType;

  00a82	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00a85	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00a88	8b 91 b0 27 00
	00		 mov	 edx, DWORD PTR [ecx+10160]
  00a8e	89 90 ac 22 00
	00		 mov	 DWORD PTR [eax+8876], edx

; 285  : 		g_ExGDManager.GD_OfflineAfk(UserIndex, 1, 0);

  00a94	6a 00		 push	 0
  00a96	6a 01		 push	 1
  00a98	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  00a9b	50		 push	 eax
  00a9c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExGDManager@@3VCExGDManager@@A ; g_ExGDManager
  00aa1	e8 00 00 00 00	 call	 ?GD_OfflineAfk@CExGDManager@@QAEXHEE@Z ; CExGDManager::GD_OfflineAfk
  00aa6	eb 5d		 jmp	 SHORT $LN23@RecvClose
$LN5@RecvClose:

; 286  : 	}
; 287  : 	else if(lpObj->DisconnectType == OFFLIFE_DC)

  00aa8	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00aab	83 b8 b0 27 00
	00 09		 cmp	 DWORD PTR [eax+10160], 9
  00ab2	75 26		 jne	 SHORT $LN3@RecvClose

; 288  : 	{
; 289  : 		lpObj->OffTrade = lpObj->DisconnectType;

  00ab4	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00ab7	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00aba	8b 91 b0 27 00
	00		 mov	 edx, DWORD PTR [ecx+10160]
  00ac0	89 90 ac 22 00
	00		 mov	 DWORD PTR [eax+8876], edx

; 290  : 		g_ExGDManager.GD_OfflineAfk(UserIndex, 1, 0);

  00ac6	6a 00		 push	 0
  00ac8	6a 01		 push	 1
  00aca	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  00acd	50		 push	 eax
  00ace	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExGDManager@@3VCExGDManager@@A ; g_ExGDManager
  00ad3	e8 00 00 00 00	 call	 ?GD_OfflineAfk@CExGDManager@@QAEXHEE@Z ; CExGDManager::GD_OfflineAfk
  00ad8	eb 2b		 jmp	 SHORT $LN23@RecvClose
$LN3@RecvClose:

; 291  : 	}
; 292  : 	else if(lpObj->DisconnectType == OFFAFK_DC)

  00ada	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00add	83 b8 b0 27 00
	00 14		 cmp	 DWORD PTR [eax+10160], 20 ; 00000014H
  00ae4	75 1f		 jne	 SHORT $LN23@RecvClose

; 293  : 	{
; 294  : 		lpObj->OffExp = 1;

  00ae6	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00ae9	c7 80 98 22 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+8856], 1

; 295  : 		g_ExGDManager.GD_OfflineAfk(UserIndex, 1, 1);

  00af3	6a 01		 push	 1
  00af5	6a 01		 push	 1
  00af7	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  00afa	50		 push	 eax
  00afb	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExGDManager@@3VCExGDManager@@A ; g_ExGDManager
  00b00	e8 00 00 00 00	 call	 ?GD_OfflineAfk@CExGDManager@@QAEXHEE@Z ; CExGDManager::GD_OfflineAfk
$LN23@RecvClose:

; 296  : 		
; 297  : 	}
; 298  : 
; 299  : 	
; 300  : }

  00b05	5f		 pop	 edi
  00b06	5e		 pop	 esi
  00b07	5b		 pop	 ebx
  00b08	8b e5		 mov	 esp, ebp
  00b0a	5d		 pop	 ebp
  00b0b	c2 04 00	 ret	 4
?RecvClose@ConnectEx@@QAEXH@Z ENDP			; ConnectEx::RecvClose
_TEXT	ENDS
PUBLIC	?Timer@ConnectEx@@QAEXXZ			; ConnectEx::Timer
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_ConnectTime$ = -8					; size = 4
_this$ = -4						; size = 4
?Timer@ConnectEx@@QAEXXZ PROC				; ConnectEx::Timer
; _this$ = ecx

; 304  : {

  00b10	55		 push	 ebp
  00b11	8b ec		 mov	 ebp, esp
  00b13	83 ec 48	 sub	 esp, 72			; 00000048H
  00b16	53		 push	 ebx
  00b17	56		 push	 esi
  00b18	57		 push	 edi
  00b19	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 305  : 	if(!ExConfig.CommonServer.ReConnect)

  00b1c	0f b6 05 0c 01
	00 00		 movzx	 eax, BYTE PTR ?ExConfig@@3VcExConfigs@@A+268
  00b23	85 c0		 test	 eax, eax
  00b25	75 02		 jne	 SHORT $LN3@Timer

; 306  : 	{
; 307  : 		return;

  00b27	eb 35		 jmp	 SHORT $LN4@Timer
$LN3@Timer:

; 308  : 	}
; 309  : 
; 310  : 	if(this->ConnectIndex == -1)

  00b29	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b2c	83 38 ff	 cmp	 DWORD PTR [eax], -1
  00b2f	75 02		 jne	 SHORT $LN2@Timer

; 311  : 	{
; 312  : 		return;

  00b31	eb 2b		 jmp	 SHORT $LN4@Timer
$LN2@Timer:

; 313  : 	}
; 314  : 
; 315  : 	DWORD ConnectTime = GetTickCount() - this->ConnectTick;

  00b33	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00b39	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b3c	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00b3f	89 45 f8	 mov	 DWORD PTR _ConnectTime$[ebp], eax

; 316  : 
; 317  : 	if(ConnectTime > 1000)

  00b42	81 7d f8 e8 03
	00 00		 cmp	 DWORD PTR _ConnectTime$[ebp], 1000 ; 000003e8H
  00b49	76 13		 jbe	 SHORT $LN4@Timer

; 318  : 	{
; 319  : 		this->ConnectIndex = -1;

  00b4b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b4e	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1

; 320  : 		this->ConnectTick = 0;

  00b54	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b57	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN4@Timer:

; 321  : 	}
; 322  : }

  00b5e	5f		 pop	 edi
  00b5f	5e		 pop	 esi
  00b60	5b		 pop	 ebx
  00b61	8b e5		 mov	 esp, ebp
  00b63	5d		 pop	 ebp
  00b64	c3		 ret	 0
?Timer@ConnectEx@@QAEXXZ ENDP				; ConnectEx::Timer
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??__Eg_ConnectEx@@YAXXZ
text$yc	SEGMENT
??__Eg_ConnectEx@@YAXXZ PROC				; `dynamic initializer for 'g_ConnectEx'', COMDAT

; 20   : ConnectEx g_ConnectEx;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ConnectEx@@3VConnectEx@@A ; g_ConnectEx
  0000e	e8 00 00 00 00	 call	 ??0ConnectEx@@QAE@XZ	; ConnectEx::ConnectEx
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__Eg_ConnectEx@@YAXXZ ENDP				; `dynamic initializer for 'g_ConnectEx''
text$yc	ENDS
PUBLIC	?g_ConnectEx@@3VConnectEx@@A			; g_ConnectEx
_BSS	SEGMENT
?g_ConnectEx@@3VConnectEx@@A DQ 01H DUP (?)		; g_ConnectEx
_BSS	ENDS
CRT$XCU	SEGMENT
_g_ConnectEx$initializer$ DD FLAT:??__Eg_ConnectEx@@YAXXZ
CRT$XCU	ENDS
END
