; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\JewelMixSystem.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
_g_JewelMixInfo DD 0aH
	DD	07a120H
	DD	01c0dH
	DD	0181eH
	DD	014H
	DD	0f4240H
	DD	01c0dH
	DD	0181eH
	DD	01eH
	DD	016e360H
	DD	01c0dH
	DD	0181eH
	DD	0aH
	DD	07a120H
	DD	01c0eH
	DD	0181fH
	DD	014H
	DD	0f4240H
	DD	01c0eH
	DD	0181fH
	DD	01eH
	DD	016e360H
	DD	01c0eH
	DD	0181fH
	DD	0aH
	DD	07a120H
	DD	01c10H
	DD	01888H
	DD	014H
	DD	0f4240H
	DD	01c10H
	DD	01888H
	DD	01eH
	DD	016e360H
	DD	01c10H
	DD	01888H
	DD	0aH
	DD	07a120H
	DD	01c16H
	DD	01889H
	DD	014H
	DD	0f4240H
	DD	01c16H
	DD	01889H
	DD	01eH
	DD	016e360H
	DD	01c16H
	DD	01889H
	DD	0aH
	DD	07a120H
	DD	01c1fH
	DD	0188aH
	DD	014H
	DD	0f4240H
	DD	01c1fH
	DD	0188aH
	DD	01eH
	DD	016e360H
	DD	01c1fH
	DD	0188aH
	DD	0aH
	DD	07a120H
	DD	01c29H
	DD	0188bH
	DD	014H
	DD	0f4240H
	DD	01c29H
	DD	0188bH
	DD	01eH
	DD	016e360H
	DD	01c29H
	DD	0188bH
	DD	0aH
	DD	07a120H
	DD	01c2aH
	DD	0188cH
	DD	014H
	DD	0f4240H
	DD	01c2aH
	DD	0188cH
	DD	01eH
	DD	016e360H
	DD	01c2aH
	DD	0188cH
	DD	0aH
	DD	07a120H
	DD	0180fH
	DD	0188dH
	DD	014H
	DD	0f4240H
	DD	0180fH
	DD	0188dH
	DD	01eH
	DD	016e360H
	DD	0180fH
	DD	0188dH
	DD	0aH
	DD	07a120H
	DD	01c2bH
	DD	0188eH
	DD	014H
	DD	0f4240H
	DD	01c2bH
	DD	0188eH
	DD	01eH
	DD	016e360H
	DD	01c2bH
	DD	0188eH
	DD	0aH
	DD	07a120H
	DD	01c2cH
	DD	0188fH
	DD	014H
	DD	0f4240H
	DD	01c2cH
	DD	0188fH
	DD	01eH
	DD	016e360H
	DD	01c2cH
	DD	0188fH
CONST	ENDS
_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_7CJewelMixSystem@@6B@			; CJewelMixSystem::`vftable'
PUBLIC	??0CJewelMixSystem@@QAE@XZ			; CJewelMixSystem::CJewelMixSystem
PUBLIC	??_R4CJewelMixSystem@@6B@			; CJewelMixSystem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCJewelMixSystem@@@8			; CJewelMixSystem `RTTI Type Descriptor'
PUBLIC	??_R3CJewelMixSystem@@8				; CJewelMixSystem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CJewelMixSystem@@8				; CJewelMixSystem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CJewelMixSystem@@8		; CJewelMixSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECJewelMixSystem@@UAEPAXI@Z:PROC		; CJewelMixSystem::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CJewelMixSystem@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\jewelmixsystem.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CJewelMixSystem@@8 DD FLAT:??_R0?AVCJewelMixSystem@@@8 ; CJewelMixSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CJewelMixSystem@@8
rdata$r	ENDS
;	COMDAT ??_R2CJewelMixSystem@@8
rdata$r	SEGMENT
??_R2CJewelMixSystem@@8 DD FLAT:??_R1A@?0A@EA@CJewelMixSystem@@8 ; CJewelMixSystem::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CJewelMixSystem@@8
rdata$r	SEGMENT
??_R3CJewelMixSystem@@8 DD 00H				; CJewelMixSystem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CJewelMixSystem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCJewelMixSystem@@@8
_DATA	SEGMENT
??_R0?AVCJewelMixSystem@@@8 DD FLAT:??_7type_info@@6B@	; CJewelMixSystem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCJewelMixSystem@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CJewelMixSystem@@6B@
rdata$r	SEGMENT
??_R4CJewelMixSystem@@6B@ DD 00H			; CJewelMixSystem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCJewelMixSystem@@@8
	DD	FLAT:??_R3CJewelMixSystem@@8
rdata$r	ENDS
;	COMDAT ??_7CJewelMixSystem@@6B@
CONST	SEGMENT
??_7CJewelMixSystem@@6B@ DD FLAT:??_R4CJewelMixSystem@@6B@ ; CJewelMixSystem::`vftable'
	DD	FLAT:??_ECJewelMixSystem@@UAEPAXI@Z
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CJewelMixSystem@@QAE@XZ PROC				; CJewelMixSystem::CJewelMixSystem
; _this$ = ecx

; 13   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CJewelMixSystem@@6B@

; 14   : 	return;
; 15   : }

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CJewelMixSystem@@QAE@XZ ENDP				; CJewelMixSystem::CJewelMixSystem
_TEXT	ENDS
PUBLIC	??1CJewelMixSystem@@UAE@XZ			; CJewelMixSystem::~CJewelMixSystem
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCJewelMixSystem@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCJewelMixSystem@@UAEPAXI@Z PROC			; CJewelMixSystem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CJewelMixSystem@@UAE@XZ ; CJewelMixSystem::~CJewelMixSystem
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCJewelMixSystem@@UAEPAXI@Z ENDP			; CJewelMixSystem::`scalar deleting destructor'
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CJewelMixSystem@@UAE@XZ PROC				; CJewelMixSystem::~CJewelMixSystem
; _this$ = ecx

; 18   : {

  00020	55		 push	 ebp
  00021	8b ec		 mov	 ebp, esp
  00023	83 ec 44	 sub	 esp, 68			; 00000044H
  00026	53		 push	 ebx
  00027	56		 push	 esi
  00028	57		 push	 edi
  00029	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CJewelMixSystem@@6B@

; 19   : 	return;
; 20   : }

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??1CJewelMixSystem@@UAE@XZ ENDP				; CJewelMixSystem::~CJewelMixSystem
_TEXT	ENDS
PUBLIC	?GetJewelCount@CJewelMixSystem@@SAHHH@Z		; CJewelMixSystem::GetJewelCount
EXTRN	?gObjGetItemCountInIventory@@YAHHH@Z:PROC	; gObjGetItemCountInIventory
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv67 = -76						; size = 4
_iItemCount$ = -8					; size = 4
_iItemType$ = -4					; size = 4
_iIndex$ = 8						; size = 4
_iJewelType$ = 12					; size = 4
?GetJewelCount@CJewelMixSystem@@SAHHH@Z PROC		; CJewelMixSystem::GetJewelCount

; 23   : {

  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
  00043	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00046	53		 push	 ebx
  00047	56		 push	 esi
  00048	57		 push	 edi

; 24   : 	if ( !gObjIsConnected(iIndex) )

  00049	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00052	83 c4 04	 add	 esp, 4
  00055	85 c0		 test	 eax, eax
  00057	75 05		 jne	 SHORT $LN6@GetJewelCo

; 25   : 	{
; 26   : 		return -1;

  00059	83 c8 ff	 or	 eax, -1
  0005c	eb 41		 jmp	 SHORT $LN7@GetJewelCo
$LN6@GetJewelCo:

; 27   : 	}
; 28   : 
; 29   : 	int iItemType;
; 30   : 
; 31   : 	switch( iJewelType )

  0005e	8b 45 0c	 mov	 eax, DWORD PTR _iJewelType$[ebp]
  00061	89 45 b4	 mov	 DWORD PTR tv67[ebp], eax
  00064	83 7d b4 00	 cmp	 DWORD PTR tv67[ebp], 0
  00068	74 08		 je	 SHORT $LN3@GetJewelCo
  0006a	83 7d b4 01	 cmp	 DWORD PTR tv67[ebp], 1
  0006e	74 0b		 je	 SHORT $LN2@GetJewelCo
  00070	eb 12		 jmp	 SHORT $LN1@GetJewelCo
$LN3@GetJewelCo:

; 32   : 	{
; 33   : 		case 0:
; 34   : 			iItemType = ITEMGET(14,13);

  00072	c7 45 fc 0d 1c
	00 00		 mov	 DWORD PTR _iItemType$[ebp], 7181 ; 00001c0dH

; 35   : 			break;

  00079	eb 0e		 jmp	 SHORT $LN4@GetJewelCo
$LN2@GetJewelCo:

; 36   : 		case 1:
; 37   : 			iItemType = ITEMGET(14,14);

  0007b	c7 45 fc 0e 1c
	00 00		 mov	 DWORD PTR _iItemType$[ebp], 7182 ; 00001c0eH

; 38   : 			break;

  00082	eb 05		 jmp	 SHORT $LN4@GetJewelCo
$LN1@GetJewelCo:

; 39   : 		default:
; 40   : 			return -1;

  00084	83 c8 ff	 or	 eax, -1
  00087	eb 16		 jmp	 SHORT $LN7@GetJewelCo
$LN4@GetJewelCo:

; 41   : 	}	
; 42   : 	
; 43   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  00089	8b 45 fc	 mov	 eax, DWORD PTR _iItemType$[ebp]
  0008c	50		 push	 eax
  0008d	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ?gObjGetItemCountInIventory@@YAHHH@Z ; gObjGetItemCountInIventory
  00096	83 c4 08	 add	 esp, 8
  00099	89 45 f8	 mov	 DWORD PTR _iItemCount$[ebp], eax

; 44   : 
; 45   : 	return iItemCount;

  0009c	8b 45 f8	 mov	 eax, DWORD PTR _iItemCount$[ebp]
$LN7@GetJewelCo:

; 46   : }

  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	5b		 pop	 ebx
  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c3		 ret	 0
?GetJewelCount@CJewelMixSystem@@SAHHH@Z ENDP		; CJewelMixSystem::GetJewelCount
_TEXT	ENDS
PUBLIC	?GetJewelCountPerLevel@CJewelMixSystem@@SAHHH@Z	; CJewelMixSystem::GetJewelCountPerLevel
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv69 = -72						; size = 4
tv67 = -72						; size = 4
_iJewelCount$ = -4					; size = 4
_iJewelType$ = 8					; size = 4
_iJewelLevel$ = 12					; size = 4
?GetJewelCountPerLevel@CJewelMixSystem@@SAHHH@Z PROC	; CJewelMixSystem::GetJewelCountPerLevel

; 108  : {

  000b0	55		 push	 ebp
  000b1	8b ec		 mov	 ebp, esp
  000b3	83 ec 48	 sub	 esp, 72			; 00000048H
  000b6	53		 push	 ebx
  000b7	56		 push	 esi
  000b8	57		 push	 edi

; 109  : 	if ( !CHECK_LIMIT(iJewelLevel, 3) )

  000b9	83 7d 0c 00	 cmp	 DWORD PTR _iJewelLevel$[ebp], 0
  000bd	7d 09		 jge	 SHORT $LN9@GetJewelCo@2
  000bf	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
  000c6	eb 0c		 jmp	 SHORT $LN10@GetJewelCo@2
$LN9@GetJewelCo@2:
  000c8	33 c0		 xor	 eax, eax
  000ca	83 7d 0c 02	 cmp	 DWORD PTR _iJewelLevel$[ebp], 2
  000ce	0f 9e c0	 setle	 al
  000d1	89 45 b8	 mov	 DWORD PTR tv67[ebp], eax
$LN10@GetJewelCo@2:
  000d4	83 7d b8 00	 cmp	 DWORD PTR tv67[ebp], 0
  000d8	75 07		 jne	 SHORT $LN6@GetJewelCo@2

; 110  : 	{
; 111  : 		return -1;

  000da	b8 ff ff ff ff	 mov	 eax, -1
  000df	eb 45		 jmp	 SHORT $LN7@GetJewelCo@2
$LN6@GetJewelCo@2:

; 112  : 	}
; 113  : 
; 114  : 	int iJewelCount = 0;

  000e1	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _iJewelCount$[ebp], 0

; 115  : 
; 116  : 	switch ( iJewelType )

  000e8	8b 45 08	 mov	 eax, DWORD PTR _iJewelType$[ebp]
  000eb	89 45 b8	 mov	 DWORD PTR tv69[ebp], eax
  000ee	83 7d b8 00	 cmp	 DWORD PTR tv69[ebp], 0
  000f2	74 08		 je	 SHORT $LN3@GetJewelCo@2
  000f4	83 7d b8 01	 cmp	 DWORD PTR tv69[ebp], 1
  000f8	74 13		 je	 SHORT $LN2@GetJewelCo@2
  000fa	eb 22		 jmp	 SHORT $LN1@GetJewelCo@2
$LN3@GetJewelCo@2:

; 117  : 	{
; 118  : 		case 0:
; 119  : 			iJewelCount = g_JewelMixInfo[0][iJewelLevel].m_iJewelCount;

  000fc	8b 45 0c	 mov	 eax, DWORD PTR _iJewelLevel$[ebp]
  000ff	c1 e0 04	 shl	 eax, 4
  00102	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR _g_JewelMixInfo[eax]
  00108	89 4d fc	 mov	 DWORD PTR _iJewelCount$[ebp], ecx

; 120  : 			break;

  0010b	eb 16		 jmp	 SHORT $LN4@GetJewelCo@2
$LN2@GetJewelCo@2:

; 121  : 		case 1:
; 122  : 			iJewelCount = g_JewelMixInfo[1][iJewelLevel].m_iJewelCount;

  0010d	8b 45 0c	 mov	 eax, DWORD PTR _iJewelLevel$[ebp]
  00110	c1 e0 04	 shl	 eax, 4
  00113	8b 88 30 00 00
	00		 mov	 ecx, DWORD PTR _g_JewelMixInfo[eax+48]
  00119	89 4d fc	 mov	 DWORD PTR _iJewelCount$[ebp], ecx

; 123  : 			break;

  0011c	eb 05		 jmp	 SHORT $LN4@GetJewelCo@2
$LN1@GetJewelCo@2:

; 124  : 		default:
; 125  : 			return -1;

  0011e	83 c8 ff	 or	 eax, -1
  00121	eb 03		 jmp	 SHORT $LN7@GetJewelCo@2
$LN4@GetJewelCo@2:

; 126  : 	}
; 127  : 
; 128  : 	return iJewelCount;

  00123	8b 45 fc	 mov	 eax, DWORD PTR _iJewelCount$[ebp]
$LN7@GetJewelCo@2:

; 129  : }

  00126	5f		 pop	 edi
  00127	5e		 pop	 esi
  00128	5b		 pop	 ebx
  00129	8b e5		 mov	 esp, ebp
  0012b	5d		 pop	 ebp
  0012c	c3		 ret	 0
?GetJewelCountPerLevel@CJewelMixSystem@@SAHHH@Z ENDP	; CJewelMixSystem::GetJewelCountPerLevel
_TEXT	ENDS
PUBLIC	??_C@_0ED@HHDMIPHA@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5mix?5su@ ; `string'
PUBLIC	??_C@_0EB@CGBJCOEC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@ ; `string'
PUBLIC	??_C@_0EF@MGNDHNGK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5?9?5Delete@ ; `string'
PUBLIC	??_C@_0DD@POEJCDHP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@ ; `string'
PUBLIC	??_C@_0DD@MDOHHKOF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@ ; `string'
PUBLIC	??_C@_0DC@DMKIAJAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iMixType?5is?5@ ; `string'
PUBLIC	??_C@_0DI@EAGHMBJE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5iJewelTy@ ; `string'
PUBLIC	??_C@_0DB@PNODFJDP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Chaos?5Mix?5is@ ; `string'
PUBLIC	??_C@_0DA@OJHOMLLG@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLMix?5@ ; `string'
PUBLIC	??_C@_0CL@FOELPEPL@?$FLANTI?9HACK?$FN?$FLprotocol?$FN?5?$FLMix?5Jewel@ ; `string'
PUBLIC	?MixJewel@CJewelMixSystem@@SAHHHH@Z		; CJewelMixSystem::MixJewel
EXTRN	?GCMoneySend@@YAXHK@Z:PROC			; GCMoneySend
EXTRN	?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z:PROC	; ItemSerialCreateSend
EXTRN	?OnRequestPeriodItemList@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@@Z:PROC ; CPeriodItemEx::OnRequestPeriodItemList
EXTRN	?g_PeriodItemEx@@3VCPeriodItemEx@@A:BYTE	; g_PeriodItemEx
EXTRN	?GCItemListSend@@YAXH@Z:PROC			; GCItemListSend
EXTRN	?Clear@CItem@@QAEXXZ:PROC			; CItem::Clear
EXTRN	?gObjInventoryItemSet@@YAXHHE@Z:PROC		; gObjInventoryItemSet
EXTRN	?IsItem@CItem@@QAEHXZ:PROC			; CItem::IsItem
EXTRN	?MsgOutput@@YAXHPADZZ:PROC			; MsgOutput
EXTRN	?Get@CMsg@@QAEPADH@Z:PROC			; CMsg::Get
EXTRN	?lMsg@@3VCMsg@@A:BYTE				; lMsg
EXTRN	?gObjCheckInventorySerial0Item@@YAHPAUOBJECTSTRUCT@@@Z:PROC ; gObjCheckInventorySerial0Item
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?GCAnsJewelMix@@YAXHH@Z:PROC			; GCAnsJewelMix
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
;	COMDAT ??_C@_0ED@HHDMIPHA@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5mix?5su@
CONST	SEGMENT
??_C@_0ED@HHDMIPHA@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5mix?5su@ DB '['
	DB	'JewelMix] [%s][%s] jewel mix succeed : ItemType:%d, JewelCoun'
	DB	't:%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@CGBJCOEC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@
CONST	SEGMENT
??_C@_0EB@CGBJCOEC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@ DB '['
	DB	'JewelMix] [%s][%s] lack of jewel to mix (in deleting) : %d / '
	DB	'%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@MGNDHNGK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5?9?5Delete@
CONST	SEGMENT
??_C@_0EF@MGNDHNGK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5?9?5Delete@ DB '['
	DB	'JewelMix] [%s][%s] Mix - Delete Jewel, Type:%d, Level:%d, Ser'
	DB	'ial:%u', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@POEJCDHP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@
CONST	SEGMENT
??_C@_0DD@POEJCDHP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@ DB '['
	DB	'JewelMix] [%s][%s] lack of money to mix : %d / %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@MDOHHKOF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@
CONST	SEGMENT
??_C@_0DD@MDOHHKOF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@ DB '['
	DB	'JewelMix] [%s][%s] lack of jewel to mix : %d / %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@DMKIAJAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iMixType?5is?5@
CONST	SEGMENT
??_C@_0DC@DMKIAJAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iMixType?5is?5@ DB '['
	DB	'JewelMix] [%s][%s] iMixType is out of bound : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@EAGHMBJE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5iJewelTy@
CONST	SEGMENT
??_C@_0DI@EAGHMBJE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5iJewelTy@ DB '['
	DB	'JewelMix] [%s][%s] Mix iJewelType is out of bound : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@PNODFJDP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Chaos?5Mix?5is@
CONST	SEGMENT
??_C@_0DB@PNODFJDP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Chaos?5Mix?5is@ DB '['
	DB	'JewelMix] [%s][%s] Chaos Mix is already working', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@OJHOMLLG@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLMix?5@
CONST	SEGMENT
??_C@_0DA@OJHOMLLG@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLMix?5@ DB '['
	DB	'ANTI-HACK][Serial 0 Item] [Mix Jewel] (%s)(%s)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@FOELPEPL@?$FLANTI?9HACK?$FN?$FLprotocol?$FN?5?$FLMix?5Jewel@
CONST	SEGMENT
??_C@_0CL@FOELPEPL@?$FLANTI?9HACK?$FN?$FLprotocol?$FN?5?$FLMix?5Jewel@ DB '['
	DB	'ANTI-HACK][protocol] [Mix Jewel] (%s)(%s)', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
tv180 = -104						; size = 4
tv160 = -104						; size = 4
_x$228224 = -36						; size = 4
_bItemDelOK$ = -32					; size = 4
_iDelJewelCount$ = -28					; size = 4
_iUserJewelCount$ = -24					; size = 4
_iChangeType$ = -20					; size = 4
_iMixMoney$ = -16					; size = 4
_iJewelCount$ = -12					; size = 4
_iItemType$ = -8					; size = 4
_lpIfState$ = -4					; size = 4
_iIndex$ = 8						; size = 4
_iJewelType$ = 12					; size = 4
_iMixType$ = 16						; size = 4
?MixJewel@CJewelMixSystem@@SAHHHH@Z PROC		; CJewelMixSystem::MixJewel

; 133  : {

  00130	55		 push	 ebp
  00131	8b ec		 mov	 ebp, esp
  00133	83 ec 68	 sub	 esp, 104		; 00000068H
  00136	53		 push	 ebx
  00137	56		 push	 esi
  00138	57		 push	 edi

; 134  : 	if( !gObjIsConnected(iIndex) )

  00139	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00142	83 c4 04	 add	 esp, 4
  00145	85 c0		 test	 eax, eax
  00147	75 07		 jne	 SHORT $LN17@MixJewel

; 135  : 	{
; 136  : 		return false;

  00149	33 c0		 xor	 eax, eax
  0014b	e9 77 07 00 00	 jmp	 $LN18@MixJewel
$LN17@MixJewel:

; 137  : 	}
; 138  : 	// ----
; 139  : 	LPINTERFACE_STATE lpIfState = &gObj[iIndex].m_IfState;

  00150	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00153	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00159	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0015f	8d 94 01 1c 0e
	00 00		 lea	 edx, DWORD PTR [ecx+eax+3612]
  00166	89 55 fc	 mov	 DWORD PTR _lpIfState$[ebp], edx

; 140  : 	// ----
; 141  : 	if( lpIfState->use != 1 || lpIfState->type != 20 )

  00169	8b 45 fc	 mov	 eax, DWORD PTR _lpIfState$[ebp]
  0016c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016e	83 e1 03	 and	 ecx, 3
  00171	83 f9 01	 cmp	 ecx, 1
  00174	75 13		 jne	 SHORT $LN15@MixJewel
  00176	8b 45 fc	 mov	 eax, DWORD PTR _lpIfState$[ebp]
  00179	8b 08		 mov	 ecx, DWORD PTR [eax]
  0017b	c1 e9 06	 shr	 ecx, 6
  0017e	81 e1 ff 03 00
	00		 and	 ecx, 1023		; 000003ffH
  00184	83 f9 14	 cmp	 ecx, 20			; 00000014H
  00187	74 4b		 je	 SHORT $LN16@MixJewel
$LN15@MixJewel:

; 142  : 	{
; 143  : 		GCAnsJewelMix(iIndex, 6);	//-> 6: Protect

  00189	6a 06		 push	 6
  0018b	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0018e	50		 push	 eax
  0018f	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  00194	83 c4 08	 add	 esp, 8

; 144  : 		LogAddTD("[ANTI-HACK][protocol] [Mix Jewel] (%s)(%s)", gObj[iIndex].AccountID, gObj[iIndex].Name);

  00197	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0019a	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  001a0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001a6	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  001aa	52		 push	 edx
  001ab	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  001ae	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  001b4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001ba	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  001be	52		 push	 edx
  001bf	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@FOELPEPL@?$FLANTI?9HACK?$FN?$FLprotocol?$FN?5?$FLMix?5Jewel@
  001c4	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  001ca	83 c4 0c	 add	 esp, 12			; 0000000cH

; 145  : 		// ----
; 146  : 		return false;

  001cd	33 c0		 xor	 eax, eax
  001cf	e9 f3 06 00 00	 jmp	 $LN18@MixJewel
$LN16@MixJewel:

; 147  : 	}
; 148  : 	// ----
; 149  : 	if( gObjCheckInventorySerial0Item(&gObj[iIndex]) )

  001d4	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  001d7	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  001dd	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001e3	50		 push	 eax
  001e4	e8 00 00 00 00	 call	 ?gObjCheckInventorySerial0Item@@YAHPAUOBJECTSTRUCT@@@Z ; gObjCheckInventorySerial0Item
  001e9	83 c4 04	 add	 esp, 4
  001ec	85 c0		 test	 eax, eax
  001ee	74 67		 je	 SHORT $LN14@MixJewel

; 150  : 	{
; 151  : 		MsgOutput(iIndex, lMsg.Get(3354));

  001f0	68 1a 0d 00 00	 push	 3354			; 00000d1aH
  001f5	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  001fa	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  001ff	50		 push	 eax
  00200	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00203	50		 push	 eax
  00204	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  00209	83 c4 08	 add	 esp, 8

; 152  : 		GCAnsJewelMix(iIndex, 4);	//-> 4: Serial

  0020c	6a 04		 push	 4
  0020e	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00211	50		 push	 eax
  00212	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  00217	83 c4 08	 add	 esp, 8

; 153  : 		LogAddTD("[ANTI-HACK][Serial 0 Item] [Mix Jewel] (%s)(%s)", gObj[iIndex].AccountID, gObj[iIndex].Name);

  0021a	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0021d	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00223	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00229	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  0022d	52		 push	 edx
  0022e	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00231	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00237	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0023d	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  00241	52		 push	 edx
  00242	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@OJHOMLLG@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLMix?5@
  00247	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0024d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 154  : 		// ----
; 155  : 		return false;

  00250	33 c0		 xor	 eax, eax
  00252	e9 70 06 00 00	 jmp	 $LN18@MixJewel
$LN14@MixJewel:

; 156  : 	}
; 157  : 	// ----
; 158  : 	if( gObj[iIndex].ChaosLock )

  00257	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0025a	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00260	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00266	83 bc 01 88 0e
	00 00 00	 cmp	 DWORD PTR [ecx+eax+3720], 0
  0026e	74 4b		 je	 SHORT $LN13@MixJewel

; 159  : 	{
; 160  : 		LogAddTD("[JewelMix] [%s][%s] Chaos Mix is already working", gObj[iIndex].AccountID, gObj[iIndex].Name);

  00270	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00273	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00279	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0027f	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  00283	52		 push	 edx
  00284	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00287	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0028d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00293	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  00297	52		 push	 edx
  00298	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@PNODFJDP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Chaos?5Mix?5is@
  0029d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  002a3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 161  : 		GCAnsJewelMix(iIndex, 0);	//-> 0: ChaosState

  002a6	6a 00		 push	 0
  002a8	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  002ab	50		 push	 eax
  002ac	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  002b1	83 c4 08	 add	 esp, 8

; 162  : 		// ----
; 163  : 		return false;

  002b4	33 c0		 xor	 eax, eax
  002b6	e9 0c 06 00 00	 jmp	 $LN18@MixJewel
$LN13@MixJewel:

; 164  : 	}
; 165  : 	// ----
; 166  : 	gObj[iIndex].ChaosLock = true;

  002bb	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  002be	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  002c4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002ca	c7 84 01 88 0e
	00 00 01 00 00
	00		 mov	 DWORD PTR [ecx+eax+3720], 1

; 167  : 	// ----
; 168  : 	if( !CHECK_LIMIT(iJewelType, 10) )

  002d5	83 7d 0c 00	 cmp	 DWORD PTR _iJewelType$[ebp], 0
  002d9	7d 09		 jge	 SHORT $LN20@MixJewel
  002db	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv160[ebp], 0
  002e2	eb 0c		 jmp	 SHORT $LN21@MixJewel
$LN20@MixJewel:
  002e4	33 c0		 xor	 eax, eax
  002e6	83 7d 0c 09	 cmp	 DWORD PTR _iJewelType$[ebp], 9
  002ea	0f 9e c0	 setle	 al
  002ed	89 45 98	 mov	 DWORD PTR tv160[ebp], eax
$LN21@MixJewel:
  002f0	83 7d 98 00	 cmp	 DWORD PTR tv160[ebp], 0
  002f4	75 69		 jne	 SHORT $LN12@MixJewel

; 169  : 	{
; 170  : 		LogAddTD("[JewelMix] [%s][%s] Mix iJewelType is out of bound : %d", gObj[iIndex].AccountID, gObj[iIndex].Name, iJewelType);

  002f6	8b 45 0c	 mov	 eax, DWORD PTR _iJewelType$[ebp]
  002f9	50		 push	 eax
  002fa	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  002fd	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00303	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00309	8d 44 0a 77	 lea	 eax, DWORD PTR [edx+ecx+119]
  0030d	50		 push	 eax
  0030e	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00311	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00317	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0031d	8d 44 0a 6c	 lea	 eax, DWORD PTR [edx+ecx+108]
  00321	50		 push	 eax
  00322	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@EAGHMBJE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5iJewelTy@
  00327	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0032d	83 c4 10	 add	 esp, 16			; 00000010H

; 171  : 		gObj[iIndex].ChaosLock = false;

  00330	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00333	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00339	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0033f	c7 84 01 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+3720], 0

; 172  : 		GCAnsJewelMix(iIndex, 2);	//-> 2: JewelType

  0034a	6a 02		 push	 2
  0034c	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0034f	50		 push	 eax
  00350	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  00355	83 c4 08	 add	 esp, 8

; 173  : 		// ----
; 174  : 		return false;

  00358	33 c0		 xor	 eax, eax
  0035a	e9 68 05 00 00	 jmp	 $LN18@MixJewel
$LN12@MixJewel:

; 175  : 	}
; 176  : 	// ----
; 177  : 	if( !CHECK_LIMIT(iMixType, 3) )

  0035f	83 7d 10 00	 cmp	 DWORD PTR _iMixType$[ebp], 0
  00363	7d 09		 jge	 SHORT $LN22@MixJewel
  00365	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv180[ebp], 0
  0036c	eb 0c		 jmp	 SHORT $LN23@MixJewel
$LN22@MixJewel:
  0036e	33 c0		 xor	 eax, eax
  00370	83 7d 10 02	 cmp	 DWORD PTR _iMixType$[ebp], 2
  00374	0f 9e c0	 setle	 al
  00377	89 45 98	 mov	 DWORD PTR tv180[ebp], eax
$LN23@MixJewel:
  0037a	83 7d 98 00	 cmp	 DWORD PTR tv180[ebp], 0
  0037e	75 69		 jne	 SHORT $LN11@MixJewel

; 178  : 	{
; 179  : 		LogAddTD("[JewelMix] [%s][%s] iMixType is out of bound : %d", gObj[iIndex].AccountID, gObj[iIndex].Name, iMixType);

  00380	8b 45 10	 mov	 eax, DWORD PTR _iMixType$[ebp]
  00383	50		 push	 eax
  00384	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00387	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0038d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00393	8d 44 0a 77	 lea	 eax, DWORD PTR [edx+ecx+119]
  00397	50		 push	 eax
  00398	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  0039b	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  003a1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  003a7	8d 44 0a 6c	 lea	 eax, DWORD PTR [edx+ecx+108]
  003ab	50		 push	 eax
  003ac	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@DMKIAJAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iMixType?5is?5@
  003b1	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  003b7	83 c4 10	 add	 esp, 16			; 00000010H

; 180  : 		gObj[iIndex].ChaosLock = false;

  003ba	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  003bd	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  003c3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  003c9	c7 84 01 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+3720], 0

; 181  : 		GCAnsJewelMix(iIndex, 3);	//-> 3: MixType

  003d4	6a 03		 push	 3
  003d6	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  003d9	50		 push	 eax
  003da	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  003df	83 c4 08	 add	 esp, 8

; 182  : 		// ----
; 183  : 		return false;

  003e2	33 c0		 xor	 eax, eax
  003e4	e9 de 04 00 00	 jmp	 $LN18@MixJewel
$LN11@MixJewel:

; 184  : 	}
; 185  : 	// ----
; 186  : 	int iItemType		= g_JewelMixInfo[iJewelType][iMixType].m_iSourceType;

  003e9	8b 45 0c	 mov	 eax, DWORD PTR _iJewelType$[ebp]
  003ec	6b c0 30	 imul	 eax, 48			; 00000030H
  003ef	8b 4d 10	 mov	 ecx, DWORD PTR _iMixType$[ebp]
  003f2	c1 e1 04	 shl	 ecx, 4
  003f5	8b 94 08 08 00
	00 00		 mov	 edx, DWORD PTR _g_JewelMixInfo[eax+ecx+8]
  003fc	89 55 f8	 mov	 DWORD PTR _iItemType$[ebp], edx

; 187  : 	int iJewelCount		= g_JewelMixInfo[iJewelType][iMixType].m_iJewelCount;

  003ff	8b 45 0c	 mov	 eax, DWORD PTR _iJewelType$[ebp]
  00402	6b c0 30	 imul	 eax, 48			; 00000030H
  00405	8b 4d 10	 mov	 ecx, DWORD PTR _iMixType$[ebp]
  00408	c1 e1 04	 shl	 ecx, 4
  0040b	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR _g_JewelMixInfo[eax+ecx]
  00412	89 55 f4	 mov	 DWORD PTR _iJewelCount$[ebp], edx

; 188  : 	int iMixMoney		= g_JewelMixInfo[iJewelType][iMixType].m_iMixMoney;

  00415	8b 45 0c	 mov	 eax, DWORD PTR _iJewelType$[ebp]
  00418	6b c0 30	 imul	 eax, 48			; 00000030H
  0041b	8b 4d 10	 mov	 ecx, DWORD PTR _iMixType$[ebp]
  0041e	c1 e1 04	 shl	 ecx, 4
  00421	8b 94 08 04 00
	00 00		 mov	 edx, DWORD PTR _g_JewelMixInfo[eax+ecx+4]
  00428	89 55 f0	 mov	 DWORD PTR _iMixMoney$[ebp], edx

; 189  : 	int iChangeType		= g_JewelMixInfo[iJewelType][iMixType].m_iChangeType;

  0042b	8b 45 0c	 mov	 eax, DWORD PTR _iJewelType$[ebp]
  0042e	6b c0 30	 imul	 eax, 48			; 00000030H
  00431	8b 4d 10	 mov	 ecx, DWORD PTR _iMixType$[ebp]
  00434	c1 e1 04	 shl	 ecx, 4
  00437	8b 94 08 0c 00
	00 00		 mov	 edx, DWORD PTR _g_JewelMixInfo[eax+ecx+12]
  0043e	89 55 ec	 mov	 DWORD PTR _iChangeType$[ebp], edx

; 190  : 	// ----
; 191  : 	if( iJewelCount < 1 )

  00441	83 7d f4 01	 cmp	 DWORD PTR _iJewelCount$[ebp], 1
  00445	7d 2f		 jge	 SHORT $LN10@MixJewel

; 192  : 	{
; 193  : 		gObj[iIndex].ChaosLock = false;

  00447	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0044a	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00450	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00456	c7 84 01 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+3720], 0

; 194  : 		GCAnsJewelMix(iIndex, 0);	//-> 0: ChaosState

  00461	6a 00		 push	 0
  00463	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00466	50		 push	 eax
  00467	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  0046c	83 c4 08	 add	 esp, 8

; 195  : 		// ----
; 196  : 		return false;

  0046f	33 c0		 xor	 eax, eax
  00471	e9 51 04 00 00	 jmp	 $LN18@MixJewel
$LN10@MixJewel:

; 197  : 	}
; 198  : 	// ----
; 199  : 	int iUserJewelCount = gObjGetItemCountInIventory(iIndex, iItemType);

  00476	8b 45 f8	 mov	 eax, DWORD PTR _iItemType$[ebp]
  00479	50		 push	 eax
  0047a	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  0047d	51		 push	 ecx
  0047e	e8 00 00 00 00	 call	 ?gObjGetItemCountInIventory@@YAHHH@Z ; gObjGetItemCountInIventory
  00483	83 c4 08	 add	 esp, 8
  00486	89 45 e8	 mov	 DWORD PTR _iUserJewelCount$[ebp], eax

; 200  : 	// ----
; 201  : 	if( iJewelCount > iUserJewelCount )

  00489	8b 45 f4	 mov	 eax, DWORD PTR _iJewelCount$[ebp]
  0048c	3b 45 e8	 cmp	 eax, DWORD PTR _iUserJewelCount$[ebp]
  0048f	7e 6b		 jle	 SHORT $LN9@MixJewel

; 202  : 	{
; 203  : 		LogAddTD("[JewelMix] [%s][%s] lack of jewel to mix : %d / %d", gObj[iIndex].AccountID, gObj[iIndex].Name, iUserJewelCount, iJewelCount);

  00491	8b 45 f4	 mov	 eax, DWORD PTR _iJewelCount$[ebp]
  00494	50		 push	 eax
  00495	8b 4d e8	 mov	 ecx, DWORD PTR _iUserJewelCount$[ebp]
  00498	51		 push	 ecx
  00499	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  0049c	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  004a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  004a7	8d 4c 10 77	 lea	 ecx, DWORD PTR [eax+edx+119]
  004ab	51		 push	 ecx
  004ac	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  004af	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  004b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  004ba	8d 4c 10 6c	 lea	 ecx, DWORD PTR [eax+edx+108]
  004be	51		 push	 ecx
  004bf	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@MDOHHKOF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@
  004c4	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  004ca	83 c4 14	 add	 esp, 20			; 00000014H

; 204  : 		gObj[iIndex].ChaosLock = false;

  004cd	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  004d0	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  004d6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  004dc	c7 84 01 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+3720], 0

; 205  : 		GCAnsJewelMix(iIndex, 4);	//-> 4: Serial

  004e7	6a 04		 push	 4
  004e9	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  004ec	50		 push	 eax
  004ed	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  004f2	83 c4 08	 add	 esp, 8

; 206  : 		// ----
; 207  : 		return false;

  004f5	33 c0		 xor	 eax, eax
  004f7	e9 cb 03 00 00	 jmp	 $LN18@MixJewel
$LN9@MixJewel:

; 208  : 	}
; 209  : 	// ----
; 210  : 	if( iMixMoney > gObj[iIndex].Money )

  004fc	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  004ff	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00505	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0050b	8b 55 f0	 mov	 edx, DWORD PTR _iMixMoney$[ebp]
  0050e	3b 94 01 f0 00
	00 00		 cmp	 edx, DWORD PTR [ecx+eax+240]
  00515	0f 8e 80 00 00
	00		 jle	 $LN8@MixJewel

; 211  : 	{
; 212  : 		LogAddTD("[JewelMix] [%s][%s] lack of money to mix : %d / %d", gObj[iIndex].AccountID, gObj[iIndex].Name, gObj[iIndex].Money, iMixMoney);

  0051b	8b 45 f0	 mov	 eax, DWORD PTR _iMixMoney$[ebp]
  0051e	50		 push	 eax
  0051f	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00522	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00528	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0052e	8b 84 0a f0 00
	00 00		 mov	 eax, DWORD PTR [edx+ecx+240]
  00535	50		 push	 eax
  00536	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00539	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0053f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00545	8d 44 0a 77	 lea	 eax, DWORD PTR [edx+ecx+119]
  00549	50		 push	 eax
  0054a	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  0054d	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00553	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00559	8d 44 0a 6c	 lea	 eax, DWORD PTR [edx+ecx+108]
  0055d	50		 push	 eax
  0055e	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@POEJCDHP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@
  00563	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00569	83 c4 14	 add	 esp, 20			; 00000014H

; 213  : 		gObj[iIndex].ChaosLock = false;

  0056c	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0056f	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00575	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0057b	c7 84 01 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+3720], 0

; 214  : 		GCAnsJewelMix(iIndex, 5);	//-> 5: Money

  00586	6a 05		 push	 5
  00588	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0058b	50		 push	 eax
  0058c	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  00591	83 c4 08	 add	 esp, 8

; 215  : 		// ----
; 216  : 		return false;

  00594	33 c0		 xor	 eax, eax
  00596	e9 2c 03 00 00	 jmp	 $LN18@MixJewel
$LN8@MixJewel:

; 217  : 	}
; 218  : 	// ----
; 219  : 	int iDelJewelCount	= 0;

  0059b	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _iDelJewelCount$[ebp], 0

; 220  : 	int bItemDelOK		= false;	//-> Fucking BOOL, need use bool for BYTE returns ><

  005a2	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _bItemDelOK$[ebp], 0

; 221  : 	// ----
; 222  : 	for( int x = INVETORY_WEAR_SIZE; x < MAIN_INVENTORY_SIZE; x++ ) //-> Changed 76 to 204 from 6.2

  005a9	c7 45 dc 0c 00
	00 00		 mov	 DWORD PTR _x$228224[ebp], 12 ; 0000000cH
  005b0	eb 09		 jmp	 SHORT $LN7@MixJewel
$LN6@MixJewel:
  005b2	8b 45 dc	 mov	 eax, DWORD PTR _x$228224[ebp]
  005b5	83 c0 01	 add	 eax, 1
  005b8	89 45 dc	 mov	 DWORD PTR _x$228224[ebp], eax
$LN7@MixJewel:
  005bb	81 7d dc cc 00
	00 00		 cmp	 DWORD PTR _x$228224[ebp], 204 ; 000000ccH
  005c2	0f 8d 53 01 00
	00		 jge	 $LN5@MixJewel

; 223  : 	{
; 224  : 		if( gObj[iIndex].pInventory[x].IsItem() )

  005c8	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  005cb	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  005d1	8b 4d dc	 mov	 ecx, DWORD PTR _x$228224[ebp]
  005d4	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  005da	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  005e0	03 8c 02 24 0e
	00 00		 add	 ecx, DWORD PTR [edx+eax+3620]
  005e7	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  005ec	85 c0		 test	 eax, eax
  005ee	0f 84 22 01 00
	00		 je	 $LN4@MixJewel

; 225  : 		{
; 226  : 			if ( gObj[iIndex].pInventory[x].m_Type == iItemType )	//-> Fix, my fucking error)

  005f4	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  005f7	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  005fd	8b 4d dc	 mov	 ecx, DWORD PTR _x$228224[ebp]
  00600	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  00606	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0060c	8b 84 02 24 0e
	00 00		 mov	 eax, DWORD PTR [edx+eax+3620]
  00613	0f bf 4c 08 06	 movsx	 ecx, WORD PTR [eax+ecx+6]
  00618	3b 4d f8	 cmp	 ecx, DWORD PTR _iItemType$[ebp]
  0061b	0f 85 f5 00 00
	00		 jne	 $LN4@MixJewel

; 227  : 			{
; 228  : 				LogAddTD("[JewelMix] [%s][%s] Mix - Delete Jewel, Type:%d, Level:%d, Serial:%u", 
; 229  : 					gObj[iIndex].AccountID, gObj[iIndex].Name, gObj[iIndex].pInventory[x].m_Type, 
; 230  : 					gObj[iIndex].pInventory[x].m_Level, gObj[iIndex].pInventory[x].m_Number);

  00621	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00624	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0062a	8b 4d dc	 mov	 ecx, DWORD PTR _x$228224[ebp]
  0062d	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  00633	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00639	8b 84 02 24 0e
	00 00		 mov	 eax, DWORD PTR [edx+eax+3620]
  00640	8b 0c 08	 mov	 ecx, DWORD PTR [eax+ecx]
  00643	51		 push	 ecx
  00644	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  00647	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  0064d	8b 45 dc	 mov	 eax, DWORD PTR _x$228224[ebp]
  00650	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00656	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0065c	8b 94 11 24 0e
	00 00		 mov	 edx, DWORD PTR [ecx+edx+3620]
  00663	0f bf 44 02 08	 movsx	 eax, WORD PTR [edx+eax+8]
  00668	50		 push	 eax
  00669	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  0066c	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00672	8b 55 dc	 mov	 edx, DWORD PTR _x$228224[ebp]
  00675	69 d2 d4 00 00
	00		 imul	 edx, 212		; 000000d4H
  0067b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00680	8b 8c 08 24 0e
	00 00		 mov	 ecx, DWORD PTR [eax+ecx+3620]
  00687	0f bf 54 11 06	 movsx	 edx, WORD PTR [ecx+edx+6]
  0068c	52		 push	 edx
  0068d	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00690	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00696	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0069c	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  006a0	52		 push	 edx
  006a1	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  006a4	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  006aa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  006b0	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  006b4	52		 push	 edx
  006b5	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@MGNDHNGK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5?9?5Delete@
  006ba	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  006c0	83 c4 18	 add	 esp, 24			; 00000018H

; 231  : 				// ----
; 232  : 				gObjInventoryItemSet(iIndex, x, -1);

  006c3	68 ff 00 00 00	 push	 255			; 000000ffH
  006c8	8b 45 dc	 mov	 eax, DWORD PTR _x$228224[ebp]
  006cb	50		 push	 eax
  006cc	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  006cf	51		 push	 ecx
  006d0	e8 00 00 00 00	 call	 ?gObjInventoryItemSet@@YAXHHE@Z ; gObjInventoryItemSet
  006d5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 233  : 				gObj[iIndex].pInventory[x].Clear();

  006d8	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  006db	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  006e1	8b 4d dc	 mov	 ecx, DWORD PTR _x$228224[ebp]
  006e4	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  006ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  006f0	03 8c 02 24 0e
	00 00		 add	 ecx, DWORD PTR [edx+eax+3620]
  006f7	e8 00 00 00 00	 call	 ?Clear@CItem@@QAEXXZ	; CItem::Clear

; 234  : 				// ----
; 235  : 				iDelJewelCount++;

  006fc	8b 45 e4	 mov	 eax, DWORD PTR _iDelJewelCount$[ebp]
  006ff	83 c0 01	 add	 eax, 1
  00702	89 45 e4	 mov	 DWORD PTR _iDelJewelCount$[ebp], eax

; 236  : 				// ----
; 237  : 				if( iJewelCount <= iDelJewelCount )

  00705	8b 45 f4	 mov	 eax, DWORD PTR _iJewelCount$[ebp]
  00708	3b 45 e4	 cmp	 eax, DWORD PTR _iDelJewelCount$[ebp]
  0070b	7f 09		 jg	 SHORT $LN4@MixJewel

; 238  : 				{
; 239  : 					bItemDelOK = true;

  0070d	c7 45 e0 01 00
	00 00		 mov	 DWORD PTR _bItemDelOK$[ebp], 1

; 240  : 					break;

  00714	eb 05		 jmp	 SHORT $LN5@MixJewel
$LN4@MixJewel:

; 241  : 				}
; 242  : 			}
; 243  : 		}
; 244  : 	}

  00716	e9 97 fe ff ff	 jmp	 $LN6@MixJewel
$LN5@MixJewel:

; 245  : 	// ----
; 246  : 	GCItemListSend(iIndex);

  0071b	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0071e	50		 push	 eax
  0071f	e8 00 00 00 00	 call	 ?GCItemListSend@@YAXH@Z	; GCItemListSend
  00724	83 c4 04	 add	 esp, 4

; 247  : 	// ----
; 248  : #ifdef PERIOD
; 249  : 	g_PeriodItemEx.OnRequestPeriodItemList(&gObj[iIndex]); //-> New

  00727	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0072a	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00730	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00736	50		 push	 eax
  00737	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_PeriodItemEx@@3VCPeriodItemEx@@A ; g_PeriodItemEx
  0073c	e8 00 00 00 00	 call	 ?OnRequestPeriodItemList@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@@Z ; CPeriodItemEx::OnRequestPeriodItemList

; 250  : #endif
; 251  : 	// ----
; 252  : 	if( !bItemDelOK )

  00741	83 7d e0 00	 cmp	 DWORD PTR _bItemDelOK$[ebp], 0
  00745	75 6b		 jne	 SHORT $LN1@MixJewel

; 253  : 	{
; 254  : 		LogAddTD("[JewelMix] [%s][%s] lack of jewel to mix (in deleting) : %d / %d", gObj[iIndex].AccountID, gObj[iIndex].Name, iDelJewelCount, iJewelCount);

  00747	8b 45 f4	 mov	 eax, DWORD PTR _iJewelCount$[ebp]
  0074a	50		 push	 eax
  0074b	8b 4d e4	 mov	 ecx, DWORD PTR _iDelJewelCount$[ebp]
  0074e	51		 push	 ecx
  0074f	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  00752	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  00758	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0075d	8d 4c 10 77	 lea	 ecx, DWORD PTR [eax+edx+119]
  00761	51		 push	 ecx
  00762	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  00765	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  0076b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00770	8d 4c 10 6c	 lea	 ecx, DWORD PTR [eax+edx+108]
  00774	51		 push	 ecx
  00775	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@CGBJCOEC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@
  0077a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00780	83 c4 14	 add	 esp, 20			; 00000014H

; 255  : 		gObj[iIndex].ChaosLock = false;

  00783	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00786	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0078c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00792	c7 84 01 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+3720], 0

; 256  : 		GCAnsJewelMix(iIndex, 0);	//-> 0: ChaosState

  0079d	6a 00		 push	 0
  0079f	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  007a2	50		 push	 eax
  007a3	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  007a8	83 c4 08	 add	 esp, 8

; 257  : 		// ----
; 258  : 		return false;

  007ab	33 c0		 xor	 eax, eax
  007ad	e9 15 01 00 00	 jmp	 $LN18@MixJewel
$LN1@MixJewel:

; 259  : 	}
; 260  : 	// ----
; 261  : 	ItemSerialCreateSend(iIndex, 235, gObj[iIndex].X, gObj[iIndex].Y, iChangeType, iMixType, 0, 0, 0, 0, iIndex, 0, 0);

  007b2	6a 00		 push	 0
  007b4	6a 00		 push	 0
  007b6	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  007b9	50		 push	 eax
  007ba	6a 00		 push	 0
  007bc	6a 00		 push	 0
  007be	6a 00		 push	 0
  007c0	6a 00		 push	 0
  007c2	0f b6 4d 10	 movzx	 ecx, BYTE PTR _iMixType$[ebp]
  007c6	51		 push	 ecx
  007c7	8b 55 ec	 mov	 edx, DWORD PTR _iChangeType$[ebp]
  007ca	52		 push	 edx
  007cb	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  007ce	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  007d4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  007da	0f b6 94 01 46
	01 00 00	 movzx	 edx, BYTE PTR [ecx+eax+326]
  007e2	52		 push	 edx
  007e3	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  007e6	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  007ec	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  007f2	0f b6 94 01 44
	01 00 00	 movzx	 edx, BYTE PTR [ecx+eax+324]
  007fa	52		 push	 edx
  007fb	68 eb 00 00 00	 push	 235			; 000000ebH
  00800	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00803	50		 push	 eax
  00804	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  00809	83 c4 34	 add	 esp, 52			; 00000034H

; 262  : 	gObj[iIndex].ChaosLock	= false;

  0080c	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0080f	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00815	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0081b	c7 84 01 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+3720], 0

; 263  : 	gObj[iIndex].Money		-= iMixMoney;

  00826	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00829	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0082f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00835	8b 94 01 f0 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+240]
  0083c	2b 55 f0	 sub	 edx, DWORD PTR _iMixMoney$[ebp]
  0083f	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00842	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00848	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0084e	89 94 01 f0 00
	00 00		 mov	 DWORD PTR [ecx+eax+240], edx

; 264  : 	GCMoneySend(iIndex, gObj[iIndex].Money);

  00855	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00858	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0085e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00864	8b 94 01 f0 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+240]
  0086b	52		 push	 edx
  0086c	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0086f	50		 push	 eax
  00870	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend
  00875	83 c4 08	 add	 esp, 8

; 265  : 	GCAnsJewelMix(iIndex, 1);

  00878	6a 01		 push	 1
  0087a	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0087d	50		 push	 eax
  0087e	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  00883	83 c4 08	 add	 esp, 8

; 266  : 	LogAddTD("[JewelMix] [%s][%s] jewel mix succeed : ItemType:%d, JewelCount:%d", gObj[iIndex].AccountID, gObj[iIndex].Name, iItemType, iJewelCount);

  00886	8b 45 f4	 mov	 eax, DWORD PTR _iJewelCount$[ebp]
  00889	50		 push	 eax
  0088a	8b 4d f8	 mov	 ecx, DWORD PTR _iItemType$[ebp]
  0088d	51		 push	 ecx
  0088e	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  00891	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  00897	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0089c	8d 4c 10 77	 lea	 ecx, DWORD PTR [eax+edx+119]
  008a0	51		 push	 ecx
  008a1	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  008a4	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  008aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  008af	8d 4c 10 6c	 lea	 ecx, DWORD PTR [eax+edx+108]
  008b3	51		 push	 ecx
  008b4	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@HHDMIPHA@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5mix?5su@
  008b9	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  008bf	83 c4 14	 add	 esp, 20			; 00000014H

; 267  : 	// ----
; 268  : 	return true;

  008c2	b8 01 00 00 00	 mov	 eax, 1
$LN18@MixJewel:

; 269  : }

  008c7	5f		 pop	 edi
  008c8	5e		 pop	 esi
  008c9	5b		 pop	 ebx
  008ca	8b e5		 mov	 esp, ebp
  008cc	5d		 pop	 ebp
  008cd	c3		 ret	 0
?MixJewel@CJewelMixSystem@@SAHHHH@Z ENDP		; CJewelMixSystem::MixJewel
_TEXT	ENDS
PUBLIC	??_C@_0EF@GPAMOLKC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@ ; `string'
PUBLIC	??_C@_0EE@FJDCDOLF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@ ; `string'
PUBLIC	??_C@_0EH@ILPCOAPE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5?9?5Dele@ ; `string'
PUBLIC	??_C@_0DK@KLGGGOBD@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5empt@ ; `string'
PUBLIC	??_C@_0DF@DKECPOAO@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@ ; `string'
PUBLIC	??_C@_0EC@KDMDKBJP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iItemType?5is@ ; `string'
PUBLIC	??_C@_0DN@DCFEGEBM@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryIt@ ; `string'
PUBLIC	??_C@_0EE@MLHPPKDE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iJewelLevel?5@ ; `string'
PUBLIC	??_C@_0CP@PIEHHLAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Item?5to?5unmi@ ; `string'
PUBLIC	??_C@_0DH@EGBEHFFJ@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryPo@ ; `string'
PUBLIC	??_C@_0DK@MGPJIBIK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5iJewel@ ; `string'
PUBLIC	??_C@_0DC@GMJDADNJ@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLUnMi@ ; `string'
PUBLIC	??_C@_0CN@JPCCKIJJ@?$FLANTI?9HACK?$FN?$FLprotocol?$FN?5?$FLUnMix?5Jew@ ; `string'
PUBLIC	?UnMixJewel@CJewelMixSystem@@SAHHHHH@Z		; CJewelMixSystem::UnMixJewel
EXTRN	?GCInventoryItemDeleteSend@@YAXHEE@Z:PROC	; GCInventoryItemDeleteSend
EXTRN	?gObjInventoryDeleteItem@@YAEHH@Z:PROC		; gObjInventoryDeleteItem
EXTRN	?GCAnsJewelUnMix@@YAXHH@Z:PROC			; GCAnsJewelUnMix
;	COMDAT ??_C@_0EF@GPAMOLKC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@
CONST	SEGMENT
??_C@_0EF@GPAMOLKC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@ DB '['
	DB	'JewelMix] [%s][%s] jewel unmix succeed : ItemType:%d, JewelCo'
	DB	'unt:%d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@FJDCDOLF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@
CONST	SEGMENT
??_C@_0EE@FJDCDOLF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@ DB '['
	DB	'JewelMix] [%s][%s] jewel unmix failed : ItemType:%d, JewelCou'
	DB	'nt:%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@ILPCOAPE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5?9?5Dele@
CONST	SEGMENT
??_C@_0EH@ILPCOAPE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5?9?5Dele@ DB '['
	DB	'JewelMix] [%s][%s] UnMix - Delete Jewel, Type:%d, Level:%d, S'
	DB	'erial:%d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@KLGGGOBD@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5empt@
CONST	SEGMENT
??_C@_0DK@KLGGGOBD@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5empt@ DB '['
	DB	'JewelMix] [%s][%s] lack of empty slot to unmix : %d / %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@DKECPOAO@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@
CONST	SEGMENT
??_C@_0DF@DKECPOAO@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@ DB '['
	DB	'JewelMix] [%s][%s] lack of money to unmix : %d / %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@KDMDKBJP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iItemType?5is@
CONST	SEGMENT
??_C@_0EC@KDMDKBJP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iItemType?5is@ DB '['
	DB	'JewelMix] [%s][%s] iItemType is different from request : %d /'
	DB	' %d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@DCFEGEBM@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryIt@
CONST	SEGMENT
??_C@_0DN@DCFEGEBM@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryIt@ DB '['
	DB	'JewelMix] [%s][%s] iInventoryItemLevel is out of bound : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@MLHPPKDE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iJewelLevel?5@
CONST	SEGMENT
??_C@_0EE@MLHPPKDE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iJewelLevel?5@ DB '['
	DB	'JewelMix] [%s][%s] iJewelLevel is different from request : %d'
	DB	' / %d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@PIEHHLAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Item?5to?5unmi@
CONST	SEGMENT
??_C@_0CP@PIEHHLAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Item?5to?5unmi@ DB '['
	DB	'JewelMix] [%s][%s] Item to unmix is not exist', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@EGBEHFFJ@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryPo@
CONST	SEGMENT
??_C@_0DH@EGBEHFFJ@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryPo@ DB '['
	DB	'JewelMix] [%s][%s] iInventoryPos is out of bound : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@MGPJIBIK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5iJewel@
CONST	SEGMENT
??_C@_0DK@MGPJIBIK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5iJewel@ DB '['
	DB	'JewelMix] [%s][%s] UnMix iJewelType is out of bound : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@GMJDADNJ@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLUnMi@
CONST	SEGMENT
??_C@_0DC@GMJDADNJ@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLUnMi@ DB '['
	DB	'ANTI-HACK][Serial 0 Item] [UnMix Jewel] (%s)(%s)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@JPCCKIJJ@?$FLANTI?9HACK?$FN?$FLprotocol?$FN?5?$FLUnMix?5Jew@
CONST	SEGMENT
??_C@_0CN@JPCCKIJJ@?$FLANTI?9HACK?$FN?$FLprotocol?$FN?5?$FLUnMix?5Jew@ DB '['
	DB	'ANTI-HACK][protocol] [UnMix Jewel] (%s)(%s)', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
tv267 = -116						; size = 4
tv180 = -116						; size = 4
tv160 = -116						; size = 4
_x$228280 = -48						; size = 4
_bItemCrtOK$ = -44					; size = 4
_iCrtJewelCount$ = -40					; size = 4
_x$228270 = -36						; size = 4
_iEmptyCount$ = -32					; size = 4
_iMixMoney$ = -28					; size = 4
_iChangeType$ = -24					; size = 4
_iJewelCount$ = -20					; size = 4
_iItemType$ = -16					; size = 4
_iInventoryItemLevel$ = -12				; size = 4
_iInventoryItemType$ = -8				; size = 4
_lpIfState$ = -4					; size = 4
_iIndex$ = 8						; size = 4
_iJewelType$ = 12					; size = 4
_iJewelLevel$ = 16					; size = 4
_iInventoryPos$ = 20					; size = 4
?UnMixJewel@CJewelMixSystem@@SAHHHHH@Z PROC		; CJewelMixSystem::UnMixJewel

; 273  : {

  008d0	55		 push	 ebp
  008d1	8b ec		 mov	 ebp, esp
  008d3	83 ec 74	 sub	 esp, 116		; 00000074H
  008d6	53		 push	 ebx
  008d7	56		 push	 esi
  008d8	57		 push	 edi

; 274  : 	if( !gObjIsConnected(iIndex) )

  008d9	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  008dc	50		 push	 eax
  008dd	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  008e2	83 c4 04	 add	 esp, 4
  008e5	85 c0		 test	 eax, eax
  008e7	75 07		 jne	 SHORT $LN24@UnMixJewel

; 275  : 	{
; 276  : 		return false;

  008e9	33 c0		 xor	 eax, eax
  008eb	e9 c5 09 00 00	 jmp	 $LN25@UnMixJewel
$LN24@UnMixJewel:

; 277  : 	}
; 278  : 	// ----
; 279  : 	LPINTERFACE_STATE lpIfState = &gObj[iIndex].m_IfState;

  008f0	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  008f3	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  008f9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  008ff	8d 94 01 1c 0e
	00 00		 lea	 edx, DWORD PTR [ecx+eax+3612]
  00906	89 55 fc	 mov	 DWORD PTR _lpIfState$[ebp], edx

; 280  : 	// ----
; 281  : 	if( lpIfState->use != 1 || lpIfState->type != 20 )

  00909	8b 45 fc	 mov	 eax, DWORD PTR _lpIfState$[ebp]
  0090c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0090e	83 e1 03	 and	 ecx, 3
  00911	83 f9 01	 cmp	 ecx, 1
  00914	75 13		 jne	 SHORT $LN22@UnMixJewel
  00916	8b 45 fc	 mov	 eax, DWORD PTR _lpIfState$[ebp]
  00919	8b 08		 mov	 ecx, DWORD PTR [eax]
  0091b	c1 e9 06	 shr	 ecx, 6
  0091e	81 e1 ff 03 00
	00		 and	 ecx, 1023		; 000003ffH
  00924	83 f9 14	 cmp	 ecx, 20			; 00000014H
  00927	74 4b		 je	 SHORT $LN23@UnMixJewel
$LN22@UnMixJewel:

; 282  : 	{
; 283  : 		GCAnsJewelUnMix(iIndex, 9);

  00929	6a 09		 push	 9
  0092b	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0092e	50		 push	 eax
  0092f	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  00934	83 c4 08	 add	 esp, 8

; 284  : 		LogAddTD("[ANTI-HACK][protocol] [UnMix Jewel] (%s)(%s)", gObj[iIndex].AccountID, gObj[iIndex].Name);

  00937	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0093a	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00940	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00946	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  0094a	52		 push	 edx
  0094b	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0094e	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00954	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0095a	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  0095e	52		 push	 edx
  0095f	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@JPCCKIJJ@?$FLANTI?9HACK?$FN?$FLprotocol?$FN?5?$FLUnMix?5Jew@
  00964	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0096a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 285  : 		// ----
; 286  : 		return false;

  0096d	33 c0		 xor	 eax, eax
  0096f	e9 41 09 00 00	 jmp	 $LN25@UnMixJewel
$LN23@UnMixJewel:

; 287  : 	}
; 288  : 	// ----
; 289  : 	if( gObjCheckInventorySerial0Item(&gObj[iIndex]) )

  00974	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00977	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0097d	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00983	50		 push	 eax
  00984	e8 00 00 00 00	 call	 ?gObjCheckInventorySerial0Item@@YAHPAUOBJECTSTRUCT@@@Z ; gObjCheckInventorySerial0Item
  00989	83 c4 04	 add	 esp, 4
  0098c	85 c0		 test	 eax, eax
  0098e	74 67		 je	 SHORT $LN21@UnMixJewel

; 290  : 	{
; 291  : 		MsgOutput(iIndex, lMsg.Get(3354));

  00990	68 1a 0d 00 00	 push	 3354			; 00000d1aH
  00995	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0099a	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0099f	50		 push	 eax
  009a0	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  009a3	50		 push	 eax
  009a4	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  009a9	83 c4 08	 add	 esp, 8

; 292  : 		GCAnsJewelUnMix(iIndex, 0);

  009ac	6a 00		 push	 0
  009ae	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  009b1	50		 push	 eax
  009b2	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  009b7	83 c4 08	 add	 esp, 8

; 293  : 		LogAddTD("[ANTI-HACK][Serial 0 Item] [UnMix Jewel] (%s)(%s)", gObj[iIndex].AccountID, gObj[iIndex].Name);

  009ba	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  009bd	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  009c3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  009c9	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  009cd	52		 push	 edx
  009ce	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  009d1	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  009d7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  009dd	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  009e1	52		 push	 edx
  009e2	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@GMJDADNJ@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLUnMi@
  009e7	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  009ed	83 c4 0c	 add	 esp, 12			; 0000000cH

; 294  : 		// ----
; 295  : 		return false;

  009f0	33 c0		 xor	 eax, eax
  009f2	e9 be 08 00 00	 jmp	 $LN25@UnMixJewel
$LN21@UnMixJewel:

; 296  : 	}
; 297  : 	// ----
; 298  : 	if( gObj[iIndex].ChaosLock )

  009f7	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  009fa	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00a00	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a06	83 bc 01 88 0e
	00 00 00	 cmp	 DWORD PTR [ecx+eax+3720], 0
  00a0e	74 4b		 je	 SHORT $LN20@UnMixJewel

; 299  : 	{
; 300  : 		LogAddTD("[JewelMix] [%s][%s] Chaos Mix is already working", gObj[iIndex].AccountID, gObj[iIndex].Name);

  00a10	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00a13	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00a19	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a1f	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  00a23	52		 push	 edx
  00a24	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00a27	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00a2d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a33	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  00a37	52		 push	 edx
  00a38	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@PNODFJDP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Chaos?5Mix?5is@
  00a3d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00a43	83 c4 0c	 add	 esp, 12			; 0000000cH

; 301  : 		GCAnsJewelUnMix(iIndex, 0);

  00a46	6a 00		 push	 0
  00a48	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00a4b	50		 push	 eax
  00a4c	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  00a51	83 c4 08	 add	 esp, 8

; 302  : 		// ----
; 303  : 		return false;

  00a54	33 c0		 xor	 eax, eax
  00a56	e9 5a 08 00 00	 jmp	 $LN25@UnMixJewel
$LN20@UnMixJewel:

; 304  : 	}
; 305  : 	// ----
; 306  : 	gObj[iIndex].ChaosLock = true;

  00a5b	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00a5e	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00a64	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a6a	c7 84 01 88 0e
	00 00 01 00 00
	00		 mov	 DWORD PTR [ecx+eax+3720], 1

; 307  : 	// ----
; 308  : 	if( !CHECK_LIMIT(iJewelType, 10) )

  00a75	83 7d 0c 00	 cmp	 DWORD PTR _iJewelType$[ebp], 0
  00a79	7d 09		 jge	 SHORT $LN27@UnMixJewel
  00a7b	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv160[ebp], 0
  00a82	eb 0c		 jmp	 SHORT $LN28@UnMixJewel
$LN27@UnMixJewel:
  00a84	33 c0		 xor	 eax, eax
  00a86	83 7d 0c 09	 cmp	 DWORD PTR _iJewelType$[ebp], 9
  00a8a	0f 9e c0	 setle	 al
  00a8d	89 45 8c	 mov	 DWORD PTR tv160[ebp], eax
$LN28@UnMixJewel:
  00a90	83 7d 8c 00	 cmp	 DWORD PTR tv160[ebp], 0
  00a94	75 69		 jne	 SHORT $LN19@UnMixJewel

; 309  : 	{
; 310  : 		LogAddTD("[JewelMix] [%s][%s] UnMix iJewelType is out of bound : %d", gObj[iIndex].AccountID, gObj[iIndex].Name, iJewelType);

  00a96	8b 45 0c	 mov	 eax, DWORD PTR _iJewelType$[ebp]
  00a99	50		 push	 eax
  00a9a	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00a9d	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00aa3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00aa9	8d 44 0a 77	 lea	 eax, DWORD PTR [edx+ecx+119]
  00aad	50		 push	 eax
  00aae	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00ab1	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00ab7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00abd	8d 44 0a 6c	 lea	 eax, DWORD PTR [edx+ecx+108]
  00ac1	50		 push	 eax
  00ac2	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@MGPJIBIK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5iJewel@
  00ac7	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00acd	83 c4 10	 add	 esp, 16			; 00000010H

; 311  : 		gObj[iIndex].ChaosLock = false;

  00ad0	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00ad3	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00ad9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00adf	c7 84 01 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+3720], 0

; 312  : 		GCAnsJewelUnMix(iIndex, 2);

  00aea	6a 02		 push	 2
  00aec	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00aef	50		 push	 eax
  00af0	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  00af5	83 c4 08	 add	 esp, 8

; 313  : 		// ----
; 314  : 		return false;

  00af8	33 c0		 xor	 eax, eax
  00afa	e9 b6 07 00 00	 jmp	 $LN25@UnMixJewel
$LN19@UnMixJewel:

; 315  : 	}
; 316  : 	// ----
; 317  : 	if( !CHECK_LIMIT(iInventoryPos, MAIN_INVENTORY_SIZE+1) )

  00aff	83 7d 14 00	 cmp	 DWORD PTR _iInventoryPos$[ebp], 0
  00b03	7d 09		 jge	 SHORT $LN29@UnMixJewel
  00b05	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv180[ebp], 0
  00b0c	eb 0f		 jmp	 SHORT $LN30@UnMixJewel
$LN29@UnMixJewel:
  00b0e	33 c0		 xor	 eax, eax
  00b10	81 7d 14 cc 00
	00 00		 cmp	 DWORD PTR _iInventoryPos$[ebp], 204 ; 000000ccH
  00b17	0f 9e c0	 setle	 al
  00b1a	89 45 8c	 mov	 DWORD PTR tv180[ebp], eax
$LN30@UnMixJewel:
  00b1d	83 7d 8c 00	 cmp	 DWORD PTR tv180[ebp], 0
  00b21	75 69		 jne	 SHORT $LN18@UnMixJewel

; 318  : 	{
; 319  : 		LogAddTD("[JewelMix] [%s][%s] iInventoryPos is out of bound : %d", gObj[iIndex].AccountID, gObj[iIndex].Name, iInventoryPos);

  00b23	8b 45 14	 mov	 eax, DWORD PTR _iInventoryPos$[ebp]
  00b26	50		 push	 eax
  00b27	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00b2a	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00b30	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00b36	8d 44 0a 77	 lea	 eax, DWORD PTR [edx+ecx+119]
  00b3a	50		 push	 eax
  00b3b	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00b3e	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00b44	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00b4a	8d 44 0a 6c	 lea	 eax, DWORD PTR [edx+ecx+108]
  00b4e	50		 push	 eax
  00b4f	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@EGBEHFFJ@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryPo@
  00b54	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00b5a	83 c4 10	 add	 esp, 16			; 00000010H

; 320  : 		gObj[iIndex].ChaosLock = false;

  00b5d	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00b60	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00b66	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00b6c	c7 84 01 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+3720], 0

; 321  : 		GCAnsJewelUnMix(iIndex, 5);

  00b77	6a 05		 push	 5
  00b79	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00b7c	50		 push	 eax
  00b7d	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  00b82	83 c4 08	 add	 esp, 8

; 322  : 		// ----
; 323  : 		return false;

  00b85	33 c0		 xor	 eax, eax
  00b87	e9 29 07 00 00	 jmp	 $LN25@UnMixJewel
$LN18@UnMixJewel:

; 324  : 	}
; 325  : 	// ----
; 326  : 	if( !gObj[iIndex].pInventory[iInventoryPos].IsItem() )

  00b8c	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00b8f	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00b95	8b 4d 14	 mov	 ecx, DWORD PTR _iInventoryPos$[ebp]
  00b98	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  00b9e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00ba4	03 8c 02 24 0e
	00 00		 add	 ecx, DWORD PTR [edx+eax+3620]
  00bab	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  00bb0	85 c0		 test	 eax, eax
  00bb2	75 65		 jne	 SHORT $LN17@UnMixJewel

; 327  : 	{
; 328  : 		LogAddTD("[JewelMix] [%s][%s] Item to unmix is not exist", gObj[iIndex].AccountID, gObj[iIndex].Name);

  00bb4	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00bb7	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00bbd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00bc3	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  00bc7	52		 push	 edx
  00bc8	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00bcb	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00bd1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00bd7	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  00bdb	52		 push	 edx
  00bdc	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@PIEHHLAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Item?5to?5unmi@
  00be1	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00be7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 329  : 		gObj[iIndex].ChaosLock = false;

  00bea	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00bed	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00bf3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00bf9	c7 84 01 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+3720], 0

; 330  : 		GCAnsJewelUnMix(iIndex, 4);

  00c04	6a 04		 push	 4
  00c06	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00c09	50		 push	 eax
  00c0a	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  00c0f	83 c4 08	 add	 esp, 8

; 331  : 		// ----
; 332  : 		return false;

  00c12	33 c0		 xor	 eax, eax
  00c14	e9 9c 06 00 00	 jmp	 $LN25@UnMixJewel
$LN17@UnMixJewel:

; 333  : 	}
; 334  : 	if( gObj[iIndex].pInventory[iInventoryPos].m_Level != iJewelLevel )

  00c19	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00c1c	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00c22	8b 4d 14	 mov	 ecx, DWORD PTR _iInventoryPos$[ebp]
  00c25	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  00c2b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00c31	8b 84 02 24 0e
	00 00		 mov	 eax, DWORD PTR [edx+eax+3620]
  00c38	0f bf 4c 08 08	 movsx	 ecx, WORD PTR [eax+ecx+8]
  00c3d	3b 4d 10	 cmp	 ecx, DWORD PTR _iJewelLevel$[ebp]
  00c40	0f 84 8d 00 00
	00		 je	 $LN16@UnMixJewel

; 335  : 	{
; 336  : 		LogAddTD("[JewelMix] [%s][%s] iJewelLevel is different from request : %d / %d", gObj[iIndex].AccountID, gObj[iIndex].Name, 
; 337  : 			gObj[iIndex].pInventory[iInventoryPos].m_Level, iJewelLevel);

  00c46	8b 45 10	 mov	 eax, DWORD PTR _iJewelLevel$[ebp]
  00c49	50		 push	 eax
  00c4a	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00c4d	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00c53	8b 55 14	 mov	 edx, DWORD PTR _iInventoryPos$[ebp]
  00c56	69 d2 d4 00 00
	00		 imul	 edx, 212		; 000000d4H
  00c5c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00c61	8b 8c 08 24 0e
	00 00		 mov	 ecx, DWORD PTR [eax+ecx+3620]
  00c68	0f bf 54 11 08	 movsx	 edx, WORD PTR [ecx+edx+8]
  00c6d	52		 push	 edx
  00c6e	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00c71	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00c77	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00c7d	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  00c81	52		 push	 edx
  00c82	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00c85	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00c8b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00c91	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  00c95	52		 push	 edx
  00c96	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@MLHPPKDE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iJewelLevel?5@
  00c9b	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00ca1	83 c4 14	 add	 esp, 20			; 00000014H

; 338  : 		gObj[iIndex].ChaosLock = false;

  00ca4	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00ca7	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00cad	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00cb3	c7 84 01 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+3720], 0

; 339  : 		GCAnsJewelUnMix(iIndex, 3);

  00cbe	6a 03		 push	 3
  00cc0	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00cc3	50		 push	 eax
  00cc4	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  00cc9	83 c4 08	 add	 esp, 8

; 340  : 		// ----
; 341  : 		return false;

  00ccc	33 c0		 xor	 eax, eax
  00cce	e9 e2 05 00 00	 jmp	 $LN25@UnMixJewel
$LN16@UnMixJewel:

; 342  : 	}
; 343  : 	// ----
; 344  : 	int iInventoryItemType	= gObj[iIndex].pInventory[iInventoryPos].m_Type;

  00cd3	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00cd6	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00cdc	8b 4d 14	 mov	 ecx, DWORD PTR _iInventoryPos$[ebp]
  00cdf	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  00ce5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00ceb	8b 84 02 24 0e
	00 00		 mov	 eax, DWORD PTR [edx+eax+3620]
  00cf2	0f bf 4c 08 06	 movsx	 ecx, WORD PTR [eax+ecx+6]
  00cf7	89 4d f8	 mov	 DWORD PTR _iInventoryItemType$[ebp], ecx

; 345  : 	int iInventoryItemLevel	= gObj[iIndex].pInventory[iInventoryPos].m_Level;

  00cfa	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00cfd	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00d03	8b 4d 14	 mov	 ecx, DWORD PTR _iInventoryPos$[ebp]
  00d06	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  00d0c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00d12	8b 84 02 24 0e
	00 00		 mov	 eax, DWORD PTR [edx+eax+3620]
  00d19	0f bf 4c 08 08	 movsx	 ecx, WORD PTR [eax+ecx+8]
  00d1e	89 4d f4	 mov	 DWORD PTR _iInventoryItemLevel$[ebp], ecx

; 346  : 	// ----
; 347  : 	if( !CHECK_LIMIT(iInventoryItemLevel, 4) )

  00d21	83 7d f4 00	 cmp	 DWORD PTR _iInventoryItemLevel$[ebp], 0
  00d25	7d 09		 jge	 SHORT $LN31@UnMixJewel
  00d27	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv267[ebp], 0
  00d2e	eb 0c		 jmp	 SHORT $LN32@UnMixJewel
$LN31@UnMixJewel:
  00d30	33 c0		 xor	 eax, eax
  00d32	83 7d f4 03	 cmp	 DWORD PTR _iInventoryItemLevel$[ebp], 3
  00d36	0f 9e c0	 setle	 al
  00d39	89 45 8c	 mov	 DWORD PTR tv267[ebp], eax
$LN32@UnMixJewel:
  00d3c	83 7d 8c 00	 cmp	 DWORD PTR tv267[ebp], 0
  00d40	75 69		 jne	 SHORT $LN15@UnMixJewel

; 348  : 	{
; 349  : 		LogAddTD("[JewelMix] [%s][%s] iInventoryItemLevel is out of bound : %d", gObj[iIndex].AccountID, gObj[iIndex].Name, iInventoryItemLevel);

  00d42	8b 45 f4	 mov	 eax, DWORD PTR _iInventoryItemLevel$[ebp]
  00d45	50		 push	 eax
  00d46	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00d49	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00d4f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00d55	8d 44 0a 77	 lea	 eax, DWORD PTR [edx+ecx+119]
  00d59	50		 push	 eax
  00d5a	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00d5d	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00d63	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00d69	8d 44 0a 6c	 lea	 eax, DWORD PTR [edx+ecx+108]
  00d6d	50		 push	 eax
  00d6e	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@DCFEGEBM@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryIt@
  00d73	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00d79	83 c4 10	 add	 esp, 16			; 00000010H

; 350  : 		gObj[iIndex].ChaosLock = false;

  00d7c	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00d7f	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00d85	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00d8b	c7 84 01 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+3720], 0

; 351  : 		GCAnsJewelUnMix(iIndex, 3);

  00d96	6a 03		 push	 3
  00d98	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00d9b	50		 push	 eax
  00d9c	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  00da1	83 c4 08	 add	 esp, 8

; 352  : 		// ----
; 353  : 		return false;

  00da4	33 c0		 xor	 eax, eax
  00da6	e9 0a 05 00 00	 jmp	 $LN25@UnMixJewel
$LN15@UnMixJewel:

; 354  : 	}
; 355  : 	// ----
; 356  : 	int iItemType	= g_JewelMixInfo[iJewelType][iInventoryItemLevel].m_iChangeType;

  00dab	8b 45 0c	 mov	 eax, DWORD PTR _iJewelType$[ebp]
  00dae	6b c0 30	 imul	 eax, 48			; 00000030H
  00db1	8b 4d f4	 mov	 ecx, DWORD PTR _iInventoryItemLevel$[ebp]
  00db4	c1 e1 04	 shl	 ecx, 4
  00db7	8b 94 08 0c 00
	00 00		 mov	 edx, DWORD PTR _g_JewelMixInfo[eax+ecx+12]
  00dbe	89 55 f0	 mov	 DWORD PTR _iItemType$[ebp], edx

; 357  : 	int iJewelCount = g_JewelMixInfo[iJewelType][iInventoryItemLevel].m_iJewelCount;

  00dc1	8b 45 0c	 mov	 eax, DWORD PTR _iJewelType$[ebp]
  00dc4	6b c0 30	 imul	 eax, 48			; 00000030H
  00dc7	8b 4d f4	 mov	 ecx, DWORD PTR _iInventoryItemLevel$[ebp]
  00dca	c1 e1 04	 shl	 ecx, 4
  00dcd	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR _g_JewelMixInfo[eax+ecx]
  00dd4	89 55 ec	 mov	 DWORD PTR _iJewelCount$[ebp], edx

; 358  : 	int iChangeType = g_JewelMixInfo[iJewelType][iInventoryItemLevel].m_iSourceType;

  00dd7	8b 45 0c	 mov	 eax, DWORD PTR _iJewelType$[ebp]
  00dda	6b c0 30	 imul	 eax, 48			; 00000030H
  00ddd	8b 4d f4	 mov	 ecx, DWORD PTR _iInventoryItemLevel$[ebp]
  00de0	c1 e1 04	 shl	 ecx, 4
  00de3	8b 94 08 08 00
	00 00		 mov	 edx, DWORD PTR _g_JewelMixInfo[eax+ecx+8]
  00dea	89 55 e8	 mov	 DWORD PTR _iChangeType$[ebp], edx

; 359  : 	int iMixMoney	= 1000000;

  00ded	c7 45 e4 40 42
	0f 00		 mov	 DWORD PTR _iMixMoney$[ebp], 1000000 ; 000f4240H

; 360  : 	// ----
; 361  : 	if ( iInventoryItemType != iItemType )

  00df4	8b 45 f8	 mov	 eax, DWORD PTR _iInventoryItemType$[ebp]
  00df7	3b 45 f0	 cmp	 eax, DWORD PTR _iItemType$[ebp]
  00dfa	74 6b		 je	 SHORT $LN14@UnMixJewel

; 362  : 	{
; 363  : 		LogAddTD("[JewelMix] [%s][%s] iItemType is different from request : %d / %d", gObj[iIndex].AccountID, gObj[iIndex].Name, iInventoryItemType, iItemType);

  00dfc	8b 45 f0	 mov	 eax, DWORD PTR _iItemType$[ebp]
  00dff	50		 push	 eax
  00e00	8b 4d f8	 mov	 ecx, DWORD PTR _iInventoryItemType$[ebp]
  00e03	51		 push	 ecx
  00e04	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  00e07	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  00e0d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00e12	8d 4c 10 77	 lea	 ecx, DWORD PTR [eax+edx+119]
  00e16	51		 push	 ecx
  00e17	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  00e1a	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  00e20	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00e25	8d 4c 10 6c	 lea	 ecx, DWORD PTR [eax+edx+108]
  00e29	51		 push	 ecx
  00e2a	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@KDMDKBJP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iItemType?5is@
  00e2f	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00e35	83 c4 14	 add	 esp, 20			; 00000014H

; 364  : 		gObj[iIndex].ChaosLock = false;

  00e38	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00e3b	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00e41	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00e47	c7 84 01 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+3720], 0

; 365  : 		GCAnsJewelUnMix(iIndex, 6);

  00e52	6a 06		 push	 6
  00e54	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00e57	50		 push	 eax
  00e58	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  00e5d	83 c4 08	 add	 esp, 8

; 366  : 		// -----
; 367  : 		return false;

  00e60	33 c0		 xor	 eax, eax
  00e62	e9 4e 04 00 00	 jmp	 $LN25@UnMixJewel
$LN14@UnMixJewel:

; 368  : 	}
; 369  : 	// ----
; 370  : 	if( gObj[iIndex].Money < iMixMoney )

  00e67	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00e6a	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00e70	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00e76	8b 94 01 f0 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+240]
  00e7d	3b 55 e4	 cmp	 edx, DWORD PTR _iMixMoney$[ebp]
  00e80	0f 8d 80 00 00
	00		 jge	 $LN13@UnMixJewel

; 371  : 	{
; 372  : 		LogAddTD("[JewelMix] [%s][%s] lack of money to unmix : %d / %d", gObj[iIndex].AccountID, gObj[iIndex].Name, gObj[iIndex].Money, iMixMoney);

  00e86	8b 45 e4	 mov	 eax, DWORD PTR _iMixMoney$[ebp]
  00e89	50		 push	 eax
  00e8a	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00e8d	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00e93	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00e99	8b 84 0a f0 00
	00 00		 mov	 eax, DWORD PTR [edx+ecx+240]
  00ea0	50		 push	 eax
  00ea1	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00ea4	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00eaa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00eb0	8d 44 0a 77	 lea	 eax, DWORD PTR [edx+ecx+119]
  00eb4	50		 push	 eax
  00eb5	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00eb8	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00ebe	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00ec4	8d 44 0a 6c	 lea	 eax, DWORD PTR [edx+ecx+108]
  00ec8	50		 push	 eax
  00ec9	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@DKECPOAO@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@
  00ece	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00ed4	83 c4 14	 add	 esp, 20			; 00000014H

; 373  : 		gObj[iIndex].ChaosLock = false;

  00ed7	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00eda	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00ee0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00ee6	c7 84 01 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+3720], 0

; 374  : 		GCAnsJewelUnMix(iIndex, 8);

  00ef1	6a 08		 push	 8
  00ef3	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00ef6	50		 push	 eax
  00ef7	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  00efc	83 c4 08	 add	 esp, 8

; 375  : 		// ----
; 376  : 		return false;

  00eff	33 c0		 xor	 eax, eax
  00f01	e9 af 03 00 00	 jmp	 $LN25@UnMixJewel
$LN13@UnMixJewel:

; 377  : 	}
; 378  : 	// ----
; 379  : 	int iEmptyCount = 0;

  00f06	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _iEmptyCount$[ebp], 0

; 380  : 	// ----
; 381  : 	for( int x = 0; x < 8 * (4 * gObj[iIndex].ExpandedInventory + 8); x++ )	//fixed

  00f0d	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _x$228270[ebp], 0
  00f14	eb 09		 jmp	 SHORT $LN12@UnMixJewel
$LN11@UnMixJewel:
  00f16	8b 45 dc	 mov	 eax, DWORD PTR _x$228270[ebp]
  00f19	83 c0 01	 add	 eax, 1
  00f1c	89 45 dc	 mov	 DWORD PTR _x$228270[ebp], eax
$LN12@UnMixJewel:
  00f1f	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00f22	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00f28	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00f2e	0f b6 94 01 24
	26 00 00	 movzx	 edx, BYTE PTR [ecx+eax+9764]
  00f36	c1 e2 02	 shl	 edx, 2
  00f39	8d 04 d5 40 00
	00 00		 lea	 eax, DWORD PTR [edx*8+64]
  00f40	39 45 dc	 cmp	 DWORD PTR _x$228270[ebp], eax
  00f43	7d 30		 jge	 SHORT $LN10@UnMixJewel

; 382  : 	{
; 383  : 		if( gObj[iIndex].pInventoryMap[x] == 255 )

  00f45	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00f48	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00f4e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00f54	8b 94 01 28 0e
	00 00		 mov	 edx, DWORD PTR [ecx+eax+3624]
  00f5b	8b 45 dc	 mov	 eax, DWORD PTR _x$228270[ebp]
  00f5e	0f b6 0c 02	 movzx	 ecx, BYTE PTR [edx+eax]
  00f62	81 f9 ff 00 00
	00		 cmp	 ecx, 255		; 000000ffH
  00f68	75 09		 jne	 SHORT $LN9@UnMixJewel

; 384  : 		{
; 385  : 			iEmptyCount++;

  00f6a	8b 45 e0	 mov	 eax, DWORD PTR _iEmptyCount$[ebp]
  00f6d	83 c0 01	 add	 eax, 1
  00f70	89 45 e0	 mov	 DWORD PTR _iEmptyCount$[ebp], eax
$LN9@UnMixJewel:

; 386  : 		}
; 387  : 	}

  00f73	eb a1		 jmp	 SHORT $LN11@UnMixJewel
$LN10@UnMixJewel:

; 388  : 	// ----
; 389  : 	if( iEmptyCount < iJewelCount )

  00f75	8b 45 e0	 mov	 eax, DWORD PTR _iEmptyCount$[ebp]
  00f78	3b 45 ec	 cmp	 eax, DWORD PTR _iJewelCount$[ebp]
  00f7b	7d 6b		 jge	 SHORT $LN8@UnMixJewel

; 390  : 	{
; 391  : 		LogAddTD("[JewelMix] [%s][%s] lack of empty slot to unmix : %d / %d", gObj[iIndex].AccountID, gObj[iIndex].Name, iEmptyCount, iJewelCount);

  00f7d	8b 45 ec	 mov	 eax, DWORD PTR _iJewelCount$[ebp]
  00f80	50		 push	 eax
  00f81	8b 4d e0	 mov	 ecx, DWORD PTR _iEmptyCount$[ebp]
  00f84	51		 push	 ecx
  00f85	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  00f88	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  00f8e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00f93	8d 4c 10 77	 lea	 ecx, DWORD PTR [eax+edx+119]
  00f97	51		 push	 ecx
  00f98	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  00f9b	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  00fa1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00fa6	8d 4c 10 6c	 lea	 ecx, DWORD PTR [eax+edx+108]
  00faa	51		 push	 ecx
  00fab	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@KLGGGOBD@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5empt@
  00fb0	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00fb6	83 c4 14	 add	 esp, 20			; 00000014H

; 392  : 		gObj[iIndex].ChaosLock = false;

  00fb9	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00fbc	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00fc2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00fc8	c7 84 01 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+3720], 0

; 393  : 		GCAnsJewelUnMix(iIndex, 7);

  00fd3	6a 07		 push	 7
  00fd5	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00fd8	50		 push	 eax
  00fd9	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  00fde	83 c4 08	 add	 esp, 8

; 394  : 		// ----
; 395  : 		return false;

  00fe1	33 c0		 xor	 eax, eax
  00fe3	e9 cd 02 00 00	 jmp	 $LN25@UnMixJewel
$LN8@UnMixJewel:

; 396  : 	}
; 397  : 	// ----
; 398  : 	LogAddTD("[JewelMix] [%s][%s] UnMix - Delete Jewel, Type:%d, Level:%d, Serial:%d", gObj[iIndex].AccountID, gObj[iIndex].Name, gObj[iIndex].pInventory[iInventoryPos].m_Type,
; 399  : 		gObj[iIndex].pInventory[iInventoryPos].m_Level, gObj[iIndex].pInventory[iInventoryPos].m_Number);

  00fe8	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00feb	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00ff1	8b 4d 14	 mov	 ecx, DWORD PTR _iInventoryPos$[ebp]
  00ff4	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  00ffa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01000	8b 84 02 24 0e
	00 00		 mov	 eax, DWORD PTR [edx+eax+3620]
  01007	8b 0c 08	 mov	 ecx, DWORD PTR [eax+ecx]
  0100a	51		 push	 ecx
  0100b	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  0100e	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  01014	8b 45 14	 mov	 eax, DWORD PTR _iInventoryPos$[ebp]
  01017	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  0101d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01023	8b 94 11 24 0e
	00 00		 mov	 edx, DWORD PTR [ecx+edx+3620]
  0102a	0f bf 44 02 08	 movsx	 eax, WORD PTR [edx+eax+8]
  0102f	50		 push	 eax
  01030	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  01033	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  01039	8b 55 14	 mov	 edx, DWORD PTR _iInventoryPos$[ebp]
  0103c	69 d2 d4 00 00
	00		 imul	 edx, 212		; 000000d4H
  01042	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01047	8b 8c 08 24 0e
	00 00		 mov	 ecx, DWORD PTR [eax+ecx+3620]
  0104e	0f bf 54 11 06	 movsx	 edx, WORD PTR [ecx+edx+6]
  01053	52		 push	 edx
  01054	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  01057	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0105d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01063	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  01067	52		 push	 edx
  01068	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0106b	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01071	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01077	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  0107b	52		 push	 edx
  0107c	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@ILPCOAPE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5?9?5Dele@
  01081	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  01087	83 c4 18	 add	 esp, 24			; 00000018H

; 400  : 	gObjInventoryItemSet(iIndex, iInventoryPos, -1);

  0108a	68 ff 00 00 00	 push	 255			; 000000ffH
  0108f	8b 45 14	 mov	 eax, DWORD PTR _iInventoryPos$[ebp]
  01092	50		 push	 eax
  01093	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  01096	51		 push	 ecx
  01097	e8 00 00 00 00	 call	 ?gObjInventoryItemSet@@YAXHHE@Z ; gObjInventoryItemSet
  0109c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 401  : 	gObjInventoryDeleteItem(iIndex, iInventoryPos);

  0109f	8b 45 14	 mov	 eax, DWORD PTR _iInventoryPos$[ebp]
  010a2	50		 push	 eax
  010a3	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  010a6	51		 push	 ecx
  010a7	e8 00 00 00 00	 call	 ?gObjInventoryDeleteItem@@YAEHH@Z ; gObjInventoryDeleteItem
  010ac	83 c4 08	 add	 esp, 8

; 402  : 	GCInventoryItemDeleteSend(iIndex, iInventoryPos, 1);

  010af	6a 01		 push	 1
  010b1	0f b6 45 14	 movzx	 eax, BYTE PTR _iInventoryPos$[ebp]
  010b5	50		 push	 eax
  010b6	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  010b9	51		 push	 ecx
  010ba	e8 00 00 00 00	 call	 ?GCInventoryItemDeleteSend@@YAXHEE@Z ; GCInventoryItemDeleteSend
  010bf	83 c4 0c	 add	 esp, 12			; 0000000cH

; 403  : 	// ----
; 404  : 	int	iCrtJewelCount	= 0;

  010c2	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _iCrtJewelCount$[ebp], 0

; 405  : 	int	bItemCrtOK		= false; //-> BBB (Big Bad Bool) :D

  010c9	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _bItemCrtOK$[ebp], 0

; 406  : 	// ----
; 407  : 	for( int x = 0; x < 8 * (4 * gObj[iIndex].ExpandedInventory + 8); x++ ) //-> From 64 to 192, 6.2

  010d0	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _x$228280[ebp], 0
  010d7	eb 09		 jmp	 SHORT $LN7@UnMixJewel
$LN6@UnMixJewel:
  010d9	8b 45 d0	 mov	 eax, DWORD PTR _x$228280[ebp]
  010dc	83 c0 01	 add	 eax, 1
  010df	89 45 d0	 mov	 DWORD PTR _x$228280[ebp], eax
$LN7@UnMixJewel:
  010e2	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  010e5	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  010eb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  010f1	0f b6 94 01 24
	26 00 00	 movzx	 edx, BYTE PTR [ecx+eax+9764]
  010f9	c1 e2 02	 shl	 edx, 2
  010fc	8d 04 d5 40 00
	00 00		 lea	 eax, DWORD PTR [edx*8+64]
  01103	39 45 d0	 cmp	 DWORD PTR _x$228280[ebp], eax
  01106	0f 8d 99 00 00
	00		 jge	 $LN5@UnMixJewel

; 408  : 	{
; 409  : 		if( gObj[iIndex].pInventoryMap[x] == 255 )

  0110c	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0110f	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01115	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0111b	8b 94 01 28 0e
	00 00		 mov	 edx, DWORD PTR [ecx+eax+3624]
  01122	8b 45 d0	 mov	 eax, DWORD PTR _x$228280[ebp]
  01125	0f b6 0c 02	 movzx	 ecx, BYTE PTR [edx+eax]
  01129	81 f9 ff 00 00
	00		 cmp	 ecx, 255		; 000000ffH
  0112f	75 6f		 jne	 SHORT $LN4@UnMixJewel

; 410  : 		{
; 411  : 			ItemSerialCreateSend(iIndex, 235, gObj[iIndex].X, gObj[iIndex].Y, iChangeType, 0, 0, 0, 0, 0, iIndex, 0, 0);

  01131	6a 00		 push	 0
  01133	6a 00		 push	 0
  01135	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  01138	50		 push	 eax
  01139	6a 00		 push	 0
  0113b	6a 00		 push	 0
  0113d	6a 00		 push	 0
  0113f	6a 00		 push	 0
  01141	6a 00		 push	 0
  01143	8b 4d e8	 mov	 ecx, DWORD PTR _iChangeType$[ebp]
  01146	51		 push	 ecx
  01147	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  0114a	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  01150	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01155	0f b6 8c 10 46
	01 00 00	 movzx	 ecx, BYTE PTR [eax+edx+326]
  0115d	51		 push	 ecx
  0115e	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  01161	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  01167	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0116c	0f b6 8c 10 44
	01 00 00	 movzx	 ecx, BYTE PTR [eax+edx+324]
  01174	51		 push	 ecx
  01175	68 eb 00 00 00	 push	 235			; 000000ebH
  0117a	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  0117d	52		 push	 edx
  0117e	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  01183	83 c4 34	 add	 esp, 52			; 00000034H

; 412  : 			iCrtJewelCount++;

  01186	8b 45 d8	 mov	 eax, DWORD PTR _iCrtJewelCount$[ebp]
  01189	83 c0 01	 add	 eax, 1
  0118c	89 45 d8	 mov	 DWORD PTR _iCrtJewelCount$[ebp], eax

; 413  : 			// ----
; 414  : 			if( iJewelCount <= iCrtJewelCount )

  0118f	8b 45 ec	 mov	 eax, DWORD PTR _iJewelCount$[ebp]
  01192	3b 45 d8	 cmp	 eax, DWORD PTR _iCrtJewelCount$[ebp]
  01195	7f 09		 jg	 SHORT $LN4@UnMixJewel

; 415  : 			{
; 416  : 				bItemCrtOK = true;

  01197	c7 45 d4 01 00
	00 00		 mov	 DWORD PTR _bItemCrtOK$[ebp], 1

; 417  : 				break;

  0119e	eb 05		 jmp	 SHORT $LN5@UnMixJewel
$LN4@UnMixJewel:

; 418  : 			}
; 419  : 		}
; 420  : 	}

  011a0	e9 34 ff ff ff	 jmp	 $LN6@UnMixJewel
$LN5@UnMixJewel:

; 421  : 	// ----
; 422  : 	gObj[iIndex].ChaosLock = false;

  011a5	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  011a8	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  011ae	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  011b4	c7 84 01 88 0e
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+3720], 0

; 423  : 	// ----
; 424  : 	if( !bItemCrtOK )

  011bf	83 7d d4 00	 cmp	 DWORD PTR _bItemCrtOK$[ebp], 0
  011c3	75 4f		 jne	 SHORT $LN2@UnMixJewel

; 425  : 	{
; 426  : 		LogAddTD("[JewelMix] [%s][%s] jewel unmix failed : ItemType:%d, JewelCount:%d", gObj[iIndex].AccountID, gObj[iIndex].Name, iItemType, iJewelCount);

  011c5	8b 45 ec	 mov	 eax, DWORD PTR _iJewelCount$[ebp]
  011c8	50		 push	 eax
  011c9	8b 4d f0	 mov	 ecx, DWORD PTR _iItemType$[ebp]
  011cc	51		 push	 ecx
  011cd	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  011d0	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  011d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  011db	8d 4c 10 77	 lea	 ecx, DWORD PTR [eax+edx+119]
  011df	51		 push	 ecx
  011e0	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  011e3	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  011e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  011ee	8d 4c 10 6c	 lea	 ecx, DWORD PTR [eax+edx+108]
  011f2	51		 push	 ecx
  011f3	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@FJDCDOLF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@
  011f8	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  011fe	83 c4 14	 add	 esp, 20			; 00000014H

; 427  : 		GCAnsJewelUnMix(iIndex, 0);		

  01201	6a 00		 push	 0
  01203	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  01206	50		 push	 eax
  01207	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  0120c	83 c4 08	 add	 esp, 8

; 428  : 	}
; 429  : 	else

  0120f	e9 9c 00 00 00	 jmp	 $LN1@UnMixJewel
$LN2@UnMixJewel:

; 430  : 	{
; 431  : 		LogAddTD("[JewelMix] [%s][%s] jewel unmix succeed : ItemType:%d, JewelCount:%d", gObj[iIndex].AccountID, gObj[iIndex].Name, iItemType, iJewelCount);

  01214	8b 45 ec	 mov	 eax, DWORD PTR _iJewelCount$[ebp]
  01217	50		 push	 eax
  01218	8b 4d f0	 mov	 ecx, DWORD PTR _iItemType$[ebp]
  0121b	51		 push	 ecx
  0121c	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  0121f	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  01225	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0122a	8d 4c 10 77	 lea	 ecx, DWORD PTR [eax+edx+119]
  0122e	51		 push	 ecx
  0122f	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  01232	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  01238	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0123d	8d 4c 10 6c	 lea	 ecx, DWORD PTR [eax+edx+108]
  01241	51		 push	 ecx
  01242	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@GPAMOLKC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@
  01247	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0124d	83 c4 14	 add	 esp, 20			; 00000014H

; 432  : 		gObj[iIndex].Money -= iMixMoney;

  01250	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  01253	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01259	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0125f	8b 94 01 f0 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+240]
  01266	2b 55 e4	 sub	 edx, DWORD PTR _iMixMoney$[ebp]
  01269	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0126c	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01272	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01278	89 94 01 f0 00
	00 00		 mov	 DWORD PTR [ecx+eax+240], edx

; 433  : 		GCMoneySend(iIndex, gObj[iIndex].Money);

  0127f	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  01282	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01288	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0128e	8b 94 01 f0 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+240]
  01295	52		 push	 edx
  01296	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  01299	50		 push	 eax
  0129a	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend
  0129f	83 c4 08	 add	 esp, 8

; 434  : 		GCAnsJewelUnMix(iIndex, 1);

  012a2	6a 01		 push	 1
  012a4	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  012a7	50		 push	 eax
  012a8	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  012ad	83 c4 08	 add	 esp, 8
$LN1@UnMixJewel:

; 435  : 	}
; 436  : 	// -----
; 437  : 	return true;

  012b0	b8 01 00 00 00	 mov	 eax, 1
$LN25@UnMixJewel:

; 438  : }

  012b5	5f		 pop	 edi
  012b6	5e		 pop	 esi
  012b7	5b		 pop	 ebx
  012b8	8b e5		 mov	 esp, ebp
  012ba	5d		 pop	 ebp
  012bb	c3		 ret	 0
?UnMixJewel@CJewelMixSystem@@SAHHHHH@Z ENDP		; CJewelMixSystem::UnMixJewel
_TEXT	ENDS
END
