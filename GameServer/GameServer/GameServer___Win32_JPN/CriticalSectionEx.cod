; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\CriticalSectionEx.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7CCriticalSectionEx@@6B@			; CCriticalSectionEx::`vftable'
PUBLIC	??0CCriticalSectionEx@@QAE@XZ			; CCriticalSectionEx::CCriticalSectionEx
PUBLIC	??_R4CCriticalSectionEx@@6B@			; CCriticalSectionEx::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCriticalSectionEx@@@8			; CCriticalSectionEx `RTTI Type Descriptor'
PUBLIC	??_R3CCriticalSectionEx@@8			; CCriticalSectionEx::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCriticalSectionEx@@8			; CCriticalSectionEx::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCriticalSectionEx@@8		; CCriticalSectionEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__imp__InitializeCriticalSection@4:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECCriticalSectionEx@@UAEPAXI@Z:PROC		; CCriticalSectionEx::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CCriticalSectionEx@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\criticalsectionex.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CCriticalSectionEx@@8 DD FLAT:??_R0?AVCCriticalSectionEx@@@8 ; CCriticalSectionEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCriticalSectionEx@@8
rdata$r	ENDS
;	COMDAT ??_R2CCriticalSectionEx@@8
rdata$r	SEGMENT
??_R2CCriticalSectionEx@@8 DD FLAT:??_R1A@?0A@EA@CCriticalSectionEx@@8 ; CCriticalSectionEx::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CCriticalSectionEx@@8
rdata$r	SEGMENT
??_R3CCriticalSectionEx@@8 DD 00H			; CCriticalSectionEx::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CCriticalSectionEx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCriticalSectionEx@@@8
_DATA	SEGMENT
??_R0?AVCCriticalSectionEx@@@8 DD FLAT:??_7type_info@@6B@ ; CCriticalSectionEx `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCriticalSectionEx@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CCriticalSectionEx@@6B@
rdata$r	SEGMENT
??_R4CCriticalSectionEx@@6B@ DD 00H			; CCriticalSectionEx::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCriticalSectionEx@@@8
	DD	FLAT:??_R3CCriticalSectionEx@@8
rdata$r	ENDS
;	COMDAT ??_7CCriticalSectionEx@@6B@
CONST	SEGMENT
??_7CCriticalSectionEx@@6B@ DD FLAT:??_R4CCriticalSectionEx@@6B@ ; CCriticalSectionEx::`vftable'
	DD	FLAT:??_ECCriticalSectionEx@@UAEPAXI@Z
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CCriticalSectionEx@@QAE@XZ PROC			; CCriticalSectionEx::CCriticalSectionEx
; _this$ = ecx

; 5    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CCriticalSectionEx@@6B@

; 6    : 	InitializeCriticalSection(&this->m_critical);

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 c0 04	 add	 eax, 4
  0001b	50		 push	 eax
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSection@4

; 7    : }

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??0CCriticalSectionEx@@QAE@XZ ENDP			; CCriticalSectionEx::CCriticalSectionEx
_TEXT	ENDS
PUBLIC	??1CCriticalSectionEx@@UAE@XZ			; CCriticalSectionEx::~CCriticalSectionEx
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCCriticalSectionEx@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCCriticalSectionEx@@UAEPAXI@Z PROC			; CCriticalSectionEx::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CCriticalSectionEx@@UAE@XZ ; CCriticalSectionEx::~CCriticalSectionEx
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCCriticalSectionEx@@UAEPAXI@Z ENDP			; CCriticalSectionEx::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp__DeleteCriticalSection@4:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CCriticalSectionEx@@UAE@XZ PROC			; CCriticalSectionEx::~CCriticalSectionEx
; _this$ = ecx

; 10   : {

  00030	55		 push	 ebp
  00031	8b ec		 mov	 ebp, esp
  00033	83 ec 44	 sub	 esp, 68			; 00000044H
  00036	53		 push	 ebx
  00037	56		 push	 esi
  00038	57		 push	 edi
  00039	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CCriticalSectionEx@@6B@

; 11   : 	DeleteCriticalSection(&this->m_critical);

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	83 c0 04	 add	 eax, 4
  0004b	50		 push	 eax
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4

; 12   : }

  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5b		 pop	 ebx
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
??1CCriticalSectionEx@@UAE@XZ ENDP			; CCriticalSectionEx::~CCriticalSectionEx
_TEXT	ENDS
PUBLIC	?lock@CCriticalSectionEx@@QAEXXZ		; CCriticalSectionEx::lock
EXTRN	__imp__EnterCriticalSection@4:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?lock@CCriticalSectionEx@@QAEXXZ PROC			; CCriticalSectionEx::lock
; _this$ = ecx

; 15   : {

  00060	55		 push	 ebp
  00061	8b ec		 mov	 ebp, esp
  00063	83 ec 44	 sub	 esp, 68			; 00000044H
  00066	53		 push	 ebx
  00067	56		 push	 esi
  00068	57		 push	 edi
  00069	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 16   : 	EnterCriticalSection(&this->m_critical);

  0006c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	83 c0 04	 add	 eax, 4
  00072	50		 push	 eax
  00073	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 17   : }

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c3		 ret	 0
?lock@CCriticalSectionEx@@QAEXXZ ENDP			; CCriticalSectionEx::lock
_TEXT	ENDS
PUBLIC	?unlock@CCriticalSectionEx@@QAEXXZ		; CCriticalSectionEx::unlock
EXTRN	__imp__LeaveCriticalSection@4:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?unlock@CCriticalSectionEx@@QAEXXZ PROC			; CCriticalSectionEx::unlock
; _this$ = ecx

; 20   : {

  00080	55		 push	 ebp
  00081	8b ec		 mov	 ebp, esp
  00083	83 ec 44	 sub	 esp, 68			; 00000044H
  00086	53		 push	 ebx
  00087	56		 push	 esi
  00088	57		 push	 edi
  00089	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 21   : 	LeaveCriticalSection(&this->m_critical);

  0008c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008f	83 c0 04	 add	 eax, 4
  00092	50		 push	 eax
  00093	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 22   : }

  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	5b		 pop	 ebx
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c3		 ret	 0
?unlock@CCriticalSectionEx@@QAEXXZ ENDP			; CCriticalSectionEx::unlock
_TEXT	ENDS
END
