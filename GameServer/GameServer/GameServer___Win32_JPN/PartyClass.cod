; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\PartyClass.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_7PartyClass@@6B@				; PartyClass::`vftable'
PUBLIC	??0PartyClass@@QAE@XZ				; PartyClass::PartyClass
PUBLIC	??_R4PartyClass@@6B@				; PartyClass::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPartyClass@@@8				; PartyClass `RTTI Type Descriptor'
PUBLIC	??_R3PartyClass@@8				; PartyClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PartyClass@@8				; PartyClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PartyClass@@8			; PartyClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_EPartyClass@@UAEPAXI@Z:PROC			; PartyClass::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@PartyClass@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\partyclass.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@PartyClass@@8 DD FLAT:??_R0?AVPartyClass@@@8 ; PartyClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PartyClass@@8
rdata$r	ENDS
;	COMDAT ??_R2PartyClass@@8
rdata$r	SEGMENT
??_R2PartyClass@@8 DD FLAT:??_R1A@?0A@EA@PartyClass@@8	; PartyClass::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3PartyClass@@8
rdata$r	SEGMENT
??_R3PartyClass@@8 DD 00H				; PartyClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2PartyClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPartyClass@@@8
_DATA	SEGMENT
??_R0?AVPartyClass@@@8 DD FLAT:??_7type_info@@6B@	; PartyClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPartyClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R4PartyClass@@6B@
rdata$r	SEGMENT
??_R4PartyClass@@6B@ DD 00H				; PartyClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPartyClass@@@8
	DD	FLAT:??_R3PartyClass@@8
rdata$r	ENDS
;	COMDAT ??_7PartyClass@@6B@
CONST	SEGMENT
??_7PartyClass@@6B@ DD FLAT:??_R4PartyClass@@6B@	; PartyClass::`vftable'
	DD	FLAT:??_EPartyClass@@UAEPAXI@Z
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0PartyClass@@QAE@XZ PROC				; PartyClass::PartyClass
; _this$ = ecx

; 14   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7PartyClass@@6B@

; 15   : #if(CUSTOM_SAVE_PT==1)
; 16   : 	this->DBIndex = 0;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 80 28 b9 18
	00 00 00 00 00	 mov	 DWORD PTR [eax+1620264], 0

; 17   : #endif
; 18   : }

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??0PartyClass@@QAE@XZ ENDP				; PartyClass::PartyClass
_TEXT	ENDS
PUBLIC	??1PartyClass@@UAE@XZ				; PartyClass::~PartyClass
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GPartyClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GPartyClass@@UAEPAXI@Z PROC				; PartyClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1PartyClass@@UAE@XZ	; PartyClass::~PartyClass
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GPartyClass@@UAEPAXI@Z ENDP				; PartyClass::`scalar deleting destructor'
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1PartyClass@@UAE@XZ PROC				; PartyClass::~PartyClass
; _this$ = ecx

; 21   : {

  00030	55		 push	 ebp
  00031	8b ec		 mov	 ebp, esp
  00033	83 ec 44	 sub	 esp, 68			; 00000044H
  00036	53		 push	 ebx
  00037	56		 push	 esi
  00038	57		 push	 edi
  00039	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7PartyClass@@6B@

; 22   : 
; 23   : }

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??1PartyClass@@UAE@XZ ENDP				; PartyClass::~PartyClass
_TEXT	ENDS
PUBLIC	?IsParty@PartyClass@@QAEHH@Z			; PartyClass::IsParty
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_party_number$ = 8					; size = 4
?IsParty@PartyClass@@QAEHH@Z PROC			; PartyClass::IsParty
; _this$ = ecx

; 26   : {

  00050	55		 push	 ebp
  00051	8b ec		 mov	 ebp, esp
  00053	83 ec 44	 sub	 esp, 68			; 00000044H
  00056	53		 push	 ebx
  00057	56		 push	 esi
  00058	57		 push	 edi
  00059	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 27   : 	if ( party_number < 0 || party_number > OBJMAX )

  0005c	83 7d 08 00	 cmp	 DWORD PTR _party_number$[ebp], 0
  00060	7c 09		 jl	 SHORT $LN2@IsParty
  00062	81 7d 08 98 3a
	00 00		 cmp	 DWORD PTR _party_number$[ebp], 15000 ; 00003a98H
  00069	7e 04		 jle	 SHORT $LN3@IsParty
$LN2@IsParty:

; 28   : 	{
; 29   : 		return FALSE;

  0006b	33 c0		 xor	 eax, eax
  0006d	eb 19		 jmp	 SHORT $LN4@IsParty
$LN3@IsParty:

; 30   : 	}
; 31   : 
; 32   : 	if ( this->m_PartyS[party_number].Count == 0 )

  0006f	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00072	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00075	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	83 7c 01 08 00	 cmp	 DWORD PTR [ecx+eax+8], 0
  0007d	75 04		 jne	 SHORT $LN1@IsParty

; 33   : 	{
; 34   : 		return FALSE;

  0007f	33 c0		 xor	 eax, eax
  00081	eb 05		 jmp	 SHORT $LN4@IsParty
$LN1@IsParty:

; 35   : 	}
; 36   : 
; 37   : 	return TRUE;

  00083	b8 01 00 00 00	 mov	 eax, 1
$LN4@IsParty:

; 38   : }

  00088	5f		 pop	 edi
  00089	5e		 pop	 esi
  0008a	5b		 pop	 ebx
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c2 04 00	 ret	 4
?IsParty@PartyClass@@QAEHH@Z ENDP			; PartyClass::IsParty
_TEXT	ENDS
PUBLIC	?Isleader@PartyClass@@QAEHHHH@Z			; PartyClass::Isleader
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_party_number$ = 8					; size = 4
_usernumber$ = 12					; size = 4
_dbnumber$ = 16						; size = 4
?Isleader@PartyClass@@QAEHHHH@Z PROC			; PartyClass::Isleader
; _this$ = ecx

; 41   : {

  000a0	55		 push	 ebp
  000a1	8b ec		 mov	 ebp, esp
  000a3	83 ec 44	 sub	 esp, 68			; 00000044H
  000a6	53		 push	 ebx
  000a7	56		 push	 esi
  000a8	57		 push	 edi
  000a9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 42   : 	if ( this->IsParty(party_number) == FALSE )

  000ac	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  000af	50		 push	 eax
  000b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	e8 00 00 00 00	 call	 ?IsParty@PartyClass@@QAEHH@Z ; PartyClass::IsParty
  000b8	85 c0		 test	 eax, eax
  000ba	75 04		 jne	 SHORT $LN2@Isleader

; 43   : 	{
; 44   : 		return FALSE;

  000bc	33 c0		 xor	 eax, eax
  000be	eb 2d		 jmp	 SHORT $LN3@Isleader
$LN2@Isleader:

; 45   : 	}
; 46   : 
; 47   : 	if ( this->m_PartyS[party_number].Number[0] == usernumber && this->m_PartyS[party_number].DbNumber[0] == dbnumber )

  000c0	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  000c3	6b c0 6c	 imul	 eax, 108		; 0000006cH
  000c6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c9	8b 54 01 0c	 mov	 edx, DWORD PTR [ecx+eax+12]
  000cd	3b 55 0c	 cmp	 edx, DWORD PTR _usernumber$[ebp]
  000d0	75 19		 jne	 SHORT $LN1@Isleader
  000d2	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  000d5	6b c0 6c	 imul	 eax, 108		; 0000006cH
  000d8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	8b 54 01 34	 mov	 edx, DWORD PTR [ecx+eax+52]
  000df	3b 55 10	 cmp	 edx, DWORD PTR _dbnumber$[ebp]
  000e2	75 07		 jne	 SHORT $LN1@Isleader

; 48   : 	{
; 49   : 		return TRUE;

  000e4	b8 01 00 00 00	 mov	 eax, 1
  000e9	eb 02		 jmp	 SHORT $LN3@Isleader
$LN1@Isleader:

; 50   : 	}
; 51   : 
; 52   : 	return FALSE;

  000eb	33 c0		 xor	 eax, eax
$LN3@Isleader:

; 53   : }

  000ed	5f		 pop	 edi
  000ee	5e		 pop	 esi
  000ef	5b		 pop	 ebx
  000f0	8b e5		 mov	 esp, ebp
  000f2	5d		 pop	 ebp
  000f3	c2 0c 00	 ret	 12			; 0000000cH
?Isleader@PartyClass@@QAEHHHH@Z ENDP			; PartyClass::Isleader
_TEXT	ENDS
PUBLIC	?GetCount@PartyClass@@QAEHH@Z			; PartyClass::GetCount
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_party_number$ = 8					; size = 4
?GetCount@PartyClass@@QAEHH@Z PROC			; PartyClass::GetCount
; _this$ = ecx

; 57   : {

  00100	55		 push	 ebp
  00101	8b ec		 mov	 ebp, esp
  00103	83 ec 44	 sub	 esp, 68			; 00000044H
  00106	53		 push	 ebx
  00107	56		 push	 esi
  00108	57		 push	 edi
  00109	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 58   : 	if ( this->IsParty(party_number) == FALSE )

  0010c	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  0010f	50		 push	 eax
  00110	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00113	e8 00 00 00 00	 call	 ?IsParty@PartyClass@@QAEHH@Z ; PartyClass::IsParty
  00118	85 c0		 test	 eax, eax
  0011a	75 04		 jne	 SHORT $LN1@GetCount

; 59   : 	{
; 60   : 		return 0;

  0011c	33 c0		 xor	 eax, eax
  0011e	eb 0d		 jmp	 SHORT $LN2@GetCount
$LN1@GetCount:

; 61   : 	}
; 62   : 
; 63   : 	return this->m_PartyS[party_number].Count;

  00120	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00123	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00126	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00129	8b 44 01 08	 mov	 eax, DWORD PTR [ecx+eax+8]
$LN2@GetCount:

; 64   : }

  0012d	5f		 pop	 edi
  0012e	5e		 pop	 esi
  0012f	5b		 pop	 ebx
  00130	8b e5		 mov	 esp, ebp
  00132	5d		 pop	 ebp
  00133	c2 04 00	 ret	 4
?GetCount@PartyClass@@QAEHH@Z ENDP			; PartyClass::GetCount
_TEXT	ENDS
PUBLIC	?GetIndexUser@PartyClass@@QAEHHHAAH0@Z		; PartyClass::GetIndexUser
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_party_number$ = 8					; size = 4
_index$ = 12						; size = 4
_usernumber$ = 16					; size = 4
_dbnumber$ = 20						; size = 4
?GetIndexUser@PartyClass@@QAEHHHAAH0@Z PROC		; PartyClass::GetIndexUser
; _this$ = ecx

; 68   : {

  00140	55		 push	 ebp
  00141	8b ec		 mov	 ebp, esp
  00143	83 ec 44	 sub	 esp, 68			; 00000044H
  00146	53		 push	 ebx
  00147	56		 push	 esi
  00148	57		 push	 edi
  00149	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 69   : 	if ( this->IsParty(party_number) == FALSE )

  0014c	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  0014f	50		 push	 eax
  00150	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00153	e8 00 00 00 00	 call	 ?IsParty@PartyClass@@QAEHH@Z ; PartyClass::IsParty
  00158	85 c0		 test	 eax, eax
  0015a	75 04		 jne	 SHORT $LN3@GetIndexUs

; 70   : 	{
; 71   : 		return FALSE;

  0015c	33 c0		 xor	 eax, eax
  0015e	eb 47		 jmp	 SHORT $LN4@GetIndexUs
$LN3@GetIndexUs:

; 72   : 	}
; 73   : 
; 74   : 	if ( index <0 || index > MAX_USER_IN_PARTY-1 )

  00160	83 7d 0c 00	 cmp	 DWORD PTR _index$[ebp], 0
  00164	7c 06		 jl	 SHORT $LN1@GetIndexUs
  00166	83 7d 0c 09	 cmp	 DWORD PTR _index$[ebp], 9
  0016a	7e 04		 jle	 SHORT $LN2@GetIndexUs
$LN1@GetIndexUs:

; 75   : 	{
; 76   : 		return FALSE;

  0016c	33 c0		 xor	 eax, eax
  0016e	eb 37		 jmp	 SHORT $LN4@GetIndexUs
$LN2@GetIndexUs:

; 77   : 	}
; 78   : 
; 79   : 	usernumber = this->m_PartyS[party_number].Number[index];

  00170	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00173	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00176	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00179	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  0017d	8b 45 10	 mov	 eax, DWORD PTR _usernumber$[ebp]
  00180	8b 4d 0c	 mov	 ecx, DWORD PTR _index$[ebp]
  00183	8b 54 8a 04	 mov	 edx, DWORD PTR [edx+ecx*4+4]
  00187	89 10		 mov	 DWORD PTR [eax], edx

; 80   : 	dbnumber = this->m_PartyS[party_number].DbNumber[index];

  00189	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  0018c	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0018f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00192	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  00196	8b 45 14	 mov	 eax, DWORD PTR _dbnumber$[ebp]
  00199	8b 4d 0c	 mov	 ecx, DWORD PTR _index$[ebp]
  0019c	8b 54 8a 2c	 mov	 edx, DWORD PTR [edx+ecx*4+44]
  001a0	89 10		 mov	 DWORD PTR [eax], edx

; 81   : 
; 82   : 	return TRUE;

  001a2	b8 01 00 00 00	 mov	 eax, 1
$LN4@GetIndexUs:

; 83   : }

  001a7	5f		 pop	 edi
  001a8	5e		 pop	 esi
  001a9	5b		 pop	 ebx
  001aa	8b e5		 mov	 esp, ebp
  001ac	5d		 pop	 ebp
  001ad	c2 10 00	 ret	 16			; 00000010H
?GetIndexUser@PartyClass@@QAEHHHAAH0@Z ENDP		; PartyClass::GetIndexUser
_TEXT	ENDS
PUBLIC	?GetIndex@PartyClass@@QAEHHHH@Z			; PartyClass::GetIndex
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_n$228801 = -8						; size = 4
_this$ = -4						; size = 4
_party_number$ = 8					; size = 4
_usernumber$ = 12					; size = 4
_dbnumber$ = 16						; size = 4
?GetIndex@PartyClass@@QAEHHHH@Z PROC			; PartyClass::GetIndex
; _this$ = ecx

; 86   : {

  001b0	55		 push	 ebp
  001b1	8b ec		 mov	 ebp, esp
  001b3	83 ec 48	 sub	 esp, 72			; 00000048H
  001b6	53		 push	 ebx
  001b7	56		 push	 esi
  001b8	57		 push	 edi
  001b9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 87   : 	if ( this->IsParty(party_number) == FALSE )

  001bc	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  001bf	50		 push	 eax
  001c0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001c3	e8 00 00 00 00	 call	 ?IsParty@PartyClass@@QAEHH@Z ; PartyClass::IsParty
  001c8	85 c0		 test	 eax, eax
  001ca	75 04		 jne	 SHORT $LN6@GetIndex

; 88   : 	{
; 89   : 		return 0;

  001cc	33 c0		 xor	 eax, eax
  001ce	eb 54		 jmp	 SHORT $LN7@GetIndex
$LN6@GetIndex:

; 90   : 	}
; 91   : 
; 92   : 	for ( int n=0; n<MAX_USER_IN_PARTY;n++)

  001d0	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _n$228801[ebp], 0
  001d7	eb 09		 jmp	 SHORT $LN5@GetIndex
$LN4@GetIndex:
  001d9	8b 45 f8	 mov	 eax, DWORD PTR _n$228801[ebp]
  001dc	83 c0 01	 add	 eax, 1
  001df	89 45 f8	 mov	 DWORD PTR _n$228801[ebp], eax
$LN5@GetIndex:
  001e2	83 7d f8 0a	 cmp	 DWORD PTR _n$228801[ebp], 10 ; 0000000aH
  001e6	7d 39		 jge	 SHORT $LN3@GetIndex

; 93   : 	{
; 94   : 		if ( this->m_PartyS[party_number].Number[n] == usernumber || this->m_PartyS[party_number].DbNumber[n] == dbnumber )

  001e8	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  001eb	6b c0 6c	 imul	 eax, 108		; 0000006cH
  001ee	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001f1	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  001f5	8b 45 f8	 mov	 eax, DWORD PTR _n$228801[ebp]
  001f8	8b 4c 82 04	 mov	 ecx, DWORD PTR [edx+eax*4+4]
  001fc	3b 4d 0c	 cmp	 ecx, DWORD PTR _usernumber$[ebp]
  001ff	74 19		 je	 SHORT $LN1@GetIndex
  00201	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00204	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00207	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0020a	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  0020e	8b 45 f8	 mov	 eax, DWORD PTR _n$228801[ebp]
  00211	8b 4c 82 2c	 mov	 ecx, DWORD PTR [edx+eax*4+44]
  00215	3b 4d 10	 cmp	 ecx, DWORD PTR _dbnumber$[ebp]
  00218	75 05		 jne	 SHORT $LN2@GetIndex
$LN1@GetIndex:

; 95   : 		{
; 96   : 			return n;

  0021a	8b 45 f8	 mov	 eax, DWORD PTR _n$228801[ebp]
  0021d	eb 05		 jmp	 SHORT $LN7@GetIndex
$LN2@GetIndex:

; 97   : 		}
; 98   : 	}

  0021f	eb b8		 jmp	 SHORT $LN4@GetIndex
$LN3@GetIndex:

; 99   : 
; 100  : 	return -1;

  00221	83 c8 ff	 or	 eax, -1
$LN7@GetIndex:

; 101  : }

  00224	5f		 pop	 edi
  00225	5e		 pop	 esi
  00226	5b		 pop	 ebx
  00227	8b e5		 mov	 esp, ebp
  00229	5d		 pop	 ebp
  0022a	c2 0c 00	 ret	 12			; 0000000cH
?GetIndex@PartyClass@@QAEHHHH@Z ENDP			; PartyClass::GetIndex
_TEXT	ENDS
PUBLIC	?GD_SetPartyCount@PartyClass@@QAEXXZ		; PartyClass::GD_SetPartyCount
PUBLIC	?SetLevel@PartyClass@@QAEHHH@Z			; PartyClass::SetLevel
PUBLIC	?Create@PartyClass@@QAEHHHH@Z			; PartyClass::Create
EXTRN	?g_ExLicense@@3VCExLicense@@A:BYTE		; g_ExLicense
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$228819 = -16						; size = 4
_loopcount$ = -12					; size = 4
_n$ = -8						; size = 4
_this$ = -4						; size = 4
_usernumber$ = 8					; size = 4
_dbnumber$ = 12						; size = 4
_level$ = 16						; size = 4
?Create@PartyClass@@QAEHHHH@Z PROC			; PartyClass::Create
; _this$ = ecx

; 104  : {

  00230	55		 push	 ebp
  00231	8b ec		 mov	 ebp, esp
  00233	83 ec 50	 sub	 esp, 80			; 00000050H
  00236	53		 push	 ebx
  00237	56		 push	 esi
  00238	57		 push	 edi
  00239	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 105  : 	int n = this->m_PartyCount;

  0023c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0023f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00242	89 4d f8	 mov	 DWORD PTR _n$[ebp], ecx

; 106  : 	int loopcount = 0;

  00245	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _loopcount$[ebp], 0
$LN12@Create:

; 107  : 
; 108  : 	while ( true )

  0024c	b8 01 00 00 00	 mov	 eax, 1
  00251	85 c0		 test	 eax, eax
  00253	0f 84 f5 01 00
	00		 je	 $LN11@Create

; 109  : 	{
; 110  : 		if ( this->m_PartyS[n].Count == 0 )

  00259	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  0025c	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0025f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00262	83 7c 01 08 00	 cmp	 DWORD PTR [ecx+eax+8], 0
  00267	0f 85 af 01 00
	00		 jne	 $LN10@Create

; 111  : 		{
; 112  : 			this->m_PartyS[n].Count = 1;

  0026d	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  00270	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00273	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00276	c7 44 01 08 01
	00 00 00	 mov	 DWORD PTR [ecx+eax+8], 1

; 113  : 			this->m_PartyS[n].Number[0] = usernumber;

  0027e	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  00281	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00284	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00287	8b 55 08	 mov	 edx, DWORD PTR _usernumber$[ebp]
  0028a	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 114  : 			this->m_PartyS[n].DbNumber[0] = dbnumber;

  0028e	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  00291	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00294	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00297	8b 55 0c	 mov	 edx, DWORD PTR _dbnumber$[ebp]
  0029a	89 54 01 34	 mov	 DWORD PTR [ecx+eax+52], edx

; 115  : 			this->m_PartyS[n].m_NextLootIdx = 0;

  0029e	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  002a1	6b c0 6c	 imul	 eax, 108		; 0000006cH
  002a4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002a7	c7 44 01 70 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+112], 0

; 116  : 
; 117  : 			for ( int i=1;i<MAX_USER_IN_PARTY;i++)

  002af	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR _i$228819[ebp], 1
  002b6	eb 09		 jmp	 SHORT $LN9@Create
$LN8@Create:
  002b8	8b 45 f0	 mov	 eax, DWORD PTR _i$228819[ebp]
  002bb	83 c0 01	 add	 eax, 1
  002be	89 45 f0	 mov	 DWORD PTR _i$228819[ebp], eax
$LN9@Create:
  002c1	83 7d f0 0a	 cmp	 DWORD PTR _i$228819[ebp], 10 ; 0000000aH
  002c5	7d 32		 jge	 SHORT $LN7@Create

; 118  : 			{
; 119  : 				this->m_PartyS[n].DbNumber[i] = -1;

  002c7	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  002ca	6b c0 6c	 imul	 eax, 108		; 0000006cH
  002cd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002d0	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  002d4	8b 45 f0	 mov	 eax, DWORD PTR _i$228819[ebp]
  002d7	c7 44 82 2c ff
	ff ff ff	 mov	 DWORD PTR [edx+eax*4+44], -1

; 120  : 				this->m_PartyS[n].Number[i] = -1;

  002df	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  002e2	6b c0 6c	 imul	 eax, 108		; 0000006cH
  002e5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002e8	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  002ec	8b 45 f0	 mov	 eax, DWORD PTR _i$228819[ebp]
  002ef	c7 44 82 04 ff
	ff ff ff	 mov	 DWORD PTR [edx+eax*4+4], -1

; 121  : 			}

  002f7	eb bf		 jmp	 SHORT $LN8@Create
$LN7@Create:

; 122  : 
; 123  : 			this->m_PartyCount++;

  002f9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002fc	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  002ff	83 c1 01	 add	 ecx, 1
  00302	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00305	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 124  : 			this->m_PartyS[n].m_MaxLevel = 0;

  00308	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  0030b	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0030e	33 c9		 xor	 ecx, ecx
  00310	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00313	66 89 4c 02 5c	 mov	 WORD PTR [edx+eax+92], cx

; 125  : 			this->m_PartyS[n].m_MinLevel = 0;

  00318	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  0031b	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0031e	33 c9		 xor	 ecx, ecx
  00320	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00323	66 89 4c 02 5e	 mov	 WORD PTR [edx+eax+94], cx

; 126  : 			this->SetLevel(n, level);

  00328	8b 45 10	 mov	 eax, DWORD PTR _level$[ebp]
  0032b	50		 push	 eax
  0032c	8b 4d f8	 mov	 ecx, DWORD PTR _n$[ebp]
  0032f	51		 push	 ecx
  00330	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00333	e8 00 00 00 00	 call	 ?SetLevel@PartyClass@@QAEHHH@Z ; PartyClass::SetLevel

; 127  : 
; 128  : 			if ( this->m_PartyCount > OBJMAX-1 )

  00338	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0033b	81 78 04 97 3a
	00 00		 cmp	 DWORD PTR [eax+4], 14999 ; 00003a97H
  00342	7e 0a		 jle	 SHORT $LN6@Create

; 129  : 			{
; 130  : 				this->m_PartyCount=0;

  00344	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00347	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@Create:

; 131  : 			}
; 132  : 
; 133  : 			this->m_PartyS[n].m_PkLevel[0] = gObj[usernumber].m_PK_Level; //Season 2.5 add-on (PK Party)

  0034e	8b 45 08	 mov	 eax, DWORD PTR _usernumber$[ebp]
  00351	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00357	8b 4d f8	 mov	 ecx, DWORD PTR _n$[ebp]
  0035a	6b c9 6c	 imul	 ecx, 108		; 0000006cH
  0035d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00360	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00366	8a 84 06 3d 01
	00 00		 mov	 al, BYTE PTR [esi+eax+317]
  0036d	88 44 0a 60	 mov	 BYTE PTR [edx+ecx+96], al

; 134  : 
; 135  : 			if( this->m_PartyS[n].m_PkLevel[0] >= 5 ) //Season 2.5 add-on

  00371	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  00374	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00377	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0037a	0f be 54 01 60	 movsx	 edx, BYTE PTR [ecx+eax+96]
  0037f	83 fa 05	 cmp	 edx, 5
  00382	7c 2d		 jl	 SHORT $LN5@Create

; 136  : 			{
; 137  : 				this->m_PartyS[n].m_PartyPkLevel = this->m_PartyS[n].m_PkLevel[0];

  00384	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  00387	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0038a	8b 4d f8	 mov	 ecx, DWORD PTR _n$[ebp]
  0038d	6b c9 6c	 imul	 ecx, 108		; 0000006cH
  00390	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00393	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  00396	8a 44 06 60	 mov	 al, BYTE PTR [esi+eax+96]
  0039a	88 44 0a 6a	 mov	 BYTE PTR [edx+ecx+106], al

; 138  : 				this->m_PartyS[n].m_PkCount = 1;

  0039e	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  003a1	6b c0 6c	 imul	 eax, 108		; 0000006cH
  003a4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003a7	c7 44 01 6c 01
	00 00 00	 mov	 DWORD PTR [ecx+eax+108], 1

; 139  : 			}
; 140  : 			else

  003af	eb 1f		 jmp	 SHORT $LN4@Create
$LN5@Create:

; 141  : 			{
; 142  : 				this->m_PartyS[n].m_PartyPkLevel = 3;

  003b1	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  003b4	6b c0 6c	 imul	 eax, 108		; 0000006cH
  003b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003ba	c6 44 01 6a 03	 mov	 BYTE PTR [ecx+eax+106], 3

; 143  : 				this->m_PartyS[n].m_PkCount = 0;

  003bf	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  003c2	6b c0 6c	 imul	 eax, 108		; 0000006cH
  003c5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003c8	c7 44 01 6c 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+108], 0
$LN4@Create:

; 144  : 			}
; 145  : 
; 146  : #if(CUSTOM_SAVE_PT==TRUE)
; 147  : 			if(g_ExLicense.user.PartySave)

  003d0	0f b6 05 e0 00
	00 00		 movzx	 eax, BYTE PTR ?g_ExLicense@@3VCExLicense@@A+224
  003d7	85 c0		 test	 eax, eax
  003d9	74 3c		 je	 SHORT $LN3@Create

; 148  : 			{
; 149  : 				this->DBIndex++;

  003db	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003de	8b 88 28 b9 18
	00		 mov	 ecx, DWORD PTR [eax+1620264]
  003e4	83 c1 01	 add	 ecx, 1
  003e7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  003ea	89 8a 28 b9 18
	00		 mov	 DWORD PTR [edx+1620264], ecx

; 150  : 				this->GD_SetPartyCount();

  003f0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003f3	e8 00 00 00 00	 call	 ?GD_SetPartyCount@PartyClass@@QAEXXZ ; PartyClass::GD_SetPartyCount

; 151  : 				gObj[usernumber].PartyIndex = this->DBIndex;	

  003f8	8b 45 08	 mov	 eax, DWORD PTR _usernumber$[ebp]
  003fb	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00401	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00407	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0040a	8b 92 28 b9 18
	00		 mov	 edx, DWORD PTR [edx+1620264]
  00410	89 94 01 d0 28
	00 00		 mov	 DWORD PTR [ecx+eax+10448], edx
$LN3@Create:

; 152  : 				//GJSetCharacterInfo(&gObj[usernumber], usernumber, 0);
; 153  : 			}
; 154  : #endif
; 155  : 
; 156  : 			return n;

  00417	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  0041a	eb 35		 jmp	 SHORT $LN13@Create
$LN10@Create:

; 157  : 		}
; 158  : 
; 159  : 		n++;

  0041c	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  0041f	83 c0 01	 add	 eax, 1
  00422	89 45 f8	 mov	 DWORD PTR _n$[ebp], eax

; 160  : 
; 161  : 		if ( n> OBJMAX-1 )

  00425	81 7d f8 97 3a
	00 00		 cmp	 DWORD PTR _n$[ebp], 14999 ; 00003a97H
  0042c	7e 07		 jle	 SHORT $LN2@Create

; 162  : 		{
; 163  : 			n=0;

  0042e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _n$[ebp], 0
$LN2@Create:

; 164  : 		}
; 165  : 
; 166  : 		loopcount++;

  00435	8b 45 f4	 mov	 eax, DWORD PTR _loopcount$[ebp]
  00438	83 c0 01	 add	 eax, 1
  0043b	89 45 f4	 mov	 DWORD PTR _loopcount$[ebp], eax

; 167  : 
; 168  : 		if ( loopcount > OBJMAX-1 )

  0043e	81 7d f4 97 3a
	00 00		 cmp	 DWORD PTR _loopcount$[ebp], 14999 ; 00003a97H
  00445	7e 02		 jle	 SHORT $LN1@Create

; 169  : 		{
; 170  : 			break;

  00447	eb 05		 jmp	 SHORT $LN11@Create
$LN1@Create:

; 171  : 		}
; 172  : 	}

  00449	e9 fe fd ff ff	 jmp	 $LN12@Create
$LN11@Create:

; 173  : 
; 174  : 	return -1;

  0044e	83 c8 ff	 or	 eax, -1
$LN13@Create:

; 175  : }

  00451	5f		 pop	 edi
  00452	5e		 pop	 esi
  00453	5b		 pop	 ebx
  00454	8b e5		 mov	 esp, ebp
  00456	5d		 pop	 ebp
  00457	c2 0c 00	 ret	 12			; 0000000cH
?Create@PartyClass@@QAEHHHH@Z ENDP			; PartyClass::Create
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
_party_number$ = 8					; size = 4
_level$ = 12						; size = 4
?SetLevel@PartyClass@@QAEHHH@Z PROC			; PartyClass::SetLevel
; _this$ = ecx

; 178  : {

  00460	55		 push	 ebp
  00461	8b ec		 mov	 ebp, esp
  00463	83 ec 44	 sub	 esp, 68			; 00000044H
  00466	53		 push	 ebx
  00467	56		 push	 esi
  00468	57		 push	 edi
  00469	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 179  : 	if ( this->m_PartyS[party_number].m_MaxLevel  < level )

  0046c	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  0046f	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00472	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00475	0f bf 54 01 5c	 movsx	 edx, WORD PTR [ecx+eax+92]
  0047a	3b 55 0c	 cmp	 edx, DWORD PTR _level$[ebp]
  0047d	7d 12		 jge	 SHORT $LN3@SetLevel

; 180  : 	{
; 181  : 		this->m_PartyS[party_number].m_MaxLevel  = level;

  0047f	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00482	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00485	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00488	66 8b 55 0c	 mov	 dx, WORD PTR _level$[ebp]
  0048c	66 89 54 01 5c	 mov	 WORD PTR [ecx+eax+92], dx
$LN3@SetLevel:

; 182  : 	}
; 183  : 
; 184  : 	if ( this->m_PartyS[party_number].m_MinLevel  == 0 )

  00491	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00494	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00497	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0049a	0f bf 54 01 5e	 movsx	 edx, WORD PTR [ecx+eax+94]
  0049f	85 d2		 test	 edx, edx
  004a1	75 12		 jne	 SHORT $LN2@SetLevel

; 185  : 	{
; 186  : 		this->m_PartyS[party_number].m_MinLevel = level;

  004a3	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  004a6	6b c0 6c	 imul	 eax, 108		; 0000006cH
  004a9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004ac	66 8b 55 0c	 mov	 dx, WORD PTR _level$[ebp]
  004b0	66 89 54 01 5e	 mov	 WORD PTR [ecx+eax+94], dx
$LN2@SetLevel:

; 187  : 	}
; 188  : 
; 189  : 	if ( this->m_PartyS[party_number].m_MinLevel > level )

  004b5	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  004b8	6b c0 6c	 imul	 eax, 108		; 0000006cH
  004bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004be	0f bf 54 01 5e	 movsx	 edx, WORD PTR [ecx+eax+94]
  004c3	3b 55 0c	 cmp	 edx, DWORD PTR _level$[ebp]
  004c6	7e 12		 jle	 SHORT $LN1@SetLevel

; 190  : 	{
; 191  : 		this->m_PartyS[party_number].m_MinLevel = level;

  004c8	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  004cb	6b c0 6c	 imul	 eax, 108		; 0000006cH
  004ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004d1	66 8b 55 0c	 mov	 dx, WORD PTR _level$[ebp]
  004d5	66 89 54 01 5e	 mov	 WORD PTR [ecx+eax+94], dx
$LN1@SetLevel:

; 192  : 	}
; 193  : 
; 194  : 	return TRUE;

  004da	b8 01 00 00 00	 mov	 eax, 1

; 195  : }

  004df	5f		 pop	 edi
  004e0	5e		 pop	 esi
  004e1	5b		 pop	 ebx
  004e2	8b e5		 mov	 esp, ebp
  004e4	5d		 pop	 ebp
  004e5	c2 08 00	 ret	 8
?SetLevel@PartyClass@@QAEHHH@Z ENDP			; PartyClass::SetLevel
_TEXT	ENDS
PUBLIC	?GetLevel@PartyClass@@QAEHHAAH0@Z		; PartyClass::GetLevel
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_party_number$ = 8					; size = 4
_maxlevel$ = 12						; size = 4
_minlevel$ = 16						; size = 4
?GetLevel@PartyClass@@QAEHHAAH0@Z PROC			; PartyClass::GetLevel
; _this$ = ecx

; 199  : {

  004f0	55		 push	 ebp
  004f1	8b ec		 mov	 ebp, esp
  004f3	83 ec 44	 sub	 esp, 68			; 00000044H
  004f6	53		 push	 ebx
  004f7	56		 push	 esi
  004f8	57		 push	 edi
  004f9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 200  : 	if ( this->IsParty(party_number) == FALSE )

  004fc	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  004ff	50		 push	 eax
  00500	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00503	e8 00 00 00 00	 call	 ?IsParty@PartyClass@@QAEHH@Z ; PartyClass::IsParty
  00508	85 c0		 test	 eax, eax
  0050a	75 04		 jne	 SHORT $LN1@GetLevel

; 201  : 	{
; 202  : 		return FALSE;

  0050c	33 c0		 xor	 eax, eax
  0050e	eb 2b		 jmp	 SHORT $LN2@GetLevel
$LN1@GetLevel:

; 203  : 	}
; 204  : 
; 205  : 	maxlevel = this->m_PartyS[party_number].m_MaxLevel;

  00510	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00513	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00516	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00519	0f bf 54 01 5c	 movsx	 edx, WORD PTR [ecx+eax+92]
  0051e	8b 45 0c	 mov	 eax, DWORD PTR _maxlevel$[ebp]
  00521	89 10		 mov	 DWORD PTR [eax], edx

; 206  : 	minlevel = this->m_PartyS[party_number].m_MinLevel;

  00523	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00526	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00529	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0052c	0f bf 54 01 5e	 movsx	 edx, WORD PTR [ecx+eax+94]
  00531	8b 45 10	 mov	 eax, DWORD PTR _minlevel$[ebp]
  00534	89 10		 mov	 DWORD PTR [eax], edx

; 207  : 
; 208  : 	return TRUE;

  00536	b8 01 00 00 00	 mov	 eax, 1
$LN2@GetLevel:

; 209  : }

  0053b	5f		 pop	 edi
  0053c	5e		 pop	 esi
  0053d	5b		 pop	 ebx
  0053e	8b e5		 mov	 esp, ebp
  00540	5d		 pop	 ebp
  00541	c2 0c 00	 ret	 12			; 0000000cH
?GetLevel@PartyClass@@QAEHHAAH0@Z ENDP			; PartyClass::GetLevel
_TEXT	ENDS
PUBLIC	?Destroy@PartyClass@@QAEHH@Z			; PartyClass::Destroy
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_party_number$ = 8					; size = 4
?Destroy@PartyClass@@QAEHH@Z PROC			; PartyClass::Destroy
; _this$ = ecx

; 213  : {

  00550	55		 push	 ebp
  00551	8b ec		 mov	 ebp, esp
  00553	83 ec 44	 sub	 esp, 68			; 00000044H
  00556	53		 push	 ebx
  00557	56		 push	 esi
  00558	57		 push	 edi
  00559	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 214  : 	if ( this->IsParty(party_number) == FALSE )

  0055c	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  0055f	50		 push	 eax
  00560	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00563	e8 00 00 00 00	 call	 ?IsParty@PartyClass@@QAEHH@Z ; PartyClass::IsParty
  00568	85 c0		 test	 eax, eax
  0056a	75 04		 jne	 SHORT $LN1@Destroy

; 215  : 	{
; 216  : 		return FALSE;

  0056c	33 c0		 xor	 eax, eax
  0056e	eb 44		 jmp	 SHORT $LN2@Destroy
$LN1@Destroy:

; 217  : 	}
; 218  : 
; 219  : 	this->m_PartyS[party_number].Count = 0;

  00570	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00573	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00576	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00579	c7 44 01 08 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+8], 0

; 220  : 	this->m_PartyS[party_number].Number[0] = -1;

  00581	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00584	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00587	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0058a	c7 44 01 0c ff
	ff ff ff	 mov	 DWORD PTR [ecx+eax+12], -1

; 221  : 	this->m_PartyS[party_number].DbNumber[0] = -1;

  00592	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00595	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00598	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0059b	c7 44 01 34 ff
	ff ff ff	 mov	 DWORD PTR [ecx+eax+52], -1

; 222  : 	this->m_PartyCount--;

  005a3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  005a6	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  005a9	83 e9 01	 sub	 ecx, 1
  005ac	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  005af	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 223  : 
; 224  : 	return FALSE;

  005b2	33 c0		 xor	 eax, eax
$LN2@Destroy:

; 225  : }

  005b4	5f		 pop	 edi
  005b5	5e		 pop	 esi
  005b6	5b		 pop	 ebx
  005b7	8b e5		 mov	 esp, ebp
  005b9	5d		 pop	 ebp
  005ba	c2 04 00	 ret	 4
?Destroy@PartyClass@@QAEHH@Z ENDP			; PartyClass::Destroy
_TEXT	ENDS
PUBLIC	?Add@PartyClass@@QAEHHHHH@Z			; PartyClass::Add
EXTRN	?g_MaxPartyMember@@3HA:DWORD			; g_MaxPartyMember
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pmObj$228873 = -20					; size = 4
_pmIndex$228872 = -16					; size = 4
_i$228863 = -12						; size = 4
_i$228858 = -8						; size = 4
_this$ = -4						; size = 4
_party_number$ = 8					; size = 4
_usernumber$ = 12					; size = 4
_dbnumber$ = 16						; size = 4
_level$ = 20						; size = 4
?Add@PartyClass@@QAEHHHHH@Z PROC			; PartyClass::Add
; _this$ = ecx

; 229  : {

  005c0	55		 push	 ebp
  005c1	8b ec		 mov	 ebp, esp
  005c3	83 ec 54	 sub	 esp, 84			; 00000054H
  005c6	53		 push	 ebx
  005c7	56		 push	 esi
  005c8	57		 push	 edi
  005c9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 230  : 	if ( this->IsParty(party_number ) == FALSE )

  005cc	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  005cf	50		 push	 eax
  005d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005d3	e8 00 00 00 00	 call	 ?IsParty@PartyClass@@QAEHH@Z ; PartyClass::IsParty
  005d8	85 c0		 test	 eax, eax
  005da	75 08		 jne	 SHORT $LN14@Add

; 231  : 	{
; 232  : 		return -1;

  005dc	83 c8 ff	 or	 eax, -1
  005df	e9 23 02 00 00	 jmp	 $LN15@Add
$LN14@Add:

; 233  : 	}
; 234  : 
; 235  : 	if ( this->m_PartyS[party_number].Count >= OBJMAX )

  005e4	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  005e7	6b c0 6c	 imul	 eax, 108		; 0000006cH
  005ea	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005ed	81 7c 01 08 98
	3a 00 00	 cmp	 DWORD PTR [ecx+eax+8], 15000 ; 00003a98H
  005f5	7c 08		 jl	 SHORT $LN13@Add

; 236  : 	{
; 237  : 		return -1;

  005f7	83 c8 ff	 or	 eax, -1
  005fa	e9 08 02 00 00	 jmp	 $LN15@Add
$LN13@Add:

; 238  : 	}
; 239  : 
; 240  : 	for ( int i = 0; i<MAX_USER_IN_PARTY ; i++)

  005ff	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$228858[ebp], 0
  00606	eb 09		 jmp	 SHORT $LN12@Add
$LN11@Add:
  00608	8b 45 f8	 mov	 eax, DWORD PTR _i$228858[ebp]
  0060b	83 c0 01	 add	 eax, 1
  0060e	89 45 f8	 mov	 DWORD PTR _i$228858[ebp], eax
$LN12@Add:
  00611	83 7d f8 0a	 cmp	 DWORD PTR _i$228858[ebp], 10 ; 0000000aH
  00615	7d 55		 jge	 SHORT $LN10@Add

; 241  : 	{
; 242  : 		if ( (this->m_PartyS[party_number].Number[i] >= 0) && (this->m_PartyS[party_number].Number[i] == usernumber) && (this->m_PartyS[party_number].DbNumber[i] == dbnumber) )

  00617	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  0061a	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0061d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00620	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  00624	8b 45 f8	 mov	 eax, DWORD PTR _i$228858[ebp]
  00627	83 7c 82 04 00	 cmp	 DWORD PTR [edx+eax*4+4], 0
  0062c	7c 3c		 jl	 SHORT $LN9@Add
  0062e	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00631	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00634	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00637	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  0063b	8b 45 f8	 mov	 eax, DWORD PTR _i$228858[ebp]
  0063e	8b 4c 82 04	 mov	 ecx, DWORD PTR [edx+eax*4+4]
  00642	3b 4d 0c	 cmp	 ecx, DWORD PTR _usernumber$[ebp]
  00645	75 23		 jne	 SHORT $LN9@Add
  00647	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  0064a	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0064d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00650	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  00654	8b 45 f8	 mov	 eax, DWORD PTR _i$228858[ebp]
  00657	8b 4c 82 2c	 mov	 ecx, DWORD PTR [edx+eax*4+44]
  0065b	3b 4d 10	 cmp	 ecx, DWORD PTR _dbnumber$[ebp]
  0065e	75 0a		 jne	 SHORT $LN9@Add

; 243  : 		{
; 244  : 			return -2;

  00660	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  00665	e9 9d 01 00 00	 jmp	 $LN15@Add
$LN9@Add:

; 245  : 		}
; 246  : 	}

  0066a	eb 9c		 jmp	 SHORT $LN11@Add
$LN10@Add:

; 247  : 
; 248  : 	for (int i = 0; i<MAX_USER_IN_PARTY ; i++ )

  0066c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$228863[ebp], 0
  00673	eb 09		 jmp	 SHORT $LN8@Add
$LN7@Add:
  00675	8b 45 f4	 mov	 eax, DWORD PTR _i$228863[ebp]
  00678	83 c0 01	 add	 eax, 1
  0067b	89 45 f4	 mov	 DWORD PTR _i$228863[ebp], eax
$LN8@Add:
  0067e	83 7d f4 0a	 cmp	 DWORD PTR _i$228863[ebp], 10 ; 0000000aH
  00682	0f 8d 7c 01 00
	00		 jge	 $LN6@Add

; 249  : 	{
; 250  : #if _NEW_PARTY_SYSTEM_ == TRUE
; 251  : 		if( i >= g_MaxPartyMember)

  00688	8b 45 f4	 mov	 eax, DWORD PTR _i$228863[ebp]
  0068b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?g_MaxPartyMember@@3HA ; g_MaxPartyMember
  00691	7c 08		 jl	 SHORT $LN5@Add

; 252  : 		{
; 253  : 			return -1;

  00693	83 c8 ff	 or	 eax, -1
  00696	e9 6c 01 00 00	 jmp	 $LN15@Add
$LN5@Add:

; 254  : 		}
; 255  : #endif
; 256  : 		if ( this->m_PartyS[party_number].Number[i] == -1 )

  0069b	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  0069e	6b c0 6c	 imul	 eax, 108		; 0000006cH
  006a1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006a4	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  006a8	8b 45 f4	 mov	 eax, DWORD PTR _i$228863[ebp]
  006ab	83 7c 82 04 ff	 cmp	 DWORD PTR [edx+eax*4+4], -1
  006b0	0f 85 49 01 00
	00		 jne	 $LN4@Add

; 257  : 		{
; 258  : 			this->m_PartyS[party_number].Number[i] = usernumber;

  006b6	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  006b9	6b c0 6c	 imul	 eax, 108		; 0000006cH
  006bc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006bf	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  006c3	8b 45 f4	 mov	 eax, DWORD PTR _i$228863[ebp]
  006c6	8b 4d 0c	 mov	 ecx, DWORD PTR _usernumber$[ebp]
  006c9	89 4c 82 04	 mov	 DWORD PTR [edx+eax*4+4], ecx

; 259  : 			this->m_PartyS[party_number].DbNumber[i] = dbnumber;

  006cd	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  006d0	6b c0 6c	 imul	 eax, 108		; 0000006cH
  006d3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006d6	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  006da	8b 45 f4	 mov	 eax, DWORD PTR _i$228863[ebp]
  006dd	8b 4d 10	 mov	 ecx, DWORD PTR _dbnumber$[ebp]
  006e0	89 4c 82 2c	 mov	 DWORD PTR [edx+eax*4+44], ecx

; 260  : 			this->m_PartyS[party_number].Count++;

  006e4	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  006e7	6b c0 6c	 imul	 eax, 108		; 0000006cH
  006ea	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006ed	8b 54 01 08	 mov	 edx, DWORD PTR [ecx+eax+8]
  006f1	83 c2 01	 add	 edx, 1
  006f4	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  006f7	6b c0 6c	 imul	 eax, 108		; 0000006cH
  006fa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006fd	89 54 01 08	 mov	 DWORD PTR [ecx+eax+8], edx

; 261  : 			this->SetLevel(party_number, level);

  00701	8b 45 14	 mov	 eax, DWORD PTR _level$[ebp]
  00704	50		 push	 eax
  00705	8b 4d 08	 mov	 ecx, DWORD PTR _party_number$[ebp]
  00708	51		 push	 ecx
  00709	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0070c	e8 00 00 00 00	 call	 ?SetLevel@PartyClass@@QAEHHH@Z ; PartyClass::SetLevel

; 262  : 			this->m_PartyS[party_number].m_PkLevel[i] = gObj[usernumber].m_PK_Level; //Season 2.5 add-on

  00711	8b 45 0c	 mov	 eax, DWORD PTR _usernumber$[ebp]
  00714	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0071a	8b 4d 08	 mov	 ecx, DWORD PTR _party_number$[ebp]
  0071d	6b c9 6c	 imul	 ecx, 108		; 0000006cH
  00720	03 4d f4	 add	 ecx, DWORD PTR _i$228863[ebp]
  00723	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00726	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0072c	8a 84 06 3d 01
	00 00		 mov	 al, BYTE PTR [esi+eax+317]
  00733	88 44 0a 60	 mov	 BYTE PTR [edx+ecx+96], al

; 263  : 			
; 264  : 			if( this->m_PartyS[party_number].m_PkLevel[i] >= 5 ) //Season 2.5 add-on

  00737	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  0073a	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0073d	03 45 f4	 add	 eax, DWORD PTR _i$228863[ebp]
  00740	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00743	0f be 54 01 60	 movsx	 edx, BYTE PTR [ecx+eax+96]
  00748	83 fa 05	 cmp	 edx, 5
  0074b	7c 61		 jl	 SHORT $LN3@Add

; 265  : 			{
; 266  : 				if( this->m_PartyS[party_number].m_PartyPkLevel < this->m_PartyS[party_number].m_PkLevel[i] )

  0074d	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00750	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00753	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00756	0f be 54 01 6a	 movsx	 edx, BYTE PTR [ecx+eax+106]
  0075b	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  0075e	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00761	03 45 f4	 add	 eax, DWORD PTR _i$228863[ebp]
  00764	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00767	0f be 44 01 60	 movsx	 eax, BYTE PTR [ecx+eax+96]
  0076c	3b d0		 cmp	 edx, eax
  0076e	7d 21		 jge	 SHORT $LN2@Add

; 267  : 				{
; 268  : 					this->m_PartyS[party_number].m_PartyPkLevel = this->m_PartyS[party_number].m_PkLevel[i];

  00770	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00773	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00776	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00779	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  0077d	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00780	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00783	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00786	8b 75 f4	 mov	 esi, DWORD PTR _i$228863[ebp]
  00789	8a 54 32 58	 mov	 dl, BYTE PTR [edx+esi+88]
  0078d	88 54 01 6a	 mov	 BYTE PTR [ecx+eax+106], dl
$LN2@Add:

; 269  : 				}
; 270  : 					
; 271  : 				this->m_PartyS[party_number].m_PkCount += 1;

  00791	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00794	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00797	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0079a	8b 54 01 6c	 mov	 edx, DWORD PTR [ecx+eax+108]
  0079e	83 c2 01	 add	 edx, 1
  007a1	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  007a4	6b c0 6c	 imul	 eax, 108		; 0000006cH
  007a7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  007aa	89 54 01 6c	 mov	 DWORD PTR [ecx+eax+108], edx
$LN3@Add:

; 272  : 			}
; 273  : #if(CUSTOM_SAVE_PT==TRUE)		
; 274  : 			if(g_ExLicense.user.PartySave)

  007ae	0f b6 05 e0 00
	00 00		 movzx	 eax, BYTE PTR ?g_ExLicense@@3VCExLicense@@A+224
  007b5	85 c0		 test	 eax, eax
  007b7	74 41		 je	 SHORT $LN1@Add

; 275  : 			{
; 276  : 				int pmIndex = this->m_PartyS[party_number].Number[0];

  007b9	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  007bc	6b c0 6c	 imul	 eax, 108		; 0000006cH
  007bf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  007c2	8b 54 01 0c	 mov	 edx, DWORD PTR [ecx+eax+12]
  007c6	89 55 f0	 mov	 DWORD PTR _pmIndex$228872[ebp], edx

; 277  : 				LPOBJ pmObj = &gObj[pmIndex];

  007c9	8b 45 f0	 mov	 eax, DWORD PTR _pmIndex$228872[ebp]
  007cc	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  007d2	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  007d8	89 45 ec	 mov	 DWORD PTR _pmObj$228873[ebp], eax

; 278  : 				gObj[usernumber].PartyIndex = pmObj->PartyIndex;

  007db	8b 45 0c	 mov	 eax, DWORD PTR _usernumber$[ebp]
  007de	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  007e4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  007ea	8b 55 ec	 mov	 edx, DWORD PTR _pmObj$228873[ebp]
  007ed	8b 92 d0 28 00
	00		 mov	 edx, DWORD PTR [edx+10448]
  007f3	89 94 01 d0 28
	00 00		 mov	 DWORD PTR [ecx+eax+10448], edx
$LN1@Add:

; 279  : 				//GJSetCharacterInfo(&gObj[usernumber], usernumber, 0);
; 280  : 			}
; 281  : #endif		
; 282  : 			return i;

  007fa	8b 45 f4	 mov	 eax, DWORD PTR _i$228863[ebp]
  007fd	eb 08		 jmp	 SHORT $LN15@Add
$LN4@Add:

; 283  : 		}
; 284  : 	}

  007ff	e9 71 fe ff ff	 jmp	 $LN7@Add
$LN6@Add:

; 285  : 
; 286  : 	return -1;

  00804	83 c8 ff	 or	 eax, -1
$LN15@Add:

; 287  : }

  00807	5f		 pop	 edi
  00808	5e		 pop	 esi
  00809	5b		 pop	 ebx
  0080a	8b e5		 mov	 esp, ebp
  0080c	5d		 pop	 ebp
  0080d	c2 10 00	 ret	 16			; 00000010H
?Add@PartyClass@@QAEHHHHH@Z ENDP			; PartyClass::Add
_TEXT	ENDS
PUBLIC	?Delete@PartyClass@@QAEHHHH@Z			; PartyClass::Delete
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$228881 = -8						; size = 4
_this$ = -4						; size = 4
_party_number$ = 8					; size = 4
_usernumber$ = 12					; size = 4
_dbnumber$ = 16						; size = 4
?Delete@PartyClass@@QAEHHHH@Z PROC			; PartyClass::Delete
; _this$ = ecx

; 290  : {

  00810	55		 push	 ebp
  00811	8b ec		 mov	 ebp, esp
  00813	83 ec 48	 sub	 esp, 72			; 00000048H
  00816	53		 push	 ebx
  00817	56		 push	 esi
  00818	57		 push	 edi
  00819	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 291  : 	if ( this->IsParty(party_number) == FALSE )

  0081c	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  0081f	50		 push	 eax
  00820	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00823	e8 00 00 00 00	 call	 ?IsParty@PartyClass@@QAEHH@Z ; PartyClass::IsParty
  00828	85 c0		 test	 eax, eax
  0082a	75 08		 jne	 SHORT $LN5@Delete

; 292  : 	{
; 293  : 		return -1;

  0082c	83 c8 ff	 or	 eax, -1
  0082f	e9 b9 00 00 00	 jmp	 $LN6@Delete
$LN5@Delete:

; 294  : 	}
; 295  : 
; 296  : 	for ( int i = 0 ; i<MAX_USER_IN_PARTY ; i++ )

  00834	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$228881[ebp], 0
  0083b	eb 09		 jmp	 SHORT $LN4@Delete
$LN3@Delete:
  0083d	8b 45 f8	 mov	 eax, DWORD PTR _i$228881[ebp]
  00840	83 c0 01	 add	 eax, 1
  00843	89 45 f8	 mov	 DWORD PTR _i$228881[ebp], eax
$LN4@Delete:
  00846	83 7d f8 0a	 cmp	 DWORD PTR _i$228881[ebp], 10 ; 0000000aH
  0084a	0f 8d 9a 00 00
	00		 jge	 $LN2@Delete

; 297  : 	{
; 298  : 		if ( (this->m_PartyS[party_number].Number[i] == usernumber) && (this->m_PartyS[party_number].DbNumber[i] == dbnumber) )

  00850	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00853	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00856	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00859	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  0085d	8b 45 f8	 mov	 eax, DWORD PTR _i$228881[ebp]
  00860	8b 4c 82 04	 mov	 ecx, DWORD PTR [edx+eax*4+4]
  00864	3b 4d 0c	 cmp	 ecx, DWORD PTR _usernumber$[ebp]
  00867	75 7c		 jne	 SHORT $LN1@Delete
  00869	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  0086c	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0086f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00872	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  00876	8b 45 f8	 mov	 eax, DWORD PTR _i$228881[ebp]
  00879	8b 4c 82 2c	 mov	 ecx, DWORD PTR [edx+eax*4+44]
  0087d	3b 4d 10	 cmp	 ecx, DWORD PTR _dbnumber$[ebp]
  00880	75 63		 jne	 SHORT $LN1@Delete

; 299  : 		{
; 300  : 			this->m_PartyS[party_number].Number[i] = -1;

  00882	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00885	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00888	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0088b	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  0088f	8b 45 f8	 mov	 eax, DWORD PTR _i$228881[ebp]
  00892	c7 44 82 04 ff
	ff ff ff	 mov	 DWORD PTR [edx+eax*4+4], -1

; 301  : 			this->m_PartyS[party_number].DbNumber[i] = -1;

  0089a	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  0089d	6b c0 6c	 imul	 eax, 108		; 0000006cH
  008a0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008a3	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  008a7	8b 45 f8	 mov	 eax, DWORD PTR _i$228881[ebp]
  008aa	c7 44 82 2c ff
	ff ff ff	 mov	 DWORD PTR [edx+eax*4+44], -1

; 302  : 			this->m_PartyS[party_number].Count--;

  008b2	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  008b5	6b c0 6c	 imul	 eax, 108		; 0000006cH
  008b8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008bb	8b 54 01 08	 mov	 edx, DWORD PTR [ecx+eax+8]
  008bf	83 ea 01	 sub	 edx, 1
  008c2	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  008c5	6b c0 6c	 imul	 eax, 108		; 0000006cH
  008c8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008cb	89 54 01 08	 mov	 DWORD PTR [ecx+eax+8], edx

; 303  : 			this->m_PartyS[party_number].m_PkLevel[i] = 3; //Season 2.5 add-on

  008cf	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  008d2	6b c0 6c	 imul	 eax, 108		; 0000006cH
  008d5	03 45 f8	 add	 eax, DWORD PTR _i$228881[ebp]
  008d8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008db	c6 44 01 60 03	 mov	 BYTE PTR [ecx+eax+96], 3

; 304  : 			return i;

  008e0	8b 45 f8	 mov	 eax, DWORD PTR _i$228881[ebp]
  008e3	eb 08		 jmp	 SHORT $LN6@Delete
$LN1@Delete:

; 305  : 		}
; 306  : 	}

  008e5	e9 53 ff ff ff	 jmp	 $LN3@Delete
$LN2@Delete:

; 307  : 
; 308  : 	return -1;

  008ea	83 c8 ff	 or	 eax, -1
$LN6@Delete:

; 309  : }

  008ed	5f		 pop	 edi
  008ee	5e		 pop	 esi
  008ef	5b		 pop	 ebx
  008f0	8b e5		 mov	 esp, ebp
  008f2	5d		 pop	 ebp
  008f3	c2 0c 00	 ret	 12			; 0000000cH
?Delete@PartyClass@@QAEHHHH@Z ENDP			; PartyClass::Delete
_TEXT	ENDS
PUBLIC	?Delete@PartyClass@@QAEXHH@Z			; PartyClass::Delete
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_party_number$ = 8					; size = 4
_index$ = 12						; size = 4
?Delete@PartyClass@@QAEXHH@Z PROC			; PartyClass::Delete
; _this$ = ecx

; 312  : {

  00900	55		 push	 ebp
  00901	8b ec		 mov	 ebp, esp
  00903	83 ec 44	 sub	 esp, 68			; 00000044H
  00906	53		 push	 ebx
  00907	56		 push	 esi
  00908	57		 push	 edi
  00909	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 313  : 	if ( this->IsParty(party_number) == FALSE )

  0090c	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  0090f	50		 push	 eax
  00910	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00913	e8 00 00 00 00	 call	 ?IsParty@PartyClass@@QAEHH@Z ; PartyClass::IsParty
  00918	85 c0		 test	 eax, eax
  0091a	75 05		 jne	 SHORT $LN4@Delete@2

; 314  : 	{
; 315  : 		return;

  0091c	e9 83 00 00 00	 jmp	 $LN5@Delete@2
$LN4@Delete@2:

; 316  : 	}
; 317  : 
; 318  : 	if ( index < 0 || index > MAX_USER_IN_PARTY -1 )

  00921	83 7d 0c 00	 cmp	 DWORD PTR _index$[ebp], 0
  00925	7c 06		 jl	 SHORT $LN2@Delete@2
  00927	83 7d 0c 09	 cmp	 DWORD PTR _index$[ebp], 9
  0092b	7e 02		 jle	 SHORT $LN3@Delete@2
$LN2@Delete@2:

; 319  : 	{
; 320  : 		return;

  0092d	eb 75		 jmp	 SHORT $LN5@Delete@2
$LN3@Delete@2:

; 321  : 	}
; 322  : 
; 323  : 	if ( this->m_PartyS[party_number].Number[index] >= 0 )

  0092f	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00932	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00935	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00938	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  0093c	8b 45 0c	 mov	 eax, DWORD PTR _index$[ebp]
  0093f	83 7c 82 04 00	 cmp	 DWORD PTR [edx+eax*4+4], 0
  00944	7c 5e		 jl	 SHORT $LN5@Delete@2

; 324  : 	{
; 325  : 		this->m_PartyS[party_number].Number[index] = -1;

  00946	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00949	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0094c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0094f	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  00953	8b 45 0c	 mov	 eax, DWORD PTR _index$[ebp]
  00956	c7 44 82 04 ff
	ff ff ff	 mov	 DWORD PTR [edx+eax*4+4], -1

; 326  : 		this->m_PartyS[party_number].DbNumber[index] = -1;

  0095e	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00961	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00964	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00967	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  0096b	8b 45 0c	 mov	 eax, DWORD PTR _index$[ebp]
  0096e	c7 44 82 2c ff
	ff ff ff	 mov	 DWORD PTR [edx+eax*4+44], -1

; 327  : 		this->m_PartyS[party_number].Count--;

  00976	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00979	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0097c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0097f	8b 54 01 08	 mov	 edx, DWORD PTR [ecx+eax+8]
  00983	83 ea 01	 sub	 edx, 1
  00986	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00989	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0098c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0098f	89 54 01 08	 mov	 DWORD PTR [ecx+eax+8], edx

; 328  : 		this->m_PartyS[party_number].m_PkLevel[index] = 3; //Season 2.5 add-on

  00993	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00996	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00999	03 45 0c	 add	 eax, DWORD PTR _index$[ebp]
  0099c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0099f	c6 44 01 60 03	 mov	 BYTE PTR [ecx+eax+96], 3
$LN5@Delete@2:

; 329  : 	}
; 330  : }

  009a4	5f		 pop	 edi
  009a5	5e		 pop	 esi
  009a6	5b		 pop	 ebx
  009a7	8b e5		 mov	 esp, ebp
  009a9	5d		 pop	 ebp
  009aa	c2 08 00	 ret	 8
?Delete@PartyClass@@QAEXHH@Z ENDP			; PartyClass::Delete
_TEXT	ENDS
PUBLIC	?GetPartyCount@PartyClass@@QAEHH@Z		; PartyClass::GetPartyCount
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_party_number$ = 8					; size = 4
?GetPartyCount@PartyClass@@QAEHH@Z PROC			; PartyClass::GetPartyCount
; _this$ = ecx

; 334  : {

  009b0	55		 push	 ebp
  009b1	8b ec		 mov	 ebp, esp
  009b3	83 ec 44	 sub	 esp, 68			; 00000044H
  009b6	53		 push	 ebx
  009b7	56		 push	 esi
  009b8	57		 push	 edi
  009b9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 335  : 	if ( this->IsParty( party_number ) == FALSE )

  009bc	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  009bf	50		 push	 eax
  009c0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009c3	e8 00 00 00 00	 call	 ?IsParty@PartyClass@@QAEHH@Z ; PartyClass::IsParty
  009c8	85 c0		 test	 eax, eax
  009ca	75 05		 jne	 SHORT $LN1@GetPartyCo

; 336  : 	{
; 337  : 		return -1;

  009cc	83 c8 ff	 or	 eax, -1
  009cf	eb 0d		 jmp	 SHORT $LN2@GetPartyCo
$LN1@GetPartyCo:

; 338  : 	}
; 339  : 
; 340  : 	return this->m_PartyS[party_number].Count;

  009d1	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  009d4	6b c0 6c	 imul	 eax, 108		; 0000006cH
  009d7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009da	8b 44 01 08	 mov	 eax, DWORD PTR [ecx+eax+8]
$LN2@GetPartyCo:

; 341  : }

  009de	5f		 pop	 edi
  009df	5e		 pop	 esi
  009e0	5b		 pop	 ebx
  009e1	8b e5		 mov	 esp, ebp
  009e3	5d		 pop	 ebp
  009e4	c2 04 00	 ret	 4
?GetPartyCount@PartyClass@@QAEHH@Z ENDP			; PartyClass::GetPartyCount
_TEXT	ENDS
PUBLIC	??_C@_03EDAPGMLK@?$FN?0?5?$AA@			; `string'
PUBLIC	??_C@_02DNJFBPJB@?$FN?$FL?$AA@			; `string'
PUBLIC	??_C@_01OHGJGJJP@?$FL?$AA@			; `string'
PUBLIC	??_C@_0BC@JDIKBIFA@PartyMember?$CI?$CFd?$CJ?5?3?$AA@ ; `string'
PUBLIC	?Paint@PartyClass@@QAEXH@Z			; PartyClass::Paint
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	_strcat:PROC
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
EXTRN	__imp__wsprintfA:PROC
;	COMDAT ??_C@_03EDAPGMLK@?$FN?0?5?$AA@
CONST	SEGMENT
??_C@_03EDAPGMLK@?$FN?0?5?$AA@ DB '], ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DNJFBPJB@?$FN?$FL?$AA@
CONST	SEGMENT
??_C@_02DNJFBPJB@?$FN?$FL?$AA@ DB '][', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01OHGJGJJP@?$FL?$AA@
CONST	SEGMENT
??_C@_01OHGJGJJP@?$FL?$AA@ DB '[', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JDIKBIFA@PartyMember?$CI?$CFd?$CJ?5?3?$AA@
CONST	SEGMENT
??_C@_0BC@JDIKBIFA@PartyMember?$CI?$CFd?$CJ?5?3?$AA@ DB 'PartyMember(%d) '
	DB	':', 00H					; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_i$228907 = -12						; size = 4
_usern$ = -8						; size = 4
_this$ = -4						; size = 4
_party_number$ = 8					; size = 4
?Paint@PartyClass@@QAEXH@Z PROC				; PartyClass::Paint
; _this$ = ecx

; 345  : {

  009f0	55		 push	 ebp
  009f1	8b ec		 mov	 ebp, esp
  009f3	83 ec 4c	 sub	 esp, 76			; 0000004cH
  009f6	53		 push	 ebx
  009f7	56		 push	 esi
  009f8	57		 push	 edi
  009f9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 346  : 	if (this->IsParty(party_number) == FALSE )

  009fc	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  009ff	50		 push	 eax
  00a00	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a03	e8 00 00 00 00	 call	 ?IsParty@PartyClass@@QAEHH@Z ; PartyClass::IsParty
  00a08	85 c0		 test	 eax, eax
  00a0a	75 05		 jne	 SHORT $LN6@Paint

; 347  : 	{
; 348  : 		return;

  00a0c	e9 4a 01 00 00	 jmp	 $LN7@Paint
$LN6@Paint:

; 349  : 	}
; 350  : 
; 351  : 	int usern = 0;

  00a11	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _usern$[ebp], 0

; 352  : 	wsprintf( this->m_szTempPaint, "PartyMember(%d) :", this->m_PartyS[party_number].Count);

  00a18	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00a1b	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00a1e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a21	8b 54 01 08	 mov	 edx, DWORD PTR [ecx+eax+8]
  00a25	52		 push	 edx
  00a26	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@JDIKBIFA@PartyMember?$CI?$CFd?$CJ?5?3?$AA@
  00a2b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a2e	05 28 b8 18 00	 add	 eax, 1620008		; 0018b828H
  00a33	50		 push	 eax
  00a34	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  00a3a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 353  : 
; 354  : 	for ( int i = 0; i< MAX_USER_IN_PARTY ; i++ )

  00a3d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$228907[ebp], 0
  00a44	eb 09		 jmp	 SHORT $LN5@Paint
$LN4@Paint:
  00a46	8b 45 f4	 mov	 eax, DWORD PTR _i$228907[ebp]
  00a49	83 c0 01	 add	 eax, 1
  00a4c	89 45 f4	 mov	 DWORD PTR _i$228907[ebp], eax
$LN5@Paint:
  00a4f	83 7d f4 0a	 cmp	 DWORD PTR _i$228907[ebp], 10 ; 0000000aH
  00a53	0f 8d f0 00 00
	00		 jge	 $LN3@Paint

; 355  : 	{
; 356  : 		if ( (this->m_PartyS[party_number].Number[i] != 0 ) && (this->m_PartyS[party_number].DbNumber[i] != 0 ) )

  00a59	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00a5c	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00a5f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a62	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  00a66	8b 45 f4	 mov	 eax, DWORD PTR _i$228907[ebp]
  00a69	83 7c 82 04 00	 cmp	 DWORD PTR [edx+eax*4+4], 0
  00a6e	0f 84 d0 00 00
	00		 je	 $LN2@Paint
  00a74	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00a77	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00a7a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a7d	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  00a81	8b 45 f4	 mov	 eax, DWORD PTR _i$228907[ebp]
  00a84	83 7c 82 2c 00	 cmp	 DWORD PTR [edx+eax*4+44], 0
  00a89	0f 84 b5 00 00
	00		 je	 $LN2@Paint

; 357  : 		{
; 358  : 			usern = this->m_PartyS[party_number].Number[i];

  00a8f	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00a92	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00a95	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a98	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  00a9c	8b 45 f4	 mov	 eax, DWORD PTR _i$228907[ebp]
  00a9f	8b 4c 82 04	 mov	 ecx, DWORD PTR [edx+eax*4+4]
  00aa3	89 4d f8	 mov	 DWORD PTR _usern$[ebp], ecx

; 359  : 
; 360  : 			if ( !gObjIsConnected(usern) )

  00aa6	8b 45 f8	 mov	 eax, DWORD PTR _usern$[ebp]
  00aa9	50		 push	 eax
  00aaa	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00aaf	83 c4 04	 add	 esp, 4
  00ab2	85 c0		 test	 eax, eax
  00ab4	75 02		 jne	 SHORT $LN1@Paint

; 361  : 				continue;

  00ab6	eb 8e		 jmp	 SHORT $LN4@Paint
$LN1@Paint:

; 362  : 
; 363  : 			strcat(this->m_szTempPaint, "[");

  00ab8	68 00 00 00 00	 push	 OFFSET ??_C@_01OHGJGJJP@?$FL?$AA@
  00abd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00ac0	05 28 b8 18 00	 add	 eax, 1620008		; 0018b828H
  00ac5	50		 push	 eax
  00ac6	e8 00 00 00 00	 call	 _strcat
  00acb	83 c4 08	 add	 esp, 8

; 364  : 			strcat(this->m_szTempPaint, gObj[usern].AccountID);

  00ace	8b 45 f8	 mov	 eax, DWORD PTR _usern$[ebp]
  00ad1	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00ad7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00add	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  00ae1	52		 push	 edx
  00ae2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00ae5	05 28 b8 18 00	 add	 eax, 1620008		; 0018b828H
  00aea	50		 push	 eax
  00aeb	e8 00 00 00 00	 call	 _strcat
  00af0	83 c4 08	 add	 esp, 8

; 365  : 			strcat(this->m_szTempPaint, "][");

  00af3	68 00 00 00 00	 push	 OFFSET ??_C@_02DNJFBPJB@?$FN?$FL?$AA@
  00af8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00afb	05 28 b8 18 00	 add	 eax, 1620008		; 0018b828H
  00b00	50		 push	 eax
  00b01	e8 00 00 00 00	 call	 _strcat
  00b06	83 c4 08	 add	 esp, 8

; 366  : 			strcat(this->m_szTempPaint, gObj[usern].Name);

  00b09	8b 45 f8	 mov	 eax, DWORD PTR _usern$[ebp]
  00b0c	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00b12	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00b18	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  00b1c	52		 push	 edx
  00b1d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b20	05 28 b8 18 00	 add	 eax, 1620008		; 0018b828H
  00b25	50		 push	 eax
  00b26	e8 00 00 00 00	 call	 _strcat
  00b2b	83 c4 08	 add	 esp, 8

; 367  : 			strcat(this->m_szTempPaint, "], ");

  00b2e	68 00 00 00 00	 push	 OFFSET ??_C@_03EDAPGMLK@?$FN?0?5?$AA@
  00b33	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b36	05 28 b8 18 00	 add	 eax, 1620008		; 0018b828H
  00b3b	50		 push	 eax
  00b3c	e8 00 00 00 00	 call	 _strcat
  00b41	83 c4 08	 add	 esp, 8
$LN2@Paint:

; 368  : 		}
; 369  : 	}

  00b44	e9 fd fe ff ff	 jmp	 $LN4@Paint
$LN3@Paint:

; 370  : 
; 371  : 	LogAddTD(this->m_szTempPaint);

  00b49	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b4c	05 28 b8 18 00	 add	 eax, 1620008		; 0018b828H
  00b51	50		 push	 eax
  00b52	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00b58	83 c4 04	 add	 esp, 4
$LN7@Paint:

; 372  : }

  00b5b	5f		 pop	 edi
  00b5c	5e		 pop	 esi
  00b5d	5b		 pop	 ebx
  00b5e	8b e5		 mov	 esp, ebp
  00b60	5d		 pop	 ebp
  00b61	c2 04 00	 ret	 4
?Paint@PartyClass@@QAEXH@Z ENDP				; PartyClass::Paint
_TEXT	ENDS
PUBLIC	__real@4024000000000000
PUBLIC	__$ArrayPad$
PUBLIC	?PartyMemberLifeSend@PartyClass@@QAEXH@Z	; PartyClass::PartyMemberLifeSend
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	_memcpy:PROC
EXTRN	?PHeadSetB@@YAXPAEEH@Z:PROC			; PHeadSetB
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
tv238 = -624						; size = 4
tv236 = -620						; size = 4
tv233 = -614						; size = 2
_i$228955 = -548					; size = 4
_i$228945 = -544					; size = 4
_tlife$ = -540						; size = 4
_lOfs$ = -536						; size = 4
_sendbuf$ = -532					; size = 512
_usern$ = -20						; size = 4
_pList$ = -13						; size = 1
_pCount$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_party_number$ = 8					; size = 4
?PartyMemberLifeSend@PartyClass@@QAEXH@Z PROC		; PartyClass::PartyMemberLifeSend
; _this$ = ecx

; 386  : {

  00b70	55		 push	 ebp
  00b71	8b ec		 mov	 ebp, esp
  00b73	81 ec 70 02 00
	00		 sub	 esp, 624		; 00000270H
  00b79	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00b7e	33 c5		 xor	 eax, ebp
  00b80	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00b83	53		 push	 ebx
  00b84	56		 push	 esi
  00b85	57		 push	 edi
  00b86	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 387  : 	if ( this->IsParty(party_number) == FALSE )

  00b89	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00b8c	50		 push	 eax
  00b8d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b90	e8 00 00 00 00	 call	 ?IsParty@PartyClass@@QAEHH@Z ; PartyClass::IsParty
  00b95	85 c0		 test	 eax, eax
  00b97	75 05		 jne	 SHORT $LN11@PartyMembe

; 388  : 	{
; 389  : 		return;

  00b99	e9 78 02 00 00	 jmp	 $LN12@PartyMembe
$LN11@PartyMembe:

; 390  : 	}
; 391  : 
; 392  : 	PMSG_DEFAULT_COUNT pCount;
; 393  : 	PMSG_PARTYLIFEALL pList;
; 394  : 	int usern;
; 395  : 	char sendbuf[512];
; 396  : 	int lOfs = 0;

  00b9e	c7 85 e8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _lOfs$[ebp], 0

; 397  : 	int tlife = 0;

  00ba8	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _tlife$[ebp], 0

; 398  : 
; 399  : 	PHeadSetB((LPBYTE)&pCount, 0x44, sizeof(pCount));

  00bb2	6a 04		 push	 4
  00bb4	6a 44		 push	 68			; 00000044H
  00bb6	8d 45 f4	 lea	 eax, DWORD PTR _pCount$[ebp]
  00bb9	50		 push	 eax
  00bba	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  00bbf	83 c4 0c	 add	 esp, 12			; 0000000cH

; 400  : 	pCount.Count = this->m_PartyS[party_number].Count;

  00bc2	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00bc5	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00bc8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00bcb	8a 54 01 08	 mov	 dl, BYTE PTR [ecx+eax+8]
  00bcf	88 55 f7	 mov	 BYTE PTR _pCount$[ebp+3], dl

; 401  : 	lOfs += sizeof(pCount);

  00bd2	8b 85 e8 fd ff
	ff		 mov	 eax, DWORD PTR _lOfs$[ebp]
  00bd8	83 c0 04	 add	 eax, 4
  00bdb	89 85 e8 fd ff
	ff		 mov	 DWORD PTR _lOfs$[ebp], eax

; 402  : 	
; 403  : 	for ( int i = 0; i<MAX_USER_IN_PARTY ; i++ )

  00be1	c7 85 e0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$228945[ebp], 0
  00beb	eb 0f		 jmp	 SHORT $LN10@PartyMembe
$LN9@PartyMembe:
  00bed	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR _i$228945[ebp]
  00bf3	83 c0 01	 add	 eax, 1
  00bf6	89 85 e0 fd ff
	ff		 mov	 DWORD PTR _i$228945[ebp], eax
$LN10@PartyMembe:
  00bfc	83 bd e0 fd ff
	ff 0a		 cmp	 DWORD PTR _i$228945[ebp], 10 ; 0000000aH
  00c03	0f 8d 8f 01 00
	00		 jge	 $LN8@PartyMembe

; 404  : 	{
; 405  : 		if ( (this->m_PartyS[party_number].Number[i] >= 0 ) && (this->m_PartyS[party_number].DbNumber[i] >= 0) )

  00c09	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00c0c	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00c0f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00c12	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  00c16	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR _i$228945[ebp]
  00c1c	83 7c 82 04 00	 cmp	 DWORD PTR [edx+eax*4+4], 0
  00c21	0f 8c 6c 01 00
	00		 jl	 $LN5@PartyMembe
  00c27	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00c2a	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00c2d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00c30	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  00c34	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR _i$228945[ebp]
  00c3a	83 7c 82 2c 00	 cmp	 DWORD PTR [edx+eax*4+44], 0
  00c3f	0f 8c 4e 01 00
	00		 jl	 $LN5@PartyMembe

; 406  : 		{
; 407  : 			usern = this->m_PartyS[party_number].Number[i];

  00c45	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00c48	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00c4b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00c4e	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  00c52	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR _i$228945[ebp]
  00c58	8b 4c 82 04	 mov	 ecx, DWORD PTR [edx+eax*4+4]
  00c5c	89 4d ec	 mov	 DWORD PTR _usern$[ebp], ecx

; 408  : 
; 409  : 			if ( gObjIsConnected(usern) != PLAYER_EMPTY )

  00c5f	8b 45 ec	 mov	 eax, DWORD PTR _usern$[ebp]
  00c62	50		 push	 eax
  00c63	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00c68	83 c4 04	 add	 esp, 4
  00c6b	85 c0		 test	 eax, eax
  00c6d	0f 84 cd 00 00
	00		 je	 $LN6@PartyMembe

; 410  : 			{
; 411  : 				pList.Number = (i << 4) & 0xF0 ;

  00c73	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR _i$228945[ebp]
  00c79	c1 e0 04	 shl	 eax, 4
  00c7c	25 f0 00 00 00	 and	 eax, 240		; 000000f0H
  00c81	88 45 f3	 mov	 BYTE PTR _pList$[ebp], al

; 412  : 				tlife = ( (BYTE)(  gObj[usern].Life / ((gObj[usern].MaxLife + gObj[usern].AddLife )/10.0f)     )  ) & 0x0F;

  00c84	8b 45 ec	 mov	 eax, DWORD PTR _usern$[ebp]
  00c87	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00c8d	8b 4d ec	 mov	 ecx, DWORD PTR _usern$[ebp]
  00c90	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00c96	8b 55 ec	 mov	 edx, DWORD PTR _usern$[ebp]
  00c99	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  00c9f	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00ca5	db 84 16 4c 01
	00 00		 fild	 DWORD PTR [esi+edx+332]
  00cac	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00cb2	d8 84 0a 00 01
	00 00		 fadd	 DWORD PTR [edx+ecx+256]
  00cb9	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4024000000000000
  00cbf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00cc5	d8 bc 01 fc 00
	00 00		 fdivr	 DWORD PTR [ecx+eax+252]
  00ccc	d9 bd 9a fd ff
	ff		 fnstcw	 WORD PTR tv233[ebp]
  00cd2	0f b7 85 9a fd
	ff ff		 movzx	 eax, WORD PTR tv233[ebp]
  00cd9	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  00cde	89 85 94 fd ff
	ff		 mov	 DWORD PTR tv236[ebp], eax
  00ce4	d9 ad 94 fd ff
	ff		 fldcw	 WORD PTR tv236[ebp]
  00cea	db 9d 90 fd ff
	ff		 fistp	 DWORD PTR tv238[ebp]
  00cf0	d9 ad 9a fd ff
	ff		 fldcw	 WORD PTR tv233[ebp]
  00cf6	0f b6 95 90 fd
	ff ff		 movzx	 edx, BYTE PTR tv238[ebp]
  00cfd	83 e2 0f	 and	 edx, 15			; 0000000fH
  00d00	89 95 e4 fd ff
	ff		 mov	 DWORD PTR _tlife$[ebp], edx

; 413  : 				pList.Number |= tlife;

  00d06	0f b6 45 f3	 movzx	 eax, BYTE PTR _pList$[ebp]
  00d0a	0b 85 e4 fd ff
	ff		 or	 eax, DWORD PTR _tlife$[ebp]
  00d10	88 45 f3	 mov	 BYTE PTR _pList$[ebp], al

; 414  : 				memcpy(sendbuf+lOfs, (char*)&pList, 1);

  00d13	6a 01		 push	 1
  00d15	8d 45 f3	 lea	 eax, DWORD PTR _pList$[ebp]
  00d18	50		 push	 eax
  00d19	8b 8d e8 fd ff
	ff		 mov	 ecx, DWORD PTR _lOfs$[ebp]
  00d1f	8d 94 0d ec fd
	ff ff		 lea	 edx, DWORD PTR _sendbuf$[ebp+ecx]
  00d26	52		 push	 edx
  00d27	e8 00 00 00 00	 call	 _memcpy
  00d2c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 415  : 				lOfs++;

  00d2f	8b 85 e8 fd ff
	ff		 mov	 eax, DWORD PTR _lOfs$[ebp]
  00d35	83 c0 01	 add	 eax, 1
  00d38	89 85 e8 fd ff
	ff		 mov	 DWORD PTR _lOfs$[ebp], eax

; 416  : 			}
; 417  : 			else

  00d3e	eb 53		 jmp	 SHORT $LN5@PartyMembe
$LN6@PartyMembe:

; 418  : 			{
; 419  : 				this->m_PartyS[party_number].Number[i] = -1;

  00d40	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00d43	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00d46	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00d49	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  00d4d	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR _i$228945[ebp]
  00d53	c7 44 82 04 ff
	ff ff ff	 mov	 DWORD PTR [edx+eax*4+4], -1

; 420  : 				this->m_PartyS[party_number].DbNumber[i] = -1;

  00d5b	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00d5e	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00d61	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00d64	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  00d68	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR _i$228945[ebp]
  00d6e	c7 44 82 2c ff
	ff ff ff	 mov	 DWORD PTR [edx+eax*4+44], -1

; 421  : 				this->m_PartyS[party_number].Count--;

  00d76	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00d79	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00d7c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00d7f	8b 54 01 08	 mov	 edx, DWORD PTR [ecx+eax+8]
  00d83	83 ea 01	 sub	 edx, 1
  00d86	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00d89	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00d8c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00d8f	89 54 01 08	 mov	 DWORD PTR [ecx+eax+8], edx
$LN5@PartyMembe:

; 422  : 			}
; 423  : 		}
; 424  : 	}

  00d93	e9 55 fe ff ff	 jmp	 $LN9@PartyMembe
$LN8@PartyMembe:

; 425  : 
; 426  : 	pCount.h.size = lOfs;

  00d98	8a 85 e8 fd ff
	ff		 mov	 al, BYTE PTR _lOfs$[ebp]
  00d9e	88 45 f5	 mov	 BYTE PTR _pCount$[ebp+1], al

; 427  : 	memcpy(sendbuf, (char*)&pCount, sizeof(pCount));

  00da1	6a 04		 push	 4
  00da3	8d 45 f4	 lea	 eax, DWORD PTR _pCount$[ebp]
  00da6	50		 push	 eax
  00da7	8d 8d ec fd ff
	ff		 lea	 ecx, DWORD PTR _sendbuf$[ebp]
  00dad	51		 push	 ecx
  00dae	e8 00 00 00 00	 call	 _memcpy
  00db3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 428  : 
; 429  : 	for (int i=0 ; i<MAX_USER_IN_PARTY ; i++ )

  00db6	c7 85 dc fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$228955[ebp], 0
  00dc0	eb 0f		 jmp	 SHORT $LN4@PartyMembe
$LN3@PartyMembe:
  00dc2	8b 85 dc fd ff
	ff		 mov	 eax, DWORD PTR _i$228955[ebp]
  00dc8	83 c0 01	 add	 eax, 1
  00dcb	89 85 dc fd ff
	ff		 mov	 DWORD PTR _i$228955[ebp], eax
$LN4@PartyMembe:
  00dd1	83 bd dc fd ff
	ff 0a		 cmp	 DWORD PTR _i$228955[ebp], 10 ; 0000000aH
  00dd8	7d 3c		 jge	 SHORT $LN2@PartyMembe

; 430  : 	{
; 431  : 		usern = this->m_PartyS[party_number].Number[i];

  00dda	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00ddd	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00de0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00de3	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  00de7	8b 85 dc fd ff
	ff		 mov	 eax, DWORD PTR _i$228955[ebp]
  00ded	8b 4c 82 04	 mov	 ecx, DWORD PTR [edx+eax*4+4]
  00df1	89 4d ec	 mov	 DWORD PTR _usern$[ebp], ecx

; 432  : 
; 433  : 		if ( usern >= 0 )

  00df4	83 7d ec 00	 cmp	 DWORD PTR _usern$[ebp], 0
  00df8	7c 1a		 jl	 SHORT $LN1@PartyMembe

; 434  : 		{
; 435  : 			DataSend(usern, (LPBYTE)sendbuf, lOfs);

  00dfa	8b 85 e8 fd ff
	ff		 mov	 eax, DWORD PTR _lOfs$[ebp]
  00e00	50		 push	 eax
  00e01	8d 8d ec fd ff
	ff		 lea	 ecx, DWORD PTR _sendbuf$[ebp]
  00e07	51		 push	 ecx
  00e08	8b 55 ec	 mov	 edx, DWORD PTR _usern$[ebp]
  00e0b	52		 push	 edx
  00e0c	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00e11	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@PartyMembe:

; 436  : 		}
; 437  : 	}

  00e14	eb ac		 jmp	 SHORT $LN3@PartyMembe
$LN2@PartyMembe:
$LN12@PartyMembe:

; 438  : }

  00e16	5f		 pop	 edi
  00e17	5e		 pop	 esi
  00e18	5b		 pop	 ebx
  00e19	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00e1c	33 cd		 xor	 ecx, ebp
  00e1e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00e23	8b e5		 mov	 esp, ebp
  00e25	5d		 pop	 ebp
  00e26	c2 04 00	 ret	 4
?PartyMemberLifeSend@PartyClass@@QAEXH@Z ENDP		; PartyClass::PartyMemberLifeSend
_TEXT	ENDS
PUBLIC	?GetPkLevel@PartyClass@@QAEDH@Z			; PartyClass::GetPkLevel
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_party_number$ = 8					; size = 4
?GetPkLevel@PartyClass@@QAEDH@Z PROC			; PartyClass::GetPkLevel
; _this$ = ecx

; 441  : {

  00e30	55		 push	 ebp
  00e31	8b ec		 mov	 ebp, esp
  00e33	83 ec 44	 sub	 esp, 68			; 00000044H
  00e36	53		 push	 ebx
  00e37	56		 push	 esi
  00e38	57		 push	 edi
  00e39	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 442  : #if(FIX_PKLEVEL)
; 443  : 	return 3;

  00e3c	b0 03		 mov	 al, 3

; 444  : #else
; 445  : 	return this->m_PartyS[party_number].m_PartyPkLevel;
; 446  : #endif
; 447  : }

  00e3e	5f		 pop	 edi
  00e3f	5e		 pop	 esi
  00e40	5b		 pop	 ebx
  00e41	8b e5		 mov	 esp, ebp
  00e43	5d		 pop	 ebp
  00e44	c2 04 00	 ret	 4
?GetPkLevel@PartyClass@@QAEDH@Z ENDP			; PartyClass::GetPkLevel
_TEXT	ENDS
PUBLIC	?SetPkLevel@PartyClass@@QAEXHHHD@Z		; PartyClass::SetPkLevel
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$228973 = -8						; size = 4
_this$ = -4						; size = 4
_party_number$ = 8					; size = 4
_usernumber$ = 12					; size = 4
_dbnumber$ = 16						; size = 4
_pklevel$ = 20						; size = 1
?SetPkLevel@PartyClass@@QAEXHHHD@Z PROC			; PartyClass::SetPkLevel
; _this$ = ecx

; 450  : {

  00e50	55		 push	 ebp
  00e51	8b ec		 mov	 ebp, esp
  00e53	83 ec 48	 sub	 esp, 72			; 00000048H
  00e56	53		 push	 ebx
  00e57	56		 push	 esi
  00e58	57		 push	 edi
  00e59	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 451  : 	if ( this->IsParty(party_number) == FALSE )

  00e5c	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00e5f	50		 push	 eax
  00e60	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e63	e8 00 00 00 00	 call	 ?IsParty@PartyClass@@QAEHH@Z ; PartyClass::IsParty
  00e68	85 c0		 test	 eax, eax
  00e6a	75 02		 jne	 SHORT $LN5@SetPkLevel

; 452  : 	{
; 453  : 		return;

  00e6c	eb 61		 jmp	 SHORT $LN6@SetPkLevel
$LN5@SetPkLevel:

; 454  : 	}
; 455  : 	
; 456  : 	for ( int i = 0; i<MAX_USER_IN_PARTY ; i++ )

  00e6e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$228973[ebp], 0
  00e75	eb 09		 jmp	 SHORT $LN4@SetPkLevel
$LN3@SetPkLevel:
  00e77	8b 45 f8	 mov	 eax, DWORD PTR _i$228973[ebp]
  00e7a	83 c0 01	 add	 eax, 1
  00e7d	89 45 f8	 mov	 DWORD PTR _i$228973[ebp], eax
$LN4@SetPkLevel:
  00e80	83 7d f8 0a	 cmp	 DWORD PTR _i$228973[ebp], 10 ; 0000000aH
  00e84	7d 49		 jge	 SHORT $LN6@SetPkLevel

; 457  : 	{
; 458  : 		if ( (this->m_PartyS[party_number].Number[i] == usernumber ) && (this->m_PartyS[party_number].DbNumber[i] == dbnumber) )

  00e86	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00e89	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00e8c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e8f	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  00e93	8b 45 f8	 mov	 eax, DWORD PTR _i$228973[ebp]
  00e96	8b 4c 82 04	 mov	 ecx, DWORD PTR [edx+eax*4+4]
  00e9a	3b 4d 0c	 cmp	 ecx, DWORD PTR _usernumber$[ebp]
  00e9d	75 2e		 jne	 SHORT $LN1@SetPkLevel
  00e9f	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00ea2	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00ea5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00ea8	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  00eac	8b 45 f8	 mov	 eax, DWORD PTR _i$228973[ebp]
  00eaf	8b 4c 82 2c	 mov	 ecx, DWORD PTR [edx+eax*4+44]
  00eb3	3b 4d 10	 cmp	 ecx, DWORD PTR _dbnumber$[ebp]
  00eb6	75 15		 jne	 SHORT $LN1@SetPkLevel

; 459  : 		{
; 460  : 			this->m_PartyS[party_number].m_PkLevel[i] = pklevel;

  00eb8	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00ebb	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00ebe	03 45 f8	 add	 eax, DWORD PTR _i$228973[ebp]
  00ec1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00ec4	8a 55 14	 mov	 dl, BYTE PTR _pklevel$[ebp]
  00ec7	88 54 01 60	 mov	 BYTE PTR [ecx+eax+96], dl

; 461  : 			break;

  00ecb	eb 02		 jmp	 SHORT $LN6@SetPkLevel
$LN1@SetPkLevel:

; 462  : 		}
; 463  : 	}

  00ecd	eb a8		 jmp	 SHORT $LN3@SetPkLevel
$LN6@SetPkLevel:

; 464  : }

  00ecf	5f		 pop	 edi
  00ed0	5e		 pop	 esi
  00ed1	5b		 pop	 ebx
  00ed2	8b e5		 mov	 esp, ebp
  00ed4	5d		 pop	 ebp
  00ed5	c2 10 00	 ret	 16			; 00000010H
?SetPkLevel@PartyClass@@QAEXHHHD@Z ENDP			; PartyClass::SetPkLevel
_TEXT	ENDS
PUBLIC	?SetPkCount@PartyClass@@QAEXH@Z			; PartyClass::SetPkCount
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$228984 = -16						; size = 4
_usern$ = -12						; size = 4
_PKUserCount$ = -8					; size = 4
_this$ = -4						; size = 4
_party_number$ = 8					; size = 4
?SetPkCount@PartyClass@@QAEXH@Z PROC			; PartyClass::SetPkCount
; _this$ = ecx

; 467  : {

  00ee0	55		 push	 ebp
  00ee1	8b ec		 mov	 ebp, esp
  00ee3	83 ec 50	 sub	 esp, 80			; 00000050H
  00ee6	53		 push	 ebx
  00ee7	56		 push	 esi
  00ee8	57		 push	 edi
  00ee9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 468  : 	int PKUserCount = 0;//lc2

  00eec	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _PKUserCount$[ebp], 0

; 469  : 	int usern = 0;//lc3

  00ef3	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _usern$[ebp], 0

; 470  : 
; 471  : 	for ( int i = 0; i<MAX_USER_IN_PARTY ; i++ )

  00efa	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$228984[ebp], 0
  00f01	eb 09		 jmp	 SHORT $LN6@SetPkCount
$LN5@SetPkCount:
  00f03	8b 45 f0	 mov	 eax, DWORD PTR _i$228984[ebp]
  00f06	83 c0 01	 add	 eax, 1
  00f09	89 45 f0	 mov	 DWORD PTR _i$228984[ebp], eax
$LN6@SetPkCount:
  00f0c	83 7d f0 0a	 cmp	 DWORD PTR _i$228984[ebp], 10 ; 0000000aH
  00f10	0f 8d 85 00 00
	00		 jge	 $LN4@SetPkCount

; 472  : 	{
; 473  : 		usern = this->m_PartyS[party_number].Number[i];

  00f16	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00f19	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00f1c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f1f	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  00f23	8b 45 f0	 mov	 eax, DWORD PTR _i$228984[ebp]
  00f26	8b 4c 82 04	 mov	 ecx, DWORD PTR [edx+eax*4+4]
  00f2a	89 4d f4	 mov	 DWORD PTR _usern$[ebp], ecx

; 474  : 
; 475  : 		if( usern >= 0 && this->m_PartyS[party_number].m_PkLevel[i] >= 5)

  00f2d	83 7d f4 00	 cmp	 DWORD PTR _usern$[ebp], 0
  00f31	7c 63		 jl	 SHORT $LN3@SetPkCount
  00f33	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00f36	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00f39	03 45 f0	 add	 eax, DWORD PTR _i$228984[ebp]
  00f3c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f3f	0f be 54 01 60	 movsx	 edx, BYTE PTR [ecx+eax+96]
  00f44	83 fa 05	 cmp	 edx, 5
  00f47	7c 4d		 jl	 SHORT $LN3@SetPkCount

; 476  : 		{
; 477  : 			if( this->m_PartyS[party_number].m_PartyPkLevel  < this->m_PartyS[party_number].m_PkLevel[i] )

  00f49	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00f4c	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00f4f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f52	0f be 54 01 6a	 movsx	 edx, BYTE PTR [ecx+eax+106]
  00f57	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00f5a	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00f5d	03 45 f0	 add	 eax, DWORD PTR _i$228984[ebp]
  00f60	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f63	0f be 44 01 60	 movsx	 eax, BYTE PTR [ecx+eax+96]
  00f68	3b d0		 cmp	 edx, eax
  00f6a	7d 21		 jge	 SHORT $LN2@SetPkCount

; 478  : 			{
; 479  : 				this->m_PartyS[party_number].m_PartyPkLevel = this->m_PartyS[party_number].m_PkLevel[i];

  00f6c	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00f6f	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00f72	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f75	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  00f79	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00f7c	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00f7f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f82	8b 75 f0	 mov	 esi, DWORD PTR _i$228984[ebp]
  00f85	8a 54 32 58	 mov	 dl, BYTE PTR [edx+esi+88]
  00f89	88 54 01 6a	 mov	 BYTE PTR [ecx+eax+106], dl
$LN2@SetPkCount:

; 480  : 			}
; 481  : 			PKUserCount++;

  00f8d	8b 45 f8	 mov	 eax, DWORD PTR _PKUserCount$[ebp]
  00f90	83 c0 01	 add	 eax, 1
  00f93	89 45 f8	 mov	 DWORD PTR _PKUserCount$[ebp], eax
$LN3@SetPkCount:

; 482  : 		}
; 483  : 	}

  00f96	e9 68 ff ff ff	 jmp	 $LN5@SetPkCount
$LN4@SetPkCount:

; 484  : 	
; 485  : 	this->m_PartyS[party_number].m_PkCount = PKUserCount;

  00f9b	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00f9e	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00fa1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00fa4	8b 55 f8	 mov	 edx, DWORD PTR _PKUserCount$[ebp]
  00fa7	89 54 01 6c	 mov	 DWORD PTR [ecx+eax+108], edx

; 486  : 
; 487  : 	if( PKUserCount == 0 )

  00fab	83 7d f8 00	 cmp	 DWORD PTR _PKUserCount$[ebp], 0
  00faf	75 0e		 jne	 SHORT $LN7@SetPkCount

; 488  : 	{
; 489  : 		this->m_PartyS[party_number].m_PartyPkLevel = 3;

  00fb1	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  00fb4	6b c0 6c	 imul	 eax, 108		; 0000006cH
  00fb7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00fba	c6 44 01 6a 03	 mov	 BYTE PTR [ecx+eax+106], 3
$LN7@SetPkCount:

; 490  : 	}
; 491  : }

  00fbf	5f		 pop	 edi
  00fc0	5e		 pop	 esi
  00fc1	5b		 pop	 ebx
  00fc2	8b e5		 mov	 esp, ebp
  00fc4	5d		 pop	 ebp
  00fc5	c2 04 00	 ret	 4
?SetPkCount@PartyClass@@QAEXH@Z ENDP			; PartyClass::SetPkCount
_TEXT	ENDS
PUBLIC	?ResetPkLevel@PartyClass@@QAEXH@Z		; PartyClass::ResetPkLevel
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$228996 = -12						; size = 4
_usern$ = -8						; size = 4
_this$ = -4						; size = 4
_party_number$ = 8					; size = 4
?ResetPkLevel@PartyClass@@QAEXH@Z PROC			; PartyClass::ResetPkLevel
; _this$ = ecx

; 494  : {

  00fd0	55		 push	 ebp
  00fd1	8b ec		 mov	 ebp, esp
  00fd3	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00fd6	53		 push	 ebx
  00fd7	56		 push	 esi
  00fd8	57		 push	 edi
  00fd9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 495  : 	int usern = 0;

  00fdc	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _usern$[ebp], 0

; 496  : 
; 497  : 	for ( int i = 0; i<MAX_USER_IN_PARTY ; i++ )

  00fe3	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$228996[ebp], 0
  00fea	eb 09		 jmp	 SHORT $LN4@ResetPkLev
$LN3@ResetPkLev:
  00fec	8b 45 f4	 mov	 eax, DWORD PTR _i$228996[ebp]
  00fef	83 c0 01	 add	 eax, 1
  00ff2	89 45 f4	 mov	 DWORD PTR _i$228996[ebp], eax
$LN4@ResetPkLev:
  00ff5	83 7d f4 0a	 cmp	 DWORD PTR _i$228996[ebp], 10 ; 0000000aH
  00ff9	0f 8d cc 00 00
	00		 jge	 $LN5@ResetPkLev

; 498  : 	{
; 499  : 		usern = this->m_PartyS[party_number].Number[i];

  00fff	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01002	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01005	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01008	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  0100c	8b 45 f4	 mov	 eax, DWORD PTR _i$228996[ebp]
  0100f	8b 4c 82 04	 mov	 ecx, DWORD PTR [edx+eax*4+4]
  01013	89 4d f8	 mov	 DWORD PTR _usern$[ebp], ecx

; 500  : 
; 501  : 		if( usern >= 0 )

  01016	83 7d f8 00	 cmp	 DWORD PTR _usern$[ebp], 0
  0101a	0f 8c a6 00 00
	00		 jl	 $LN1@ResetPkLev

; 502  : 		{
; 503  : 			this->m_PartyS[party_number].Number[0] = this->m_PartyS[party_number].Number[i];

  01020	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01023	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01029	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  0102d	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01030	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01036	8b 75 f4	 mov	 esi, DWORD PTR _i$228996[ebp]
  01039	8b 54 b2 04	 mov	 edx, DWORD PTR [edx+esi*4+4]
  0103d	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 504  : 			this->m_PartyS[party_number].Number[i] = -1;

  01041	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01044	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0104a	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  0104e	8b 45 f4	 mov	 eax, DWORD PTR _i$228996[ebp]
  01051	c7 44 82 04 ff
	ff ff ff	 mov	 DWORD PTR [edx+eax*4+4], -1

; 505  : 			this->m_PartyS[party_number].DbNumber[0] = this->m_PartyS[party_number].DbNumber[i];

  01059	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  0105c	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0105f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01062	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  01066	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01069	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0106c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0106f	8b 75 f4	 mov	 esi, DWORD PTR _i$228996[ebp]
  01072	8b 54 b2 2c	 mov	 edx, DWORD PTR [edx+esi*4+44]
  01076	89 54 01 34	 mov	 DWORD PTR [ecx+eax+52], edx

; 506  : 			this->m_PartyS[party_number].DbNumber[i] = -1;

  0107a	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  0107d	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01080	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01083	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  01087	8b 45 f4	 mov	 eax, DWORD PTR _i$228996[ebp]
  0108a	c7 44 82 2c ff
	ff ff ff	 mov	 DWORD PTR [edx+eax*4+44], -1

; 507  : 			this->m_PartyS[party_number].m_PkLevel[0] = this->m_PartyS[party_number].m_PkLevel[i];

  01092	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01095	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01098	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0109b	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  0109f	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  010a2	6b c0 6c	 imul	 eax, 108		; 0000006cH
  010a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  010a8	8b 75 f4	 mov	 esi, DWORD PTR _i$228996[ebp]
  010ab	8a 54 32 58	 mov	 dl, BYTE PTR [edx+esi+88]
  010af	88 54 01 60	 mov	 BYTE PTR [ecx+eax+96], dl

; 508  : 			this->m_PartyS[party_number].m_PkLevel[i] = 3;

  010b3	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  010b6	6b c0 6c	 imul	 eax, 108		; 0000006cH
  010b9	03 45 f4	 add	 eax, DWORD PTR _i$228996[ebp]
  010bc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  010bf	c6 44 01 60 03	 mov	 BYTE PTR [ecx+eax+96], 3

; 509  : 			break;

  010c4	eb 05		 jmp	 SHORT $LN5@ResetPkLev
$LN1@ResetPkLev:

; 510  : 		}
; 511  : 	}

  010c6	e9 21 ff ff ff	 jmp	 $LN3@ResetPkLev
$LN5@ResetPkLev:

; 512  : }

  010cb	5f		 pop	 edi
  010cc	5e		 pop	 esi
  010cd	5b		 pop	 ebx
  010ce	8b e5		 mov	 esp, ebp
  010d0	5d		 pop	 ebp
  010d1	c2 04 00	 ret	 4
?ResetPkLevel@PartyClass@@QAEXH@Z ENDP			; PartyClass::ResetPkLevel
_TEXT	ENDS
PUBLIC	?ChangeLeader@PartyClass@@QAEXH@Z		; PartyClass::ChangeLeader
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$229005 = -8						; size = 4
_this$ = -4						; size = 4
_party_number$ = 8					; size = 4
?ChangeLeader@PartyClass@@QAEXH@Z PROC			; PartyClass::ChangeLeader
; _this$ = ecx

; 516  : {

  010e0	55		 push	 ebp
  010e1	8b ec		 mov	 ebp, esp
  010e3	83 ec 48	 sub	 esp, 72			; 00000048H
  010e6	53		 push	 ebx
  010e7	56		 push	 esi
  010e8	57		 push	 edi
  010e9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 517  : 	for( int i = 0; i < MAX_USER_IN_PARTY; i++ )

  010ec	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$229005[ebp], 0
  010f3	eb 09		 jmp	 SHORT $LN4@ChangeLead
$LN3@ChangeLead:
  010f5	8b 45 f8	 mov	 eax, DWORD PTR _i$229005[ebp]
  010f8	83 c0 01	 add	 eax, 1
  010fb	89 45 f8	 mov	 DWORD PTR _i$229005[ebp], eax
$LN4@ChangeLead:
  010fe	83 7d f8 0a	 cmp	 DWORD PTR _i$229005[ebp], 10 ; 0000000aH
  01102	0f 8d c6 00 00
	00		 jge	 $LN5@ChangeLead

; 518  : 	{
; 519  : 		if( this->m_PartyS[party_number].Number[i] >= 0 )

  01108	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  0110b	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0110e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01111	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  01115	8b 45 f8	 mov	 eax, DWORD PTR _i$229005[ebp]
  01118	83 7c 82 04 00	 cmp	 DWORD PTR [edx+eax*4+4], 0
  0111d	0f 8c a6 00 00
	00		 jl	 $LN1@ChangeLead

; 520  : 		{
; 521  : 			this->m_PartyS[party_number].Number[0]			= this->m_PartyS[party_number].Number[i];

  01123	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01126	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01129	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0112c	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  01130	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01133	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01136	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01139	8b 75 f8	 mov	 esi, DWORD PTR _i$229005[ebp]
  0113c	8b 54 b2 04	 mov	 edx, DWORD PTR [edx+esi*4+4]
  01140	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 522  : 			this->m_PartyS[party_number].Number[i]			= -1;

  01144	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01147	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0114a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0114d	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  01151	8b 45 f8	 mov	 eax, DWORD PTR _i$229005[ebp]
  01154	c7 44 82 04 ff
	ff ff ff	 mov	 DWORD PTR [edx+eax*4+4], -1

; 523  : 			this->m_PartyS[party_number].DbNumber[0]		= this->m_PartyS[party_number].DbNumber[i];

  0115c	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  0115f	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01162	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01165	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  01169	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  0116c	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0116f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01172	8b 75 f8	 mov	 esi, DWORD PTR _i$229005[ebp]
  01175	8b 54 b2 2c	 mov	 edx, DWORD PTR [edx+esi*4+44]
  01179	89 54 01 34	 mov	 DWORD PTR [ecx+eax+52], edx

; 524  : 			this->m_PartyS[party_number].DbNumber[i]		= -1;

  0117d	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01180	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01183	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01186	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  0118a	8b 45 f8	 mov	 eax, DWORD PTR _i$229005[ebp]
  0118d	c7 44 82 2c ff
	ff ff ff	 mov	 DWORD PTR [edx+eax*4+44], -1

; 525  : 			this->m_PartyS[party_number].m_PkLevel[0]		= this->m_PartyS[party_number].m_PkLevel[i];

  01195	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01198	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0119b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0119e	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  011a2	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  011a5	6b c0 6c	 imul	 eax, 108		; 0000006cH
  011a8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  011ab	8b 75 f8	 mov	 esi, DWORD PTR _i$229005[ebp]
  011ae	8a 54 32 58	 mov	 dl, BYTE PTR [edx+esi+88]
  011b2	88 54 01 60	 mov	 BYTE PTR [ecx+eax+96], dl

; 526  : 			this->m_PartyS[party_number].m_PkLevel[i]		= 3;

  011b6	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  011b9	6b c0 6c	 imul	 eax, 108		; 0000006cH
  011bc	03 45 f8	 add	 eax, DWORD PTR _i$229005[ebp]
  011bf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  011c2	c6 44 01 60 03	 mov	 BYTE PTR [ecx+eax+96], 3

; 527  : 			// ----
; 528  : 			return;

  011c7	eb 05		 jmp	 SHORT $LN5@ChangeLead
$LN1@ChangeLead:

; 529  : 		}
; 530  : 	}

  011c9	e9 27 ff ff ff	 jmp	 $LN3@ChangeLead
$LN5@ChangeLead:

; 531  : }

  011ce	5f		 pop	 edi
  011cf	5e		 pop	 esi
  011d0	5b		 pop	 ebx
  011d1	8b e5		 mov	 esp, ebp
  011d3	5d		 pop	 ebp
  011d4	c2 04 00	 ret	 4
?ChangeLeader@PartyClass@@QAEXH@Z ENDP			; PartyClass::ChangeLeader
_TEXT	ENDS
PUBLIC	??_C@_0EP@LJAEGDAD@?$FLHACKTOOL?$FN?5?3?5NPC?9TradeRequest?$CIre@ ; `string'
PUBLIC	?ReAdd@PartyClass@@QAEXH@Z			; PartyClass::ReAdd
EXTRN	?CGPartyListAll@@YAXH@Z:PROC			; CGPartyListAll
EXTRN	?CloseClient@@YAXH@Z:PROC			; CloseClient
EXTRN	?LogAddC@@3P6AXEPADZZA:DWORD			; LogAddC
EXTRN	?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z:PROC	; gObjIsConnected
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	?SearchPartyExUSer@@YAXPAUOBJECTSTRUCT@@AAH1@Z:PROC ; SearchPartyExUSer
EXTRN	?ExConfig@@3VcExConfigs@@A:BYTE			; ExConfig
;	COMDAT ??_C@_0EP@LJAEGDAD@?$FLHACKTOOL?$FN?5?3?5NPC?9TradeRequest?$CIre@
CONST	SEGMENT
??_C@_0EP@LJAEGDAD@?$FLHACKTOOL?$FN?5?3?5NPC?9TradeRequest?$CIre@ DB '[HA'
	DB	'CKTOOL] : NPC-TradeRequest(result) npc:%d ip:%s account:%s na'
	DB	'me:%s State:%d', 00H			; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_iPartyPos$229037 = -32					; size = 4
_n$229022 = -28						; size = 4
_PartyTick$ = -24					; size = 4
_Party$ = -20						; size = 4
_number$ = -16						; size = 4
_pnumber$ = -12						; size = 4
_lpObj$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
?ReAdd@PartyClass@@QAEXH@Z PROC				; PartyClass::ReAdd
; _this$ = ecx

; 534  : {

  011e0	55		 push	 ebp
  011e1	8b ec		 mov	 ebp, esp
  011e3	83 ec 60	 sub	 esp, 96			; 00000060H
  011e6	53		 push	 ebx
  011e7	56		 push	 esi
  011e8	57		 push	 edi
  011e9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 535  : 	if(g_ExLicense.user.PartySave)

  011ec	0f b6 05 e0 00
	00 00		 movzx	 eax, BYTE PTR ?g_ExLicense@@3VCExLicense@@A+224
  011f3	85 c0		 test	 eax, eax
  011f5	74 05		 je	 SHORT $LN22@ReAdd

; 536  : 	{
; 537  : 		return;

  011f7	e9 b5 02 00 00	 jmp	 $LN23@ReAdd
$LN22@ReAdd:

; 538  : 	}
; 539  : 
; 540  : 	if(!ExConfig.CommonServer.RePartyEnable)return;

  011fc	83 3d f8 00 00
	00 00		 cmp	 DWORD PTR ?ExConfig@@3VcExConfigs@@A+248, 0
  01203	75 05		 jne	 SHORT $LN21@ReAdd
  01205	e9 a7 02 00 00	 jmp	 $LN23@ReAdd
$LN21@ReAdd:

; 541  : 
; 542  : 	LPOBJ lpObj = &gObj[aIndex];

  0120a	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0120d	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01213	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01219	89 45 f8	 mov	 DWORD PTR _lpObj$[ebp], eax

; 543  : 
; 544  : 	int pnumber = -1;

  0121c	c7 45 f4 ff ff
	ff ff		 mov	 DWORD PTR _pnumber$[ebp], -1

; 545  : 
; 546  : 	int number = -1;

  01223	c7 45 f0 ff ff
	ff ff		 mov	 DWORD PTR _number$[ebp], -1

; 547  : 	int Party = -1;

  0122a	c7 45 ec ff ff
	ff ff		 mov	 DWORD PTR _Party$[ebp], -1

; 548  : 
; 549  : 	int PartyTick = -1;

  01231	c7 45 e8 ff ff
	ff ff		 mov	 DWORD PTR _PartyTick$[ebp], -1

; 550  : 
; 551  : 	SearchPartyExUSer(lpObj, Party, PartyTick);

  01238	8d 45 e8	 lea	 eax, DWORD PTR _PartyTick$[ebp]
  0123b	50		 push	 eax
  0123c	8d 4d ec	 lea	 ecx, DWORD PTR _Party$[ebp]
  0123f	51		 push	 ecx
  01240	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01243	52		 push	 edx
  01244	e8 00 00 00 00	 call	 ?SearchPartyExUSer@@YAXPAUOBJECTSTRUCT@@AAH1@Z ; SearchPartyExUSer
  01249	83 c4 0c	 add	 esp, 12			; 0000000cH

; 552  : 
; 553  : 	if(Party == -1)

  0124c	83 7d ec ff	 cmp	 DWORD PTR _Party$[ebp], -1
  01250	75 05		 jne	 SHORT $LN20@ReAdd

; 554  : 	{
; 555  : 		return;

  01252	e9 5a 02 00 00	 jmp	 $LN23@ReAdd
$LN20@ReAdd:

; 556  : 	}
; 557  : 
; 558  : 	for( int n = OBJ_STARTUSERINDEX; n < OBJMAX; n++ )

  01257	c7 45 e4 b0 36
	00 00		 mov	 DWORD PTR _n$229022[ebp], 14000 ; 000036b0H
  0125e	eb 09		 jmp	 SHORT $LN19@ReAdd
$LN18@ReAdd:
  01260	8b 45 e4	 mov	 eax, DWORD PTR _n$229022[ebp]
  01263	83 c0 01	 add	 eax, 1
  01266	89 45 e4	 mov	 DWORD PTR _n$229022[ebp], eax
$LN19@ReAdd:
  01269	81 7d e4 98 3a
	00 00		 cmp	 DWORD PTR _n$229022[ebp], 15000 ; 00003a98H
  01270	7d 4c		 jge	 SHORT $LN17@ReAdd

; 559  : 	{
; 560  : 		if( gObj[n].Connected >= PLAYER_PLAYING )

  01272	8b 45 e4	 mov	 eax, DWORD PTR _n$229022[ebp]
  01275	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0127b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01281	83 7c 01 04 03	 cmp	 DWORD PTR [ecx+eax+4], 3
  01286	7c 34		 jl	 SHORT $LN16@ReAdd

; 561  : 		{
; 562  : 			if(gObj[n].PartyNumber == Party)

  01288	8b 45 e4	 mov	 eax, DWORD PTR _n$229022[ebp]
  0128b	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01291	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01297	8b 94 01 2c 04
	00 00		 mov	 edx, DWORD PTR [ecx+eax+1068]
  0129e	3b 55 ec	 cmp	 edx, DWORD PTR _Party$[ebp]
  012a1	75 19		 jne	 SHORT $LN16@ReAdd

; 563  : 			{
; 564  : 				if(GetTickCount() - PartyTick < ExConfig.CommonServer.RePartyTime)

  012a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  012a9	2b 45 e8	 sub	 eax, DWORD PTR _PartyTick$[ebp]
  012ac	3b 05 fc 00 00
	00		 cmp	 eax, DWORD PTR ?ExConfig@@3VcExConfigs@@A+252
  012b2	73 08		 jae	 SHORT $LN16@ReAdd

; 565  : 				{
; 566  : 					number = n;

  012b4	8b 45 e4	 mov	 eax, DWORD PTR _n$229022[ebp]
  012b7	89 45 f0	 mov	 DWORD PTR _number$[ebp], eax

; 567  : 					break;

  012ba	eb 02		 jmp	 SHORT $LN17@ReAdd
$LN16@ReAdd:

; 568  : 				}
; 569  : 			}
; 570  : 		}
; 571  : 	}

  012bc	eb a2		 jmp	 SHORT $LN18@ReAdd
$LN17@ReAdd:

; 572  : 
; 573  : 	if(number == -1) return;

  012be	83 7d f0 ff	 cmp	 DWORD PTR _number$[ebp], -1
  012c2	75 05		 jne	 SHORT $LN13@ReAdd
  012c4	e9 e8 01 00 00	 jmp	 $LN23@ReAdd
$LN13@ReAdd:

; 574  : 
; 575  : 	//bool br = false;
; 576  : 
; 577  : 	//for( int n = OBJ_STARTUSERINDEX; n < OBJMAX; n++ )
; 578  : 	//{
; 579  : 	//	if( gObj[n].Connected >= PLAYER_PLAYING )
; 580  : 	//	{
; 581  : 	//		if(gObj[n].PartyNumber >= 0)
; 582  : 	//		{
; 583  : 	//			for(int i=0;i<5;i++)
; 584  : 	//			{
; 585  : 	//				if(strcmp(gObj[aIndex].Name , this->m_PartyS[gObj[n].PartyNumber].Names[i]) == 0 )
; 586  : 	//				{
; 587  : 	//					if(GetTickCount() - this->m_PartyS[gObj[n].PartyNumber].TickTimes[i] < ExConfig.CommonServer.RePartyTime)	//1000 - 1 Sec
; 588  : 	//					{
; 589  : 	//						number = n;
; 590  : 	//					}
; 591  : 	//					br = true;
; 592  : 	//					break;
; 593  : 	//				}
; 594  : 	//			}
; 595  : 	//		}
; 596  : 	//	}
; 597  : 	//	if(br == true)
; 598  : 	//	{
; 599  : 	//		break;
; 600  : 	//	}
; 601  : 	//}
; 602  : 
; 603  : 	//if(number == -1)
; 604  : 	//{
; 605  : 	//	return;
; 606  : 	//}
; 607  : 
; 608  : 	if ( number < 0 || number > OBJMAX-1)

  012c9	83 7d f0 00	 cmp	 DWORD PTR _number$[ebp], 0
  012cd	7c 09		 jl	 SHORT $LN11@ReAdd
  012cf	81 7d f0 97 3a
	00 00		 cmp	 DWORD PTR _number$[ebp], 14999 ; 00003a97H
  012d6	7e 05		 jle	 SHORT $LN12@ReAdd
$LN11@ReAdd:

; 609  : 	{
; 610  : 		return;

  012d8	e9 d4 01 00 00	 jmp	 $LN23@ReAdd
$LN12@ReAdd:

; 611  : 	}
; 612  : 
; 613  : 	if ( !gObjIsConnected(&gObj[aIndex]))

  012dd	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  012e0	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  012e6	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  012ec	50		 push	 eax
  012ed	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z ; gObjIsConnected
  012f2	83 c4 04	 add	 esp, 4
  012f5	85 c0		 test	 eax, eax
  012f7	75 05		 jne	 SHORT $LN10@ReAdd

; 614  : 	{
; 615  : 		return;

  012f9	e9 b3 01 00 00	 jmp	 $LN23@ReAdd
$LN10@ReAdd:

; 616  : 	}
; 617  : 
; 618  : 	if ( !gObjIsConnected(&gObj[number]))

  012fe	8b 45 f0	 mov	 eax, DWORD PTR _number$[ebp]
  01301	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01307	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0130d	50		 push	 eax
  0130e	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z ; gObjIsConnected
  01313	83 c4 04	 add	 esp, 4
  01316	85 c0		 test	 eax, eax
  01318	75 05		 jne	 SHORT $LN9@ReAdd

; 619  : 	{
; 620  : 		return;

  0131a	e9 92 01 00 00	 jmp	 $LN23@ReAdd
$LN9@ReAdd:

; 621  : 	}
; 622  : 
; 623  : 	if( gObj[number].Type != OBJ_USER ) //season4 add-on

  0131f	8b 45 f0	 mov	 eax, DWORD PTR _number$[ebp]
  01322	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01328	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0132e	0f b7 54 01 68	 movzx	 edx, WORD PTR [ecx+eax+104]
  01333	83 fa 01	 cmp	 edx, 1
  01336	0f 84 89 00 00
	00		 je	 $LN8@ReAdd

; 624  : 	{
; 625  : 		LogAddC(2,"[HACKTOOL] : NPC-TradeRequest(result) npc:%d ip:%s account:%s name:%s State:%d",
; 626  : 			gObj[number].Class,gObj[aIndex].Ip_addr,gObj[aIndex].AccountID,
; 627  : 			gObj[aIndex].Name,gObj[aIndex].Connected);

  0133c	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0133f	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01345	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0134b	8b 54 01 04	 mov	 edx, DWORD PTR [ecx+eax+4]
  0134f	52		 push	 edx
  01350	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  01353	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01359	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0135f	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  01363	52		 push	 edx
  01364	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  01367	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0136d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01373	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  01377	52		 push	 edx
  01378	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0137b	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01381	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01387	8d 54 01 18	 lea	 edx, DWORD PTR [ecx+eax+24]
  0138b	52		 push	 edx
  0138c	8b 45 f0	 mov	 eax, DWORD PTR _number$[ebp]
  0138f	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01395	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0139b	0f b7 94 01 b8
	00 00 00	 movzx	 edx, WORD PTR [ecx+eax+184]
  013a3	52		 push	 edx
  013a4	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@LJAEGDAD@?$FLHACKTOOL?$FN?5?3?5NPC?9TradeRequest?$CIre@
  013a9	6a 02		 push	 2
  013ab	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  013b1	83 c4 1c	 add	 esp, 28			; 0000001cH

; 628  : 		CloseClient(aIndex);

  013b4	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  013b7	50		 push	 eax
  013b8	e8 00 00 00 00	 call	 ?CloseClient@@YAXH@Z	; CloseClient
  013bd	83 c4 04	 add	 esp, 4

; 629  : 		return;

  013c0	e9 ec 00 00 00	 jmp	 $LN23@ReAdd
$LN8@ReAdd:

; 630  : 	}
; 631  : 
; 632  : 	if ( gObj[number].PartyNumber >= 0  )

  013c5	8b 45 f0	 mov	 eax, DWORD PTR _number$[ebp]
  013c8	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  013ce	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  013d4	83 bc 01 2c 04
	00 00 00	 cmp	 DWORD PTR [ecx+eax+1068], 0
  013dc	0f 8c bd 00 00
	00		 jl	 $LN7@ReAdd

; 633  : 	{
; 634  : 		pnumber = gObj[number].PartyNumber;

  013e2	8b 45 f0	 mov	 eax, DWORD PTR _number$[ebp]
  013e5	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  013eb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  013f1	8b 94 01 2c 04
	00 00		 mov	 edx, DWORD PTR [ecx+eax+1068]
  013f8	89 55 f4	 mov	 DWORD PTR _pnumber$[ebp], edx

; 635  : 		int iPartyPos = this->Add(gObj[number].PartyNumber, aIndex, gObj[aIndex].DBNumber, gObj[aIndex].Level);

  013fb	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  013fe	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01404	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0140a	0f bf 94 01 be
	00 00 00	 movsx	 edx, WORD PTR [ecx+eax+190]
  01412	52		 push	 edx
  01413	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  01416	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0141c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01422	8b 54 01 2c	 mov	 edx, DWORD PTR [ecx+eax+44]
  01426	52		 push	 edx
  01427	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0142a	50		 push	 eax
  0142b	8b 4d f0	 mov	 ecx, DWORD PTR _number$[ebp]
  0142e	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  01434	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0143a	8b 84 0a 2c 04
	00 00		 mov	 eax, DWORD PTR [edx+ecx+1068]
  01441	50		 push	 eax
  01442	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01445	e8 00 00 00 00	 call	 ?Add@PartyClass@@QAEHHHHH@Z ; PartyClass::Add
  0144a	89 45 e0	 mov	 DWORD PTR _iPartyPos$229037[ebp], eax

; 636  : 
; 637  : 		if ( iPartyPos >= 0 )

  0144d	83 7d e0 00	 cmp	 DWORD PTR _iPartyPos$229037[ebp], 0
  01451	7c 3a		 jl	 SHORT $LN6@ReAdd

; 638  : 		{
; 639  : 			gObj[aIndex].PartyNumber = gObj[number].PartyNumber;

  01453	8b 45 f0	 mov	 eax, DWORD PTR _number$[ebp]
  01456	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0145c	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  0145f	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  01465	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0146b	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01471	8b 84 06 2c 04
	00 00		 mov	 eax, DWORD PTR [esi+eax+1068]
  01478	89 84 0a 2c 04
	00 00		 mov	 DWORD PTR [edx+ecx+1068], eax

; 640  : 
; 641  : 			this->Paint(pnumber);

  0147f	8b 45 f4	 mov	 eax, DWORD PTR _pnumber$[ebp]
  01482	50		 push	 eax
  01483	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01486	e8 00 00 00 00	 call	 ?Paint@PartyClass@@QAEXH@Z ; PartyClass::Paint
  0148b	eb 12		 jmp	 SHORT $LN7@ReAdd
$LN6@ReAdd:

; 642  : 		}
; 643  : 		else if ( iPartyPos == -1 )

  0148d	83 7d e0 ff	 cmp	 DWORD PTR _iPartyPos$229037[ebp], -1
  01491	75 04		 jne	 SHORT $LN4@ReAdd

; 644  : 		{
; 645  : 			return;

  01493	eb 1c		 jmp	 SHORT $LN23@ReAdd
  01495	eb 08		 jmp	 SHORT $LN7@ReAdd
$LN4@ReAdd:

; 646  : 		}
; 647  : 		else if ( iPartyPos == -2 )

  01497	83 7d e0 fe	 cmp	 DWORD PTR _iPartyPos$229037[ebp], -2 ; fffffffeH
  0149b	75 02		 jne	 SHORT $LN7@ReAdd

; 648  : 		{
; 649  : 			return;

  0149d	eb 12		 jmp	 SHORT $LN23@ReAdd
$LN7@ReAdd:

; 650  : 		}
; 651  : 	}
; 652  : 
; 653  : 	if ( pnumber >= 0 )

  0149f	83 7d f4 00	 cmp	 DWORD PTR _pnumber$[ebp], 0
  014a3	7c 0c		 jl	 SHORT $LN23@ReAdd

; 654  : 	{
; 655  : 		CGPartyListAll(pnumber);

  014a5	8b 45 f4	 mov	 eax, DWORD PTR _pnumber$[ebp]
  014a8	50		 push	 eax
  014a9	e8 00 00 00 00	 call	 ?CGPartyListAll@@YAXH@Z	; CGPartyListAll
  014ae	83 c4 04	 add	 esp, 4
$LN23@ReAdd:

; 656  : 	}
; 657  : }

  014b1	5f		 pop	 edi
  014b2	5e		 pop	 esi
  014b3	5b		 pop	 ebx
  014b4	8b e5		 mov	 esp, ebp
  014b6	5d		 pop	 ebp
  014b7	c2 04 00	 ret	 4
?ReAdd@PartyClass@@QAEXH@Z ENDP				; PartyClass::ReAdd
_TEXT	ENDS
PUBLIC	??_C@_0BF@OFNDHPCK@New?5party?5leader?3?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0CD@LEEFHALA@Your?5character?5is?5not?5party?5lead@ ; `string'
PUBLIC	??_C@_0BL@DDDPOLAI@Target?5is?5not?5party?5member?$AA@ ; `string'
PUBLIC	??_C@_0BP@GIPBDNCJ@Your?5character?5is?5not?5in?5party?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?SetLeader@PartyClass@@QAE_NHH@Z		; PartyClass::SetLeader
EXTRN	?CGPartyList@@YAXH@Z:PROC			; CGPartyList
EXTRN	_sprintf:PROC
EXTRN	?GCServerMsgStringSend@@YAXPADHE@Z:PROC		; GCServerMsgStringSend
EXTRN	_memset:PROC
;	COMDAT ??_C@_0BF@OFNDHPCK@New?5party?5leader?3?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BF@OFNDHPCK@New?5party?5leader?3?5?$CFs?$AA@ DB 'New party leader:'
	DB	' %s', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@LEEFHALA@Your?5character?5is?5not?5party?5lead@
CONST	SEGMENT
??_C@_0CD@LEEFHALA@Your?5character?5is?5not?5party?5lead@ DB 'Your charac'
	DB	'ter is not party leader', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DDDPOLAI@Target?5is?5not?5party?5member?$AA@
CONST	SEGMENT
??_C@_0BL@DDDPOLAI@Target?5is?5not?5party?5member?$AA@ DB 'Target is not '
	DB	'party member', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@GIPBDNCJ@Your?5character?5is?5not?5in?5party?$AA@
CONST	SEGMENT
??_C@_0BP@GIPBDNCJ@Your?5character?5is?5not?5in?5party?$AA@ DB 'Your char'
	DB	'acter is not in party', 00H			; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_UserIndex$229065 = -132				; size = 4
_i$229061 = -128					; size = 4
_Text$ = -124						; size = 100
_TempIndex$ = -24					; size = 4
_PartyNumber$ = -20					; size = 4
_lpTargetObj$ = -16					; size = 4
_lpObj$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_OldLeader$ = 8						; size = 4
_NewLeader$ = 12					; size = 4
?SetLeader@PartyClass@@QAE_NHH@Z PROC			; PartyClass::SetLeader
; _this$ = ecx

; 660  : {

  014c0	55		 push	 ebp
  014c1	8b ec		 mov	 ebp, esp
  014c3	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  014c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  014ce	33 c5		 xor	 eax, ebp
  014d0	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  014d3	53		 push	 ebx
  014d4	56		 push	 esi
  014d5	57		 push	 edi
  014d6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 661  : 	LPOBJ lpObj			= &gObj[OldLeader];

  014d9	8b 45 08	 mov	 eax, DWORD PTR _OldLeader$[ebp]
  014dc	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  014e2	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  014e8	89 45 f4	 mov	 DWORD PTR _lpObj$[ebp], eax

; 662  : 	LPOBJ lpTargetObj	= &gObj[NewLeader];		

  014eb	8b 45 0c	 mov	 eax, DWORD PTR _NewLeader$[ebp]
  014ee	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  014f4	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  014fa	89 45 f0	 mov	 DWORD PTR _lpTargetObj$[ebp], eax

; 663  : 	// ----
; 664  : 	int PartyNumber		= lpObj->PartyNumber;

  014fd	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01500	8b 88 2c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1068]
  01506	89 4d ec	 mov	 DWORD PTR _PartyNumber$[ebp], ecx

; 665  : 	// ----
; 666  : 	if( !this->IsParty(PartyNumber) )

  01509	8b 45 ec	 mov	 eax, DWORD PTR _PartyNumber$[ebp]
  0150c	50		 push	 eax
  0150d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01510	e8 00 00 00 00	 call	 ?IsParty@PartyClass@@QAEHH@Z ; PartyClass::IsParty
  01515	85 c0		 test	 eax, eax
  01517	75 1c		 jne	 SHORT $LN7@SetLeader

; 667  : 	{
; 668  : 		GCServerMsgStringSend("Your character is not in party", lpObj->m_Index, 1);

  01519	6a 01		 push	 1
  0151b	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0151e	8b 08		 mov	 ecx, DWORD PTR [eax]
  01520	51		 push	 ecx
  01521	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@GIPBDNCJ@Your?5character?5is?5not?5in?5party?$AA@
  01526	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  0152b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 669  : 		return false;

  0152e	32 c0		 xor	 al, al
  01530	e9 ff 01 00 00	 jmp	 $LN8@SetLeader
$LN7@SetLeader:

; 670  : 	}
; 671  : 	// ----
; 672  : 	if( lpObj->PartyNumber != lpTargetObj->PartyNumber )

  01535	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01538	8b 4d f0	 mov	 ecx, DWORD PTR _lpTargetObj$[ebp]
  0153b	8b 90 2c 04 00
	00		 mov	 edx, DWORD PTR [eax+1068]
  01541	3b 91 2c 04 00
	00		 cmp	 edx, DWORD PTR [ecx+1068]
  01547	74 1c		 je	 SHORT $LN6@SetLeader

; 673  : 	{
; 674  : 		GCServerMsgStringSend("Target is not party member", lpObj->m_Index, 1);

  01549	6a 01		 push	 1
  0154b	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0154e	8b 08		 mov	 ecx, DWORD PTR [eax]
  01550	51		 push	 ecx
  01551	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@DDDPOLAI@Target?5is?5not?5party?5member?$AA@
  01556	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  0155b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 675  : 		return false;

  0155e	32 c0		 xor	 al, al
  01560	e9 cf 01 00 00	 jmp	 $LN8@SetLeader
$LN6@SetLeader:

; 676  : 	}
; 677  : 	// ----
; 678  : 	if( !this->Isleader(PartyNumber, lpObj->m_Index, lpObj->DBNumber) )

  01565	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01568	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0156b	51		 push	 ecx
  0156c	8b 55 f4	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0156f	8b 02		 mov	 eax, DWORD PTR [edx]
  01571	50		 push	 eax
  01572	8b 4d ec	 mov	 ecx, DWORD PTR _PartyNumber$[ebp]
  01575	51		 push	 ecx
  01576	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01579	e8 00 00 00 00	 call	 ?Isleader@PartyClass@@QAEHHHH@Z ; PartyClass::Isleader
  0157e	85 c0		 test	 eax, eax
  01580	75 1c		 jne	 SHORT $LN5@SetLeader

; 679  : 	{
; 680  : 		GCServerMsgStringSend("Your character is not party leader", lpObj->m_Index, 1);

  01582	6a 01		 push	 1
  01584	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01587	8b 08		 mov	 ecx, DWORD PTR [eax]
  01589	51		 push	 ecx
  0158a	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@LEEFHALA@Your?5character?5is?5not?5party?5lead@
  0158f	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  01594	83 c4 0c	 add	 esp, 12			; 0000000cH

; 681  : 		return false;

  01597	32 c0		 xor	 al, al
  01599	e9 96 01 00 00	 jmp	 $LN8@SetLeader
$LN5@SetLeader:

; 682  : 	}
; 683  : 	// ----
; 684  : 	int TempIndex = this->GetIndex(PartyNumber, lpTargetObj->m_Index, lpTargetObj->DBNumber);

  0159e	8b 45 f0	 mov	 eax, DWORD PTR _lpTargetObj$[ebp]
  015a1	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  015a4	51		 push	 ecx
  015a5	8b 55 f0	 mov	 edx, DWORD PTR _lpTargetObj$[ebp]
  015a8	8b 02		 mov	 eax, DWORD PTR [edx]
  015aa	50		 push	 eax
  015ab	8b 4d ec	 mov	 ecx, DWORD PTR _PartyNumber$[ebp]
  015ae	51		 push	 ecx
  015af	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  015b2	e8 00 00 00 00	 call	 ?GetIndex@PartyClass@@QAEHHHH@Z ; PartyClass::GetIndex
  015b7	89 45 e8	 mov	 DWORD PTR _TempIndex$[ebp], eax

; 685  : 	// ----
; 686  : 	this->m_PartyS[PartyNumber].Number[0]					= this->m_PartyS[PartyNumber].Number[TempIndex];

  015ba	8b 45 ec	 mov	 eax, DWORD PTR _PartyNumber$[ebp]
  015bd	6b c0 6c	 imul	 eax, 108		; 0000006cH
  015c0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  015c3	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  015c7	8b 45 ec	 mov	 eax, DWORD PTR _PartyNumber$[ebp]
  015ca	6b c0 6c	 imul	 eax, 108		; 0000006cH
  015cd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  015d0	8b 75 e8	 mov	 esi, DWORD PTR _TempIndex$[ebp]
  015d3	8b 54 b2 04	 mov	 edx, DWORD PTR [edx+esi*4+4]
  015d7	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 687  : 	this->m_PartyS[PartyNumber].DbNumber[0]					= this->m_PartyS[PartyNumber].DbNumber[TempIndex];

  015db	8b 45 ec	 mov	 eax, DWORD PTR _PartyNumber$[ebp]
  015de	6b c0 6c	 imul	 eax, 108		; 0000006cH
  015e1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  015e4	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  015e8	8b 45 ec	 mov	 eax, DWORD PTR _PartyNumber$[ebp]
  015eb	6b c0 6c	 imul	 eax, 108		; 0000006cH
  015ee	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  015f1	8b 75 e8	 mov	 esi, DWORD PTR _TempIndex$[ebp]
  015f4	8b 54 b2 2c	 mov	 edx, DWORD PTR [edx+esi*4+44]
  015f8	89 54 01 34	 mov	 DWORD PTR [ecx+eax+52], edx

; 688  : 	this->m_PartyS[PartyNumber].m_PkLevel[0]			= this->m_PartyS[PartyNumber].m_PkLevel[TempIndex];

  015fc	8b 45 ec	 mov	 eax, DWORD PTR _PartyNumber$[ebp]
  015ff	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01602	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01605	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  01609	8b 45 ec	 mov	 eax, DWORD PTR _PartyNumber$[ebp]
  0160c	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0160f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01612	8b 75 e8	 mov	 esi, DWORD PTR _TempIndex$[ebp]
  01615	8a 54 32 58	 mov	 dl, BYTE PTR [edx+esi+88]
  01619	88 54 01 60	 mov	 BYTE PTR [ecx+eax+96], dl

; 689  : 	// ----
; 690  : 	this->m_PartyS[PartyNumber].Number[TempIndex]			= lpObj->m_Index;

  0161d	8b 45 ec	 mov	 eax, DWORD PTR _PartyNumber$[ebp]
  01620	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01623	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01626	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  0162a	8b 45 e8	 mov	 eax, DWORD PTR _TempIndex$[ebp]
  0162d	8b 4d f4	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01630	8b 09		 mov	 ecx, DWORD PTR [ecx]
  01632	89 4c 82 04	 mov	 DWORD PTR [edx+eax*4+4], ecx

; 691  : 	this->m_PartyS[PartyNumber].DbNumber[TempIndex]			= lpObj->DBNumber;

  01636	8b 45 ec	 mov	 eax, DWORD PTR _PartyNumber$[ebp]
  01639	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0163c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0163f	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  01643	8b 45 e8	 mov	 eax, DWORD PTR _TempIndex$[ebp]
  01646	8b 4d f4	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01649	8b 49 2c	 mov	 ecx, DWORD PTR [ecx+44]
  0164c	89 4c 82 2c	 mov	 DWORD PTR [edx+eax*4+44], ecx

; 692  : 	this->m_PartyS[PartyNumber].m_PkLevel[TempIndex]	= lpObj->m_PK_Level;

  01650	8b 45 ec	 mov	 eax, DWORD PTR _PartyNumber$[ebp]
  01653	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01656	03 45 e8	 add	 eax, DWORD PTR _TempIndex$[ebp]
  01659	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0165c	8b 55 f4	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0165f	8a 92 3d 01 00
	00		 mov	 dl, BYTE PTR [edx+317]
  01665	88 54 01 60	 mov	 BYTE PTR [ecx+eax+96], dl

; 693  : 	// ----
; 694  : 	char Text[100] = { 0 };

  01669	c6 45 84 00	 mov	 BYTE PTR _Text$[ebp], 0
  0166d	6a 63		 push	 99			; 00000063H
  0166f	6a 00		 push	 0
  01671	8d 45 85	 lea	 eax, DWORD PTR _Text$[ebp+1]
  01674	50		 push	 eax
  01675	e8 00 00 00 00	 call	 _memset
  0167a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 695  : 	sprintf(Text, "New party leader: %s", lpTargetObj->Name);

  0167d	8b 45 f0	 mov	 eax, DWORD PTR _lpTargetObj$[ebp]
  01680	83 c0 77	 add	 eax, 119		; 00000077H
  01683	50		 push	 eax
  01684	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@OFNDHPCK@New?5party?5leader?3?5?$CFs?$AA@
  01689	8d 4d 84	 lea	 ecx, DWORD PTR _Text$[ebp]
  0168c	51		 push	 ecx
  0168d	e8 00 00 00 00	 call	 _sprintf
  01692	83 c4 0c	 add	 esp, 12			; 0000000cH

; 696  : 	// ----
; 697  : 	for( int i = 0; i < MAX_USER_IN_PARTY; i++ )

  01695	c7 45 80 00 00
	00 00		 mov	 DWORD PTR _i$229061[ebp], 0
  0169c	eb 09		 jmp	 SHORT $LN4@SetLeader
$LN3@SetLeader:
  0169e	8b 45 80	 mov	 eax, DWORD PTR _i$229061[ebp]
  016a1	83 c0 01	 add	 eax, 1
  016a4	89 45 80	 mov	 DWORD PTR _i$229061[ebp], eax
$LN4@SetLeader:
  016a7	83 7d 80 0a	 cmp	 DWORD PTR _i$229061[ebp], 10 ; 0000000aH
  016ab	0f 8d 81 00 00
	00		 jge	 $LN2@SetLeader

; 698  : 	{
; 699  : 		int UserIndex = this->m_PartyS[PartyNumber].Number[i];

  016b1	8b 45 ec	 mov	 eax, DWORD PTR _PartyNumber$[ebp]
  016b4	6b c0 6c	 imul	 eax, 108		; 0000006cH
  016b7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  016ba	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  016be	8b 45 80	 mov	 eax, DWORD PTR _i$229061[ebp]
  016c1	8b 4c 82 04	 mov	 ecx, DWORD PTR [edx+eax*4+4]
  016c5	89 8d 7c ff ff
	ff		 mov	 DWORD PTR _UserIndex$229065[ebp], ecx

; 700  : 		// ----
; 701  : 		if( UserIndex >= 0 && gObj[UserIndex].Connected == 3 )

  016cb	83 bd 7c ff ff
	ff 00		 cmp	 DWORD PTR _UserIndex$229065[ebp], 0
  016d2	7c 59		 jl	 SHORT $LN1@SetLeader
  016d4	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _UserIndex$229065[ebp]
  016da	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  016e0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  016e6	83 7c 01 04 03	 cmp	 DWORD PTR [ecx+eax+4], 3
  016eb	75 40		 jne	 SHORT $LN1@SetLeader

; 702  : 		{
; 703  : 			GCServerMsgStringSend(Text, this->m_PartyS[PartyNumber].Number[i], 1);

  016ed	6a 01		 push	 1
  016ef	8b 45 ec	 mov	 eax, DWORD PTR _PartyNumber$[ebp]
  016f2	6b c0 6c	 imul	 eax, 108		; 0000006cH
  016f5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  016f8	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  016fc	8b 45 80	 mov	 eax, DWORD PTR _i$229061[ebp]
  016ff	8b 4c 82 04	 mov	 ecx, DWORD PTR [edx+eax*4+4]
  01703	51		 push	 ecx
  01704	8d 55 84	 lea	 edx, DWORD PTR _Text$[ebp]
  01707	52		 push	 edx
  01708	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  0170d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 704  : 			CGPartyList(this->m_PartyS[PartyNumber].Number[i]);

  01710	8b 45 ec	 mov	 eax, DWORD PTR _PartyNumber$[ebp]
  01713	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01716	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01719	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  0171d	8b 45 80	 mov	 eax, DWORD PTR _i$229061[ebp]
  01720	8b 4c 82 04	 mov	 ecx, DWORD PTR [edx+eax*4+4]
  01724	51		 push	 ecx
  01725	e8 00 00 00 00	 call	 ?CGPartyList@@YAXH@Z	; CGPartyList
  0172a	83 c4 04	 add	 esp, 4
$LN1@SetLeader:

; 705  : 		}
; 706  : 	}

  0172d	e9 6c ff ff ff	 jmp	 $LN3@SetLeader
$LN2@SetLeader:

; 707  : 	// ----
; 708  : 	return true;

  01732	b0 01		 mov	 al, 1
$LN8@SetLeader:

; 709  : }

  01734	5f		 pop	 edi
  01735	5e		 pop	 esi
  01736	5b		 pop	 ebx
  01737	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0173a	33 cd		 xor	 ecx, ebp
  0173c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01741	8b e5		 mov	 esp, ebp
  01743	5d		 pop	 ebp
  01744	c2 08 00	 ret	 8
?SetLeader@PartyClass@@QAE_NHH@Z ENDP			; PartyClass::SetLeader
_TEXT	ENDS
PUBLIC	?CreateEx@PartyClass@@QAEHHHH@Z			; PartyClass::CreateEx
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$229079 = -16						; size = 4
_loopcount$ = -12					; size = 4
_n$ = -8						; size = 4
_this$ = -4						; size = 4
_usernumber$ = 8					; size = 4
_dbnumber$ = 12						; size = 4
_level$ = 16						; size = 4
?CreateEx@PartyClass@@QAEHHHH@Z PROC			; PartyClass::CreateEx
; _this$ = ecx

; 714  : {

  01750	55		 push	 ebp
  01751	8b ec		 mov	 ebp, esp
  01753	83 ec 50	 sub	 esp, 80			; 00000050H
  01756	53		 push	 ebx
  01757	56		 push	 esi
  01758	57		 push	 edi
  01759	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 715  : 	int n = this->m_PartyCount;

  0175c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0175f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  01762	89 4d f8	 mov	 DWORD PTR _n$[ebp], ecx

; 716  : 
; 717  : 	int loopcount = 0;

  01765	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _loopcount$[ebp], 0
$LN11@CreateEx:

; 718  : 
; 719  : 	while ( true )

  0176c	b8 01 00 00 00	 mov	 eax, 1
  01771	85 c0		 test	 eax, eax
  01773	0f 84 ae 01 00
	00		 je	 $LN10@CreateEx

; 720  : 	{
; 721  : 		if ( this->m_PartyS[n].Count == 0 )

  01779	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  0177c	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0177f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01782	83 7c 01 08 00	 cmp	 DWORD PTR [ecx+eax+8], 0
  01787	0f 85 68 01 00
	00		 jne	 $LN9@CreateEx

; 722  : 		{
; 723  : 			this->m_PartyS[n].Count = 1;

  0178d	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  01790	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01793	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01796	c7 44 01 08 01
	00 00 00	 mov	 DWORD PTR [ecx+eax+8], 1

; 724  : 			this->m_PartyS[n].Number[0] = usernumber;

  0179e	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  017a1	6b c0 6c	 imul	 eax, 108		; 0000006cH
  017a4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  017a7	8b 55 08	 mov	 edx, DWORD PTR _usernumber$[ebp]
  017aa	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 725  : 			this->m_PartyS[n].DbNumber[0] = dbnumber;

  017ae	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  017b1	6b c0 6c	 imul	 eax, 108		; 0000006cH
  017b4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  017b7	8b 55 0c	 mov	 edx, DWORD PTR _dbnumber$[ebp]
  017ba	89 54 01 34	 mov	 DWORD PTR [ecx+eax+52], edx

; 726  : 			this->m_PartyS[n].m_NextLootIdx = 0;

  017be	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  017c1	6b c0 6c	 imul	 eax, 108		; 0000006cH
  017c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  017c7	c7 44 01 70 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+112], 0

; 727  : 
; 728  : 			for ( int i=1;i<MAX_USER_IN_PARTY;i++)

  017cf	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR _i$229079[ebp], 1
  017d6	eb 09		 jmp	 SHORT $LN8@CreateEx
$LN7@CreateEx:
  017d8	8b 45 f0	 mov	 eax, DWORD PTR _i$229079[ebp]
  017db	83 c0 01	 add	 eax, 1
  017de	89 45 f0	 mov	 DWORD PTR _i$229079[ebp], eax
$LN8@CreateEx:
  017e1	83 7d f0 0a	 cmp	 DWORD PTR _i$229079[ebp], 10 ; 0000000aH
  017e5	7d 32		 jge	 SHORT $LN6@CreateEx

; 729  : 			{
; 730  : 				this->m_PartyS[n].DbNumber[i] = -1;

  017e7	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  017ea	6b c0 6c	 imul	 eax, 108		; 0000006cH
  017ed	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  017f0	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  017f4	8b 45 f0	 mov	 eax, DWORD PTR _i$229079[ebp]
  017f7	c7 44 82 2c ff
	ff ff ff	 mov	 DWORD PTR [edx+eax*4+44], -1

; 731  : 				this->m_PartyS[n].Number[i] = -1;

  017ff	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  01802	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01805	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01808	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  0180c	8b 45 f0	 mov	 eax, DWORD PTR _i$229079[ebp]
  0180f	c7 44 82 04 ff
	ff ff ff	 mov	 DWORD PTR [edx+eax*4+4], -1

; 732  : 			}

  01817	eb bf		 jmp	 SHORT $LN7@CreateEx
$LN6@CreateEx:

; 733  : 
; 734  : 			this->m_PartyCount++;

  01819	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0181c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0181f	83 c1 01	 add	 ecx, 1
  01822	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01825	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 735  : 			this->m_PartyS[n].m_MaxLevel = 0;

  01828	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  0182b	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0182e	33 c9		 xor	 ecx, ecx
  01830	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01833	66 89 4c 02 5c	 mov	 WORD PTR [edx+eax+92], cx

; 736  : 			this->m_PartyS[n].m_MinLevel = 0;

  01838	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  0183b	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0183e	33 c9		 xor	 ecx, ecx
  01840	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01843	66 89 4c 02 5e	 mov	 WORD PTR [edx+eax+94], cx

; 737  : 			this->SetLevel(n, level);

  01848	8b 45 10	 mov	 eax, DWORD PTR _level$[ebp]
  0184b	50		 push	 eax
  0184c	8b 4d f8	 mov	 ecx, DWORD PTR _n$[ebp]
  0184f	51		 push	 ecx
  01850	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01853	e8 00 00 00 00	 call	 ?SetLevel@PartyClass@@QAEHHH@Z ; PartyClass::SetLevel

; 738  : 
; 739  : 			if ( this->m_PartyCount > OBJMAX-1 )

  01858	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0185b	81 78 04 97 3a
	00 00		 cmp	 DWORD PTR [eax+4], 14999 ; 00003a97H
  01862	7e 0a		 jle	 SHORT $LN5@CreateEx

; 740  : 			{
; 741  : 				this->m_PartyCount=0;

  01864	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01867	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN5@CreateEx:

; 742  : 			}
; 743  : 
; 744  : 			this->m_PartyS[n].m_PkLevel[0] = gObj[usernumber].m_PK_Level;

  0186e	8b 45 08	 mov	 eax, DWORD PTR _usernumber$[ebp]
  01871	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01877	8b 4d f8	 mov	 ecx, DWORD PTR _n$[ebp]
  0187a	6b c9 6c	 imul	 ecx, 108		; 0000006cH
  0187d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01880	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01886	8a 84 06 3d 01
	00 00		 mov	 al, BYTE PTR [esi+eax+317]
  0188d	88 44 0a 60	 mov	 BYTE PTR [edx+ecx+96], al

; 745  : 
; 746  : 			if( this->m_PartyS[n].m_PkLevel[0] >= 5 )

  01891	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  01894	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01897	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0189a	0f be 54 01 60	 movsx	 edx, BYTE PTR [ecx+eax+96]
  0189f	83 fa 05	 cmp	 edx, 5
  018a2	7c 2d		 jl	 SHORT $LN4@CreateEx

; 747  : 			{
; 748  : 				this->m_PartyS[n].m_PartyPkLevel = this->m_PartyS[n].m_PkLevel[0];

  018a4	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  018a7	6b c0 6c	 imul	 eax, 108		; 0000006cH
  018aa	8b 4d f8	 mov	 ecx, DWORD PTR _n$[ebp]
  018ad	6b c9 6c	 imul	 ecx, 108		; 0000006cH
  018b0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  018b3	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  018b6	8a 44 06 60	 mov	 al, BYTE PTR [esi+eax+96]
  018ba	88 44 0a 6a	 mov	 BYTE PTR [edx+ecx+106], al

; 749  : 				this->m_PartyS[n].m_PkCount = 1;

  018be	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  018c1	6b c0 6c	 imul	 eax, 108		; 0000006cH
  018c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  018c7	c7 44 01 6c 01
	00 00 00	 mov	 DWORD PTR [ecx+eax+108], 1

; 750  : 			}
; 751  : 			else

  018cf	eb 1f		 jmp	 SHORT $LN3@CreateEx
$LN4@CreateEx:

; 752  : 			{
; 753  : 				this->m_PartyS[n].m_PartyPkLevel = 3;

  018d1	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  018d4	6b c0 6c	 imul	 eax, 108		; 0000006cH
  018d7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  018da	c6 44 01 6a 03	 mov	 BYTE PTR [ecx+eax+106], 3

; 754  : 				this->m_PartyS[n].m_PkCount = 0;

  018df	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  018e2	6b c0 6c	 imul	 eax, 108		; 0000006cH
  018e5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  018e8	c7 44 01 6c 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+108], 0
$LN3@CreateEx:

; 755  : 			}
; 756  : 			return n;

  018f0	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  018f3	eb 35		 jmp	 SHORT $LN12@CreateEx
$LN9@CreateEx:

; 757  : 		}
; 758  : 
; 759  : 		n++;

  018f5	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  018f8	83 c0 01	 add	 eax, 1
  018fb	89 45 f8	 mov	 DWORD PTR _n$[ebp], eax

; 760  : 
; 761  : 		if ( n> OBJMAX-1 )

  018fe	81 7d f8 97 3a
	00 00		 cmp	 DWORD PTR _n$[ebp], 14999 ; 00003a97H
  01905	7e 07		 jle	 SHORT $LN2@CreateEx

; 762  : 		{
; 763  : 			n=0;

  01907	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _n$[ebp], 0
$LN2@CreateEx:

; 764  : 		}
; 765  : 
; 766  : 		loopcount++;

  0190e	8b 45 f4	 mov	 eax, DWORD PTR _loopcount$[ebp]
  01911	83 c0 01	 add	 eax, 1
  01914	89 45 f4	 mov	 DWORD PTR _loopcount$[ebp], eax

; 767  : 
; 768  : 		if ( loopcount > OBJMAX-1 )

  01917	81 7d f4 97 3a
	00 00		 cmp	 DWORD PTR _loopcount$[ebp], 14999 ; 00003a97H
  0191e	7e 02		 jle	 SHORT $LN1@CreateEx

; 769  : 		{
; 770  : 			break;

  01920	eb 05		 jmp	 SHORT $LN10@CreateEx
$LN1@CreateEx:

; 771  : 		}
; 772  : 	}

  01922	e9 45 fe ff ff	 jmp	 $LN11@CreateEx
$LN10@CreateEx:

; 773  : 
; 774  : 	return -1;

  01927	83 c8 ff	 or	 eax, -1
$LN12@CreateEx:

; 775  : }

  0192a	5f		 pop	 edi
  0192b	5e		 pop	 esi
  0192c	5b		 pop	 ebx
  0192d	8b e5		 mov	 esp, ebp
  0192f	5d		 pop	 ebp
  01930	c2 0c 00	 ret	 12			; 0000000cH
?CreateEx@PartyClass@@QAEHHHH@Z ENDP			; PartyClass::CreateEx
_TEXT	ENDS
PUBLIC	?AddEx@PartyClass@@QAEHHHHH@Z			; PartyClass::AddEx
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$229102 = -12						; size = 4
_i$229097 = -8						; size = 4
_this$ = -4						; size = 4
_party_number$ = 8					; size = 4
_usernumber$ = 12					; size = 4
_dbnumber$ = 16						; size = 4
_level$ = 20						; size = 4
?AddEx@PartyClass@@QAEHHHHH@Z PROC			; PartyClass::AddEx
; _this$ = ecx

; 779  : {

  01940	55		 push	 ebp
  01941	8b ec		 mov	 ebp, esp
  01943	83 ec 4c	 sub	 esp, 76			; 0000004cH
  01946	53		 push	 ebx
  01947	56		 push	 esi
  01948	57		 push	 edi
  01949	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 780  : 	if ( this->IsParty(party_number ) == FALSE )

  0194c	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  0194f	50		 push	 eax
  01950	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01953	e8 00 00 00 00	 call	 ?IsParty@PartyClass@@QAEHH@Z ; PartyClass::IsParty
  01958	85 c0		 test	 eax, eax
  0195a	75 08		 jne	 SHORT $LN13@AddEx

; 781  : 	{
; 782  : 		return -1;

  0195c	83 c8 ff	 or	 eax, -1
  0195f	e9 d7 01 00 00	 jmp	 $LN14@AddEx
$LN13@AddEx:

; 783  : 	}
; 784  : 
; 785  : 	if ( this->m_PartyS[party_number].Count >= OBJMAX )

  01964	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01967	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0196a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0196d	81 7c 01 08 98
	3a 00 00	 cmp	 DWORD PTR [ecx+eax+8], 15000 ; 00003a98H
  01975	7c 08		 jl	 SHORT $LN12@AddEx

; 786  : 	{
; 787  : 		return -1;

  01977	83 c8 ff	 or	 eax, -1
  0197a	e9 bc 01 00 00	 jmp	 $LN14@AddEx
$LN12@AddEx:

; 788  : 	}
; 789  : 
; 790  : 	for ( int i = 0; i<MAX_USER_IN_PARTY ; i++)

  0197f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$229097[ebp], 0
  01986	eb 09		 jmp	 SHORT $LN11@AddEx
$LN10@AddEx:
  01988	8b 45 f8	 mov	 eax, DWORD PTR _i$229097[ebp]
  0198b	83 c0 01	 add	 eax, 1
  0198e	89 45 f8	 mov	 DWORD PTR _i$229097[ebp], eax
$LN11@AddEx:
  01991	83 7d f8 0a	 cmp	 DWORD PTR _i$229097[ebp], 10 ; 0000000aH
  01995	7d 55		 jge	 SHORT $LN9@AddEx

; 791  : 	{
; 792  : 		if ( (this->m_PartyS[party_number].Number[i] >= 0) && (this->m_PartyS[party_number].Number[i] == usernumber) && (this->m_PartyS[party_number].DbNumber[i] == dbnumber) )

  01997	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  0199a	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0199d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  019a0	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  019a4	8b 45 f8	 mov	 eax, DWORD PTR _i$229097[ebp]
  019a7	83 7c 82 04 00	 cmp	 DWORD PTR [edx+eax*4+4], 0
  019ac	7c 3c		 jl	 SHORT $LN8@AddEx
  019ae	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  019b1	6b c0 6c	 imul	 eax, 108		; 0000006cH
  019b4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  019b7	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  019bb	8b 45 f8	 mov	 eax, DWORD PTR _i$229097[ebp]
  019be	8b 4c 82 04	 mov	 ecx, DWORD PTR [edx+eax*4+4]
  019c2	3b 4d 0c	 cmp	 ecx, DWORD PTR _usernumber$[ebp]
  019c5	75 23		 jne	 SHORT $LN8@AddEx
  019c7	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  019ca	6b c0 6c	 imul	 eax, 108		; 0000006cH
  019cd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  019d0	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  019d4	8b 45 f8	 mov	 eax, DWORD PTR _i$229097[ebp]
  019d7	8b 4c 82 2c	 mov	 ecx, DWORD PTR [edx+eax*4+44]
  019db	3b 4d 10	 cmp	 ecx, DWORD PTR _dbnumber$[ebp]
  019de	75 0a		 jne	 SHORT $LN8@AddEx

; 793  : 		{
; 794  : 			return -2;

  019e0	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  019e5	e9 51 01 00 00	 jmp	 $LN14@AddEx
$LN8@AddEx:

; 795  : 		}
; 796  : 	}

  019ea	eb 9c		 jmp	 SHORT $LN10@AddEx
$LN9@AddEx:

; 797  : 
; 798  : 	for (int i = 0; i<MAX_USER_IN_PARTY ; i++ )

  019ec	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$229102[ebp], 0
  019f3	eb 09		 jmp	 SHORT $LN7@AddEx
$LN6@AddEx:
  019f5	8b 45 f4	 mov	 eax, DWORD PTR _i$229102[ebp]
  019f8	83 c0 01	 add	 eax, 1
  019fb	89 45 f4	 mov	 DWORD PTR _i$229102[ebp], eax
$LN7@AddEx:
  019fe	83 7d f4 0a	 cmp	 DWORD PTR _i$229102[ebp], 10 ; 0000000aH
  01a02	0f 8d 30 01 00
	00		 jge	 $LN5@AddEx

; 799  : 	{
; 800  : #if _NEW_PARTY_SYSTEM_ == TRUE
; 801  : 		if( i >= g_MaxPartyMember)

  01a08	8b 45 f4	 mov	 eax, DWORD PTR _i$229102[ebp]
  01a0b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?g_MaxPartyMember@@3HA ; g_MaxPartyMember
  01a11	7c 08		 jl	 SHORT $LN4@AddEx

; 802  : 		{
; 803  : 			return -1;

  01a13	83 c8 ff	 or	 eax, -1
  01a16	e9 20 01 00 00	 jmp	 $LN14@AddEx
$LN4@AddEx:

; 804  : 		}
; 805  : #endif
; 806  : 		if ( this->m_PartyS[party_number].Number[i] == -1 )

  01a1b	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01a1e	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01a21	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01a24	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  01a28	8b 45 f4	 mov	 eax, DWORD PTR _i$229102[ebp]
  01a2b	83 7c 82 04 ff	 cmp	 DWORD PTR [edx+eax*4+4], -1
  01a30	0f 85 fd 00 00
	00		 jne	 $LN3@AddEx

; 807  : 		{
; 808  : 			this->m_PartyS[party_number].Number[i] = usernumber;

  01a36	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01a39	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01a3c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01a3f	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  01a43	8b 45 f4	 mov	 eax, DWORD PTR _i$229102[ebp]
  01a46	8b 4d 0c	 mov	 ecx, DWORD PTR _usernumber$[ebp]
  01a49	89 4c 82 04	 mov	 DWORD PTR [edx+eax*4+4], ecx

; 809  : 			this->m_PartyS[party_number].DbNumber[i] = dbnumber;

  01a4d	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01a50	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01a53	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01a56	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  01a5a	8b 45 f4	 mov	 eax, DWORD PTR _i$229102[ebp]
  01a5d	8b 4d 10	 mov	 ecx, DWORD PTR _dbnumber$[ebp]
  01a60	89 4c 82 2c	 mov	 DWORD PTR [edx+eax*4+44], ecx

; 810  : 			this->m_PartyS[party_number].Count++;

  01a64	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01a67	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01a6a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01a6d	8b 54 01 08	 mov	 edx, DWORD PTR [ecx+eax+8]
  01a71	83 c2 01	 add	 edx, 1
  01a74	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01a77	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01a7a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01a7d	89 54 01 08	 mov	 DWORD PTR [ecx+eax+8], edx

; 811  : 			this->SetLevel(party_number, level);

  01a81	8b 45 14	 mov	 eax, DWORD PTR _level$[ebp]
  01a84	50		 push	 eax
  01a85	8b 4d 08	 mov	 ecx, DWORD PTR _party_number$[ebp]
  01a88	51		 push	 ecx
  01a89	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01a8c	e8 00 00 00 00	 call	 ?SetLevel@PartyClass@@QAEHHH@Z ; PartyClass::SetLevel

; 812  : 			this->m_PartyS[party_number].m_PkLevel[i] = gObj[usernumber].m_PK_Level;

  01a91	8b 45 0c	 mov	 eax, DWORD PTR _usernumber$[ebp]
  01a94	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01a9a	8b 4d 08	 mov	 ecx, DWORD PTR _party_number$[ebp]
  01a9d	6b c9 6c	 imul	 ecx, 108		; 0000006cH
  01aa0	03 4d f4	 add	 ecx, DWORD PTR _i$229102[ebp]
  01aa3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01aa6	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01aac	8a 84 06 3d 01
	00 00		 mov	 al, BYTE PTR [esi+eax+317]
  01ab3	88 44 0a 60	 mov	 BYTE PTR [edx+ecx+96], al

; 813  : 			
; 814  : 			if( this->m_PartyS[party_number].m_PkLevel[i] >= 5 )

  01ab7	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01aba	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01abd	03 45 f4	 add	 eax, DWORD PTR _i$229102[ebp]
  01ac0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01ac3	0f be 54 01 60	 movsx	 edx, BYTE PTR [ecx+eax+96]
  01ac8	83 fa 05	 cmp	 edx, 5
  01acb	7c 61		 jl	 SHORT $LN2@AddEx

; 815  : 			{
; 816  : 				if( this->m_PartyS[party_number].m_PartyPkLevel < this->m_PartyS[party_number].m_PkLevel[i] )

  01acd	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01ad0	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01ad3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01ad6	0f be 54 01 6a	 movsx	 edx, BYTE PTR [ecx+eax+106]
  01adb	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01ade	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01ae1	03 45 f4	 add	 eax, DWORD PTR _i$229102[ebp]
  01ae4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01ae7	0f be 44 01 60	 movsx	 eax, BYTE PTR [ecx+eax+96]
  01aec	3b d0		 cmp	 edx, eax
  01aee	7d 21		 jge	 SHORT $LN1@AddEx

; 817  : 				{
; 818  : 					this->m_PartyS[party_number].m_PartyPkLevel = this->m_PartyS[party_number].m_PkLevel[i];

  01af0	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01af3	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01af6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01af9	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  01afd	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01b00	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01b03	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01b06	8b 75 f4	 mov	 esi, DWORD PTR _i$229102[ebp]
  01b09	8a 54 32 58	 mov	 dl, BYTE PTR [edx+esi+88]
  01b0d	88 54 01 6a	 mov	 BYTE PTR [ecx+eax+106], dl
$LN1@AddEx:

; 819  : 				}
; 820  : 					
; 821  : 				this->m_PartyS[party_number].m_PkCount += 1;

  01b11	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01b14	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01b17	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01b1a	8b 54 01 6c	 mov	 edx, DWORD PTR [ecx+eax+108]
  01b1e	83 c2 01	 add	 edx, 1
  01b21	8b 45 08	 mov	 eax, DWORD PTR _party_number$[ebp]
  01b24	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01b27	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01b2a	89 54 01 6c	 mov	 DWORD PTR [ecx+eax+108], edx
$LN2@AddEx:

; 822  : 			}
; 823  : 			return i;

  01b2e	8b 45 f4	 mov	 eax, DWORD PTR _i$229102[ebp]
  01b31	eb 08		 jmp	 SHORT $LN14@AddEx
$LN3@AddEx:

; 824  : 		}
; 825  : 	}

  01b33	e9 bd fe ff ff	 jmp	 $LN6@AddEx
$LN5@AddEx:

; 826  : 
; 827  : 	return -1;

  01b38	83 c8 ff	 or	 eax, -1
$LN14@AddEx:

; 828  : }

  01b3b	5f		 pop	 edi
  01b3c	5e		 pop	 esi
  01b3d	5b		 pop	 ebx
  01b3e	8b e5		 mov	 esp, ebp
  01b40	5d		 pop	 ebp
  01b41	c2 10 00	 ret	 16			; 00000010H
?AddEx@PartyClass@@QAEHHHHH@Z ENDP			; PartyClass::AddEx
_TEXT	ENDS
PUBLIC	?RestoreParty@PartyClass@@QAEXH@Z		; PartyClass::RestoreParty
EXTRN	?gParty@@3VPartyClass@@A:BYTE			; gParty
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv69 = -108						; size = 4
_iPartyPos$229144 = -40					; size = 4
_pnumber$ = -36						; size = 4
_lpTarget$ = -32					; size = 4
_sObj$229133 = -28					; size = 4
_n$229129 = -24						; size = 4
_sObj$229123 = -20					; size = 4
_n$229119 = -16						; size = 4
_TargetIndex$ = -12					; size = 4
_lpUser$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
?RestoreParty@PartyClass@@QAEXH@Z PROC			; PartyClass::RestoreParty
; _this$ = ecx

; 832  : {

  01b50	55		 push	 ebp
  01b51	8b ec		 mov	 ebp, esp
  01b53	83 ec 6c	 sub	 esp, 108		; 0000006cH
  01b56	53		 push	 ebx
  01b57	56		 push	 esi
  01b58	57		 push	 edi
  01b59	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 833  : 	if(!g_ExLicense.user.PartySave)

  01b5c	0f b6 05 e0 00
	00 00		 movzx	 eax, BYTE PTR ?g_ExLicense@@3VCExLicense@@A+224
  01b63	85 c0		 test	 eax, eax
  01b65	75 05		 jne	 SHORT $LN28@RestorePar

; 834  : 	{
; 835  : 		return;

  01b67	e9 80 02 00 00	 jmp	 $LN29@RestorePar
$LN28@RestorePar:

; 836  : 	}
; 837  : 
; 838  : 	if(!OBJMAX_RANGE(aIndex))

  01b6c	83 7d 08 00	 cmp	 DWORD PTR _aIndex$[ebp], 0
  01b70	7d 09		 jge	 SHORT $LN31@RestorePar
  01b72	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
  01b79	eb 0f		 jmp	 SHORT $LN32@RestorePar
$LN31@RestorePar:
  01b7b	33 c0		 xor	 eax, eax
  01b7d	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _aIndex$[ebp], 14999 ; 00003a97H
  01b84	0f 9e c0	 setle	 al
  01b87	89 45 94	 mov	 DWORD PTR tv69[ebp], eax
$LN32@RestorePar:
  01b8a	83 7d 94 00	 cmp	 DWORD PTR tv69[ebp], 0
  01b8e	75 05		 jne	 SHORT $LN27@RestorePar

; 839  : 	{
; 840  : 		return;

  01b90	e9 57 02 00 00	 jmp	 $LN29@RestorePar
$LN27@RestorePar:

; 841  : 	}
; 842  : 
; 843  : 	LPOBJ lpUser = &gObj[aIndex];

  01b95	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  01b98	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01b9e	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01ba4	89 45 f8	 mov	 DWORD PTR _lpUser$[ebp], eax

; 844  : 
; 845  : 	if(!lpUser->PartyIndex)

  01ba7	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  01baa	83 b8 d0 28 00
	00 00		 cmp	 DWORD PTR [eax+10448], 0
  01bb1	75 05		 jne	 SHORT $LN26@RestorePar

; 846  : 	{
; 847  : 		return;

  01bb3	e9 34 02 00 00	 jmp	 $LN29@RestorePar
$LN26@RestorePar:

; 848  : 	}
; 849  : 
; 850  : 	int TargetIndex = -1;

  01bb8	c7 45 f4 ff ff
	ff ff		 mov	 DWORD PTR _TargetIndex$[ebp], -1

; 851  : 
; 852  : 	//Join
; 853  : 	for(int n = OBJ_STARTUSERINDEX; n < OBJMAX; n++)

  01bbf	c7 45 f0 b0 36
	00 00		 mov	 DWORD PTR _n$229119[ebp], 14000 ; 000036b0H
  01bc6	eb 09		 jmp	 SHORT $LN25@RestorePar
$LN24@RestorePar:
  01bc8	8b 45 f0	 mov	 eax, DWORD PTR _n$229119[ebp]
  01bcb	83 c0 01	 add	 eax, 1
  01bce	89 45 f0	 mov	 DWORD PTR _n$229119[ebp], eax
$LN25@RestorePar:
  01bd1	81 7d f0 98 3a
	00 00		 cmp	 DWORD PTR _n$229119[ebp], 15000 ; 00003a98H
  01bd8	7d 68		 jge	 SHORT $LN23@RestorePar

; 854  : 	{
; 855  : 		LPOBJ sObj = &gObj[n];

  01bda	8b 45 f0	 mov	 eax, DWORD PTR _n$229119[ebp]
  01bdd	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01be3	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01be9	89 45 ec	 mov	 DWORD PTR _sObj$229123[ebp], eax

; 856  : 		if(sObj->Connected >= PLAYER_PLAYING)

  01bec	8b 45 ec	 mov	 eax, DWORD PTR _sObj$229123[ebp]
  01bef	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  01bf3	7c 4b		 jl	 SHORT $LN22@RestorePar

; 857  : 		{
; 858  : 			if(lpUser->m_Index == n)

  01bf5	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  01bf8	8b 08		 mov	 ecx, DWORD PTR [eax]
  01bfa	3b 4d f0	 cmp	 ecx, DWORD PTR _n$229119[ebp]
  01bfd	75 02		 jne	 SHORT $LN21@RestorePar

; 859  : 			{
; 860  : 				continue;

  01bff	eb c7		 jmp	 SHORT $LN24@RestorePar
$LN21@RestorePar:

; 861  : 			}
; 862  : 			if(sObj->PartyIndex == lpUser->PartyIndex)

  01c01	8b 45 ec	 mov	 eax, DWORD PTR _sObj$229123[ebp]
  01c04	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  01c07	8b 90 d0 28 00
	00		 mov	 edx, DWORD PTR [eax+10448]
  01c0d	3b 91 d0 28 00
	00		 cmp	 edx, DWORD PTR [ecx+10448]
  01c13	75 2b		 jne	 SHORT $LN22@RestorePar

; 863  : 			{
; 864  : 				if(gParty.Isleader(sObj->PartyNumber, n, sObj->DBNumber))

  01c15	8b 45 ec	 mov	 eax, DWORD PTR _sObj$229123[ebp]
  01c18	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  01c1b	51		 push	 ecx
  01c1c	8b 55 f0	 mov	 edx, DWORD PTR _n$229119[ebp]
  01c1f	52		 push	 edx
  01c20	8b 45 ec	 mov	 eax, DWORD PTR _sObj$229123[ebp]
  01c23	8b 88 2c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1068]
  01c29	51		 push	 ecx
  01c2a	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  01c2f	e8 00 00 00 00	 call	 ?Isleader@PartyClass@@QAEHHHH@Z ; PartyClass::Isleader
  01c34	85 c0		 test	 eax, eax
  01c36	74 08		 je	 SHORT $LN22@RestorePar

; 865  : 				{
; 866  : 					TargetIndex = n;

  01c38	8b 45 f0	 mov	 eax, DWORD PTR _n$229119[ebp]
  01c3b	89 45 f4	 mov	 DWORD PTR _TargetIndex$[ebp], eax

; 867  : 					break;

  01c3e	eb 02		 jmp	 SHORT $LN23@RestorePar
$LN22@RestorePar:

; 868  : 				}
; 869  : 			}
; 870  : 		}
; 871  : 	}

  01c40	eb 86		 jmp	 SHORT $LN24@RestorePar
$LN23@RestorePar:

; 872  : 	//Create
; 873  : 	if(TargetIndex < 0)

  01c42	83 7d f4 00	 cmp	 DWORD PTR _TargetIndex$[ebp], 0
  01c46	7d 60		 jge	 SHORT $LN18@RestorePar

; 874  : 	{
; 875  : 		for(int n = OBJ_STARTUSERINDEX; n < OBJMAX; n++)

  01c48	c7 45 e8 b0 36
	00 00		 mov	 DWORD PTR _n$229129[ebp], 14000 ; 000036b0H
  01c4f	eb 09		 jmp	 SHORT $LN17@RestorePar
$LN16@RestorePar:
  01c51	8b 45 e8	 mov	 eax, DWORD PTR _n$229129[ebp]
  01c54	83 c0 01	 add	 eax, 1
  01c57	89 45 e8	 mov	 DWORD PTR _n$229129[ebp], eax
$LN17@RestorePar:
  01c5a	81 7d e8 98 3a
	00 00		 cmp	 DWORD PTR _n$229129[ebp], 15000 ; 00003a98H
  01c61	7d 45		 jge	 SHORT $LN18@RestorePar

; 876  : 		{
; 877  : 			LPOBJ sObj = &gObj[n];

  01c63	8b 45 e8	 mov	 eax, DWORD PTR _n$229129[ebp]
  01c66	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01c6c	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01c72	89 45 e4	 mov	 DWORD PTR _sObj$229133[ebp], eax

; 878  : 			if(sObj->Connected >= PLAYER_PLAYING)

  01c75	8b 45 e4	 mov	 eax, DWORD PTR _sObj$229133[ebp]
  01c78	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  01c7c	7c 28		 jl	 SHORT $LN14@RestorePar

; 879  : 			{
; 880  : 				if(lpUser->m_Index == n)

  01c7e	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  01c81	8b 08		 mov	 ecx, DWORD PTR [eax]
  01c83	3b 4d e8	 cmp	 ecx, DWORD PTR _n$229129[ebp]
  01c86	75 02		 jne	 SHORT $LN13@RestorePar

; 881  : 				{
; 882  : 					continue;

  01c88	eb c7		 jmp	 SHORT $LN16@RestorePar
$LN13@RestorePar:

; 883  : 				}
; 884  : 				if(sObj->PartyIndex == lpUser->PartyIndex)

  01c8a	8b 45 e4	 mov	 eax, DWORD PTR _sObj$229133[ebp]
  01c8d	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  01c90	8b 90 d0 28 00
	00		 mov	 edx, DWORD PTR [eax+10448]
  01c96	3b 91 d0 28 00
	00		 cmp	 edx, DWORD PTR [ecx+10448]
  01c9c	75 08		 jne	 SHORT $LN14@RestorePar

; 885  : 				{
; 886  : 					TargetIndex = n;

  01c9e	8b 45 e8	 mov	 eax, DWORD PTR _n$229129[ebp]
  01ca1	89 45 f4	 mov	 DWORD PTR _TargetIndex$[ebp], eax

; 887  : 					break;

  01ca4	eb 02		 jmp	 SHORT $LN18@RestorePar
$LN14@RestorePar:

; 888  : 				}
; 889  : 			}
; 890  : 		}

  01ca6	eb a9		 jmp	 SHORT $LN16@RestorePar
$LN18@RestorePar:

; 891  : 	}
; 892  : 
; 893  : 	if(TargetIndex < 0)

  01ca8	83 7d f4 00	 cmp	 DWORD PTR _TargetIndex$[ebp], 0
  01cac	7d 05		 jge	 SHORT $LN11@RestorePar

; 894  : 	{
; 895  : 		return;

  01cae	e9 39 01 00 00	 jmp	 $LN29@RestorePar
$LN11@RestorePar:

; 896  : 	}
; 897  : 
; 898  : 	LPOBJ lpTarget = &gObj[TargetIndex];

  01cb3	8b 45 f4	 mov	 eax, DWORD PTR _TargetIndex$[ebp]
  01cb6	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01cbc	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01cc2	89 45 e0	 mov	 DWORD PTR _lpTarget$[ebp], eax

; 899  : 
; 900  : 	int pnumber = -1;

  01cc5	c7 45 dc ff ff
	ff ff		 mov	 DWORD PTR _pnumber$[ebp], -1

; 901  : 
; 902  : 	if(lpTarget->PartyNumber < 0)

  01ccc	8b 45 e0	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  01ccf	83 b8 2c 04 00
	00 00		 cmp	 DWORD PTR [eax+1068], 0
  01cd6	7d 29		 jge	 SHORT $LN10@RestorePar

; 903  : 	{
; 904  : 		lpTarget->PartyNumber = gParty.CreateEx(TargetIndex, lpTarget->DBNumber, lpTarget->Level);

  01cd8	8b 45 e0	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  01cdb	0f bf 88 be 00
	00 00		 movsx	 ecx, WORD PTR [eax+190]
  01ce2	51		 push	 ecx
  01ce3	8b 55 e0	 mov	 edx, DWORD PTR _lpTarget$[ebp]
  01ce6	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  01ce9	50		 push	 eax
  01cea	8b 4d f4	 mov	 ecx, DWORD PTR _TargetIndex$[ebp]
  01ced	51		 push	 ecx
  01cee	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  01cf3	e8 00 00 00 00	 call	 ?CreateEx@PartyClass@@QAEHHHH@Z ; PartyClass::CreateEx
  01cf8	8b 55 e0	 mov	 edx, DWORD PTR _lpTarget$[ebp]
  01cfb	89 82 2c 04 00
	00		 mov	 DWORD PTR [edx+1068], eax
$LN10@RestorePar:

; 905  : 	}
; 906  : 
; 907  : 	if(lpTarget->PartyNumber >= 0 && lpUser->PartyNumber == -1)

  01d01	8b 45 e0	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  01d04	83 b8 2c 04 00
	00 00		 cmp	 DWORD PTR [eax+1068], 0
  01d0b	0f 8c c9 00 00
	00		 jl	 $LN9@RestorePar
  01d11	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  01d14	83 b8 2c 04 00
	00 ff		 cmp	 DWORD PTR [eax+1068], -1
  01d1b	0f 85 b9 00 00
	00		 jne	 $LN9@RestorePar

; 908  : 	{
; 909  : 		if(!gParty.Isleader(lpTarget->PartyNumber, TargetIndex, lpTarget->DBNumber))

  01d21	8b 45 e0	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  01d24	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  01d27	51		 push	 ecx
  01d28	8b 55 f4	 mov	 edx, DWORD PTR _TargetIndex$[ebp]
  01d2b	52		 push	 edx
  01d2c	8b 45 e0	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  01d2f	8b 88 2c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1068]
  01d35	51		 push	 ecx
  01d36	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  01d3b	e8 00 00 00 00	 call	 ?Isleader@PartyClass@@QAEHHHH@Z ; PartyClass::Isleader
  01d40	85 c0		 test	 eax, eax
  01d42	75 05		 jne	 SHORT $LN8@RestorePar

; 910  : 		{
; 911  : 			return;

  01d44	e9 a3 00 00 00	 jmp	 $LN29@RestorePar
$LN8@RestorePar:

; 912  : 		}
; 913  : 
; 914  : 		if(gParty.GetCount(lpTarget->PartyNumber) >= MAX_USER_IN_PARTY)

  01d49	8b 45 e0	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  01d4c	8b 88 2c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1068]
  01d52	51		 push	 ecx
  01d53	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  01d58	e8 00 00 00 00	 call	 ?GetCount@PartyClass@@QAEHH@Z ; PartyClass::GetCount
  01d5d	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  01d60	7c 05		 jl	 SHORT $LN7@RestorePar

; 915  : 		{
; 916  : 			return;

  01d62	e9 85 00 00 00	 jmp	 $LN29@RestorePar
$LN7@RestorePar:

; 917  : 		}
; 918  : 
; 919  : 		pnumber = lpTarget->PartyNumber;

  01d67	8b 45 e0	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  01d6a	8b 88 2c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1068]
  01d70	89 4d dc	 mov	 DWORD PTR _pnumber$[ebp], ecx

; 920  : 
; 921  : 		int iPartyPos = gParty.AddEx(lpTarget->PartyNumber, aIndex, lpUser->DBNumber, lpUser->Level);

  01d73	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  01d76	0f bf 88 be 00
	00 00		 movsx	 ecx, WORD PTR [eax+190]
  01d7d	51		 push	 ecx
  01d7e	8b 55 f8	 mov	 edx, DWORD PTR _lpUser$[ebp]
  01d81	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  01d84	50		 push	 eax
  01d85	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  01d88	51		 push	 ecx
  01d89	8b 55 e0	 mov	 edx, DWORD PTR _lpTarget$[ebp]
  01d8c	8b 82 2c 04 00
	00		 mov	 eax, DWORD PTR [edx+1068]
  01d92	50		 push	 eax
  01d93	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  01d98	e8 00 00 00 00	 call	 ?AddEx@PartyClass@@QAEHHHHH@Z ; PartyClass::AddEx
  01d9d	89 45 d8	 mov	 DWORD PTR _iPartyPos$229144[ebp], eax

; 922  : 
; 923  : 		if(iPartyPos >= 0)

  01da0	83 7d d8 00	 cmp	 DWORD PTR _iPartyPos$229144[ebp], 0
  01da4	7c 22		 jl	 SHORT $LN6@RestorePar

; 924  : 		{
; 925  : 			lpUser->PartyNumber = lpTarget->PartyNumber;

  01da6	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  01da9	8b 4d e0	 mov	 ecx, DWORD PTR _lpTarget$[ebp]
  01dac	8b 91 2c 04 00
	00		 mov	 edx, DWORD PTR [ecx+1068]
  01db2	89 90 2c 04 00
	00		 mov	 DWORD PTR [eax+1068], edx

; 926  : 			gParty.Paint(pnumber);

  01db8	8b 45 dc	 mov	 eax, DWORD PTR _pnumber$[ebp]
  01dbb	50		 push	 eax
  01dbc	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  01dc1	e8 00 00 00 00	 call	 ?Paint@PartyClass@@QAEXH@Z ; PartyClass::Paint
  01dc6	eb 12		 jmp	 SHORT $LN9@RestorePar
$LN6@RestorePar:

; 927  : 		}
; 928  : 		else if(iPartyPos == -1)

  01dc8	83 7d d8 ff	 cmp	 DWORD PTR _iPartyPos$229144[ebp], -1
  01dcc	75 04		 jne	 SHORT $LN4@RestorePar

; 929  : 		{
; 930  : 			return;

  01dce	eb 1c		 jmp	 SHORT $LN29@RestorePar
  01dd0	eb 08		 jmp	 SHORT $LN9@RestorePar
$LN4@RestorePar:

; 931  : 		}
; 932  : 		else if(iPartyPos == -2)

  01dd2	83 7d d8 fe	 cmp	 DWORD PTR _iPartyPos$229144[ebp], -2 ; fffffffeH
  01dd6	75 02		 jne	 SHORT $LN9@RestorePar

; 933  : 		{
; 934  : 			return;

  01dd8	eb 12		 jmp	 SHORT $LN29@RestorePar
$LN9@RestorePar:

; 935  : 		}
; 936  : 	}
; 937  : 
; 938  : 	if(pnumber >= 0)

  01dda	83 7d dc 00	 cmp	 DWORD PTR _pnumber$[ebp], 0
  01dde	7c 0c		 jl	 SHORT $LN29@RestorePar

; 939  : 	{
; 940  : 		CGPartyListAll(pnumber);

  01de0	8b 45 dc	 mov	 eax, DWORD PTR _pnumber$[ebp]
  01de3	50		 push	 eax
  01de4	e8 00 00 00 00	 call	 ?CGPartyListAll@@YAXH@Z	; CGPartyListAll
  01de9	83 c4 04	 add	 esp, 4
$LN29@RestorePar:

; 941  : 	}
; 942  : }

  01dec	5f		 pop	 edi
  01ded	5e		 pop	 esi
  01dee	5b		 pop	 ebx
  01def	8b e5		 mov	 esp, ebp
  01df1	5d		 pop	 ebp
  01df2	c2 04 00	 ret	 4
?RestoreParty@PartyClass@@QAEXH@Z ENDP			; PartyClass::RestoreParty
_TEXT	ENDS
PUBLIC	?SetPartyIndex@PartyClass@@QAEXPAUPMSG_PARTYDELUSER@@H@Z ; PartyClass::SetPartyIndex
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv81 = -92						; size = 4
tv67 = -92						; size = 4
_lpTarget$ = -24					; size = 4
_TargetIndex$ = -20					; size = 4
_puser$ = -16						; size = 4
_pnumber$ = -12						; size = 4
_lpUser$ = -8						; size = 4
_this$ = -4						; size = 4
_lpMsg$ = 8						; size = 4
_aIndex$ = 12						; size = 4
?SetPartyIndex@PartyClass@@QAEXPAUPMSG_PARTYDELUSER@@H@Z PROC ; PartyClass::SetPartyIndex
; _this$ = ecx

; 946  : {

  01e00	55		 push	 ebp
  01e01	8b ec		 mov	 ebp, esp
  01e03	83 ec 5c	 sub	 esp, 92			; 0000005cH
  01e06	53		 push	 ebx
  01e07	56		 push	 esi
  01e08	57		 push	 edi
  01e09	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 947  : 	if(!OBJMAX_RANGE(aIndex))

  01e0c	83 7d 0c 00	 cmp	 DWORD PTR _aIndex$[ebp], 0
  01e10	7d 09		 jge	 SHORT $LN11@SetPartyIn
  01e12	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
  01e19	eb 0f		 jmp	 SHORT $LN12@SetPartyIn
$LN11@SetPartyIn:
  01e1b	33 c0		 xor	 eax, eax
  01e1d	81 7d 0c 97 3a
	00 00		 cmp	 DWORD PTR _aIndex$[ebp], 14999 ; 00003a97H
  01e24	0f 9e c0	 setle	 al
  01e27	89 45 a4	 mov	 DWORD PTR tv67[ebp], eax
$LN12@SetPartyIn:
  01e2a	83 7d a4 00	 cmp	 DWORD PTR tv67[ebp], 0
  01e2e	75 05		 jne	 SHORT $LN8@SetPartyIn

; 948  : 	{
; 949  : 		return;

  01e30	e9 ce 00 00 00	 jmp	 $LN9@SetPartyIn
$LN8@SetPartyIn:

; 950  : 	}
; 951  : 
; 952  : 	LPOBJ lpUser = &gObj[aIndex];

  01e35	8b 45 0c	 mov	 eax, DWORD PTR _aIndex$[ebp]
  01e38	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01e3e	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01e44	89 45 f8	 mov	 DWORD PTR _lpUser$[ebp], eax

; 953  : 
; 954  : 	if(lpUser->Connected < PLAYER_PLAYING)

  01e47	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  01e4a	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  01e4e	7d 05		 jge	 SHORT $LN7@SetPartyIn

; 955  : 	{
; 956  : 		return;

  01e50	e9 ae 00 00 00	 jmp	 $LN9@SetPartyIn
$LN7@SetPartyIn:

; 957  : 	}
; 958  : 
; 959  : 	int pnumber = lpUser->PartyNumber;

  01e55	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  01e58	8b 88 2c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1068]
  01e5e	89 4d f4	 mov	 DWORD PTR _pnumber$[ebp], ecx

; 960  : 	int puser = lpMsg->Number;

  01e61	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01e64	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  01e68	89 4d f0	 mov	 DWORD PTR _puser$[ebp], ecx

; 961  : 
; 962  : 	if(lpUser->PartyNumber < 0)

  01e6b	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  01e6e	83 b8 2c 04 00
	00 00		 cmp	 DWORD PTR [eax+1068], 0
  01e75	7d 05		 jge	 SHORT $LN6@SetPartyIn

; 963  : 	{
; 964  : 		return;

  01e77	e9 87 00 00 00	 jmp	 $LN9@SetPartyIn
$LN6@SetPartyIn:

; 965  : 	}
; 966  : 
; 967  : 	if(!OBJMAX_RANGE(pnumber))

  01e7c	83 7d f4 00	 cmp	 DWORD PTR _pnumber$[ebp], 0
  01e80	7d 09		 jge	 SHORT $LN13@SetPartyIn
  01e82	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
  01e89	eb 0f		 jmp	 SHORT $LN14@SetPartyIn
$LN13@SetPartyIn:
  01e8b	33 c0		 xor	 eax, eax
  01e8d	81 7d f4 97 3a
	00 00		 cmp	 DWORD PTR _pnumber$[ebp], 14999 ; 00003a97H
  01e94	0f 9e c0	 setle	 al
  01e97	89 45 a4	 mov	 DWORD PTR tv81[ebp], eax
$LN14@SetPartyIn:
  01e9a	83 7d a4 00	 cmp	 DWORD PTR tv81[ebp], 0
  01e9e	75 02		 jne	 SHORT $LN5@SetPartyIn

; 968  : 	{
; 969  : 		return;

  01ea0	eb 61		 jmp	 SHORT $LN9@SetPartyIn
$LN5@SetPartyIn:

; 970  : 	}
; 971  : 
; 972  : 	if (!this->IsParty(pnumber))

  01ea2	8b 45 f4	 mov	 eax, DWORD PTR _pnumber$[ebp]
  01ea5	50		 push	 eax
  01ea6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01ea9	e8 00 00 00 00	 call	 ?IsParty@PartyClass@@QAEHH@Z ; PartyClass::IsParty
  01eae	85 c0		 test	 eax, eax
  01eb0	75 02		 jne	 SHORT $LN4@SetPartyIn

; 973  : 	{
; 974  : 		return;

  01eb2	eb 4f		 jmp	 SHORT $LN9@SetPartyIn
$LN4@SetPartyIn:

; 975  : 	}
; 976  : 
; 977  : 	if(puser < 0 || puser >= MAX_USER_IN_PARTY)

  01eb4	83 7d f0 00	 cmp	 DWORD PTR _puser$[ebp], 0
  01eb8	7c 06		 jl	 SHORT $LN2@SetPartyIn
  01eba	83 7d f0 0a	 cmp	 DWORD PTR _puser$[ebp], 10 ; 0000000aH
  01ebe	7c 02		 jl	 SHORT $LN3@SetPartyIn
$LN2@SetPartyIn:

; 978  : 	{
; 979  : 		return;

  01ec0	eb 41		 jmp	 SHORT $LN9@SetPartyIn
$LN3@SetPartyIn:

; 980  : 	}
; 981  : 
; 982  : 	int TargetIndex = this->m_PartyS[pnumber].Number[puser];

  01ec2	8b 45 f4	 mov	 eax, DWORD PTR _pnumber$[ebp]
  01ec5	6b c0 6c	 imul	 eax, 108		; 0000006cH
  01ec8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01ecb	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  01ecf	8b 45 f0	 mov	 eax, DWORD PTR _puser$[ebp]
  01ed2	8b 4c 82 04	 mov	 ecx, DWORD PTR [edx+eax*4+4]
  01ed6	89 4d ec	 mov	 DWORD PTR _TargetIndex$[ebp], ecx

; 983  : 
; 984  : 	LPOBJ lpTarget = &gObj[TargetIndex];

  01ed9	8b 45 ec	 mov	 eax, DWORD PTR _TargetIndex$[ebp]
  01edc	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01ee2	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01ee8	89 45 e8	 mov	 DWORD PTR _lpTarget$[ebp], eax

; 985  : 
; 986  : 	if(lpTarget->Connected < PLAYER_PLAYING)

  01eeb	8b 45 e8	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  01eee	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  01ef2	7d 02		 jge	 SHORT $LN1@SetPartyIn

; 987  : 	{
; 988  : 		return;

  01ef4	eb 0d		 jmp	 SHORT $LN9@SetPartyIn
$LN1@SetPartyIn:

; 989  : 	}
; 990  : 
; 991  : 	lpTarget->PartyIndex = 0;

  01ef6	8b 45 e8	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  01ef9	c7 80 d0 28 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+10448], 0
$LN9@SetPartyIn:

; 992  : 	//GJSetCharacterInfo(lpTarget, lpTarget->m_Index, 0);
; 993  : }

  01f03	5f		 pop	 edi
  01f04	5e		 pop	 esi
  01f05	5b		 pop	 ebx
  01f06	8b e5		 mov	 esp, ebp
  01f08	5d		 pop	 ebp
  01f09	c2 08 00	 ret	 8
?SetPartyIndex@PartyClass@@QAEXPAUPMSG_PARTYDELUSER@@H@Z ENDP ; PartyClass::SetPartyIndex
_TEXT	ENDS
PUBLIC	?set@PBMSG_HEAD2@@QAEXPAEEEE@Z			; PBMSG_HEAD2::set
EXTRN	?Send@DBSockMng@@QAEHPADH@Z:PROC		; DBSockMng::Send
EXTRN	?cDBSMng@@3VDBSockMng@@A:BYTE			; cDBSMng
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pMsg$ = -12						; size = 8
_this$ = -4						; size = 4
?GD_SetPartyCount@PartyClass@@QAEXXZ PROC		; PartyClass::GD_SetPartyCount
; _this$ = ecx

; 997  : {

  01f10	55		 push	 ebp
  01f11	8b ec		 mov	 ebp, esp
  01f13	83 ec 4c	 sub	 esp, 76			; 0000004cH
  01f16	53		 push	 ebx
  01f17	56		 push	 esi
  01f18	57		 push	 edi
  01f19	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 998  : 	GD_PMSG_PARTYCOUNT pMsg = { 0 };

  01f1c	c6 45 f4 00	 mov	 BYTE PTR _pMsg$[ebp], 0
  01f20	33 c0		 xor	 eax, eax
  01f22	89 45 f5	 mov	 DWORD PTR _pMsg$[ebp+1], eax
  01f25	66 89 45 f9	 mov	 WORD PTR _pMsg$[ebp+5], ax
  01f29	88 45 fb	 mov	 BYTE PTR _pMsg$[ebp+7], al

; 999  : 	pMsg.h.set((LPBYTE)&pMsg, 0xE2, 0x07, sizeof(GD_PMSG_PARTYCOUNT));

  01f2c	6a 08		 push	 8
  01f2e	6a 07		 push	 7
  01f30	68 e2 00 00 00	 push	 226			; 000000e2H
  01f35	8d 45 f4	 lea	 eax, DWORD PTR _pMsg$[ebp]
  01f38	50		 push	 eax
  01f39	8d 4d f4	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  01f3c	e8 00 00 00 00	 call	 ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ; PBMSG_HEAD2::set

; 1000 : 	pMsg.PartyCount = this->DBIndex;

  01f41	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01f44	8b 88 28 b9 18
	00		 mov	 ecx, DWORD PTR [eax+1620264]
  01f4a	89 4d f8	 mov	 DWORD PTR _pMsg$[ebp+4], ecx

; 1001 : 	cDBSMng.Send((char*)&pMsg, sizeof(pMsg));

  01f4d	6a 08		 push	 8
  01f4f	8d 45 f4	 lea	 eax, DWORD PTR _pMsg$[ebp]
  01f52	50		 push	 eax
  01f53	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  01f58	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send

; 1002 : }

  01f5d	5f		 pop	 edi
  01f5e	5e		 pop	 esi
  01f5f	5b		 pop	 ebx
  01f60	8b e5		 mov	 esp, ebp
  01f62	5d		 pop	 ebp
  01f63	c3		 ret	 0
?GD_SetPartyCount@PartyClass@@QAEXXZ ENDP		; PartyClass::GD_SetPartyCount
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\include\prodef.h
_TEXT	ENDS
;	COMDAT ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpBuf$ = 8						; size = 4
_head$ = 12						; size = 1
_sub$ = 16						; size = 1
_size$ = 20						; size = 1
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z PROC			; PBMSG_HEAD2::set, COMDAT
; _this$ = ecx

; 104  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 105  : 		lpBuf[0] = 0xC1;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  0000f	c6 00 c1	 mov	 BYTE PTR [eax], 193	; 000000c1H

; 106  : 		lpBuf[1] = size;

  00012	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  00015	8a 4d 14	 mov	 cl, BYTE PTR _size$[ebp]
  00018	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 107  : 		lpBuf[2] = head;

  0001b	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  0001e	8a 4d 0c	 mov	 cl, BYTE PTR _head$[ebp]
  00021	88 48 02	 mov	 BYTE PTR [eax+2], cl

; 108  : 		lpBuf[3] = sub;

  00024	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  00027	8a 4d 10	 mov	 cl, BYTE PTR _sub$[ebp]
  0002a	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 109  : 	};

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 10 00	 ret	 16			; 00000010H
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ENDP			; PBMSG_HEAD2::set
_TEXT	ENDS
PUBLIC	??_C@_05DIALNFFA@?$CFs?5?$CFd?$AA@		; `string'
PUBLIC	??_C@_0P@GAPFACKC@User?5Not?5found?$AA@		; `string'
PUBLIC	??_C@_0P@JLFGIHAP@No?5Party?5?$CFs?5?$CFs?$AA@	; `string'
PUBLIC	??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0EC@EFBGBPKO@d?3?2projects?2exteam6?43?2source?2gam@ ; `string'
PUBLIC	?__LINE__Var@?1??CGNewLeader@PartyClass@@QAEXHPAUGC_PARTYNEWLEADER@@@Z@4JA ; `PartyClass::CGNewLeader'::`2'::__LINE__Var
PUBLIC	?CGNewLeader@PartyClass@@QAEXHPAUGC_PARTYNEWLEADER@@@Z ; PartyClass::CGNewLeader
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
;	COMDAT ??_C@_05DIALNFFA@?$CFs?5?$CFd?$AA@
; File d:\projects\exteam6.3\source\gameserver\gameserver\partyclass.cpp
CONST	SEGMENT
??_C@_05DIALNFFA@?$CFs?5?$CFd?$AA@ DB '%s %d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GAPFACKC@User?5Not?5found?$AA@
CONST	SEGMENT
??_C@_0P@GAPFACKC@User?5Not?5found?$AA@ DB 'User Not found', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JLFGIHAP@No?5Party?5?$CFs?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0P@JLFGIHAP@No?5Party?5?$CFs?5?$CFs?$AA@ DB 'No Party %s %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@ DB 'error : %s %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@EFBGBPKO@d?3?2projects?2exteam6?43?2source?2gam@
CONST	SEGMENT
??_C@_0EC@EFBGBPKO@d?3?2projects?2exteam6?43?2source?2gam@ DB 'd:\project'
	DB	's\exteam6.3\source\gameserver\gameserver\partyclass.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??CGNewLeader@PartyClass@@QAEXHPAUGC_PARTYNEWLEADER@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??CGNewLeader@PartyClass@@QAEXHPAUGC_PARTYNEWLEADER@@@Z@4JA DD 03f0H ; `PartyClass::CGNewLeader'::`2'::__LINE__Var
; Function compile flags: /Odtp /ZI
_DATA	ENDS
_TEXT	SEGMENT
tv67 = -84						; size = 4
_pnumber$ = -16						; size = 4
_dbnumber$ = -12					; size = 4
_usernumber$ = -8					; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_aRecv$ = 12						; size = 4
?CGNewLeader@PartyClass@@QAEXHPAUGC_PARTYNEWLEADER@@@Z PROC ; PartyClass::CGNewLeader
; _this$ = ecx

; 1008 : {

  01f70	55		 push	 ebp
  01f71	8b ec		 mov	 ebp, esp
  01f73	83 ec 54	 sub	 esp, 84			; 00000054H
  01f76	53		 push	 ebx
  01f77	56		 push	 esi
  01f78	57		 push	 edi
  01f79	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1009 : 	if ( OBJMAX_RANGE(aIndex) == FALSE )

  01f7c	83 7d 08 00	 cmp	 DWORD PTR _aIndex$[ebp], 0
  01f80	7d 09		 jge	 SHORT $LN8@CGNewLeade
  01f82	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
  01f89	eb 0f		 jmp	 SHORT $LN9@CGNewLeade
$LN8@CGNewLeade:
  01f8b	33 c0		 xor	 eax, eax
  01f8d	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _aIndex$[ebp], 14999 ; 00003a97H
  01f94	0f 9e c0	 setle	 al
  01f97	89 45 ac	 mov	 DWORD PTR tv67[ebp], eax
$LN9@CGNewLeade:
  01f9a	83 7d ac 00	 cmp	 DWORD PTR tv67[ebp], 0
  01f9e	75 21		 jne	 SHORT $LN5@CGNewLeade

; 1010 : 	{
; 1011 : 		LogAdd("error : %s %d", __FILE__, __LINE__ );

  01fa0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?1??CGNewLeader@PartyClass@@QAEXHPAUGC_PARTYNEWLEADER@@@Z@4JA
  01fa5	83 c0 03	 add	 eax, 3
  01fa8	50		 push	 eax
  01fa9	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@EFBGBPKO@d?3?2projects?2exteam6?43?2source?2gam@
  01fae	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@
  01fb3	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  01fb9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1012 : 		return;

  01fbc	e9 08 01 00 00	 jmp	 $LN6@CGNewLeade
$LN5@CGNewLeade:

; 1013 : 	}
; 1014 : 
; 1015 : 	int usernumber = -1; //loc1

  01fc1	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR _usernumber$[ebp], -1

; 1016 : 	int dbnumber = -1; //loc2

  01fc8	c7 45 f4 ff ff
	ff ff		 mov	 DWORD PTR _dbnumber$[ebp], -1

; 1017 : 
; 1018 : 	if ( gObj[aIndex].PartyNumber < 0 )

  01fcf	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  01fd2	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01fd8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01fde	83 bc 01 2c 04
	00 00 00	 cmp	 DWORD PTR [ecx+eax+1068], 0
  01fe6	7d 3b		 jge	 SHORT $LN4@CGNewLeade

; 1019 : 	{
; 1020 : 		LogAdd("No Party %s %s", gObj[aIndex].AccountID, gObj[aIndex].Name);

  01fe8	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  01feb	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01ff1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01ff7	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  01ffb	52		 push	 edx
  01ffc	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  01fff	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  02005	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0200b	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  0200f	52		 push	 edx
  02010	68 00 00 00 00	 push	 OFFSET ??_C@_0P@JLFGIHAP@No?5Party?5?$CFs?5?$CFs?$AA@
  02015	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  0201b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1021 : 		return;

  0201e	e9 a6 00 00 00	 jmp	 $LN6@CGNewLeade
$LN4@CGNewLeade:

; 1022 : 	}
; 1023 : 
; 1024 : 	if ( !this->GetIndexUser(gObj[aIndex].PartyNumber, aRecv->id, usernumber, dbnumber))

  02023	8d 45 f4	 lea	 eax, DWORD PTR _dbnumber$[ebp]
  02026	50		 push	 eax
  02027	8d 4d f8	 lea	 ecx, DWORD PTR _usernumber$[ebp]
  0202a	51		 push	 ecx
  0202b	8b 55 0c	 mov	 edx, DWORD PTR _aRecv$[ebp]
  0202e	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  02032	50		 push	 eax
  02033	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  02036	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0203c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  02042	8b 84 0a 2c 04
	00 00		 mov	 eax, DWORD PTR [edx+ecx+1068]
  02049	50		 push	 eax
  0204a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0204d	e8 00 00 00 00	 call	 ?GetIndexUser@PartyClass@@QAEHHHAAH0@Z ; PartyClass::GetIndexUser
  02052	85 c0		 test	 eax, eax
  02054	75 10		 jne	 SHORT $LN3@CGNewLeade

; 1025 : 	{
; 1026 : 		LogAdd("User Not found");

  02056	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GAPFACKC@User?5Not?5found?$AA@
  0205b	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  02061	83 c4 04	 add	 esp, 4

; 1027 : 		return;

  02064	eb 63		 jmp	 SHORT $LN6@CGNewLeade
$LN3@CGNewLeade:

; 1028 : 	}
; 1029 : 
; 1030 : 	if ( usernumber < 0 )

  02066	83 7d f8 00	 cmp	 DWORD PTR _usernumber$[ebp], 0
  0206a	7d 10		 jge	 SHORT $LN2@CGNewLeade

; 1031 : 	{
; 1032 : 		LogAdd("User Not found");

  0206c	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GAPFACKC@User?5Not?5found?$AA@
  02071	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  02077	83 c4 04	 add	 esp, 4

; 1033 : 		return;

  0207a	eb 4d		 jmp	 SHORT $LN6@CGNewLeade
$LN2@CGNewLeade:

; 1034 : 	}
; 1035 : 
; 1036 : 	int pnumber = gObj[aIndex].PartyNumber; //loc5

  0207c	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0207f	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  02085	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0208b	8b 94 01 2c 04
	00 00		 mov	 edx, DWORD PTR [ecx+eax+1068]
  02092	89 55 f0	 mov	 DWORD PTR _pnumber$[ebp], edx

; 1037 : 
; 1038 : 	if ( pnumber < 0 )

  02095	83 7d f0 00	 cmp	 DWORD PTR _pnumber$[ebp], 0
  02099	7d 1e		 jge	 SHORT $LN1@CGNewLeade

; 1039 : 	{
; 1040 : 		LogAdd("%s %d", __FILE__, __LINE__);

  0209b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?1??CGNewLeader@PartyClass@@QAEXHPAUGC_PARTYNEWLEADER@@@Z@4JA
  020a0	83 c0 20	 add	 eax, 32			; 00000020H
  020a3	50		 push	 eax
  020a4	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@EFBGBPKO@d?3?2projects?2exteam6?43?2source?2gam@
  020a9	68 00 00 00 00	 push	 OFFSET ??_C@_05DIALNFFA@?$CFs?5?$CFd?$AA@
  020ae	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  020b4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1041 : 		return;

  020b7	eb 10		 jmp	 SHORT $LN6@CGNewLeade
$LN1@CGNewLeade:

; 1042 : 	}
; 1043 : 
; 1044 : 	this->SetLeader(aIndex, usernumber);

  020b9	8b 45 f8	 mov	 eax, DWORD PTR _usernumber$[ebp]
  020bc	50		 push	 eax
  020bd	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  020c0	51		 push	 ecx
  020c1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  020c4	e8 00 00 00 00	 call	 ?SetLeader@PartyClass@@QAE_NHH@Z ; PartyClass::SetLeader
$LN6@CGNewLeade:

; 1045 : }

  020c9	5f		 pop	 edi
  020ca	5e		 pop	 esi
  020cb	5b		 pop	 ebx
  020cc	8b e5		 mov	 esp, ebp
  020ce	5d		 pop	 ebp
  020cf	c2 08 00	 ret	 8
?CGNewLeader@PartyClass@@QAEXHPAUGC_PARTYNEWLEADER@@@Z ENDP ; PartyClass::CGNewLeader
_TEXT	ENDS
PUBLIC	?GetNextLootMember@PartyClass@@QAEHH@Z		; PartyClass::GetNextLootMember
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_result$ = -12						; size = 4
_nextIdx$ = -8						; size = 4
_this$ = -4						; size = 4
_partyNumber$ = 8					; size = 4
?GetNextLootMember@PartyClass@@QAEHH@Z PROC		; PartyClass::GetNextLootMember
; _this$ = ecx

; 1049 : {

  020e0	55		 push	 ebp
  020e1	8b ec		 mov	 ebp, esp
  020e3	83 ec 4c	 sub	 esp, 76			; 0000004cH
  020e6	53		 push	 ebx
  020e7	56		 push	 esi
  020e8	57		 push	 edi
  020e9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1050 : 	if ( this->IsParty(partyNumber) == FALSE )

  020ec	8b 45 08	 mov	 eax, DWORD PTR _partyNumber$[ebp]
  020ef	50		 push	 eax
  020f0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  020f3	e8 00 00 00 00	 call	 ?IsParty@PartyClass@@QAEHH@Z ; PartyClass::IsParty
  020f8	85 c0		 test	 eax, eax
  020fa	75 05		 jne	 SHORT $LN3@GetNextLoo

; 1051 : 	{
; 1052 : 		return -1;

  020fc	83 c8 ff	 or	 eax, -1
  020ff	eb 7b		 jmp	 SHORT $LN4@GetNextLoo
$LN3@GetNextLoo:

; 1053 : 	}
; 1054 : 
; 1055 : 	int nextIdx = m_PartyS[partyNumber].m_NextLootIdx;

  02101	8b 45 08	 mov	 eax, DWORD PTR _partyNumber$[ebp]
  02104	6b c0 6c	 imul	 eax, 108		; 0000006cH
  02107	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0210a	8b 54 01 70	 mov	 edx, DWORD PTR [ecx+eax+112]
  0210e	89 55 f8	 mov	 DWORD PTR _nextIdx$[ebp], edx
$LN2@GetNextLoo:

; 1056 : 
; 1057 : 	while(m_PartyS[partyNumber].Number[nextIdx] == -1)

  02111	8b 45 08	 mov	 eax, DWORD PTR _partyNumber$[ebp]
  02114	6b c0 6c	 imul	 eax, 108		; 0000006cH
  02117	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0211a	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  0211e	8b 45 f8	 mov	 eax, DWORD PTR _nextIdx$[ebp]
  02121	83 7c 82 04 ff	 cmp	 DWORD PTR [edx+eax*4+4], -1
  02126	75 1e		 jne	 SHORT $LN1@GetNextLoo

; 1058 : 	{
; 1059 : 		nextIdx++;

  02128	8b 45 f8	 mov	 eax, DWORD PTR _nextIdx$[ebp]
  0212b	83 c0 01	 add	 eax, 1
  0212e	89 45 f8	 mov	 DWORD PTR _nextIdx$[ebp], eax

; 1060 : 		nextIdx += m_PartyS[partyNumber].Count;

  02131	8b 45 08	 mov	 eax, DWORD PTR _partyNumber$[ebp]
  02134	6b c0 6c	 imul	 eax, 108		; 0000006cH
  02137	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0213a	8b 55 f8	 mov	 edx, DWORD PTR _nextIdx$[ebp]
  0213d	03 54 01 08	 add	 edx, DWORD PTR [ecx+eax+8]
  02141	89 55 f8	 mov	 DWORD PTR _nextIdx$[ebp], edx

; 1061 : 	}

  02144	eb cb		 jmp	 SHORT $LN2@GetNextLoo
$LN1@GetNextLoo:

; 1062 : 
; 1063 : 	int result = m_PartyS[partyNumber].Number[nextIdx];

  02146	8b 45 08	 mov	 eax, DWORD PTR _partyNumber$[ebp]
  02149	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0214c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0214f	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  02153	8b 45 f8	 mov	 eax, DWORD PTR _nextIdx$[ebp]
  02156	8b 4c 82 04	 mov	 ecx, DWORD PTR [edx+eax*4+4]
  0215a	89 4d f4	 mov	 DWORD PTR _result$[ebp], ecx

; 1064 : 	nextIdx++;

  0215d	8b 45 f8	 mov	 eax, DWORD PTR _nextIdx$[ebp]
  02160	83 c0 01	 add	 eax, 1
  02163	89 45 f8	 mov	 DWORD PTR _nextIdx$[ebp], eax

; 1065 : 	nextIdx += m_PartyS[partyNumber].Count;

  02166	8b 45 08	 mov	 eax, DWORD PTR _partyNumber$[ebp]
  02169	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0216c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0216f	8b 55 f8	 mov	 edx, DWORD PTR _nextIdx$[ebp]
  02172	03 54 01 08	 add	 edx, DWORD PTR [ecx+eax+8]
  02176	89 55 f8	 mov	 DWORD PTR _nextIdx$[ebp], edx

; 1066 : 
; 1067 : 	return result;

  02179	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]
$LN4@GetNextLoo:

; 1068 : }

  0217c	5f		 pop	 edi
  0217d	5e		 pop	 esi
  0217e	5b		 pop	 ebx
  0217f	8b e5		 mov	 esp, ebp
  02181	5d		 pop	 ebp
  02182	c2 04 00	 ret	 4
?GetNextLootMember@PartyClass@@QAEHH@Z ENDP		; PartyClass::GetNextLootMember
_TEXT	ENDS
END
