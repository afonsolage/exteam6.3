; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\PersonalShopEx.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_PersonalShopEx@@3VPersonalShopEx@@A		; g_PersonalShopEx
_BSS	SEGMENT
?g_PersonalShopEx@@3VPersonalShopEx@@A DB 01cH DUP (?)	; g_PersonalShopEx
_BSS	ENDS
_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?Init@PersonalShopEx@@QAEXXZ			; PersonalShopEx::Init
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\personalshopex.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@PersonalShopEx@@QAEXXZ PROC			; PersonalShopEx::Init
; _this$ = ecx

; 14   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 15   : 	this->Enable = FALSE;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c6 00 00	 mov	 BYTE PTR [eax], 0

; 16   : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?Init@PersonalShopEx@@QAEXXZ ENDP			; PersonalShopEx::Init
_TEXT	ENDS
PUBLIC	?Read@PersonalShopEx@@QAEXPAD@Z			; PersonalShopEx::Read
PUBLIC	??_C@_0BK@DPDIOKLG@ExData?2PersonalShopEx?4ini?$AA@ ; `string'
PUBLIC	?Load@PersonalShopEx@@QAEXXZ			; PersonalShopEx::Load
EXTRN	?GetNewPath@CDirPath@@QAEPADPAD@Z:PROC		; CDirPath::GetNewPath
EXTRN	?gDirPath@@3VCDirPath@@A:BYTE			; gDirPath
EXTRN	?g_ExLicense@@3VCExLicense@@A:BYTE		; g_ExLicense
;	COMDAT ??_C@_0BK@DPDIOKLG@ExData?2PersonalShopEx?4ini?$AA@
CONST	SEGMENT
??_C@_0BK@DPDIOKLG@ExData?2PersonalShopEx?4ini?$AA@ DB 'ExData\PersonalSh'
	DB	'opEx.ini', 00H				; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Load@PersonalShopEx@@QAEXXZ PROC			; PersonalShopEx::Load
; _this$ = ecx

; 20   : {

  00020	55		 push	 ebp
  00021	8b ec		 mov	 ebp, esp
  00023	83 ec 44	 sub	 esp, 68			; 00000044H
  00026	53		 push	 ebx
  00027	56		 push	 esi
  00028	57		 push	 edi
  00029	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 21   : 	this->Init();

  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?Init@PersonalShopEx@@QAEXXZ ; PersonalShopEx::Init

; 22   : 
; 23   : 	if(!g_ExLicense.user.PerosnalStoreEx)

  00034	0f b6 05 d4 00
	00 00		 movzx	 eax, BYTE PTR ?g_ExLicense@@3VCExLicense@@A+212
  0003b	85 c0		 test	 eax, eax
  0003d	75 02		 jne	 SHORT $LN1@Load

; 24   : 	{
; 25   : 		return;

  0003f	eb 18		 jmp	 SHORT $LN2@Load
$LN1@Load:

; 26   : 	}
; 27   : 
; 28   : 	this->Read(gDirPath.GetNewPath("ExData\\PersonalShopEx.ini"));

  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@DPDIOKLG@ExData?2PersonalShopEx?4ini?$AA@
  00046	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  0004b	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00050	50		 push	 eax
  00051	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?Read@PersonalShopEx@@QAEXPAD@Z ; PersonalShopEx::Read
$LN2@Load:

; 29   : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?Load@PersonalShopEx@@QAEXXZ ENDP			; PersonalShopEx::Load
_TEXT	ENDS
PUBLIC	??_C@_0M@BPPCAONM@CreditPrice?$AA@		; `string'
PUBLIC	??_C@_0L@MIIFHPO@BonusPrice?$AA@		; `string'
PUBLIC	??_C@_05MGEEICMI@NPC_Y?$AA@			; `string'
PUBLIC	??_C@_05NPFPLDIJ@NPC_X?$AA@			; `string'
PUBLIC	??_C@_07BEANADGF@NPC_MAP?$AA@			; `string'
PUBLIC	??_C@_09FENANBBA@NPC_CLASS?$AA@			; `string'
PUBLIC	??_C@_06POMJKEPM@Common?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
EXTRN	?CheckUser@CExLicense@@QAE_NH@Z:PROC		; CExLicense::CheckUser
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
;	COMDAT ??_C@_0M@BPPCAONM@CreditPrice?$AA@
CONST	SEGMENT
??_C@_0M@BPPCAONM@CreditPrice?$AA@ DB 'CreditPrice', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MIIFHPO@BonusPrice?$AA@
CONST	SEGMENT
??_C@_0L@MIIFHPO@BonusPrice?$AA@ DB 'BonusPrice', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05MGEEICMI@NPC_Y?$AA@
CONST	SEGMENT
??_C@_05MGEEICMI@NPC_Y?$AA@ DB 'NPC_Y', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05NPFPLDIJ@NPC_X?$AA@
CONST	SEGMENT
??_C@_05NPFPLDIJ@NPC_X?$AA@ DB 'NPC_X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07BEANADGF@NPC_MAP?$AA@
CONST	SEGMENT
??_C@_07BEANADGF@NPC_MAP?$AA@ DB 'NPC_MAP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09FENANBBA@NPC_CLASS?$AA@
CONST	SEGMENT
??_C@_09FENANBBA@NPC_CLASS?$AA@ DB 'NPC_CLASS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06POMJKEPM@Common?$AA@
CONST	SEGMENT
??_C@_06POMJKEPM@Common?$AA@ DB 'Common', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_File$ = 8						; size = 4
?Read@PersonalShopEx@@QAEXPAD@Z PROC			; PersonalShopEx::Read
; _this$ = ecx

; 33   : {

  00060	55		 push	 ebp
  00061	8b ec		 mov	 ebp, esp
  00063	83 ec 44	 sub	 esp, 68			; 00000044H
  00066	53		 push	 ebx
  00067	56		 push	 esi
  00068	57		 push	 edi
  00069	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 34   : 	this->Enable = GetPrivateProfileInt("Common", "Enable", 0, File);

  0006c	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  0006f	50		 push	 eax
  00070	6a 00		 push	 0
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0007c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00082	85 c0		 test	 eax, eax
  00084	0f 95 c1	 setne	 cl
  00087	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008a	88 0a		 mov	 BYTE PTR [edx], cl

; 35   : 
; 36   : 	this->NPC_CLASS = GetPrivateProfileInt("Common", "NPC_CLASS", 0, File);

  0008c	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  0008f	50		 push	 eax
  00090	6a 00		 push	 0
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_09FENANBBA@NPC_CLASS?$AA@
  00097	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  000a2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 37   : 	this->NPC_MAP = GetPrivateProfileInt("Common", "NPC_MAP", 0, File);

  000a8	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  000ab	50		 push	 eax
  000ac	6a 00		 push	 0
  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_07BEANADGF@NPC_MAP?$AA@
  000b3	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  000b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  000be	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 38   : 	this->NPC_X = GetPrivateProfileInt("Common", "NPC_X", 0, File);

  000c4	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  000c7	50		 push	 eax
  000c8	6a 00		 push	 0
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_05NPFPLDIJ@NPC_X?$AA@
  000cf	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  000d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  000da	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000dd	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 39   : 	this->NPC_Y = GetPrivateProfileInt("Common", "NPC_Y", 0, File);

  000e0	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  000e3	50		 push	 eax
  000e4	6a 00		 push	 0
  000e6	68 00 00 00 00	 push	 OFFSET ??_C@_05MGEEICMI@NPC_Y?$AA@
  000eb	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  000f0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  000f6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f9	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 40   : 
; 41   : 	this->BonusPrice = GetPrivateProfileInt("Common", "BonusPrice", 0, File);

  000fc	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  000ff	50		 push	 eax
  00100	6a 00		 push	 0
  00102	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MIIFHPO@BonusPrice?$AA@
  00107	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0010c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00112	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00115	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 42   : 
; 43   : 	this->CreditPrice = 0;

  00118	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011b	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 44   : 
; 45   : 	if(g_ExLicense.CheckUser(eExUB::Gredy) || g_ExLicense.CheckUser(eExUB::Gredy2) || g_ExLicense.CheckUser(eExUB::GredyLocal) || 
; 46   : 	   g_ExLicense.CheckUser(eExUB::ProtectDebug) || g_ExLicense.CheckUser(eExUB::mu4you) || g_ExLicense.CheckUser(eExUB::NSGames))

  00122	6a 20		 push	 32			; 00000020H
  00124	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  00129	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  0012e	0f b6 c0	 movzx	 eax, al
  00131	85 c0		 test	 eax, eax
  00133	75 5f		 jne	 SHORT $LN1@Read
  00135	6a 22		 push	 34			; 00000022H
  00137	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  0013c	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  00141	0f b6 c0	 movzx	 eax, al
  00144	85 c0		 test	 eax, eax
  00146	75 4c		 jne	 SHORT $LN1@Read
  00148	6a 21		 push	 33			; 00000021H
  0014a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  0014f	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  00154	0f b6 c0	 movzx	 eax, al
  00157	85 c0		 test	 eax, eax
  00159	75 39		 jne	 SHORT $LN1@Read
  0015b	6a 4b		 push	 75			; 0000004bH
  0015d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  00162	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  00167	0f b6 c0	 movzx	 eax, al
  0016a	85 c0		 test	 eax, eax
  0016c	75 26		 jne	 SHORT $LN1@Read
  0016e	6a 4e		 push	 78			; 0000004eH
  00170	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  00175	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  0017a	0f b6 c0	 movzx	 eax, al
  0017d	85 c0		 test	 eax, eax
  0017f	75 13		 jne	 SHORT $LN1@Read
  00181	6a 51		 push	 81			; 00000051H
  00183	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  00188	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  0018d	0f b6 c0	 movzx	 eax, al
  00190	85 c0		 test	 eax, eax
  00192	74 1c		 je	 SHORT $LN3@Read
$LN1@Read:

; 47   : 	{
; 48   : 		this->CreditPrice = GetPrivateProfileInt("Common", "CreditPrice", 1, File);

  00194	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  00197	50		 push	 eax
  00198	6a 01		 push	 1
  0019a	68 00 00 00 00	 push	 OFFSET ??_C@_0M@BPPCAONM@CreditPrice?$AA@
  0019f	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  001a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  001aa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001ad	89 41 18	 mov	 DWORD PTR [ecx+24], eax
$LN3@Read:

; 49   : 	}
; 50   : 	
; 51   : }

  001b0	5f		 pop	 edi
  001b1	5e		 pop	 esi
  001b2	5b		 pop	 ebx
  001b3	8b e5		 mov	 esp, ebp
  001b5	5d		 pop	 ebp
  001b6	c2 04 00	 ret	 4
?Read@PersonalShopEx@@QAEXPAD@Z ENDP			; PersonalShopEx::Read
_TEXT	ENDS
PUBLIC	?Search@PersonalShopEx@@QAEXHPAUCG_PersonalPage@@@Z ; PersonalShopEx::Search
PUBLIC	?NPC_Dialog@PersonalShopEx@@QAE_NHH@Z		; PersonalShopEx::NPC_Dialog
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?gObjIsConnectedEx@@YA_NH@Z:PROC		; gObjIsConnectedEx
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_aCG$227248 = -20					; size = 5
_lpNpc$ = -12						; size = 4
_lpUser$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_aIndexNPC$ = 12					; size = 4
?NPC_Dialog@PersonalShopEx@@QAE_NHH@Z PROC		; PersonalShopEx::NPC_Dialog
; _this$ = ecx

; 55   : {

  001c0	55		 push	 ebp
  001c1	8b ec		 mov	 ebp, esp
  001c3	83 ec 54	 sub	 esp, 84			; 00000054H
  001c6	53		 push	 ebx
  001c7	56		 push	 esi
  001c8	57		 push	 edi
  001c9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 56   : 	if(!this->Enable)

  001cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001cf	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  001d2	85 c9		 test	 ecx, ecx
  001d4	75 07		 jne	 SHORT $LN3@NPC_Dialog

; 57   : 	{
; 58   :  		return false;

  001d6	32 c0		 xor	 al, al
  001d8	e9 a0 00 00 00	 jmp	 $LN4@NPC_Dialog
$LN3@NPC_Dialog:

; 59   : 	}
; 60   : 
; 61   : 	if(!gObjIsConnectedEx(aIndex))

  001dd	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  001e0	50		 push	 eax
  001e1	e8 00 00 00 00	 call	 ?gObjIsConnectedEx@@YA_NH@Z ; gObjIsConnectedEx
  001e6	83 c4 04	 add	 esp, 4
  001e9	0f b6 c8	 movzx	 ecx, al
  001ec	85 c9		 test	 ecx, ecx
  001ee	75 07		 jne	 SHORT $LN2@NPC_Dialog

; 62   : 	{
; 63   : 		return false;

  001f0	32 c0		 xor	 al, al
  001f2	e9 86 00 00 00	 jmp	 $LN4@NPC_Dialog
$LN2@NPC_Dialog:

; 64   : 	}
; 65   : 
; 66   : 	LPOBJ lpUser = &gObj[aIndex];

  001f7	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  001fa	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00200	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00206	89 45 f8	 mov	 DWORD PTR _lpUser$[ebp], eax

; 67   : 	LPOBJ lpNpc = &gObj[aIndexNPC];

  00209	8b 45 0c	 mov	 eax, DWORD PTR _aIndexNPC$[ebp]
  0020c	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00212	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00218	89 45 f4	 mov	 DWORD PTR _lpNpc$[ebp], eax

; 68   : 
; 69   : 	if(		lpNpc->Class		== this->NPC_CLASS 
; 70   : 		&&	lpNpc->MapNumber	== this->NPC_MAP
; 71   : 		&&	lpNpc->X			== this->NPC_X
; 72   : 		&&	lpNpc->Y			== this->NPC_Y )

  0021b	8b 45 f4	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  0021e	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00225	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00228	3b 4a 04	 cmp	 ecx, DWORD PTR [edx+4]
  0022b	75 4e		 jne	 SHORT $LN1@NPC_Dialog
  0022d	8b 45 f4	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  00230	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  00237	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0023a	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  0023d	75 3c		 jne	 SHORT $LN1@NPC_Dialog
  0023f	8b 45 f4	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  00242	0f bf 88 44 01
	00 00		 movsx	 ecx, WORD PTR [eax+324]
  00249	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0024c	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0024f	75 2a		 jne	 SHORT $LN1@NPC_Dialog
  00251	8b 45 f4	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  00254	0f bf 88 46 01
	00 00		 movsx	 ecx, WORD PTR [eax+326]
  0025b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0025e	3b 4a 10	 cmp	 ecx, DWORD PTR [edx+16]
  00261	75 18		 jne	 SHORT $LN1@NPC_Dialog

; 73   : 	{
; 74   : 		CG_PersonalPage aCG;
; 75   : 		aCG.Page = 0;

  00263	c6 45 f0 00	 mov	 BYTE PTR _aCG$227248[ebp+4], 0

; 76   : 		this->Search(aIndex,&aCG);

  00267	8d 45 ec	 lea	 eax, DWORD PTR _aCG$227248[ebp]
  0026a	50		 push	 eax
  0026b	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  0026e	51		 push	 ecx
  0026f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00272	e8 00 00 00 00	 call	 ?Search@PersonalShopEx@@QAEXHPAUCG_PersonalPage@@@Z ; PersonalShopEx::Search

; 77   : 		return true;

  00277	b0 01		 mov	 al, 1
  00279	eb 02		 jmp	 SHORT $LN4@NPC_Dialog
$LN1@NPC_Dialog:

; 78   : 	}
; 79   : 	// ----
; 80   : 	return false;

  0027b	32 c0		 xor	 al, al
$LN4@NPC_Dialog:

; 81   : }

  0027d	5f		 pop	 edi
  0027e	5e		 pop	 esi
  0027f	5b		 pop	 ebx
  00280	8b e5		 mov	 esp, ebp
  00282	5d		 pop	 ebp
  00283	c2 08 00	 ret	 8
?NPC_Dialog@PersonalShopEx@@QAE_NHH@Z ENDP		; PersonalShopEx::NPC_Dialog
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	_memcpy:PROC
EXTRN	_strncpy:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_psi$227276 = -5096					; size = 50
_lpSearch$227271 = -5044				; size = 4
_n$227267 = -5040					; size = 4
_EndCount$ = -5036					; size = 4
_StartCount$ = -5032					; size = 4
_SendCount$ = -5025					; size = 1
_icount$ = -5024					; size = 2
_datasize$ = -5020					; size = 4
_SendBuff$ = -5016					; size = 5000
_Page$ = -16						; size = 4
_lpUser$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_aRecv$ = 12						; size = 4
?Search@PersonalShopEx@@QAEXHPAUCG_PersonalPage@@@Z PROC ; PersonalShopEx::Search
; _this$ = ecx

; 85   : {

  00290	55		 push	 ebp
  00291	8b ec		 mov	 ebp, esp
  00293	b8 28 14 00 00	 mov	 eax, 5160		; 00001428H
  00298	e8 00 00 00 00	 call	 __chkstk
  0029d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  002a2	33 c5		 xor	 eax, ebp
  002a4	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  002a7	53		 push	 ebx
  002a8	56		 push	 esi
  002a9	57		 push	 edi
  002aa	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 86   : 	if(!this->Enable)

  002ad	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002b0	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  002b3	85 c9		 test	 ecx, ecx
  002b5	75 05		 jne	 SHORT $LN12@Search

; 87   : 	{
; 88   : 		return;

  002b7	e9 53 02 00 00	 jmp	 $LN13@Search
$LN12@Search:

; 89   : 	}
; 90   : 
; 91   : 	if(!gObjIsConnectedEx(aIndex))

  002bc	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  002bf	50		 push	 eax
  002c0	e8 00 00 00 00	 call	 ?gObjIsConnectedEx@@YA_NH@Z ; gObjIsConnectedEx
  002c5	83 c4 04	 add	 esp, 4
  002c8	0f b6 c8	 movzx	 ecx, al
  002cb	85 c9		 test	 ecx, ecx
  002cd	75 05		 jne	 SHORT $LN11@Search

; 92   : 	{
; 93   : 		return;

  002cf	e9 3b 02 00 00	 jmp	 $LN13@Search
$LN11@Search:

; 94   : 	}
; 95   : 
; 96   : 	LPOBJ lpUser = &gObj[aIndex];

  002d4	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  002d7	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  002dd	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002e3	89 45 f4	 mov	 DWORD PTR _lpUser$[ebp], eax

; 97   : 
; 98   : 	int Page = aRecv->Page;

  002e6	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  002e9	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  002ed	89 4d f0	 mov	 DWORD PTR _Page$[ebp], ecx

; 99   : 
; 100  : 	if(Page < 0 )

  002f0	83 7d f0 00	 cmp	 DWORD PTR _Page$[ebp], 0
  002f4	7d 07		 jge	 SHORT $LN10@Search

; 101  : 	{
; 102  : 		Page = 0;

  002f6	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _Page$[ebp], 0
$LN10@Search:

; 103  : 	}
; 104  : 
; 105  : 	if(lpUser->OffExp != 0 || lpUser->OffTrade !=0)

  002fd	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00300	83 b8 98 22 00
	00 00		 cmp	 DWORD PTR [eax+8856], 0
  00307	75 0c		 jne	 SHORT $LN8@Search
  00309	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  0030c	83 b8 ac 22 00
	00 00		 cmp	 DWORD PTR [eax+8876], 0
  00313	74 05		 je	 SHORT $LN9@Search
$LN8@Search:

; 106  : 	{
; 107  : 		return;

  00315	e9 f5 01 00 00	 jmp	 $LN13@Search
$LN9@Search:

; 108  : 	}
; 109  : 
; 110  : 	BYTE SendBuff[5000];
; 111  : 	int datasize = 8;

  0031a	c7 85 64 ec ff
	ff 08 00 00 00	 mov	 DWORD PTR _datasize$[ebp], 8

; 112  : 	short icount = 0;

  00324	33 c0		 xor	 eax, eax
  00326	66 89 85 60 ec
	ff ff		 mov	 WORD PTR _icount$[ebp], ax

; 113  : 	BYTE SendCount = 0;

  0032d	c6 85 5f ec ff
	ff 00		 mov	 BYTE PTR _SendCount$[ebp], 0

; 114  : 
; 115  : 	int StartCount = Page * 10;

  00334	8b 45 f0	 mov	 eax, DWORD PTR _Page$[ebp]
  00337	6b c0 0a	 imul	 eax, 10			; 0000000aH
  0033a	89 85 58 ec ff
	ff		 mov	 DWORD PTR _StartCount$[ebp], eax

; 116  : 	int EndCount =  StartCount + 10;

  00340	8b 85 58 ec ff
	ff		 mov	 eax, DWORD PTR _StartCount$[ebp]
  00346	83 c0 0a	 add	 eax, 10			; 0000000aH
  00349	89 85 54 ec ff
	ff		 mov	 DWORD PTR _EndCount$[ebp], eax

; 117  : 
; 118  : 	for(int n=OBJ_STARTUSERINDEX;n<OBJMAX;n++)

  0034f	c7 85 50 ec ff
	ff b0 36 00 00	 mov	 DWORD PTR _n$227267[ebp], 14000 ; 000036b0H
  00359	eb 0f		 jmp	 SHORT $LN7@Search
$LN6@Search:
  0035b	8b 85 50 ec ff
	ff		 mov	 eax, DWORD PTR _n$227267[ebp]
  00361	83 c0 01	 add	 eax, 1
  00364	89 85 50 ec ff
	ff		 mov	 DWORD PTR _n$227267[ebp], eax
$LN7@Search:
  0036a	81 bd 50 ec ff
	ff 98 3a 00 00	 cmp	 DWORD PTR _n$227267[ebp], 15000 ; 00003a98H
  00374	0f 8d 18 01 00
	00		 jge	 $LN5@Search

; 119  : 	{
; 120  : 		LPOBJ lpSearch = &gObj[n];

  0037a	8b 85 50 ec ff
	ff		 mov	 eax, DWORD PTR _n$227267[ebp]
  00380	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00386	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0038c	89 85 4c ec ff
	ff		 mov	 DWORD PTR _lpSearch$227271[ebp], eax

; 121  : 		if(lpSearch->Connected < PLAYER_PLAYING || !lpSearch->m_bPShopOpen || n == aIndex) 

  00392	8b 85 4c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227271[ebp]
  00398	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  0039c	7c 1c		 jl	 SHORT $LN3@Search
  0039e	8b 85 4c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227271[ebp]
  003a4	0f b6 88 c4 0e
	00 00		 movzx	 ecx, BYTE PTR [eax+3780]
  003ab	85 c9		 test	 ecx, ecx
  003ad	74 0b		 je	 SHORT $LN3@Search
  003af	8b 85 50 ec ff
	ff		 mov	 eax, DWORD PTR _n$227267[ebp]
  003b5	3b 45 08	 cmp	 eax, DWORD PTR _aIndex$[ebp]
  003b8	75 02		 jne	 SHORT $LN4@Search
$LN3@Search:

; 122  : 		{
; 123  : 			continue;

  003ba	eb 9f		 jmp	 SHORT $LN6@Search
$LN4@Search:

; 124  : 		}
; 125  : 
; 126  : 		if( StartCount <= icount && EndCount > icount)

  003bc	0f bf 85 60 ec
	ff ff		 movsx	 eax, WORD PTR _icount$[ebp]
  003c3	39 85 58 ec ff
	ff		 cmp	 DWORD PTR _StartCount$[ebp], eax
  003c9	0f 8f ac 00 00
	00		 jg	 $LN2@Search
  003cf	0f bf 85 60 ec
	ff ff		 movsx	 eax, WORD PTR _icount$[ebp]
  003d6	39 85 54 ec ff
	ff		 cmp	 DWORD PTR _EndCount$[ebp], eax
  003dc	0f 8e 99 00 00
	00		 jle	 $LN2@Search

; 127  : 		{
; 128  : 			if(SendCount < 10)

  003e2	0f b6 85 5f ec
	ff ff		 movzx	 eax, BYTE PTR _SendCount$[ebp]
  003e9	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  003ec	0f 8d 89 00 00
	00		 jge	 $LN2@Search

; 129  : 			{
; 130  : 				GC_PersonalShopInfo psi;
; 131  : 				psi.aIndex = n;

  003f2	66 8b 85 50 ec
	ff ff		 mov	 ax, WORD PTR _n$227267[ebp]
  003f9	66 89 85 18 ec
	ff ff		 mov	 WORD PTR _psi$227276[ebp], ax

; 132  : 				strncpy(psi.Name, lpSearch->Name, 10);

  00400	6a 0a		 push	 10			; 0000000aH
  00402	8b 85 4c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227271[ebp]
  00408	83 c0 77	 add	 eax, 119		; 00000077H
  0040b	50		 push	 eax
  0040c	8d 8d 1a ec ff
	ff		 lea	 ecx, DWORD PTR _psi$227276[ebp+2]
  00412	51		 push	 ecx
  00413	e8 00 00 00 00	 call	 _strncpy
  00418	83 c4 0c	 add	 esp, 12			; 0000000cH

; 133  : 				strncpy(psi.PersonalText, lpSearch->m_szPShopText, 36);

  0041b	6a 24		 push	 36			; 00000024H
  0041d	8b 85 4c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227271[ebp]
  00423	05 c8 0e 00 00	 add	 eax, 3784		; 00000ec8H
  00428	50		 push	 eax
  00429	8d 8d 25 ec ff
	ff		 lea	 ecx, DWORD PTR _psi$227276[ebp+13]
  0042f	51		 push	 ecx
  00430	e8 00 00 00 00	 call	 _strncpy
  00435	83 c4 0c	 add	 esp, 12			; 0000000cH

; 134  : 				psi.Value = 0;

  00438	c6 85 49 ec ff
	ff 00		 mov	 BYTE PTR _psi$227276[ebp+49], 0

; 135  : 
; 136  : 				memcpy(&SendBuff[datasize],&psi,sizeof(psi));

  0043f	6a 32		 push	 50			; 00000032H
  00441	8d 85 18 ec ff
	ff		 lea	 eax, DWORD PTR _psi$227276[ebp]
  00447	50		 push	 eax
  00448	8b 8d 64 ec ff
	ff		 mov	 ecx, DWORD PTR _datasize$[ebp]
  0044e	8d 94 0d 68 ec
	ff ff		 lea	 edx, DWORD PTR _SendBuff$[ebp+ecx]
  00455	52		 push	 edx
  00456	e8 00 00 00 00	 call	 _memcpy
  0045b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 137  : 				datasize += sizeof(psi);

  0045e	8b 85 64 ec ff
	ff		 mov	 eax, DWORD PTR _datasize$[ebp]
  00464	83 c0 32	 add	 eax, 50			; 00000032H
  00467	89 85 64 ec ff
	ff		 mov	 DWORD PTR _datasize$[ebp], eax

; 138  : 
; 139  : 				SendCount++;

  0046d	8a 85 5f ec ff
	ff		 mov	 al, BYTE PTR _SendCount$[ebp]
  00473	04 01		 add	 al, 1
  00475	88 85 5f ec ff
	ff		 mov	 BYTE PTR _SendCount$[ebp], al
$LN2@Search:

; 140  : 			}
; 141  : 		}
; 142  : 
; 143  : 		icount++;

  0047b	66 8b 85 60 ec
	ff ff		 mov	 ax, WORD PTR _icount$[ebp]
  00482	66 83 c0 01	 add	 ax, 1
  00486	66 89 85 60 ec
	ff ff		 mov	 WORD PTR _icount$[ebp], ax

; 144  : 	}

  0048d	e9 c9 fe ff ff	 jmp	 $LN6@Search
$LN5@Search:

; 145  : 
; 146  : 	SendBuff[0]=0xC2;	// packet header

  00492	c6 85 68 ec ff
	ff c2		 mov	 BYTE PTR _SendBuff$[ebp], 194 ; 000000c2H

; 147  : 	SendBuff[1]=SET_NUMBERH(datasize);

  00499	8b 85 64 ec ff
	ff		 mov	 eax, DWORD PTR _datasize$[ebp]
  0049f	c1 e8 08	 shr	 eax, 8
  004a2	88 85 69 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+1], al

; 148  : 	SendBuff[2]=SET_NUMBERL(datasize);

  004a8	8b 85 64 ec ff
	ff		 mov	 eax, DWORD PTR _datasize$[ebp]
  004ae	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  004b3	88 85 6a ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+2], al

; 149  : 	SendBuff[3]=0xFA;

  004b9	c6 85 6b ec ff
	ff fa		 mov	 BYTE PTR _SendBuff$[ebp+3], 250 ; 000000faH

; 150  : 	SendBuff[4]=0x09;

  004c0	c6 85 6c ec ff
	ff 09		 mov	 BYTE PTR _SendBuff$[ebp+4], 9

; 151  : 	SendBuff[5]=SET_NUMBERH(icount);

  004c7	0f bf 85 60 ec
	ff ff		 movsx	 eax, WORD PTR _icount$[ebp]
  004ce	c1 e8 08	 shr	 eax, 8
  004d1	88 85 6d ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+5], al

; 152  : 	SendBuff[6]=SET_NUMBERL(icount);

  004d7	0f bf 85 60 ec
	ff ff		 movsx	 eax, WORD PTR _icount$[ebp]
  004de	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  004e3	88 85 6e ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+6], al

; 153  : 	SendBuff[7]=SendCount;

  004e9	8a 85 5f ec ff
	ff		 mov	 al, BYTE PTR _SendCount$[ebp]
  004ef	88 85 6f ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+7], al

; 154  : 	DataSend(aIndex,SendBuff,datasize);

  004f5	8b 85 64 ec ff
	ff		 mov	 eax, DWORD PTR _datasize$[ebp]
  004fb	50		 push	 eax
  004fc	8d 8d 68 ec ff
	ff		 lea	 ecx, DWORD PTR _SendBuff$[ebp]
  00502	51		 push	 ecx
  00503	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  00506	52		 push	 edx
  00507	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0050c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN13@Search:

; 155  : }

  0050f	5f		 pop	 edi
  00510	5e		 pop	 esi
  00511	5b		 pop	 ebx
  00512	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00515	33 cd		 xor	 ecx, ebp
  00517	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0051c	8b e5		 mov	 esp, ebp
  0051e	5d		 pop	 ebp
  0051f	c2 08 00	 ret	 8
?Search@PersonalShopEx@@QAEXHPAUCG_PersonalPage@@@Z ENDP ; PersonalShopEx::Search
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?UpdatePSInventoryUser@PersonalShopEx@@QAEXH@Z	; PersonalShopEx::UpdatePSInventoryUser
EXTRN	?IsItem@CItem@@QAEHXZ:PROC			; CItem::IsItem
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pMsg$227302 = -5048					; size = 24
_n$227297 = -5024					; size = 4
_SendBuff$ = -5020					; size = 5000
_icount$ = -17						; size = 1
_datasize$ = -16					; size = 4
_lpUser$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?UpdatePSInventoryUser@PersonalShopEx@@QAEXH@Z PROC	; PersonalShopEx::UpdatePSInventoryUser
; _this$ = ecx

; 158  : {

  00530	55		 push	 ebp
  00531	8b ec		 mov	 ebp, esp
  00533	b8 f8 13 00 00	 mov	 eax, 5112		; 000013f8H
  00538	e8 00 00 00 00	 call	 __chkstk
  0053d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00542	33 c5		 xor	 eax, ebp
  00544	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00547	53		 push	 ebx
  00548	56		 push	 esi
  00549	57		 push	 edi
  0054a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 159  : 	//if(!this->Enable)
; 160  : 	//{
; 161  : 	//	return;
; 162  : 	//}
; 163  : 
; 164  : 	if(!this->Enable)

  0054d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00550	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00553	85 c9		 test	 ecx, ecx
  00555	75 05		 jne	 SHORT $LN6@UpdatePSIn

; 165  : 	{
; 166  :  		return;

  00557	e9 fc 01 00 00	 jmp	 $LN7@UpdatePSIn
$LN6@UpdatePSIn:

; 167  : 	}
; 168  : 
; 169  : 	if(!gObjIsConnectedEx(aIndex))

  0055c	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0055f	50		 push	 eax
  00560	e8 00 00 00 00	 call	 ?gObjIsConnectedEx@@YA_NH@Z ; gObjIsConnectedEx
  00565	83 c4 04	 add	 esp, 4
  00568	0f b6 c8	 movzx	 ecx, al
  0056b	85 c9		 test	 ecx, ecx
  0056d	75 05		 jne	 SHORT $LN5@UpdatePSIn

; 170  : 	{
; 171  : 		return;

  0056f	e9 e4 01 00 00	 jmp	 $LN7@UpdatePSIn
$LN5@UpdatePSIn:

; 172  : 	}
; 173  : 
; 174  : 	LPOBJ lpUser = &gObj[aIndex];

  00574	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00577	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0057d	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00583	89 45 f4	 mov	 DWORD PTR _lpUser$[ebp], eax

; 175  : 
; 176  : 	int datasize = 6;

  00586	c7 45 f0 06 00
	00 00		 mov	 DWORD PTR _datasize$[ebp], 6

; 177  : 	BYTE icount = 0;

  0058d	c6 45 ef 00	 mov	 BYTE PTR _icount$[ebp], 0

; 178  : 	BYTE SendBuff[5000];
; 179  : 
; 180  : 	for ( int n=MAIN_INVENTORY_SIZE;n<INVENTORY_SIZE;n++)

  00591	c7 85 60 ec ff
	ff cc 00 00 00	 mov	 DWORD PTR _n$227297[ebp], 204 ; 000000ccH
  0059b	eb 0f		 jmp	 SHORT $LN4@UpdatePSIn
$LN3@UpdatePSIn:
  0059d	8b 85 60 ec ff
	ff		 mov	 eax, DWORD PTR _n$227297[ebp]
  005a3	83 c0 01	 add	 eax, 1
  005a6	89 85 60 ec ff
	ff		 mov	 DWORD PTR _n$227297[ebp], eax
$LN4@UpdatePSIn:
  005ac	81 bd 60 ec ff
	ff ec 00 00 00	 cmp	 DWORD PTR _n$227297[ebp], 236 ; 000000ecH
  005b6	0f 8d 4d 01 00
	00		 jge	 $LN2@UpdatePSIn

; 181  : 	{
; 182  : 		if ( lpUser->Inventory1[n].IsItem() == TRUE )

  005bc	8b 8d 60 ec ff
	ff		 mov	 ecx, DWORD PTR _n$227297[ebp]
  005c2	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  005c8	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  005cb	03 88 34 0e 00
	00		 add	 ecx, DWORD PTR [eax+3636]
  005d1	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  005d6	83 f8 01	 cmp	 eax, 1
  005d9	0f 85 25 01 00
	00		 jne	 $LN1@UpdatePSIn

; 183  : 		{
; 184  : 			GC_PSInventoryValue pMsg;
; 185  : 
; 186  : 			pMsg.ItemPos = n;

  005df	66 8b 85 60 ec
	ff ff		 mov	 ax, WORD PTR _n$227297[ebp]
  005e6	66 89 85 48 ec
	ff ff		 mov	 WORD PTR _pMsg$227302[ebp], ax

; 187  : 			//ItemByteConvert(pMsgIL.ItemInfo, lpObjTarget->Inventory1[n]);
; 188  : 			//pMsgIL.PShopItemValue = lpObjTarget->Inventory1[n].m_iPShopValue;
; 189  : 			pMsg.Zen = lpUser->Inventory1[n].m_iPShopValue;

  005ed	8b 85 60 ec ff
	ff		 mov	 eax, DWORD PTR _n$227297[ebp]
  005f3	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  005f9	8b 4d f4	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  005fc	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00602	8b 44 02 74	 mov	 eax, DWORD PTR [edx+eax+116]
  00606	89 85 4c ec ff
	ff		 mov	 DWORD PTR _pMsg$227302[ebp+4], eax

; 190  : 			pMsg.Bonus = lpUser->Inventory1[n].m_iPShopBonus;

  0060c	8b 85 60 ec ff
	ff		 mov	 eax, DWORD PTR _n$227297[ebp]
  00612	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00618	8b 4d f4	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  0061b	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00621	8b 44 02 78	 mov	 eax, DWORD PTR [edx+eax+120]
  00625	89 85 50 ec ff
	ff		 mov	 DWORD PTR _pMsg$227302[ebp+8], eax

; 191  : 			pMsg.Bless = lpUser->Inventory1[n].m_PShopBlessValue;

  0062b	8b 85 60 ec ff
	ff		 mov	 eax, DWORD PTR _n$227297[ebp]
  00631	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00637	8b 4d f4	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  0063a	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00640	66 8b 44 02 7c	 mov	 ax, WORD PTR [edx+eax+124]
  00645	66 89 85 54 ec
	ff ff		 mov	 WORD PTR _pMsg$227302[ebp+12], ax

; 192  : 			pMsg.Soul = lpUser->Inventory1[n].m_PShopSoulValue;

  0064c	8b 85 60 ec ff
	ff		 mov	 eax, DWORD PTR _n$227297[ebp]
  00652	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00658	8b 4d f4	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  0065b	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00661	66 8b 44 02 7e	 mov	 ax, WORD PTR [edx+eax+126]
  00666	66 89 85 56 ec
	ff ff		 mov	 WORD PTR _pMsg$227302[ebp+14], ax

; 193  : 			pMsg.Chaos = lpUser->Inventory1[n].m_PShopChaosValue;

  0066d	8b 85 60 ec ff
	ff		 mov	 eax, DWORD PTR _n$227297[ebp]
  00673	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00679	8b 4d f4	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  0067c	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00682	66 8b 84 02 80
	00 00 00	 mov	 ax, WORD PTR [edx+eax+128]
  0068a	66 89 85 58 ec
	ff ff		 mov	 WORD PTR _pMsg$227302[ebp+16], ax

; 194  : 			pMsg.Life = lpUser->Inventory1[n].m_PShopLifeValue;

  00691	8b 85 60 ec ff
	ff		 mov	 eax, DWORD PTR _n$227297[ebp]
  00697	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  0069d	8b 4d f4	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  006a0	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  006a6	66 8b 84 02 82
	00 00 00	 mov	 ax, WORD PTR [edx+eax+130]
  006ae	66 89 85 5a ec
	ff ff		 mov	 WORD PTR _pMsg$227302[ebp+18], ax

; 195  : 			#if(DEV_PERSONAL_CREDIT)
; 196  : 			pMsg.Credit = lpUser->Inventory1[n].m_iPShopCredit;

  006b5	8b 85 60 ec ff
	ff		 mov	 eax, DWORD PTR _n$227297[ebp]
  006bb	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  006c1	8b 4d f4	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  006c4	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  006ca	8b 84 02 84 00
	00 00		 mov	 eax, DWORD PTR [edx+eax+132]
  006d1	89 85 5c ec ff
	ff		 mov	 DWORD PTR _pMsg$227302[ebp+20], eax

; 197  : 			#endif
; 198  : 			memcpy(&SendBuff[datasize], &pMsg, sizeof(pMsg));

  006d7	6a 18		 push	 24			; 00000018H
  006d9	8d 85 48 ec ff
	ff		 lea	 eax, DWORD PTR _pMsg$227302[ebp]
  006df	50		 push	 eax
  006e0	8b 4d f0	 mov	 ecx, DWORD PTR _datasize$[ebp]
  006e3	8d 94 0d 64 ec
	ff ff		 lea	 edx, DWORD PTR _SendBuff$[ebp+ecx]
  006ea	52		 push	 edx
  006eb	e8 00 00 00 00	 call	 _memcpy
  006f0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 199  : 			
; 200  : 			datasize += sizeof(pMsg);

  006f3	8b 45 f0	 mov	 eax, DWORD PTR _datasize$[ebp]
  006f6	83 c0 18	 add	 eax, 24			; 00000018H
  006f9	89 45 f0	 mov	 DWORD PTR _datasize$[ebp], eax

; 201  : 
; 202  : 			icount++;

  006fc	8a 45 ef	 mov	 al, BYTE PTR _icount$[ebp]
  006ff	04 01		 add	 al, 1
  00701	88 45 ef	 mov	 BYTE PTR _icount$[ebp], al
$LN1@UpdatePSIn:

; 203  : 		}
; 204  : 	}

  00704	e9 94 fe ff ff	 jmp	 $LN3@UpdatePSIn
$LN2@UpdatePSIn:

; 205  : 
; 206  : 	SendBuff[0]=0xC2;	// packet header

  00709	c6 85 64 ec ff
	ff c2		 mov	 BYTE PTR _SendBuff$[ebp], 194 ; 000000c2H

; 207  : 	SendBuff[1]=SET_NUMBERH(datasize);

  00710	8b 45 f0	 mov	 eax, DWORD PTR _datasize$[ebp]
  00713	c1 e8 08	 shr	 eax, 8
  00716	88 85 65 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+1], al

; 208  : 	SendBuff[2]=SET_NUMBERL(datasize);

  0071c	8b 45 f0	 mov	 eax, DWORD PTR _datasize$[ebp]
  0071f	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00724	88 85 66 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+2], al

; 209  : 	SendBuff[3]=0xFA;

  0072a	c6 85 67 ec ff
	ff fa		 mov	 BYTE PTR _SendBuff$[ebp+3], 250 ; 000000faH

; 210  : 	SendBuff[4]=0x0A;

  00731	c6 85 68 ec ff
	ff 0a		 mov	 BYTE PTR _SendBuff$[ebp+4], 10 ; 0000000aH

; 211  : 	SendBuff[5]=icount;

  00738	8a 45 ef	 mov	 al, BYTE PTR _icount$[ebp]
  0073b	88 85 69 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+5], al

; 212  : 	DataSend(aIndex,SendBuff,datasize);

  00741	8b 45 f0	 mov	 eax, DWORD PTR _datasize$[ebp]
  00744	50		 push	 eax
  00745	8d 8d 64 ec ff
	ff		 lea	 ecx, DWORD PTR _SendBuff$[ebp]
  0074b	51		 push	 ecx
  0074c	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  0074f	52		 push	 edx
  00750	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00755	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@UpdatePSIn:

; 213  : }

  00758	5f		 pop	 edi
  00759	5e		 pop	 esi
  0075a	5b		 pop	 ebx
  0075b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0075e	33 cd		 xor	 ecx, ebp
  00760	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00765	8b e5		 mov	 esp, ebp
  00767	5d		 pop	 ebp
  00768	c2 04 00	 ret	 4
?UpdatePSInventoryUser@PersonalShopEx@@QAEXH@Z ENDP	; PersonalShopEx::UpdatePSInventoryUser
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?UpdatePSInventoryTarget@PersonalShopEx@@QAEXHH@Z ; PersonalShopEx::UpdatePSInventoryTarget
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pMsg$227325 = -5052					; size = 24
_n$227320 = -5028					; size = 4
_SendBuff$ = -5024					; size = 5000
_icount$ = -21						; size = 1
_datasize$ = -20					; size = 4
_lpTarget$ = -16					; size = 4
_lpUser$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_aTargetIndex$ = 12					; size = 4
?UpdatePSInventoryTarget@PersonalShopEx@@QAEXHH@Z PROC	; PersonalShopEx::UpdatePSInventoryTarget
; _this$ = ecx

; 216  : {

  00770	55		 push	 ebp
  00771	8b ec		 mov	 ebp, esp
  00773	b8 fc 13 00 00	 mov	 eax, 5116		; 000013fcH
  00778	e8 00 00 00 00	 call	 __chkstk
  0077d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00782	33 c5		 xor	 eax, ebp
  00784	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00787	53		 push	 ebx
  00788	56		 push	 esi
  00789	57		 push	 edi
  0078a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 	if(!this->Enable)

  0078d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00790	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00793	85 c9		 test	 ecx, ecx
  00795	75 05		 jne	 SHORT $LN6@UpdatePSIn@2

; 218  : 	{
; 219  :  		return;

  00797	e9 28 02 00 00	 jmp	 $LN7@UpdatePSIn@2
$LN6@UpdatePSIn@2:

; 220  : 	}
; 221  : 
; 222  : 	if(!gObjIsConnectedEx(aIndex))

  0079c	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0079f	50		 push	 eax
  007a0	e8 00 00 00 00	 call	 ?gObjIsConnectedEx@@YA_NH@Z ; gObjIsConnectedEx
  007a5	83 c4 04	 add	 esp, 4
  007a8	0f b6 c8	 movzx	 ecx, al
  007ab	85 c9		 test	 ecx, ecx
  007ad	75 05		 jne	 SHORT $LN5@UpdatePSIn@2

; 223  : 	{
; 224  : 		return;

  007af	e9 10 02 00 00	 jmp	 $LN7@UpdatePSIn@2
$LN5@UpdatePSIn@2:

; 225  : 	}
; 226  : 
; 227  : 	LPOBJ lpUser = &gObj[aIndex];

  007b4	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  007b7	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  007bd	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  007c3	89 45 f4	 mov	 DWORD PTR _lpUser$[ebp], eax

; 228  : 	LPOBJ lpTarget = &gObj[aTargetIndex];

  007c6	8b 45 0c	 mov	 eax, DWORD PTR _aTargetIndex$[ebp]
  007c9	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  007cf	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  007d5	89 45 f0	 mov	 DWORD PTR _lpTarget$[ebp], eax

; 229  : 
; 230  : 	int datasize = 8;

  007d8	c7 45 ec 08 00
	00 00		 mov	 DWORD PTR _datasize$[ebp], 8

; 231  : 	BYTE icount = 0;

  007df	c6 45 eb 00	 mov	 BYTE PTR _icount$[ebp], 0

; 232  : 	BYTE SendBuff[5000];
; 233  : 
; 234  : 	for ( int n=MAIN_INVENTORY_SIZE;n<INVENTORY_SIZE;n++)

  007e3	c7 85 5c ec ff
	ff cc 00 00 00	 mov	 DWORD PTR _n$227320[ebp], 204 ; 000000ccH
  007ed	eb 0f		 jmp	 SHORT $LN4@UpdatePSIn@2
$LN3@UpdatePSIn@2:
  007ef	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _n$227320[ebp]
  007f5	83 c0 01	 add	 eax, 1
  007f8	89 85 5c ec ff
	ff		 mov	 DWORD PTR _n$227320[ebp], eax
$LN4@UpdatePSIn@2:
  007fe	81 bd 5c ec ff
	ff ec 00 00 00	 cmp	 DWORD PTR _n$227320[ebp], 236 ; 000000ecH
  00808	0f 8d 4d 01 00
	00		 jge	 $LN2@UpdatePSIn@2

; 235  : 	{
; 236  : 		if ( lpTarget->Inventory1[n].IsItem() == TRUE )

  0080e	8b 8d 5c ec ff
	ff		 mov	 ecx, DWORD PTR _n$227320[ebp]
  00814	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  0081a	8b 45 f0	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  0081d	03 88 34 0e 00
	00		 add	 ecx, DWORD PTR [eax+3636]
  00823	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  00828	83 f8 01	 cmp	 eax, 1
  0082b	0f 85 25 01 00
	00		 jne	 $LN1@UpdatePSIn@2

; 237  : 		{
; 238  : 			GC_PSInventoryValue pMsg;
; 239  : 
; 240  : 			pMsg.ItemPos = n;

  00831	66 8b 85 5c ec
	ff ff		 mov	 ax, WORD PTR _n$227320[ebp]
  00838	66 89 85 44 ec
	ff ff		 mov	 WORD PTR _pMsg$227325[ebp], ax

; 241  : 			//ItemByteConvert(pMsgIL.ItemInfo, lpObjTarget->Inventory1[n]);
; 242  : 			//pMsgIL.PShopItemValue = lpObjTarget->Inventory1[n].m_iPShopValue;
; 243  : 			pMsg.Zen = lpTarget->Inventory1[n].m_iPShopValue;

  0083f	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _n$227320[ebp]
  00845	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  0084b	8b 4d f0	 mov	 ecx, DWORD PTR _lpTarget$[ebp]
  0084e	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00854	8b 44 02 74	 mov	 eax, DWORD PTR [edx+eax+116]
  00858	89 85 48 ec ff
	ff		 mov	 DWORD PTR _pMsg$227325[ebp+4], eax

; 244  : 			pMsg.Bonus = lpTarget->Inventory1[n].m_iPShopBonus;

  0085e	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _n$227320[ebp]
  00864	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  0086a	8b 4d f0	 mov	 ecx, DWORD PTR _lpTarget$[ebp]
  0086d	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00873	8b 44 02 78	 mov	 eax, DWORD PTR [edx+eax+120]
  00877	89 85 4c ec ff
	ff		 mov	 DWORD PTR _pMsg$227325[ebp+8], eax

; 245  : 			pMsg.Bless = lpTarget->Inventory1[n].m_PShopBlessValue;

  0087d	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _n$227320[ebp]
  00883	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00889	8b 4d f0	 mov	 ecx, DWORD PTR _lpTarget$[ebp]
  0088c	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00892	66 8b 44 02 7c	 mov	 ax, WORD PTR [edx+eax+124]
  00897	66 89 85 50 ec
	ff ff		 mov	 WORD PTR _pMsg$227325[ebp+12], ax

; 246  : 			pMsg.Soul = lpTarget->Inventory1[n].m_PShopSoulValue;

  0089e	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _n$227320[ebp]
  008a4	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  008aa	8b 4d f0	 mov	 ecx, DWORD PTR _lpTarget$[ebp]
  008ad	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  008b3	66 8b 44 02 7e	 mov	 ax, WORD PTR [edx+eax+126]
  008b8	66 89 85 52 ec
	ff ff		 mov	 WORD PTR _pMsg$227325[ebp+14], ax

; 247  : 			pMsg.Chaos = lpTarget->Inventory1[n].m_PShopChaosValue;

  008bf	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _n$227320[ebp]
  008c5	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  008cb	8b 4d f0	 mov	 ecx, DWORD PTR _lpTarget$[ebp]
  008ce	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  008d4	66 8b 84 02 80
	00 00 00	 mov	 ax, WORD PTR [edx+eax+128]
  008dc	66 89 85 54 ec
	ff ff		 mov	 WORD PTR _pMsg$227325[ebp+16], ax

; 248  : 			pMsg.Life = lpTarget->Inventory1[n].m_PShopLifeValue;

  008e3	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _n$227320[ebp]
  008e9	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  008ef	8b 4d f0	 mov	 ecx, DWORD PTR _lpTarget$[ebp]
  008f2	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  008f8	66 8b 84 02 82
	00 00 00	 mov	 ax, WORD PTR [edx+eax+130]
  00900	66 89 85 56 ec
	ff ff		 mov	 WORD PTR _pMsg$227325[ebp+18], ax

; 249  : 			#if(DEV_PERSONAL_CREDIT)
; 250  : 			pMsg.Credit = lpTarget->Inventory1[n].m_iPShopCredit;

  00907	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _n$227320[ebp]
  0090d	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00913	8b 4d f0	 mov	 ecx, DWORD PTR _lpTarget$[ebp]
  00916	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  0091c	8b 84 02 84 00
	00 00		 mov	 eax, DWORD PTR [edx+eax+132]
  00923	89 85 58 ec ff
	ff		 mov	 DWORD PTR _pMsg$227325[ebp+20], eax

; 251  : 			#endif
; 252  : 
; 253  : 			memcpy(&SendBuff[datasize], &pMsg, sizeof(pMsg));

  00929	6a 18		 push	 24			; 00000018H
  0092b	8d 85 44 ec ff
	ff		 lea	 eax, DWORD PTR _pMsg$227325[ebp]
  00931	50		 push	 eax
  00932	8b 4d ec	 mov	 ecx, DWORD PTR _datasize$[ebp]
  00935	8d 94 0d 60 ec
	ff ff		 lea	 edx, DWORD PTR _SendBuff$[ebp+ecx]
  0093c	52		 push	 edx
  0093d	e8 00 00 00 00	 call	 _memcpy
  00942	83 c4 0c	 add	 esp, 12			; 0000000cH

; 254  : 			
; 255  : 			datasize += sizeof(pMsg);

  00945	8b 45 ec	 mov	 eax, DWORD PTR _datasize$[ebp]
  00948	83 c0 18	 add	 eax, 24			; 00000018H
  0094b	89 45 ec	 mov	 DWORD PTR _datasize$[ebp], eax

; 256  : 
; 257  : 			icount++;

  0094e	8a 45 eb	 mov	 al, BYTE PTR _icount$[ebp]
  00951	04 01		 add	 al, 1
  00953	88 45 eb	 mov	 BYTE PTR _icount$[ebp], al
$LN1@UpdatePSIn@2:

; 258  : 		}
; 259  : 	}

  00956	e9 94 fe ff ff	 jmp	 $LN3@UpdatePSIn@2
$LN2@UpdatePSIn@2:

; 260  : 
; 261  : 	SendBuff[0]=0xC2;	// packet header

  0095b	c6 85 60 ec ff
	ff c2		 mov	 BYTE PTR _SendBuff$[ebp], 194 ; 000000c2H

; 262  : 	SendBuff[1]=SET_NUMBERH(datasize);

  00962	8b 45 ec	 mov	 eax, DWORD PTR _datasize$[ebp]
  00965	c1 e8 08	 shr	 eax, 8
  00968	88 85 61 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+1], al

; 263  : 	SendBuff[2]=SET_NUMBERL(datasize);

  0096e	8b 45 ec	 mov	 eax, DWORD PTR _datasize$[ebp]
  00971	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00976	88 85 62 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+2], al

; 264  : 	SendBuff[3]=0xFA;

  0097c	c6 85 63 ec ff
	ff fa		 mov	 BYTE PTR _SendBuff$[ebp+3], 250 ; 000000faH

; 265  : 	SendBuff[4]=0x0B;

  00983	c6 85 64 ec ff
	ff 0b		 mov	 BYTE PTR _SendBuff$[ebp+4], 11 ; 0000000bH

; 266  : 	SendBuff[5]=SET_NUMBERH(aTargetIndex);

  0098a	8b 45 0c	 mov	 eax, DWORD PTR _aTargetIndex$[ebp]
  0098d	c1 e8 08	 shr	 eax, 8
  00990	88 85 65 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+5], al

; 267  : 	SendBuff[6]=SET_NUMBERL(aTargetIndex);

  00996	8b 45 0c	 mov	 eax, DWORD PTR _aTargetIndex$[ebp]
  00999	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0099e	88 85 66 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+6], al

; 268  : 	SendBuff[7]=icount;

  009a4	8a 45 eb	 mov	 al, BYTE PTR _icount$[ebp]
  009a7	88 85 67 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+7], al

; 269  : 	DataSend(aIndex,SendBuff,datasize);

  009ad	8b 45 ec	 mov	 eax, DWORD PTR _datasize$[ebp]
  009b0	50		 push	 eax
  009b1	8d 8d 60 ec ff
	ff		 lea	 ecx, DWORD PTR _SendBuff$[ebp]
  009b7	51		 push	 ecx
  009b8	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  009bb	52		 push	 edx
  009bc	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  009c1	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@UpdatePSIn@2:

; 270  : }

  009c4	5f		 pop	 edi
  009c5	5e		 pop	 esi
  009c6	5b		 pop	 ebx
  009c7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  009ca	33 cd		 xor	 ecx, ebp
  009cc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  009d1	8b e5		 mov	 esp, ebp
  009d3	5d		 pop	 ebp
  009d4	c2 08 00	 ret	 8
?UpdatePSInventoryTarget@PersonalShopEx@@QAEXHH@Z ENDP	; PersonalShopEx::UpdatePSInventoryTarget
_TEXT	ENDS
PUBLIC	?GetMoney@PersonalShopEx@@QAEHHH@Z		; PersonalShopEx::GetMoney
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_Result$ = -37						; size = 1
_Credit$ = -36						; size = 4
_Life$ = -32						; size = 4
_Chaos$ = -28						; size = 4
_Soul$ = -24						; size = 4
_Bless$ = -20						; size = 4
_Bonus$ = -16						; size = 4
_Zen$ = -12						; size = 4
_lpUser$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_Pos$ = 12						; size = 4
?GetMoney@PersonalShopEx@@QAEHHH@Z PROC			; PersonalShopEx::GetMoney
; _this$ = ecx

; 273  : {

  009e0	55		 push	 ebp
  009e1	8b ec		 mov	 ebp, esp
  009e3	83 ec 68	 sub	 esp, 104		; 00000068H
  009e6	53		 push	 ebx
  009e7	56		 push	 esi
  009e8	57		 push	 edi
  009e9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 274  : 
; 275  : 	if(!gObjIsConnectedEx(aIndex))

  009ec	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  009ef	50		 push	 eax
  009f0	e8 00 00 00 00	 call	 ?gObjIsConnectedEx@@YA_NH@Z ; gObjIsConnectedEx
  009f5	83 c4 04	 add	 esp, 4
  009f8	0f b6 c8	 movzx	 ecx, al
  009fb	85 c9		 test	 ecx, ecx
  009fd	75 07		 jne	 SHORT $LN14@GetMoney

; 276  : 	{
; 277  : 		return 0;

  009ff	33 c0		 xor	 eax, eax
  00a01	e9 46 01 00 00	 jmp	 $LN15@GetMoney
$LN14@GetMoney:

; 278  : 	}
; 279  : 
; 280  : 	LPOBJ lpUser = &gObj[aIndex];

  00a06	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00a09	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00a0f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a15	89 45 f8	 mov	 DWORD PTR _lpUser$[ebp], eax

; 281  : 
; 282  : 	int Zen = lpUser->Inventory1[Pos].m_iPShopValue;

  00a18	8b 45 0c	 mov	 eax, DWORD PTR _Pos$[ebp]
  00a1b	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00a21	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  00a24	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00a2a	8b 44 02 74	 mov	 eax, DWORD PTR [edx+eax+116]
  00a2e	89 45 f4	 mov	 DWORD PTR _Zen$[ebp], eax

; 283  : 	int Bonus = lpUser->Inventory1[Pos].m_iPShopBonus;

  00a31	8b 45 0c	 mov	 eax, DWORD PTR _Pos$[ebp]
  00a34	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00a3a	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  00a3d	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00a43	8b 44 02 78	 mov	 eax, DWORD PTR [edx+eax+120]
  00a47	89 45 f0	 mov	 DWORD PTR _Bonus$[ebp], eax

; 284  : 	int Bless = lpUser->Inventory1[Pos].m_PShopBlessValue;

  00a4a	8b 45 0c	 mov	 eax, DWORD PTR _Pos$[ebp]
  00a4d	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00a53	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  00a56	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00a5c	0f bf 44 02 7c	 movsx	 eax, WORD PTR [edx+eax+124]
  00a61	89 45 ec	 mov	 DWORD PTR _Bless$[ebp], eax

; 285  : 	int Soul = lpUser->Inventory1[Pos].m_PShopSoulValue;

  00a64	8b 45 0c	 mov	 eax, DWORD PTR _Pos$[ebp]
  00a67	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00a6d	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  00a70	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00a76	0f bf 44 02 7e	 movsx	 eax, WORD PTR [edx+eax+126]
  00a7b	89 45 e8	 mov	 DWORD PTR _Soul$[ebp], eax

; 286  : 	int Chaos = lpUser->Inventory1[Pos].m_PShopChaosValue;

  00a7e	8b 45 0c	 mov	 eax, DWORD PTR _Pos$[ebp]
  00a81	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00a87	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  00a8a	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00a90	0f bf 84 02 80
	00 00 00	 movsx	 eax, WORD PTR [edx+eax+128]
  00a98	89 45 e4	 mov	 DWORD PTR _Chaos$[ebp], eax

; 287  : 	int Life = lpUser->Inventory1[Pos].m_PShopLifeValue;

  00a9b	8b 45 0c	 mov	 eax, DWORD PTR _Pos$[ebp]
  00a9e	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00aa4	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  00aa7	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00aad	0f bf 84 02 82
	00 00 00	 movsx	 eax, WORD PTR [edx+eax+130]
  00ab5	89 45 e0	 mov	 DWORD PTR _Life$[ebp], eax

; 288  : 	#if(DEV_PERSONAL_CREDIT)
; 289  : 	int Credit = lpUser->Inventory1[Pos].m_iPShopCredit;

  00ab8	8b 45 0c	 mov	 eax, DWORD PTR _Pos$[ebp]
  00abb	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00ac1	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  00ac4	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00aca	8b 84 02 84 00
	00 00		 mov	 eax, DWORD PTR [edx+eax+132]
  00ad1	89 45 dc	 mov	 DWORD PTR _Credit$[ebp], eax

; 290  : 	#endif
; 291  : 
; 292  : 	bool Result = 0;

  00ad4	c6 45 db 00	 mov	 BYTE PTR _Result$[ebp], 0

; 293  : 
; 294  : 	if( Zen > 0 )

  00ad8	83 7d f4 00	 cmp	 DWORD PTR _Zen$[ebp], 0
  00adc	7e 04		 jle	 SHORT $LN13@GetMoney

; 295  : 	{
; 296  : 		Result = 1;

  00ade	c6 45 db 01	 mov	 BYTE PTR _Result$[ebp], 1
$LN13@GetMoney:

; 297  : 	}
; 298  : 	if( Bless > 0)

  00ae2	83 7d ec 00	 cmp	 DWORD PTR _Bless$[ebp], 0
  00ae6	7e 04		 jle	 SHORT $LN12@GetMoney

; 299  : 	{
; 300  : 		Result = 1;

  00ae8	c6 45 db 01	 mov	 BYTE PTR _Result$[ebp], 1
$LN12@GetMoney:

; 301  : 	}
; 302  : 	if( Soul > 0)

  00aec	83 7d e8 00	 cmp	 DWORD PTR _Soul$[ebp], 0
  00af0	7e 04		 jle	 SHORT $LN11@GetMoney

; 303  : 	{
; 304  : 		Result = 1;

  00af2	c6 45 db 01	 mov	 BYTE PTR _Result$[ebp], 1
$LN11@GetMoney:

; 305  : 	}
; 306  : 	if( Chaos > 0)

  00af6	83 7d e4 00	 cmp	 DWORD PTR _Chaos$[ebp], 0
  00afa	7e 04		 jle	 SHORT $LN10@GetMoney

; 307  : 	{
; 308  : 		Result = 1;

  00afc	c6 45 db 01	 mov	 BYTE PTR _Result$[ebp], 1
$LN10@GetMoney:

; 309  : 	}
; 310  : 	if( Life > 0)

  00b00	83 7d e0 00	 cmp	 DWORD PTR _Life$[ebp], 0
  00b04	7e 04		 jle	 SHORT $LN9@GetMoney

; 311  : 	{
; 312  : 		Result = 1;

  00b06	c6 45 db 01	 mov	 BYTE PTR _Result$[ebp], 1
$LN9@GetMoney:

; 313  : 	}
; 314  : 	#if(DEV_PERSONAL_CREDIT)
; 315  : 	if(this->CreditPrice)

  00b0a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b0d	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00b11	74 0c		 je	 SHORT $LN8@GetMoney

; 316  : 	{
; 317  : 		if( Credit > 0)

  00b13	83 7d dc 00	 cmp	 DWORD PTR _Credit$[ebp], 0
  00b17	7e 04		 jle	 SHORT $LN7@GetMoney

; 318  : 		{
; 319  : 			Result = 1;

  00b19	c6 45 db 01	 mov	 BYTE PTR _Result$[ebp], 1
$LN7@GetMoney:

; 320  : 		}
; 321  : 	}
; 322  : 	else

  00b1d	eb 0a		 jmp	 SHORT $LN6@GetMoney
$LN8@GetMoney:

; 323  : 	{
; 324  : 		if( Credit > 0)

  00b1f	83 7d dc 00	 cmp	 DWORD PTR _Credit$[ebp], 0
  00b23	7e 04		 jle	 SHORT $LN6@GetMoney

; 325  : 		{
; 326  : 			Result = 0;

  00b25	c6 45 db 00	 mov	 BYTE PTR _Result$[ebp], 0
$LN6@GetMoney:

; 327  : 		}
; 328  : 	}
; 329  : 	#endif
; 330  : 
; 331  : 	if(!this->BonusPrice)

  00b29	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b2c	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  00b30	75 0c		 jne	 SHORT $LN4@GetMoney

; 332  : 	{
; 333  : 		if(Bonus > 0)

  00b32	83 7d f0 00	 cmp	 DWORD PTR _Bonus$[ebp], 0
  00b36	7e 04		 jle	 SHORT $LN3@GetMoney

; 334  : 		{
; 335  : 			Result = 0;

  00b38	c6 45 db 00	 mov	 BYTE PTR _Result$[ebp], 0
$LN3@GetMoney:

; 336  : 		}
; 337  : 	}
; 338  : 	else

  00b3c	eb 0a		 jmp	 SHORT $LN2@GetMoney
$LN4@GetMoney:

; 339  : 	{
; 340  : 		if(Bonus > 0)

  00b3e	83 7d f0 00	 cmp	 DWORD PTR _Bonus$[ebp], 0
  00b42	7e 04		 jle	 SHORT $LN2@GetMoney

; 341  : 		{
; 342  : 			Result = 1;

  00b44	c6 45 db 01	 mov	 BYTE PTR _Result$[ebp], 1
$LN2@GetMoney:

; 343  : 		}
; 344  : 	}
; 345  : 
; 346  : 	return Result;

  00b48	0f b6 45 db	 movzx	 eax, BYTE PTR _Result$[ebp]
$LN15@GetMoney:

; 347  : }

  00b4c	5f		 pop	 edi
  00b4d	5e		 pop	 esi
  00b4e	5b		 pop	 ebx
  00b4f	8b e5		 mov	 esp, ebp
  00b51	5d		 pop	 ebp
  00b52	c2 08 00	 ret	 8
?GetMoney@PersonalShopEx@@QAEHHH@Z ENDP			; PersonalShopEx::GetMoney
_TEXT	ENDS
PUBLIC	?CheckPrice@PersonalShopEx@@QAE_NHHHHHHH@Z	; PersonalShopEx::CheckPrice
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_Result$ = -5						; size = 1
_this$ = -4						; size = 4
_Zen$ = 8						; size = 4
_Bonus$ = 12						; size = 4
_Bless$ = 16						; size = 4
_Soul$ = 20						; size = 4
_Chaos$ = 24						; size = 4
_Life$ = 28						; size = 4
_Credit$ = 32						; size = 4
?CheckPrice@PersonalShopEx@@QAE_NHHHHHHH@Z PROC		; PersonalShopEx::CheckPrice
; _this$ = ecx

; 350  : {

  00b60	55		 push	 ebp
  00b61	8b ec		 mov	 ebp, esp
  00b63	83 ec 48	 sub	 esp, 72			; 00000048H
  00b66	53		 push	 ebx
  00b67	56		 push	 esi
  00b68	57		 push	 edi
  00b69	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 351  : 	bool Result = 0;

  00b6c	c6 45 fb 00	 mov	 BYTE PTR _Result$[ebp], 0

; 352  : 
; 353  : 	if( Zen > 0 )

  00b70	83 7d 08 00	 cmp	 DWORD PTR _Zen$[ebp], 0
  00b74	7e 04		 jle	 SHORT $LN13@CheckPrice

; 354  : 	{
; 355  : 		Result = 1;

  00b76	c6 45 fb 01	 mov	 BYTE PTR _Result$[ebp], 1
$LN13@CheckPrice:

; 356  : 	}
; 357  : 	if( Bless > 0)

  00b7a	83 7d 10 00	 cmp	 DWORD PTR _Bless$[ebp], 0
  00b7e	7e 04		 jle	 SHORT $LN12@CheckPrice

; 358  : 	{
; 359  : 		Result = 1;

  00b80	c6 45 fb 01	 mov	 BYTE PTR _Result$[ebp], 1
$LN12@CheckPrice:

; 360  : 	}
; 361  : 	if( Soul > 0)

  00b84	83 7d 14 00	 cmp	 DWORD PTR _Soul$[ebp], 0
  00b88	7e 04		 jle	 SHORT $LN11@CheckPrice

; 362  : 	{
; 363  : 		Result = 1;

  00b8a	c6 45 fb 01	 mov	 BYTE PTR _Result$[ebp], 1
$LN11@CheckPrice:

; 364  : 	}
; 365  : 	if( Chaos > 0)

  00b8e	83 7d 18 00	 cmp	 DWORD PTR _Chaos$[ebp], 0
  00b92	7e 04		 jle	 SHORT $LN10@CheckPrice

; 366  : 	{
; 367  : 		Result = 1;

  00b94	c6 45 fb 01	 mov	 BYTE PTR _Result$[ebp], 1
$LN10@CheckPrice:

; 368  : 	}
; 369  : 	if( Life > 0)

  00b98	83 7d 1c 00	 cmp	 DWORD PTR _Life$[ebp], 0
  00b9c	7e 04		 jle	 SHORT $LN9@CheckPrice

; 370  : 	{
; 371  : 		Result = 1;

  00b9e	c6 45 fb 01	 mov	 BYTE PTR _Result$[ebp], 1
$LN9@CheckPrice:

; 372  : 	}
; 373  : 	#if(DEV_PERSONAL_CREDIT)
; 374  : 	if(this->CreditPrice)

  00ba2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00ba5	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00ba9	74 0c		 je	 SHORT $LN8@CheckPrice

; 375  : 	{
; 376  : 		if( Credit > 0)

  00bab	83 7d 20 00	 cmp	 DWORD PTR _Credit$[ebp], 0
  00baf	7e 04		 jle	 SHORT $LN7@CheckPrice

; 377  : 		{
; 378  : 			Result = 1;

  00bb1	c6 45 fb 01	 mov	 BYTE PTR _Result$[ebp], 1
$LN7@CheckPrice:

; 379  : 		}
; 380  : 	}
; 381  : 	else

  00bb5	eb 0a		 jmp	 SHORT $LN6@CheckPrice
$LN8@CheckPrice:

; 382  : 	{
; 383  : 		if( Credit > 0)

  00bb7	83 7d 20 00	 cmp	 DWORD PTR _Credit$[ebp], 0
  00bbb	7e 04		 jle	 SHORT $LN6@CheckPrice

; 384  : 		{
; 385  : 			Result = 0;

  00bbd	c6 45 fb 00	 mov	 BYTE PTR _Result$[ebp], 0
$LN6@CheckPrice:

; 386  : 		}
; 387  : 	}
; 388  : 	#endif
; 389  : 
; 390  : 	if(!this->BonusPrice)

  00bc1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00bc4	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  00bc8	75 0c		 jne	 SHORT $LN4@CheckPrice

; 391  : 	{
; 392  : 		if(Bonus > 0)

  00bca	83 7d 0c 00	 cmp	 DWORD PTR _Bonus$[ebp], 0
  00bce	7e 04		 jle	 SHORT $LN3@CheckPrice

; 393  : 		{
; 394  : 			Result = 0;

  00bd0	c6 45 fb 00	 mov	 BYTE PTR _Result$[ebp], 0
$LN3@CheckPrice:

; 395  : 		}
; 396  : 	}
; 397  : 	else

  00bd4	eb 0a		 jmp	 SHORT $LN2@CheckPrice
$LN4@CheckPrice:

; 398  : 	{
; 399  : 		if(Bonus > 0)

  00bd6	83 7d 0c 00	 cmp	 DWORD PTR _Bonus$[ebp], 0
  00bda	7e 04		 jle	 SHORT $LN2@CheckPrice

; 400  : 		{
; 401  : 			Result = 1;

  00bdc	c6 45 fb 01	 mov	 BYTE PTR _Result$[ebp], 1
$LN2@CheckPrice:

; 402  : 		}
; 403  : 	}
; 404  : 
; 405  : 	return Result;

  00be0	8a 45 fb	 mov	 al, BYTE PTR _Result$[ebp]

; 406  : }

  00be3	5f		 pop	 edi
  00be4	5e		 pop	 esi
  00be5	5b		 pop	 ebx
  00be6	8b e5		 mov	 esp, ebp
  00be8	5d		 pop	 ebp
  00be9	c2 1c 00	 ret	 28			; 0000001cH
?CheckPrice@PersonalShopEx@@QAE_NHHHHHHH@Z ENDP		; PersonalShopEx::CheckPrice
_TEXT	ENDS
PUBLIC	?PShop_CheckInventoryPrice@PersonalShopEx@@QAE_NF@Z ; PersonalShopEx::PShop_CheckInventoryPrice
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$227395 = -16						; size = 4
_Result$ = -9						; size = 1
_lpObj$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 2
?PShop_CheckInventoryPrice@PersonalShopEx@@QAE_NF@Z PROC ; PersonalShopEx::PShop_CheckInventoryPrice
; _this$ = ecx

; 409  : {

  00bf0	55		 push	 ebp
  00bf1	8b ec		 mov	 ebp, esp
  00bf3	83 ec 50	 sub	 esp, 80			; 00000050H
  00bf6	53		 push	 ebx
  00bf7	56		 push	 esi
  00bf8	57		 push	 edi
  00bf9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 410  : 	if(!gObjIsConnectedEx(aIndex))

  00bfc	0f bf 45 08	 movsx	 eax, WORD PTR _aIndex$[ebp]
  00c00	50		 push	 eax
  00c01	e8 00 00 00 00	 call	 ?gObjIsConnectedEx@@YA_NH@Z ; gObjIsConnectedEx
  00c06	83 c4 04	 add	 esp, 4
  00c09	0f b6 c8	 movzx	 ecx, al
  00c0c	85 c9		 test	 ecx, ecx
  00c0e	75 07		 jne	 SHORT $LN19@PShop_Chec

; 411  : 	{
; 412  : 		return false;

  00c10	32 c0		 xor	 al, al
  00c12	e9 9b 01 00 00	 jmp	 $LN20@PShop_Chec
$LN19@PShop_Chec:

; 413  : 	}
; 414  : 
; 415  : 	LPOBJ lpObj = &gObj[aIndex];

  00c17	0f bf 45 08	 movsx	 eax, WORD PTR _aIndex$[ebp]
  00c1b	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00c21	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00c27	89 45 f8	 mov	 DWORD PTR _lpObj$[ebp], eax

; 416  : 
; 417  : 	bool Result = false;

  00c2a	c6 45 f7 00	 mov	 BYTE PTR _Result$[ebp], 0

; 418  : 
; 419  : 	for(int i = MAIN_INVENTORY_SIZE; i < INVENTORY_SIZE; i++)

  00c2e	c7 45 f0 cc 00
	00 00		 mov	 DWORD PTR _i$227395[ebp], 204 ; 000000ccH
  00c35	eb 09		 jmp	 SHORT $LN18@PShop_Chec
$LN17@PShop_Chec:
  00c37	8b 45 f0	 mov	 eax, DWORD PTR _i$227395[ebp]
  00c3a	83 c0 01	 add	 eax, 1
  00c3d	89 45 f0	 mov	 DWORD PTR _i$227395[ebp], eax
$LN18@PShop_Chec:
  00c40	81 7d f0 ec 00
	00 00		 cmp	 DWORD PTR _i$227395[ebp], 236 ; 000000ecH
  00c47	0f 8d 62 01 00
	00		 jge	 $LN16@PShop_Chec

; 420  : 	{
; 421  : 		if(lpObj->Inventory1[i].IsItem() == 1)

  00c4d	8b 4d f0	 mov	 ecx, DWORD PTR _i$227395[ebp]
  00c50	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  00c56	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00c59	03 88 34 0e 00
	00		 add	 ecx, DWORD PTR [eax+3636]
  00c5f	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  00c64	83 f8 01	 cmp	 eax, 1
  00c67	0f 85 3d 01 00
	00		 jne	 $LN15@PShop_Chec

; 422  : 		{
; 423  : 			Result = false;

  00c6d	c6 45 f7 00	 mov	 BYTE PTR _Result$[ebp], 0

; 424  : 
; 425  : 			if(lpObj->Inventory1[i].m_iPShopValue > 0 )

  00c71	8b 45 f0	 mov	 eax, DWORD PTR _i$227395[ebp]
  00c74	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00c7a	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00c7d	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00c83	83 7c 02 74 00	 cmp	 DWORD PTR [edx+eax+116], 0
  00c88	7e 04		 jle	 SHORT $LN14@PShop_Chec

; 426  : 			{
; 427  : 				Result = true;

  00c8a	c6 45 f7 01	 mov	 BYTE PTR _Result$[ebp], 1
$LN14@PShop_Chec:

; 428  : 			}
; 429  : 			if(lpObj->Inventory1[i].m_PShopBlessValue > 0)

  00c8e	8b 45 f0	 mov	 eax, DWORD PTR _i$227395[ebp]
  00c91	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00c97	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00c9a	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00ca0	0f bf 44 02 7c	 movsx	 eax, WORD PTR [edx+eax+124]
  00ca5	85 c0		 test	 eax, eax
  00ca7	7e 04		 jle	 SHORT $LN13@PShop_Chec

; 430  : 			{
; 431  : 				Result = true;

  00ca9	c6 45 f7 01	 mov	 BYTE PTR _Result$[ebp], 1
$LN13@PShop_Chec:

; 432  : 			}
; 433  : 			if(lpObj->Inventory1[i].m_PShopSoulValue > 0)

  00cad	8b 45 f0	 mov	 eax, DWORD PTR _i$227395[ebp]
  00cb0	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00cb6	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00cb9	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00cbf	0f bf 44 02 7e	 movsx	 eax, WORD PTR [edx+eax+126]
  00cc4	85 c0		 test	 eax, eax
  00cc6	7e 04		 jle	 SHORT $LN12@PShop_Chec

; 434  : 			{
; 435  : 				Result = true;

  00cc8	c6 45 f7 01	 mov	 BYTE PTR _Result$[ebp], 1
$LN12@PShop_Chec:

; 436  : 			}
; 437  : 			if(lpObj->Inventory1[i].m_PShopChaosValue > 0)

  00ccc	8b 45 f0	 mov	 eax, DWORD PTR _i$227395[ebp]
  00ccf	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00cd5	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00cd8	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00cde	0f bf 84 02 80
	00 00 00	 movsx	 eax, WORD PTR [edx+eax+128]
  00ce6	85 c0		 test	 eax, eax
  00ce8	7e 04		 jle	 SHORT $LN11@PShop_Chec

; 438  : 			{
; 439  : 				Result = true;

  00cea	c6 45 f7 01	 mov	 BYTE PTR _Result$[ebp], 1
$LN11@PShop_Chec:

; 440  : 			}
; 441  : 			if(lpObj->Inventory1[i].m_PShopLifeValue > 0)

  00cee	8b 45 f0	 mov	 eax, DWORD PTR _i$227395[ebp]
  00cf1	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00cf7	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00cfa	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00d00	0f bf 84 02 82
	00 00 00	 movsx	 eax, WORD PTR [edx+eax+130]
  00d08	85 c0		 test	 eax, eax
  00d0a	7e 04		 jle	 SHORT $LN10@PShop_Chec

; 442  : 			{
; 443  : 				Result = true;

  00d0c	c6 45 f7 01	 mov	 BYTE PTR _Result$[ebp], 1
$LN10@PShop_Chec:

; 444  : 			}
; 445  : 			#if(DEV_PERSONAL_CREDIT)
; 446  : 			if(g_PersonalShopEx.CreditPrice)

  00d10	83 3d 18 00 00
	00 00		 cmp	 DWORD PTR ?g_PersonalShopEx@@3VPersonalShopEx@@A+24, 0
  00d17	74 22		 je	 SHORT $LN9@PShop_Chec

; 447  : 			{
; 448  : 				if(lpObj->Inventory1[i].m_iPShopCredit > 0)

  00d19	8b 45 f0	 mov	 eax, DWORD PTR _i$227395[ebp]
  00d1c	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00d22	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00d25	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00d2b	83 bc 02 84 00
	00 00 00	 cmp	 DWORD PTR [edx+eax+132], 0
  00d33	7e 04		 jle	 SHORT $LN8@PShop_Chec

; 449  : 				{
; 450  : 					Result = true;

  00d35	c6 45 f7 01	 mov	 BYTE PTR _Result$[ebp], 1
$LN8@PShop_Chec:

; 451  : 				}
; 452  : 			}
; 453  : 			else

  00d39	eb 20		 jmp	 SHORT $LN7@PShop_Chec
$LN9@PShop_Chec:

; 454  : 			{
; 455  : 				if(lpObj->Inventory1[i].m_iPShopCredit > 0)

  00d3b	8b 45 f0	 mov	 eax, DWORD PTR _i$227395[ebp]
  00d3e	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00d44	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00d47	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00d4d	83 bc 02 84 00
	00 00 00	 cmp	 DWORD PTR [edx+eax+132], 0
  00d55	7e 04		 jle	 SHORT $LN7@PShop_Chec

; 456  : 				{
; 457  : 					Result = false;

  00d57	c6 45 f7 00	 mov	 BYTE PTR _Result$[ebp], 0
$LN7@PShop_Chec:

; 458  : 				}
; 459  : 			}
; 460  : 			#endif
; 461  : 
; 462  : 			if(!this->BonusPrice)

  00d5b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00d5e	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  00d62	75 1f		 jne	 SHORT $LN5@PShop_Chec

; 463  : 			{
; 464  : 				if(lpObj->Inventory1[i].m_iPShopBonus > 0)

  00d64	8b 45 f0	 mov	 eax, DWORD PTR _i$227395[ebp]
  00d67	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00d6d	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00d70	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00d76	83 7c 02 78 00	 cmp	 DWORD PTR [edx+eax+120], 0
  00d7b	7e 04		 jle	 SHORT $LN4@PShop_Chec

; 465  : 				{
; 466  : 					Result = false;

  00d7d	c6 45 f7 00	 mov	 BYTE PTR _Result$[ebp], 0
$LN4@PShop_Chec:

; 467  : 				}
; 468  : 			}
; 469  : 			else

  00d81	eb 1d		 jmp	 SHORT $LN3@PShop_Chec
$LN5@PShop_Chec:

; 470  : 			{
; 471  : 				if(lpObj->Inventory1[i].m_iPShopBonus > 0)

  00d83	8b 45 f0	 mov	 eax, DWORD PTR _i$227395[ebp]
  00d86	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00d8c	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00d8f	8b 91 34 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3636]
  00d95	83 7c 02 78 00	 cmp	 DWORD PTR [edx+eax+120], 0
  00d9a	7e 04		 jle	 SHORT $LN3@PShop_Chec

; 472  : 				{
; 473  : 					Result = true;

  00d9c	c6 45 f7 01	 mov	 BYTE PTR _Result$[ebp], 1
$LN3@PShop_Chec:

; 474  : 				}
; 475  : 			}
; 476  : 
; 477  : 			if(Result == false)

  00da0	0f b6 45 f7	 movzx	 eax, BYTE PTR _Result$[ebp]
  00da4	85 c0		 test	 eax, eax
  00da6	75 02		 jne	 SHORT $LN15@PShop_Chec

; 478  : 			{
; 479  : 				break;

  00da8	eb 05		 jmp	 SHORT $LN16@PShop_Chec
$LN15@PShop_Chec:

; 480  : 			}
; 481  : 		}
; 482  : 	}

  00daa	e9 88 fe ff ff	 jmp	 $LN17@PShop_Chec
$LN16@PShop_Chec:

; 483  : 	return Result;

  00daf	8a 45 f7	 mov	 al, BYTE PTR _Result$[ebp]
$LN20@PShop_Chec:

; 484  : }

  00db2	5f		 pop	 edi
  00db3	5e		 pop	 esi
  00db4	5b		 pop	 ebx
  00db5	8b e5		 mov	 esp, ebp
  00db7	5d		 pop	 ebp
  00db8	c2 04 00	 ret	 4
?PShop_CheckInventoryPrice@PersonalShopEx@@QAE_NF@Z ENDP ; PersonalShopEx::PShop_CheckInventoryPrice
_TEXT	ENDS
END
