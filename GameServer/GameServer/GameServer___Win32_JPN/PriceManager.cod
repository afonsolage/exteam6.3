; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\PriceManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?PriceManager@@3VcPriceManager@@A		; PriceManager
_BSS	SEGMENT
?PriceManager@@3VcPriceManager@@A DB 05010H DUP (?)	; PriceManager
_BSS	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_C@_0P@GNCPONOH@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0L@DBBEOKP@LOAD?5ERROR?$AA@		; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	?ReadList@cPriceManager@@QAEXPAD@Z		; cPriceManager::ReadList
PUBLIC	??_C@_0M@GNKKLILL@AllSellNull?$AA@		; `string'
PUBLIC	??_C@_06POMJKEPM@Common?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
PUBLIC	??_C@_0CA@KBEDOBAM@?4?4?2Data?2ExData?2PriceManager?4ini?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?LoadConfig@cPriceManager@@QAEXXZ		; cPriceManager::LoadConfig
EXTRN	_fclose:PROC
EXTRN	_sscanf:PROC
EXTRN	?Ex_IsBadFileLine@@YA_NPADAAH@Z:PROC		; Ex_IsBadFileLine
EXTRN	_fgets:PROC
EXTRN	_feof:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	_fopen:PROC
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT ??_C@_0P@GNCPONOH@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@
; File d:\projects\exteam6.3\source\gameserver\gameserver\pricemanager.cpp
CONST	SEGMENT
??_C@_0P@GNCPONOH@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@ DB '%d %d %d %d '
	DB	'%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DBBEOKP@LOAD?5ERROR?$AA@
CONST	SEGMENT
??_C@_0L@DBBEOKP@LOAD?5ERROR?$AA@ DB 'LOAD ERROR', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GNKKLILL@AllSellNull?$AA@
CONST	SEGMENT
??_C@_0M@GNKKLILL@AllSellNull?$AA@ DB 'AllSellNull', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06POMJKEPM@Common?$AA@
CONST	SEGMENT
??_C@_06POMJKEPM@Common?$AA@ DB 'Common', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KBEDOBAM@?4?4?2Data?2ExData?2PriceManager?4ini?$AA@
CONST	SEGMENT
??_C@_0CA@KBEDOBAM@?4?4?2Data?2ExData?2PriceManager?4ini?$AA@ DB '..\Data'
	DB	'\ExData\PriceManager.ini', 00H		; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_n$220481 = -320					; size = 20
_n$220477 = -300					; size = 20
_Flag$ = -280						; size = 4
_Buff$ = -276						; size = 256
_file$ = -20						; size = 4
_i$220460 = -16						; size = 4
_i$220456 = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?LoadConfig@cPriceManager@@QAEXXZ PROC			; cPriceManager::LoadConfig
; _this$ = ecx

; 16   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 01 00
	00		 sub	 esp, 384		; 00000180H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 17   : 	this->Enable = GetPrivateProfileInt("Common","Enable",0,PRICEMANAGER_DIR);

  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@KBEDOBAM@?4?4?2Data?2ExData?2PriceManager?4ini?$AA@
  0001e	6a 00		 push	 0
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	89 01		 mov	 DWORD PTR [ecx], eax

; 18   : 	this->AllSellNull = GetPrivateProfileInt("Common","AllSellNull",0,PRICEMANAGER_DIR);

  00035	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@KBEDOBAM@?4?4?2Data?2ExData?2PriceManager?4ini?$AA@
  0003a	6a 00		 push	 0
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GNKKLILL@AllSellNull?$AA@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0004c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 19   : 
; 20   : 	this->sCount = 0;

  00052	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 80 08 28 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+10248], 0

; 21   : 	this->bCount = 0;

  0005f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00062	c7 80 0c 50 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+20492], 0

; 22   : 
; 23   : 	for(int i(0);i<MAX_PRICE_ITEM;i++)

  0006c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$220456[ebp], 0
  00073	eb 09		 jmp	 SHORT $LN15@LoadConfig
$LN14@LoadConfig:
  00075	8b 45 f4	 mov	 eax, DWORD PTR _i$220456[ebp]
  00078	83 c0 01	 add	 eax, 1
  0007b	89 45 f4	 mov	 DWORD PTR _i$220456[ebp], eax
$LN15@LoadConfig:
  0007e	81 7d f4 00 02
	00 00		 cmp	 DWORD PTR _i$220456[ebp], 512 ; 00000200H
  00085	7d 46		 jge	 SHORT $LN13@LoadConfig

; 24   : 	{
; 25   : 		this->SellPrice[i].Type = 0;

  00087	8b 45 f4	 mov	 eax, DWORD PTR _i$220456[ebp]
  0008a	6b c0 14	 imul	 eax, 20			; 00000014H
  0008d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	c7 44 01 08 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+8], 0

; 26   : 		this->SellPrice[i].Index = 0;

  00098	8b 45 f4	 mov	 eax, DWORD PTR _i$220456[ebp]
  0009b	6b c0 14	 imul	 eax, 20			; 00000014H
  0009e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	c7 44 01 0c 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+12], 0

; 27   : 		this->SellPrice[i].Level = 0;

  000a9	8b 45 f4	 mov	 eax, DWORD PTR _i$220456[ebp]
  000ac	6b c0 14	 imul	 eax, 20			; 00000014H
  000af	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b2	c7 44 01 10 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+16], 0

; 28   : 		this->SellPrice[i].Price = 0;

  000ba	8b 45 f4	 mov	 eax, DWORD PTR _i$220456[ebp]
  000bd	6b c0 14	 imul	 eax, 20			; 00000014H
  000c0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	c7 44 01 18 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+24], 0

; 29   : 	}

  000cb	eb a8		 jmp	 SHORT $LN14@LoadConfig
$LN13@LoadConfig:

; 30   : 
; 31   : 	for (int i(0); i<MAX_PRICE_ITEM; i++)

  000cd	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$220460[ebp], 0
  000d4	eb 09		 jmp	 SHORT $LN12@LoadConfig
$LN11@LoadConfig:
  000d6	8b 45 f0	 mov	 eax, DWORD PTR _i$220460[ebp]
  000d9	83 c0 01	 add	 eax, 1
  000dc	89 45 f0	 mov	 DWORD PTR _i$220460[ebp], eax
$LN12@LoadConfig:
  000df	81 7d f0 00 02
	00 00		 cmp	 DWORD PTR _i$220460[ebp], 512 ; 00000200H
  000e6	7d 52		 jge	 SHORT $LN10@LoadConfig

; 32   : 	{
; 33   : 		this->BuyPrice[i].Type = 0;

  000e8	8b 45 f0	 mov	 eax, DWORD PTR _i$220460[ebp]
  000eb	6b c0 14	 imul	 eax, 20			; 00000014H
  000ee	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f1	c7 84 01 0c 28
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+10252], 0

; 34   : 		this->BuyPrice[i].Index = 0;

  000fc	8b 45 f0	 mov	 eax, DWORD PTR _i$220460[ebp]
  000ff	6b c0 14	 imul	 eax, 20			; 00000014H
  00102	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00105	c7 84 01 10 28
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+10256], 0

; 35   : 		this->BuyPrice[i].Level = 0;

  00110	8b 45 f0	 mov	 eax, DWORD PTR _i$220460[ebp]
  00113	6b c0 14	 imul	 eax, 20			; 00000014H
  00116	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	c7 84 01 14 28
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+10260], 0

; 36   : 		this->BuyPrice[i].Price = 0;

  00124	8b 45 f0	 mov	 eax, DWORD PTR _i$220460[ebp]
  00127	6b c0 14	 imul	 eax, 20			; 00000014H
  0012a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0012d	c7 84 01 1c 28
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+10268], 0

; 37   : 	}

  00138	eb 9c		 jmp	 SHORT $LN11@LoadConfig
$LN10@LoadConfig:

; 38   : 
; 39   : 	this->ReadList(PRICEMANAGER_DIR);

  0013a	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@KBEDOBAM@?4?4?2Data?2ExData?2PriceManager?4ini?$AA@
  0013f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00142	e8 00 00 00 00	 call	 ?ReadList@cPriceManager@@QAEXPAD@Z ; cPriceManager::ReadList

; 40   : 
; 41   : 	return;

  00147	e9 a8 02 00 00	 jmp	 $LN16@LoadConfig

; 42   : 
; 43   : 	FILE * file = fopen(PRICEMANAGER_DIR,"r");

  0014c	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  00151	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@KBEDOBAM@?4?4?2Data?2ExData?2PriceManager?4ini?$AA@
  00156	e8 00 00 00 00	 call	 _fopen
  0015b	83 c4 08	 add	 esp, 8
  0015e	89 45 ec	 mov	 DWORD PTR _file$[ebp], eax

; 44   : 	if(file == NULL)

  00161	83 7d ec 00	 cmp	 DWORD PTR _file$[ebp], 0
  00165	75 1d		 jne	 SHORT $LN9@LoadConfig

; 45   : 	{
; 46   : 		MessageBoxA(0,PRICEMANAGER_DIR,"LOAD ERROR",0);

  00167	6a 00		 push	 0
  00169	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DBBEOKP@LOAD?5ERROR?$AA@
  0016e	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@KBEDOBAM@?4?4?2Data?2ExData?2PriceManager?4ini?$AA@
  00173	6a 00		 push	 0
  00175	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 47   : 		this->Enable = false;

  0017b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0017e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN9@LoadConfig:

; 48   : 	}
; 49   : 	if(!this->Enable)return;

  00184	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00187	83 38 00	 cmp	 DWORD PTR [eax], 0
  0018a	75 05		 jne	 SHORT $LN8@LoadConfig
  0018c	e9 63 02 00 00	 jmp	 $LN16@LoadConfig
$LN8@LoadConfig:

; 50   : 
; 51   : 	char Buff[256];
; 52   : 	int Flag = 0;

  00191	c7 85 e8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _Flag$[ebp], 0

; 53   : 	this->sCount = 0;

  0019b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0019e	c7 80 08 28 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+10248], 0

; 54   : 	this->bCount = 0;

  001a8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001ab	c7 80 0c 50 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+20492], 0
$LN7@LoadConfig:

; 55   : 
; 56   : 	while(!feof(file))

  001b5	8b 45 ec	 mov	 eax, DWORD PTR _file$[ebp]
  001b8	50		 push	 eax
  001b9	e8 00 00 00 00	 call	 _feof
  001be	83 c4 04	 add	 esp, 4
  001c1	85 c0		 test	 eax, eax
  001c3	0f 85 1f 02 00
	00		 jne	 $LN6@LoadConfig

; 57   : 	{
; 58   : 		fgets(Buff,256,file);

  001c9	8b 45 ec	 mov	 eax, DWORD PTR _file$[ebp]
  001cc	50		 push	 eax
  001cd	68 00 01 00 00	 push	 256			; 00000100H
  001d2	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _Buff$[ebp]
  001d8	51		 push	 ecx
  001d9	e8 00 00 00 00	 call	 _fgets
  001de	83 c4 0c	 add	 esp, 12			; 0000000cH

; 59   : 		if(Ex_IsBadFileLine(Buff, Flag))

  001e1	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _Flag$[ebp]
  001e7	50		 push	 eax
  001e8	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _Buff$[ebp]
  001ee	51		 push	 ecx
  001ef	e8 00 00 00 00	 call	 ?Ex_IsBadFileLine@@YA_NPADAAH@Z ; Ex_IsBadFileLine
  001f4	83 c4 08	 add	 esp, 8
  001f7	0f b6 d0	 movzx	 edx, al
  001fa	85 d2		 test	 edx, edx
  001fc	74 02		 je	 SHORT $LN5@LoadConfig

; 60   : 			continue;

  001fe	eb b5		 jmp	 SHORT $LN7@LoadConfig
$LN5@LoadConfig:

; 61   : 		if(Flag == 1)

  00200	83 bd e8 fe ff
	ff 01		 cmp	 DWORD PTR _Flag$[ebp], 1
  00207	0f 85 dd 00 00
	00		 jne	 $LN4@LoadConfig

; 62   : 		{
; 63   : 			if(this->sCount == MAX_PRICE_ITEM) break;

  0020d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00210	81 b8 08 28 00
	00 00 02 00 00	 cmp	 DWORD PTR [eax+10248], 512 ; 00000200H
  0021a	75 05		 jne	 SHORT $LN3@LoadConfig
  0021c	e9 c7 01 00 00	 jmp	 $LN6@LoadConfig
$LN3@LoadConfig:

; 64   : 
; 65   : 			int n[5];
; 66   : 			sscanf(Buff, "%d %d %d %d %d", &n[0], &n[1], &n[2], &n[3], &n[4]);

  00221	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR _n$220477[ebp+16]
  00227	50		 push	 eax
  00228	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _n$220477[ebp+12]
  0022e	51		 push	 ecx
  0022f	8d 95 dc fe ff
	ff		 lea	 edx, DWORD PTR _n$220477[ebp+8]
  00235	52		 push	 edx
  00236	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _n$220477[ebp+4]
  0023c	50		 push	 eax
  0023d	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR _n$220477[ebp]
  00243	51		 push	 ecx
  00244	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GNCPONOH@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@
  00249	8d 95 ec fe ff
	ff		 lea	 edx, DWORD PTR _Buff$[ebp]
  0024f	52		 push	 edx
  00250	e8 00 00 00 00	 call	 _sscanf
  00255	83 c4 1c	 add	 esp, 28			; 0000001cH

; 67   : 			this->SellPrice[this->sCount].Type = n[0];

  00258	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0025b	8b 88 08 28 00
	00		 mov	 ecx, DWORD PTR [eax+10248]
  00261	6b c9 14	 imul	 ecx, 20			; 00000014H
  00264	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00267	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR _n$220477[ebp]
  0026d	89 44 0a 08	 mov	 DWORD PTR [edx+ecx+8], eax

; 68   : 			this->SellPrice[this->sCount].Index = n[1];

  00271	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00274	8b 88 08 28 00
	00		 mov	 ecx, DWORD PTR [eax+10248]
  0027a	6b c9 14	 imul	 ecx, 20			; 00000014H
  0027d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00280	8b 85 d8 fe ff
	ff		 mov	 eax, DWORD PTR _n$220477[ebp+4]
  00286	89 44 0a 0c	 mov	 DWORD PTR [edx+ecx+12], eax

; 69   : 			this->SellPrice[this->sCount].Level = n[2];

  0028a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0028d	8b 88 08 28 00
	00		 mov	 ecx, DWORD PTR [eax+10248]
  00293	6b c9 14	 imul	 ecx, 20			; 00000014H
  00296	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00299	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR _n$220477[ebp+8]
  0029f	89 44 0a 10	 mov	 DWORD PTR [edx+ecx+16], eax

; 70   : 			this->SellPrice[this->sCount].PriceType = n[3];

  002a3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002a6	8b 88 08 28 00
	00		 mov	 ecx, DWORD PTR [eax+10248]
  002ac	6b c9 14	 imul	 ecx, 20			; 00000014H
  002af	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002b2	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _n$220477[ebp+12]
  002b8	89 44 0a 14	 mov	 DWORD PTR [edx+ecx+20], eax

; 71   : 			this->SellPrice[this->sCount].Price = n[4];

  002bc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002bf	8b 88 08 28 00
	00		 mov	 ecx, DWORD PTR [eax+10248]
  002c5	6b c9 14	 imul	 ecx, 20			; 00000014H
  002c8	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002cb	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _n$220477[ebp+16]
  002d1	89 44 0a 18	 mov	 DWORD PTR [edx+ecx+24], eax

; 72   : 			this->sCount++;

  002d5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002d8	8b 88 08 28 00
	00		 mov	 ecx, DWORD PTR [eax+10248]
  002de	83 c1 01	 add	 ecx, 1
  002e1	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002e4	89 8a 08 28 00
	00		 mov	 DWORD PTR [edx+10248], ecx
$LN4@LoadConfig:

; 73   : 		}
; 74   : 
; 75   : 		if(Flag == 2)

  002ea	83 bd e8 fe ff
	ff 02		 cmp	 DWORD PTR _Flag$[ebp], 2
  002f1	0f 85 ec 00 00
	00		 jne	 $LN2@LoadConfig

; 76   : 		{
; 77   : 			if(this->bCount == MAX_PRICE_ITEM) break;

  002f7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002fa	81 b8 0c 50 00
	00 00 02 00 00	 cmp	 DWORD PTR [eax+20492], 512 ; 00000200H
  00304	75 05		 jne	 SHORT $LN1@LoadConfig
  00306	e9 dd 00 00 00	 jmp	 $LN6@LoadConfig
$LN1@LoadConfig:

; 78   : 
; 79   : 			int n[5];
; 80   : 			sscanf(Buff, "%d %d %d %d %d", &n[0], &n[1], &n[2], &n[3], &n[4]);

  0030b	8d 85 d0 fe ff
	ff		 lea	 eax, DWORD PTR _n$220481[ebp+16]
  00311	50		 push	 eax
  00312	8d 8d cc fe ff
	ff		 lea	 ecx, DWORD PTR _n$220481[ebp+12]
  00318	51		 push	 ecx
  00319	8d 95 c8 fe ff
	ff		 lea	 edx, DWORD PTR _n$220481[ebp+8]
  0031f	52		 push	 edx
  00320	8d 85 c4 fe ff
	ff		 lea	 eax, DWORD PTR _n$220481[ebp+4]
  00326	50		 push	 eax
  00327	8d 8d c0 fe ff
	ff		 lea	 ecx, DWORD PTR _n$220481[ebp]
  0032d	51		 push	 ecx
  0032e	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GNCPONOH@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@
  00333	8d 95 ec fe ff
	ff		 lea	 edx, DWORD PTR _Buff$[ebp]
  00339	52		 push	 edx
  0033a	e8 00 00 00 00	 call	 _sscanf
  0033f	83 c4 1c	 add	 esp, 28			; 0000001cH

; 81   : 			this->BuyPrice[this->bCount].Type = n[0];

  00342	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00345	8b 88 0c 50 00
	00		 mov	 ecx, DWORD PTR [eax+20492]
  0034b	6b c9 14	 imul	 ecx, 20			; 00000014H
  0034e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00351	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR _n$220481[ebp]
  00357	89 84 0a 0c 28
	00 00		 mov	 DWORD PTR [edx+ecx+10252], eax

; 82   : 			this->BuyPrice[this->bCount].Index = n[1];

  0035e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00361	8b 88 0c 50 00
	00		 mov	 ecx, DWORD PTR [eax+20492]
  00367	6b c9 14	 imul	 ecx, 20			; 00000014H
  0036a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0036d	8b 85 c4 fe ff
	ff		 mov	 eax, DWORD PTR _n$220481[ebp+4]
  00373	89 84 0a 10 28
	00 00		 mov	 DWORD PTR [edx+ecx+10256], eax

; 83   : 			this->BuyPrice[this->bCount].Level = n[2];

  0037a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0037d	8b 88 0c 50 00
	00		 mov	 ecx, DWORD PTR [eax+20492]
  00383	6b c9 14	 imul	 ecx, 20			; 00000014H
  00386	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00389	8b 85 c8 fe ff
	ff		 mov	 eax, DWORD PTR _n$220481[ebp+8]
  0038f	89 84 0a 14 28
	00 00		 mov	 DWORD PTR [edx+ecx+10260], eax

; 84   : 			this->BuyPrice[this->bCount].PriceType = n[3];

  00396	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00399	8b 88 0c 50 00
	00		 mov	 ecx, DWORD PTR [eax+20492]
  0039f	6b c9 14	 imul	 ecx, 20			; 00000014H
  003a2	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003a5	8b 85 cc fe ff
	ff		 mov	 eax, DWORD PTR _n$220481[ebp+12]
  003ab	89 84 0a 18 28
	00 00		 mov	 DWORD PTR [edx+ecx+10264], eax

; 85   : 			this->BuyPrice[this->bCount].Price = n[4];

  003b2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003b5	8b 88 0c 50 00
	00		 mov	 ecx, DWORD PTR [eax+20492]
  003bb	6b c9 14	 imul	 ecx, 20			; 00000014H
  003be	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003c1	8b 85 d0 fe ff
	ff		 mov	 eax, DWORD PTR _n$220481[ebp+16]
  003c7	89 84 0a 1c 28
	00 00		 mov	 DWORD PTR [edx+ecx+10268], eax

; 86   : 			this->bCount++;

  003ce	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003d1	8b 88 0c 50 00
	00		 mov	 ecx, DWORD PTR [eax+20492]
  003d7	83 c1 01	 add	 ecx, 1
  003da	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003dd	89 8a 0c 50 00
	00		 mov	 DWORD PTR [edx+20492], ecx
$LN2@LoadConfig:

; 87   : 		}
; 88   : 	}

  003e3	e9 cd fd ff ff	 jmp	 $LN7@LoadConfig
$LN6@LoadConfig:

; 89   : 	fclose(file);

  003e8	8b 45 ec	 mov	 eax, DWORD PTR _file$[ebp]
  003eb	50		 push	 eax
  003ec	e8 00 00 00 00	 call	 _fclose
  003f1	83 c4 04	 add	 esp, 4
$LN16@LoadConfig:

; 90   : /*
; 91   : this->Init();
; 92   : int Token;
; 93   : // ----
; 94   : SMDFile = fopen(File, "r");
; 95   : // ----
; 96   : if ( !SMDFile )
; 97   : {
; 98   : MessageBox(NULL, "file not found", "[ItemPrice]", ERROR);
; 99   : return;
; 100  : }
; 101  : // ----
; 102  : int Category = -1;
; 103  : // ----
; 104  : while (true)
; 105  : {
; 106  : Token = GetToken();
; 107  : // ----
; 108  : if( Token == END )
; 109  : {
; 110  : break;
; 111  : }
; 112  : // ----
; 113  : if( Token != NUMBER )
; 114  : {
; 115  : continue;
; 116  : }
; 117  : // ----
; 118  : Category = TokenNumber;
; 119  : // ----
; 120  : while(true)
; 121  : {
; 122  : if( Category == 0)
; 123  : {
; 124  : Token = GetToken();
; 125  : // ----
; 126  : if( strcmp("end", TokenString) == NULL )
; 127  : {
; 128  : break;
; 129  : }
; 130  : // ----
; 131  : this->Enable = TokenNumber;
; 132  : // ----
; 133  : Token = GetToken();
; 134  : this->SellItemNull = TokenNumber;
; 135  : }
; 136  : else if( Category == 1 )	//-> Sell List
; 137  : {
; 138  : Token = GetToken();
; 139  : // ----
; 140  : if( strcmp("end", TokenString) == NULL )
; 141  : {
; 142  : break;
; 143  : }
; 144  : // ----
; 145  : if( this->m_LoadedSellCount >= MAX_ITEMPRICE_ITEM )
; 146  : {
; 147  : break;
; 148  : }
; 149  : // ----
; 150  : this->m_SellData[this->m_LoadedSellCount].ItemType = TokenNumber;
; 151  : // ----
; 152  : Token = GetToken();
; 153  : this->m_SellData[this->m_LoadedSellCount].ItemIndex = TokenNumber;
; 154  : // ----
; 155  : Token = GetToken();
; 156  : this->m_SellData[this->m_LoadedSellCount].ItemLevel = TokenNumber;
; 157  : // ----
; 158  : Token = GetToken();
; 159  : this->m_SellData[this->m_LoadedSellCount].PriceType = TokenNumber;
; 160  : // ----
; 161  : Token = GetToken();
; 162  : this->m_SellData[this->m_LoadedSellCount].Price = TokenNumber;
; 163  : // ----
; 164  : this->m_LoadedSellCount++;
; 165  : }
; 166  : else if( Category == 2)	//-> Buy List
; 167  : {
; 168  : Token = GetToken();
; 169  : // ----
; 170  : if( strcmp("end", TokenString) == NULL )
; 171  : {
; 172  : break;
; 173  : }
; 174  : // ----
; 175  : if( this->m_LoadedBuyCount >= MAX_ITEMPRICE_ITEM )
; 176  : {
; 177  : break;
; 178  : }
; 179  : // ----
; 180  : this->m_BuyData[this->m_LoadedBuyCount].ItemType = TokenNumber;
; 181  : // ----
; 182  : Token = GetToken();
; 183  : this->m_BuyData[this->m_LoadedBuyCount].ItemIndex = TokenNumber;
; 184  : // ----
; 185  : Token = GetToken();
; 186  : this->m_BuyData[this->m_LoadedBuyCount].ItemLevel = TokenNumber;
; 187  : // ----
; 188  : Token = GetToken();
; 189  : this->m_BuyData[this->m_LoadedBuyCount].PriceType = TokenNumber;
; 190  : // ----
; 191  : Token = GetToken();
; 192  : this->m_BuyData[this->m_LoadedBuyCount].Price = TokenNumber;
; 193  : // ----
; 194  : this->m_LoadedBuyCount++;
; 195  : }
; 196  : }
; 197  : }
; 198  : // ----
; 199  : this->m_IsLoaded = true;
; 200  : fclose(SMDFile);
; 201  : */
; 202  : }

  003f4	5f		 pop	 edi
  003f5	5e		 pop	 esi
  003f6	5b		 pop	 ebx
  003f7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003fa	33 cd		 xor	 ecx, ebp
  003fc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00401	8b e5		 mov	 esp, ebp
  00403	5d		 pop	 ebp
  00404	c3		 ret	 0
?LoadConfig@cPriceManager@@QAEXXZ ENDP			; cPriceManager::LoadConfig
_TEXT	ENDS
PUBLIC	?SellPriceItem@cPriceManager@@QAEXHHAAH@Z	; cPriceManager::SellPriceItem
EXTRN	?GDSaveUserInfo@GameShop@@QAEXH@Z:PROC		; GameShop::GDSaveUserInfo
EXTRN	?gGameShop@@3VGameShop@@A:BYTE			; gGameShop
EXTRN	?ExUserDataSend@@YAXH@Z:PROC			; ExUserDataSend
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$220490 = -12						; size = 4
_lpObj$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_iPos$ = 12						; size = 4
_money$ = 16						; size = 4
?SellPriceItem@cPriceManager@@QAEXHHAAH@Z PROC		; cPriceManager::SellPriceItem
; _this$ = ecx

; 205  : {

  00410	55		 push	 ebp
  00411	8b ec		 mov	 ebp, esp
  00413	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00416	53		 push	 ebx
  00417	56		 push	 esi
  00418	57		 push	 edi
  00419	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 206  : 	if(!this->Enable) return;

  0041c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0041f	83 38 00	 cmp	 DWORD PTR [eax], 0
  00422	75 05		 jne	 SHORT $LN15@SellPriceI
  00424	e9 0f 02 00 00	 jmp	 $LN16@SellPriceI
$LN15@SellPriceI:

; 207  : 	LPOBJ lpObj = &gObj[aIndex];

  00429	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0042c	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00432	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00438	89 45 f8	 mov	 DWORD PTR _lpObj$[ebp], eax

; 208  : 	for(int i=0;i<this->sCount;i++)

  0043b	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$220490[ebp], 0
  00442	eb 09		 jmp	 SHORT $LN14@SellPriceI
$LN13@SellPriceI:
  00444	8b 45 f4	 mov	 eax, DWORD PTR _i$220490[ebp]
  00447	83 c0 01	 add	 eax, 1
  0044a	89 45 f4	 mov	 DWORD PTR _i$220490[ebp], eax
$LN14@SellPriceI:
  0044d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00450	8b 4d f4	 mov	 ecx, DWORD PTR _i$220490[ebp]
  00453	3b 88 08 28 00
	00		 cmp	 ecx, DWORD PTR [eax+10248]
  00459	0f 8d c7 01 00
	00		 jge	 $LN12@SellPriceI

; 209  : 	{
; 210  : 		if ( lpObj->pInventory[iPos].m_Type == ITEMGET(this->SellPrice[i].Type,this->SellPrice[i].Index) &&
; 211  : 			 lpObj->pInventory[iPos].m_Level == this->SellPrice[i].Level )

  0045f	8b 45 0c	 mov	 eax, DWORD PTR _iPos$[ebp]
  00462	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  00468	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0046b	8b 91 24 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3620]
  00471	0f bf 44 02 06	 movsx	 eax, WORD PTR [edx+eax+6]
  00476	8b 4d f4	 mov	 ecx, DWORD PTR _i$220490[ebp]
  00479	6b c9 14	 imul	 ecx, 20			; 00000014H
  0047c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0047f	8b 4c 0a 08	 mov	 ecx, DWORD PTR [edx+ecx+8]
  00483	c1 e1 09	 shl	 ecx, 9
  00486	8b 55 f4	 mov	 edx, DWORD PTR _i$220490[ebp]
  00489	6b d2 14	 imul	 edx, 20			; 00000014H
  0048c	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  0048f	03 4c 16 0c	 add	 ecx, DWORD PTR [esi+edx+12]
  00493	3b c1		 cmp	 eax, ecx
  00495	0f 85 86 01 00
	00		 jne	 $LN2@SellPriceI
  0049b	8b 45 0c	 mov	 eax, DWORD PTR _iPos$[ebp]
  0049e	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  004a4	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  004a7	8b 91 24 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3620]
  004ad	0f bf 44 02 08	 movsx	 eax, WORD PTR [edx+eax+8]
  004b2	8b 4d f4	 mov	 ecx, DWORD PTR _i$220490[ebp]
  004b5	6b c9 14	 imul	 ecx, 20			; 00000014H
  004b8	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  004bb	3b 44 0a 10	 cmp	 eax, DWORD PTR [edx+ecx+16]
  004bf	0f 85 5c 01 00
	00		 jne	 $LN2@SellPriceI

; 212  : 		{
; 213  : 			if(this->SellPrice[i].PriceType == 0)	//Zen

  004c5	8b 45 f4	 mov	 eax, DWORD PTR _i$220490[ebp]
  004c8	6b c0 14	 imul	 eax, 20			; 00000014H
  004cb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004ce	83 7c 01 14 00	 cmp	 DWORD PTR [ecx+eax+20], 0
  004d3	75 1c		 jne	 SHORT $LN10@SellPriceI

; 214  : 			{
; 215  : 				money = this->SellPrice[i].Price;

  004d5	8b 45 f4	 mov	 eax, DWORD PTR _i$220490[ebp]
  004d8	6b c0 14	 imul	 eax, 20			; 00000014H
  004db	8b 4d 10	 mov	 ecx, DWORD PTR _money$[ebp]
  004de	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  004e1	8b 44 02 18	 mov	 eax, DWORD PTR [edx+eax+24]
  004e5	89 01		 mov	 DWORD PTR [ecx], eax

; 216  : 				return;

  004e7	e9 4c 01 00 00	 jmp	 $LN16@SellPriceI
  004ec	e9 30 01 00 00	 jmp	 $LN2@SellPriceI
$LN10@SellPriceI:

; 217  : 			}
; 218  : 			else if(this->SellPrice[i].PriceType == 1)	//Credits

  004f1	8b 45 f4	 mov	 eax, DWORD PTR _i$220490[ebp]
  004f4	6b c0 14	 imul	 eax, 20			; 00000014H
  004f7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004fa	83 7c 01 14 01	 cmp	 DWORD PTR [ecx+eax+20], 1
  004ff	75 3e		 jne	 SHORT $LN8@SellPriceI

; 219  : 			{
; 220  : 				lpObj->ExCred += this->SellPrice[i].Price;

  00501	8b 45 f4	 mov	 eax, DWORD PTR _i$220490[ebp]
  00504	6b c0 14	 imul	 eax, 20			; 00000014H
  00507	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0050a	db 44 01 18	 fild	 DWORD PTR [ecx+eax+24]
  0050e	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00511	d8 82 a8 22 00
	00		 fadd	 DWORD PTR [edx+8872]
  00517	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0051a	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 221  : 				money = 0;

  00520	8b 45 10	 mov	 eax, DWORD PTR _money$[ebp]
  00523	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 222  : 				ExUserDataSend(aIndex);

  00529	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0052c	50		 push	 eax
  0052d	e8 00 00 00 00	 call	 ?ExUserDataSend@@YAXH@Z	; ExUserDataSend
  00532	83 c4 04	 add	 esp, 4

; 223  : 				return;

  00535	e9 fe 00 00 00	 jmp	 $LN16@SellPriceI
  0053a	e9 e2 00 00 00	 jmp	 $LN2@SellPriceI
$LN8@SellPriceI:

; 224  : 			}
; 225  : 			else if(this->SellPrice[i].PriceType == 2)	//WcoinC

  0053f	8b 45 f4	 mov	 eax, DWORD PTR _i$220490[ebp]
  00542	6b c0 14	 imul	 eax, 20			; 00000014H
  00545	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00548	83 7c 01 14 02	 cmp	 DWORD PTR [ecx+eax+20], 2
  0054d	75 40		 jne	 SHORT $LN6@SellPriceI

; 226  : 			{
; 227  : 				lpObj->GameShop.WCoinC += this->SellPrice[i].Price;

  0054f	8b 45 f4	 mov	 eax, DWORD PTR _i$220490[ebp]
  00552	6b c0 14	 imul	 eax, 20			; 00000014H
  00555	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00558	db 44 01 18	 fild	 DWORD PTR [ecx+eax+24]
  0055c	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0055f	dc 82 00 23 00
	00		 fadd	 QWORD PTR [edx+8960]
  00565	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00568	dd 98 00 23 00
	00		 fstp	 QWORD PTR [eax+8960]

; 228  : 				gGameShop.GDSaveUserInfo(aIndex);

  0056e	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00571	50		 push	 eax
  00572	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  00577	e8 00 00 00 00	 call	 ?GDSaveUserInfo@GameShop@@QAEXH@Z ; GameShop::GDSaveUserInfo

; 229  : 				money = 0;

  0057c	8b 45 10	 mov	 eax, DWORD PTR _money$[ebp]
  0057f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 230  : 				return;

  00585	e9 ae 00 00 00	 jmp	 $LN16@SellPriceI
  0058a	e9 92 00 00 00	 jmp	 $LN2@SellPriceI
$LN6@SellPriceI:

; 231  : 			}
; 232  : 			else if(this->SellPrice[i].PriceType == 3)	//Wcoin

  0058f	8b 45 f4	 mov	 eax, DWORD PTR _i$220490[ebp]
  00592	6b c0 14	 imul	 eax, 20			; 00000014H
  00595	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00598	83 7c 01 14 03	 cmp	 DWORD PTR [ecx+eax+20], 3
  0059d	75 3a		 jne	 SHORT $LN4@SellPriceI

; 233  : 			{
; 234  : 				lpObj->GameShop.WCoinP += this->SellPrice[i].Price;

  0059f	8b 45 f4	 mov	 eax, DWORD PTR _i$220490[ebp]
  005a2	6b c0 14	 imul	 eax, 20			; 00000014H
  005a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005a8	db 44 01 18	 fild	 DWORD PTR [ecx+eax+24]
  005ac	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  005af	dc 82 f8 22 00
	00		 fadd	 QWORD PTR [edx+8952]
  005b5	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  005b8	dd 98 f8 22 00
	00		 fstp	 QWORD PTR [eax+8952]

; 235  : 				gGameShop.GDSaveUserInfo(aIndex);

  005be	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  005c1	50		 push	 eax
  005c2	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  005c7	e8 00 00 00 00	 call	 ?GDSaveUserInfo@GameShop@@QAEXH@Z ; GameShop::GDSaveUserInfo

; 236  : 				money = 0;

  005cc	8b 45 10	 mov	 eax, DWORD PTR _money$[ebp]
  005cf	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 237  : 				return;

  005d5	eb 61		 jmp	 SHORT $LN16@SellPriceI
  005d7	eb 48		 jmp	 SHORT $LN2@SellPriceI
$LN4@SellPriceI:

; 238  : 			}
; 239  : 			else if(this->SellPrice[i].PriceType == 4)	//Wcoin

  005d9	8b 45 f4	 mov	 eax, DWORD PTR _i$220490[ebp]
  005dc	6b c0 14	 imul	 eax, 20			; 00000014H
  005df	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005e2	83 7c 01 14 04	 cmp	 DWORD PTR [ecx+eax+20], 4
  005e7	75 38		 jne	 SHORT $LN2@SellPriceI

; 240  : 			{
; 241  : 				lpObj->GameShop.GoblinPoint += this->SellPrice[i].Price;

  005e9	8b 45 f4	 mov	 eax, DWORD PTR _i$220490[ebp]
  005ec	6b c0 14	 imul	 eax, 20			; 00000014H
  005ef	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005f2	db 44 01 18	 fild	 DWORD PTR [ecx+eax+24]
  005f6	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  005f9	dc 82 08 23 00
	00		 fadd	 QWORD PTR [edx+8968]
  005ff	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00602	dd 98 08 23 00
	00		 fstp	 QWORD PTR [eax+8968]

; 242  : 				gGameShop.GDSaveUserInfo(aIndex);

  00608	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0060b	50		 push	 eax
  0060c	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  00611	e8 00 00 00 00	 call	 ?GDSaveUserInfo@GameShop@@QAEXH@Z ; GameShop::GDSaveUserInfo

; 243  : 				money = 0;

  00616	8b 45 10	 mov	 eax, DWORD PTR _money$[ebp]
  00619	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 244  : 				return;

  0061f	eb 17		 jmp	 SHORT $LN16@SellPriceI
$LN2@SellPriceI:

; 245  : 			}
; 246  : 		}
; 247  : 	}

  00621	e9 1e fe ff ff	 jmp	 $LN13@SellPriceI
$LN12@SellPriceI:

; 248  : 
; 249  : 	if(this->AllSellNull)

  00626	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00629	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0062d	74 09		 je	 SHORT $LN1@SellPriceI

; 250  : 	{
; 251  : 		money = 0;

  0062f	8b 45 10	 mov	 eax, DWORD PTR _money$[ebp]
  00632	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN1@SellPriceI:
$LN16@SellPriceI:

; 252  : 	}
; 253  : }

  00638	5f		 pop	 edi
  00639	5e		 pop	 esi
  0063a	5b		 pop	 ebx
  0063b	8b e5		 mov	 esp, ebp
  0063d	5d		 pop	 ebp
  0063e	c2 0c 00	 ret	 12			; 0000000cH
?SellPriceItem@cPriceManager@@QAEXHHAAH@Z ENDP		; cPriceManager::SellPriceItem
_TEXT	ENDS
PUBLIC	?BuyPriceItem@cPriceManager@@QAE_NHHAAHH@Z	; cPriceManager::BuyPriceItem
EXTRN	?MsgNormal@@YAXHPADZZ:PROC			; MsgNormal
EXTRN	?GetText@CExText@@QAEPADH@Z:PROC		; CExText::GetText
EXTRN	?g_ExText@@3VCExText@@A:BYTE			; g_ExText
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$220514 = -12						; size = 4
_lpObj$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_iType$ = 12						; size = 4
_iStoreTaxMoney$ = 16					; size = 4
_ItemLevel$ = 20					; size = 4
?BuyPriceItem@cPriceManager@@QAE_NHHAAHH@Z PROC		; cPriceManager::BuyPriceItem
; _this$ = ecx

; 256  : {

  00650	55		 push	 ebp
  00651	8b ec		 mov	 ebp, esp
  00653	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00656	53		 push	 ebx
  00657	56		 push	 esi
  00658	57		 push	 edi
  00659	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 257  : 	if(!this->Enable) return true;

  0065c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0065f	83 38 00	 cmp	 DWORD PTR [eax], 0
  00662	75 07		 jne	 SHORT $LN19@BuyPriceIt
  00664	b0 01		 mov	 al, 1
  00666	e9 38 04 00 00	 jmp	 $LN20@BuyPriceIt
$LN19@BuyPriceIt:

; 258  : 	LPOBJ lpObj = &gObj[aIndex];

  0066b	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0066e	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00674	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0067a	89 45 f8	 mov	 DWORD PTR _lpObj$[ebp], eax

; 259  : 	for(int i=0;i<this->bCount;i++)

  0067d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$220514[ebp], 0
  00684	eb 09		 jmp	 SHORT $LN18@BuyPriceIt
$LN17@BuyPriceIt:
  00686	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  00689	83 c0 01	 add	 eax, 1
  0068c	89 45 f4	 mov	 DWORD PTR _i$220514[ebp], eax
$LN18@BuyPriceIt:
  0068f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00692	8b 4d f4	 mov	 ecx, DWORD PTR _i$220514[ebp]
  00695	3b 88 0c 50 00
	00		 cmp	 ecx, DWORD PTR [eax+20492]
  0069b	0f 8d 00 04 00
	00		 jge	 $LN16@BuyPriceIt

; 260  : 	{
; 261  : 		if ( iType == ITEMGET(this->BuyPrice[i].Type,this->BuyPrice[i].Index) && this->BuyPrice[i].Level == ItemLevel)

  006a1	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  006a4	6b c0 14	 imul	 eax, 20			; 00000014H
  006a7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006aa	8b 94 01 0c 28
	00 00		 mov	 edx, DWORD PTR [ecx+eax+10252]
  006b1	c1 e2 09	 shl	 edx, 9
  006b4	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  006b7	6b c0 14	 imul	 eax, 20			; 00000014H
  006ba	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006bd	03 94 01 10 28
	00 00		 add	 edx, DWORD PTR [ecx+eax+10256]
  006c4	39 55 0c	 cmp	 DWORD PTR _iType$[ebp], edx
  006c7	0f 85 cf 03 00
	00		 jne	 $LN2@BuyPriceIt
  006cd	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  006d0	6b c0 14	 imul	 eax, 20			; 00000014H
  006d3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006d6	8b 94 01 14 28
	00 00		 mov	 edx, DWORD PTR [ecx+eax+10260]
  006dd	3b 55 14	 cmp	 edx, DWORD PTR _ItemLevel$[ebp]
  006e0	0f 85 b6 03 00
	00		 jne	 $LN2@BuyPriceIt

; 262  : 		{
; 263  : 			if(this->BuyPrice[i].PriceType == 0)	//Zen

  006e6	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  006e9	6b c0 14	 imul	 eax, 20			; 00000014H
  006ec	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006ef	83 bc 01 18 28
	00 00 00	 cmp	 DWORD PTR [ecx+eax+10264], 0
  006f7	75 50		 jne	 SHORT $LN14@BuyPriceIt

; 264  : 			{
; 265  : 				iStoreTaxMoney = this->BuyPrice[i].Price;

  006f9	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  006fc	6b c0 14	 imul	 eax, 20			; 00000014H
  006ff	8b 4d 10	 mov	 ecx, DWORD PTR _iStoreTaxMoney$[ebp]
  00702	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00705	8b 84 02 1c 28
	00 00		 mov	 eax, DWORD PTR [edx+eax+10268]
  0070c	89 01		 mov	 DWORD PTR [ecx], eax

; 266  : 				if(iStoreTaxMoney > lpObj->Money)

  0070e	8b 45 10	 mov	 eax, DWORD PTR _iStoreTaxMoney$[ebp]
  00711	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00714	8b 10		 mov	 edx, DWORD PTR [eax]
  00716	3b 91 f0 00 00
	00		 cmp	 edx, DWORD PTR [ecx+240]
  0071c	7e 26		 jle	 SHORT $LN13@BuyPriceIt

; 267  : 				{
; 268  : 					MsgNormal(aIndex,g_ExText.GetText(79),iStoreTaxMoney);

  0071e	8b 45 10	 mov	 eax, DWORD PTR _iStoreTaxMoney$[ebp]
  00721	8b 08		 mov	 ecx, DWORD PTR [eax]
  00723	51		 push	 ecx
  00724	6a 4f		 push	 79			; 0000004fH
  00726	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExText@@3VCExText@@A ; g_ExText
  0072b	e8 00 00 00 00	 call	 ?GetText@CExText@@QAEPADH@Z ; CExText::GetText
  00730	50		 push	 eax
  00731	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  00734	52		 push	 edx
  00735	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  0073a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 269  : 					return false;

  0073d	32 c0		 xor	 al, al
  0073f	e9 5f 03 00 00	 jmp	 $LN20@BuyPriceIt
$LN13@BuyPriceIt:

; 270  : 				}
; 271  : 			}

  00744	e9 53 03 00 00	 jmp	 $LN2@BuyPriceIt
$LN14@BuyPriceIt:

; 272  : 			else if(this->BuyPrice[i].PriceType == 1)	//Credits

  00749	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  0074c	6b c0 14	 imul	 eax, 20			; 00000014H
  0074f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00752	83 bc 01 18 28
	00 00 01	 cmp	 DWORD PTR [ecx+eax+10264], 1
  0075a	0f 85 c2 00 00
	00		 jne	 $LN11@BuyPriceIt

; 273  : 			{
; 274  : 				//if(g_ExLicense.CheckUser(eExUB::NSGames))
; 275  : 				//{
; 276  : 				//	if(this->BuyPrice[i].Price > lpObj->PCPoint)
; 277  : 				//	{
; 278  : 				//		MsgNormal(aIndex,"Need %d NSPoint", this->BuyPrice[i].Price);
; 279  : 				//		return false;
; 280  : 				//	}
; 281  : 				//	MsgNormal(aIndex, "Price: %d NSPoint",this->BuyPrice[i].Price);
; 282  : 				//	lpObj->ExCred -= this->BuyPrice[i].Price;
; 283  : 				//	ExUserDataSend(lpObj->m_Index);
; 284  : 				//	iStoreTaxMoney = 0;
; 285  : 				//}
; 286  : 				//else
; 287  : 				//{
; 288  : 					if(this->BuyPrice[i].Price > lpObj->ExCred)

  00760	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  00763	6b c0 14	 imul	 eax, 20			; 00000014H
  00766	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00769	db 84 01 1c 28
	00 00		 fild	 DWORD PTR [ecx+eax+10268]
  00770	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00773	d9 82 a8 22 00
	00		 fld	 DWORD PTR [edx+8872]
  00779	de d9		 fcompp
  0077b	df e0		 fnstsw	 ax
  0077d	f6 c4 05	 test	 ah, 5
  00780	7a 31		 jp	 SHORT $LN10@BuyPriceIt

; 289  : 					{
; 290  : 						MsgNormal(aIndex,g_ExText.GetText(80),this->BuyPrice[i].Price);

  00782	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  00785	6b c0 14	 imul	 eax, 20			; 00000014H
  00788	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0078b	8b 94 01 1c 28
	00 00		 mov	 edx, DWORD PTR [ecx+eax+10268]
  00792	52		 push	 edx
  00793	6a 50		 push	 80			; 00000050H
  00795	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExText@@3VCExText@@A ; g_ExText
  0079a	e8 00 00 00 00	 call	 ?GetText@CExText@@QAEPADH@Z ; CExText::GetText
  0079f	50		 push	 eax
  007a0	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  007a3	50		 push	 eax
  007a4	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  007a9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 291  : 						return false;

  007ac	32 c0		 xor	 al, al
  007ae	e9 f0 02 00 00	 jmp	 $LN20@BuyPriceIt
$LN10@BuyPriceIt:

; 292  : 					}
; 293  : 					MsgNormal(aIndex,g_ExText.GetText(81),this->BuyPrice[i].Price);

  007b3	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  007b6	6b c0 14	 imul	 eax, 20			; 00000014H
  007b9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  007bc	8b 94 01 1c 28
	00 00		 mov	 edx, DWORD PTR [ecx+eax+10268]
  007c3	52		 push	 edx
  007c4	6a 51		 push	 81			; 00000051H
  007c6	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExText@@3VCExText@@A ; g_ExText
  007cb	e8 00 00 00 00	 call	 ?GetText@CExText@@QAEPADH@Z ; CExText::GetText
  007d0	50		 push	 eax
  007d1	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  007d4	50		 push	 eax
  007d5	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  007da	83 c4 0c	 add	 esp, 12			; 0000000cH

; 294  : 					lpObj->ExCred -= this->BuyPrice[i].Price;

  007dd	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  007e0	6b c0 14	 imul	 eax, 20			; 00000014H
  007e3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  007e6	db 84 01 1c 28
	00 00		 fild	 DWORD PTR [ecx+eax+10268]
  007ed	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  007f0	d8 aa a8 22 00
	00		 fsubr	 DWORD PTR [edx+8872]
  007f6	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  007f9	d9 98 a8 22 00
	00		 fstp	 DWORD PTR [eax+8872]

; 295  : 					ExUserDataSend(lpObj->m_Index);

  007ff	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00802	8b 08		 mov	 ecx, DWORD PTR [eax]
  00804	51		 push	 ecx
  00805	e8 00 00 00 00	 call	 ?ExUserDataSend@@YAXH@Z	; ExUserDataSend
  0080a	83 c4 04	 add	 esp, 4

; 296  : 					iStoreTaxMoney = 0;

  0080d	8b 45 10	 mov	 eax, DWORD PTR _iStoreTaxMoney$[ebp]
  00810	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 297  : 				//}
; 298  : 				return true;

  00816	b0 01		 mov	 al, 1
  00818	e9 86 02 00 00	 jmp	 $LN20@BuyPriceIt
  0081d	e9 7a 02 00 00	 jmp	 $LN2@BuyPriceIt
$LN11@BuyPriceIt:

; 299  : 			}
; 300  : 			else if(this->BuyPrice[i].PriceType == 2)	//WcoinC

  00822	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  00825	6b c0 14	 imul	 eax, 20			; 00000014H
  00828	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0082b	83 bc 01 18 28
	00 00 02	 cmp	 DWORD PTR [ecx+eax+10264], 2
  00833	0f 85 c0 00 00
	00		 jne	 $LN8@BuyPriceIt

; 301  : 			{
; 302  : 				if(this->BuyPrice[i].Price > lpObj->GameShop.WCoinC)

  00839	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  0083c	6b c0 14	 imul	 eax, 20			; 00000014H
  0083f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00842	db 84 01 1c 28
	00 00		 fild	 DWORD PTR [ecx+eax+10268]
  00849	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0084c	dc 9a 00 23 00
	00		 fcomp	 QWORD PTR [edx+8960]
  00852	df e0		 fnstsw	 ax
  00854	f6 c4 41	 test	 ah, 65			; 00000041H
  00857	75 31		 jne	 SHORT $LN7@BuyPriceIt

; 303  : 				{
; 304  : 					MsgNormal(aIndex,g_ExText.GetText(82),this->BuyPrice[i].Price);

  00859	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  0085c	6b c0 14	 imul	 eax, 20			; 00000014H
  0085f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00862	8b 94 01 1c 28
	00 00		 mov	 edx, DWORD PTR [ecx+eax+10268]
  00869	52		 push	 edx
  0086a	6a 52		 push	 82			; 00000052H
  0086c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExText@@3VCExText@@A ; g_ExText
  00871	e8 00 00 00 00	 call	 ?GetText@CExText@@QAEPADH@Z ; CExText::GetText
  00876	50		 push	 eax
  00877	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0087a	50		 push	 eax
  0087b	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00880	83 c4 0c	 add	 esp, 12			; 0000000cH

; 305  : 					return false;

  00883	32 c0		 xor	 al, al
  00885	e9 19 02 00 00	 jmp	 $LN20@BuyPriceIt
$LN7@BuyPriceIt:

; 306  : 				}
; 307  : 				MsgNormal(aIndex,g_ExText.GetText(83),this->BuyPrice[i].Price);

  0088a	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  0088d	6b c0 14	 imul	 eax, 20			; 00000014H
  00890	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00893	8b 94 01 1c 28
	00 00		 mov	 edx, DWORD PTR [ecx+eax+10268]
  0089a	52		 push	 edx
  0089b	6a 53		 push	 83			; 00000053H
  0089d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExText@@3VCExText@@A ; g_ExText
  008a2	e8 00 00 00 00	 call	 ?GetText@CExText@@QAEPADH@Z ; CExText::GetText
  008a7	50		 push	 eax
  008a8	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  008ab	50		 push	 eax
  008ac	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  008b1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 308  : 				lpObj->GameShop.WCoinC -= this->BuyPrice[i].Price;

  008b4	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  008b7	6b c0 14	 imul	 eax, 20			; 00000014H
  008ba	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008bd	db 84 01 1c 28
	00 00		 fild	 DWORD PTR [ecx+eax+10268]
  008c4	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  008c7	dc aa 00 23 00
	00		 fsubr	 QWORD PTR [edx+8960]
  008cd	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  008d0	dd 98 00 23 00
	00		 fstp	 QWORD PTR [eax+8960]

; 309  : 				gGameShop.GDSaveUserInfo(aIndex);

  008d6	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  008d9	50		 push	 eax
  008da	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  008df	e8 00 00 00 00	 call	 ?GDSaveUserInfo@GameShop@@QAEXH@Z ; GameShop::GDSaveUserInfo

; 310  : 				iStoreTaxMoney = 0;

  008e4	8b 45 10	 mov	 eax, DWORD PTR _iStoreTaxMoney$[ebp]
  008e7	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 311  : 				return true;

  008ed	b0 01		 mov	 al, 1
  008ef	e9 af 01 00 00	 jmp	 $LN20@BuyPriceIt
  008f4	e9 a3 01 00 00	 jmp	 $LN2@BuyPriceIt
$LN8@BuyPriceIt:

; 312  : 			}
; 313  : 			else if(this->BuyPrice[i].PriceType == 3)	//Wcoin

  008f9	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  008fc	6b c0 14	 imul	 eax, 20			; 00000014H
  008ff	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00902	83 bc 01 18 28
	00 00 03	 cmp	 DWORD PTR [ecx+eax+10264], 3
  0090a	0f 85 c0 00 00
	00		 jne	 $LN5@BuyPriceIt

; 314  : 			{
; 315  : 				if(this->BuyPrice[i].Price > lpObj->GameShop.WCoinP)

  00910	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  00913	6b c0 14	 imul	 eax, 20			; 00000014H
  00916	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00919	db 84 01 1c 28
	00 00		 fild	 DWORD PTR [ecx+eax+10268]
  00920	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00923	dc 9a f8 22 00
	00		 fcomp	 QWORD PTR [edx+8952]
  00929	df e0		 fnstsw	 ax
  0092b	f6 c4 41	 test	 ah, 65			; 00000041H
  0092e	75 31		 jne	 SHORT $LN4@BuyPriceIt

; 316  : 				{
; 317  : 					MsgNormal(aIndex,g_ExText.GetText(84),this->BuyPrice[i].Price);

  00930	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  00933	6b c0 14	 imul	 eax, 20			; 00000014H
  00936	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00939	8b 94 01 1c 28
	00 00		 mov	 edx, DWORD PTR [ecx+eax+10268]
  00940	52		 push	 edx
  00941	6a 54		 push	 84			; 00000054H
  00943	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExText@@3VCExText@@A ; g_ExText
  00948	e8 00 00 00 00	 call	 ?GetText@CExText@@QAEPADH@Z ; CExText::GetText
  0094d	50		 push	 eax
  0094e	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00951	50		 push	 eax
  00952	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00957	83 c4 0c	 add	 esp, 12			; 0000000cH

; 318  : 					return false;

  0095a	32 c0		 xor	 al, al
  0095c	e9 42 01 00 00	 jmp	 $LN20@BuyPriceIt
$LN4@BuyPriceIt:

; 319  : 				}
; 320  : 				MsgNormal(aIndex,g_ExText.GetText(85),this->BuyPrice[i].Price);

  00961	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  00964	6b c0 14	 imul	 eax, 20			; 00000014H
  00967	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0096a	8b 94 01 1c 28
	00 00		 mov	 edx, DWORD PTR [ecx+eax+10268]
  00971	52		 push	 edx
  00972	6a 55		 push	 85			; 00000055H
  00974	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExText@@3VCExText@@A ; g_ExText
  00979	e8 00 00 00 00	 call	 ?GetText@CExText@@QAEPADH@Z ; CExText::GetText
  0097e	50		 push	 eax
  0097f	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00982	50		 push	 eax
  00983	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00988	83 c4 0c	 add	 esp, 12			; 0000000cH

; 321  : 				lpObj->GameShop.WCoinP -= this->BuyPrice[i].Price;

  0098b	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  0098e	6b c0 14	 imul	 eax, 20			; 00000014H
  00991	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00994	db 84 01 1c 28
	00 00		 fild	 DWORD PTR [ecx+eax+10268]
  0099b	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0099e	dc aa f8 22 00
	00		 fsubr	 QWORD PTR [edx+8952]
  009a4	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  009a7	dd 98 f8 22 00
	00		 fstp	 QWORD PTR [eax+8952]

; 322  : 				gGameShop.GDSaveUserInfo(aIndex);

  009ad	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  009b0	50		 push	 eax
  009b1	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  009b6	e8 00 00 00 00	 call	 ?GDSaveUserInfo@GameShop@@QAEXH@Z ; GameShop::GDSaveUserInfo

; 323  : 				iStoreTaxMoney = 0;

  009bb	8b 45 10	 mov	 eax, DWORD PTR _iStoreTaxMoney$[ebp]
  009be	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 324  : 				return true;

  009c4	b0 01		 mov	 al, 1
  009c6	e9 d8 00 00 00	 jmp	 $LN20@BuyPriceIt
  009cb	e9 cc 00 00 00	 jmp	 $LN2@BuyPriceIt
$LN5@BuyPriceIt:

; 325  : 			}
; 326  : 			else if(this->BuyPrice[i].PriceType == 4)	//Wcoin

  009d0	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  009d3	6b c0 14	 imul	 eax, 20			; 00000014H
  009d6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009d9	83 bc 01 18 28
	00 00 04	 cmp	 DWORD PTR [ecx+eax+10264], 4
  009e1	0f 85 b5 00 00
	00		 jne	 $LN2@BuyPriceIt

; 327  : 			{
; 328  : 				if(this->BuyPrice[i].Price > lpObj->GameShop.GoblinPoint)

  009e7	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  009ea	6b c0 14	 imul	 eax, 20			; 00000014H
  009ed	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009f0	db 84 01 1c 28
	00 00		 fild	 DWORD PTR [ecx+eax+10268]
  009f7	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  009fa	dc 9a 08 23 00
	00		 fcomp	 QWORD PTR [edx+8968]
  00a00	df e0		 fnstsw	 ax
  00a02	f6 c4 41	 test	 ah, 65			; 00000041H
  00a05	75 2e		 jne	 SHORT $LN1@BuyPriceIt

; 329  : 				{
; 330  : 					MsgNormal(aIndex,g_ExText.GetText(86),this->BuyPrice[i].Price);

  00a07	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  00a0a	6b c0 14	 imul	 eax, 20			; 00000014H
  00a0d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a10	8b 94 01 1c 28
	00 00		 mov	 edx, DWORD PTR [ecx+eax+10268]
  00a17	52		 push	 edx
  00a18	6a 56		 push	 86			; 00000056H
  00a1a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExText@@3VCExText@@A ; g_ExText
  00a1f	e8 00 00 00 00	 call	 ?GetText@CExText@@QAEPADH@Z ; CExText::GetText
  00a24	50		 push	 eax
  00a25	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00a28	50		 push	 eax
  00a29	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00a2e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 331  : 					return false;

  00a31	32 c0		 xor	 al, al
  00a33	eb 6e		 jmp	 SHORT $LN20@BuyPriceIt
$LN1@BuyPriceIt:

; 332  : 				}
; 333  : 				MsgNormal(aIndex,g_ExText.GetText(87),this->BuyPrice[i].Price);

  00a35	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  00a38	6b c0 14	 imul	 eax, 20			; 00000014H
  00a3b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a3e	8b 94 01 1c 28
	00 00		 mov	 edx, DWORD PTR [ecx+eax+10268]
  00a45	52		 push	 edx
  00a46	6a 57		 push	 87			; 00000057H
  00a48	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExText@@3VCExText@@A ; g_ExText
  00a4d	e8 00 00 00 00	 call	 ?GetText@CExText@@QAEPADH@Z ; CExText::GetText
  00a52	50		 push	 eax
  00a53	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00a56	50		 push	 eax
  00a57	e8 00 00 00 00	 call	 ?MsgNormal@@YAXHPADZZ	; MsgNormal
  00a5c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 334  : 				lpObj->GameShop.GoblinPoint -= this->BuyPrice[i].Price;

  00a5f	8b 45 f4	 mov	 eax, DWORD PTR _i$220514[ebp]
  00a62	6b c0 14	 imul	 eax, 20			; 00000014H
  00a65	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a68	db 84 01 1c 28
	00 00		 fild	 DWORD PTR [ecx+eax+10268]
  00a6f	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00a72	dc aa 08 23 00
	00		 fsubr	 QWORD PTR [edx+8968]
  00a78	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00a7b	dd 98 08 23 00
	00		 fstp	 QWORD PTR [eax+8968]

; 335  : 				gGameShop.GDSaveUserInfo(aIndex);

  00a81	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00a84	50		 push	 eax
  00a85	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  00a8a	e8 00 00 00 00	 call	 ?GDSaveUserInfo@GameShop@@QAEXH@Z ; GameShop::GDSaveUserInfo

; 336  : 				iStoreTaxMoney = 0;

  00a8f	8b 45 10	 mov	 eax, DWORD PTR _iStoreTaxMoney$[ebp]
  00a92	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 337  : 				return true;

  00a98	b0 01		 mov	 al, 1
  00a9a	eb 07		 jmp	 SHORT $LN20@BuyPriceIt
$LN2@BuyPriceIt:

; 338  : 			}
; 339  : 		}
; 340  : 	}

  00a9c	e9 e5 fb ff ff	 jmp	 $LN17@BuyPriceIt
$LN16@BuyPriceIt:

; 341  : 
; 342  : 	return true;

  00aa1	b0 01		 mov	 al, 1
$LN20@BuyPriceIt:

; 343  : }

  00aa3	5f		 pop	 edi
  00aa4	5e		 pop	 esi
  00aa5	5b		 pop	 ebx
  00aa6	8b e5		 mov	 esp, ebp
  00aa8	5d		 pop	 ebp
  00aa9	c2 10 00	 ret	 16			; 00000010H
?BuyPriceItem@cPriceManager@@QAE_NHHAAHH@Z ENDP		; cPriceManager::BuyPriceItem
_TEXT	ENDS
PUBLIC	??_C@_03JBJLGPFL@end?$AA@			; `string'
PUBLIC	??_C@_0BE@DLABEGHF@?$CFs?5?9?5file?5nor?5found?$AA@ ; `string'
EXTRN	_strcmp:PROC
EXTRN	__imp__ExitProcess@4:PROC
EXTRN	?MsgBox@@YAXPADZZ:PROC				; MsgBox
EXTRN	__ftol2_sse:PROC
_BSS	SEGMENT
_TokenString DB	064H DUP (?)
_TokenNumber DD	01H DUP (?)
_SMDFile DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_03JBJLGPFL@end?$AA@
CONST	SEGMENT
??_C@_03JBJLGPFL@end?$AA@ DB 'end', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DLABEGHF@?$CFs?5?9?5file?5nor?5found?$AA@
CONST	SEGMENT
??_C@_0BE@DLABEGHF@?$CFs?5?9?5file?5nor?5found?$AA@ DB '%s - file nor fou'
	DB	'nd', 00H					; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_Category$ = -12					; size = 4
_Token$ = -8						; size = 4
_this$ = -4						; size = 4
_File$ = 8						; size = 4
?ReadList@cPriceManager@@QAEXPAD@Z PROC			; cPriceManager::ReadList
; _this$ = ecx

; 376  : {

  00ab0	55		 push	 ebp
  00ab1	8b ec		 mov	 ebp, esp
  00ab3	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00ab6	53		 push	 ebx
  00ab7	56		 push	 esi
  00ab8	57		 push	 edi
  00ab9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 377  : 	//this->Init();
; 378  : 	int Token;
; 379  : 	// ----
; 380  : 	SMDFile = fopen(File, "r");

  00abc	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  00ac1	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  00ac4	50		 push	 eax
  00ac5	e8 00 00 00 00	 call	 _fopen
  00aca	83 c4 08	 add	 esp, 8
  00acd	a3 00 00 00 00	 mov	 DWORD PTR _SMDFile, eax

; 381  : 	// ----
; 382  : 	if (!SMDFile)

  00ad2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _SMDFile, 0
  00ad9	75 1e		 jne	 SHORT $LN17@ReadList

; 383  : 	{
; 384  : 		MsgBox("%s - file nor found", File);

  00adb	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  00ade	50		 push	 eax
  00adf	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@DLABEGHF@?$CFs?5?9?5file?5nor?5found?$AA@
  00ae4	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00ae9	83 c4 08	 add	 esp, 8

; 385  : 		ExitProcess(0);

  00aec	6a 00		 push	 0
  00aee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ExitProcess@4

; 386  : 		return;

  00af4	e9 e5 02 00 00	 jmp	 $LN18@ReadList
$LN17@ReadList:

; 387  : 	}
; 388  : 	// ----
; 389  : 	int Category = -1;

  00af9	c7 45 f4 ff ff
	ff ff		 mov	 DWORD PTR _Category$[ebp], -1
$LN20@ReadList:

; 390  : 	// ----
; 391  : 	while (true)

  00b00	b8 01 00 00 00	 mov	 eax, 1
  00b05	85 c0		 test	 eax, eax
  00b07	0f 84 c3 02 00
	00		 je	 $LN15@ReadList

; 392  : 	{
; 393  : 		Token = GetToken();

  00b0d	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00b12	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 394  : 		// ----
; 395  : 		if (Token == END)

  00b15	83 7d f8 02	 cmp	 DWORD PTR _Token$[ebp], 2
  00b19	75 05		 jne	 SHORT $LN14@ReadList

; 396  : 		{
; 397  : 			break;

  00b1b	e9 b0 02 00 00	 jmp	 $LN15@ReadList
$LN14@ReadList:

; 398  : 		}
; 399  : 		// ----
; 400  : 		if (Token != NUMBER)

  00b20	83 7d f8 01	 cmp	 DWORD PTR _Token$[ebp], 1
  00b24	74 02		 je	 SHORT $LN13@ReadList

; 401  : 		{
; 402  : 			continue;

  00b26	eb d8		 jmp	 SHORT $LN20@ReadList
$LN13@ReadList:

; 403  : 		}
; 404  : 		// ----
; 405  : 		Category = TokenNumber;

  00b28	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00b2e	e8 00 00 00 00	 call	 __ftol2_sse
  00b33	89 45 f4	 mov	 DWORD PTR _Category$[ebp], eax
$LN12@ReadList:

; 406  : 		// ----
; 407  : 		while (true)

  00b36	b8 01 00 00 00	 mov	 eax, 1
  00b3b	85 c0		 test	 eax, eax
  00b3d	0f 84 88 02 00
	00		 je	 $LN11@ReadList

; 408  : 		{
; 409  : 			if (Category == 0)

  00b43	83 7d f4 00	 cmp	 DWORD PTR _Category$[ebp], 0
  00b47	75 51		 jne	 SHORT $LN10@ReadList

; 410  : 			{
; 411  : 				Token = GetToken();

  00b49	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00b4e	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 412  : 				// ----
; 413  : 				if (strcmp("end", TokenString) == NULL)

  00b51	68 00 00 00 00	 push	 OFFSET _TokenString
  00b56	68 00 00 00 00	 push	 OFFSET ??_C@_03JBJLGPFL@end?$AA@
  00b5b	e8 00 00 00 00	 call	 _strcmp
  00b60	83 c4 08	 add	 esp, 8
  00b63	85 c0		 test	 eax, eax
  00b65	75 05		 jne	 SHORT $LN9@ReadList

; 414  : 				{
; 415  : 					break;

  00b67	e9 5f 02 00 00	 jmp	 $LN11@ReadList
$LN9@ReadList:

; 416  : 				}
; 417  : 				// ----
; 418  : 				this->Enable = TokenNumber;

  00b6c	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00b72	e8 00 00 00 00	 call	 __ftol2_sse
  00b77	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b7a	89 01		 mov	 DWORD PTR [ecx], eax

; 419  : 				// ----
; 420  : 				Token = GetToken();

  00b7c	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00b81	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 421  : 				this->AllSellNull = TokenNumber;

  00b84	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00b8a	e8 00 00 00 00	 call	 __ftol2_sse
  00b8f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b92	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00b95	e9 2c 02 00 00	 jmp	 $LN3@ReadList
$LN10@ReadList:

; 422  : 			}
; 423  : 			else if (Category == 1)	//-> Sell List	//-> Need Check Dev

  00b9a	83 7d f4 01	 cmp	 DWORD PTR _Category$[ebp], 1
  00b9e	0f 85 07 01 00
	00		 jne	 $LN7@ReadList

; 424  : 			{
; 425  : 				Token = GetToken();

  00ba4	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00ba9	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 426  : 				// ----
; 427  : 				if (strcmp("end", TokenString) == NULL)

  00bac	68 00 00 00 00	 push	 OFFSET _TokenString
  00bb1	68 00 00 00 00	 push	 OFFSET ??_C@_03JBJLGPFL@end?$AA@
  00bb6	e8 00 00 00 00	 call	 _strcmp
  00bbb	83 c4 08	 add	 esp, 8
  00bbe	85 c0		 test	 eax, eax
  00bc0	75 05		 jne	 SHORT $LN6@ReadList

; 428  : 				{
; 429  : 					break;

  00bc2	e9 04 02 00 00	 jmp	 $LN11@ReadList
$LN6@ReadList:

; 430  : 				}
; 431  : 				// ----
; 432  : 				if (this->sCount >= MAX_PRICE_ITEM)

  00bc7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00bca	81 b8 08 28 00
	00 00 02 00 00	 cmp	 DWORD PTR [eax+10248], 512 ; 00000200H
  00bd4	7c 05		 jl	 SHORT $LN5@ReadList

; 433  : 				{
; 434  : 					break;

  00bd6	e9 f0 01 00 00	 jmp	 $LN11@ReadList
$LN5@ReadList:

; 435  : 				}
; 436  : 				// ----
; 437  : 				this->SellPrice[this->sCount].Type = TokenNumber;

  00bdb	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00be1	e8 00 00 00 00	 call	 __ftol2_sse
  00be6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00be9	8b 91 08 28 00
	00		 mov	 edx, DWORD PTR [ecx+10248]
  00bef	6b d2 14	 imul	 edx, 20			; 00000014H
  00bf2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00bf5	89 44 11 08	 mov	 DWORD PTR [ecx+edx+8], eax

; 438  : 				// ----
; 439  : 				Token = GetToken();

  00bf9	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00bfe	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 440  : 				this->SellPrice[this->sCount].Index = TokenNumber;

  00c01	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00c07	e8 00 00 00 00	 call	 __ftol2_sse
  00c0c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c0f	8b 91 08 28 00
	00		 mov	 edx, DWORD PTR [ecx+10248]
  00c15	6b d2 14	 imul	 edx, 20			; 00000014H
  00c18	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c1b	89 44 11 0c	 mov	 DWORD PTR [ecx+edx+12], eax

; 441  : 				// ----
; 442  : 				Token = GetToken();

  00c1f	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00c24	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 443  : 				this->SellPrice[this->sCount].Level = TokenNumber;

  00c27	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00c2d	e8 00 00 00 00	 call	 __ftol2_sse
  00c32	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c35	8b 91 08 28 00
	00		 mov	 edx, DWORD PTR [ecx+10248]
  00c3b	6b d2 14	 imul	 edx, 20			; 00000014H
  00c3e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c41	89 44 11 10	 mov	 DWORD PTR [ecx+edx+16], eax

; 444  : 				// ----
; 445  : 				Token = GetToken();

  00c45	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00c4a	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 446  : 				this->SellPrice[this->sCount].PriceType = TokenNumber;

  00c4d	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00c53	e8 00 00 00 00	 call	 __ftol2_sse
  00c58	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c5b	8b 91 08 28 00
	00		 mov	 edx, DWORD PTR [ecx+10248]
  00c61	6b d2 14	 imul	 edx, 20			; 00000014H
  00c64	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c67	89 44 11 14	 mov	 DWORD PTR [ecx+edx+20], eax

; 447  : 				// ----
; 448  : 				Token = GetToken();

  00c6b	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00c70	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 449  : 				this->SellPrice[this->sCount].Price = TokenNumber;

  00c73	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00c79	e8 00 00 00 00	 call	 __ftol2_sse
  00c7e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c81	8b 91 08 28 00
	00		 mov	 edx, DWORD PTR [ecx+10248]
  00c87	6b d2 14	 imul	 edx, 20			; 00000014H
  00c8a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c8d	89 44 11 18	 mov	 DWORD PTR [ecx+edx+24], eax

; 450  : 				// ----
; 451  : 				this->sCount++;

  00c91	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00c94	8b 88 08 28 00
	00		 mov	 ecx, DWORD PTR [eax+10248]
  00c9a	83 c1 01	 add	 ecx, 1
  00c9d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00ca0	89 8a 08 28 00
	00		 mov	 DWORD PTR [edx+10248], ecx
  00ca6	e9 1b 01 00 00	 jmp	 $LN3@ReadList
$LN7@ReadList:

; 452  : 			}
; 453  : 			else if (Category == 2)	//-> Buy List	//-> Need Check	Dev

  00cab	83 7d f4 02	 cmp	 DWORD PTR _Category$[ebp], 2
  00caf	0f 85 11 01 00
	00		 jne	 $LN3@ReadList

; 454  : 			{
; 455  : 				Token = GetToken();

  00cb5	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00cba	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 456  : 				// ----
; 457  : 				if (strcmp("end", TokenString) == NULL)

  00cbd	68 00 00 00 00	 push	 OFFSET _TokenString
  00cc2	68 00 00 00 00	 push	 OFFSET ??_C@_03JBJLGPFL@end?$AA@
  00cc7	e8 00 00 00 00	 call	 _strcmp
  00ccc	83 c4 08	 add	 esp, 8
  00ccf	85 c0		 test	 eax, eax
  00cd1	75 05		 jne	 SHORT $LN2@ReadList

; 458  : 				{
; 459  : 					break;

  00cd3	e9 f3 00 00 00	 jmp	 $LN11@ReadList
$LN2@ReadList:

; 460  : 				}
; 461  : 				// ----
; 462  : 				if (this->bCount >= MAX_PRICE_ITEM)

  00cd8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00cdb	81 b8 0c 50 00
	00 00 02 00 00	 cmp	 DWORD PTR [eax+20492], 512 ; 00000200H
  00ce5	7c 05		 jl	 SHORT $LN1@ReadList

; 463  : 				{
; 464  : 					break;

  00ce7	e9 df 00 00 00	 jmp	 $LN11@ReadList
$LN1@ReadList:

; 465  : 				}
; 466  : 				// ----
; 467  : 				this->BuyPrice[this->bCount].Type = TokenNumber;

  00cec	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00cf2	e8 00 00 00 00	 call	 __ftol2_sse
  00cf7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00cfa	8b 91 0c 50 00
	00		 mov	 edx, DWORD PTR [ecx+20492]
  00d00	6b d2 14	 imul	 edx, 20			; 00000014H
  00d03	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d06	89 84 11 0c 28
	00 00		 mov	 DWORD PTR [ecx+edx+10252], eax

; 468  : 				// ----
; 469  : 				Token = GetToken();

  00d0d	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00d12	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 470  : 				this->BuyPrice[this->bCount].Index = TokenNumber;

  00d15	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00d1b	e8 00 00 00 00	 call	 __ftol2_sse
  00d20	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d23	8b 91 0c 50 00
	00		 mov	 edx, DWORD PTR [ecx+20492]
  00d29	6b d2 14	 imul	 edx, 20			; 00000014H
  00d2c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d2f	89 84 11 10 28
	00 00		 mov	 DWORD PTR [ecx+edx+10256], eax

; 471  : 				// ----
; 472  : 				Token = GetToken();

  00d36	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00d3b	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 473  : 				this->BuyPrice[this->bCount].Level = TokenNumber;

  00d3e	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00d44	e8 00 00 00 00	 call	 __ftol2_sse
  00d49	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d4c	8b 91 0c 50 00
	00		 mov	 edx, DWORD PTR [ecx+20492]
  00d52	6b d2 14	 imul	 edx, 20			; 00000014H
  00d55	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d58	89 84 11 14 28
	00 00		 mov	 DWORD PTR [ecx+edx+10260], eax

; 474  : 				// ----
; 475  : 				Token = GetToken();

  00d5f	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00d64	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 476  : 				this->BuyPrice[this->bCount].PriceType = TokenNumber;

  00d67	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00d6d	e8 00 00 00 00	 call	 __ftol2_sse
  00d72	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d75	8b 91 0c 50 00
	00		 mov	 edx, DWORD PTR [ecx+20492]
  00d7b	6b d2 14	 imul	 edx, 20			; 00000014H
  00d7e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d81	89 84 11 18 28
	00 00		 mov	 DWORD PTR [ecx+edx+10264], eax

; 477  : 				// ----
; 478  : 				Token = GetToken();

  00d88	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00d8d	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 479  : 				this->BuyPrice[this->bCount].Price = TokenNumber;

  00d90	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00d96	e8 00 00 00 00	 call	 __ftol2_sse
  00d9b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d9e	8b 91 0c 50 00
	00		 mov	 edx, DWORD PTR [ecx+20492]
  00da4	6b d2 14	 imul	 edx, 20			; 00000014H
  00da7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00daa	89 84 11 1c 28
	00 00		 mov	 DWORD PTR [ecx+edx+10268], eax

; 480  : 				// ----
; 481  : 				this->bCount++;

  00db1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00db4	8b 88 0c 50 00
	00		 mov	 ecx, DWORD PTR [eax+20492]
  00dba	83 c1 01	 add	 ecx, 1
  00dbd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00dc0	89 8a 0c 50 00
	00		 mov	 DWORD PTR [edx+20492], ecx
$LN3@ReadList:

; 482  : 			}
; 483  : 		}

  00dc6	e9 6b fd ff ff	 jmp	 $LN12@ReadList
$LN11@ReadList:

; 484  : 	}

  00dcb	e9 30 fd ff ff	 jmp	 $LN20@ReadList
$LN15@ReadList:

; 485  : 	// ----
; 486  : 	fclose(SMDFile);

  00dd0	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00dd5	50		 push	 eax
  00dd6	e8 00 00 00 00	 call	 _fclose
  00ddb	83 c4 04	 add	 esp, 4
$LN18@ReadList:

; 487  : }

  00dde	5f		 pop	 edi
  00ddf	5e		 pop	 esi
  00de0	5b		 pop	 ebx
  00de1	8b e5		 mov	 esp, ebp
  00de3	5d		 pop	 ebp
  00de4	c2 04 00	 ret	 4
?ReadList@cPriceManager@@QAEXPAD@Z ENDP			; cPriceManager::ReadList
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_isalnum:PROC
EXTRN	_isalpha:PROC
EXTRN	_atof:PROC
EXTRN	_isdigit:PROC
EXTRN	_getc:PROC
EXTRN	_ungetc:PROC
EXTRN	_isspace:PROC
EXTRN	_fgetc:PROC
_BSS	SEGMENT
_CurrentToken DD 01H DUP (?)
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\include\readscript.h
_BSS	ENDS
_TEXT	SEGMENT
tv90 = -180						; size = 4
_TempString$ = -112					; size = 100
_p$ = -12						; size = 4
_ch$ = -5						; size = 1
__$ArrayPad$ = -4					; size = 4
?GetToken@@YA?AW4SMDToken@@XZ PROC			; GetToken

; 24   : {

  00df0	55		 push	 ebp
  00df1	8b ec		 mov	 ebp, esp
  00df3	81 ec b4 00 00
	00		 sub	 esp, 180		; 000000b4H
  00df9	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00dfe	33 c5		 xor	 eax, ebp
  00e00	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00e03	53		 push	 ebx
  00e04	56		 push	 esi
  00e05	57		 push	 edi

; 25   : 	char ch;
; 26   : 	char* p;
; 27   : 	char TempString[100];
; 28   : 
; 29   : 	TokenString[0]=0;

  00e06	c6 05 00 00 00
	00 00		 mov	 BYTE PTR _TokenString, 0
$LN31@GetToken:

; 30   : 
; 31   : 	do
; 32   : 	{
; 33   : 		if ((ch=fgetc(SMDFile)) == -1)

  00e0d	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00e12	50		 push	 eax
  00e13	e8 00 00 00 00	 call	 _fgetc
  00e18	83 c4 04	 add	 esp, 4
  00e1b	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  00e1e	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00e22	83 f9 ff	 cmp	 ecx, -1
  00e25	75 0c		 jne	 SHORT $LN28@GetToken

; 34   : 		{
; 35   : 			return END;	// End of FILE (EOF)

  00e27	b8 02 00 00 00	 mov	 eax, 2
  00e2c	e9 f7 02 00 00	 jmp	 $LN32@GetToken

; 36   : 		}
; 37   : 		else

  00e31	eb 5b		 jmp	 SHORT $LN22@GetToken
$LN28@GetToken:

; 38   : 		{	
; 39   : 			if (ch=='/')		// this is /

  00e33	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00e37	83 f8 2f	 cmp	 eax, 47			; 0000002fH
  00e3a	75 52		 jne	 SHORT $LN22@GetToken

; 40   : 			{
; 41   : 				if((ch=fgetc(SMDFile)) == '/')

  00e3c	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00e41	50		 push	 eax
  00e42	e8 00 00 00 00	 call	 _fgetc
  00e47	83 c4 04	 add	 esp, 4
  00e4a	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  00e4d	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00e51	83 f9 2f	 cmp	 ecx, 47			; 0000002fH
  00e54	75 38		 jne	 SHORT $LN22@GetToken
$LN24@GetToken:

; 42   : 				{
; 43   : 					while ((ch != '\n') && (ch != -1))	// End of Line (EOL)

  00e56	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00e5a	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00e5d	74 1c		 je	 SHORT $LN23@GetToken
  00e5f	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00e63	83 f8 ff	 cmp	 eax, -1
  00e66	74 13		 je	 SHORT $LN23@GetToken

; 44   : 					{
; 45   : 						ch=fgetc(SMDFile);

  00e68	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00e6d	50		 push	 eax
  00e6e	e8 00 00 00 00	 call	 _fgetc
  00e73	83 c4 04	 add	 esp, 4
  00e76	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al

; 46   : 					}

  00e79	eb db		 jmp	 SHORT $LN24@GetToken
$LN23@GetToken:

; 47   : 	
; 48   : 					if (ch == -1)

  00e7b	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00e7f	83 f8 ff	 cmp	 eax, -1
  00e82	75 0a		 jne	 SHORT $LN22@GetToken

; 49   : 					{
; 50   : 						return END;	// End of FILE

  00e84	b8 02 00 00 00	 mov	 eax, 2
  00e89	e9 9a 02 00 00	 jmp	 $LN32@GetToken
$LN22@GetToken:

; 51   : 					}
; 52   : 				}
; 53   : 			}
; 54   : 		}
; 55   : 	}
; 56   : 	while (isspace(ch) != 0);

  00e8e	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00e92	50		 push	 eax
  00e93	e8 00 00 00 00	 call	 _isspace
  00e98	83 c4 04	 add	 esp, 4
  00e9b	85 c0		 test	 eax, eax
  00e9d	0f 85 6a ff ff
	ff		 jne	 $LN31@GetToken

; 57   : 
; 58   : 	
; 59   : 	switch(ch)

  00ea3	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00ea7	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv90[ebp], eax
  00ead	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR tv90[ebp]
  00eb3	83 e9 22	 sub	 ecx, 34			; 00000022H
  00eb6	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv90[ebp], ecx
  00ebc	83 bd 4c ff ff
	ff 5b		 cmp	 DWORD PTR tv90[ebp], 91	; 0000005bH
  00ec3	0f 87 a3 01 00
	00		 ja	 $LN6@GetToken
  00ec9	8b 95 4c ff ff
	ff		 mov	 edx, DWORD PTR tv90[ebp]
  00ecf	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN34@GetToken[edx]
  00ed6	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN35@GetToken[eax*4]
$LN19@GetToken:

; 60   : 	{
; 61   : 
; 62   : 	case 0x23:	// #
; 63   : 		return CurrentToken=COMMAND;

  00edd	c7 05 00 00 00
	00 23 00 00 00	 mov	 DWORD PTR _CurrentToken, 35 ; 00000023H
  00ee7	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00eec	e9 37 02 00 00	 jmp	 $LN32@GetToken

; 64   : 		break;

  00ef1	e9 30 02 00 00	 jmp	 $LN20@GetToken
$LN18@GetToken:

; 65   : 	
; 66   : 	case 0x3B:	// ;
; 67   : 		return CurrentToken=SEMICOLON;

  00ef6	c7 05 00 00 00
	00 3b 00 00 00	 mov	 DWORD PTR _CurrentToken, 59 ; 0000003bH
  00f00	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00f05	e9 1e 02 00 00	 jmp	 $LN32@GetToken

; 68   : 		break;

  00f0a	e9 17 02 00 00	 jmp	 $LN20@GetToken
$LN17@GetToken:

; 69   : 	
; 70   : 	case 0x2C:	// ,
; 71   : 
; 72   : 		return CurrentToken=COMMA;

  00f0f	c7 05 00 00 00
	00 2c 00 00 00	 mov	 DWORD PTR _CurrentToken, 44 ; 0000002cH
  00f19	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00f1e	e9 05 02 00 00	 jmp	 $LN32@GetToken

; 73   : 		break;

  00f23	e9 fe 01 00 00	 jmp	 $LN20@GetToken
$LN16@GetToken:

; 74   : 	
; 75   : 	case 0x7B:	// {
; 76   : 		return CurrentToken = LP;

  00f28	c7 05 00 00 00
	00 7b 00 00 00	 mov	 DWORD PTR _CurrentToken, 123 ; 0000007bH
  00f32	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00f37	e9 ec 01 00 00	 jmp	 $LN32@GetToken

; 77   : 		break;

  00f3c	e9 e5 01 00 00	 jmp	 $LN20@GetToken
$LN15@GetToken:

; 78   : 
; 79   : 	case 0x7D:	// }
; 80   : 		return CurrentToken = RP;

  00f41	c7 05 00 00 00
	00 7d 00 00 00	 mov	 DWORD PTR _CurrentToken, 125 ; 0000007dH
  00f4b	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00f50	e9 d3 01 00 00	 jmp	 $LN32@GetToken

; 81   : 		break;

  00f55	e9 cc 01 00 00	 jmp	 $LN20@GetToken
$LN14@GetToken:

; 82   : 	// Nice Index Table :)	by Deathway
; 83   : 	// Numbers Case
; 84   : 	case 0x2D:	//-
; 85   : 	case 0x2E:	//.
; 86   : 	case '0':	//0
; 87   : 	case '1':	//1
; 88   : 	case '2':	//2
; 89   : 	case '3':	//3
; 90   : 	case '4':	//4		
; 91   : 	case '5':	//5
; 92   : 	case '6':	//6
; 93   : 	case '7':	//7
; 94   : 	case '8':	//8
; 95   : 	case '9':	//9
; 96   : 		ungetc(ch, SMDFile);

  00f5a	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00f5f	50		 push	 eax
  00f60	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00f64	51		 push	 ecx
  00f65	e8 00 00 00 00	 call	 _ungetc
  00f6a	83 c4 08	 add	 esp, 8

; 97   : 		p = TempString;

  00f6d	8d 45 90	 lea	 eax, DWORD PTR _TempString$[ebp]
  00f70	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax
$LN13@GetToken:

; 98   : 		
; 99   : 		while (((ch=getc(SMDFile)) != -1) && ((ch == 0x2E) || (isdigit(ch) != 0) || (ch == 0x2D)))  // 2e '.'  2D '-'

  00f73	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00f78	50		 push	 eax
  00f79	e8 00 00 00 00	 call	 _getc
  00f7e	83 c4 04	 add	 esp, 4
  00f81	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  00f84	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00f88	83 f9 ff	 cmp	 ecx, -1
  00f8b	74 36		 je	 SHORT $LN12@GetToken
  00f8d	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00f91	83 f8 2e	 cmp	 eax, 46			; 0000002eH
  00f94	74 1a		 je	 SHORT $LN11@GetToken
  00f96	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00f9a	50		 push	 eax
  00f9b	e8 00 00 00 00	 call	 _isdigit
  00fa0	83 c4 04	 add	 esp, 4
  00fa3	85 c0		 test	 eax, eax
  00fa5	75 09		 jne	 SHORT $LN11@GetToken
  00fa7	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00fab	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  00fae	75 13		 jne	 SHORT $LN12@GetToken
$LN11@GetToken:

; 100  : 		{
; 101  : 			*p = ch;	// Construct a String

  00fb0	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00fb3	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  00fb6	88 08		 mov	 BYTE PTR [eax], cl

; 102  : 			p++;

  00fb8	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00fbb	83 c0 01	 add	 eax, 1
  00fbe	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 103  : 		}		

  00fc1	eb b0		 jmp	 SHORT $LN13@GetToken
$LN12@GetToken:

; 104  : 		*p = 0;

  00fc3	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00fc6	c6 00 00	 mov	 BYTE PTR [eax], 0

; 105  : 		TokenNumber = atof( TempString);	// Select the first Byte as Main ID

  00fc9	8d 45 90	 lea	 eax, DWORD PTR _TempString$[ebp]
  00fcc	50		 push	 eax
  00fcd	e8 00 00 00 00	 call	 _atof
  00fd2	83 c4 04	 add	 esp, 4
  00fd5	d9 1d 00 00 00
	00		 fstp	 DWORD PTR _TokenNumber

; 106  : 		return CurrentToken  = NUMBER ;

  00fdb	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _CurrentToken, 1
  00fe5	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00fea	e9 39 01 00 00	 jmp	 $LN32@GetToken

; 107  : 		break;

  00fef	e9 32 01 00 00	 jmp	 $LN20@GetToken
$LN10@GetToken:

; 108  : 
; 109  : 	case '\"':	// "	String Case
; 110  : 		p=&TokenString[0];

  00ff4	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], OFFSET _TokenString
$LN9@GetToken:

; 111  : 		
; 112  : 		while (((ch=getc(SMDFile)) != -1 ) && (ch != 0x22))	// nice

  00ffb	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  01000	50		 push	 eax
  01001	e8 00 00 00 00	 call	 _getc
  01006	83 c4 04	 add	 esp, 4
  01009	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  0100c	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  01010	83 f9 ff	 cmp	 ecx, -1
  01013	74 1c		 je	 SHORT $LN8@GetToken
  01015	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  01019	83 f8 22	 cmp	 eax, 34			; 00000022H
  0101c	74 13		 je	 SHORT $LN8@GetToken

; 113  : 		{
; 114  : 			*p = ch;

  0101e	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  01021	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  01024	88 08		 mov	 BYTE PTR [eax], cl

; 115  : 			p++;

  01026	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  01029	83 c0 01	 add	 eax, 1
  0102c	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 116  : 		}

  0102f	eb ca		 jmp	 SHORT $LN9@GetToken
$LN8@GetToken:

; 117  : 		if (ch != 0x22 )

  01031	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  01035	83 f8 22	 cmp	 eax, 34			; 00000022H
  01038	74 13		 je	 SHORT $LN7@GetToken

; 118  : 		{
; 119  : 			ungetc(ch, SMDFile);

  0103a	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0103f	50		 push	 eax
  01040	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  01044	51		 push	 ecx
  01045	e8 00 00 00 00	 call	 _ungetc
  0104a	83 c4 08	 add	 esp, 8
$LN7@GetToken:

; 120  : 		}
; 121  : 		*p = 0;

  0104d	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  01050	c6 00 00	 mov	 BYTE PTR [eax], 0

; 122  : 		return CurrentToken = NAME;

  01053	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _CurrentToken, 0
  0105d	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  01062	e9 c1 00 00 00	 jmp	 $LN32@GetToken

; 123  : 		break;

  01067	e9 ba 00 00 00	 jmp	 $LN20@GetToken
$LN6@GetToken:

; 124  : 
; 125  : 	default:	// Others
; 126  : 		if (isalpha(ch))

  0106c	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  01070	50		 push	 eax
  01071	e8 00 00 00 00	 call	 _isalpha
  01076	83 c4 04	 add	 esp, 4
  01079	85 c0		 test	 eax, eax
  0107b	0f 84 94 00 00
	00		 je	 $LN5@GetToken

; 127  : 		{
; 128  : 			p=&TokenString[0];

  01081	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], OFFSET _TokenString

; 129  : 			*p=ch;

  01088	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  0108b	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  0108e	88 08		 mov	 BYTE PTR [eax], cl

; 130  : 			p++;

  01090	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  01093	83 c0 01	 add	 eax, 1
  01096	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax
$LN4@GetToken:

; 131  : 
; 132  : 			while ( ((ch=getc(SMDFile)) != -1) && ( (ch == 0x2E) || (ch == 0x5F) || (isalnum(ch) != 0) ) )

  01099	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0109e	50		 push	 eax
  0109f	e8 00 00 00 00	 call	 _getc
  010a4	83 c4 04	 add	 esp, 4
  010a7	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  010aa	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  010ae	83 f9 ff	 cmp	 ecx, -1
  010b1	74 36		 je	 SHORT $LN3@GetToken
  010b3	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  010b7	83 f8 2e	 cmp	 eax, 46			; 0000002eH
  010ba	74 1a		 je	 SHORT $LN2@GetToken
  010bc	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  010c0	83 f8 5f	 cmp	 eax, 95			; 0000005fH
  010c3	74 11		 je	 SHORT $LN2@GetToken
  010c5	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  010c9	50		 push	 eax
  010ca	e8 00 00 00 00	 call	 _isalnum
  010cf	83 c4 04	 add	 esp, 4
  010d2	85 c0		 test	 eax, eax
  010d4	74 13		 je	 SHORT $LN3@GetToken
$LN2@GetToken:

; 133  : 			{
; 134  : 				*p=ch;

  010d6	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  010d9	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  010dc	88 08		 mov	 BYTE PTR [eax], cl

; 135  : 				p++;

  010de	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  010e1	83 c0 01	 add	 eax, 1
  010e4	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 136  : 				
; 137  : 			}

  010e7	eb b0		 jmp	 SHORT $LN4@GetToken
$LN3@GetToken:

; 138  : 
; 139  : 			ungetc(ch, SMDFile);

  010e9	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  010ee	50		 push	 eax
  010ef	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  010f3	51		 push	 ecx
  010f4	e8 00 00 00 00	 call	 _ungetc
  010f9	83 c4 08	 add	 esp, 8

; 140  : 			*p=0;

  010fc	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  010ff	c6 00 00	 mov	 BYTE PTR [eax], 0

; 141  : 			CurrentToken=NAME;

  01102	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _CurrentToken, 0

; 142  : 			return CurrentToken;

  0110c	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  01111	eb 15		 jmp	 SHORT $LN32@GetToken

; 143  : 		}
; 144  : 		else

  01113	eb 11		 jmp	 SHORT $LN1@GetToken
$LN5@GetToken:

; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'

  01115	c7 05 00 00 00
	00 3c 00 00 00	 mov	 DWORD PTR _CurrentToken, 60 ; 0000003cH
  0111f	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  01124	eb 02		 jmp	 SHORT $LN32@GetToken
$LN1@GetToken:
$LN20@GetToken:

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;

  01126	33 c0		 xor	 eax, eax
$LN32@GetToken:

; 153  : }

  01128	5f		 pop	 edi
  01129	5e		 pop	 esi
  0112a	5b		 pop	 ebx
  0112b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0112e	33 cd		 xor	 ecx, ebp
  01130	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01135	8b e5		 mov	 esp, ebp
  01137	5d		 pop	 ebp
  01138	c3		 ret	 0
  01139	8d 49 00	 npad	 3
$LN35@GetToken:
  0113c	00 00 00 00	 DD	 $LN10@GetToken
  01140	00 00 00 00	 DD	 $LN19@GetToken
  01144	00 00 00 00	 DD	 $LN17@GetToken
  01148	00 00 00 00	 DD	 $LN14@GetToken
  0114c	00 00 00 00	 DD	 $LN18@GetToken
  01150	00 00 00 00	 DD	 $LN16@GetToken
  01154	00 00 00 00	 DD	 $LN15@GetToken
  01158	00 00 00 00	 DD	 $LN6@GetToken
$LN34@GetToken:
  0115c	00		 DB	 0
  0115d	01		 DB	 1
  0115e	07		 DB	 7
  0115f	07		 DB	 7
  01160	07		 DB	 7
  01161	07		 DB	 7
  01162	07		 DB	 7
  01163	07		 DB	 7
  01164	07		 DB	 7
  01165	07		 DB	 7
  01166	02		 DB	 2
  01167	03		 DB	 3
  01168	03		 DB	 3
  01169	07		 DB	 7
  0116a	03		 DB	 3
  0116b	03		 DB	 3
  0116c	03		 DB	 3
  0116d	03		 DB	 3
  0116e	03		 DB	 3
  0116f	03		 DB	 3
  01170	03		 DB	 3
  01171	03		 DB	 3
  01172	03		 DB	 3
  01173	03		 DB	 3
  01174	07		 DB	 7
  01175	04		 DB	 4
  01176	07		 DB	 7
  01177	07		 DB	 7
  01178	07		 DB	 7
  01179	07		 DB	 7
  0117a	07		 DB	 7
  0117b	07		 DB	 7
  0117c	07		 DB	 7
  0117d	07		 DB	 7
  0117e	07		 DB	 7
  0117f	07		 DB	 7
  01180	07		 DB	 7
  01181	07		 DB	 7
  01182	07		 DB	 7
  01183	07		 DB	 7
  01184	07		 DB	 7
  01185	07		 DB	 7
  01186	07		 DB	 7
  01187	07		 DB	 7
  01188	07		 DB	 7
  01189	07		 DB	 7
  0118a	07		 DB	 7
  0118b	07		 DB	 7
  0118c	07		 DB	 7
  0118d	07		 DB	 7
  0118e	07		 DB	 7
  0118f	07		 DB	 7
  01190	07		 DB	 7
  01191	07		 DB	 7
  01192	07		 DB	 7
  01193	07		 DB	 7
  01194	07		 DB	 7
  01195	07		 DB	 7
  01196	07		 DB	 7
  01197	07		 DB	 7
  01198	07		 DB	 7
  01199	07		 DB	 7
  0119a	07		 DB	 7
  0119b	07		 DB	 7
  0119c	07		 DB	 7
  0119d	07		 DB	 7
  0119e	07		 DB	 7
  0119f	07		 DB	 7
  011a0	07		 DB	 7
  011a1	07		 DB	 7
  011a2	07		 DB	 7
  011a3	07		 DB	 7
  011a4	07		 DB	 7
  011a5	07		 DB	 7
  011a6	07		 DB	 7
  011a7	07		 DB	 7
  011a8	07		 DB	 7
  011a9	07		 DB	 7
  011aa	07		 DB	 7
  011ab	07		 DB	 7
  011ac	07		 DB	 7
  011ad	07		 DB	 7
  011ae	07		 DB	 7
  011af	07		 DB	 7
  011b0	07		 DB	 7
  011b1	07		 DB	 7
  011b2	07		 DB	 7
  011b3	07		 DB	 7
  011b4	07		 DB	 7
  011b5	05		 DB	 5
  011b6	07		 DB	 7
  011b7	06		 DB	 6
?GetToken@@YA?AW4SMDToken@@XZ ENDP			; GetToken
_TEXT	ENDS
END
