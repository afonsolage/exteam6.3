; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\SProtocol.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?BroadCastMessage@@YAXPAUBroadCastMessageInfo@@@Z ; BroadCastMessage
PUBLIC	?JGAnsMapSvrAuth@@YAXPAUPMSG_ANS_MAPSVRAUTH@@@Z	; JGAnsMapSvrAuth
PUBLIC	?JGAnsMapSvrMove@@YAXPAUPMSG_ANS_MAPSVRMOVE@@@Z	; JGAnsMapSvrMove
PUBLIC	?UserNoticeRecv@@YAXPAUSDHP_USER_NOTICE@@@Z	; UserNoticeRecv
PUBLIC	?AllNoticeRecv@@YAXPAUSDHP_NOTICE@@@Z		; AllNoticeRecv
PUBLIC	?LoveHeartEventRecv@@YAXPAUSDHP_LOVEHEARTEVENT_RESULT@@@Z ; LoveHeartEventRecv
PUBLIC	?JGPSendMail@@YAXPAUPMSG_JG_MEMO_SEND@@@Z	; JGPSendMail
PUBLIC	?JGPOptionControl@@YAXPAUSDHP_OPTIONCONTROL@@@Z	; JGPOptionControl
PUBLIC	?JGPEventControl@@YAXPAUSDHP_EVENTCONTROL@@@Z	; JGPEventControl
PUBLIC	?JGPEventStart@@YAXPAUSDHP_EVENTSTART@@@Z	; JGPEventStart
PUBLIC	?JGPExitCodeRecv@@YAXPAUSDHP_EXITMSG@@@Z	; JGPExitCodeRecv
PUBLIC	?GJPUserDisconnectRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z ; GJPUserDisconnectRecv
PUBLIC	?JGOtherJoin@@YAXPAUSDHP_OTHERJOINMSG@@@Z	; JGOtherJoin
PUBLIC	?GJPUserKillRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z	; GJPUserKillRecv
PUBLIC	?GJPBillCeckRecv@@YAXPAUSDHP_BILLSEARCH_RESULT@@@Z ; GJPBillCeckRecv
PUBLIC	?JGPAccountRequest@@YAXPAUSDHP_IDPASSRESULT@@@Z	; JGPAccountRequest
PUBLIC	?JGServerLoginResult@@YAXPAUSDHP_RESULT@@@Z	; JGServerLoginResult
PUBLIC	?SProtocolCore@@YAXEPAEH@Z			; SProtocolCore
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\sprotocol.cpp
_TEXT	SEGMENT
tv65 = -68						; size = 4
_protoNum$ = 8						; size = 1
_aRecv$ = 12						; size = 4
_aLen$ = 16						; size = 4
?SProtocolCore@@YAXEPAEH@Z PROC				; SProtocolCore

; 26   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 27   : 	switch ( protoNum )

  00009	0f b6 45 08	 movzx	 eax, BYTE PTR _protoNum$[ebp]
  0000d	89 45 bc	 mov	 DWORD PTR tv65[ebp], eax
  00010	81 7d bc cd 00
	00 00		 cmp	 DWORD PTR tv65[ebp], 205 ; 000000cdH
  00017	0f 87 12 01 00
	00		 ja	 $LN20@SProtocolC
  0001d	8b 4d bc	 mov	 ecx, DWORD PTR tv65[ebp]
  00020	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN22@SProtocolC[ecx]
  00027	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN23@SProtocolC[edx*4]
$LN17@SProtocolC:

; 28   : 	{
; 29   : 		case 0x00:
; 30   : 			JGServerLoginResult((SDHP_RESULT *)aRecv);

  0002e	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ?JGServerLoginResult@@YAXPAUSDHP_RESULT@@@Z ; JGServerLoginResult
  00037	83 c4 04	 add	 esp, 4

; 31   : 			break;

  0003a	e9 f0 00 00 00	 jmp	 $LN20@SProtocolC
$LN16@SProtocolC:

; 32   : 
; 33   : 		case 0x01:
; 34   : 			JGPAccountRequest((SDHP_IDPASSRESULT *)aRecv);

  0003f	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 ?JGPAccountRequest@@YAXPAUSDHP_IDPASSRESULT@@@Z ; JGPAccountRequest
  00048	83 c4 04	 add	 esp, 4

; 35   : 			break;

  0004b	e9 df 00 00 00	 jmp	 $LN20@SProtocolC
$LN15@SProtocolC:

; 36   : 
; 37   : 		case 0x06:
; 38   : 			GJPBillCeckRecv((SDHP_BILLSEARCH_RESULT *)aRecv);

  00050	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?GJPBillCeckRecv@@YAXPAUSDHP_BILLSEARCH_RESULT@@@Z ; GJPBillCeckRecv
  00059	83 c4 04	 add	 esp, 4

; 39   : 			break;

  0005c	e9 ce 00 00 00	 jmp	 $LN20@SProtocolC
$LN14@SProtocolC:

; 40   : 
; 41   : 		case 0x07:
; 42   : 			GJPUserKillRecv((SDHP_BILLKILLUSER *)aRecv);

  00061	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ?GJPUserKillRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z ; GJPUserKillRecv
  0006a	83 c4 04	 add	 esp, 4

; 43   : 			break;

  0006d	e9 bd 00 00 00	 jmp	 $LN20@SProtocolC
$LN13@SProtocolC:

; 44   : 
; 45   : 		case 0x08:
; 46   : 			JGOtherJoin((SDHP_OTHERJOINMSG *)aRecv);

  00072	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ?JGOtherJoin@@YAXPAUSDHP_OTHERJOINMSG@@@Z ; JGOtherJoin
  0007b	83 c4 04	 add	 esp, 4

; 47   : 			break;

  0007e	e9 ac 00 00 00	 jmp	 $LN20@SProtocolC
$LN12@SProtocolC:

; 48   : 
; 49   : 		case 0x09:
; 50   : 			GJPUserDisconnectRecv((SDHP_BILLKILLUSER *)aRecv);

  00083	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ?GJPUserDisconnectRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z ; GJPUserDisconnectRecv
  0008c	83 c4 04	 add	 esp, 4

; 51   : 			break;

  0008f	e9 9b 00 00 00	 jmp	 $LN20@SProtocolC
$LN11@SProtocolC:

; 52   : 
; 53   : 		case 0x20:
; 54   : 			JGPExitCodeRecv((SDHP_EXITMSG *)aRecv);

  00094	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  00097	50		 push	 eax
  00098	e8 00 00 00 00	 call	 ?JGPExitCodeRecv@@YAXPAUSDHP_EXITMSG@@@Z ; JGPExitCodeRecv
  0009d	83 c4 04	 add	 esp, 4

; 55   : 			break;

  000a0	e9 8a 00 00 00	 jmp	 $LN20@SProtocolC
$LN10@SProtocolC:

; 56   : 
; 57   : 		case 0x60:
; 58   : 			JGPEventStart((SDHP_EVENTSTART *)aRecv);

  000a5	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 ?JGPEventStart@@YAXPAUSDHP_EVENTSTART@@@Z ; JGPEventStart
  000ae	83 c4 04	 add	 esp, 4

; 59   : 			break;

  000b1	eb 7c		 jmp	 SHORT $LN20@SProtocolC
$LN9@SProtocolC:

; 60   : 
; 61   : 		case 0x61:
; 62   : 			JGPEventControl((SDHP_EVENTCONTROL *)aRecv);

  000b3	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  000b6	50		 push	 eax
  000b7	e8 00 00 00 00	 call	 ?JGPEventControl@@YAXPAUSDHP_EVENTCONTROL@@@Z ; JGPEventControl
  000bc	83 c4 04	 add	 esp, 4

; 63   : 			break;

  000bf	eb 6e		 jmp	 SHORT $LN20@SProtocolC
$LN8@SProtocolC:

; 64   : 
; 65   : 		case 0x62:
; 66   : 			JGPOptionControl((SDHP_OPTIONCONTROL *)aRecv);

  000c1	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  000c4	50		 push	 eax
  000c5	e8 00 00 00 00	 call	 ?JGPOptionControl@@YAXPAUSDHP_OPTIONCONTROL@@@Z ; JGPOptionControl
  000ca	83 c4 04	 add	 esp, 4

; 67   : 			break;

  000cd	eb 60		 jmp	 SHORT $LN20@SProtocolC
$LN7@SProtocolC:

; 68   : 
; 69   : 		case 0x63:
; 70   : 			JGPSendMail((PMSG_JG_MEMO_SEND *)aRecv);

  000cf	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  000d2	50		 push	 eax
  000d3	e8 00 00 00 00	 call	 ?JGPSendMail@@YAXPAUPMSG_JG_MEMO_SEND@@@Z ; JGPSendMail
  000d8	83 c4 04	 add	 esp, 4

; 71   : 			break;

  000db	eb 52		 jmp	 SHORT $LN20@SProtocolC
$LN6@SProtocolC:

; 72   : 
; 73   : 		case 0x30:
; 74   : 			LoveHeartEventRecv((SDHP_LOVEHEARTEVENT_RESULT *)aRecv);

  000dd	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  000e0	50		 push	 eax
  000e1	e8 00 00 00 00	 call	 ?LoveHeartEventRecv@@YAXPAUSDHP_LOVEHEARTEVENT_RESULT@@@Z ; LoveHeartEventRecv
  000e6	83 c4 04	 add	 esp, 4

; 75   : 			break;

  000e9	eb 44		 jmp	 SHORT $LN20@SProtocolC
$LN5@SProtocolC:

; 76   : 
; 77   : 		case 0x40:
; 78   : 			AllNoticeRecv((SDHP_NOTICE *)aRecv);

  000eb	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  000ee	50		 push	 eax
  000ef	e8 00 00 00 00	 call	 ?AllNoticeRecv@@YAXPAUSDHP_NOTICE@@@Z ; AllNoticeRecv
  000f4	83 c4 04	 add	 esp, 4

; 79   : 			break;

  000f7	eb 36		 jmp	 SHORT $LN20@SProtocolC
$LN4@SProtocolC:

; 80   : 
; 81   : 		case 0x41:
; 82   : 			UserNoticeRecv((SDHP_USER_NOTICE *)aRecv);

  000f9	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  000fc	50		 push	 eax
  000fd	e8 00 00 00 00	 call	 ?UserNoticeRecv@@YAXPAUSDHP_USER_NOTICE@@@Z ; UserNoticeRecv
  00102	83 c4 04	 add	 esp, 4

; 83   : 			break;

  00105	eb 28		 jmp	 SHORT $LN20@SProtocolC
$LN3@SProtocolC:

; 84   : 
; 85   : 		case 0x7A:
; 86   : 			JGAnsMapSvrMove((PMSG_ANS_MAPSVRMOVE *)aRecv);

  00107	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  0010a	50		 push	 eax
  0010b	e8 00 00 00 00	 call	 ?JGAnsMapSvrMove@@YAXPAUPMSG_ANS_MAPSVRMOVE@@@Z ; JGAnsMapSvrMove
  00110	83 c4 04	 add	 esp, 4

; 87   : 			break;

  00113	eb 1a		 jmp	 SHORT $LN20@SProtocolC
$LN2@SProtocolC:

; 88   : 
; 89   : 		case 0x7B:
; 90   : 			JGAnsMapSvrAuth((PMSG_ANS_MAPSVRAUTH *)aRecv);

  00115	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  00118	50		 push	 eax
  00119	e8 00 00 00 00	 call	 ?JGAnsMapSvrAuth@@YAXPAUPMSG_ANS_MAPSVRAUTH@@@Z ; JGAnsMapSvrAuth
  0011e	83 c4 04	 add	 esp, 4

; 91   : 			break;

  00121	eb 0c		 jmp	 SHORT $LN20@SProtocolC
$LN1@SProtocolC:

; 92   : 
; 93   : 		case 0xCD:
; 94   : 			BroadCastMessage((BroadCastMessageInfo*)aRecv);

  00123	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  00126	50		 push	 eax
  00127	e8 00 00 00 00	 call	 ?BroadCastMessage@@YAXPAUBroadCastMessageInfo@@@Z ; BroadCastMessage
  0012c	83 c4 04	 add	 esp, 4
$LN20@SProtocolC:

; 95   : 			break;
; 96   : 	}
; 97   : }

  0012f	5f		 pop	 edi
  00130	5e		 pop	 esi
  00131	5b		 pop	 ebx
  00132	8b e5		 mov	 esp, ebp
  00134	5d		 pop	 ebp
  00135	c3		 ret	 0
  00136	8b ff		 npad	 2
$LN23@SProtocolC:
  00138	00 00 00 00	 DD	 $LN17@SProtocolC
  0013c	00 00 00 00	 DD	 $LN16@SProtocolC
  00140	00 00 00 00	 DD	 $LN15@SProtocolC
  00144	00 00 00 00	 DD	 $LN14@SProtocolC
  00148	00 00 00 00	 DD	 $LN13@SProtocolC
  0014c	00 00 00 00	 DD	 $LN12@SProtocolC
  00150	00 00 00 00	 DD	 $LN11@SProtocolC
  00154	00 00 00 00	 DD	 $LN6@SProtocolC
  00158	00 00 00 00	 DD	 $LN5@SProtocolC
  0015c	00 00 00 00	 DD	 $LN4@SProtocolC
  00160	00 00 00 00	 DD	 $LN10@SProtocolC
  00164	00 00 00 00	 DD	 $LN9@SProtocolC
  00168	00 00 00 00	 DD	 $LN8@SProtocolC
  0016c	00 00 00 00	 DD	 $LN7@SProtocolC
  00170	00 00 00 00	 DD	 $LN3@SProtocolC
  00174	00 00 00 00	 DD	 $LN2@SProtocolC
  00178	00 00 00 00	 DD	 $LN1@SProtocolC
  0017c	00 00 00 00	 DD	 $LN20@SProtocolC
$LN22@SProtocolC:
  00180	00		 DB	 0
  00181	01		 DB	 1
  00182	11		 DB	 17			; 00000011H
  00183	11		 DB	 17			; 00000011H
  00184	11		 DB	 17			; 00000011H
  00185	11		 DB	 17			; 00000011H
  00186	02		 DB	 2
  00187	03		 DB	 3
  00188	04		 DB	 4
  00189	05		 DB	 5
  0018a	11		 DB	 17			; 00000011H
  0018b	11		 DB	 17			; 00000011H
  0018c	11		 DB	 17			; 00000011H
  0018d	11		 DB	 17			; 00000011H
  0018e	11		 DB	 17			; 00000011H
  0018f	11		 DB	 17			; 00000011H
  00190	11		 DB	 17			; 00000011H
  00191	11		 DB	 17			; 00000011H
  00192	11		 DB	 17			; 00000011H
  00193	11		 DB	 17			; 00000011H
  00194	11		 DB	 17			; 00000011H
  00195	11		 DB	 17			; 00000011H
  00196	11		 DB	 17			; 00000011H
  00197	11		 DB	 17			; 00000011H
  00198	11		 DB	 17			; 00000011H
  00199	11		 DB	 17			; 00000011H
  0019a	11		 DB	 17			; 00000011H
  0019b	11		 DB	 17			; 00000011H
  0019c	11		 DB	 17			; 00000011H
  0019d	11		 DB	 17			; 00000011H
  0019e	11		 DB	 17			; 00000011H
  0019f	11		 DB	 17			; 00000011H
  001a0	06		 DB	 6
  001a1	11		 DB	 17			; 00000011H
  001a2	11		 DB	 17			; 00000011H
  001a3	11		 DB	 17			; 00000011H
  001a4	11		 DB	 17			; 00000011H
  001a5	11		 DB	 17			; 00000011H
  001a6	11		 DB	 17			; 00000011H
  001a7	11		 DB	 17			; 00000011H
  001a8	11		 DB	 17			; 00000011H
  001a9	11		 DB	 17			; 00000011H
  001aa	11		 DB	 17			; 00000011H
  001ab	11		 DB	 17			; 00000011H
  001ac	11		 DB	 17			; 00000011H
  001ad	11		 DB	 17			; 00000011H
  001ae	11		 DB	 17			; 00000011H
  001af	11		 DB	 17			; 00000011H
  001b0	07		 DB	 7
  001b1	11		 DB	 17			; 00000011H
  001b2	11		 DB	 17			; 00000011H
  001b3	11		 DB	 17			; 00000011H
  001b4	11		 DB	 17			; 00000011H
  001b5	11		 DB	 17			; 00000011H
  001b6	11		 DB	 17			; 00000011H
  001b7	11		 DB	 17			; 00000011H
  001b8	11		 DB	 17			; 00000011H
  001b9	11		 DB	 17			; 00000011H
  001ba	11		 DB	 17			; 00000011H
  001bb	11		 DB	 17			; 00000011H
  001bc	11		 DB	 17			; 00000011H
  001bd	11		 DB	 17			; 00000011H
  001be	11		 DB	 17			; 00000011H
  001bf	11		 DB	 17			; 00000011H
  001c0	08		 DB	 8
  001c1	09		 DB	 9
  001c2	11		 DB	 17			; 00000011H
  001c3	11		 DB	 17			; 00000011H
  001c4	11		 DB	 17			; 00000011H
  001c5	11		 DB	 17			; 00000011H
  001c6	11		 DB	 17			; 00000011H
  001c7	11		 DB	 17			; 00000011H
  001c8	11		 DB	 17			; 00000011H
  001c9	11		 DB	 17			; 00000011H
  001ca	11		 DB	 17			; 00000011H
  001cb	11		 DB	 17			; 00000011H
  001cc	11		 DB	 17			; 00000011H
  001cd	11		 DB	 17			; 00000011H
  001ce	11		 DB	 17			; 00000011H
  001cf	11		 DB	 17			; 00000011H
  001d0	11		 DB	 17			; 00000011H
  001d1	11		 DB	 17			; 00000011H
  001d2	11		 DB	 17			; 00000011H
  001d3	11		 DB	 17			; 00000011H
  001d4	11		 DB	 17			; 00000011H
  001d5	11		 DB	 17			; 00000011H
  001d6	11		 DB	 17			; 00000011H
  001d7	11		 DB	 17			; 00000011H
  001d8	11		 DB	 17			; 00000011H
  001d9	11		 DB	 17			; 00000011H
  001da	11		 DB	 17			; 00000011H
  001db	11		 DB	 17			; 00000011H
  001dc	11		 DB	 17			; 00000011H
  001dd	11		 DB	 17			; 00000011H
  001de	11		 DB	 17			; 00000011H
  001df	11		 DB	 17			; 00000011H
  001e0	0a		 DB	 10			; 0000000aH
  001e1	0b		 DB	 11			; 0000000bH
  001e2	0c		 DB	 12			; 0000000cH
  001e3	0d		 DB	 13			; 0000000dH
  001e4	11		 DB	 17			; 00000011H
  001e5	11		 DB	 17			; 00000011H
  001e6	11		 DB	 17			; 00000011H
  001e7	11		 DB	 17			; 00000011H
  001e8	11		 DB	 17			; 00000011H
  001e9	11		 DB	 17			; 00000011H
  001ea	11		 DB	 17			; 00000011H
  001eb	11		 DB	 17			; 00000011H
  001ec	11		 DB	 17			; 00000011H
  001ed	11		 DB	 17			; 00000011H
  001ee	11		 DB	 17			; 00000011H
  001ef	11		 DB	 17			; 00000011H
  001f0	11		 DB	 17			; 00000011H
  001f1	11		 DB	 17			; 00000011H
  001f2	11		 DB	 17			; 00000011H
  001f3	11		 DB	 17			; 00000011H
  001f4	11		 DB	 17			; 00000011H
  001f5	11		 DB	 17			; 00000011H
  001f6	11		 DB	 17			; 00000011H
  001f7	11		 DB	 17			; 00000011H
  001f8	11		 DB	 17			; 00000011H
  001f9	11		 DB	 17			; 00000011H
  001fa	0e		 DB	 14			; 0000000eH
  001fb	0f		 DB	 15			; 0000000fH
  001fc	11		 DB	 17			; 00000011H
  001fd	11		 DB	 17			; 00000011H
  001fe	11		 DB	 17			; 00000011H
  001ff	11		 DB	 17			; 00000011H
  00200	11		 DB	 17			; 00000011H
  00201	11		 DB	 17			; 00000011H
  00202	11		 DB	 17			; 00000011H
  00203	11		 DB	 17			; 00000011H
  00204	11		 DB	 17			; 00000011H
  00205	11		 DB	 17			; 00000011H
  00206	11		 DB	 17			; 00000011H
  00207	11		 DB	 17			; 00000011H
  00208	11		 DB	 17			; 00000011H
  00209	11		 DB	 17			; 00000011H
  0020a	11		 DB	 17			; 00000011H
  0020b	11		 DB	 17			; 00000011H
  0020c	11		 DB	 17			; 00000011H
  0020d	11		 DB	 17			; 00000011H
  0020e	11		 DB	 17			; 00000011H
  0020f	11		 DB	 17			; 00000011H
  00210	11		 DB	 17			; 00000011H
  00211	11		 DB	 17			; 00000011H
  00212	11		 DB	 17			; 00000011H
  00213	11		 DB	 17			; 00000011H
  00214	11		 DB	 17			; 00000011H
  00215	11		 DB	 17			; 00000011H
  00216	11		 DB	 17			; 00000011H
  00217	11		 DB	 17			; 00000011H
  00218	11		 DB	 17			; 00000011H
  00219	11		 DB	 17			; 00000011H
  0021a	11		 DB	 17			; 00000011H
  0021b	11		 DB	 17			; 00000011H
  0021c	11		 DB	 17			; 00000011H
  0021d	11		 DB	 17			; 00000011H
  0021e	11		 DB	 17			; 00000011H
  0021f	11		 DB	 17			; 00000011H
  00220	11		 DB	 17			; 00000011H
  00221	11		 DB	 17			; 00000011H
  00222	11		 DB	 17			; 00000011H
  00223	11		 DB	 17			; 00000011H
  00224	11		 DB	 17			; 00000011H
  00225	11		 DB	 17			; 00000011H
  00226	11		 DB	 17			; 00000011H
  00227	11		 DB	 17			; 00000011H
  00228	11		 DB	 17			; 00000011H
  00229	11		 DB	 17			; 00000011H
  0022a	11		 DB	 17			; 00000011H
  0022b	11		 DB	 17			; 00000011H
  0022c	11		 DB	 17			; 00000011H
  0022d	11		 DB	 17			; 00000011H
  0022e	11		 DB	 17			; 00000011H
  0022f	11		 DB	 17			; 00000011H
  00230	11		 DB	 17			; 00000011H
  00231	11		 DB	 17			; 00000011H
  00232	11		 DB	 17			; 00000011H
  00233	11		 DB	 17			; 00000011H
  00234	11		 DB	 17			; 00000011H
  00235	11		 DB	 17			; 00000011H
  00236	11		 DB	 17			; 00000011H
  00237	11		 DB	 17			; 00000011H
  00238	11		 DB	 17			; 00000011H
  00239	11		 DB	 17			; 00000011H
  0023a	11		 DB	 17			; 00000011H
  0023b	11		 DB	 17			; 00000011H
  0023c	11		 DB	 17			; 00000011H
  0023d	11		 DB	 17			; 00000011H
  0023e	11		 DB	 17			; 00000011H
  0023f	11		 DB	 17			; 00000011H
  00240	11		 DB	 17			; 00000011H
  00241	11		 DB	 17			; 00000011H
  00242	11		 DB	 17			; 00000011H
  00243	11		 DB	 17			; 00000011H
  00244	11		 DB	 17			; 00000011H
  00245	11		 DB	 17			; 00000011H
  00246	11		 DB	 17			; 00000011H
  00247	11		 DB	 17			; 00000011H
  00248	11		 DB	 17			; 00000011H
  00249	11		 DB	 17			; 00000011H
  0024a	11		 DB	 17			; 00000011H
  0024b	11		 DB	 17			; 00000011H
  0024c	11		 DB	 17			; 00000011H
  0024d	10		 DB	 16			; 00000010H
?SProtocolCore@@YAXEPAEH@Z ENDP				; SProtocolCore
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GJServerLogin@@YAXXZ				; GJServerLogin
EXTRN	?DataSend@wsJoinServerCli@@QAEHPADH@Z:PROC	; wsJoinServerCli::DataSend
EXTRN	?wsJServerCli@@3VwsJoinServerCli@@A:BYTE	; wsJServerCli
EXTRN	?gGameServerCode@@3FA:WORD			; gGameServerCode
EXTRN	_strcpy:PROC
EXTRN	?szServerName@@3PADA:BYTE			; szServerName
EXTRN	?GameServerPort@@3HA:DWORD			; GameServerPort
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pInfo$ = -64						; size = 58
__$ArrayPad$ = -4					; size = 4
?GJServerLogin@@YAXXZ PROC				; GJServerLogin

; 101  : {

  00250	55		 push	 ebp
  00251	8b ec		 mov	 ebp, esp
  00253	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  00259	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0025e	33 c5		 xor	 eax, ebp
  00260	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00263	53		 push	 ebx
  00264	56		 push	 esi
  00265	57		 push	 edi

; 102  : 	SDHP_SERVERINFO pInfo;
; 103  : 
; 104  : 	pInfo.h.c = 0xC1;

  00266	c6 45 c0 c1	 mov	 BYTE PTR _pInfo$[ebp], 193 ; 000000c1H

; 105  : 	pInfo.h.size = sizeof(SDHP_SERVERINFO);

  0026a	c6 45 c1 3a	 mov	 BYTE PTR _pInfo$[ebp+1], 58 ; 0000003aH

; 106  : 	pInfo.h.headcode = 0x00;

  0026e	c6 45 c2 00	 mov	 BYTE PTR _pInfo$[ebp+2], 0

; 107  : 	pInfo.Port = GameServerPort;

  00272	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?GameServerPort@@3HA
  00278	66 89 45 c4	 mov	 WORD PTR _pInfo$[ebp+4], ax

; 108  : 	pInfo.Type = 1;

  0027c	c6 45 c3 01	 mov	 BYTE PTR _pInfo$[ebp+3], 1

; 109  : 	strcpy(pInfo.ServerName , szServerName);

  00280	68 00 00 00 00	 push	 OFFSET ?szServerName@@3PADA ; szServerName
  00285	8d 45 c6	 lea	 eax, DWORD PTR _pInfo$[ebp+6]
  00288	50		 push	 eax
  00289	e8 00 00 00 00	 call	 _strcpy
  0028e	83 c4 08	 add	 esp, 8

; 110  : 	pInfo.ServerCode = gGameServerCode;

  00291	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  00297	66 89 45 f8	 mov	 WORD PTR _pInfo$[ebp+56], ax

; 111  : 
; 112  : 	wsJServerCli.DataSend((char*)&pInfo, pInfo.h.size);

  0029b	0f b6 45 c1	 movzx	 eax, BYTE PTR _pInfo$[ebp+1]
  0029f	50		 push	 eax
  002a0	8d 4d c0	 lea	 ecx, DWORD PTR _pInfo$[ebp]
  002a3	51		 push	 ecx
  002a4	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  002a9	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 113  : }

  002ae	5f		 pop	 edi
  002af	5e		 pop	 esi
  002b0	5b		 pop	 ebx
  002b1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002b4	33 cd		 xor	 ecx, ebp
  002b6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002bb	8b e5		 mov	 esp, ebp
  002bd	5d		 pop	 ebp
  002be	c3		 ret	 0
?GJServerLogin@@YAXXZ ENDP				; GJServerLogin
_TEXT	ENDS
EXTRN	__imp__SendMessageA@16:PROC
EXTRN	?ghWnd@@3PAUHWND__@@A:DWORD			; ghWnd
EXTRN	?gServerReady@@3HA:DWORD			; gServerReady
EXTRN	?JoinServerConnected@@3HA:DWORD			; JoinServerConnected
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
EXTRN	?Get@CMsg@@QAEPADH@Z:PROC			; CMsg::Get
EXTRN	?lMsg@@3VCMsg@@A:BYTE				; lMsg
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?JGServerLoginResult@@YAXPAUSDHP_RESULT@@@Z PROC	; JGServerLoginResult

; 117  : {

  002c0	55		 push	 ebp
  002c1	8b ec		 mov	 ebp, esp
  002c3	83 ec 40	 sub	 esp, 64			; 00000040H
  002c6	53		 push	 ebx
  002c7	56		 push	 esi
  002c8	57		 push	 edi

; 118  : 	if ( lpMsg->Result == false )

  002c9	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  002cc	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  002d0	85 c9		 test	 ecx, ecx
  002d2	75 1b		 jne	 SHORT $LN1@JGServerLo

; 119  : 	{
; 120  : 		LogAdd(lMsg.Get(MSGGET(1, 210)));

  002d4	68 d2 01 00 00	 push	 466			; 000001d2H
  002d9	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  002de	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  002e3	50		 push	 eax
  002e4	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  002ea	83 c4 04	 add	 esp, 4

; 121  : 		return;

  002ed	eb 2c		 jmp	 SHORT $LN2@JGServerLo
$LN1@JGServerLo:

; 122  : 	}
; 123  : 
; 124  : 	JoinServerConnected=TRUE;

  002ef	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?JoinServerConnected@@3HA, 1 ; JoinServerConnected

; 125  : 	gServerReady++;

  002f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gServerReady@@3HA ; gServerReady
  002fe	83 c0 01	 add	 eax, 1
  00301	a3 00 00 00 00	 mov	 DWORD PTR ?gServerReady@@3HA, eax ; gServerReady

; 126  : 	SendMessage(ghWnd, WM_START_SERVER, 0, 0);

  00306	6a 00		 push	 0
  00308	6a 00		 push	 0
  0030a	68 05 04 00 00	 push	 1029			; 00000405H
  0030f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  00314	50		 push	 eax
  00315	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
$LN2@JGServerLo:

; 127  : 
; 128  : }

  0031b	5f		 pop	 edi
  0031c	5e		 pop	 esi
  0031d	5b		 pop	 ebx
  0031e	8b e5		 mov	 esp, ebp
  00320	5d		 pop	 ebp
  00321	c3		 ret	 0
?JGServerLoginResult@@YAXPAUSDHP_RESULT@@@Z ENDP	; JGServerLoginResult
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GJPUserClose@@YAXPAD@Z				; GJPUserClose
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pClose$ = -32						; size = 28
__$ArrayPad$ = -4					; size = 4
_szAccountID$ = 8					; size = 4
?GJPUserClose@@YAXPAD@Z PROC				; GJPUserClose

; 132  : {

  00330	55		 push	 ebp
  00331	8b ec		 mov	 ebp, esp
  00333	83 ec 60	 sub	 esp, 96			; 00000060H
  00336	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0033b	33 c5		 xor	 eax, ebp
  0033d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00340	53		 push	 ebx
  00341	56		 push	 esi
  00342	57		 push	 edi

; 133  : 	SDHP_USERCLOSE_ID pClose;
; 134  : 
; 135  : 	pClose.h.c =0xC1;

  00343	c6 45 e0 c1	 mov	 BYTE PTR _pClose$[ebp], 193 ; 000000c1H

; 136  : 	pClose.h.size= sizeof(SDHP_USERCLOSE_ID);

  00347	c6 45 e1 1c	 mov	 BYTE PTR _pClose$[ebp+1], 28 ; 0000001cH

; 137  : 	pClose.h.headcode = 0x05;

  0034b	c6 45 e2 05	 mov	 BYTE PTR _pClose$[ebp+2], 5

; 138  : 	memcpy(pClose.szId , szAccountID, 10);

  0034f	6a 0a		 push	 10			; 0000000aH
  00351	8b 45 08	 mov	 eax, DWORD PTR _szAccountID$[ebp]
  00354	50		 push	 eax
  00355	8d 4d e3	 lea	 ecx, DWORD PTR _pClose$[ebp+3]
  00358	51		 push	 ecx
  00359	e8 00 00 00 00	 call	 _memcpy
  0035e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 139  : 
; 140  : 	wsJServerCli.DataSend((char*)&pClose, pClose.h.size);

  00361	0f b6 45 e1	 movzx	 eax, BYTE PTR _pClose$[ebp+1]
  00365	50		 push	 eax
  00366	8d 4d e0	 lea	 ecx, DWORD PTR _pClose$[ebp]
  00369	51		 push	 ecx
  0036a	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  0036f	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 141  : }

  00374	5f		 pop	 edi
  00375	5e		 pop	 esi
  00376	5b		 pop	 ebx
  00377	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0037a	33 cd		 xor	 ecx, ebp
  0037c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00381	8b e5		 mov	 esp, ebp
  00383	5d		 pop	 ebp
  00384	c3		 ret	 0
?GJPUserClose@@YAXPAD@Z ENDP				; GJPUserClose
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GJPUserClose@@YAXPAUOBJECTSTRUCT@@@Z		; GJPUserClose
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pClose$ = -32						; size = 28
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
?GJPUserClose@@YAXPAUOBJECTSTRUCT@@@Z PROC		; GJPUserClose

; 145  : {

  00390	55		 push	 ebp
  00391	8b ec		 mov	 ebp, esp
  00393	83 ec 60	 sub	 esp, 96			; 00000060H
  00396	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0039b	33 c5		 xor	 eax, ebp
  0039d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  003a0	53		 push	 ebx
  003a1	56		 push	 esi
  003a2	57		 push	 edi

; 146  : 	SDHP_USERCLOSE_ID pClose;
; 147  : 
; 148  : 	pClose.h.c =0xC1;

  003a3	c6 45 e0 c1	 mov	 BYTE PTR _pClose$[ebp], 193 ; 000000c1H

; 149  : 	pClose.h.size= sizeof(SDHP_USERCLOSE_ID);

  003a7	c6 45 e1 1c	 mov	 BYTE PTR _pClose$[ebp+1], 28 ; 0000001cH

; 150  : 	pClose.h.headcode = 0x05;

  003ab	c6 45 e2 05	 mov	 BYTE PTR _pClose$[ebp+2], 5

; 151  : 	memcpy(pClose.szId , lpObj->AccountID, 10);

  003af	6a 0a		 push	 10			; 0000000aH
  003b1	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  003b4	83 c0 6c	 add	 eax, 108		; 0000006cH
  003b7	50		 push	 eax
  003b8	8d 4d e3	 lea	 ecx, DWORD PTR _pClose$[ebp+3]
  003bb	51		 push	 ecx
  003bc	e8 00 00 00 00	 call	 _memcpy
  003c1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 152  : 	memcpy(pClose.szName, lpObj->BackName, 10);

  003c4	6a 0a		 push	 10			; 0000000aH
  003c6	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  003c9	05 d9 10 00 00	 add	 eax, 4313		; 000010d9H
  003ce	50		 push	 eax
  003cf	8d 4d ed	 lea	 ecx, DWORD PTR _pClose$[ebp+13]
  003d2	51		 push	 ecx
  003d3	e8 00 00 00 00	 call	 _memcpy
  003d8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 153  : 	pClose.Level = lpObj->Level;

  003db	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  003de	66 8b 88 be 00
	00 00		 mov	 cx, WORD PTR [eax+190]
  003e5	66 89 4d f8	 mov	 WORD PTR _pClose$[ebp+24], cx

; 154  : 	pClose.DbClass = lpObj->DbClass;

  003e9	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  003ec	8a 88 ba 00 00
	00		 mov	 cl, BYTE PTR [eax+186]
  003f2	88 4d fa	 mov	 BYTE PTR _pClose$[ebp+26], cl

; 155  : 
; 156  : 	wsJServerCli.DataSend((char*)&pClose, pClose.h.size);

  003f5	0f b6 45 e1	 movzx	 eax, BYTE PTR _pClose$[ebp+1]
  003f9	50		 push	 eax
  003fa	8d 4d e0	 lea	 ecx, DWORD PTR _pClose$[ebp]
  003fd	51		 push	 ecx
  003fe	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  00403	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 157  : }

  00408	5f		 pop	 edi
  00409	5e		 pop	 esi
  0040a	5b		 pop	 ebx
  0040b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0040e	33 cd		 xor	 ecx, ebp
  00410	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00415	8b e5		 mov	 esp, ebp
  00417	5d		 pop	 ebp
  00418	c3		 ret	 0
?GJPUserClose@@YAXPAUOBJECTSTRUCT@@@Z ENDP		; GJPUserClose
_TEXT	ENDS
PUBLIC	?GJPAccountFail@@YAXFPADHH@Z			; GJPAccountFail
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	__$ArrayPad$
EXTRN	?CloseClient@@YAXH@Z:PROC			; CloseClient
EXTRN	?GCJoinResult@@YAXEH@Z:PROC			; GCJoinResult
EXTRN	?GDReqOffCharacter@OfflineMode@@QAEXH@Z:PROC	; OfflineMode::GDReqOffCharacter
EXTRN	?g_OfflineMode@@3VOfflineMode@@A:BYTE		; g_OfflineMode
EXTRN	?SendGame@ConnectEx@@QAEXH@Z:PROC		; ConnectEx::SendGame
EXTRN	?g_ConnectEx@@3VConnectEx@@A:QWORD		; g_ConnectEx
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?gObjSetAccountLogin@@YAHHPADHHH0E@Z:PROC	; gObjSetAccountLogin
EXTRN	?gJoominCheck@@YAHPADH@Z:PROC			; gJoominCheck
EXTRN	?gPkLimitFree@@3HA:DWORD			; gPkLimitFree
EXTRN	?gJoomin15Check@@YAHPAD@Z:PROC			; gJoomin15Check
EXTRN	?gLanguage@@3HA:DWORD				; gLanguage
EXTRN	?gNonPK@@3HA:DWORD				; gNonPK
EXTRN	_memset:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
tv150 = -108						; size = 4
_bJoinResult$ = -37					; size = 1
_szJN$ = -36						; size = 14
_aIndex$ = -20						; size = 4
_szId$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?JGPAccountRequest@@YAXPAUSDHP_IDPASSRESULT@@@Z PROC	; JGPAccountRequest

; 161  : {

  00420	55		 push	 ebp
  00421	8b ec		 mov	 ebp, esp
  00423	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00426	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0042b	33 c5		 xor	 eax, ebp
  0042d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00430	53		 push	 ebx
  00431	56		 push	 esi
  00432	57		 push	 edi

; 162  : 	char szId[11];
; 163  : 	int aIndex;
; 164  : 	char szJN[14]="";

  00433	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
  00438	88 45 dc	 mov	 BYTE PTR _szJN$[ebp], al
  0043b	33 c0		 xor	 eax, eax
  0043d	89 45 dd	 mov	 DWORD PTR _szJN$[ebp+1], eax
  00440	89 45 e1	 mov	 DWORD PTR _szJN$[ebp+5], eax
  00443	89 45 e5	 mov	 DWORD PTR _szJN$[ebp+9], eax
  00446	88 45 e9	 mov	 BYTE PTR _szJN$[ebp+13], al

; 165  : 	
; 166  : 	memset(szId, 0, sizeof(szId));

  00449	6a 0b		 push	 11			; 0000000bH
  0044b	6a 00		 push	 0
  0044d	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  00450	50		 push	 eax
  00451	e8 00 00 00 00	 call	 _memset
  00456	83 c4 0c	 add	 esp, 12			; 0000000cH

; 167  : 	memcpy(szId, lpMsg->Id , sizeof(lpMsg->Id));

  00459	6a 0a		 push	 10			; 0000000aH
  0045b	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  0045e	83 c0 06	 add	 eax, 6
  00461	50		 push	 eax
  00462	8d 4d f0	 lea	 ecx, DWORD PTR _szId$[ebp]
  00465	51		 push	 ecx
  00466	e8 00 00 00 00	 call	 _memcpy
  0046b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 168  : 	memcpy(szJN, lpMsg->JoominNumber , sizeof(lpMsg->JoominNumber));

  0046e	6a 0d		 push	 13			; 0000000dH
  00470	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00473	83 c0 18	 add	 eax, 24			; 00000018H
  00476	50		 push	 eax
  00477	8d 4d dc	 lea	 ecx, DWORD PTR _szJN$[ebp]
  0047a	51		 push	 ecx
  0047b	e8 00 00 00 00	 call	 _memcpy
  00480	83 c4 0c	 add	 esp, 12			; 0000000cH

; 169  : 
; 170  : 	aIndex = lpMsg->Number ;

  00483	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00486	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  0048a	89 4d ec	 mov	 DWORD PTR _aIndex$[ebp], ecx

; 171  : 
; 172  : 	bool bJoinResult = true;

  0048d	c6 45 db 01	 mov	 BYTE PTR _bJoinResult$[ebp], 1

; 173  : 	
; 174  : 	if ( lpMsg->result  == 1 || lpMsg->result  == 15 )

  00491	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00494	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  00498	83 f9 01	 cmp	 ecx, 1
  0049b	74 10		 je	 SHORT $LN18@JGPAccount
  0049d	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  004a0	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  004a4	83 f9 0f	 cmp	 ecx, 15			; 0000000fH
  004a7	0f 85 92 00 00
	00		 jne	 $LN19@JGPAccount
$LN18@JGPAccount:

; 175  : 	{
; 176  : 		if ( gNonPK == 0 && gLanguage == 0 )

  004ad	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gNonPK@@3HA, 0 ; gNonPK
  004b4	75 3f		 jne	 SHORT $LN17@JGPAccount
  004b6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gLanguage@@3HA, 0 ; gLanguage
  004bd	75 36		 jne	 SHORT $LN17@JGPAccount

; 177  : 		{
; 178  : 			if (gJoomin15Check(szJN) == 0 )

  004bf	8d 45 dc	 lea	 eax, DWORD PTR _szJN$[ebp]
  004c2	50		 push	 eax
  004c3	e8 00 00 00 00	 call	 ?gJoomin15Check@@YAHPAD@Z ; gJoomin15Check
  004c8	83 c4 04	 add	 esp, 4
  004cb	85 c0		 test	 eax, eax
  004cd	75 26		 jne	 SHORT $LN17@JGPAccount

; 179  : 			{
; 180  : 				GJPAccountFail(aIndex, szId, lpMsg->DBNumber , lpMsg->UserNumber );

  004cf	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  004d2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  004d5	51		 push	 ecx
  004d6	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  004d9	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  004dc	50		 push	 eax
  004dd	8d 4d f0	 lea	 ecx, DWORD PTR _szId$[ebp]
  004e0	51		 push	 ecx
  004e1	0f b7 55 ec	 movzx	 edx, WORD PTR _aIndex$[ebp]
  004e5	52		 push	 edx
  004e6	e8 00 00 00 00	 call	 ?GJPAccountFail@@YAXFPADHH@Z ; GJPAccountFail
  004eb	83 c4 10	 add	 esp, 16			; 00000010H

; 181  : 				lpMsg->result  = 17;

  004ee	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  004f1	c6 40 03 11	 mov	 BYTE PTR [eax+3], 17	; 00000011H
$LN17@JGPAccount:

; 182  : 			}
; 183  : 		}
; 184  : 			
; 185  : 		if ( gPkLimitFree == 1 && gLanguage == 0 )

  004f5	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?gPkLimitFree@@3HA, 1 ; gPkLimitFree
  004fc	75 41		 jne	 SHORT $LN19@JGPAccount
  004fe	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gLanguage@@3HA, 0 ; gLanguage
  00505	75 38		 jne	 SHORT $LN19@JGPAccount

; 186  : 		{
; 187  : 			if (gJoominCheck(szJN, 18) == 0 )

  00507	6a 12		 push	 18			; 00000012H
  00509	8d 45 dc	 lea	 eax, DWORD PTR _szJN$[ebp]
  0050c	50		 push	 eax
  0050d	e8 00 00 00 00	 call	 ?gJoominCheck@@YAHPADH@Z ; gJoominCheck
  00512	83 c4 08	 add	 esp, 8
  00515	85 c0		 test	 eax, eax
  00517	75 26		 jne	 SHORT $LN19@JGPAccount

; 188  : 			{
; 189  : 				GJPAccountFail(aIndex, szId, lpMsg->DBNumber , lpMsg->UserNumber );

  00519	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  0051c	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0051f	51		 push	 ecx
  00520	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  00523	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00526	50		 push	 eax
  00527	8d 4d f0	 lea	 ecx, DWORD PTR _szId$[ebp]
  0052a	51		 push	 ecx
  0052b	0f b7 55 ec	 movzx	 edx, WORD PTR _aIndex$[ebp]
  0052f	52		 push	 edx
  00530	e8 00 00 00 00	 call	 ?GJPAccountFail@@YAXFPADHH@Z ; GJPAccountFail
  00535	83 c4 10	 add	 esp, 16			; 00000010H

; 190  : 				lpMsg->result  = 17;

  00538	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  0053b	c6 40 03 11	 mov	 BYTE PTR [eax+3], 17	; 00000011H
$LN19@JGPAccount:

; 191  : 			}
; 192  : 		}
; 193  : 	}
; 194  : 
; 195  : 	switch ( lpMsg->result  )

  0053f	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00542	8a 48 03	 mov	 cl, BYTE PTR [eax+3]
  00545	88 4d 94	 mov	 BYTE PTR tv150[ebp], cl
  00548	80 7d 94 01	 cmp	 BYTE PTR tv150[ebp], 1
  0054c	74 0b		 je	 SHORT $LN11@JGPAccount
  0054e	80 7d 94 0f	 cmp	 BYTE PTR tv150[ebp], 15	; 0000000fH
  00552	74 05		 je	 SHORT $LN11@JGPAccount
  00554	e9 39 01 00 00	 jmp	 $LN12@JGPAccount
$LN11@JGPAccount:

; 196  : 	{
; 197  : 		case 1:
; 198  : 		case 15:
; 199  : 			if (gObjSetAccountLogin(aIndex, szId, lpMsg->UserNumber , lpMsg->DBNumber,lpMsg->ukn_30, szJN ,lpMsg->PcBangRoom) == 0 )//Season 4.5 addon

  00559	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  0055c	0f b6 48 2c	 movzx	 ecx, BYTE PTR [eax+44]
  00560	51		 push	 ecx
  00561	8d 55 dc	 lea	 edx, DWORD PTR _szJN$[ebp]
  00564	52		 push	 edx
  00565	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00568	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0056b	51		 push	 ecx
  0056c	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  0056f	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00572	50		 push	 eax
  00573	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  00576	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00579	52		 push	 edx
  0057a	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  0057d	50		 push	 eax
  0057e	8b 4d ec	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  00581	51		 push	 ecx
  00582	e8 00 00 00 00	 call	 ?gObjSetAccountLogin@@YAHHPADHHH0E@Z ; gObjSetAccountLogin
  00587	83 c4 1c	 add	 esp, 28			; 0000001cH
  0058a	85 c0		 test	 eax, eax
  0058c	75 2f		 jne	 SHORT $LN10@JGPAccount

; 200  : 			{
; 201  : 				GJPAccountFail(aIndex, szId, lpMsg->DBNumber , lpMsg->UserNumber  );

  0058e	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00591	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00594	51		 push	 ecx
  00595	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  00598	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  0059b	50		 push	 eax
  0059c	8d 4d f0	 lea	 ecx, DWORD PTR _szId$[ebp]
  0059f	51		 push	 ecx
  005a0	0f b7 55 ec	 movzx	 edx, WORD PTR _aIndex$[ebp]
  005a4	52		 push	 edx
  005a5	e8 00 00 00 00	 call	 ?GJPAccountFail@@YAXFPADHH@Z ; GJPAccountFail
  005aa	83 c4 10	 add	 esp, 16			; 00000010H

; 202  : 				lpMsg->result  = 4;

  005ad	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  005b0	c6 40 03 04	 mov	 BYTE PTR [eax+3], 4

; 203  : 
; 204  : 				bJoinResult = false;

  005b4	c6 45 db 00	 mov	 BYTE PTR _bJoinResult$[ebp], 0

; 205  : 			}
; 206  : 			else

  005b8	e9 98 00 00 00	 jmp	 $LN9@JGPAccount
$LN10@JGPAccount:

; 207  : 			{	
; 208  : 				LogAddTD(lMsg.Get(MSGGET(1, 211)), gObj[aIndex].Ip_addr, szId, lpMsg->UserNumber , lpMsg->DBNumber );

  005bd	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  005c0	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  005c3	51		 push	 ecx
  005c4	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  005c7	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  005ca	50		 push	 eax
  005cb	8d 4d f0	 lea	 ecx, DWORD PTR _szId$[ebp]
  005ce	51		 push	 ecx
  005cf	8b 55 ec	 mov	 edx, DWORD PTR _aIndex$[ebp]
  005d2	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  005d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  005dd	8d 4c 10 18	 lea	 ecx, DWORD PTR [eax+edx+24]
  005e1	51		 push	 ecx
  005e2	68 d3 01 00 00	 push	 467			; 000001d3H
  005e7	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  005ec	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  005f1	50		 push	 eax
  005f2	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  005f8	83 c4 14	 add	 esp, 20			; 00000014H

; 209  : #if(_RECONNECT_)
; 210  : 				if( gObj[aIndex].m_ConnectEx )

  005fb	8b 45 ec	 mov	 eax, DWORD PTR _aIndex$[ebp]
  005fe	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00604	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0060a	0f b6 94 01 ac
	27 00 00	 movzx	 edx, BYTE PTR [ecx+eax+10156]
  00612	85 d2		 test	 edx, edx
  00614	74 12		 je	 SHORT $LN8@JGPAccount

; 211  : 				{
; 212  : 					g_ConnectEx.SendGame(aIndex);

  00616	8b 45 ec	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00619	50		 push	 eax
  0061a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ConnectEx@@3VConnectEx@@A ; g_ConnectEx
  0061f	e8 00 00 00 00	 call	 ?SendGame@ConnectEx@@QAEXH@Z ; ConnectEx::SendGame

; 213  : 					bJoinResult = false;

  00624	c6 45 db 00	 mov	 BYTE PTR _bJoinResult$[ebp], 0
$LN8@JGPAccount:

; 214  : 				}
; 215  : #endif
; 216  : #if(OFFLINE_MODE_RESTORE)
; 217  : 				if(gObj[aIndex].m_ReOfflineMode)

  00628	8b 45 ec	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0062b	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00631	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00637	0f b6 94 01 ec
	28 00 00	 movzx	 edx, BYTE PTR [ecx+eax+10476]
  0063f	85 d2		 test	 edx, edx
  00641	74 12		 je	 SHORT $LN9@JGPAccount

; 218  : 				{
; 219  : 					g_OfflineMode.GDReqOffCharacter(aIndex);

  00643	8b 45 ec	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00646	50		 push	 eax
  00647	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_OfflineMode@@3VOfflineMode@@A ; g_OfflineMode
  0064c	e8 00 00 00 00	 call	 ?GDReqOffCharacter@OfflineMode@@QAEXH@Z ; OfflineMode::GDReqOffCharacter

; 220  : 					bJoinResult = false;

  00651	c6 45 db 00	 mov	 BYTE PTR _bJoinResult$[ebp], 0
$LN9@JGPAccount:

; 221  : 				}
; 222  : #endif
; 223  : 			}
; 224  : 
; 225  : 			if ( lpMsg->UserNumber  == 0 && lpMsg->DBNumber  == 0)

  00655	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00658	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0065c	75 34		 jne	 SHORT $LN12@JGPAccount
  0065e	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00661	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  00665	75 2b		 jne	 SHORT $LN12@JGPAccount

; 226  : 			{
; 227  : 				LogAddTD(lMsg.Get(MSGGET(1, 212)), szId, lpMsg->UserNumber , lpMsg->DBNumber );

  00667	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  0066a	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0066d	51		 push	 ecx
  0066e	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  00671	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00674	50		 push	 eax
  00675	8d 4d f0	 lea	 ecx, DWORD PTR _szId$[ebp]
  00678	51		 push	 ecx
  00679	68 d4 01 00 00	 push	 468			; 000001d4H
  0067e	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00683	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00688	50		 push	 eax
  00689	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0068f	83 c4 10	 add	 esp, 16			; 00000010H
$LN12@JGPAccount:

; 228  : 			}
; 229  : 	}
; 230  : 
; 231  : 	if ( lpMsg->result == 0 )

  00692	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00695	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  00699	85 c9		 test	 ecx, ecx
  0069b	75 07		 jne	 SHORT $LN5@JGPAccount

; 232  : 		lpMsg->result = 2;

  0069d	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  006a0	c6 40 03 02	 mov	 BYTE PTR [eax+3], 2
$LN5@JGPAccount:

; 233  : 
; 234  : 	if ( lpMsg->result  == 15 )

  006a4	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  006a7	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  006ab	83 f9 0f	 cmp	 ecx, 15			; 0000000fH
  006ae	75 1e		 jne	 SHORT $LN4@JGPAccount

; 235  : 	{
; 236  : 		lpMsg->result  = 1;

  006b0	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  006b3	c6 40 03 01	 mov	 BYTE PTR [eax+3], 1

; 237  : 		gObj[aIndex].m_cAccountItemBlock = 1;

  006b7	8b 45 ec	 mov	 eax, DWORD PTR _aIndex$[ebp]
  006ba	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  006c0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  006c6	c6 84 01 14 02
	00 00 01	 mov	 BYTE PTR [ecx+eax+532], 1
$LN4@JGPAccount:

; 238  : 	}
; 239  : 	
; 240  : 	gObj[aIndex].LoginMsgSnd = 0;

  006ce	8b 45 ec	 mov	 eax, DWORD PTR _aIndex$[ebp]
  006d1	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  006d7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  006dd	c6 44 01 08 00	 mov	 BYTE PTR [ecx+eax+8], 0

; 241  : 
; 242  : 	if (gObj[aIndex].LoginMsgCount >= 3 )

  006e2	8b 45 ec	 mov	 eax, DWORD PTR _aIndex$[ebp]
  006e5	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  006eb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  006f1	0f be 54 01 09	 movsx	 edx, BYTE PTR [ecx+eax+9]
  006f6	83 fa 03	 cmp	 edx, 3
  006f9	7c 07		 jl	 SHORT $LN3@JGPAccount

; 243  : 	{
; 244  : 		lpMsg->result = 8;

  006fb	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  006fe	c6 40 03 08	 mov	 BYTE PTR [eax+3], 8
$LN3@JGPAccount:

; 245  : 	}
; 246  : 
; 247  : #if(CUSTOM_ACCOUNT_SECURITY)
; 248  : 	#if(DEBUG_ACCOUNT_SECURITY)
; 249  : 	if(g_AccountSecurity.CheckJoinLogin(aIndex, lpMsg->result, bJoinResult) == false)
; 250  : 	{
; 251  : 		GCJoinResult(lpMsg->result , aIndex);
; 252  : 		if ( lpMsg->result  != 1 )
; 253  : 		{
; 254  : 			if ( gObj[aIndex].LoginMsgCount > 3 )
; 255  : 			{
; 256  : 				CloseClient(aIndex);
; 257  : 			}
; 258  : 		}
; 259  : 	}
; 260  : 	#else
; 261  : 	GCJoinResult(lpMsg->result , aIndex);

  00702	8b 45 ec	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00705	50		 push	 eax
  00706	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  00709	0f b6 51 03	 movzx	 edx, BYTE PTR [ecx+3]
  0070d	52		 push	 edx
  0070e	e8 00 00 00 00	 call	 ?GCJoinResult@@YAXEH@Z	; GCJoinResult
  00713	83 c4 08	 add	 esp, 8

; 262  : 	if ( lpMsg->result  != 1 )

  00716	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00719	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  0071d	83 f9 01	 cmp	 ecx, 1
  00720	74 25		 je	 SHORT $LN20@JGPAccount

; 263  : 	{
; 264  : 		if ( gObj[aIndex].LoginMsgCount > 3 )

  00722	8b 45 ec	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00725	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0072b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00731	0f be 54 01 09	 movsx	 edx, BYTE PTR [ecx+eax+9]
  00736	83 fa 03	 cmp	 edx, 3
  00739	7e 0c		 jle	 SHORT $LN20@JGPAccount

; 265  : 		{
; 266  : 			CloseClient(aIndex);

  0073b	8b 45 ec	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0073e	50		 push	 eax
  0073f	e8 00 00 00 00	 call	 ?CloseClient@@YAXH@Z	; CloseClient
  00744	83 c4 04	 add	 esp, 4
$LN20@JGPAccount:

; 267  : 		}
; 268  : 	}
; 269  : 	#endif
; 270  : #else
; 271  : 	GCJoinResult(lpMsg->result , aIndex);
; 272  : 	if ( lpMsg->result  != 1 )
; 273  : 	{
; 274  : 		if ( gObj[aIndex].LoginMsgCount > 3 )
; 275  : 		{
; 276  : 			CloseClient(aIndex);
; 277  : 		}
; 278  : 	}
; 279  : #endif
; 280  : }

  00747	5f		 pop	 edi
  00748	5e		 pop	 esi
  00749	5b		 pop	 ebx
  0074a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0074d	33 cd		 xor	 ecx, ebp
  0074f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00754	8b e5		 mov	 esp, ebp
  00756	5d		 pop	 ebp
  00757	c3		 ret	 0
?JGPAccountRequest@@YAXPAUSDHP_IDPASSRESULT@@@Z ENDP	; JGPAccountRequest
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pMsg$ = -32						; size = 28
__$ArrayPad$ = -4					; size = 4
_number$ = 8						; size = 2
_Id$ = 12						; size = 4
_DBNumber$ = 16						; size = 4
_UserNumber$ = 20					; size = 4
?GJPAccountFail@@YAXFPADHH@Z PROC			; GJPAccountFail

; 284  : {

  00760	55		 push	 ebp
  00761	8b ec		 mov	 ebp, esp
  00763	83 ec 60	 sub	 esp, 96			; 00000060H
  00766	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0076b	33 c5		 xor	 eax, ebp
  0076d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00770	53		 push	 ebx
  00771	56		 push	 esi
  00772	57		 push	 edi

; 285  : 	SDHP_JOINFAIL pMsg;
; 286  : 
; 287  : 	memset(&pMsg, 0, sizeof(SDHP_JOINFAIL));

  00773	6a 1c		 push	 28			; 0000001cH
  00775	6a 00		 push	 0
  00777	8d 45 e0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0077a	50		 push	 eax
  0077b	e8 00 00 00 00	 call	 _memset
  00780	83 c4 0c	 add	 esp, 12			; 0000000cH

; 288  : 
; 289  : 	pMsg.h.c=0xC1;

  00783	c6 45 e0 c1	 mov	 BYTE PTR _pMsg$[ebp], 193 ; 000000c1H

; 290  : 	pMsg.h.headcode= 0x02;

  00787	c6 45 e2 02	 mov	 BYTE PTR _pMsg$[ebp+2], 2

; 291  : 	pMsg.h.size = sizeof (SDHP_JOINFAIL);

  0078b	c6 45 e1 1c	 mov	 BYTE PTR _pMsg$[ebp+1], 28 ; 0000001cH

; 292  : 	pMsg.Number = number;

  0078f	66 8b 45 08	 mov	 ax, WORD PTR _number$[ebp]
  00793	66 89 45 e4	 mov	 WORD PTR _pMsg$[ebp+4], ax

; 293  : 	pMsg.DBNumber = DBNumber;

  00797	8b 45 10	 mov	 eax, DWORD PTR _DBNumber$[ebp]
  0079a	89 45 f8	 mov	 DWORD PTR _pMsg$[ebp+24], eax

; 294  : 	pMsg.UserNumber = UserNumber;

  0079d	8b 45 14	 mov	 eax, DWORD PTR _UserNumber$[ebp]
  007a0	89 45 f4	 mov	 DWORD PTR _pMsg$[ebp+20], eax

; 295  : 
; 296  : 	strcpy(pMsg.Id , Id);

  007a3	8b 45 0c	 mov	 eax, DWORD PTR _Id$[ebp]
  007a6	50		 push	 eax
  007a7	8d 4d e6	 lea	 ecx, DWORD PTR _pMsg$[ebp+6]
  007aa	51		 push	 ecx
  007ab	e8 00 00 00 00	 call	 _strcpy
  007b0	83 c4 08	 add	 esp, 8

; 297  : 
; 298  : 	wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size);

  007b3	0f b6 45 e1	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  007b7	50		 push	 eax
  007b8	8d 4d e0	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  007bb	51		 push	 ecx
  007bc	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  007c1	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 299  : }

  007c6	5f		 pop	 edi
  007c7	5e		 pop	 esi
  007c8	5b		 pop	 ebx
  007c9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  007cc	33 cd		 xor	 ecx, ebp
  007ce	e8 00 00 00 00	 call	 @__security_check_cookie@4
  007d3	8b e5		 mov	 esp, ebp
  007d5	5d		 pop	 ebp
  007d6	c3		 ret	 0
?GJPAccountFail@@YAXFPADHH@Z ENDP			; GJPAccountFail
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GJPAccountBlock@@YAXFPADHHH@Z			; GJPAccountBlock
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pMsg$ = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
_number$ = 8						; size = 2
_Id$ = 12						; size = 4
_DBNumber$ = 16						; size = 4
_UserNumber$ = 20					; size = 4
_BlockCode$ = 24					; size = 4
?GJPAccountBlock@@YAXFPADHHH@Z PROC			; GJPAccountBlock

; 303  : {

  007e0	55		 push	 ebp
  007e1	8b ec		 mov	 ebp, esp
  007e3	83 ec 64	 sub	 esp, 100		; 00000064H
  007e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  007eb	33 c5		 xor	 eax, ebp
  007ed	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  007f0	53		 push	 ebx
  007f1	56		 push	 esi
  007f2	57		 push	 edi

; 304  : 	SDHP_COMMAND_BLOCK pMsg;
; 305  : 
; 306  : 	memset(&pMsg, 0, sizeof(SDHP_COMMAND_BLOCK));

  007f3	6a 20		 push	 32			; 00000020H
  007f5	6a 00		 push	 0
  007f7	8d 45 dc	 lea	 eax, DWORD PTR _pMsg$[ebp]
  007fa	50		 push	 eax
  007fb	e8 00 00 00 00	 call	 _memset
  00800	83 c4 0c	 add	 esp, 12			; 0000000cH

; 307  : 
; 308  : 	pMsg.h.c=0xC1;

  00803	c6 45 dc c1	 mov	 BYTE PTR _pMsg$[ebp], 193 ; 000000c1H

; 309  : 	pMsg.h.headcode= 0x04;

  00807	c6 45 de 04	 mov	 BYTE PTR _pMsg$[ebp+2], 4

; 310  : 	pMsg.h.size = sizeof (SDHP_COMMAND_BLOCK);

  0080b	c6 45 dd 20	 mov	 BYTE PTR _pMsg$[ebp+1], 32 ; 00000020H

; 311  : 	pMsg.Number = number;

  0080f	66 8b 45 08	 mov	 ax, WORD PTR _number$[ebp]
  00813	66 89 45 e0	 mov	 WORD PTR _pMsg$[ebp+4], ax

; 312  : 	pMsg.DBNumber = DBNumber;

  00817	8b 45 10	 mov	 eax, DWORD PTR _DBNumber$[ebp]
  0081a	89 45 f4	 mov	 DWORD PTR _pMsg$[ebp+24], eax

; 313  : 	pMsg.UserNumber = UserNumber;

  0081d	8b 45 14	 mov	 eax, DWORD PTR _UserNumber$[ebp]
  00820	89 45 f0	 mov	 DWORD PTR _pMsg$[ebp+20], eax

; 314  : 	pMsg.BlockCode = BlockCode;

  00823	8a 45 18	 mov	 al, BYTE PTR _BlockCode$[ebp]
  00826	88 45 f8	 mov	 BYTE PTR _pMsg$[ebp+28], al

; 315  : 
; 316  : 	strcpy(pMsg.Id , Id);

  00829	8b 45 0c	 mov	 eax, DWORD PTR _Id$[ebp]
  0082c	50		 push	 eax
  0082d	8d 4d e2	 lea	 ecx, DWORD PTR _pMsg$[ebp+6]
  00830	51		 push	 ecx
  00831	e8 00 00 00 00	 call	 _strcpy
  00836	83 c4 08	 add	 esp, 8

; 317  : 
; 318  : 	wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size);

  00839	0f b6 45 dd	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  0083d	50		 push	 eax
  0083e	8d 4d dc	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  00841	51		 push	 ecx
  00842	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  00847	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 319  : }

  0084c	5f		 pop	 edi
  0084d	5e		 pop	 esi
  0084e	5b		 pop	 ebx
  0084f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00852	33 cd		 xor	 ecx, ebp
  00854	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00859	8b e5		 mov	 esp, ebp
  0085b	5d		 pop	 ebp
  0085c	c3		 ret	 0
?GJPAccountBlock@@YAXFPADHHH@Z ENDP			; GJPAccountBlock
_TEXT	ENDS
PUBLIC	?SetBill@BILL_CLASS@@QAEHEEKPAD@Z		; BILL_CLASS::SetBill
PUBLIC	__$ArrayPad$
EXTRN	?gObjAddMsgSendDelay@@YAXPAUOBJECTSTRUCT@@HHHH@Z:PROC ; gObjAddMsgSendDelay
EXTRN	?m_ObjBill@@3PAVBILL_CLASS@@A:BYTE		; m_ObjBill
EXTRN	?gObjIsAccontConnect@@YAHHPAD@Z:PROC		; gObjIsAccontConnect
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_EndsDays$ = -36					; size = 13
_szId$ = -20						; size = 11
_aIndex$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?GJPBillCeckRecv@@YAXPAUSDHP_BILLSEARCH_RESULT@@@Z PROC	; GJPBillCeckRecv

; 323  : {

  00860	55		 push	 ebp
  00861	8b ec		 mov	 ebp, esp
  00863	83 ec 64	 sub	 esp, 100		; 00000064H
  00866	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0086b	33 c5		 xor	 eax, ebp
  0086d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00870	53		 push	 ebx
  00871	56		 push	 esi
  00872	57		 push	 edi

; 324  : 	int aIndex = lpMsg->Number ;

  00873	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00876	0f bf 48 0e	 movsx	 ecx, WORD PTR [eax+14]
  0087a	89 4d f8	 mov	 DWORD PTR _aIndex$[ebp], ecx

; 325  : 	char szId[11];
; 326  : 	char EndsDays[13];
; 327  : 
; 328  : 	szId[10] = 0;

  0087d	c6 45 f6 00	 mov	 BYTE PTR _szId$[ebp+10], 0

; 329  : 
; 330  : 	memcpy(szId, lpMsg->Id, sizeof(lpMsg->Id));

  00881	6a 0a		 push	 10			; 0000000aH
  00883	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00886	83 c0 03	 add	 eax, 3
  00889	50		 push	 eax
  0088a	8d 4d ec	 lea	 ecx, DWORD PTR _szId$[ebp]
  0088d	51		 push	 ecx
  0088e	e8 00 00 00 00	 call	 _memcpy
  00893	83 c4 0c	 add	 esp, 12			; 0000000cH

; 331  : 
; 332  : 	if (gObjIsAccontConnect(aIndex, szId) == 0 )

  00896	8d 45 ec	 lea	 eax, DWORD PTR _szId$[ebp]
  00899	50		 push	 eax
  0089a	8b 4d f8	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  0089d	51		 push	 ecx
  0089e	e8 00 00 00 00	 call	 ?gObjIsAccontConnect@@YAHHPAD@Z ; gObjIsAccontConnect
  008a3	83 c4 08	 add	 esp, 8
  008a6	85 c0		 test	 eax, eax
  008a8	75 02		 jne	 SHORT $LN2@GJPBillCec

; 333  : 	{
; 334  : 		return ;

  008aa	eb 7b		 jmp	 SHORT $LN3@GJPBillCec
$LN2@GJPBillCec:

; 335  : 	}
; 336  : 
; 337  : 	memset(EndsDays, 0, sizeof(EndsDays));

  008ac	6a 0d		 push	 13			; 0000000dH
  008ae	6a 00		 push	 0
  008b0	8d 45 dc	 lea	 eax, DWORD PTR _EndsDays$[ebp]
  008b3	50		 push	 eax
  008b4	e8 00 00 00 00	 call	 _memset
  008b9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 338  : 	memcpy(EndsDays, lpMsg->EndsDays, sizeof(lpMsg->EndsDays));

  008bc	6a 0c		 push	 12			; 0000000cH
  008be	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  008c1	83 c0 12	 add	 eax, 18			; 00000012H
  008c4	50		 push	 eax
  008c5	8d 4d dc	 lea	 ecx, DWORD PTR _EndsDays$[ebp]
  008c8	51		 push	 ecx
  008c9	e8 00 00 00 00	 call	 _memcpy
  008ce	83 c4 0c	 add	 esp, 12			; 0000000cH

; 339  : 
; 340  : 	if ( m_ObjBill[aIndex].SetBill( lpMsg->cCertifyType , lpMsg->PayCode, lpMsg->EndTime , EndsDays) == TRUE )

  008d1	8d 45 dc	 lea	 eax, DWORD PTR _EndsDays$[ebp]
  008d4	50		 push	 eax
  008d5	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  008d8	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  008db	52		 push	 edx
  008dc	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  008df	0f b6 48 11	 movzx	 ecx, BYTE PTR [eax+17]
  008e3	51		 push	 ecx
  008e4	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  008e7	0f b6 42 10	 movzx	 eax, BYTE PTR [edx+16]
  008eb	50		 push	 eax
  008ec	8b 4d f8	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  008ef	6b c9 18	 imul	 ecx, 24			; 00000018H
  008f2	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?m_ObjBill@@3PAVBILL_CLASS@@A ; m_ObjBill
  008f8	e8 00 00 00 00	 call	 ?SetBill@BILL_CLASS@@QAEHEEKPAD@Z ; BILL_CLASS::SetBill
  008fd	83 f8 01	 cmp	 eax, 1
  00900	75 25		 jne	 SHORT $LN3@GJPBillCec

; 341  : 	{
; 342  : 		gObjAddMsgSendDelay(&gObj[aIndex], 1000, aIndex, 100, 0);

  00902	6a 00		 push	 0
  00904	6a 64		 push	 100			; 00000064H
  00906	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00909	50		 push	 eax
  0090a	68 e8 03 00 00	 push	 1000			; 000003e8H
  0090f	8b 4d f8	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  00912	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00918	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0091e	51		 push	 ecx
  0091f	e8 00 00 00 00	 call	 ?gObjAddMsgSendDelay@@YAXPAUOBJECTSTRUCT@@HHHH@Z ; gObjAddMsgSendDelay
  00924	83 c4 14	 add	 esp, 20			; 00000014H
$LN3@GJPBillCec:

; 343  : 	}
; 344  : }

  00927	5f		 pop	 edi
  00928	5e		 pop	 esi
  00929	5b		 pop	 ebx
  0092a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0092d	33 cd		 xor	 ecx, ebp
  0092f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00934	8b e5		 mov	 esp, ebp
  00936	5d		 pop	 ebp
  00937	c3		 ret	 0
?GJPBillCeckRecv@@YAXPAUSDHP_BILLSEARCH_RESULT@@@Z ENDP	; GJPBillCeckRecv
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\user.h
_TEXT	ENDS
;	COMDAT ?SetBill@BILL_CLASS@@QAEHEEKPAD@Z
_TEXT	SEGMENT
_bRet$ = -8						; size = 4
_this$ = -4						; size = 4
_certify_type$ = 8					; size = 1
_pay$ = 12						; size = 1
_end_time$ = 16						; size = 4
_ends_days$ = 20					; size = 4
?SetBill@BILL_CLASS@@QAEHEEKPAD@Z PROC			; BILL_CLASS::SetBill, COMDAT
; _this$ = ecx

; 1755 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1756 : 		BOOL bRet=0;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _bRet$[ebp], 0

; 1757 : 
; 1758 : 		if ( this->cCertifyType == -1 )

  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00019	83 f9 ff	 cmp	 ecx, -1
  0001c	75 07		 jne	 SHORT $LN1@SetBill

; 1759 : 		{
; 1760 : 			bRet = 1;

  0001e	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _bRet$[ebp], 1
$LN1@SetBill:

; 1761 : 		}
; 1762 : 
; 1763 : 		this->cCertifyType = certify_type;

  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 4d 08	 mov	 cl, BYTE PTR _certify_type$[ebp]
  0002b	88 08		 mov	 BYTE PTR [eax], cl

; 1764 : 		this->PayCode = pay;

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8a 4d 0c	 mov	 cl, BYTE PTR _pay$[ebp]
  00033	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 1765 : 		this->EndTime = end_time;

  00036	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00039	8b 4d 10	 mov	 ecx, DWORD PTR _end_time$[ebp]
  0003c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 1766 : 		strcpy(this->EndsDays, ends_days);

  0003f	8b 45 14	 mov	 eax, DWORD PTR _ends_days$[ebp]
  00042	50		 push	 eax
  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	83 c1 08	 add	 ecx, 8
  00049	51		 push	 ecx
  0004a	e8 00 00 00 00	 call	 _strcpy
  0004f	83 c4 08	 add	 esp, 8

; 1767 : 		return bRet;

  00052	8b 45 f8	 mov	 eax, DWORD PTR _bRet$[ebp]

; 1768 : 	}

  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 10 00	 ret	 16			; 00000010H
?SetBill@BILL_CLASS@@QAEHEEKPAD@Z ENDP			; BILL_CLASS::SetBill
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?gObjUserKill@@YAXH@Z:PROC			; gObjUserKill
EXTRN	?GCServerMsgStringSend@@YAXPADHE@Z:PROC		; GCServerMsgStringSend
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\sprotocol.cpp
_TEXT	SEGMENT
_number$ = -20						; size = 4
_szId$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?GJPUserKillRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z PROC	; GJPUserKillRecv

; 348  : {

  00940	55		 push	 ebp
  00941	8b ec		 mov	 ebp, esp
  00943	83 ec 54	 sub	 esp, 84			; 00000054H
  00946	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0094b	33 c5		 xor	 eax, ebp
  0094d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00950	53		 push	 ebx
  00951	56		 push	 esi
  00952	57		 push	 edi

; 349  : 	char szId[11];
; 350  : 	int number;
; 351  : 	szId[10] = 0;

  00953	c6 45 fa 00	 mov	 BYTE PTR _szId$[ebp+10], 0

; 352  : 
; 353  : 	memcpy(szId, lpMsg->Id , sizeof(lpMsg->Id) );

  00957	6a 0a		 push	 10			; 0000000aH
  00959	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  0095c	83 c0 03	 add	 eax, 3
  0095f	50		 push	 eax
  00960	8d 4d f0	 lea	 ecx, DWORD PTR _szId$[ebp]
  00963	51		 push	 ecx
  00964	e8 00 00 00 00	 call	 _memcpy
  00969	83 c4 0c	 add	 esp, 12			; 0000000cH

; 354  : 	number = lpMsg->Number;

  0096c	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  0096f	0f bf 48 0e	 movsx	 ecx, WORD PTR [eax+14]
  00973	89 4d ec	 mov	 DWORD PTR _number$[ebp], ecx

; 355  : 
; 356  : 	if (gObjIsAccontConnect(number, szId) == 0 )

  00976	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  00979	50		 push	 eax
  0097a	8b 4d ec	 mov	 ecx, DWORD PTR _number$[ebp]
  0097d	51		 push	 ecx
  0097e	e8 00 00 00 00	 call	 ?gObjIsAccontConnect@@YAHHPAD@Z ; gObjIsAccontConnect
  00983	83 c4 08	 add	 esp, 8
  00986	85 c0		 test	 eax, eax
  00988	75 02		 jne	 SHORT $LN1@GJPUserKil

; 357  : 	{
; 358  : 		return;

  0098a	eb 2a		 jmp	 SHORT $LN2@GJPUserKil
$LN1@GJPUserKil:

; 359  : 	}
; 360  : 
; 361  : 	GCServerMsgStringSend(lMsg.Get( MSGGET(6, 66)), number, 0);

  0098c	6a 00		 push	 0
  0098e	8b 45 ec	 mov	 eax, DWORD PTR _number$[ebp]
  00991	50		 push	 eax
  00992	68 42 06 00 00	 push	 1602			; 00000642H
  00997	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0099c	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  009a1	50		 push	 eax
  009a2	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  009a7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 362  : 	gObjUserKill(number);

  009aa	8b 45 ec	 mov	 eax, DWORD PTR _number$[ebp]
  009ad	50		 push	 eax
  009ae	e8 00 00 00 00	 call	 ?gObjUserKill@@YAXH@Z	; gObjUserKill
  009b3	83 c4 04	 add	 esp, 4
$LN2@GJPUserKil:

; 363  : }

  009b6	5f		 pop	 edi
  009b7	5e		 pop	 esi
  009b8	5b		 pop	 ebx
  009b9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  009bc	33 cd		 xor	 ecx, ebp
  009be	e8 00 00 00 00	 call	 @__security_check_cookie@4
  009c3	8b e5		 mov	 esp, ebp
  009c5	5d		 pop	 ebp
  009c6	c3		 ret	 0
?GJPUserKillRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z ENDP	; GJPUserKillRecv
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_strcmp:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_n$ = -20						; size = 4
_szId$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?JGOtherJoin@@YAXPAUSDHP_OTHERJOINMSG@@@Z PROC		; JGOtherJoin

; 367  : {

  009d0	55		 push	 ebp
  009d1	8b ec		 mov	 ebp, esp
  009d3	83 ec 54	 sub	 esp, 84			; 00000054H
  009d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  009db	33 c5		 xor	 eax, ebp
  009dd	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  009e0	53		 push	 ebx
  009e1	56		 push	 esi
  009e2	57		 push	 edi

; 368  : 	char szId[11];
; 369  : 	szId[10]=0;

  009e3	c6 45 fa 00	 mov	 BYTE PTR _szId$[ebp+10], 0

; 370  : 	int n;
; 371  : 
; 372  : 	memcpy(szId, lpMsg->AccountID, sizeof(lpMsg->AccountID));

  009e7	6a 0a		 push	 10			; 0000000aH
  009e9	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  009ec	83 c0 03	 add	 eax, 3
  009ef	50		 push	 eax
  009f0	8d 4d f0	 lea	 ecx, DWORD PTR _szId$[ebp]
  009f3	51		 push	 ecx
  009f4	e8 00 00 00 00	 call	 _memcpy
  009f9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 373  : 
; 374  : 	for (n= OBJ_STARTUSERINDEX; n<OBJMAX;n++)

  009fc	c7 45 ec b0 36
	00 00		 mov	 DWORD PTR _n$[ebp], 14000 ; 000036b0H
  00a03	eb 09		 jmp	 SHORT $LN7@JGOtherJoi
$LN6@JGOtherJoi:
  00a05	8b 45 ec	 mov	 eax, DWORD PTR _n$[ebp]
  00a08	83 c0 01	 add	 eax, 1
  00a0b	89 45 ec	 mov	 DWORD PTR _n$[ebp], eax
$LN7@JGOtherJoi:
  00a0e	81 7d ec 98 3a
	00 00		 cmp	 DWORD PTR _n$[ebp], 15000 ; 00003a98H
  00a15	0f 8d 97 00 00
	00		 jge	 $LN8@JGOtherJoi

; 375  : 	{
; 376  : 		if ( gObj[n].Connected >= PLAYER_LOGGED )

  00a1b	8b 45 ec	 mov	 eax, DWORD PTR _n$[ebp]
  00a1e	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00a24	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a2a	83 7c 01 04 02	 cmp	 DWORD PTR [ecx+eax+4], 2
  00a2f	7c 7c		 jl	 SHORT $LN4@JGOtherJoi

; 377  : 		{
; 378  : 			if ( gObj[n].AccountID[0] == szId[0] )

  00a31	8b 45 ec	 mov	 eax, DWORD PTR _n$[ebp]
  00a34	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00a3a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a40	0f be 54 01 6c	 movsx	 edx, BYTE PTR [ecx+eax+108]
  00a45	0f be 45 f0	 movsx	 eax, BYTE PTR _szId$[ebp]
  00a49	3b d0		 cmp	 edx, eax
  00a4b	75 60		 jne	 SHORT $LN4@JGOtherJoi

; 379  : 			{
; 380  : 				if ( gObj[n].AccountID[1] == szId[1] )

  00a4d	8b 45 ec	 mov	 eax, DWORD PTR _n$[ebp]
  00a50	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00a56	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a5c	0f be 54 01 6d	 movsx	 edx, BYTE PTR [ecx+eax+109]
  00a61	0f be 45 f1	 movsx	 eax, BYTE PTR _szId$[ebp+1]
  00a65	3b d0		 cmp	 edx, eax
  00a67	75 44		 jne	 SHORT $LN4@JGOtherJoi

; 381  : 				{
; 382  : 					if ( strcmp(gObj[n].AccountID , szId) == 0 )

  00a69	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  00a6c	50		 push	 eax
  00a6d	8b 4d ec	 mov	 ecx, DWORD PTR _n$[ebp]
  00a70	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00a76	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a7c	8d 44 0a 6c	 lea	 eax, DWORD PTR [edx+ecx+108]
  00a80	50		 push	 eax
  00a81	e8 00 00 00 00	 call	 _strcmp
  00a86	83 c4 08	 add	 esp, 8
  00a89	85 c0		 test	 eax, eax
  00a8b	75 20		 jne	 SHORT $LN4@JGOtherJoi

; 383  : 					{
; 384  : 						GCServerMsgStringSend(lMsg.Get( MSGGET(4, 107)), n, 1 );

  00a8d	6a 01		 push	 1
  00a8f	8b 45 ec	 mov	 eax, DWORD PTR _n$[ebp]
  00a92	50		 push	 eax
  00a93	68 6b 04 00 00	 push	 1131			; 0000046bH
  00a98	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00a9d	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00aa2	50		 push	 eax
  00aa3	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00aa8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 385  : 						break;

  00aab	eb 05		 jmp	 SHORT $LN8@JGOtherJoi
$LN4@JGOtherJoi:

; 386  : 					}
; 387  : 				}
; 388  : 			}
; 389  : 		}
; 390  : 	}

  00aad	e9 53 ff ff ff	 jmp	 $LN6@JGOtherJoi
$LN8@JGOtherJoi:

; 391  : }

  00ab2	5f		 pop	 edi
  00ab3	5e		 pop	 esi
  00ab4	5b		 pop	 ebx
  00ab5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00ab8	33 cd		 xor	 ecx, ebp
  00aba	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00abf	8b e5		 mov	 esp, ebp
  00ac1	5d		 pop	 ebp
  00ac2	c3		 ret	 0
?JGOtherJoin@@YAXPAUSDHP_OTHERJOINMSG@@@Z ENDP		; JGOtherJoin
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?SendClose@ConnectEx@@QAEXHH@Z:PROC		; ConnectEx::SendClose
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_number$ = -20						; size = 4
_szId$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?GJPUserDisconnectRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z PROC ; GJPUserDisconnectRecv

; 395  : {

  00ad0	55		 push	 ebp
  00ad1	8b ec		 mov	 ebp, esp
  00ad3	83 ec 54	 sub	 esp, 84			; 00000054H
  00ad6	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00adb	33 c5		 xor	 eax, ebp
  00add	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00ae0	53		 push	 ebx
  00ae1	56		 push	 esi
  00ae2	57		 push	 edi

; 396  : 	char szId[11];
; 397  : 	szId[10]=0;

  00ae3	c6 45 fa 00	 mov	 BYTE PTR _szId$[ebp+10], 0

; 398  : 	int number;
; 399  : 
; 400  : 	memcpy( szId, lpMsg->Id , sizeof( lpMsg->Id ) );

  00ae7	6a 0a		 push	 10			; 0000000aH
  00ae9	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00aec	83 c0 03	 add	 eax, 3
  00aef	50		 push	 eax
  00af0	8d 4d f0	 lea	 ecx, DWORD PTR _szId$[ebp]
  00af3	51		 push	 ecx
  00af4	e8 00 00 00 00	 call	 _memcpy
  00af9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 401  : 	number = lpMsg->Number;

  00afc	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00aff	0f bf 48 0e	 movsx	 ecx, WORD PTR [eax+14]
  00b03	89 4d ec	 mov	 DWORD PTR _number$[ebp], ecx

; 402  : 
; 403  : 	if ( gObjIsAccontConnect(number, szId ) == 0 )

  00b06	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  00b09	50		 push	 eax
  00b0a	8b 4d ec	 mov	 ecx, DWORD PTR _number$[ebp]
  00b0d	51		 push	 ecx
  00b0e	e8 00 00 00 00	 call	 ?gObjIsAccontConnect@@YAHHPAD@Z ; gObjIsAccontConnect
  00b13	83 c4 08	 add	 esp, 8
  00b16	85 c0		 test	 eax, eax
  00b18	75 02		 jne	 SHORT $LN1@GJPUserDis

; 404  : 	{
; 405  : 		return;

  00b1a	eb 3a		 jmp	 SHORT $LN2@GJPUserDis
$LN1@GJPUserDis:

; 406  : 	}
; 407  : 
; 408  : #if _RECONNECT_
; 409  : 	g_ConnectEx.SendClose(number,0);

  00b1c	6a 00		 push	 0
  00b1e	8b 45 ec	 mov	 eax, DWORD PTR _number$[ebp]
  00b21	50		 push	 eax
  00b22	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ConnectEx@@3VConnectEx@@A ; g_ConnectEx
  00b27	e8 00 00 00 00	 call	 ?SendClose@ConnectEx@@QAEXHH@Z ; ConnectEx::SendClose

; 410  : #endif
; 411  : 
; 412  : 	GCServerMsgStringSend(lMsg.Get( MSGGET(6, 67) ), number, 0 );

  00b2c	6a 00		 push	 0
  00b2e	8b 45 ec	 mov	 eax, DWORD PTR _number$[ebp]
  00b31	50		 push	 eax
  00b32	68 43 06 00 00	 push	 1603			; 00000643H
  00b37	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00b3c	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00b41	50		 push	 eax
  00b42	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00b47	83 c4 0c	 add	 esp, 12			; 0000000cH

; 413  : 	gObjUserKill(number);

  00b4a	8b 45 ec	 mov	 eax, DWORD PTR _number$[ebp]
  00b4d	50		 push	 eax
  00b4e	e8 00 00 00 00	 call	 ?gObjUserKill@@YAXH@Z	; gObjUserKill
  00b53	83 c4 04	 add	 esp, 4
$LN2@GJPUserDis:

; 414  : }

  00b56	5f		 pop	 edi
  00b57	5e		 pop	 esi
  00b58	5b		 pop	 ebx
  00b59	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00b5c	33 cd		 xor	 ecx, ebp
  00b5e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00b63	8b e5		 mov	 esp, ebp
  00b65	5d		 pop	 ebp
  00b66	c3		 ret	 0
?GJPUserDisconnectRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z ENDP ; GJPUserDisconnectRecv
; Function compile flags: /Odtp /ZI
_lpMsg$ = 8						; size = 4
?JGPExitCodeRecv@@YAXPAUSDHP_EXITMSG@@@Z PROC		; JGPExitCodeRecv

; 418  : {

  00b70	55		 push	 ebp
  00b71	8b ec		 mov	 ebp, esp
  00b73	83 ec 40	 sub	 esp, 64			; 00000040H
  00b76	53		 push	 ebx
  00b77	56		 push	 esi
  00b78	57		 push	 edi

; 419  : 	if ( lpMsg->ExitCode[0] == 70 && lpMsg->ExitCode[1] == 70 && lpMsg->ExitCode[2] == 88 )

  00b79	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00b7c	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  00b80	83 f9 46	 cmp	 ecx, 70			; 00000046H
  00b83	75 30		 jne	 SHORT $LN2@JGPExitCod
  00b85	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00b88	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00b8c	83 f9 46	 cmp	 ecx, 70			; 00000046H
  00b8f	75 24		 jne	 SHORT $LN2@JGPExitCod
  00b91	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00b94	0f b6 48 05	 movzx	 ecx, BYTE PTR [eax+5]
  00b98	83 f9 58	 cmp	 ecx, 88			; 00000058H
  00b9b	75 18		 jne	 SHORT $LN2@JGPExitCod

; 420  : 	{
; 421  : 		SendMessage( ghWnd, WM_COMMAND, IDM_3_MINUTE_CLOSE, 0 );

  00b9d	6a 00		 push	 0
  00b9f	68 12 80 00 00	 push	 32786			; 00008012H
  00ba4	68 11 01 00 00	 push	 273			; 00000111H
  00ba9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  00bae	50		 push	 eax
  00baf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
$LN2@JGPExitCod:

; 422  : 	}
; 423  : }

  00bb5	5f		 pop	 edi
  00bb6	5e		 pop	 esi
  00bb7	5b		 pop	 ebx
  00bb8	8b e5		 mov	 esp, ebp
  00bba	5d		 pop	 ebp
  00bbb	c3		 ret	 0
?JGPExitCodeRecv@@YAXPAUSDHP_EXITMSG@@@Z ENDP		; JGPExitCodeRecv
_TEXT	ENDS
PUBLIC	?GetState@CDragonEvent@@QAEEXZ			; CDragonEvent::GetState
EXTRN	?Start@CDragonEvent@@QAEXXZ:PROC		; CDragonEvent::Start
EXTRN	?End@CDragonEvent@@QAEXXZ:PROC			; CDragonEvent::End
EXTRN	?DragonEvent@@3PAVCDragonEvent@@A:DWORD		; DragonEvent
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?JGPEventStart@@YAXPAUSDHP_EVENTSTART@@@Z PROC		; JGPEventStart

; 427  : {

  00bc0	55		 push	 ebp
  00bc1	8b ec		 mov	 ebp, esp
  00bc3	83 ec 40	 sub	 esp, 64			; 00000040H
  00bc6	53		 push	 ebx
  00bc7	56		 push	 esi
  00bc8	57		 push	 edi

; 428  : 	if ( lpMsg->Event == 1 )

  00bc9	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00bcc	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  00bd0	83 f9 01	 cmp	 ecx, 1
  00bd3	75 2a		 jne	 SHORT $LN4@JGPEventSt

; 429  : 	{
; 430  : 		if (DragonEvent->GetState() != 0 )

  00bd5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DragonEvent@@3PAVCDragonEvent@@A ; DragonEvent
  00bdb	e8 00 00 00 00	 call	 ?GetState@CDragonEvent@@QAEEXZ ; CDragonEvent::GetState
  00be0	0f b6 c0	 movzx	 eax, al
  00be3	85 c0		 test	 eax, eax
  00be5	74 0d		 je	 SHORT $LN2@JGPEventSt

; 431  : 		{
; 432  : 			DragonEvent->End();

  00be7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DragonEvent@@3PAVCDragonEvent@@A ; DragonEvent
  00bed	e8 00 00 00 00	 call	 ?End@CDragonEvent@@QAEXXZ ; CDragonEvent::End

; 433  : 		}
; 434  : 		else

  00bf2	eb 0b		 jmp	 SHORT $LN4@JGPEventSt
$LN2@JGPEventSt:

; 435  : 		{
; 436  : 			DragonEvent->Start();

  00bf4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DragonEvent@@3PAVCDragonEvent@@A ; DragonEvent
  00bfa	e8 00 00 00 00	 call	 ?Start@CDragonEvent@@QAEXXZ ; CDragonEvent::Start
$LN4@JGPEventSt:

; 437  : 		}
; 438  : 	}
; 439  : }

  00bff	5f		 pop	 edi
  00c00	5e		 pop	 esi
  00c01	5b		 pop	 ebx
  00c02	8b e5		 mov	 esp, ebp
  00c04	5d		 pop	 ebp
  00c05	c3		 ret	 0
?JGPEventStart@@YAXPAUSDHP_EVENTSTART@@@Z ENDP		; JGPEventStart
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\dragonevent.h
_TEXT	ENDS
;	COMDAT ?GetState@CDragonEvent@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@CDragonEvent@@QAEEXZ PROC			; CDragonEvent::GetState, COMDAT
; _this$ = ecx

; 16   : 	BYTE GetState(){return this->EventState;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 40 04	 mov	 al, BYTE PTR [eax+4]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetState@CDragonEvent@@QAEEXZ ENDP			; CDragonEvent::GetState
_TEXT	ENDS
EXTRN	?gMedalEvent@@3HA:DWORD				; gMedalEvent
EXTRN	?gHeartOfLoveEvent@@3HA:DWORD			; gHeartOfLoveEvent
EXTRN	?gFireCrackerEvent@@3HA:DWORD			; gFireCrackerEvent
EXTRN	?gXMasEvent@@3HA:DWORD				; gXMasEvent
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\sprotocol.cpp
_TEXT	SEGMENT
tv66 = -68						; size = 4
_lpMsg$ = 8						; size = 4
?JGPEventControl@@YAXPAUSDHP_EVENTCONTROL@@@Z PROC	; JGPEventControl

; 443  : {

  00c10	55		 push	 ebp
  00c11	8b ec		 mov	 ebp, esp
  00c13	83 ec 44	 sub	 esp, 68			; 00000044H
  00c16	53		 push	 ebx
  00c17	56		 push	 esi
  00c18	57		 push	 edi

; 444  : 	switch ( lpMsg->Event  )

  00c19	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00c1c	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  00c20	89 4d bc	 mov	 DWORD PTR tv66[ebp], ecx
  00c23	83 7d bc 04	 cmp	 DWORD PTR tv66[ebp], 4
  00c27	77 7b		 ja	 SHORT $LN11@JGPEventCo
  00c29	8b 55 bc	 mov	 edx, DWORD PTR tv66[ebp]
  00c2c	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN13@JGPEventCo[edx*4]
$LN8@JGPEventCo:

; 445  : 	{
; 446  : 		case DRAGON_EVENT:
; 447  : 			if ( lpMsg->Stat != 0 )

  00c33	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00c36	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00c3a	85 c9		 test	 ecx, ecx
  00c3c	74 1f		 je	 SHORT $LN7@JGPEventCo

; 448  : 			{
; 449  : 				if (DragonEvent->GetState() == 0 )

  00c3e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DragonEvent@@3PAVCDragonEvent@@A ; DragonEvent
  00c44	e8 00 00 00 00	 call	 ?GetState@CDragonEvent@@QAEEXZ ; CDragonEvent::GetState
  00c49	0f b6 c0	 movzx	 eax, al
  00c4c	85 c0		 test	 eax, eax
  00c4e	75 0b		 jne	 SHORT $LN6@JGPEventCo

; 450  : 				{
; 451  : 					DragonEvent->Start();

  00c50	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DragonEvent@@3PAVCDragonEvent@@A ; DragonEvent
  00c56	e8 00 00 00 00	 call	 ?Start@CDragonEvent@@QAEXXZ ; CDragonEvent::Start
$LN6@JGPEventCo:

; 452  : 				}
; 453  : 			}
; 454  : 			else

  00c5b	eb 0b		 jmp	 SHORT $LN5@JGPEventCo
$LN7@JGPEventCo:

; 455  : 			{
; 456  : 				DragonEvent->End();

  00c5d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DragonEvent@@3PAVCDragonEvent@@A ; DragonEvent
  00c63	e8 00 00 00 00	 call	 ?End@CDragonEvent@@QAEXXZ ; CDragonEvent::End
$LN5@JGPEventCo:

; 457  : 			}
; 458  : 			break;

  00c68	eb 3a		 jmp	 SHORT $LN11@JGPEventCo
$LN4@JGPEventCo:

; 459  : 
; 460  : 		case XMAS_EVENT:
; 461  : 			gXMasEvent = lpMsg->Stat  ;

  00c6a	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00c6d	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00c71	89 0d 00 00 00
	00		 mov	 DWORD PTR ?gXMasEvent@@3HA, ecx ; gXMasEvent

; 462  : 			break;

  00c77	eb 2b		 jmp	 SHORT $LN11@JGPEventCo
$LN3@JGPEventCo:

; 463  : 
; 464  : 		case FIRECRACKER_EVENT:
; 465  : 			gFireCrackerEvent = lpMsg->Stat  ;

  00c79	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00c7c	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00c80	89 0d 00 00 00
	00		 mov	 DWORD PTR ?gFireCrackerEvent@@3HA, ecx ; gFireCrackerEvent

; 466  : 			break;

  00c86	eb 1c		 jmp	 SHORT $LN11@JGPEventCo
$LN2@JGPEventCo:

; 467  : 
; 468  : 		case HEARTOFLOVE_EVENT:
; 469  : 			gHeartOfLoveEvent = lpMsg->Stat  ;

  00c88	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00c8b	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00c8f	89 0d 00 00 00
	00		 mov	 DWORD PTR ?gHeartOfLoveEvent@@3HA, ecx ; gHeartOfLoveEvent

; 470  : 			break;

  00c95	eb 0d		 jmp	 SHORT $LN11@JGPEventCo
$LN1@JGPEventCo:

; 471  : 
; 472  : 		case MEDAL_EVENT:
; 473  : 			gMedalEvent = lpMsg->Stat  ;

  00c97	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00c9a	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00c9e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?gMedalEvent@@3HA, ecx ; gMedalEvent
$LN11@JGPEventCo:

; 474  : 			break;
; 475  : 	}
; 476  : }

  00ca4	5f		 pop	 edi
  00ca5	5e		 pop	 esi
  00ca6	5b		 pop	 ebx
  00ca7	8b e5		 mov	 esp, ebp
  00ca9	5d		 pop	 ebp
  00caa	c3		 ret	 0
  00cab	90		 npad	 1
$LN13@JGPEventCo:
  00cac	00 00 00 00	 DD	 $LN8@JGPEventCo
  00cb0	00 00 00 00	 DD	 $LN4@JGPEventCo
  00cb4	00 00 00 00	 DD	 $LN3@JGPEventCo
  00cb8	00 00 00 00	 DD	 $LN2@JGPEventCo
  00cbc	00 00 00 00	 DD	 $LN1@JGPEventCo
?JGPEventControl@@YAXPAUSDHP_EVENTCONTROL@@@Z ENDP	; JGPEventControl
_TEXT	ENDS
EXTRN	?ReadGameEtcInfo@@YAXW4MU_ETC_TYPE@@@Z:PROC	; ReadGameEtcInfo
EXTRN	?ReadEventInfo@@YAXW4MU_EVENT_TYPE@@@Z:PROC	; ReadEventInfo
EXTRN	?ShopDataLoad@@YAHXZ:PROC			; ShopDataLoad
EXTRN	?GameMonsterAllCloseAndReLoad@@YAXXZ:PROC	; GameMonsterAllCloseAndReLoad
EXTRN	?ReadCommonServerInfo@@YAXXZ:PROC		; ReadCommonServerInfo
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv66 = -68						; size = 4
_lpMsg$ = 8						; size = 4
?JGPOptionControl@@YAXPAUSDHP_OPTIONCONTROL@@@Z PROC	; JGPOptionControl

; 480  : {

  00cc0	55		 push	 ebp
  00cc1	8b ec		 mov	 ebp, esp
  00cc3	83 ec 44	 sub	 esp, 68			; 00000044H
  00cc6	53		 push	 ebx
  00cc7	56		 push	 esi
  00cc8	57		 push	 edi

; 481  : 	switch ( lpMsg->Option )

  00cc9	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00ccc	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  00cd0	89 4d bc	 mov	 DWORD PTR tv66[ebp], ecx
  00cd3	83 7d bc 05	 cmp	 DWORD PTR tv66[ebp], 5
  00cd7	77 46		 ja	 SHORT $LN9@JGPOptionC
  00cd9	8b 55 bc	 mov	 edx, DWORD PTR tv66[ebp]
  00cdc	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN11@JGPOptionC[edx*4]
$LN6@JGPOptionC:

; 482  : 	{
; 483  : 		case OPTION_RELOAD:
; 484  : 			ReadCommonServerInfo();

  00ce3	e8 00 00 00 00	 call	 ?ReadCommonServerInfo@@YAXXZ ; ReadCommonServerInfo

; 485  : 			break;

  00ce8	eb 35		 jmp	 SHORT $LN9@JGPOptionC
$LN5@JGPOptionC:

; 486  : 
; 487  : 		case MONSTER_RELOAD:
; 488  : 			GameMonsterAllCloseAndReLoad();

  00cea	e8 00 00 00 00	 call	 ?GameMonsterAllCloseAndReLoad@@YAXXZ ; GameMonsterAllCloseAndReLoad

; 489  : 			break;

  00cef	eb 2e		 jmp	 SHORT $LN9@JGPOptionC
$LN4@JGPOptionC:

; 490  : 
; 491  : 		case SHOP_RELOAD:
; 492  : 			ShopDataLoad();

  00cf1	e8 00 00 00 00	 call	 ?ShopDataLoad@@YAHXZ	; ShopDataLoad

; 493  : 			break;

  00cf6	eb 27		 jmp	 SHORT $LN9@JGPOptionC
$LN3@JGPOptionC:

; 494  : 
; 495  : 		case ALLOPTION_RELOAD:
; 496  : 			ReadCommonServerInfo();

  00cf8	e8 00 00 00 00	 call	 ?ReadCommonServerInfo@@YAXXZ ; ReadCommonServerInfo

; 497  : 			GameMonsterAllCloseAndReLoad();

  00cfd	e8 00 00 00 00	 call	 ?GameMonsterAllCloseAndReLoad@@YAXXZ ; GameMonsterAllCloseAndReLoad

; 498  : 			ShopDataLoad();

  00d02	e8 00 00 00 00	 call	 ?ShopDataLoad@@YAHXZ	; ShopDataLoad

; 499  : 			break;

  00d07	eb 16		 jmp	 SHORT $LN9@JGPOptionC
$LN2@JGPOptionC:

; 500  : 
; 501  : 		case EVENTINFO_RELOAD:
; 502  : 			ReadEventInfo(MU_EVENT_ALL );

  00d09	6a 00		 push	 0
  00d0b	e8 00 00 00 00	 call	 ?ReadEventInfo@@YAXW4MU_EVENT_TYPE@@@Z ; ReadEventInfo
  00d10	83 c4 04	 add	 esp, 4

; 503  : 			break;

  00d13	eb 0a		 jmp	 SHORT $LN9@JGPOptionC
$LN1@JGPOptionC:

; 504  : 
; 505  : 		case ETCINFO_RELOAD:
; 506  : 			ReadGameEtcInfo(MU_ETC_ALL );

  00d15	6a 00		 push	 0
  00d17	e8 00 00 00 00	 call	 ?ReadGameEtcInfo@@YAXW4MU_ETC_TYPE@@@Z ; ReadGameEtcInfo
  00d1c	83 c4 04	 add	 esp, 4
$LN9@JGPOptionC:

; 507  : 			break;
; 508  : 	}
; 509  : }

  00d1f	5f		 pop	 edi
  00d20	5e		 pop	 esi
  00d21	5b		 pop	 ebx
  00d22	8b e5		 mov	 esp, ebp
  00d24	5d		 pop	 ebp
  00d25	c3		 ret	 0
  00d26	8b ff		 npad	 2
$LN11@JGPOptionC:
  00d28	00 00 00 00	 DD	 $LN6@JGPOptionC
  00d2c	00 00 00 00	 DD	 $LN5@JGPOptionC
  00d30	00 00 00 00	 DD	 $LN4@JGPOptionC
  00d34	00 00 00 00	 DD	 $LN3@JGPOptionC
  00d38	00 00 00 00	 DD	 $LN2@JGPOptionC
  00d3c	00 00 00 00	 DD	 $LN1@JGPOptionC
?JGPOptionControl@@YAXPAUSDHP_OPTIONCONTROL@@@Z ENDP	; JGPOptionControl
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?LoveHeartEventSend@@YAXHPAD0@Z			; LoveHeartEventSend
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pMsg$ = -28						; size = 23
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_AcountId$ = 12						; size = 4
_Name$ = 16						; size = 4
?LoveHeartEventSend@@YAXHPAD0@Z PROC			; LoveHeartEventSend

; 513  : {

  00d40	55		 push	 ebp
  00d41	8b ec		 mov	 ebp, esp
  00d43	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00d46	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00d4b	33 c5		 xor	 eax, ebp
  00d4d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00d50	53		 push	 ebx
  00d51	56		 push	 esi
  00d52	57		 push	 edi

; 514  : 	SDHP_LOVEHEARTEVENT pMsg;
; 515  : 
; 516  : 	pMsg.h.c = 0xC1;

  00d53	c6 45 e4 c1	 mov	 BYTE PTR _pMsg$[ebp], 193 ; 000000c1H

; 517  : 	pMsg.h.headcode = 0x30;

  00d57	c6 45 e6 30	 mov	 BYTE PTR _pMsg$[ebp+2], 48 ; 00000030H

; 518  : 	pMsg.h.size = sizeof(SDHP_LOVEHEARTEVENT);

  00d5b	c6 45 e5 17	 mov	 BYTE PTR _pMsg$[ebp+1], 23 ; 00000017H

; 519  : 
; 520  : 	memcpy(pMsg.Account , AcountId, sizeof(pMsg.Account));

  00d5f	6a 0a		 push	 10			; 0000000aH
  00d61	8b 45 0c	 mov	 eax, DWORD PTR _AcountId$[ebp]
  00d64	50		 push	 eax
  00d65	8d 4d e7	 lea	 ecx, DWORD PTR _pMsg$[ebp+3]
  00d68	51		 push	 ecx
  00d69	e8 00 00 00 00	 call	 _memcpy
  00d6e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 521  : 	memcpy(pMsg.Name , Name, sizeof(pMsg.Name) );

  00d71	6a 0a		 push	 10			; 0000000aH
  00d73	8b 45 10	 mov	 eax, DWORD PTR _Name$[ebp]
  00d76	50		 push	 eax
  00d77	8d 4d f1	 lea	 ecx, DWORD PTR _pMsg$[ebp+13]
  00d7a	51		 push	 ecx
  00d7b	e8 00 00 00 00	 call	 _memcpy
  00d80	83 c4 0c	 add	 esp, 12			; 0000000cH

; 522  : 
; 523  : 	wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size);

  00d83	0f b6 45 e5	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  00d87	50		 push	 eax
  00d88	8d 4d e4	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  00d8b	51		 push	 ecx
  00d8c	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  00d91	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 524  : }

  00d96	5f		 pop	 edi
  00d97	5e		 pop	 esi
  00d98	5b		 pop	 ebx
  00d99	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00d9c	33 cd		 xor	 ecx, ebp
  00d9e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00da3	8b e5		 mov	 esp, ebp
  00da5	5d		 pop	 ebp
  00da6	c3		 ret	 0
?LoveHeartEventSend@@YAXHPAD0@Z ENDP			; LoveHeartEventSend
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?AllSendServerMsg@@YAXPAD@Z:PROC		; AllSendServerMsg
EXTRN	__imp__wsprintfA:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv72 = -348						; size = 4
_n$235350 = -280					; size = 4
_Msg$ = -276						; size = 256
_number$ = -20						; size = 4
_szName$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?LoveHeartEventRecv@@YAXPAUSDHP_LOVEHEARTEVENT_RESULT@@@Z PROC ; LoveHeartEventRecv

; 528  : {

  00db0	55		 push	 ebp
  00db1	8b ec		 mov	 ebp, esp
  00db3	81 ec 5c 01 00
	00		 sub	 esp, 348		; 0000015cH
  00db9	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00dbe	33 c5		 xor	 eax, ebp
  00dc0	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00dc3	53		 push	 ebx
  00dc4	56		 push	 esi
  00dc5	57		 push	 edi

; 529  : 	char szName[11];
; 530  : 	int number;
; 531  : 	char Msg[256];
; 532  : 
; 533  : 	szName[10]=0;

  00dc6	c6 45 fa 00	 mov	 BYTE PTR _szName$[ebp+10], 0

; 534  : 
; 535  : 	memcpy(szName, lpMsg->Name, sizeof(lpMsg->Name));

  00dca	6a 0a		 push	 10			; 0000000aH
  00dcc	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00dcf	83 c0 04	 add	 eax, 4
  00dd2	50		 push	 eax
  00dd3	8d 4d f0	 lea	 ecx, DWORD PTR _szName$[ebp]
  00dd6	51		 push	 ecx
  00dd7	e8 00 00 00 00	 call	 _memcpy
  00ddc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 536  : 	number = lpMsg->Number;

  00ddf	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00de2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00de5	89 4d ec	 mov	 DWORD PTR _number$[ebp], ecx

; 537  : 
; 538  : 	switch ( lpMsg->Result )

  00de8	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00deb	8a 48 03	 mov	 cl, BYTE PTR [eax+3]
  00dee	88 8d a4 fe ff
	ff		 mov	 BYTE PTR tv72[ebp], cl
  00df4	80 bd a4 fe ff
	ff 00		 cmp	 BYTE PTR tv72[ebp], 0
  00dfb	74 12		 je	 SHORT $LN9@LoveHeartE
  00dfd	80 bd a4 fe ff
	ff 01		 cmp	 BYTE PTR tv72[ebp], 1
  00e04	0f 84 38 01 00
	00		 je	 $LN1@LoveHeartE
  00e0a	e9 6a 01 00 00	 jmp	 $LN12@LoveHeartE
$LN9@LoveHeartE:

; 539  : 	{
; 540  : 		case 0: // Registered Hearts of Love PangPangEvent
; 541  : 			{
; 542  : 				wsprintf(Msg, lMsg.Get( MSGGET(4, 80)), number );

  00e0f	8b 45 ec	 mov	 eax, DWORD PTR _number$[ebp]
  00e12	50		 push	 eax
  00e13	68 50 04 00 00	 push	 1104			; 00000450H
  00e18	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00e1d	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00e22	50		 push	 eax
  00e23	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _Msg$[ebp]
  00e29	51		 push	 ecx
  00e2a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  00e30	83 c4 0c	 add	 esp, 12			; 0000000cH

; 543  : 
; 544  : 				for (int n = OBJ_STARTUSERINDEX;n<OBJMAX;n++)

  00e33	c7 85 e8 fe ff
	ff b0 36 00 00	 mov	 DWORD PTR _n$235350[ebp], 14000 ; 000036b0H
  00e3d	eb 0f		 jmp	 SHORT $LN8@LoveHeartE
$LN7@LoveHeartE:
  00e3f	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _n$235350[ebp]
  00e45	83 c0 01	 add	 eax, 1
  00e48	89 85 e8 fe ff
	ff		 mov	 DWORD PTR _n$235350[ebp], eax
$LN8@LoveHeartE:
  00e4e	81 bd e8 fe ff
	ff 98 3a 00 00	 cmp	 DWORD PTR _n$235350[ebp], 15000 ; 00003a98H
  00e58	0f 8d e2 00 00
	00		 jge	 $LN6@LoveHeartE

; 545  : 				{
; 546  : 					if ( gObj[n].Connected >= PLAYER_LOGGED )

  00e5e	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _n$235350[ebp]
  00e64	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00e6a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00e70	83 7c 01 04 02	 cmp	 DWORD PTR [ecx+eax+4], 2
  00e75	0f 8c bb 00 00
	00		 jl	 $LN5@LoveHeartE

; 547  : 					{
; 548  : 						if (gObj[n].Name[0] == szName[0] )

  00e7b	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _n$235350[ebp]
  00e81	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00e87	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00e8d	0f be 54 01 77	 movsx	 edx, BYTE PTR [ecx+eax+119]
  00e92	0f be 45 f0	 movsx	 eax, BYTE PTR _szName$[ebp]
  00e96	3b d0		 cmp	 edx, eax
  00e98	0f 85 98 00 00
	00		 jne	 $LN5@LoveHeartE

; 549  : 						{
; 550  : 							if ( gObj[n].Name[1] == szName[1] )

  00e9e	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _n$235350[ebp]
  00ea4	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00eaa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00eb0	0f be 54 01 78	 movsx	 edx, BYTE PTR [ecx+eax+120]
  00eb5	0f be 45 f1	 movsx	 eax, BYTE PTR _szName$[ebp+1]
  00eb9	3b d0		 cmp	 edx, eax
  00ebb	75 79		 jne	 SHORT $LN5@LoveHeartE

; 551  : 							{
; 552  : 								if ( strcmp( gObj[n].Name, szName ) == 0 )

  00ebd	8d 45 f0	 lea	 eax, DWORD PTR _szName$[ebp]
  00ec0	50		 push	 eax
  00ec1	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR _n$235350[ebp]
  00ec7	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00ecd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00ed3	8d 44 0a 77	 lea	 eax, DWORD PTR [edx+ecx+119]
  00ed7	50		 push	 eax
  00ed8	e8 00 00 00 00	 call	 _strcmp
  00edd	83 c4 08	 add	 esp, 8
  00ee0	85 c0		 test	 eax, eax
  00ee2	75 52		 jne	 SHORT $LN5@LoveHeartE

; 553  : 								{
; 554  : 									GCServerMsgStringSend(Msg, n, 1);

  00ee4	6a 01		 push	 1
  00ee6	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _n$235350[ebp]
  00eec	50		 push	 eax
  00eed	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _Msg$[ebp]
  00ef3	51		 push	 ecx
  00ef4	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00ef9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 555  : 									wsprintf(Msg, lMsg.Get( MSGGET( 4, 81 ) ) );

  00efc	68 51 04 00 00	 push	 1105			; 00000451H
  00f01	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00f06	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00f0b	50		 push	 eax
  00f0c	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _Msg$[ebp]
  00f12	50		 push	 eax
  00f13	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  00f19	83 c4 08	 add	 esp, 8

; 556  : 									GCServerMsgStringSend(Msg, n, 1);

  00f1c	6a 01		 push	 1
  00f1e	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _n$235350[ebp]
  00f24	50		 push	 eax
  00f25	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _Msg$[ebp]
  00f2b	51		 push	 ecx
  00f2c	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00f31	83 c4 0c	 add	 esp, 12			; 0000000cH

; 557  : 									return;

  00f34	eb 43		 jmp	 SHORT $LN12@LoveHeartE
$LN5@LoveHeartE:

; 558  : 								}
; 559  : 							}
; 560  : 						}
; 561  : 					}
; 562  : 					continue;

  00f36	e9 04 ff ff ff	 jmp	 $LN7@LoveHeartE

; 563  : 				} // For

  00f3b	e9 ff fe ff ff	 jmp	 $LN7@LoveHeartE
$LN6@LoveHeartE:

; 564  : 			}
; 565  : 		break;

  00f40	eb 37		 jmp	 SHORT $LN12@LoveHeartE
$LN1@LoveHeartE:

; 566  : 
; 567  : 		case 1: // Winner of the Love Pang Pang Event
; 568  : 			wsprintf(Msg, lMsg.Get( MSGGET ( 4, 82 ) ), szName, number);

  00f42	8b 45 ec	 mov	 eax, DWORD PTR _number$[ebp]
  00f45	50		 push	 eax
  00f46	8d 4d f0	 lea	 ecx, DWORD PTR _szName$[ebp]
  00f49	51		 push	 ecx
  00f4a	68 52 04 00 00	 push	 1106			; 00000452H
  00f4f	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00f54	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00f59	50		 push	 eax
  00f5a	8d 95 ec fe ff
	ff		 lea	 edx, DWORD PTR _Msg$[ebp]
  00f60	52		 push	 edx
  00f61	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  00f67	83 c4 10	 add	 esp, 16			; 00000010H

; 569  : 			AllSendServerMsg(Msg);

  00f6a	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _Msg$[ebp]
  00f70	50		 push	 eax
  00f71	e8 00 00 00 00	 call	 ?AllSendServerMsg@@YAXPAD@Z ; AllSendServerMsg
  00f76	83 c4 04	 add	 esp, 4
$LN12@LoveHeartE:

; 570  : 			break;
; 571  : 	}
; 572  : }

  00f79	5f		 pop	 edi
  00f7a	5e		 pop	 esi
  00f7b	5b		 pop	 ebx
  00f7c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00f7f	33 cd		 xor	 ecx, ebp
  00f81	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00f86	8b e5		 mov	 esp, ebp
  00f88	5d		 pop	 ebp
  00f89	c3		 ret	 0
?LoveHeartEventRecv@@YAXPAUSDHP_LOVEHEARTEVENT_RESULT@@@Z ENDP ; LoveHeartEventRecv
_TEXT	ENDS
PUBLIC	?LoveHeartCreateSend@@YAXXZ			; LoveHeartCreateSend
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pMsg$ = -8						; size = 6
?LoveHeartCreateSend@@YAXXZ PROC			; LoveHeartCreateSend

; 576  : {

  00f90	55		 push	 ebp
  00f91	8b ec		 mov	 ebp, esp
  00f93	83 ec 48	 sub	 esp, 72			; 00000048H
  00f96	53		 push	 ebx
  00f97	56		 push	 esi
  00f98	57		 push	 edi

; 577  : 	SDHP_LOVEHEARTCREATE pMsg;
; 578  : 
; 579  : 	pMsg.h.c= 0xC1;

  00f99	c6 45 f8 c1	 mov	 BYTE PTR _pMsg$[ebp], 193 ; 000000c1H

; 580  : 	pMsg.h.headcode = 0x31;

  00f9d	c6 45 fa 31	 mov	 BYTE PTR _pMsg$[ebp+2], 49 ; 00000031H

; 581  : 	pMsg.h.size=sizeof(SDHP_LOVEHEARTCREATE);

  00fa1	c6 45 f9 06	 mov	 BYTE PTR _pMsg$[ebp+1], 6

; 582  : 
; 583  : 	wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size);

  00fa5	0f b6 45 f9	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  00fa9	50		 push	 eax
  00faa	8d 4d f8	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  00fad	51		 push	 ecx
  00fae	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  00fb3	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 584  : }

  00fb8	5f		 pop	 edi
  00fb9	5e		 pop	 esi
  00fba	5b		 pop	 ebx
  00fbb	8b e5		 mov	 esp, ebp
  00fbd	5d		 pop	 ebp
  00fbe	c3		 ret	 0
?LoveHeartCreateSend@@YAXXZ ENDP			; LoveHeartCreateSend
_TEXT	ENDS
PUBLIC	??_C@_0CG@EHIHJKDO@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3AL@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	_strlen:PROC
;	COMDAT ??_C@_0CG@EHIHJKDO@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3AL@
CONST	SEGMENT
??_C@_0CG@EHIHJKDO@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3AL@ DB '['
	DB	'Mu Manager][Notice Log][Type:ALL] %s', 00H	; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_szNotice$ = -68					; size = 61
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?AllNoticeRecv@@YAXPAUSDHP_NOTICE@@@Z PROC		; AllNoticeRecv

; 588  : {

  00fc0	55		 push	 ebp
  00fc1	8b ec		 mov	 ebp, esp
  00fc3	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  00fc9	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00fce	33 c5		 xor	 eax, ebp
  00fd0	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00fd3	53		 push	 ebx
  00fd4	56		 push	 esi
  00fd5	57		 push	 edi

; 589  : 	char szNotice[61];
; 590  : 
; 591  : 	szNotice[60]=0;

  00fd6	c6 45 f8 00	 mov	 BYTE PTR _szNotice$[ebp+60], 0

; 592  : 
; 593  : 	memcpy(szNotice, lpMsg->Notice , sizeof(lpMsg->Notice)-1);

  00fda	6a 3c		 push	 60			; 0000003cH
  00fdc	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00fdf	83 c0 03	 add	 eax, 3
  00fe2	50		 push	 eax
  00fe3	8d 4d bc	 lea	 ecx, DWORD PTR _szNotice$[ebp]
  00fe6	51		 push	 ecx
  00fe7	e8 00 00 00 00	 call	 _memcpy
  00fec	83 c4 0c	 add	 esp, 12			; 0000000cH

; 594  : 
; 595  : 	LogAddTD("[Mu Manager][Notice Log][Type:ALL] %s", szNotice);

  00fef	8d 45 bc	 lea	 eax, DWORD PTR _szNotice$[ebp]
  00ff2	50		 push	 eax
  00ff3	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@EHIHJKDO@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3AL@
  00ff8	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00ffe	83 c4 08	 add	 esp, 8

; 596  : 
; 597  : 	if ( strlen(szNotice) > 1 )

  01001	8d 45 bc	 lea	 eax, DWORD PTR _szNotice$[ebp]
  01004	50		 push	 eax
  01005	e8 00 00 00 00	 call	 _strlen
  0100a	83 c4 04	 add	 esp, 4
  0100d	83 f8 01	 cmp	 eax, 1
  01010	76 0c		 jbe	 SHORT $LN2@AllNoticeR

; 598  : 	{
; 599  : 		AllSendServerMsg(szNotice);

  01012	8d 45 bc	 lea	 eax, DWORD PTR _szNotice$[ebp]
  01015	50		 push	 eax
  01016	e8 00 00 00 00	 call	 ?AllSendServerMsg@@YAXPAD@Z ; AllSendServerMsg
  0101b	83 c4 04	 add	 esp, 4
$LN2@AllNoticeR:

; 600  : 	}
; 601  : }

  0101e	5f		 pop	 edi
  0101f	5e		 pop	 esi
  01020	5b		 pop	 ebx
  01021	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01024	33 cd		 xor	 ecx, ebp
  01026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0102b	8b e5		 mov	 esp, ebp
  0102d	5d		 pop	 ebp
  0102e	c3		 ret	 0
?AllNoticeRecv@@YAXPAUSDHP_NOTICE@@@Z ENDP		; AllNoticeRecv
_TEXT	ENDS
PUBLIC	?_ARGB@@YAKEEEE@Z				; _ARGB
PUBLIC	??_C@_0CM@EFINMDLC@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3US@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	?SendNoticeToUser@TNotice@@SAXHPAX@Z:PROC	; TNotice::SendNoticeToUser
EXTRN	?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z:PROC	; TNotice::SetNoticeProperty
EXTRN	?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z:PROC	; TNotice::MakeNoticeMsg
;	COMDAT ??_C@_0CM@EFINMDLC@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3US@
CONST	SEGMENT
??_C@_0CM@EFINMDLC@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3US@ DB '['
	DB	'Mu Manager][Notice Log][Type:USER] (%s) %s', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_pNotice$235386 = -356					; size = 272
_n$235378 = -84						; size = 4
_szId$ = -80						; size = 11
_szNotice$ = -68					; size = 61
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?UserNoticeRecv@@YAXPAUSDHP_USER_NOTICE@@@Z PROC	; UserNoticeRecv

; 605  : {

  01030	55		 push	 ebp
  01031	8b ec		 mov	 ebp, esp
  01033	81 ec a4 01 00
	00		 sub	 esp, 420		; 000001a4H
  01039	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0103e	33 c5		 xor	 eax, ebp
  01040	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  01043	53		 push	 ebx
  01044	56		 push	 esi
  01045	57		 push	 edi

; 606  : 	char szNotice[61];
; 607  : 	char szId[11];
; 608  : 
; 609  : 	szNotice[60]=0;

  01046	c6 45 f8 00	 mov	 BYTE PTR _szNotice$[ebp+60], 0

; 610  : 	szId[10]=0;

  0104a	c6 45 ba 00	 mov	 BYTE PTR _szId$[ebp+10], 0

; 611  : 
; 612  : 	memcpy(szNotice, lpMsg->Notice , sizeof(lpMsg->Notice)-1);

  0104e	6a 3c		 push	 60			; 0000003cH
  01050	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01053	83 c0 0d	 add	 eax, 13			; 0000000dH
  01056	50		 push	 eax
  01057	8d 4d bc	 lea	 ecx, DWORD PTR _szNotice$[ebp]
  0105a	51		 push	 ecx
  0105b	e8 00 00 00 00	 call	 _memcpy
  01060	83 c4 0c	 add	 esp, 12			; 0000000cH

; 613  : 	memcpy(szId, lpMsg->szId , sizeof(lpMsg->szId));

  01063	6a 0a		 push	 10			; 0000000aH
  01065	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01068	83 c0 03	 add	 eax, 3
  0106b	50		 push	 eax
  0106c	8d 4d b0	 lea	 ecx, DWORD PTR _szId$[ebp]
  0106f	51		 push	 ecx
  01070	e8 00 00 00 00	 call	 _memcpy
  01075	83 c4 0c	 add	 esp, 12			; 0000000cH

; 614  : 
; 615  : 	LogAddTD("[Mu Manager][Notice Log][Type:USER] (%s) %s", szId, szNotice);

  01078	8d 45 bc	 lea	 eax, DWORD PTR _szNotice$[ebp]
  0107b	50		 push	 eax
  0107c	8d 4d b0	 lea	 ecx, DWORD PTR _szId$[ebp]
  0107f	51		 push	 ecx
  01080	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@EFINMDLC@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3US@
  01085	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0108b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 616  : 
; 617  : 	if ( strlen(szNotice) > 1 )

  0108e	8d 45 bc	 lea	 eax, DWORD PTR _szNotice$[ebp]
  01091	50		 push	 eax
  01092	e8 00 00 00 00	 call	 _strlen
  01097	83 c4 04	 add	 esp, 4
  0109a	83 f8 01	 cmp	 eax, 1
  0109d	0f 86 0b 01 00
	00		 jbe	 $LN10@UserNotice

; 618  : 	{
; 619  : 		if ( strlen(szId) > 1 )

  010a3	8d 45 b0	 lea	 eax, DWORD PTR _szId$[ebp]
  010a6	50		 push	 eax
  010a7	e8 00 00 00 00	 call	 _strlen
  010ac	83 c4 04	 add	 esp, 4
  010af	83 f8 01	 cmp	 eax, 1
  010b2	0f 86 f6 00 00
	00		 jbe	 $LN10@UserNotice

; 620  : 		{
; 621  : 			for ( int n = OBJ_STARTUSERINDEX;n<OBJMAX; n++)

  010b8	c7 45 ac b0 36
	00 00		 mov	 DWORD PTR _n$235378[ebp], 14000 ; 000036b0H
  010bf	eb 09		 jmp	 SHORT $LN7@UserNotice
$LN6@UserNotice:
  010c1	8b 45 ac	 mov	 eax, DWORD PTR _n$235378[ebp]
  010c4	83 c0 01	 add	 eax, 1
  010c7	89 45 ac	 mov	 DWORD PTR _n$235378[ebp], eax
$LN7@UserNotice:
  010ca	81 7d ac 98 3a
	00 00		 cmp	 DWORD PTR _n$235378[ebp], 15000 ; 00003a98H
  010d1	0f 8d d7 00 00
	00		 jge	 $LN10@UserNotice

; 622  : 			{
; 623  : 				if ( gObj[n].Connected >= PLAYER_LOGGED )

  010d7	8b 45 ac	 mov	 eax, DWORD PTR _n$235378[ebp]
  010da	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  010e0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  010e6	83 7c 01 04 02	 cmp	 DWORD PTR [ecx+eax+4], 2
  010eb	0f 8c b8 00 00
	00		 jl	 $LN4@UserNotice

; 624  : 				{
; 625  : 					if ( gObj[n].AccountID[0] == szId[0] )

  010f1	8b 45 ac	 mov	 eax, DWORD PTR _n$235378[ebp]
  010f4	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  010fa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01100	0f be 54 01 6c	 movsx	 edx, BYTE PTR [ecx+eax+108]
  01105	0f be 45 b0	 movsx	 eax, BYTE PTR _szId$[ebp]
  01109	3b d0		 cmp	 edx, eax
  0110b	0f 85 98 00 00
	00		 jne	 $LN4@UserNotice

; 626  : 					{
; 627  : 						if ( gObj[n].AccountID[1] == szId[1] )

  01111	8b 45 ac	 mov	 eax, DWORD PTR _n$235378[ebp]
  01114	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0111a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01120	0f be 54 01 6d	 movsx	 edx, BYTE PTR [ecx+eax+109]
  01125	0f be 45 b1	 movsx	 eax, BYTE PTR _szId$[ebp+1]
  01129	3b d0		 cmp	 edx, eax
  0112b	75 7c		 jne	 SHORT $LN4@UserNotice

; 628  : 						{
; 629  : 							if ( strcmp( gObj[n].AccountID , szId) == 0 )

  0112d	8d 45 b0	 lea	 eax, DWORD PTR _szId$[ebp]
  01130	50		 push	 eax
  01131	8b 4d ac	 mov	 ecx, DWORD PTR _n$235378[ebp]
  01134	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0113a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01140	8d 44 0a 6c	 lea	 eax, DWORD PTR [edx+ecx+108]
  01144	50		 push	 eax
  01145	e8 00 00 00 00	 call	 _strcmp
  0114a	83 c4 08	 add	 esp, 8
  0114d	85 c0		 test	 eax, eax
  0114f	75 58		 jne	 SHORT $LN4@UserNotice

; 630  : 							{
; 631  : 								PMSG_NOTICE pNotice;
; 632  : 								TNotice::MakeNoticeMsg(&pNotice, 0, szNotice);

  01151	8d 45 bc	 lea	 eax, DWORD PTR _szNotice$[ebp]
  01154	50		 push	 eax
  01155	6a 00		 push	 0
  01157	8d 8d 9c fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$235386[ebp]
  0115d	51		 push	 ecx
  0115e	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg
  01163	83 c4 0c	 add	 esp, 12			; 0000000cH

; 633  : 								TNotice::SetNoticeProperty(&pNotice, 10,  _ARGB(255, 254, 81, 81), 1, 0, 20);

  01166	6a 14		 push	 20			; 00000014H
  01168	6a 00		 push	 0
  0116a	6a 01		 push	 1
  0116c	6a 51		 push	 81			; 00000051H
  0116e	6a 51		 push	 81			; 00000051H
  01170	68 fe 00 00 00	 push	 254			; 000000feH
  01175	68 ff 00 00 00	 push	 255			; 000000ffH
  0117a	e8 00 00 00 00	 call	 ?_ARGB@@YAKEEEE@Z	; _ARGB
  0117f	83 c4 10	 add	 esp, 16			; 00000010H
  01182	50		 push	 eax
  01183	6a 0a		 push	 10			; 0000000aH
  01185	8d 85 9c fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$235386[ebp]
  0118b	50		 push	 eax
  0118c	e8 00 00 00 00	 call	 ?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z ; TNotice::SetNoticeProperty
  01191	83 c4 18	 add	 esp, 24			; 00000018H

; 634  : 								TNotice::SendNoticeToUser(n, &pNotice);

  01194	8d 85 9c fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$235386[ebp]
  0119a	50		 push	 eax
  0119b	8b 4d ac	 mov	 ecx, DWORD PTR _n$235378[ebp]
  0119e	51		 push	 ecx
  0119f	e8 00 00 00 00	 call	 ?SendNoticeToUser@TNotice@@SAXHPAX@Z ; TNotice::SendNoticeToUser
  011a4	83 c4 08	 add	 esp, 8

; 635  : 								break;

  011a7	eb 05		 jmp	 SHORT $LN10@UserNotice
$LN4@UserNotice:

; 636  : 							}
; 637  : 						}
; 638  : 					}
; 639  : 				}
; 640  : 			} // For

  011a9	e9 13 ff ff ff	 jmp	 $LN6@UserNotice
$LN10@UserNotice:

; 641  : 		}
; 642  : 	}
; 643  : }

  011ae	5f		 pop	 edi
  011af	5e		 pop	 esi
  011b0	5b		 pop	 ebx
  011b1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  011b4	33 cd		 xor	 ecx, ebp
  011b6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  011bb	8b e5		 mov	 esp, ebp
  011bd	5d		 pop	 ebp
  011be	c3		 ret	 0
?UserNoticeRecv@@YAXPAUSDHP_USER_NOTICE@@@Z ENDP	; UserNoticeRecv
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\tnotice.h
_TEXT	ENDS
;	COMDAT ?_ARGB@@YAKEEEE@Z
_TEXT	SEGMENT
_a$ = 8							; size = 1
_r$ = 12						; size = 1
_g$ = 16						; size = 1
_b$ = 20						; size = 1
?_ARGB@@YAKEEEE@Z PROC					; _ARGB, COMDAT

; 9    : __inline DWORD _ARGB(BYTE a, BYTE r, BYTE g, BYTE b){ return a*16777216 + b*65536 + g*256 + r;}; // in tnotice.h : line 8

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 08	 movzx	 eax, BYTE PTR _a$[ebp]
  0000d	c1 e0 18	 shl	 eax, 24			; 00000018H
  00010	0f b6 4d 14	 movzx	 ecx, BYTE PTR _b$[ebp]
  00014	c1 e1 10	 shl	 ecx, 16			; 00000010H
  00017	03 c1		 add	 eax, ecx
  00019	0f b6 55 10	 movzx	 edx, BYTE PTR _g$[ebp]
  0001d	c1 e2 08	 shl	 edx, 8
  00020	03 c2		 add	 eax, edx
  00022	0f b6 4d 0c	 movzx	 ecx, BYTE PTR _r$[ebp]
  00026	03 c1		 add	 eax, ecx
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?_ARGB@@YAKEEEE@Z ENDP					; _ARGB
_TEXT	ENDS
PUBLIC	??_C@_0EA@LCONAODP@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?GJReqMapSvrMove@@YAXHGGEE@Z			; GJReqMapSvrMove
EXTRN	?PHeadSetB@@YAXPAEEH@Z:PROC			; PHeadSetB
EXTRN	?LogAddC@@3P6AXEPADZZA:DWORD			; LogAddC
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
;	COMDAT ??_C@_0EA@LCONAODP@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@
; File d:\projects\exteam6.3\source\gameserver\gameserver\sprotocol.cpp
CONST	SEGMENT
??_C@_0EA@LCONAODP@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@ DB '[Ma'
	DB	'pServerMng] Packet Error GJ [0x7A] - User not Connected : %d', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_pMsg$ = -44						; size = 40
__$ArrayPad$ = -4					; size = 4
_iIndex$ = 8						; size = 4
_wDesMapSvrCode$ = 12					; size = 2
_wMapNumber$ = 16					; size = 2
_btX$ = 20						; size = 1
_btY$ = 24						; size = 1
?GJReqMapSvrMove@@YAXHGGEE@Z PROC			; GJReqMapSvrMove

; 647  : {

  011c0	55		 push	 ebp
  011c1	8b ec		 mov	 ebp, esp
  011c3	83 ec 6c	 sub	 esp, 108		; 0000006cH
  011c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  011cb	33 c5		 xor	 eax, ebp
  011cd	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  011d0	53		 push	 ebx
  011d1	56		 push	 esi
  011d2	57		 push	 edi

; 648  : 	PMSG_REQ_MAPSVRMOVE pMsg;
; 649  : 	
; 650  : 	if ( gObjIsConnected(iIndex) == PLAYER_EMPTY )

  011d3	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  011d6	50		 push	 eax
  011d7	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  011dc	83 c4 04	 add	 esp, 4
  011df	85 c0		 test	 eax, eax
  011e1	75 19		 jne	 SHORT $LN2@GJReqMapSv

; 651  : 	{
; 652  : 		LogAddC(2, "[MapServerMng] Packet Error GJ [0x7A] - User not Connected : %d", iIndex);

  011e3	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  011e6	50		 push	 eax
  011e7	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@LCONAODP@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@
  011ec	6a 02		 push	 2
  011ee	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  011f4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 653  : 	}
; 654  : 	else

  011f7	e9 b4 00 00 00	 jmp	 $LN3@GJReqMapSv
$LN2@GJReqMapSv:

; 655  : 	{
; 656  : 		PHeadSetB((LPBYTE)&pMsg, 0x7A, sizeof(PMSG_REQ_MAPSVRMOVE));

  011fc	6a 28		 push	 40			; 00000028H
  011fe	6a 7a		 push	 122			; 0000007aH
  01200	8d 45 d4	 lea	 eax, DWORD PTR _pMsg$[ebp]
  01203	50		 push	 eax
  01204	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  01209	83 c4 0c	 add	 esp, 12			; 0000000cH

; 657  : 		pMsg.iIndex = iIndex;

  0120c	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0120f	89 45 d8	 mov	 DWORD PTR _pMsg$[ebp+4], eax

; 658  : 
; 659  : 		memcpy(pMsg.szAccountID , gObj[iIndex].AccountID, sizeof( pMsg.szAccountID)-1);

  01212	6a 0a		 push	 10			; 0000000aH
  01214	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  01217	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0121d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01223	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  01227	52		 push	 edx
  01228	8d 45 dc	 lea	 eax, DWORD PTR _pMsg$[ebp+8]
  0122b	50		 push	 eax
  0122c	e8 00 00 00 00	 call	 _memcpy
  01231	83 c4 0c	 add	 esp, 12			; 0000000cH

; 660  : 		pMsg.szAccountID[10] = 0;

  01234	c6 45 e6 00	 mov	 BYTE PTR _pMsg$[ebp+18], 0

; 661  : 		memcpy(pMsg.szCharName, gObj[iIndex].Name, sizeof( pMsg.szCharName)-1);

  01238	6a 0a		 push	 10			; 0000000aH
  0123a	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0123d	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01243	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01249	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  0124d	52		 push	 edx
  0124e	8d 45 e7	 lea	 eax, DWORD PTR _pMsg$[ebp+19]
  01251	50		 push	 eax
  01252	e8 00 00 00 00	 call	 _memcpy
  01257	83 c4 0c	 add	 esp, 12			; 0000000cH

; 662  : 		pMsg.szCharName[10] = 0;

  0125a	c6 45 f1 00	 mov	 BYTE PTR _pMsg$[ebp+29], 0

; 663  : 
; 664  : 		pMsg.wCurMapSvrCode = gGameServerCode;

  0125e	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  01264	66 89 45 f2	 mov	 WORD PTR _pMsg$[ebp+30], ax

; 665  : 		pMsg.wDstMapSvrCode = wDesMapSvrCode;

  01268	66 8b 45 0c	 mov	 ax, WORD PTR _wDesMapSvrCode$[ebp]
  0126c	66 89 45 f4	 mov	 WORD PTR _pMsg$[ebp+32], ax

; 666  : 		pMsg.wMapNumber = wMapNumber;

  01270	66 8b 45 10	 mov	 ax, WORD PTR _wMapNumber$[ebp]
  01274	66 89 45 f6	 mov	 WORD PTR _pMsg$[ebp+34], ax

; 667  : 		pMsg.btX = btX;

  01278	8a 45 14	 mov	 al, BYTE PTR _btX$[ebp]
  0127b	88 45 f8	 mov	 BYTE PTR _pMsg$[ebp+36], al

; 668  : 		pMsg.btY = btY;

  0127e	8a 45 18	 mov	 al, BYTE PTR _btY$[ebp]
  01281	88 45 f9	 mov	 BYTE PTR _pMsg$[ebp+37], al

; 669  : 		pMsg.btPcbangRoom = gObj[iIndex].m_iPcBangRoom;//Season 4.5 addon

  01284	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  01287	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0128d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01293	8a 94 01 c4 1f
	00 00		 mov	 dl, BYTE PTR [ecx+eax+8132]
  0129a	88 55 fa	 mov	 BYTE PTR _pMsg$[ebp+38], dl

; 670  : 
; 671  : 		wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size);

  0129d	0f b6 45 d5	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  012a1	50		 push	 eax
  012a2	8d 4d d4	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  012a5	51		 push	 ecx
  012a6	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  012ab	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend
$LN3@GJReqMapSv:

; 672  : 	}
; 673  : }

  012b0	5f		 pop	 edi
  012b1	5e		 pop	 esi
  012b2	5b		 pop	 ebx
  012b3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  012b6	33 cd		 xor	 ecx, ebp
  012b8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  012bd	8b e5		 mov	 esp, ebp
  012bf	5d		 pop	 ebp
  012c0	c3		 ret	 0
?GJReqMapSvrMove@@YAXHGGEE@Z ENDP			; GJReqMapSvrMove
_TEXT	ENDS
PUBLIC	??_C@_0FE@PEPNAIIC@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ ; `string'
PUBLIC	??_C@_0EG@DBEOMGHG@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7A@ ; `string'
PUBLIC	??_C@_0EP@JGCJAADJ@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ ; `string'
PUBLIC	?GetMapSvrGroup@CMapServerManager@@QAEHXZ	; CMapServerManager::GetMapSvrGroup
PUBLIC	??_C@_0FC@JANLFHPE@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ ; `string'
PUBLIC	??_C@_0EA@OCCMNGHM@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ:PROC	; TNotice::MakeNoticeMsgEx
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	?GJSetCharacterInfo@@YAXPAUOBJECTSTRUCT@@HH@Z:PROC ; GJSetCharacterInfo
EXTRN	?GetSvrCodeData@CMapServerManager@@QAEHGPADPAG@Z:PROC ; CMapServerManager::GetSvrCodeData
EXTRN	?g_MapServerManager@@3VCMapServerManager@@A:BYTE ; g_MapServerManager
EXTRN	?PHeadSubSetBE@@YAXPAEEEH@Z:PROC		; PHeadSubSetBE
EXTRN	_memset:PROC
;	COMDAT ??_C@_0FE@PEPNAIIC@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
CONST	SEGMENT
??_C@_0FE@PEPNAIIC@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ DB '[Ma'
	DB	'pServerMng] Packet Error JG [0x7A] - Failed to Authorize User'
	DB	' [%s][%s] Result:%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@DBEOMGHG@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7A@
CONST	SEGMENT
??_C@_0EG@DBEOMGHG@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7A@ DB '['
	DB	'MapServerMng] [%s][%s] JG [0x7A] - Move Map Request OK : MAPS'
	DB	'VR_D:%d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@JGCJAADJ@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
CONST	SEGMENT
??_C@_0EP@JGCJAADJ@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ DB '[Ma'
	DB	'pServerMng] Packet Error JG [0x7A] - Failed to find Map Info '
	DB	'[%s]-[%s] (%d)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FC@JANLFHPE@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
CONST	SEGMENT
??_C@_0FC@JANLFHPE@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ DB '[Ma'
	DB	'pServerMng] Packet Error JG [0x7A] - User Info Mismatch [%s]['
	DB	'%s]-[%s][%s] (%d)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@OCCMNGHM@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
CONST	SEGMENT
??_C@_0EA@OCCMNGHM@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ DB '[Ma'
	DB	'pServerMng] Packet Error JG [0x7A] - User not Connected : %d', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_pNotice$235437 = -364					; size = 272
_pMsg$235434 = -92					; size = 40
_bRESULT$235428 = -52					; size = 4
_pMsg$235426 = -48					; size = 40
_lpObj$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?JGAnsMapSvrMove@@YAXPAUPMSG_ANS_MAPSVRMOVE@@@Z PROC	; JGAnsMapSvrMove

; 689  : {

  012d0	55		 push	 ebp
  012d1	8b ec		 mov	 ebp, esp
  012d3	81 ec ac 01 00
	00		 sub	 esp, 428		; 000001acH
  012d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  012de	33 c5		 xor	 eax, ebp
  012e0	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  012e3	53		 push	 ebx
  012e4	56		 push	 esi
  012e5	57		 push	 edi

; 690  : 	if ( gObjIsConnected(lpMsg->iIndex ) == FALSE )

  012e6	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  012e9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  012ec	51		 push	 ecx
  012ed	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  012f2	83 c4 04	 add	 esp, 4
  012f5	85 c0		 test	 eax, eax
  012f7	75 1c		 jne	 SHORT $LN6@JGAnsMapSv

; 691  : 	{
; 692  : 		LogAddC(2, "[MapServerMng] Packet Error JG [0x7A] - User not Connected : %d", lpMsg->iIndex);

  012f9	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  012fc	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  012ff	51		 push	 ecx
  01300	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@OCCMNGHM@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
  01305	6a 02		 push	 2
  01307	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  0130d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 693  : 		return;

  01310	e9 4b 02 00 00	 jmp	 $LN7@JGAnsMapSv
$LN6@JGAnsMapSv:

; 694  : 	}
; 695  : 
; 696  : 	LPOBJ lpObj = &gObj[lpMsg->iIndex];

  01315	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01318	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0131b	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  01321	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01327	89 4d f8	 mov	 DWORD PTR _lpObj$[ebp], ecx

; 697  : 
; 698  : 	if ( strcmp( lpObj->AccountID , lpMsg->szAccountID )  ||  strcmp( lpObj->Name, lpMsg->szCharName) )

  0132a	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  0132d	83 c0 08	 add	 eax, 8
  01330	50		 push	 eax
  01331	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01334	83 c1 6c	 add	 ecx, 108		; 0000006cH
  01337	51		 push	 ecx
  01338	e8 00 00 00 00	 call	 _strcmp
  0133d	83 c4 08	 add	 esp, 8
  01340	85 c0		 test	 eax, eax
  01342	75 1a		 jne	 SHORT $LN4@JGAnsMapSv
  01344	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01347	83 c0 13	 add	 eax, 19			; 00000013H
  0134a	50		 push	 eax
  0134b	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0134e	83 c1 77	 add	 ecx, 119		; 00000077H
  01351	51		 push	 ecx
  01352	e8 00 00 00 00	 call	 _strcmp
  01357	83 c4 08	 add	 esp, 8
  0135a	85 c0		 test	 eax, eax
  0135c	74 37		 je	 SHORT $LN5@JGAnsMapSv
$LN4@JGAnsMapSv:

; 699  : 	{
; 700  : 		LogAddC(2, "[MapServerMng] Packet Error JG [0x7A] - User Info Mismatch [%s][%s]-[%s][%s] (%d)", lpMsg->szAccountID, lpMsg->szCharName, lpObj->AccountID, lpObj->Name, lpObj->m_Index);

  0135e	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01361	8b 08		 mov	 ecx, DWORD PTR [eax]
  01363	51		 push	 ecx
  01364	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01367	83 c2 77	 add	 edx, 119		; 00000077H
  0136a	52		 push	 edx
  0136b	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0136e	83 c0 6c	 add	 eax, 108		; 0000006cH
  01371	50		 push	 eax
  01372	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  01375	83 c1 13	 add	 ecx, 19			; 00000013H
  01378	51		 push	 ecx
  01379	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  0137c	83 c2 08	 add	 edx, 8
  0137f	52		 push	 edx
  01380	68 00 00 00 00	 push	 OFFSET ??_C@_0FC@JANLFHPE@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
  01385	6a 02		 push	 2
  01387	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  0138d	83 c4 1c	 add	 esp, 28			; 0000001cH

; 701  : 		return;

  01390	e9 cb 01 00 00	 jmp	 $LN7@JGAnsMapSv
$LN5@JGAnsMapSv:

; 702  : 	}
; 703  : 
; 704  : 	if ( lpMsg->iResult == 0	 )

  01395	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01398	83 78 28 00	 cmp	 DWORD PTR [eax+40], 0
  0139c	0f 85 03 01 00
	00		 jne	 $LN3@JGAnsMapSv

; 705  : 	{
; 706  : 		PMSG_ANS_MAPSERVERCHANGE pMsg;
; 707  : 
; 708  : 		PHeadSubSetBE((LPBYTE)&pMsg, 0xB1, 0x00, sizeof(pMsg));

  013a2	6a 28		 push	 40			; 00000028H
  013a4	6a 00		 push	 0
  013a6	68 b1 00 00 00	 push	 177			; 000000b1H
  013ab	8d 45 d0	 lea	 eax, DWORD PTR _pMsg$235426[ebp]
  013ae	50		 push	 eax
  013af	e8 00 00 00 00	 call	 ?PHeadSubSetBE@@YAXPAEEEH@Z ; PHeadSubSetBE
  013b4	83 c4 10	 add	 esp, 16			; 00000010H

; 709  : 		
; 710  : 		pMsg.wMapSvrCode = g_MapServerManager.GetMapSvrGroup();

  013b7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MapServerManager@@3VCMapServerManager@@A ; g_MapServerManager
  013bc	e8 00 00 00 00	 call	 ?GetMapSvrGroup@CMapServerManager@@QAEHXZ ; CMapServerManager::GetMapSvrGroup
  013c1	66 89 45 e6	 mov	 WORD PTR _pMsg$235426[ebp+22], ax

; 711  : 		pMsg.iJoinAuthCode1 = lpMsg->iJoinAuthCode1 ;

  013c5	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  013c8	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  013cb	89 4d e8	 mov	 DWORD PTR _pMsg$235426[ebp+24], ecx

; 712  : 		pMsg.iJoinAuthCode2 = lpMsg->iJoinAuthCode2 ;

  013ce	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  013d1	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  013d4	89 4d ec	 mov	 DWORD PTR _pMsg$235426[ebp+28], ecx

; 713  : 		pMsg.iJoinAuthCode3 = lpMsg->iJoinAuthCode3;

  013d7	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  013da	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  013dd	89 4d f0	 mov	 DWORD PTR _pMsg$235426[ebp+32], ecx

; 714  : 		pMsg.iJoinAuthCode4 = lpMsg->iJoinAuthCode4 ;

  013e0	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  013e3	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  013e6	89 4d f4	 mov	 DWORD PTR _pMsg$235426[ebp+36], ecx

; 715  : 	
; 716  : 		BOOL bRESULT = g_MapServerManager.GetSvrCodeData(lpMsg->wDstMapSvrCode, pMsg.szMapSvrIpAddress, &pMsg.wMapSvrPort);

  013e9	8d 45 e4	 lea	 eax, DWORD PTR _pMsg$235426[ebp+20]
  013ec	50		 push	 eax
  013ed	8d 4d d4	 lea	 ecx, DWORD PTR _pMsg$235426[ebp+4]
  013f0	51		 push	 ecx
  013f1	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  013f4	0f b7 42 20	 movzx	 eax, WORD PTR [edx+32]
  013f8	50		 push	 eax
  013f9	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MapServerManager@@3VCMapServerManager@@A ; g_MapServerManager
  013fe	e8 00 00 00 00	 call	 ?GetSvrCodeData@CMapServerManager@@QAEHGPADPAG@Z ; CMapServerManager::GetSvrCodeData
  01403	89 45 cc	 mov	 DWORD PTR _bRESULT$235428[ebp], eax

; 717  : 
; 718  : 		if ( bRESULT == FALSE )

  01406	83 7d cc 00	 cmp	 DWORD PTR _bRESULT$235428[ebp], 0
  0140a	75 2b		 jne	 SHORT $LN2@JGAnsMapSv

; 719  : 		{
; 720  : 			LogAddC(2, "[MapServerMng] Packet Error JG [0x7A] - Failed to find Map Info [%s]-[%s] (%d)",
; 721  : 				lpObj->AccountID, lpObj->Name, lpMsg->wDstMapSvrCode);

  0140c	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  0140f	0f b7 48 20	 movzx	 ecx, WORD PTR [eax+32]
  01413	51		 push	 ecx
  01414	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01417	83 c2 77	 add	 edx, 119		; 00000077H
  0141a	52		 push	 edx
  0141b	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0141e	83 c0 6c	 add	 eax, 108		; 0000006cH
  01421	50		 push	 eax
  01422	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@JGCJAADJ@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
  01427	6a 02		 push	 2
  01429	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  0142f	83 c4 14	 add	 esp, 20			; 00000014H

; 722  : 			return;

  01432	e9 29 01 00 00	 jmp	 $LN7@JGAnsMapSv
$LN2@JGAnsMapSv:

; 723  : 		}
; 724  : 
; 725  : 		GJSetCharacterInfo(lpObj, lpObj->m_Index, TRUE);

  01437	6a 01		 push	 1
  01439	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0143c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0143e	51		 push	 ecx
  0143f	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01442	52		 push	 edx
  01443	e8 00 00 00 00	 call	 ?GJSetCharacterInfo@@YAXPAUOBJECTSTRUCT@@HH@Z ; GJSetCharacterInfo
  01448	83 c4 0c	 add	 esp, 12			; 0000000cH

; 726  : 		lpObj->m_bMapSvrMoveQuit = TRUE;

  0144b	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0144e	c6 80 e4 1b 00
	00 01		 mov	 BYTE PTR [eax+7140], 1

; 727  : 		lpObj->m_dwMapSvrQuitTick = GetTickCount();

  01455	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0145b	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0145e	89 81 e8 1b 00
	00		 mov	 DWORD PTR [ecx+7144], eax

; 728  : 
; 729  : 		DataSend(lpMsg->iIndex, (LPBYTE)&pMsg, pMsg.h.size);

  01464	0f b6 45 d1	 movzx	 eax, BYTE PTR _pMsg$235426[ebp+1]
  01468	50		 push	 eax
  01469	8d 4d d0	 lea	 ecx, DWORD PTR _pMsg$235426[ebp]
  0146c	51		 push	 ecx
  0146d	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  01470	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  01473	50		 push	 eax
  01474	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  01479	83 c4 0c	 add	 esp, 12			; 0000000cH

; 730  : 
; 731  : 		LogAddTD("[MapServerMng] [%s][%s] JG [0x7A] - Move Map Request OK : MAPSVR_D:%d",
; 732  : 			lpObj->AccountID, lpObj->Name, lpMsg->wDstMapSvrCode);

  0147c	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  0147f	0f b7 48 20	 movzx	 ecx, WORD PTR [eax+32]
  01483	51		 push	 ecx
  01484	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01487	83 c2 77	 add	 edx, 119		; 00000077H
  0148a	52		 push	 edx
  0148b	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0148e	83 c0 6c	 add	 eax, 108		; 0000006cH
  01491	50		 push	 eax
  01492	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@DBEOMGHG@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7A@
  01497	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0149d	83 c4 10	 add	 esp, 16			; 00000010H

; 733  : 	}
; 734  : 	else

  014a0	e9 bb 00 00 00	 jmp	 $LN7@JGAnsMapSv
$LN3@JGAnsMapSv:

; 735  : 	{
; 736  : 		PMSG_ANS_MAPSERVERCHANGE pMsg = { 0 };//Season 4.5 addon

  014a5	c6 45 a4 00	 mov	 BYTE PTR _pMsg$235434[ebp], 0
  014a9	6a 27		 push	 39			; 00000027H
  014ab	6a 00		 push	 0
  014ad	8d 45 a5	 lea	 eax, DWORD PTR _pMsg$235434[ebp+1]
  014b0	50		 push	 eax
  014b1	e8 00 00 00 00	 call	 _memset
  014b6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 737  : 		PHeadSubSetBE((LPBYTE)&pMsg, 0xB1, 0x00, sizeof(pMsg));//Season 4.5 addon

  014b9	6a 28		 push	 40			; 00000028H
  014bb	6a 00		 push	 0
  014bd	68 b1 00 00 00	 push	 177			; 000000b1H
  014c2	8d 45 a4	 lea	 eax, DWORD PTR _pMsg$235434[ebp]
  014c5	50		 push	 eax
  014c6	e8 00 00 00 00	 call	 ?PHeadSubSetBE@@YAXPAEEEH@Z ; PHeadSubSetBE
  014cb	83 c4 10	 add	 esp, 16			; 00000010H

; 738  : 		DataSend(lpMsg->iIndex, (LPBYTE)&pMsg, pMsg.h.size);//Season 4.5 addon

  014ce	0f b6 45 a5	 movzx	 eax, BYTE PTR _pMsg$235434[ebp+1]
  014d2	50		 push	 eax
  014d3	8d 4d a4	 lea	 ecx, DWORD PTR _pMsg$235434[ebp]
  014d6	51		 push	 ecx
  014d7	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  014da	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  014dd	50		 push	 eax
  014de	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  014e3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 739  : 		
; 740  : 		lpObj->m_MoveGateNumber = -1;//Season 4.5 addon

  014e6	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  014e9	c6 80 fc 01 00
	00 ff		 mov	 BYTE PTR [eax+508], 255	; 000000ffH

; 741  : 		lpObj->m_State = 2;//Season 4.5 addon

  014f0	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  014f3	c7 80 20 02 00
	00 02 00 00 00	 mov	 DWORD PTR [eax+544], 2

; 742  : 
; 743  : 		PMSG_NOTICE pNotice;
; 744  : 
; 745  : 		TNotice::MakeNoticeMsgEx(&pNotice, 0, lMsg.Get(MSGGET(6, 77)));

  014fd	68 4d 06 00 00	 push	 1613			; 0000064dH
  01502	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  01507	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0150c	50		 push	 eax
  0150d	6a 00		 push	 0
  0150f	8d 85 94 fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$235437[ebp]
  01515	50		 push	 eax
  01516	e8 00 00 00 00	 call	 ?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ ; TNotice::MakeNoticeMsgEx
  0151b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 746  : 		DataSend(lpObj->m_Index, (LPBYTE)&pNotice, pNotice.h.size);

  0151e	0f b6 85 95 fe
	ff ff		 movzx	 eax, BYTE PTR _pNotice$235437[ebp+1]
  01525	50		 push	 eax
  01526	8d 8d 94 fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$235437[ebp]
  0152c	51		 push	 ecx
  0152d	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01530	8b 02		 mov	 eax, DWORD PTR [edx]
  01532	50		 push	 eax
  01533	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  01538	83 c4 0c	 add	 esp, 12			; 0000000cH

; 747  : 
; 748  : 		LogAddC(2, "[MapServerMng] Packet Error JG [0x7A] - Failed to Authorize User [%s][%s] Result:%d",
; 749  : 			lpObj->AccountID, lpObj->Name, lpMsg->iResult);

  0153b	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  0153e	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  01541	51		 push	 ecx
  01542	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01545	83 c2 77	 add	 edx, 119		; 00000077H
  01548	52		 push	 edx
  01549	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0154c	83 c0 6c	 add	 eax, 108		; 0000006cH
  0154f	50		 push	 eax
  01550	68 00 00 00 00	 push	 OFFSET ??_C@_0FE@PEPNAIIC@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
  01555	6a 02		 push	 2
  01557	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  0155d	83 c4 14	 add	 esp, 20			; 00000014H
$LN7@JGAnsMapSv:

; 750  : 	}
; 751  : }

  01560	5f		 pop	 edi
  01561	5e		 pop	 esi
  01562	5b		 pop	 ebx
  01563	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01566	33 cd		 xor	 ecx, ebp
  01568	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0156d	8b e5		 mov	 esp, ebp
  0156f	5d		 pop	 ebp
  01570	c3		 ret	 0
?JGAnsMapSvrMove@@YAXPAUPMSG_ANS_MAPSVRMOVE@@@Z ENDP	; JGAnsMapSvrMove
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\mapservermanager.h
_TEXT	ENDS
;	COMDAT ?GetMapSvrGroup@CMapServerManager@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMapSvrGroup@CMapServerManager@@QAEHXZ PROC		; CMapServerManager::GetMapSvrGroup, COMDAT
; _this$ = ecx

; 49   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 50   : 		if ( this->m_lpThisMapSvrData != NULL )

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 b8 c0 4b 01
	00 00		 cmp	 DWORD PTR [eax+84928], 0
  00016	74 0f		 je	 SHORT $LN1@GetMapSvrG

; 51   : 		{
; 52   : 			return m_lpThisMapSvrData->m_btMAPSVR_GROUP;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 88 c0 4b 01
	00		 mov	 ecx, DWORD PTR [eax+84928]
  00021	0f b6 41 08	 movzx	 eax, BYTE PTR [ecx+8]
  00025	eb 03		 jmp	 SHORT $LN2@GetMapSvrG
$LN1@GetMapSvrG:

; 53   : 		}
; 54   : 		return -1;

  00027	83 c8 ff	 or	 eax, -1
$LN2@GetMapSvrG:

; 55   : 	}

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
?GetMapSvrGroup@CMapServerManager@@QAEHXZ ENDP		; CMapServerManager::GetMapSvrGroup
_TEXT	ENDS
PUBLIC	??_C@_0EA@NPBAMLEI@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?GJReqMapSvrAuth@@YAXHPAD0HHHH@Z		; GJReqMapSvrAuth
;	COMDAT ??_C@_0EA@NPBAMLEI@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@
; File d:\projects\exteam6.3\source\gameserver\gameserver\sprotocol.cpp
CONST	SEGMENT
??_C@_0EA@NPBAMLEI@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@ DB '[Ma'
	DB	'pServerMng] Packet Error GJ [0x7B] - Index out of bound : %d', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
tv67 = -120						; size = 4
_pMsg$ = -52						; size = 48
__$ArrayPad$ = -4					; size = 4
_iIndex$ = 8						; size = 4
_lpszAccountID$ = 12					; size = 4
_lpszCharName$ = 16					; size = 4
_iJA1$ = 20						; size = 4
_iJA2$ = 24						; size = 4
_iJA3$ = 28						; size = 4
_iJA4$ = 32						; size = 4
?GJReqMapSvrAuth@@YAXHPAD0HHHH@Z PROC			; GJReqMapSvrAuth

; 776  : {

  01580	55		 push	 ebp
  01581	8b ec		 mov	 ebp, esp
  01583	83 ec 78	 sub	 esp, 120		; 00000078H
  01586	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0158b	33 c5		 xor	 eax, ebp
  0158d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  01590	53		 push	 ebx
  01591	56		 push	 esi
  01592	57		 push	 edi

; 777  : 	if ( !OBJMAX_RANGE(iIndex))

  01593	83 7d 08 00	 cmp	 DWORD PTR _iIndex$[ebp], 0
  01597	7d 09		 jge	 SHORT $LN4@GJReqMapSv@2
  01599	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
  015a0	eb 0f		 jmp	 SHORT $LN5@GJReqMapSv@2
$LN4@GJReqMapSv@2:
  015a2	33 c0		 xor	 eax, eax
  015a4	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _iIndex$[ebp], 14999 ; 00003a97H
  015ab	0f 9e c0	 setle	 al
  015ae	89 45 88	 mov	 DWORD PTR tv67[ebp], eax
$LN5@GJReqMapSv@2:
  015b1	83 7d 88 00	 cmp	 DWORD PTR tv67[ebp], 0
  015b5	75 19		 jne	 SHORT $LN1@GJReqMapSv@2

; 778  : 	{
; 779  : 		LogAddC(2, "[MapServerMng] Packet Error GJ [0x7B] - Index out of bound : %d", iIndex);

  015b7	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  015ba	50		 push	 eax
  015bb	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@NPBAMLEI@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@
  015c0	6a 02		 push	 2
  015c2	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  015c8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 780  : 		return;

  015cb	e9 86 00 00 00	 jmp	 $LN2@GJReqMapSv@2
$LN1@GJReqMapSv@2:

; 781  : 	}
; 782  : 
; 783  : 	PMSG_REQ_MAPSVRAUTH pMsg;
; 784  : 
; 785  : 	PHeadSetB((LPBYTE)&pMsg, 0x7B, sizeof(pMsg));

  015d0	6a 30		 push	 48			; 00000030H
  015d2	6a 7b		 push	 123			; 0000007bH
  015d4	8d 45 cc	 lea	 eax, DWORD PTR _pMsg$[ebp]
  015d7	50		 push	 eax
  015d8	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  015dd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 786  : 	pMsg.iIndex = iIndex;

  015e0	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  015e3	89 45 d0	 mov	 DWORD PTR _pMsg$[ebp+4], eax

; 787  : 	memcpy(pMsg.szAccountID, lpszAccountID, MAX_ACCOUNT_LEN);

  015e6	6a 0a		 push	 10			; 0000000aH
  015e8	8b 45 0c	 mov	 eax, DWORD PTR _lpszAccountID$[ebp]
  015eb	50		 push	 eax
  015ec	8d 4d d4	 lea	 ecx, DWORD PTR _pMsg$[ebp+8]
  015ef	51		 push	 ecx
  015f0	e8 00 00 00 00	 call	 _memcpy
  015f5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 788  : 	memcpy(pMsg.szCharName, lpszCharName, MAX_ACCOUNT_LEN);

  015f8	6a 0a		 push	 10			; 0000000aH
  015fa	8b 45 10	 mov	 eax, DWORD PTR _lpszCharName$[ebp]
  015fd	50		 push	 eax
  015fe	8d 4d df	 lea	 ecx, DWORD PTR _pMsg$[ebp+19]
  01601	51		 push	 ecx
  01602	e8 00 00 00 00	 call	 _memcpy
  01607	83 c4 0c	 add	 esp, 12			; 0000000cH

; 789  : 	pMsg.wDstMapSvrCode = gGameServerCode;

  0160a	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  01610	66 89 45 ea	 mov	 WORD PTR _pMsg$[ebp+30], ax

; 790  : 	pMsg.iJoinAuthCode1 = iJA1;

  01614	8b 45 14	 mov	 eax, DWORD PTR _iJA1$[ebp]
  01617	89 45 ec	 mov	 DWORD PTR _pMsg$[ebp+32], eax

; 791  : 	pMsg.iJoinAuthCode2 = iJA2;

  0161a	8b 45 18	 mov	 eax, DWORD PTR _iJA2$[ebp]
  0161d	89 45 f0	 mov	 DWORD PTR _pMsg$[ebp+36], eax

; 792  : 	pMsg.iJoinAuthCode3 = iJA3;

  01620	8b 45 1c	 mov	 eax, DWORD PTR _iJA3$[ebp]
  01623	89 45 f4	 mov	 DWORD PTR _pMsg$[ebp+40], eax

; 793  : 	pMsg.iJoinAuthCode4 = iJA4;

  01626	8b 45 20	 mov	 eax, DWORD PTR _iJA4$[ebp]
  01629	89 45 f8	 mov	 DWORD PTR _pMsg$[ebp+44], eax

; 794  : 
; 795  : 	wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size);

  0162c	0f b6 45 cd	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  01630	50		 push	 eax
  01631	8d 4d cc	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  01634	51		 push	 ecx
  01635	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  0163a	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 796  : 
; 797  : 	gObj[iIndex].m_bMapSvrMoveReq = true;

  0163f	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  01642	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01648	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0164e	c6 84 01 e5 1b
	00 00 01	 mov	 BYTE PTR [ecx+eax+7141], 1
$LN2@GJReqMapSv@2:

; 798  : }

  01656	5f		 pop	 edi
  01657	5e		 pop	 esi
  01658	5b		 pop	 ebx
  01659	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0165c	33 cd		 xor	 ecx, ebp
  0165e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01663	8b e5		 mov	 esp, ebp
  01665	5d		 pop	 ebp
  01666	c3		 ret	 0
?GJReqMapSvrAuth@@YAXHPAD0HHHH@Z ENDP			; GJReqMapSvrAuth
_TEXT	ENDS
PUBLIC	??_C@_0EE@OBJPBDGN@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@ ; `string'
PUBLIC	??_C@_0EI@PFOEEAH@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@ ; `string'
PUBLIC	??_C@_0EF@OOAPAFHL@?$FLMapServerMng?$FN?5MapSvr?5MoveReq?5Er@ ; `string'
PUBLIC	??_C@_0EA@IPNBBDAL@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	?Send@DBSockMng@@QAEHPADH@Z:PROC		; DBSockMng::Send
EXTRN	?cDBSMng@@3VDBSockMng@@A:BYTE			; cDBSMng
EXTRN	?BuxConvert@@YAXPADH@Z:PROC			; BuxConvert
EXTRN	?GCAnsMapSvrAuth@@YAXHH@Z:PROC			; GCAnsMapSvrAuth
EXTRN	?gObjDel@@YAFH@Z:PROC				; gObjDel
;	COMDAT ??_C@_0EE@OBJPBDGN@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@
CONST	SEGMENT
??_C@_0EE@OBJPBDGN@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@ DB '['
	DB	'MapServerMng] [%s][%s] JG [0x7B] - Join Result OK : RST:%d, B'
	DB	'LK:%c', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@PFOEEAH@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@
CONST	SEGMENT
??_C@_0EI@PFOEEAH@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@ DB '['
	DB	'MapServerMng] [%s][%s] JG [0x7B] - Join Result Failed : RST:%'
	DB	'd, BLK:%c', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@OOAPAFHL@?$FLMapServerMng?$FN?5MapSvr?5MoveReq?5Er@
CONST	SEGMENT
??_C@_0EF@OOAPAFHL@?$FLMapServerMng?$FN?5MapSvr?5MoveReq?5Er@ DB '[MapSer'
	DB	'verMng] MapSvr MoveReq Error JG [0x7B] - No Request [%s] (%d)'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@IPNBBDAL@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
CONST	SEGMENT
??_C@_0EA@IPNBBDAL@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ DB '[Ma'
	DB	'pServerMng] Packet Error JG [0x7B] - Index out of bound : %d', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
tv195 = -156						; size = 4
tv146 = -156						; size = 4
tv69 = -156						; size = 4
_szName$ = -88						; size = 11
_pMsg$ = -76						; size = 28
_iIndex$ = -48						; size = 4
_szJN$ = -44						; size = 14
_szId$ = -28						; size = 11
_iSendResult$ = -16					; size = 4
_bAuthOK$ = -12						; size = 4
_lpObj$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?JGAnsMapSvrAuth@@YAXPAUPMSG_ANS_MAPSVRAUTH@@@Z PROC	; JGAnsMapSvrAuth

; 802  : {

  01670	55		 push	 ebp
  01671	8b ec		 mov	 ebp, esp
  01673	81 ec 9c 00 00
	00		 sub	 esp, 156		; 0000009cH
  01679	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0167e	33 c5		 xor	 eax, ebp
  01680	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  01683	53		 push	 ebx
  01684	56		 push	 esi
  01685	57		 push	 edi

; 803  : 	if ( !OBJMAX_RANGE(lpMsg->iIndex))

  01686	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01689	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0168d	7d 0c		 jge	 SHORT $LN16@JGAnsMapSv@2
  0168f	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv69[ebp], 0
  01699	eb 15		 jmp	 SHORT $LN17@JGAnsMapSv@2
$LN16@JGAnsMapSv@2:
  0169b	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  0169e	33 d2		 xor	 edx, edx
  016a0	81 79 04 97 3a
	00 00		 cmp	 DWORD PTR [ecx+4], 14999 ; 00003a97H
  016a7	0f 9e c2	 setle	 dl
  016aa	89 95 64 ff ff
	ff		 mov	 DWORD PTR tv69[ebp], edx
$LN17@JGAnsMapSv@2:
  016b0	83 bd 64 ff ff
	ff 00		 cmp	 DWORD PTR tv69[ebp], 0
  016b7	75 1c		 jne	 SHORT $LN13@JGAnsMapSv@2

; 804  : 	{
; 805  : 		LogAddC(2, "[MapServerMng] Packet Error JG [0x7B] - Index out of bound : %d",
; 806  : 			lpMsg->iIndex);

  016b9	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  016bc	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  016bf	51		 push	 ecx
  016c0	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IPNBBDAL@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
  016c5	6a 02		 push	 2
  016c7	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  016cd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 807  : 		
; 808  : 		return;

  016d0	e9 ca 03 00 00	 jmp	 $LN14@JGAnsMapSv@2
$LN13@JGAnsMapSv@2:

; 809  : 	}
; 810  : 
; 811  : 	LPOBJ lpObj = &gObj[lpMsg->iIndex];

  016d5	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  016d8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  016db	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  016e1	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  016e7	89 4d f8	 mov	 DWORD PTR _lpObj$[ebp], ecx

; 812  : 	memcpy(lpObj->Name, lpMsg->szCharName, MAX_ACCOUNT_LEN);

  016ea	6a 0a		 push	 10			; 0000000aH
  016ec	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  016ef	83 c0 13	 add	 eax, 19			; 00000013H
  016f2	50		 push	 eax
  016f3	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  016f6	83 c1 77	 add	 ecx, 119		; 00000077H
  016f9	51		 push	 ecx
  016fa	e8 00 00 00 00	 call	 _memcpy
  016ff	83 c4 0c	 add	 esp, 12			; 0000000cH

; 813  : 
; 814  : 
; 815  : 	if ( lpObj->m_bMapSvrMoveReq == false )

  01702	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01705	0f b6 88 e5 1b
	00 00		 movzx	 ecx, BYTE PTR [eax+7141]
  0170c	85 c9		 test	 ecx, ecx
  0170e	75 31		 jne	 SHORT $LN12@JGAnsMapSv@2

; 816  : 	{
; 817  : 		LogAddC(2, "[MapServerMng] MapSvr MoveReq Error JG [0x7B] - No Request [%s] (%d)",
; 818  : 			lpObj->AccountID, lpObj->m_Index);

  01710	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01713	8b 08		 mov	 ecx, DWORD PTR [eax]
  01715	51		 push	 ecx
  01716	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01719	83 c2 6c	 add	 edx, 108		; 0000006cH
  0171c	52		 push	 edx
  0171d	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@OOAPAFHL@?$FLMapServerMng?$FN?5MapSvr?5MoveReq?5Er@
  01722	6a 02		 push	 2
  01724	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  0172a	83 c4 10	 add	 esp, 16			; 00000010H

; 819  : 
; 820  : 		gObjDel(lpMsg->iIndex);

  0172d	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01730	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  01733	51		 push	 ecx
  01734	e8 00 00 00 00	 call	 ?gObjDel@@YAFH@Z	; gObjDel
  01739	83 c4 04	 add	 esp, 4

; 821  : 		return;

  0173c	e9 5e 03 00 00	 jmp	 $LN14@JGAnsMapSv@2
$LN12@JGAnsMapSv@2:

; 822  : 	}
; 823  : 
; 824  : 	BOOL bAuthOK = FALSE;

  01741	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _bAuthOK$[ebp], 0

; 825  : 	int iSendResult = 0;

  01748	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _iSendResult$[ebp], 0

; 826  : 	char szId[11];
; 827  : 	char szJN[14] = "";

  0174f	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
  01754	88 45 d4	 mov	 BYTE PTR _szJN$[ebp], al
  01757	33 c0		 xor	 eax, eax
  01759	89 45 d5	 mov	 DWORD PTR _szJN$[ebp+1], eax
  0175c	89 45 d9	 mov	 DWORD PTR _szJN$[ebp+5], eax
  0175f	89 45 dd	 mov	 DWORD PTR _szJN$[ebp+9], eax
  01762	88 45 e1	 mov	 BYTE PTR _szJN$[ebp+13], al

; 828  : 	int iIndex = lpMsg->iIndex;

  01765	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01768	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0176b	89 4d d0	 mov	 DWORD PTR _iIndex$[ebp], ecx

; 829  : 	SDHP_DBCHARINFOREQUEST pMsg;
; 830  : 	char szName[11];
; 831  : 
; 832  : 	memset(szId, 0, sizeof(szId));

  0176e	6a 0b		 push	 11			; 0000000bH
  01770	6a 00		 push	 0
  01772	8d 45 e4	 lea	 eax, DWORD PTR _szId$[ebp]
  01775	50		 push	 eax
  01776	e8 00 00 00 00	 call	 _memset
  0177b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 833  : 	memcpy(szId, lpMsg->szAccountID, MAX_ACCOUNT_LEN);

  0177e	6a 0a		 push	 10			; 0000000aH
  01780	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01783	83 c0 08	 add	 eax, 8
  01786	50		 push	 eax
  01787	8d 4d e4	 lea	 ecx, DWORD PTR _szId$[ebp]
  0178a	51		 push	 ecx
  0178b	e8 00 00 00 00	 call	 _memcpy
  01790	83 c4 0c	 add	 esp, 12			; 0000000cH

; 834  : 	memcpy(szJN, lpMsg->cJoominNumber, sizeof(lpMsg->cJoominNumber));

  01793	6a 0d		 push	 13			; 0000000dH
  01795	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01798	83 c0 30	 add	 eax, 48			; 00000030H
  0179b	50		 push	 eax
  0179c	8d 4d d4	 lea	 ecx, DWORD PTR _szJN$[ebp]
  0179f	51		 push	 ecx
  017a0	e8 00 00 00 00	 call	 _memcpy
  017a5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 835  : 	
; 836  : 	switch ( lpMsg->iResult )

  017a8	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  017ab	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  017ae	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv146[ebp], ecx
  017b4	83 bd 64 ff ff
	ff 00		 cmp	 DWORD PTR tv146[ebp], 0
  017bb	74 05		 je	 SHORT $LN9@JGAnsMapSv@2
  017bd	e9 27 01 00 00	 jmp	 $LN2@JGAnsMapSv@2
$LN9@JGAnsMapSv@2:

; 837  : 	{
; 838  : 		case 0:
; 839  : 			iSendResult = 0;

  017c2	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _iSendResult$[ebp], 0

; 840  : 			bAuthOK = FALSE;

  017c9	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _bAuthOK$[ebp], 0

; 841  : 
; 842  : 			if ( !gObjSetAccountLogin(iIndex, szId, lpMsg->iUserNumber, lpMsg->iDBNumber,lpMsg->ukn_30, szJN,lpMsg->PcBangRoom))//Season 4.5 addon

  017d0	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  017d3	0f b6 48 44	 movzx	 ecx, BYTE PTR [eax+68]
  017d7	51		 push	 ecx
  017d8	8d 55 d4	 lea	 edx, DWORD PTR _szJN$[ebp]
  017db	52		 push	 edx
  017dc	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  017df	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  017e2	51		 push	 ecx
  017e3	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  017e6	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  017e9	50		 push	 eax
  017ea	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  017ed	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  017f0	52		 push	 edx
  017f1	8d 45 e4	 lea	 eax, DWORD PTR _szId$[ebp]
  017f4	50		 push	 eax
  017f5	8b 4d d0	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  017f8	51		 push	 ecx
  017f9	e8 00 00 00 00	 call	 ?gObjSetAccountLogin@@YAHHPADHHH0E@Z ; gObjSetAccountLogin
  017fe	83 c4 1c	 add	 esp, 28			; 0000001cH
  01801	85 c0		 test	 eax, eax
  01803	75 2b		 jne	 SHORT $LN8@JGAnsMapSv@2

; 843  : 			{
; 844  : 				GJPAccountFail(iIndex, szId, lpMsg->iDBNumber, lpMsg->iUserNumber);

  01805	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01808	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0180b	51		 push	 ecx
  0180c	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  0180f	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  01812	50		 push	 eax
  01813	8d 4d e4	 lea	 ecx, DWORD PTR _szId$[ebp]
  01816	51		 push	 ecx
  01817	0f b7 55 d0	 movzx	 edx, WORD PTR _iIndex$[ebp]
  0181b	52		 push	 edx
  0181c	e8 00 00 00 00	 call	 ?GJPAccountFail@@YAXFPADHH@Z ; GJPAccountFail
  01821	83 c4 10	 add	 esp, 16			; 00000010H

; 845  : 				lpMsg->iResult = 4;

  01824	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01827	c7 40 24 04 00
	00 00		 mov	 DWORD PTR [eax+36], 4

; 846  : 			}
; 847  : 			else

  0182e	eb 4c		 jmp	 SHORT $LN7@JGAnsMapSv@2
$LN8@JGAnsMapSv@2:

; 848  : 			{
; 849  : 				LogAddTD(lMsg.Get(MSGGET(1, 211)), gObj[iIndex].Ip_addr, szId, lpMsg->iUserNumber, lpMsg->iDBNumber);

  01830	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01833	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  01836	51		 push	 ecx
  01837	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  0183a	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  0183d	50		 push	 eax
  0183e	8d 4d e4	 lea	 ecx, DWORD PTR _szId$[ebp]
  01841	51		 push	 ecx
  01842	8b 55 d0	 mov	 edx, DWORD PTR _iIndex$[ebp]
  01845	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  0184b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01850	8d 4c 10 18	 lea	 ecx, DWORD PTR [eax+edx+24]
  01854	51		 push	 ecx
  01855	68 d3 01 00 00	 push	 467			; 000001d3H
  0185a	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0185f	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  01864	50		 push	 eax
  01865	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0186b	83 c4 14	 add	 esp, 20			; 00000014H

; 850  : 				iSendResult = 1;

  0186e	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR _iSendResult$[ebp], 1

; 851  : 				bAuthOK = TRUE;

  01875	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _bAuthOK$[ebp], 1
$LN7@JGAnsMapSv@2:

; 852  : 			}
; 853  : 
; 854  : 			if ( lpMsg->iUserNumber == 0 && lpMsg->iDBNumber == 0 )

  0187c	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  0187f	83 78 28 00	 cmp	 DWORD PTR [eax+40], 0
  01883	75 34		 jne	 SHORT $LN6@JGAnsMapSv@2
  01885	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01888	83 78 2c 00	 cmp	 DWORD PTR [eax+44], 0
  0188c	75 2b		 jne	 SHORT $LN6@JGAnsMapSv@2

; 855  : 			{
; 856  : 				LogAddTD(lMsg.Get(MSGGET(1, 212)), szId, lpMsg->iUserNumber, lpMsg->iDBNumber);

  0188e	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01891	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  01894	51		 push	 ecx
  01895	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  01898	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  0189b	50		 push	 eax
  0189c	8d 4d e4	 lea	 ecx, DWORD PTR _szId$[ebp]
  0189f	51		 push	 ecx
  018a0	68 d4 01 00 00	 push	 468			; 000001d4H
  018a5	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  018aa	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  018af	50		 push	 eax
  018b0	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  018b6	83 c4 10	 add	 esp, 16			; 00000010H
$LN6@JGAnsMapSv@2:

; 857  : 			}
; 858  : 
; 859  : 			switch ( lpMsg->btBlockCode )

  018b9	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  018bc	8a 48 3d	 mov	 cl, BYTE PTR [eax+61]
  018bf	88 8d 64 ff ff
	ff		 mov	 BYTE PTR tv195[ebp], cl
  018c5	80 bd 64 ff ff
	ff 46		 cmp	 BYTE PTR tv195[ebp], 70	; 00000046H
  018cc	74 02		 je	 SHORT $LN3@JGAnsMapSv@2
  018ce	eb 17		 jmp	 SHORT $LN4@JGAnsMapSv@2
$LN3@JGAnsMapSv@2:

; 860  : 			{
; 861  : 				case 70:	// 0x46
; 862  : 					gObj[iIndex].m_cAccountItemBlock = 1;

  018d0	8b 45 d0	 mov	 eax, DWORD PTR _iIndex$[ebp]
  018d3	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  018d9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  018df	c6 84 01 14 02
	00 00 01	 mov	 BYTE PTR [ecx+eax+532], 1
$LN4@JGAnsMapSv@2:

; 863  : 					break;
; 864  : 			}
; 865  : 			break;

  018e7	eb 0e		 jmp	 SHORT $LN10@JGAnsMapSv@2
$LN2@JGAnsMapSv@2:

; 866  : 
; 867  : 		default:
; 868  : 			iSendResult = 0;

  018e9	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _iSendResult$[ebp], 0

; 869  : 			bAuthOK = FALSE;

  018f0	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _bAuthOK$[ebp], 0
$LN10@JGAnsMapSv@2:

; 870  : 			break;
; 871  : 	}
; 872  : 
; 873  : 	GCAnsMapSvrAuth(iIndex, iSendResult);

  018f7	8b 45 f0	 mov	 eax, DWORD PTR _iSendResult$[ebp]
  018fa	50		 push	 eax
  018fb	8b 4d d0	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  018fe	51		 push	 ecx
  018ff	e8 00 00 00 00	 call	 ?GCAnsMapSvrAuth@@YAXHH@Z ; GCAnsMapSvrAuth
  01904	83 c4 08	 add	 esp, 8

; 874  : 
; 875  : 	if ( bAuthOK == FALSE )

  01907	83 7d f4 00	 cmp	 DWORD PTR _bAuthOK$[ebp], 0
  0190b	75 3e		 jne	 SHORT $LN1@JGAnsMapSv@2

; 876  : 	{
; 877  : 		LogAddC(2, "[MapServerMng] [%s][%s] JG [0x7B] - Join Result Failed : RST:%d, BLK:%c",
; 878  : 			szId, lpMsg->szCharName, lpMsg->iResult, lpMsg->btBlockCode);

  0190d	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01910	0f b6 48 3d	 movzx	 ecx, BYTE PTR [eax+61]
  01914	51		 push	 ecx
  01915	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  01918	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  0191b	50		 push	 eax
  0191c	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  0191f	83 c1 13	 add	 ecx, 19			; 00000013H
  01922	51		 push	 ecx
  01923	8d 55 e4	 lea	 edx, DWORD PTR _szId$[ebp]
  01926	52		 push	 edx
  01927	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@PFOEEAH@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@
  0192c	6a 02		 push	 2
  0192e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  01934	83 c4 18	 add	 esp, 24			; 00000018H

; 879  : 		gObjDel(lpMsg->iIndex);

  01937	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  0193a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0193d	51		 push	 ecx
  0193e	e8 00 00 00 00	 call	 ?gObjDel@@YAFH@Z	; gObjDel
  01943	83 c4 04	 add	 esp, 4

; 880  : 
; 881  : 		return;

  01946	e9 54 01 00 00	 jmp	 $LN14@JGAnsMapSv@2
$LN1@JGAnsMapSv@2:

; 882  : 	}
; 883  : 	
; 884  : 	gObj[iIndex].m_sPrevMapSvrCode = lpMsg->wPrevMapSvrCode;

  0194b	8b 45 d0	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0194e	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01954	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0195a	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  0195d	66 8b 52 1e	 mov	 dx, WORD PTR [edx+30]
  01961	66 89 94 01 ec
	1b 00 00	 mov	 WORD PTR [ecx+eax+7148], dx

; 885  : 	gObj[iIndex].m_sDestMapNumber  = lpMsg->wMapNumber;

  01969	8b 45 d0	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0196c	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01972	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01978	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  0197b	66 8b 52 20	 mov	 dx, WORD PTR [edx+32]
  0197f	66 89 94 01 ee
	1b 00 00	 mov	 WORD PTR [ecx+eax+7150], dx

; 886  : 	gObj[iIndex].m_btDestX = lpMsg->btX;

  01987	8b 45 d0	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0198a	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01990	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01996	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  01999	8a 52 22	 mov	 dl, BYTE PTR [edx+34]
  0199c	88 94 01 f0 1b
	00 00		 mov	 BYTE PTR [ecx+eax+7152], dl

; 887  : 	gObj[iIndex].m_btDestY = lpMsg->btY;

  019a3	8b 45 d0	 mov	 eax, DWORD PTR _iIndex$[ebp]
  019a6	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  019ac	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  019b2	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  019b5	8a 52 23	 mov	 dl, BYTE PTR [edx+35]
  019b8	88 94 01 f1 1b
	00 00		 mov	 BYTE PTR [ecx+eax+7153], dl

; 888  : 	gObj[iIndex].m_iPcBangRoom = lpMsg->PcBangRoom;//Season 4.5 addon

  019bf	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  019c2	0f b6 48 44	 movzx	 ecx, BYTE PTR [eax+68]
  019c6	8b 55 d0	 mov	 edx, DWORD PTR _iIndex$[ebp]
  019c9	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  019cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  019d4	89 8c 10 c4 1f
	00 00		 mov	 DWORD PTR [eax+edx+8132], ecx

; 889  : 	gObj[iIndex].bEnableDelCharacter = FALSE;

  019db	8b 45 d0	 mov	 eax, DWORD PTR _iIndex$[ebp]
  019de	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  019e4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  019ea	c7 44 01 0c 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+12], 0

; 890  : 
; 891  : 	PHeadSetB((LPBYTE)&pMsg, 0x06, sizeof(pMsg));

  019f2	6a 1c		 push	 28			; 0000001cH
  019f4	6a 06		 push	 6
  019f6	8d 45 b4	 lea	 eax, DWORD PTR _pMsg$[ebp]
  019f9	50		 push	 eax
  019fa	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  019ff	83 c4 0c	 add	 esp, 12			; 0000000cH

; 892  : 	memset(szName, 0, sizeof(szName));

  01a02	6a 0b		 push	 11			; 0000000bH
  01a04	6a 00		 push	 0
  01a06	8d 45 a8	 lea	 eax, DWORD PTR _szName$[ebp]
  01a09	50		 push	 eax
  01a0a	e8 00 00 00 00	 call	 _memset
  01a0f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 893  : 	memcpy(szName, lpMsg->szCharName, MAX_ACCOUNT_LEN);

  01a12	6a 0a		 push	 10			; 0000000aH
  01a14	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01a17	83 c0 13	 add	 eax, 19			; 00000013H
  01a1a	50		 push	 eax
  01a1b	8d 4d a8	 lea	 ecx, DWORD PTR _szName$[ebp]
  01a1e	51		 push	 ecx
  01a1f	e8 00 00 00 00	 call	 _memcpy
  01a24	83 c4 0c	 add	 esp, 12			; 0000000cH

; 894  : 	BuxConvert(szName, MAX_ACCOUNT_LEN);

  01a27	6a 0a		 push	 10			; 0000000aH
  01a29	8d 45 a8	 lea	 eax, DWORD PTR _szName$[ebp]
  01a2c	50		 push	 eax
  01a2d	e8 00 00 00 00	 call	 ?BuxConvert@@YAXPADH@Z	; BuxConvert
  01a32	83 c4 08	 add	 esp, 8

; 895  : 	memcpy(pMsg.Name, szName, MAX_ACCOUNT_LEN);

  01a35	6a 0a		 push	 10			; 0000000aH
  01a37	8d 45 a8	 lea	 eax, DWORD PTR _szName$[ebp]
  01a3a	50		 push	 eax
  01a3b	8d 4d c2	 lea	 ecx, DWORD PTR _pMsg$[ebp+14]
  01a3e	51		 push	 ecx
  01a3f	e8 00 00 00 00	 call	 _memcpy
  01a44	83 c4 0c	 add	 esp, 12			; 0000000cH

; 896  : 	strcpy(pMsg.AccountID, lpMsg->szAccountID);

  01a47	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01a4a	83 c0 08	 add	 eax, 8
  01a4d	50		 push	 eax
  01a4e	8d 4d b7	 lea	 ecx, DWORD PTR _pMsg$[ebp+3]
  01a51	51		 push	 ecx
  01a52	e8 00 00 00 00	 call	 _strcpy
  01a57	83 c4 08	 add	 esp, 8

; 897  : 	pMsg.Number = lpObj->m_Index;

  01a5a	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01a5d	66 8b 08	 mov	 cx, WORD PTR [eax]
  01a60	66 89 4d ce	 mov	 WORD PTR _pMsg$[ebp+26], cx

; 898  : 
; 899  : 	cDBSMng.Send((char*)&pMsg, pMsg.h.size);

  01a64	0f b6 45 b5	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  01a68	50		 push	 eax
  01a69	8d 4d b4	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  01a6c	51		 push	 ecx
  01a6d	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  01a72	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send

; 900  : 
; 901  : 	LogAddTD("[MapServerMng] [%s][%s] JG [0x7B] - Join Result OK : RST:%d, BLK:%c",
; 902  : 		szId, lpMsg->szCharName, lpMsg->iResult, lpMsg->btBlockCode);

  01a77	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01a7a	0f b6 48 3d	 movzx	 ecx, BYTE PTR [eax+61]
  01a7e	51		 push	 ecx
  01a7f	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  01a82	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  01a85	50		 push	 eax
  01a86	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  01a89	83 c1 13	 add	 ecx, 19			; 00000013H
  01a8c	51		 push	 ecx
  01a8d	8d 55 e4	 lea	 edx, DWORD PTR _szId$[ebp]
  01a90	52		 push	 edx
  01a91	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@OBJPBDGN@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@
  01a96	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  01a9c	83 c4 14	 add	 esp, 20			; 00000014H
$LN14@JGAnsMapSv@2:

; 903  : 
; 904  : }

  01a9f	5f		 pop	 edi
  01aa0	5e		 pop	 esi
  01aa1	5b		 pop	 ebx
  01aa2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01aa5	33 cd		 xor	 ecx, ebp
  01aa7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01aac	8b e5		 mov	 esp, ebp
  01aae	5d		 pop	 ebp
  01aaf	c3		 ret	 0
?JGAnsMapSvrAuth@@YAXPAUPMSG_ANS_MAPSVRAUTH@@@Z ENDP	; JGAnsMapSvrAuth
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GJNotifyMaxUserCount@@YAXXZ			; GJNotifyMaxUserCount
EXTRN	?gObjTotalUser@@3HA:DWORD			; gObjTotalUser
EXTRN	?gServerMaxUser@@3HA:DWORD			; gServerMaxUser
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pMsg$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?GJNotifyMaxUserCount@@YAXXZ PROC			; GJNotifyMaxUserCount

; 924  : {

  01ab0	55		 push	 ebp
  01ab1	8b ec		 mov	 ebp, esp
  01ab3	83 ec 54	 sub	 esp, 84			; 00000054H
  01ab6	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  01abb	33 c5		 xor	 eax, ebp
  01abd	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  01ac0	53		 push	 ebx
  01ac1	56		 push	 esi
  01ac2	57		 push	 edi

; 925  : 	PMSG_NOTIFY_MAXUSER pMsg;
; 926  : 
; 927  : 	PHeadSetB((LPBYTE)&pMsg, 0x7C, sizeof(PMSG_NOTIFY_MAXUSER));

  01ac3	6a 10		 push	 16			; 00000010H
  01ac5	6a 7c		 push	 124			; 0000007cH
  01ac7	8d 45 ec	 lea	 eax, DWORD PTR _pMsg$[ebp]
  01aca	50		 push	 eax
  01acb	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  01ad0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 928  : 	pMsg.iSvrCode = gGameServerCode;

  01ad3	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  01ada	89 45 f0	 mov	 DWORD PTR _pMsg$[ebp+4], eax

; 929  : 	pMsg.iMaxUserCount = gServerMaxUser;

  01add	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gServerMaxUser@@3HA ; gServerMaxUser
  01ae2	89 45 f4	 mov	 DWORD PTR _pMsg$[ebp+8], eax

; 930  : 	pMsg.iCurUserCount = gObjTotalUser;

  01ae5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObjTotalUser@@3HA ; gObjTotalUser
  01aea	89 45 f8	 mov	 DWORD PTR _pMsg$[ebp+12], eax

; 931  : 	
; 932  : 	wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size);

  01aed	0f b6 45 ed	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  01af1	50		 push	 eax
  01af2	8d 4d ec	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  01af5	51		 push	 ecx
  01af6	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  01afb	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 933  : }

  01b00	5f		 pop	 edi
  01b01	5e		 pop	 esi
  01b02	5b		 pop	 ebx
  01b03	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01b06	33 cd		 xor	 ecx, ebp
  01b08	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01b0d	8b e5		 mov	 esp, ebp
  01b0f	5d		 pop	 ebp
  01b10	c3		 ret	 0
?GJNotifyMaxUserCount@@YAXXZ ENDP			; GJNotifyMaxUserCount
_TEXT	ENDS
EXTRN	?MngFriendMemoSend@@YAXPAUPMSG_JG_MEMO_SEND@@@Z:PROC ; MngFriendMemoSend
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?JGPSendMail@@YAXPAUPMSG_JG_MEMO_SEND@@@Z PROC		; JGPSendMail

; 937  : {

  01b20	55		 push	 ebp
  01b21	8b ec		 mov	 ebp, esp
  01b23	83 ec 40	 sub	 esp, 64			; 00000040H
  01b26	53		 push	 ebx
  01b27	56		 push	 esi
  01b28	57		 push	 edi

; 938  : 	MngFriendMemoSend(lpMsg);

  01b29	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01b2c	50		 push	 eax
  01b2d	e8 00 00 00 00	 call	 ?MngFriendMemoSend@@YAXPAUPMSG_JG_MEMO_SEND@@@Z ; MngFriendMemoSend
  01b32	83 c4 04	 add	 esp, 4

; 939  : }

  01b35	5f		 pop	 edi
  01b36	5e		 pop	 esi
  01b37	5b		 pop	 ebx
  01b38	8b e5		 mov	 esp, ebp
  01b3a	5d		 pop	 ebp
  01b3b	c3		 ret	 0
?JGPSendMail@@YAXPAUPMSG_JG_MEMO_SEND@@@Z ENDP		; JGPSendMail
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GJUpdateMatchDBUserCharacters@@YAXPAUOBJECTSTRUCT@@@Z ; GJUpdateMatchDBUserCharacters
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pMsg$ = -32						; size = 28
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
?GJUpdateMatchDBUserCharacters@@YAXPAUOBJECTSTRUCT@@@Z PROC ; GJUpdateMatchDBUserCharacters

; 952  : {

  01b40	55		 push	 ebp
  01b41	8b ec		 mov	 ebp, esp
  01b43	83 ec 60	 sub	 esp, 96			; 00000060H
  01b46	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  01b4b	33 c5		 xor	 eax, ebp
  01b4d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  01b50	53		 push	 ebx
  01b51	56		 push	 esi
  01b52	57		 push	 edi

; 953  : 	SDHP_REQ_UPDATE_MATCHDB_USERCHARACTERS pMsg;
; 954  : 
; 955  : 	PHeadSetB((LPBYTE)&pMsg, 0x16, sizeof(SDHP_REQ_UPDATE_MATCHDB_USERCHARACTERS));

  01b53	6a 1c		 push	 28			; 0000001cH
  01b55	6a 16		 push	 22			; 00000016H
  01b57	8d 45 e0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  01b5a	50		 push	 eax
  01b5b	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  01b60	83 c4 0c	 add	 esp, 12			; 0000000cH

; 956  : 	pMsg.DbClass = lpObj->DbClass;

  01b63	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01b66	8a 88 ba 00 00
	00		 mov	 cl, BYTE PTR [eax+186]
  01b6c	88 4d fa	 mov	 BYTE PTR _pMsg$[ebp+26], cl

; 957  : 	pMsg.Level = lpObj->Level;

  01b6f	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01b72	66 8b 88 be 00
	00 00		 mov	 cx, WORD PTR [eax+190]
  01b79	66 89 4d f8	 mov	 WORD PTR _pMsg$[ebp+24], cx

; 958  : 	memcpy(pMsg.szId, lpObj->AccountID, sizeof(pMsg.szId));

  01b7d	6a 0a		 push	 10			; 0000000aH
  01b7f	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01b82	83 c0 6c	 add	 eax, 108		; 0000006cH
  01b85	50		 push	 eax
  01b86	8d 4d e3	 lea	 ecx, DWORD PTR _pMsg$[ebp+3]
  01b89	51		 push	 ecx
  01b8a	e8 00 00 00 00	 call	 _memcpy
  01b8f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 959  : 	memcpy(pMsg.szName, lpObj->BackName, sizeof(pMsg.szName));

  01b92	6a 0a		 push	 10			; 0000000aH
  01b94	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01b97	05 d9 10 00 00	 add	 eax, 4313		; 000010d9H
  01b9c	50		 push	 eax
  01b9d	8d 4d ed	 lea	 ecx, DWORD PTR _pMsg$[ebp+13]
  01ba0	51		 push	 ecx
  01ba1	e8 00 00 00 00	 call	 _memcpy
  01ba6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 960  : 
; 961  : 	wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size);

  01ba9	0f b6 45 e1	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  01bad	50		 push	 eax
  01bae	8d 4d e0	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  01bb1	51		 push	 ecx
  01bb2	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  01bb7	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 962  : }

  01bbc	5f		 pop	 edi
  01bbd	5e		 pop	 esi
  01bbe	5b		 pop	 ebx
  01bbf	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01bc2	33 cd		 xor	 ecx, ebp
  01bc4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01bc9	8b e5		 mov	 esp, ebp
  01bcb	5d		 pop	 ebp
  01bcc	c3		 ret	 0
?GJUpdateMatchDBUserCharacters@@YAXPAUOBJECTSTRUCT@@@Z ENDP ; GJUpdateMatchDBUserCharacters
_TEXT	ENDS
PUBLIC	??_C@_05DNIIFBMG@?$CFs?5?$CFs?$AA@		; `string'
EXTRN	?MessageSendAllEx@@YAXHPAD0ZZ:PROC		; MessageSendAllEx
EXTRN	?ExConfig@@3VcExConfigs@@A:BYTE			; ExConfig
;	COMDAT ??_C@_05DNIIFBMG@?$CFs?5?$CFs?$AA@
CONST	SEGMENT
??_C@_05DNIIFBMG@?$CFs?5?$CFs?$AA@ DB '%s %s', 00H	; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
tv70 = -68						; size = 4
_lpResult$ = 8						; size = 4
?BroadCastMessage@@YAXPAUBroadCastMessageInfo@@@Z PROC	; BroadCastMessage

; 965  : {

  01bd0	55		 push	 ebp
  01bd1	8b ec		 mov	 ebp, esp
  01bd3	83 ec 44	 sub	 esp, 68			; 00000044H
  01bd6	53		 push	 ebx
  01bd7	56		 push	 esi
  01bd8	57		 push	 edi

; 966  : 	if( strlen(lpResult->Text) < 2 )

  01bd9	8b 45 08	 mov	 eax, DWORD PTR _lpResult$[ebp]
  01bdc	83 c0 10	 add	 eax, 16			; 00000010H
  01bdf	50		 push	 eax
  01be0	e8 00 00 00 00	 call	 _strlen
  01be5	83 c4 04	 add	 esp, 4
  01be8	83 f8 02	 cmp	 eax, 2
  01beb	73 02		 jae	 SHORT $LN6@BroadCastM

; 967  : 	{
; 968  : 		return;

  01bed	eb 51		 jmp	 SHORT $LN7@BroadCastM
$LN6@BroadCastM:

; 969  : 	}
; 970  : 	
; 971  : 	switch(lpResult->Type)

  01bef	8b 45 08	 mov	 eax, DWORD PTR _lpResult$[ebp]
  01bf2	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  01bf5	88 4d bc	 mov	 BYTE PTR tv70[ebp], cl
  01bf8	80 7d bc 00	 cmp	 BYTE PTR tv70[ebp], 0
  01bfc	74 08		 je	 SHORT $LN3@BroadCastM
  01bfe	80 7d bc 02	 cmp	 BYTE PTR tv70[ebp], 2
  01c02	74 15		 je	 SHORT $LN1@BroadCastM
  01c04	eb 3a		 jmp	 SHORT $LN7@BroadCastM
$LN3@BroadCastM:

; 972  : 	{
; 973  : 	case 0:
; 974  : 		{
; 975  : 			AllSendServerMsg(&lpResult->Text[1]);

  01c06	8b 45 08	 mov	 eax, DWORD PTR _lpResult$[ebp]
  01c09	83 c0 11	 add	 eax, 17			; 00000011H
  01c0c	50		 push	 eax
  01c0d	e8 00 00 00 00	 call	 ?AllSendServerMsg@@YAXPAD@Z ; AllSendServerMsg
  01c12	83 c4 04	 add	 esp, 4

; 976  : 		}
; 977  : 		break;

  01c15	eb 29		 jmp	 SHORT $LN7@BroadCastM

; 978  : 	case 1:
; 979  : 		{
; 980  : 			//USER_REQ_POST lpInfo = { 0 };
; 981  : 			//PHeadSetB((LPBYTE)&lpInfo, 0, sizeof(lpInfo));
; 982  : 			//lpInfo.h.headcode = 2;
; 983  : 			//lpInfo.chatmsg[0] = '!';
; 984  : 			//memcpy(lpInfo.id, lpResult->Sender, 10);
; 985  : 			//strcat(lpInfo.chatmsg, lpResult->Text);
; 986  : 			//DataSendAll((LPBYTE)&lpInfo, sizeof(lpInfo));
; 987  : 		}
; 988  : 		break;

  01c17	eb 27		 jmp	 SHORT $LN7@BroadCastM
$LN1@BroadCastM:

; 989  : 	case 2:
; 990  : 		MessageSendAllEx(ExConfig.Command.PostColor, lpResult->Sender, "%s %s", ExConfig.Command.PostPrist, lpResult->Text);

  01c19	8b 45 08	 mov	 eax, DWORD PTR _lpResult$[ebp]
  01c1c	83 c0 10	 add	 eax, 16			; 00000010H
  01c1f	50		 push	 eax
  01c20	68 a4 05 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+1444
  01c25	68 00 00 00 00	 push	 OFFSET ??_C@_05DNIIFBMG@?$CFs?5?$CFs?$AA@
  01c2a	8b 4d 08	 mov	 ecx, DWORD PTR _lpResult$[ebp]
  01c2d	83 c1 06	 add	 ecx, 6
  01c30	51		 push	 ecx
  01c31	8b 15 08 06 00
	00		 mov	 edx, DWORD PTR ?ExConfig@@3VcExConfigs@@A+1544
  01c37	52		 push	 edx
  01c38	e8 00 00 00 00	 call	 ?MessageSendAllEx@@YAXHPAD0ZZ ; MessageSendAllEx
  01c3d	83 c4 14	 add	 esp, 20			; 00000014H
$LN7@BroadCastM:

; 991  : 		break;
; 992  : 	}
; 993  : 	
; 994  : }

  01c40	5f		 pop	 edi
  01c41	5e		 pop	 esi
  01c42	5b		 pop	 ebx
  01c43	8b e5		 mov	 esp, ebp
  01c45	5d		 pop	 ebp
  01c46	c3		 ret	 0
?BroadCastMessage@@YAXPAUBroadCastMessageInfo@@@Z ENDP	; BroadCastMessage
_TEXT	ENDS
END
