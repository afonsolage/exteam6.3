; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\TServerInfoDisplayer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_07BMIEDOEC@Offline?$AA@			; `string'
PUBLIC	??_C@_06KCABBADG@Online?$AA@			; `string'
PUBLIC	??_C@_0BB@GGLBGCNG@CashShop?5Server?3?$AA@	; `string'
PUBLIC	??_C@_0BA@EDOMEFEL@Ranking?5Server?3?$AA@	; `string'
PUBLIC	??_C@_0O@HCDEPGCO@Event?5Server?3?$AA@		; `string'
PUBLIC	??_C@_0N@EADLBICI@ExDB?5Server?3?$AA@		; `string'
PUBLIC	??_C@_0N@IABMOFAP@Data?5Server?3?$AA@		; `string'
PUBLIC	??_C@_0N@HKCOIOA@Join?5Server?3?$AA@		; `string'
PUBLIC	??_C@_0BC@JJINIJKH@forum?4ex?9team?4net?$AA@	; `string'
PUBLIC	??_C@_0BI@LKGFFJDM@Project?3?5Multi?9Emulator?$AA@ ; `string'
PUBLIC	??_C@_0BD@FJIBMCEG@Skype?3?5muonline?4bk?$AA@	; `string'
PUBLIC	??_C@_0BC@FMPNGHID@Developer?3?5DangeR?$AA@	; `string'
PUBLIC	??_C@_0CA@BLGEHOPE@5?$CJ?5RankingServer?5?9?5Disconnected?$AA@ ; `string'
PUBLIC	??_C@_0BO@EEEBINBE@4?$CJ?5EventServer?5?9?5Disconnected?$AA@ ; `string'
PUBLIC	??_C@_0BN@DKGHECHI@3?$CJ?5ExDBServer?5?9?5Disconnected?$AA@ ; `string'
PUBLIC	??_C@_0BN@JKFHKNPO@2?$CJ?5DataServer?5?9?5Disconnected?$AA@ ; `string'
PUBLIC	??_C@_0BP@FFDIJJDL@1?$CJ?5FsGateServer?5?9?5Disconnected?$AA@ ; `string'
PUBLIC	??_C@_0BN@ECDKHDNJ@0?$CJ?5JoinServer?5?9?5Disconnected?$AA@ ; `string'
PUBLIC	??_C@_0BN@JIIANLGE@?5?5?$FL?9?5?5ExTeam?5Game?5Server?5?5?9?$FN?$AA@ ; `string'
;	COMDAT ??_C@_07BMIEDOEC@Offline?$AA@
CONST	SEGMENT
??_C@_07BMIEDOEC@Offline?$AA@ DB 'Offline', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KCABBADG@Online?$AA@
CONST	SEGMENT
??_C@_06KCABBADG@Online?$AA@ DB 'Online', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GGLBGCNG@CashShop?5Server?3?$AA@
CONST	SEGMENT
??_C@_0BB@GGLBGCNG@CashShop?5Server?3?$AA@ DB 'CashShop Server:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EDOMEFEL@Ranking?5Server?3?$AA@
CONST	SEGMENT
??_C@_0BA@EDOMEFEL@Ranking?5Server?3?$AA@ DB 'Ranking Server:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HCDEPGCO@Event?5Server?3?$AA@
CONST	SEGMENT
??_C@_0O@HCDEPGCO@Event?5Server?3?$AA@ DB 'Event Server:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EADLBICI@ExDB?5Server?3?$AA@
CONST	SEGMENT
??_C@_0N@EADLBICI@ExDB?5Server?3?$AA@ DB 'ExDB Server:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IABMOFAP@Data?5Server?3?$AA@
CONST	SEGMENT
??_C@_0N@IABMOFAP@Data?5Server?3?$AA@ DB 'Data Server:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HKCOIOA@Join?5Server?3?$AA@
CONST	SEGMENT
??_C@_0N@HKCOIOA@Join?5Server?3?$AA@ DB 'Join Server:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JJINIJKH@forum?4ex?9team?4net?$AA@
CONST	SEGMENT
??_C@_0BC@JJINIJKH@forum?4ex?9team?4net?$AA@ DB 'forum.ex-team.net', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LKGFFJDM@Project?3?5Multi?9Emulator?$AA@
CONST	SEGMENT
??_C@_0BI@LKGFFJDM@Project?3?5Multi?9Emulator?$AA@ DB 'Project: Multi-Emu'
	DB	'lator', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FJIBMCEG@Skype?3?5muonline?4bk?$AA@
CONST	SEGMENT
??_C@_0BD@FJIBMCEG@Skype?3?5muonline?4bk?$AA@ DB 'Skype: muonline.bk', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FMPNGHID@Developer?3?5DangeR?$AA@
CONST	SEGMENT
??_C@_0BC@FMPNGHID@Developer?3?5DangeR?$AA@ DB 'Developer: DangeR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@BLGEHOPE@5?$CJ?5RankingServer?5?9?5Disconnected?$AA@
CONST	SEGMENT
??_C@_0CA@BLGEHOPE@5?$CJ?5RankingServer?5?9?5Disconnected?$AA@ DB '5) Ran'
	DB	'kingServer - Disconnected', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@EEEBINBE@4?$CJ?5EventServer?5?9?5Disconnected?$AA@
CONST	SEGMENT
??_C@_0BO@EEEBINBE@4?$CJ?5EventServer?5?9?5Disconnected?$AA@ DB '4) Event'
	DB	'Server - Disconnected', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DKGHECHI@3?$CJ?5ExDBServer?5?9?5Disconnected?$AA@
CONST	SEGMENT
??_C@_0BN@DKGHECHI@3?$CJ?5ExDBServer?5?9?5Disconnected?$AA@ DB '3) ExDBSe'
	DB	'rver - Disconnected', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@JKFHKNPO@2?$CJ?5DataServer?5?9?5Disconnected?$AA@
CONST	SEGMENT
??_C@_0BN@JKFHKNPO@2?$CJ?5DataServer?5?9?5Disconnected?$AA@ DB '2) DataSe'
	DB	'rver - Disconnected', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@FFDIJJDL@1?$CJ?5FsGateServer?5?9?5Disconnected?$AA@
CONST	SEGMENT
??_C@_0BP@FFDIJJDL@1?$CJ?5FsGateServer?5?9?5Disconnected?$AA@ DB '1) FsGa'
	DB	'teServer - Disconnected', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@ECDKHDNJ@0?$CJ?5JoinServer?5?9?5Disconnected?$AA@
CONST	SEGMENT
??_C@_0BN@ECDKHDNJ@0?$CJ?5JoinServer?5?9?5Disconnected?$AA@ DB '0) JoinSe'
	DB	'rver - Disconnected', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@JIIANLGE@?5?5?$FL?9?5?5ExTeam?5Game?5Server?5?5?9?$FN?$AA@
CONST	SEGMENT
??_C@_0BN@JIIANLGE@?5?5?$FL?9?5?5ExTeam?5Game?5Server?5?5?9?$FN?$AA@ DB ' '
	DB	' [-  ExTeam Game Server  -]', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_ServerTypeText DD FLAT:??_C@_0BN@JIIANLGE@?5?5?$FL?9?5?5ExTeam?5Game?5Server?5?5?9?$FN?$AA@
_ErrorMessge DD	FLAT:??_C@_0BN@ECDKHDNJ@0?$CJ?5JoinServer?5?9?5Disconnected?$AA@
	DD	FLAT:??_C@_0BP@FFDIJJDL@1?$CJ?5FsGateServer?5?9?5Disconnected?$AA@
	DD	FLAT:??_C@_0BN@JKFHKNPO@2?$CJ?5DataServer?5?9?5Disconnected?$AA@
	DD	FLAT:??_C@_0BN@DKGHECHI@3?$CJ?5ExDBServer?5?9?5Disconnected?$AA@
	DD	FLAT:??_C@_0BO@EEEBINBE@4?$CJ?5EventServer?5?9?5Disconnected?$AA@
	DD	FLAT:??_C@_0CA@BLGEHOPE@5?$CJ?5RankingServer?5?9?5Disconnected?$AA@
	ORG $+8
_DeveloperMessage DD FLAT:??_C@_0BC@FMPNGHID@Developer?3?5DangeR?$AA@
	DD	FLAT:??_C@_0BD@FJIBMCEG@Skype?3?5muonline?4bk?$AA@
	DD	FLAT:??_C@_0BI@LKGFFJDM@Project?3?5Multi?9Emulator?$AA@
	DD	FLAT:??_C@_0BC@JJINIJKH@forum?4ex?9team?4net?$AA@
_StatusMsg DD	FLAT:??_C@_0N@HKCOIOA@Join?5Server?3?$AA@
	DD	FLAT:??_C@_0N@IABMOFAP@Data?5Server?3?$AA@
	DD	FLAT:??_C@_0N@EADLBICI@ExDB?5Server?3?$AA@
	DD	FLAT:??_C@_0O@HCDEPGCO@Event?5Server?3?$AA@
	DD	FLAT:??_C@_0BA@EDOMEFEL@Ranking?5Server?3?$AA@
	DD	FLAT:??_C@_0BB@GGLBGCNG@CashShop?5Server?3?$AA@
	DD	FLAT:??_C@_06KCABBADG@Online?$AA@
	DD	FLAT:??_C@_07BMIEDOEC@Offline?$AA@
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?InitGDIObject@TServerInfoDisplayer@@QAEXXZ	; TServerInfoDisplayer::InitGDIObject
PUBLIC	??_7TServerInfoDisplayer@@6B@			; TServerInfoDisplayer::`vftable'
PUBLIC	??0TServerInfoDisplayer@@QAE@XZ			; TServerInfoDisplayer::TServerInfoDisplayer
PUBLIC	??_R4TServerInfoDisplayer@@6B@			; TServerInfoDisplayer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTServerInfoDisplayer@@@8		; TServerInfoDisplayer `RTTI Type Descriptor'
PUBLIC	??_R3TServerInfoDisplayer@@8			; TServerInfoDisplayer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TServerInfoDisplayer@@8			; TServerInfoDisplayer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TServerInfoDisplayer@@8		; TServerInfoDisplayer::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ETServerInfoDisplayer@@UAEPAXI@Z:PROC	; TServerInfoDisplayer::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@TServerInfoDisplayer@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\tserverinfodisplayer.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@TServerInfoDisplayer@@8 DD FLAT:??_R0?AVTServerInfoDisplayer@@@8 ; TServerInfoDisplayer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TServerInfoDisplayer@@8
rdata$r	ENDS
;	COMDAT ??_R2TServerInfoDisplayer@@8
rdata$r	SEGMENT
??_R2TServerInfoDisplayer@@8 DD FLAT:??_R1A@?0A@EA@TServerInfoDisplayer@@8 ; TServerInfoDisplayer::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3TServerInfoDisplayer@@8
rdata$r	SEGMENT
??_R3TServerInfoDisplayer@@8 DD 00H			; TServerInfoDisplayer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2TServerInfoDisplayer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTServerInfoDisplayer@@@8
_DATA	SEGMENT
??_R0?AVTServerInfoDisplayer@@@8 DD FLAT:??_7type_info@@6B@ ; TServerInfoDisplayer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTServerInfoDisplayer@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TServerInfoDisplayer@@6B@
rdata$r	SEGMENT
??_R4TServerInfoDisplayer@@6B@ DD 00H			; TServerInfoDisplayer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTServerInfoDisplayer@@@8
	DD	FLAT:??_R3TServerInfoDisplayer@@8
rdata$r	ENDS
;	COMDAT ??_7TServerInfoDisplayer@@6B@
CONST	SEGMENT
??_7TServerInfoDisplayer@@6B@ DD FLAT:??_R4TServerInfoDisplayer@@6B@ ; TServerInfoDisplayer::`vftable'
	DD	FLAT:??_ETServerInfoDisplayer@@UAEPAXI@Z
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0TServerInfoDisplayer@@QAE@XZ PROC			; TServerInfoDisplayer::TServerInfoDisplayer
; _this$ = ecx

; 63   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7TServerInfoDisplayer@@6B@

; 64   : 	this->m_bValidJSConnection = FALSE;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 65   : 	this->m_bValidFSConnection = FALSE;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 66   : 	this->m_bValidDSConnection = FALSE;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 67   : 	this->m_bValidEXDSConnection = FALSE;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 68   : 	this->m_bValidEVDSConnection = FALSE;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 69   : 	this->m_bValidRKDSConnection = FALSE;

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 70   : 
; 71   : 	this->InitGDIObject();

  00051	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?InitGDIObject@TServerInfoDisplayer@@QAEXXZ ; TServerInfoDisplayer::InitGDIObject

; 72   : }

  00059	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??0TServerInfoDisplayer@@QAE@XZ ENDP			; TServerInfoDisplayer::TServerInfoDisplayer
_TEXT	ENDS
PUBLIC	??1TServerInfoDisplayer@@UAE@XZ			; TServerInfoDisplayer::~TServerInfoDisplayer
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GTServerInfoDisplayer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GTServerInfoDisplayer@@UAEPAXI@Z PROC		; TServerInfoDisplayer::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1TServerInfoDisplayer@@UAE@XZ ; TServerInfoDisplayer::~TServerInfoDisplayer
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GTServerInfoDisplayer@@UAEPAXI@Z ENDP		; TServerInfoDisplayer::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?DelGDIObject@TServerInfoDisplayer@@QAEXXZ	; TServerInfoDisplayer::DelGDIObject
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1TServerInfoDisplayer@@UAE@XZ PROC			; TServerInfoDisplayer::~TServerInfoDisplayer
; _this$ = ecx

; 75   : {

  00070	55		 push	 ebp
  00071	8b ec		 mov	 ebp, esp
  00073	83 ec 44	 sub	 esp, 68			; 00000044H
  00076	53		 push	 ebx
  00077	56		 push	 esi
  00078	57		 push	 edi
  00079	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7TServerInfoDisplayer@@6B@

; 76   : 	this->DelGDIObject();

  00085	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	e8 00 00 00 00	 call	 ?DelGDIObject@TServerInfoDisplayer@@QAEXXZ ; TServerInfoDisplayer::DelGDIObject

; 77   : }

  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	5b		 pop	 ebx
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c3		 ret	 0
??1TServerInfoDisplayer@@UAE@XZ ENDP			; TServerInfoDisplayer::~TServerInfoDisplayer
_TEXT	ENDS
PUBLIC	??_C@_05MOECANKB@Times?$AA@			; `string'
EXTRN	__imp__CreateSolidBrush@4:PROC
EXTRN	__imp__CreateFontA@56:PROC
;	COMDAT ??_C@_05MOECANKB@Times?$AA@
CONST	SEGMENT
??_C@_05MOECANKB@Times?$AA@ DB 'Times', 00H		; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InitGDIObject@TServerInfoDisplayer@@QAEXXZ PROC	; TServerInfoDisplayer::InitGDIObject
; _this$ = ecx

; 80   : {

  000a0	55		 push	 ebp
  000a1	8b ec		 mov	 ebp, esp
  000a3	83 ec 44	 sub	 esp, 68			; 00000044H
  000a6	53		 push	 ebx
  000a7	56		 push	 esi
  000a8	57		 push	 edi
  000a9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 81   : 
; 82   : 
; 83   : 	this->m_hFont = CreateFontA(60, 0, 0, 0, FW_REGULAR, FALSE, FALSE, FALSE, 
; 84   : 		1, OUT_DEFAULT_PRECIS, CLIP_DEFAULT_PRECIS, DEFAULT_QUALITY,
; 85   : 		DEFAULT_PITCH|FF_DONTCARE, "Times");

  000ac	68 00 00 00 00	 push	 OFFSET ??_C@_05MOECANKB@Times?$AA@
  000b1	6a 00		 push	 0
  000b3	6a 00		 push	 0
  000b5	6a 00		 push	 0
  000b7	6a 00		 push	 0
  000b9	6a 01		 push	 1
  000bb	6a 00		 push	 0
  000bd	6a 00		 push	 0
  000bf	6a 00		 push	 0
  000c1	68 90 01 00 00	 push	 400			; 00000190H
  000c6	6a 00		 push	 0
  000c8	6a 00		 push	 0
  000ca	6a 00		 push	 0
  000cc	6a 3c		 push	 60			; 0000003cH
  000ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateFontA@56
  000d4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d7	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 86   : 
; 87   : 
; 88   : 
; 89   : 	//this->m_hFont = CreateFont(80, 0, 0, 0, FW_THIN, FALSE, TRUE, FALSE, 
; 90   : 	//	ANSI_CHARSET, OUT_DEFAULT_PRECIS, CLIP_DEFAULT_PRECIS, DEFAULT_QUALITY,
; 91   : 	//	DEFAULT_PITCH|FF_DONTCARE, "Times");
; 92   : 
; 93   : 	//this->m_hNormalBrush = CreateSolidBrush(RGB(110, 240, 120));
; 94   : 	this->m_hNormalBrush = CreateSolidBrush(RGB(33, 200, 219));

  000da	68 21 c8 db 00	 push	 14403617		; 00dbc821H
  000df	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateSolidBrush@4
  000e5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 95   : 	this->m_hAbnormalBrush = CreateSolidBrush(RGB(250, 110, 110));

  000eb	68 fa 6e 6e 00	 push	 7237370			; 006e6efaH
  000f0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateSolidBrush@4
  000f6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f9	89 41 24	 mov	 DWORD PTR [ecx+36], eax

; 96   : }

  000fc	5f		 pop	 edi
  000fd	5e		 pop	 esi
  000fe	5b		 pop	 ebx
  000ff	8b e5		 mov	 esp, ebp
  00101	5d		 pop	 ebp
  00102	c3		 ret	 0
?InitGDIObject@TServerInfoDisplayer@@QAEXXZ ENDP	; TServerInfoDisplayer::InitGDIObject
_TEXT	ENDS
EXTRN	__imp__DeleteObject@4:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DelGDIObject@TServerInfoDisplayer@@QAEXXZ PROC		; TServerInfoDisplayer::DelGDIObject
; _this$ = ecx

; 99   : {

  00110	55		 push	 ebp
  00111	8b ec		 mov	 ebp, esp
  00113	83 ec 44	 sub	 esp, 68			; 00000044H
  00116	53		 push	 ebx
  00117	56		 push	 esi
  00118	57		 push	 edi
  00119	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 100  : 	DeleteObject(this->m_hFont);

  0011c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011f	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00122	51		 push	 ecx
  00123	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteObject@4

; 101  : 	DeleteObject(this->m_hNormalBrush);

  00129	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0012c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0012f	51		 push	 ecx
  00130	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteObject@4

; 102  : 	DeleteObject(this->m_hAbnormalBrush);

  00136	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00139	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0013c	51		 push	 ecx
  0013d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteObject@4

; 103  : }

  00143	5f		 pop	 edi
  00144	5e		 pop	 esi
  00145	5b		 pop	 ebx
  00146	8b e5		 mov	 esp, ebp
  00148	5d		 pop	 ebp
  00149	c3		 ret	 0
?DelGDIObject@TServerInfoDisplayer@@QAEXXZ ENDP		; TServerInfoDisplayer::DelGDIObject
_TEXT	ENDS
PUBLIC	?PaintAllInfo@TServerInfoDisplayer@@QAEXPAUHWND__@@HH@Z ; TServerInfoDisplayer::PaintAllInfo
PUBLIC	?CheckLogFileSize@TServerInfoDisplayer@@QAEXXZ	; TServerInfoDisplayer::CheckLogFileSize
PUBLIC	?CheckRKDSConnection@TServerInfoDisplayer@@QAEXXZ ; TServerInfoDisplayer::CheckRKDSConnection
PUBLIC	?CheckEVDSConnection@TServerInfoDisplayer@@QAEXXZ ; TServerInfoDisplayer::CheckEVDSConnection
PUBLIC	?CheckEXDSConnection@TServerInfoDisplayer@@QAEXXZ ; TServerInfoDisplayer::CheckEXDSConnection
PUBLIC	?CheckFSConnection@TServerInfoDisplayer@@QAEXXZ	; TServerInfoDisplayer::CheckFSConnection
PUBLIC	?CheckJSConnection@TServerInfoDisplayer@@QAEXXZ	; TServerInfoDisplayer::CheckJSConnection
PUBLIC	?CheckDSConnection@TServerInfoDisplayer@@QAEXXZ	; TServerInfoDisplayer::CheckDSConnection
PUBLIC	?Run@TServerInfoDisplayer@@QAEXPAUHWND__@@@Z	; TServerInfoDisplayer::Run
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hWnd$ = 8						; size = 4
?Run@TServerInfoDisplayer@@QAEXPAUHWND__@@@Z PROC	; TServerInfoDisplayer::Run
; _this$ = ecx

; 106  : {

  00150	55		 push	 ebp
  00151	8b ec		 mov	 ebp, esp
  00153	83 ec 44	 sub	 esp, 68			; 00000044H
  00156	53		 push	 ebx
  00157	56		 push	 esi
  00158	57		 push	 edi
  00159	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 107  : 	this->CheckDSConnection();

  0015c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0015f	e8 00 00 00 00	 call	 ?CheckDSConnection@TServerInfoDisplayer@@QAEXXZ ; TServerInfoDisplayer::CheckDSConnection

; 108  : 	this->CheckJSConnection();

  00164	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00167	e8 00 00 00 00	 call	 ?CheckJSConnection@TServerInfoDisplayer@@QAEXXZ ; TServerInfoDisplayer::CheckJSConnection

; 109  : 	this->CheckFSConnection();

  0016c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	e8 00 00 00 00	 call	 ?CheckFSConnection@TServerInfoDisplayer@@QAEXXZ ; TServerInfoDisplayer::CheckFSConnection

; 110  : 	this->CheckEXDSConnection();

  00174	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00177	e8 00 00 00 00	 call	 ?CheckEXDSConnection@TServerInfoDisplayer@@QAEXXZ ; TServerInfoDisplayer::CheckEXDSConnection

; 111  : 	this->CheckEVDSConnection();

  0017c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017f	e8 00 00 00 00	 call	 ?CheckEVDSConnection@TServerInfoDisplayer@@QAEXXZ ; TServerInfoDisplayer::CheckEVDSConnection

; 112  : 	this->CheckRKDSConnection();

  00184	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00187	e8 00 00 00 00	 call	 ?CheckRKDSConnection@TServerInfoDisplayer@@QAEXXZ ; TServerInfoDisplayer::CheckRKDSConnection

; 113  : 
; 114  : 	this->CheckLogFileSize();

  0018c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0018f	e8 00 00 00 00	 call	 ?CheckLogFileSize@TServerInfoDisplayer@@QAEXXZ ; TServerInfoDisplayer::CheckLogFileSize

; 115  : 
; 116  : 	this->PaintAllInfo(hWnd, 0, 20);

  00194	6a 14		 push	 20			; 00000014H
  00196	6a 00		 push	 0
  00198	8b 45 08	 mov	 eax, DWORD PTR _hWnd$[ebp]
  0019b	50		 push	 eax
  0019c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0019f	e8 00 00 00 00	 call	 ?PaintAllInfo@TServerInfoDisplayer@@QAEXPAUHWND__@@HH@Z ; TServerInfoDisplayer::PaintAllInfo

; 117  : }

  001a4	5f		 pop	 edi
  001a5	5e		 pop	 esi
  001a6	5b		 pop	 ebx
  001a7	8b e5		 mov	 esp, ebp
  001a9	5d		 pop	 ebp
  001aa	c2 04 00	 ret	 4
?Run@TServerInfoDisplayer@@QAEXPAUHWND__@@@Z ENDP	; TServerInfoDisplayer::Run
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?CheckLogFileSize@TServerInfoDisplayer@@QAEXXZ PROC	; TServerInfoDisplayer::CheckLogFileSize
; _this$ = ecx

; 120  : {

  001b0	55		 push	 ebp
  001b1	8b ec		 mov	 ebp, esp
  001b3	83 ec 44	 sub	 esp, 68			; 00000044H
  001b6	53		 push	 ebx
  001b7	56		 push	 esi
  001b8	57		 push	 edi
  001b9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 121  : 
; 122  : }

  001bc	5f		 pop	 edi
  001bd	5e		 pop	 esi
  001be	5b		 pop	 ebx
  001bf	8b e5		 mov	 esp, ebp
  001c1	5d		 pop	 ebp
  001c2	c3		 ret	 0
?CheckLogFileSize@TServerInfoDisplayer@@QAEXXZ ENDP	; TServerInfoDisplayer::CheckLogFileSize
_TEXT	ENDS
EXTRN	?GetSocket@MyWinsockBase@@QAEIXZ:PROC		; MyWinsockBase::GetSocket
EXTRN	?wsJServerCli@@3VwsJoinServerCli@@A:BYTE	; wsJServerCli
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CheckJSConnection@TServerInfoDisplayer@@QAEXXZ PROC	; TServerInfoDisplayer::CheckJSConnection
; _this$ = ecx

; 125  : {

  001d0	55		 push	 ebp
  001d1	8b ec		 mov	 ebp, esp
  001d3	83 ec 44	 sub	 esp, 68			; 00000044H
  001d6	53		 push	 ebx
  001d7	56		 push	 esi
  001d8	57		 push	 edi
  001d9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 126  : 	if ( wsJServerCli.GetSocket() == INVALID_SOCKET )

  001dc	b9 04 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A+4
  001e1	e8 00 00 00 00	 call	 ?GetSocket@MyWinsockBase@@QAEIXZ ; MyWinsockBase::GetSocket
  001e6	83 f8 ff	 cmp	 eax, -1
  001e9	75 0c		 jne	 SHORT $LN2@CheckJSCon

; 127  : 		this->m_bValidJSConnection = FALSE;

  001eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001ee	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 128  : 	else

  001f5	eb 0a		 jmp	 SHORT $LN3@CheckJSCon
$LN2@CheckJSCon:

; 129  : 		this->m_bValidJSConnection = TRUE;

  001f7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001fa	c7 40 04 01 00
	00 00		 mov	 DWORD PTR [eax+4], 1
$LN3@CheckJSCon:

; 130  : }

  00201	5f		 pop	 edi
  00202	5e		 pop	 esi
  00203	5b		 pop	 ebx
  00204	8b e5		 mov	 esp, ebp
  00206	5d		 pop	 ebp
  00207	c3		 ret	 0
?CheckJSConnection@TServerInfoDisplayer@@QAEXXZ ENDP	; TServerInfoDisplayer::CheckJSConnection
_TEXT	ENDS
EXTRN	?cDBSMng@@3VDBSockMng@@A:BYTE			; cDBSMng
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CheckDSConnection@TServerInfoDisplayer@@QAEXXZ PROC	; TServerInfoDisplayer::CheckDSConnection
; _this$ = ecx

; 133  : {

  00210	55		 push	 ebp
  00211	8b ec		 mov	 ebp, esp
  00213	83 ec 44	 sub	 esp, 68			; 00000044H
  00216	53		 push	 ebx
  00217	56		 push	 esi
  00218	57		 push	 edi
  00219	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 134  : 	if ( cDBSMng.wsCDBS[0].GetSocket() == INVALID_SOCKET )

  0021c	b9 08 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A+8
  00221	e8 00 00 00 00	 call	 ?GetSocket@MyWinsockBase@@QAEIXZ ; MyWinsockBase::GetSocket
  00226	83 f8 ff	 cmp	 eax, -1
  00229	75 0c		 jne	 SHORT $LN2@CheckDSCon

; 135  : 		this->m_bValidDSConnection = FALSE;

  0022b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0022e	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 136  : 	else

  00235	eb 0a		 jmp	 SHORT $LN3@CheckDSCon
$LN2@CheckDSCon:

; 137  : 		this->m_bValidDSConnection = TRUE;

  00237	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0023a	c7 40 0c 01 00
	00 00		 mov	 DWORD PTR [eax+12], 1
$LN3@CheckDSCon:

; 138  : }

  00241	5f		 pop	 edi
  00242	5e		 pop	 esi
  00243	5b		 pop	 ebx
  00244	8b e5		 mov	 esp, ebp
  00246	5d		 pop	 ebp
  00247	c3		 ret	 0
?CheckDSConnection@TServerInfoDisplayer@@QAEXXZ ENDP	; TServerInfoDisplayer::CheckDSConnection
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?CheckFSConnection@TServerInfoDisplayer@@QAEXXZ PROC	; TServerInfoDisplayer::CheckFSConnection
; _this$ = ecx

; 141  : {

  00250	55		 push	 ebp
  00251	8b ec		 mov	 ebp, esp
  00253	83 ec 44	 sub	 esp, 68			; 00000044H
  00256	53		 push	 ebx
  00257	56		 push	 esi
  00258	57		 push	 edi
  00259	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 142  : 	this->m_bValidFSConnection = TRUE;

  0025c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0025f	c7 40 08 01 00
	00 00		 mov	 DWORD PTR [eax+8], 1

; 143  : }

  00266	5f		 pop	 edi
  00267	5e		 pop	 esi
  00268	5b		 pop	 ebx
  00269	8b e5		 mov	 esp, ebp
  0026b	5d		 pop	 ebp
  0026c	c3		 ret	 0
?CheckFSConnection@TServerInfoDisplayer@@QAEXXZ ENDP	; TServerInfoDisplayer::CheckFSConnection
_TEXT	ENDS
EXTRN	?wsExDbCli@@3VwsJoinServerCli@@A:BYTE		; wsExDbCli
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CheckEXDSConnection@TServerInfoDisplayer@@QAEXXZ PROC	; TServerInfoDisplayer::CheckEXDSConnection
; _this$ = ecx

; 146  : {

  00270	55		 push	 ebp
  00271	8b ec		 mov	 ebp, esp
  00273	83 ec 44	 sub	 esp, 68			; 00000044H
  00276	53		 push	 ebx
  00277	56		 push	 esi
  00278	57		 push	 edi
  00279	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 147  : 	if ( wsExDbCli.GetSocket() == INVALID_SOCKET )

  0027c	b9 04 00 00 00	 mov	 ecx, OFFSET ?wsExDbCli@@3VwsJoinServerCli@@A+4
  00281	e8 00 00 00 00	 call	 ?GetSocket@MyWinsockBase@@QAEIXZ ; MyWinsockBase::GetSocket
  00286	83 f8 ff	 cmp	 eax, -1
  00289	75 0c		 jne	 SHORT $LN2@CheckEXDSC

; 148  : 		this->m_bValidEXDSConnection = FALSE;

  0028b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0028e	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 149  : 	else

  00295	eb 0a		 jmp	 SHORT $LN3@CheckEXDSC
$LN2@CheckEXDSC:

; 150  : 		this->m_bValidEXDSConnection = TRUE;

  00297	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0029a	c7 40 10 01 00
	00 00		 mov	 DWORD PTR [eax+16], 1
$LN3@CheckEXDSC:

; 151  : }

  002a1	5f		 pop	 edi
  002a2	5e		 pop	 esi
  002a3	5b		 pop	 ebx
  002a4	8b e5		 mov	 esp, ebp
  002a6	5d		 pop	 ebp
  002a7	c3		 ret	 0
?CheckEXDSConnection@TServerInfoDisplayer@@QAEXXZ ENDP	; TServerInfoDisplayer::CheckEXDSConnection
_TEXT	ENDS
EXTRN	?IsEventChipServerConnected@@3HA:DWORD		; IsEventChipServerConnected
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CheckEVDSConnection@TServerInfoDisplayer@@QAEXXZ PROC	; TServerInfoDisplayer::CheckEVDSConnection
; _this$ = ecx

; 154  : {

  002b0	55		 push	 ebp
  002b1	8b ec		 mov	 ebp, esp
  002b3	83 ec 44	 sub	 esp, 68			; 00000044H
  002b6	53		 push	 ebx
  002b7	56		 push	 esi
  002b8	57		 push	 edi
  002b9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 155  : 	if ( IsEventChipServerConnected == FALSE )

  002bc	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?IsEventChipServerConnected@@3HA, 0 ; IsEventChipServerConnected
  002c3	75 0c		 jne	 SHORT $LN2@CheckEVDSC

; 156  : 		this->m_bValidEVDSConnection = FALSE;

  002c5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002c8	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 157  : 	else

  002cf	eb 0a		 jmp	 SHORT $LN3@CheckEVDSC
$LN2@CheckEVDSC:

; 158  : 		this->m_bValidEVDSConnection = TRUE;

  002d1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002d4	c7 40 14 01 00
	00 00		 mov	 DWORD PTR [eax+20], 1
$LN3@CheckEVDSC:

; 159  : }

  002db	5f		 pop	 edi
  002dc	5e		 pop	 esi
  002dd	5b		 pop	 ebx
  002de	8b e5		 mov	 esp, ebp
  002e0	5d		 pop	 ebp
  002e1	c3		 ret	 0
?CheckEVDSConnection@TServerInfoDisplayer@@QAEXXZ ENDP	; TServerInfoDisplayer::CheckEVDSConnection
_TEXT	ENDS
EXTRN	?IsDevilSquareEventConnected@@3HA:DWORD		; IsDevilSquareEventConnected
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CheckRKDSConnection@TServerInfoDisplayer@@QAEXXZ PROC	; TServerInfoDisplayer::CheckRKDSConnection
; _this$ = ecx

; 162  : {

  002f0	55		 push	 ebp
  002f1	8b ec		 mov	 ebp, esp
  002f3	83 ec 44	 sub	 esp, 68			; 00000044H
  002f6	53		 push	 ebx
  002f7	56		 push	 esi
  002f8	57		 push	 edi
  002f9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 163  : 	if ( IsDevilSquareEventConnected == FALSE )

  002fc	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?IsDevilSquareEventConnected@@3HA, 0 ; IsDevilSquareEventConnected
  00303	75 0c		 jne	 SHORT $LN2@CheckRKDSC

; 164  : 		this->m_bValidRKDSConnection = FALSE;

  00305	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00308	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 165  : 	else

  0030f	eb 0a		 jmp	 SHORT $LN3@CheckRKDSC
$LN2@CheckRKDSC:

; 166  : 		this->m_bValidRKDSConnection = TRUE;

  00311	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00314	c7 40 18 01 00
	00 00		 mov	 DWORD PTR [eax+24], 1
$LN3@CheckRKDSC:

; 167  : }

  0031b	5f		 pop	 edi
  0031c	5e		 pop	 esi
  0031d	5b		 pop	 ebx
  0031e	8b e5		 mov	 esp, ebp
  00320	5d		 pop	 ebp
  00321	c3		 ret	 0
?CheckRKDSConnection@TServerInfoDisplayer@@QAEXXZ ENDP	; TServerInfoDisplayer::CheckRKDSConnection
_TEXT	ENDS
PUBLIC	??_C@_0EH@JOCPMNLJ@Server?5Interconnection?5Check?5?9?5?$FL@ ; `string'
PUBLIC	??_C@_08LHOANCIJ@Date?3?5?$CFs?$AA@		; `string'
PUBLIC	??_C@_0M@LMOOBOCC@Version?3?5?$CFs?$AA@		; `string'
PUBLIC	??_C@_0M@KDOOKFAH@New?5Update?3?$AA@		; `string'
PUBLIC	??_C@_0M@IHBBFHDF@License?3?5?$CFs?$AA@		; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp__ReleaseDC@8:PROC
EXTRN	__imp__SelectObject@8:PROC
EXTRN	?Output@CLogToFile@@QAAXPADZZ:PROC		; CLogToFile::Output
EXTRN	_sprintf:PROC
EXTRN	?GetLicenseName@CExLicense@@QAEPADXZ:PROC	; CExLicense::GetLicenseName
EXTRN	?g_ExLicense@@3VCExLicense@@A:BYTE		; g_ExLicense
EXTRN	__imp__TextOutA@20:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__SetTextColor@8:PROC
EXTRN	__imp__SetBkMode@8:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__GetDC@4:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_0EH@JOCPMNLJ@Server?5Interconnection?5Check?5?9?5?$FL@
CONST	SEGMENT
??_C@_0EH@JOCPMNLJ@Server?5Interconnection?5Check?5?9?5?$FL@ DB 'Server I'
	DB	'nterconnection Check - [FS/%d] [DS/%d] [EX/%d] [ES/%d] [RS/%d'
	DB	']', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08LHOANCIJ@Date?3?5?$CFs?$AA@
CONST	SEGMENT
??_C@_08LHOANCIJ@Date?3?5?$CFs?$AA@ DB 'Date: %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LMOOBOCC@Version?3?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0M@LMOOBOCC@Version?3?5?$CFs?$AA@ DB 'Version: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KDOOKFAH@New?5Update?3?$AA@
CONST	SEGMENT
??_C@_0M@KDOOKFAH@New?5Update?3?$AA@ DB 'New Update:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IHBBFHDF@License?3?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0M@IHBBFHDF@License?3?5?$CFs?$AA@ DB 'License: %s', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_pOldFont$ = -196					; size = 4
_InfoServer2$227472 = -192				; size = 50
_InfoServer$227470 = -140				; size = 50
_szLicense$227459 = -88					; size = 50
_iOldBkMode$ = -36					; size = 4
_iLineCount$ = -32					; size = 4
_rect$ = -28						; size = 16
_hDC$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_hWnd$ = 8						; size = 4
_iTopLeftX$ = 12					; size = 4
_iTopLeftY$ = 16					; size = 4
?PaintAllInfo@TServerInfoDisplayer@@QAEXPAUHWND__@@HH@Z PROC ; TServerInfoDisplayer::PaintAllInfo
; _this$ = ecx

; 170  : {

  00330	55		 push	 ebp
  00331	8b ec		 mov	 ebp, esp
  00333	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00339	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0033e	33 c5		 xor	 eax, ebp
  00340	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00343	53		 push	 ebx
  00344	56		 push	 esi
  00345	57		 push	 edi
  00346	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 171  : 	HDC hDC = GetDC(hWnd);

  00349	8b 45 08	 mov	 eax, DWORD PTR _hWnd$[ebp]
  0034c	50		 push	 eax
  0034d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDC@4
  00353	89 45 f4	 mov	 DWORD PTR _hDC$[ebp], eax

; 172  : 	RECT rect;
; 173  : 	GetClientRect(hWnd, &rect);

  00356	8d 45 e4	 lea	 eax, DWORD PTR _rect$[ebp]
  00359	50		 push	 eax
  0035a	8b 4d 08	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  0035d	51		 push	 ecx
  0035e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8

; 174  : 	rect.top = 20;

  00364	c7 45 e8 14 00
	00 00		 mov	 DWORD PTR _rect$[ebp+4], 20 ; 00000014H

; 175  : 	rect.bottom = 100;

  0036b	c7 45 f0 64 00
	00 00		 mov	 DWORD PTR _rect$[ebp+12], 100 ; 00000064H

; 176  : 	int iLineCount = 0;

  00372	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _iLineCount$[ebp], 0

; 177  : 
; 178  : 	int iOldBkMode = SetBkMode(hDC, TRANSPARENT);

  00379	6a 01		 push	 1
  0037b	8b 45 f4	 mov	 eax, DWORD PTR _hDC$[ebp]
  0037e	50		 push	 eax
  0037f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetBkMode@8
  00385	89 45 dc	 mov	 DWORD PTR _iOldBkMode$[ebp], eax

; 179  : 
; 180  : #if(NEW_WINDOW==1)
; 181  : 
; 182  : 	SetTextColor(hDC, RGB(123, 123, 250));

  00388	68 7b 7b fa 00	 push	 16415611		; 00fa7b7bH
  0038d	8b 45 f4	 mov	 eax, DWORD PTR _hDC$[ebp]
  00390	50		 push	 eax
  00391	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8

; 183  : 	TextOut(hDC, 10, 80, StatusMsg[0], strlen(StatusMsg[0]));

  00397	a1 00 00 00 00	 mov	 eax, DWORD PTR _StatusMsg
  0039c	50		 push	 eax
  0039d	e8 00 00 00 00	 call	 _strlen
  003a2	83 c4 04	 add	 esp, 4
  003a5	50		 push	 eax
  003a6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _StatusMsg
  003ac	51		 push	 ecx
  003ad	6a 50		 push	 80			; 00000050H
  003af	6a 0a		 push	 10			; 0000000aH
  003b1	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  003b4	52		 push	 edx
  003b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 184  : 
; 185  : 	TextOut(hDC, 150, 80, StatusMsg[1], strlen(StatusMsg[1]));

  003bb	a1 04 00 00 00	 mov	 eax, DWORD PTR _StatusMsg+4
  003c0	50		 push	 eax
  003c1	e8 00 00 00 00	 call	 _strlen
  003c6	83 c4 04	 add	 esp, 4
  003c9	50		 push	 eax
  003ca	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _StatusMsg+4
  003d0	51		 push	 ecx
  003d1	6a 50		 push	 80			; 00000050H
  003d3	68 96 00 00 00	 push	 150			; 00000096H
  003d8	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  003db	52		 push	 edx
  003dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 186  : 
; 187  : 	TextOut(hDC, 300, 80, StatusMsg[2], strlen(StatusMsg[2]));

  003e2	a1 08 00 00 00	 mov	 eax, DWORD PTR _StatusMsg+8
  003e7	50		 push	 eax
  003e8	e8 00 00 00 00	 call	 _strlen
  003ed	83 c4 04	 add	 esp, 4
  003f0	50		 push	 eax
  003f1	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _StatusMsg+8
  003f7	51		 push	 ecx
  003f8	6a 50		 push	 80			; 00000050H
  003fa	68 2c 01 00 00	 push	 300			; 0000012cH
  003ff	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  00402	52		 push	 edx
  00403	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 188  : 
; 189  : 	TextOut(hDC, 450, 80, StatusMsg[3], strlen(StatusMsg[3]));

  00409	a1 0c 00 00 00	 mov	 eax, DWORD PTR _StatusMsg+12
  0040e	50		 push	 eax
  0040f	e8 00 00 00 00	 call	 _strlen
  00414	83 c4 04	 add	 esp, 4
  00417	50		 push	 eax
  00418	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _StatusMsg+12
  0041e	51		 push	 ecx
  0041f	6a 50		 push	 80			; 00000050H
  00421	68 c2 01 00 00	 push	 450			; 000001c2H
  00426	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  00429	52		 push	 edx
  0042a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 190  : 
; 191  : 	TextOut(hDC, 600, 80, StatusMsg[4], strlen(StatusMsg[4]));

  00430	a1 10 00 00 00	 mov	 eax, DWORD PTR _StatusMsg+16
  00435	50		 push	 eax
  00436	e8 00 00 00 00	 call	 _strlen
  0043b	83 c4 04	 add	 esp, 4
  0043e	50		 push	 eax
  0043f	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR _StatusMsg+16
  00445	51		 push	 ecx
  00446	6a 50		 push	 80			; 00000050H
  00448	68 58 02 00 00	 push	 600			; 00000258H
  0044d	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  00450	52		 push	 edx
  00451	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 192  : 
; 193  : 	TextOut(hDC, 770, 80, StatusMsg[5], strlen(StatusMsg[5]));

  00457	a1 14 00 00 00	 mov	 eax, DWORD PTR _StatusMsg+20
  0045c	50		 push	 eax
  0045d	e8 00 00 00 00	 call	 _strlen
  00462	83 c4 04	 add	 esp, 4
  00465	50		 push	 eax
  00466	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR _StatusMsg+20
  0046c	51		 push	 ecx
  0046d	6a 50		 push	 80			; 00000050H
  0046f	68 02 03 00 00	 push	 770			; 00000302H
  00474	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  00477	52		 push	 edx
  00478	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 194  : 
; 195  : 	if ( this->m_bValidJSConnection == FALSE )

  0047e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00481	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00485	75 35		 jne	 SHORT $LN19@PaintAllIn

; 196  : 	{
; 197  : 		SetTextColor(hDC, RGB(255, 0, 0));

  00487	68 ff 00 00 00	 push	 255			; 000000ffH
  0048c	8b 45 f4	 mov	 eax, DWORD PTR _hDC$[ebp]
  0048f	50		 push	 eax
  00490	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8

; 198  : 		TextOut(hDC, 95, 80, StatusMsg[7], strlen(StatusMsg[7]));

  00496	a1 1c 00 00 00	 mov	 eax, DWORD PTR _StatusMsg+28
  0049b	50		 push	 eax
  0049c	e8 00 00 00 00	 call	 _strlen
  004a1	83 c4 04	 add	 esp, 4
  004a4	50		 push	 eax
  004a5	8b 0d 1c 00 00
	00		 mov	 ecx, DWORD PTR _StatusMsg+28
  004ab	51		 push	 ecx
  004ac	6a 50		 push	 80			; 00000050H
  004ae	6a 5f		 push	 95			; 0000005fH
  004b0	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  004b3	52		 push	 edx
  004b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 199  : 	}
; 200  : 	else

  004ba	eb 33		 jmp	 SHORT $LN18@PaintAllIn
$LN19@PaintAllIn:

; 201  : 	{
; 202  : 		SetTextColor(hDC, RGB(0, 255,0));

  004bc	68 00 ff 00 00	 push	 65280			; 0000ff00H
  004c1	8b 45 f4	 mov	 eax, DWORD PTR _hDC$[ebp]
  004c4	50		 push	 eax
  004c5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8

; 203  : 		TextOut(hDC, 95, 80, StatusMsg[6], strlen(StatusMsg[6]));

  004cb	a1 18 00 00 00	 mov	 eax, DWORD PTR _StatusMsg+24
  004d0	50		 push	 eax
  004d1	e8 00 00 00 00	 call	 _strlen
  004d6	83 c4 04	 add	 esp, 4
  004d9	50		 push	 eax
  004da	8b 0d 18 00 00
	00		 mov	 ecx, DWORD PTR _StatusMsg+24
  004e0	51		 push	 ecx
  004e1	6a 50		 push	 80			; 00000050H
  004e3	6a 5f		 push	 95			; 0000005fH
  004e5	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  004e8	52		 push	 edx
  004e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20
$LN18@PaintAllIn:

; 204  : 	}
; 205  : 	// ----
; 206  : 	if ( this->m_bValidFSConnection == FALSE || m_bValidDSConnection == FALSE)

  004ef	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004f2	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  004f6	74 09		 je	 SHORT $LN16@PaintAllIn
  004f8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004fb	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  004ff	75 38		 jne	 SHORT $LN17@PaintAllIn
$LN16@PaintAllIn:

; 207  : 	{
; 208  : 		SetTextColor(hDC, RGB(255, 0, 0));

  00501	68 ff 00 00 00	 push	 255			; 000000ffH
  00506	8b 45 f4	 mov	 eax, DWORD PTR _hDC$[ebp]
  00509	50		 push	 eax
  0050a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8

; 209  : 		TextOut(hDC, 150+86, 80, StatusMsg[7], strlen(StatusMsg[7]));

  00510	a1 1c 00 00 00	 mov	 eax, DWORD PTR _StatusMsg+28
  00515	50		 push	 eax
  00516	e8 00 00 00 00	 call	 _strlen
  0051b	83 c4 04	 add	 esp, 4
  0051e	50		 push	 eax
  0051f	8b 0d 1c 00 00
	00		 mov	 ecx, DWORD PTR _StatusMsg+28
  00525	51		 push	 ecx
  00526	6a 50		 push	 80			; 00000050H
  00528	68 ec 00 00 00	 push	 236			; 000000ecH
  0052d	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  00530	52		 push	 edx
  00531	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 210  : 	}
; 211  : 	else

  00537	eb 36		 jmp	 SHORT $LN15@PaintAllIn
$LN17@PaintAllIn:

; 212  : 	{
; 213  : 		SetTextColor(hDC, RGB(0, 255,0));

  00539	68 00 ff 00 00	 push	 65280			; 0000ff00H
  0053e	8b 45 f4	 mov	 eax, DWORD PTR _hDC$[ebp]
  00541	50		 push	 eax
  00542	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8

; 214  : 		TextOut(hDC, 150+86, 80, StatusMsg[6], strlen(StatusMsg[6]));

  00548	a1 18 00 00 00	 mov	 eax, DWORD PTR _StatusMsg+24
  0054d	50		 push	 eax
  0054e	e8 00 00 00 00	 call	 _strlen
  00553	83 c4 04	 add	 esp, 4
  00556	50		 push	 eax
  00557	8b 0d 18 00 00
	00		 mov	 ecx, DWORD PTR _StatusMsg+24
  0055d	51		 push	 ecx
  0055e	6a 50		 push	 80			; 00000050H
  00560	68 ec 00 00 00	 push	 236			; 000000ecH
  00565	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  00568	52		 push	 edx
  00569	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20
$LN15@PaintAllIn:

; 215  : 	}
; 216  : 
; 217  : 	// ----
; 218  : 
; 219  : 	if ( this->m_bValidEXDSConnection == FALSE )

  0056f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00572	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00576	75 38		 jne	 SHORT $LN14@PaintAllIn

; 220  : 	{
; 221  : 		SetTextColor(hDC, RGB(255, 0, 0));

  00578	68 ff 00 00 00	 push	 255			; 000000ffH
  0057d	8b 45 f4	 mov	 eax, DWORD PTR _hDC$[ebp]
  00580	50		 push	 eax
  00581	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8

; 222  : 		TextOut(hDC, 300+92, 80, StatusMsg[7], strlen(StatusMsg[7]));

  00587	a1 1c 00 00 00	 mov	 eax, DWORD PTR _StatusMsg+28
  0058c	50		 push	 eax
  0058d	e8 00 00 00 00	 call	 _strlen
  00592	83 c4 04	 add	 esp, 4
  00595	50		 push	 eax
  00596	8b 0d 1c 00 00
	00		 mov	 ecx, DWORD PTR _StatusMsg+28
  0059c	51		 push	 ecx
  0059d	6a 50		 push	 80			; 00000050H
  0059f	68 88 01 00 00	 push	 392			; 00000188H
  005a4	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  005a7	52		 push	 edx
  005a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 223  : 	}
; 224  : 	else

  005ae	eb 36		 jmp	 SHORT $LN13@PaintAllIn
$LN14@PaintAllIn:

; 225  : 	{
; 226  : 		SetTextColor(hDC, RGB(0, 255,0));

  005b0	68 00 ff 00 00	 push	 65280			; 0000ff00H
  005b5	8b 45 f4	 mov	 eax, DWORD PTR _hDC$[ebp]
  005b8	50		 push	 eax
  005b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8

; 227  : 		TextOut(hDC, 300+92, 80, StatusMsg[6], strlen(StatusMsg[6]));

  005bf	a1 18 00 00 00	 mov	 eax, DWORD PTR _StatusMsg+24
  005c4	50		 push	 eax
  005c5	e8 00 00 00 00	 call	 _strlen
  005ca	83 c4 04	 add	 esp, 4
  005cd	50		 push	 eax
  005ce	8b 0d 18 00 00
	00		 mov	 ecx, DWORD PTR _StatusMsg+24
  005d4	51		 push	 ecx
  005d5	6a 50		 push	 80			; 00000050H
  005d7	68 88 01 00 00	 push	 392			; 00000188H
  005dc	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  005df	52		 push	 edx
  005e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20
$LN13@PaintAllIn:

; 228  : 	}
; 229  : 
; 230  : 	// ----
; 231  : 
; 232  : 	if ( this->m_bValidEVDSConnection == FALSE )

  005e6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005e9	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  005ed	75 38		 jne	 SHORT $LN12@PaintAllIn

; 233  : 	{
; 234  : 		SetTextColor(hDC, RGB(255, 0, 0));

  005ef	68 ff 00 00 00	 push	 255			; 000000ffH
  005f4	8b 45 f4	 mov	 eax, DWORD PTR _hDC$[ebp]
  005f7	50		 push	 eax
  005f8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8

; 235  : 		TextOut(hDC, 450+92, 80, StatusMsg[7], strlen(StatusMsg[7]));

  005fe	a1 1c 00 00 00	 mov	 eax, DWORD PTR _StatusMsg+28
  00603	50		 push	 eax
  00604	e8 00 00 00 00	 call	 _strlen
  00609	83 c4 04	 add	 esp, 4
  0060c	50		 push	 eax
  0060d	8b 0d 1c 00 00
	00		 mov	 ecx, DWORD PTR _StatusMsg+28
  00613	51		 push	 ecx
  00614	6a 50		 push	 80			; 00000050H
  00616	68 1e 02 00 00	 push	 542			; 0000021eH
  0061b	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  0061e	52		 push	 edx
  0061f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 236  : 	}
; 237  : 	else

  00625	eb 36		 jmp	 SHORT $LN11@PaintAllIn
$LN12@PaintAllIn:

; 238  : 	{
; 239  : 		SetTextColor(hDC, RGB(0, 255,0));

  00627	68 00 ff 00 00	 push	 65280			; 0000ff00H
  0062c	8b 45 f4	 mov	 eax, DWORD PTR _hDC$[ebp]
  0062f	50		 push	 eax
  00630	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8

; 240  : 		TextOut(hDC, 450+92, 80, StatusMsg[6], strlen(StatusMsg[6]));

  00636	a1 18 00 00 00	 mov	 eax, DWORD PTR _StatusMsg+24
  0063b	50		 push	 eax
  0063c	e8 00 00 00 00	 call	 _strlen
  00641	83 c4 04	 add	 esp, 4
  00644	50		 push	 eax
  00645	8b 0d 18 00 00
	00		 mov	 ecx, DWORD PTR _StatusMsg+24
  0064b	51		 push	 ecx
  0064c	6a 50		 push	 80			; 00000050H
  0064e	68 1e 02 00 00	 push	 542			; 0000021eH
  00653	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  00656	52		 push	 edx
  00657	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20
$LN11@PaintAllIn:

; 241  : 	}
; 242  : 
; 243  : 	// ----
; 244  : 
; 245  : 	if ( this->m_bValidRKDSConnection == FALSE )

  0065d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00660	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00664	75 38		 jne	 SHORT $LN10@PaintAllIn

; 246  : 	{
; 247  : 		SetTextColor(hDC, RGB(255, 0, 0));

  00666	68 ff 00 00 00	 push	 255			; 000000ffH
  0066b	8b 45 f4	 mov	 eax, DWORD PTR _hDC$[ebp]
  0066e	50		 push	 eax
  0066f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8

; 248  : 		TextOut(hDC, 600+108, 80, StatusMsg[7], strlen(StatusMsg[7]));

  00675	a1 1c 00 00 00	 mov	 eax, DWORD PTR _StatusMsg+28
  0067a	50		 push	 eax
  0067b	e8 00 00 00 00	 call	 _strlen
  00680	83 c4 04	 add	 esp, 4
  00683	50		 push	 eax
  00684	8b 0d 1c 00 00
	00		 mov	 ecx, DWORD PTR _StatusMsg+28
  0068a	51		 push	 ecx
  0068b	6a 50		 push	 80			; 00000050H
  0068d	68 c4 02 00 00	 push	 708			; 000002c4H
  00692	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  00695	52		 push	 edx
  00696	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 249  : 	}
; 250  : 	else

  0069c	eb 36		 jmp	 SHORT $LN9@PaintAllIn
$LN10@PaintAllIn:

; 251  : 	{
; 252  : 		SetTextColor(hDC, RGB(0, 255,0));

  0069e	68 00 ff 00 00	 push	 65280			; 0000ff00H
  006a3	8b 45 f4	 mov	 eax, DWORD PTR _hDC$[ebp]
  006a6	50		 push	 eax
  006a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8

; 253  : 		TextOut(hDC, 600+108, 80, StatusMsg[6], strlen(StatusMsg[6]));

  006ad	a1 18 00 00 00	 mov	 eax, DWORD PTR _StatusMsg+24
  006b2	50		 push	 eax
  006b3	e8 00 00 00 00	 call	 _strlen
  006b8	83 c4 04	 add	 esp, 4
  006bb	50		 push	 eax
  006bc	8b 0d 18 00 00
	00		 mov	 ecx, DWORD PTR _StatusMsg+24
  006c2	51		 push	 ecx
  006c3	6a 50		 push	 80			; 00000050H
  006c5	68 c4 02 00 00	 push	 708			; 000002c4H
  006ca	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  006cd	52		 push	 edx
  006ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20
$LN9@PaintAllIn:

; 254  : 	}
; 255  : 
; 256  : 	// ----
; 257  : 
; 258  : 	if ( m_bValidFSConnection == FALSE )	//New Game Shop

  006d4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  006d7	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  006db	75 38		 jne	 SHORT $LN8@PaintAllIn

; 259  : 	{
; 260  : 		SetTextColor(hDC, RGB(255, 0, 0));

  006dd	68 ff 00 00 00	 push	 255			; 000000ffH
  006e2	8b 45 f4	 mov	 eax, DWORD PTR _hDC$[ebp]
  006e5	50		 push	 eax
  006e6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8

; 261  : 		TextOut(hDC, 770+123, 80, StatusMsg[7], strlen(StatusMsg[7]));

  006ec	a1 1c 00 00 00	 mov	 eax, DWORD PTR _StatusMsg+28
  006f1	50		 push	 eax
  006f2	e8 00 00 00 00	 call	 _strlen
  006f7	83 c4 04	 add	 esp, 4
  006fa	50		 push	 eax
  006fb	8b 0d 1c 00 00
	00		 mov	 ecx, DWORD PTR _StatusMsg+28
  00701	51		 push	 ecx
  00702	6a 50		 push	 80			; 00000050H
  00704	68 7d 03 00 00	 push	 893			; 0000037dH
  00709	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  0070c	52		 push	 edx
  0070d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 262  : 	}
; 263  : 	else

  00713	eb 36		 jmp	 SHORT $LN7@PaintAllIn
$LN8@PaintAllIn:

; 264  : 	{
; 265  : 		SetTextColor(hDC, RGB(0, 255,0));

  00715	68 00 ff 00 00	 push	 65280			; 0000ff00H
  0071a	8b 45 f4	 mov	 eax, DWORD PTR _hDC$[ebp]
  0071d	50		 push	 eax
  0071e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8

; 266  : 		TextOut(hDC, 770+123, 80, StatusMsg[6], strlen(StatusMsg[6]));

  00724	a1 18 00 00 00	 mov	 eax, DWORD PTR _StatusMsg+24
  00729	50		 push	 eax
  0072a	e8 00 00 00 00	 call	 _strlen
  0072f	83 c4 04	 add	 esp, 4
  00732	50		 push	 eax
  00733	8b 0d 18 00 00
	00		 mov	 ecx, DWORD PTR _StatusMsg+24
  00739	51		 push	 ecx
  0073a	6a 50		 push	 80			; 00000050H
  0073c	68 7d 03 00 00	 push	 893			; 0000037dH
  00741	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  00744	52		 push	 edx
  00745	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20
$LN7@PaintAllIn:

; 267  : 	}
; 268  : 
; 269  : 	SetTextColor(hDC, RGB(255, 255, 255));

  0074b	68 ff ff ff 00	 push	 16777215		; 00ffffffH
  00750	8b 45 f4	 mov	 eax, DWORD PTR _hDC$[ebp]
  00753	50		 push	 eax
  00754	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8

; 270  : 	TextOutA(hDC, GAMESERVER_WIDTH - 160, 5, DeveloperMessage[0], strlen(DeveloperMessage[0]));

  0075a	a1 00 00 00 00	 mov	 eax, DWORD PTR _DeveloperMessage
  0075f	50		 push	 eax
  00760	e8 00 00 00 00	 call	 _strlen
  00765	83 c4 04	 add	 esp, 4
  00768	50		 push	 eax
  00769	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _DeveloperMessage
  0076f	51		 push	 ecx
  00770	6a 05		 push	 5
  00772	68 16 03 00 00	 push	 790			; 00000316H
  00777	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  0077a	52		 push	 edx
  0077b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 271  : 	TextOutA(hDC, GAMESERVER_WIDTH - 160, 20, DeveloperMessage[1], strlen(DeveloperMessage[1]));

  00781	a1 04 00 00 00	 mov	 eax, DWORD PTR _DeveloperMessage+4
  00786	50		 push	 eax
  00787	e8 00 00 00 00	 call	 _strlen
  0078c	83 c4 04	 add	 esp, 4
  0078f	50		 push	 eax
  00790	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _DeveloperMessage+4
  00796	51		 push	 ecx
  00797	6a 14		 push	 20			; 00000014H
  00799	68 16 03 00 00	 push	 790			; 00000316H
  0079e	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  007a1	52		 push	 edx
  007a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 272  : 	TextOutA(hDC, GAMESERVER_WIDTH - 160, 35, DeveloperMessage[2], strlen(DeveloperMessage[2]));	//Added Season

  007a8	a1 08 00 00 00	 mov	 eax, DWORD PTR _DeveloperMessage+8
  007ad	50		 push	 eax
  007ae	e8 00 00 00 00	 call	 _strlen
  007b3	83 c4 04	 add	 esp, 4
  007b6	50		 push	 eax
  007b7	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _DeveloperMessage+8
  007bd	51		 push	 ecx
  007be	6a 23		 push	 35			; 00000023H
  007c0	68 16 03 00 00	 push	 790			; 00000316H
  007c5	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  007c8	52		 push	 edx
  007c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 273  : 
; 274  : 	if(g_ExLicense.m_Enable)

  007cf	0f b6 05 01 00
	00 00		 movzx	 eax, BYTE PTR ?g_ExLicense@@3VCExLicense@@A+1
  007d6	85 c0		 test	 eax, eax
  007d8	74 52		 je	 SHORT $LN6@PaintAllIn

; 275  : 	{
; 276  : 		char szLicense[50] = { 0 };

  007da	c6 45 a8 00	 mov	 BYTE PTR _szLicense$227459[ebp], 0
  007de	6a 31		 push	 49			; 00000031H
  007e0	6a 00		 push	 0
  007e2	8d 45 a9	 lea	 eax, DWORD PTR _szLicense$227459[ebp+1]
  007e5	50		 push	 eax
  007e6	e8 00 00 00 00	 call	 _memset
  007eb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 277  : 		sprintf(szLicense, "License: %s", g_ExLicense.GetLicenseName());

  007ee	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  007f3	e8 00 00 00 00	 call	 ?GetLicenseName@CExLicense@@QAEPADXZ ; CExLicense::GetLicenseName
  007f8	50		 push	 eax
  007f9	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IHBBFHDF@License?3?5?$CFs?$AA@
  007fe	8d 45 a8	 lea	 eax, DWORD PTR _szLicense$227459[ebp]
  00801	50		 push	 eax
  00802	e8 00 00 00 00	 call	 _sprintf
  00807	83 c4 0c	 add	 esp, 12			; 0000000cH

; 278  : 		TextOutA(hDC, GAMESERVER_WIDTH - 160, 50, szLicense, strlen(szLicense));

  0080a	8d 45 a8	 lea	 eax, DWORD PTR _szLicense$227459[ebp]
  0080d	50		 push	 eax
  0080e	e8 00 00 00 00	 call	 _strlen
  00813	83 c4 04	 add	 esp, 4
  00816	50		 push	 eax
  00817	8d 4d a8	 lea	 ecx, DWORD PTR _szLicense$227459[ebp]
  0081a	51		 push	 ecx
  0081b	6a 32		 push	 50			; 00000032H
  0081d	68 16 03 00 00	 push	 790			; 00000316H
  00822	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  00825	52		 push	 edx
  00826	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20
$LN6@PaintAllIn:

; 279  : 	}
; 280  : 
; 281  : 	TextOutA(hDC, GAMESERVER_WIDTH - 940, 5, DeveloperMessage[3], strlen(DeveloperMessage[3]));

  0082c	a1 0c 00 00 00	 mov	 eax, DWORD PTR _DeveloperMessage+12
  00831	50		 push	 eax
  00832	e8 00 00 00 00	 call	 _strlen
  00837	83 c4 04	 add	 esp, 4
  0083a	50		 push	 eax
  0083b	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _DeveloperMessage+12
  00841	51		 push	 ecx
  00842	6a 05		 push	 5
  00844	6a 0a		 push	 10			; 0000000aH
  00846	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  00849	52		 push	 edx
  0084a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 282  : 
; 283  : 
; 284  : 	if (g_ExLicense.m_Enable && g_ExLicense.NewVersion)

  00850	0f b6 05 01 00
	00 00		 movzx	 eax, BYTE PTR ?g_ExLicense@@3VCExLicense@@A+1
  00857	85 c0		 test	 eax, eax
  00859	0f 84 11 01 00
	00		 je	 $LN3@PaintAllIn
  0085f	0f b6 05 0c 00
	00 00		 movzx	 eax, BYTE PTR ?g_ExLicense@@3VCExLicense@@A+12
  00866	85 c0		 test	 eax, eax
  00868	0f 84 02 01 00
	00		 je	 $LN3@PaintAllIn

; 285  : 	{
; 286  : 		g_ExLicense.DrawVersion = !g_ExLicense.DrawVersion;

  0086e	0f b6 05 0d 00
	00 00		 movzx	 eax, BYTE PTR ?g_ExLicense@@3VCExLicense@@A+13
  00875	f7 d8		 neg	 eax
  00877	1b c0		 sbb	 eax, eax
  00879	83 c0 01	 add	 eax, 1
  0087c	a2 0d 00 00 00	 mov	 BYTE PTR ?g_ExLicense@@3VCExLicense@@A+13, al

; 287  : 
; 288  : 		if(g_ExLicense.DrawVersion)

  00881	0f b6 05 0d 00
	00 00		 movzx	 eax, BYTE PTR ?g_ExLicense@@3VCExLicense@@A+13
  00888	85 c0		 test	 eax, eax
  0088a	0f 84 e0 00 00
	00		 je	 $LN3@PaintAllIn

; 289  : 		{
; 290  : 			SetTextColor(hDC, RGB(255, 0, 0));

  00890	68 ff 00 00 00	 push	 255			; 000000ffH
  00895	8b 45 f4	 mov	 eax, DWORD PTR _hDC$[ebp]
  00898	50		 push	 eax
  00899	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8

; 291  : 			TextOutA(hDC, GAMESERVER_WIDTH - 940, 17+10, EXNEW_VERISON, strlen(EXNEW_VERISON));

  0089f	68 00 00 00 00	 push	 OFFSET ??_C@_0M@KDOOKFAH@New?5Update?3?$AA@
  008a4	e8 00 00 00 00	 call	 _strlen
  008a9	83 c4 04	 add	 esp, 4
  008ac	50		 push	 eax
  008ad	68 00 00 00 00	 push	 OFFSET ??_C@_0M@KDOOKFAH@New?5Update?3?$AA@
  008b2	6a 1b		 push	 27			; 0000001bH
  008b4	6a 0a		 push	 10			; 0000000aH
  008b6	8b 45 f4	 mov	 eax, DWORD PTR _hDC$[ebp]
  008b9	50		 push	 eax
  008ba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 292  : 
; 293  : 			char InfoServer[50] = { 0 };

  008c0	c6 85 74 ff ff
	ff 00		 mov	 BYTE PTR _InfoServer$227470[ebp], 0
  008c7	6a 31		 push	 49			; 00000031H
  008c9	6a 00		 push	 0
  008cb	8d 85 75 ff ff
	ff		 lea	 eax, DWORD PTR _InfoServer$227470[ebp+1]
  008d1	50		 push	 eax
  008d2	e8 00 00 00 00	 call	 _memset
  008d7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 294  : 			sprintf(InfoServer,"Version: %s",g_ExLicense.VersionNum);

  008da	68 0e 00 00 00	 push	 OFFSET ?g_ExLicense@@3VCExLicense@@A+14
  008df	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LMOOBOCC@Version?3?5?$CFs?$AA@
  008e4	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _InfoServer$227470[ebp]
  008ea	50		 push	 eax
  008eb	e8 00 00 00 00	 call	 _sprintf
  008f0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 295  : 			TextOutA(hDC, GAMESERVER_WIDTH - 940, 31+10, InfoServer, strlen(InfoServer));

  008f3	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _InfoServer$227470[ebp]
  008f9	50		 push	 eax
  008fa	e8 00 00 00 00	 call	 _strlen
  008ff	83 c4 04	 add	 esp, 4
  00902	50		 push	 eax
  00903	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR _InfoServer$227470[ebp]
  00909	51		 push	 ecx
  0090a	6a 29		 push	 41			; 00000029H
  0090c	6a 0a		 push	 10			; 0000000aH
  0090e	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  00911	52		 push	 edx
  00912	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 296  : 
; 297  : 			char InfoServer2[50] = { 0 };

  00918	c6 85 40 ff ff
	ff 00		 mov	 BYTE PTR _InfoServer2$227472[ebp], 0
  0091f	6a 31		 push	 49			; 00000031H
  00921	6a 00		 push	 0
  00923	8d 85 41 ff ff
	ff		 lea	 eax, DWORD PTR _InfoServer2$227472[ebp+1]
  00929	50		 push	 eax
  0092a	e8 00 00 00 00	 call	 _memset
  0092f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 298  : 			sprintf(InfoServer2,"Date: %s",g_ExLicense.VersionDate);

  00932	68 40 00 00 00	 push	 OFFSET ?g_ExLicense@@3VCExLicense@@A+64
  00937	68 00 00 00 00	 push	 OFFSET ??_C@_08LHOANCIJ@Date?3?5?$CFs?$AA@
  0093c	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR _InfoServer2$227472[ebp]
  00942	50		 push	 eax
  00943	e8 00 00 00 00	 call	 _sprintf
  00948	83 c4 0c	 add	 esp, 12			; 0000000cH

; 299  : 			TextOutA(hDC, GAMESERVER_WIDTH - 940, 45+10, InfoServer2, strlen(InfoServer2));

  0094b	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR _InfoServer2$227472[ebp]
  00951	50		 push	 eax
  00952	e8 00 00 00 00	 call	 _strlen
  00957	83 c4 04	 add	 esp, 4
  0095a	50		 push	 eax
  0095b	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _InfoServer2$227472[ebp]
  00961	51		 push	 ecx
  00962	6a 37		 push	 55			; 00000037H
  00964	6a 0a		 push	 10			; 0000000aH
  00966	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  00969	52		 push	 edx
  0096a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20
$LN3@PaintAllIn:

; 300  : 		}
; 301  : 	}
; 302  : 
; 303  : 	if (g_ExLicense.m_Enable)
; 304  : 	{
; 305  : 
; 306  : 	}
; 307  : #else
; 308  : 
; 309  : 	if ( this->m_bValidJSConnection != FALSE && this->m_bValidDSConnection != FALSE && this->m_bValidFSConnection != FALSE )
; 310  : 		FillRect(hDC, &rect, this->m_hNormalBrush);
; 311  : 	else
; 312  : 		FillRect(hDC, &rect, this->m_hAbnormalBrush);
; 313  : 
; 314  : 	if ( this->m_bValidJSConnection == FALSE )
; 315  : 	{
; 316  : 		SetTextColor(hDC, RGB(255, 0, 0));
; 317  : 		TextOut(hDC, iTopLeftX, iTopLeftY+iLineCount*15, ErrorMessge[0], strlen(ErrorMessge[0]));
; 318  : 		iLineCount++;
; 319  : 	}
; 320  : 
; 321  : 	if ( this->m_bValidFSConnection == FALSE )
; 322  : 	{
; 323  : 		SetTextColor(hDC, RGB(255, 0, 0));
; 324  : 		TextOut(hDC, iTopLeftX,  iTopLeftY+iLineCount*15, ErrorMessge[1], strlen(ErrorMessge[1]));
; 325  : 		iLineCount++;
; 326  : 	}
; 327  : 
; 328  : 	if ( this->m_bValidDSConnection == FALSE )
; 329  : 	{
; 330  : 		SetTextColor(hDC, RGB(255, 0, 0));
; 331  : 		TextOut(hDC, iTopLeftX, iTopLeftY+iLineCount*15, ErrorMessge[2], strlen(ErrorMessge[2]));
; 332  : 		iLineCount++;
; 333  : 	}
; 334  : 
; 335  : 	if ( this->m_bValidEXDSConnection == FALSE )
; 336  : 	{
; 337  : 		SetTextColor(hDC, RGB(255, 0, 0));
; 338  : 		TextOut(hDC, iTopLeftX, iTopLeftY+iLineCount*15, ErrorMessge[3], strlen(ErrorMessge[3]));
; 339  : 		iLineCount++;
; 340  : 	}
; 341  : 
; 342  : 	if ( this->m_bValidEVDSConnection == FALSE )
; 343  : 	{
; 344  : 		SetTextColor(hDC, RGB(255, 0, 0));
; 345  : 		TextOut(hDC, iTopLeftX,  iTopLeftY+iLineCount*15, ErrorMessge[4], strlen(ErrorMessge[4]));
; 346  : 		iLineCount++;
; 347  : 	}
; 348  : 
; 349  : 	if ( this->m_bValidRKDSConnection == FALSE )
; 350  : 	{
; 351  : 		SetTextColor(hDC, RGB(255, 0, 0));
; 352  : 		TextOut(hDC, iTopLeftX, iTopLeftY+iLineCount*15, ErrorMessge[5], strlen(ErrorMessge[5]));
; 353  : 		iLineCount++;
; 354  : 	}
; 355  : 
; 356  : #endif
; 357  : 
; 358  : 	if ( this->m_bValidJSConnection == FALSE || this->m_bValidDSConnection == FALSE || this->m_bValidFSConnection == FALSE || this->m_bValidEXDSConnection == FALSE || this->m_bValidEVDSConnection == FALSE || this->m_bValidRKDSConnection == FALSE )

  00970	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00973	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00977	74 2d		 je	 SHORT $LN1@PaintAllIn
  00979	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0097c	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00980	74 24		 je	 SHORT $LN1@PaintAllIn
  00982	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00985	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00989	74 1b		 je	 SHORT $LN1@PaintAllIn
  0098b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0098e	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00992	74 12		 je	 SHORT $LN1@PaintAllIn
  00994	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00997	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  0099b	74 09		 je	 SHORT $LN1@PaintAllIn
  0099d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  009a0	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  009a4	75 35		 jne	 SHORT $LN2@PaintAllIn
$LN1@PaintAllIn:

; 359  : 	{
; 360  : 		SERVER_CONN_STATE_LOG.Output("Server Interconnection Check - [FS/%d] [DS/%d] [EX/%d] [ES/%d] [RS/%d]", this->m_bValidFSConnection, this->m_bValidDSConnection, this->m_bValidEXDSConnection, this->m_bValidEVDSConnection,	this->m_bValidRKDSConnection);

  009a6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  009a9	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  009ac	51		 push	 ecx
  009ad	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  009b0	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  009b3	50		 push	 eax
  009b4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  009b7	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  009ba	52		 push	 edx
  009bb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  009be	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  009c1	51		 push	 ecx
  009c2	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  009c5	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  009c8	50		 push	 eax
  009c9	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@JOCPMNLJ@Server?5Interconnection?5Check?5?9?5?$FL@
  009ce	68 00 00 00 00	 push	 OFFSET ?SERVER_CONN_STATE_LOG@@3VCLogToFile@@A ; SERVER_CONN_STATE_LOG
  009d3	e8 00 00 00 00	 call	 ?Output@CLogToFile@@QAAXPADZZ ; CLogToFile::Output
  009d8	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN2@PaintAllIn:

; 361  : 	}
; 362  : 
; 363  : 	HFONT pOldFont = (HFONT)SelectObject(hDC, this->m_hFont);

  009db	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  009de	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  009e1	51		 push	 ecx
  009e2	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  009e5	52		 push	 edx
  009e6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SelectObject@8
  009ec	89 85 3c ff ff
	ff		 mov	 DWORD PTR _pOldFont$[ebp], eax

; 364  : 
; 365  : #if(NEW_WINDOW==1)	//GAMESERVER_WIDTH / 2 - 100
; 366  : 	//SetTextColor(hDC, RGB(123, 123, 250));
; 367  : 	//SetTextColor(hDC, RGB(130, 170, 190));
; 368  : 	SetTextColor(hDC, RGB(33, 200, 219));

  009f2	68 21 c8 db 00	 push	 14403617		; 00dbc821H
  009f7	8b 45 f4	 mov	 eax, DWORD PTR _hDC$[ebp]
  009fa	50		 push	 eax
  009fb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8

; 369  : 	TextOutA(hDC, GAMESERVER_WIDTH / 2 - 320, 15, ServerTypeText[0], strlen(ServerTypeText[0]));

  00a01	a1 00 00 00 00	 mov	 eax, DWORD PTR _ServerTypeText
  00a06	50		 push	 eax
  00a07	e8 00 00 00 00	 call	 _strlen
  00a0c	83 c4 04	 add	 esp, 4
  00a0f	50		 push	 eax
  00a10	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ServerTypeText
  00a16	51		 push	 ecx
  00a17	6a 0f		 push	 15			; 0000000fH
  00a19	68 9b 00 00 00	 push	 155			; 0000009bH
  00a1e	8b 55 f4	 mov	 edx, DWORD PTR _hDC$[ebp]
  00a21	52		 push	 edx
  00a22	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 370  : #else
; 371  : 	SetTextColor(hDC, RGB(250, 250, 250));
; 372  : 	TextOut(hDC, 250, 20, ServerTypeText[0], strlen(ServerTypeText[0]));
; 373  : #endif
; 374  : 	
; 375  : 	SelectObject(hDC, pOldFont);

  00a28	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _pOldFont$[ebp]
  00a2e	50		 push	 eax
  00a2f	8b 4d f4	 mov	 ecx, DWORD PTR _hDC$[ebp]
  00a32	51		 push	 ecx
  00a33	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SelectObject@8

; 376  : 	SetBkMode(hDC, iOldBkMode);

  00a39	8b 45 dc	 mov	 eax, DWORD PTR _iOldBkMode$[ebp]
  00a3c	50		 push	 eax
  00a3d	8b 4d f4	 mov	 ecx, DWORD PTR _hDC$[ebp]
  00a40	51		 push	 ecx
  00a41	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetBkMode@8

; 377  : 	ReleaseDC(hWnd, hDC);

  00a47	8b 45 f4	 mov	 eax, DWORD PTR _hDC$[ebp]
  00a4a	50		 push	 eax
  00a4b	8b 4d 08	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  00a4e	51		 push	 ecx
  00a4f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseDC@8

; 378  : }

  00a55	5f		 pop	 edi
  00a56	5e		 pop	 esi
  00a57	5b		 pop	 ebx
  00a58	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00a5b	33 cd		 xor	 ecx, ebp
  00a5d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00a62	8b e5		 mov	 esp, ebp
  00a64	5d		 pop	 ebp
  00a65	c2 0c 00	 ret	 12			; 0000000cH
?PaintAllInfo@TServerInfoDisplayer@@QAEXPAUHWND__@@HH@Z ENDP ; TServerInfoDisplayer::PaintAllInfo
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ??__Eg_ServerInfoDisplayer@@YAXXZ
text$yc	SEGMENT
??__Eg_ServerInfoDisplayer@@YAXXZ PROC			; `dynamic initializer for 'g_ServerInfoDisplayer'', COMDAT

; 13   : TServerInfoDisplayer g_ServerInfoDisplayer;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ServerInfoDisplayer@@3VTServerInfoDisplayer@@A ; g_ServerInfoDisplayer
  0000e	e8 00 00 00 00	 call	 ??0TServerInfoDisplayer@@QAE@XZ ; TServerInfoDisplayer::TServerInfoDisplayer
  00013	68 00 00 00 00	 push	 OFFSET ??__Fg_ServerInfoDisplayer@@YAXXZ ; `dynamic atexit destructor for 'g_ServerInfoDisplayer''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__Eg_ServerInfoDisplayer@@YAXXZ ENDP			; `dynamic initializer for 'g_ServerInfoDisplayer''
text$yc	ENDS
PUBLIC	??_C@_0BG@CIFCKEJJ@SERVER_CONN_STATE_LOG?$AA@	; `string'
PUBLIC	??_C@_0BI@LLABDCAE@?4?2SERVER_CONN_STATE_LOG?$AA@ ; `string'
EXTRN	??0CLogToFile@@QAE@QAD0H@Z:PROC			; CLogToFile::CLogToFile
;	COMDAT ??_C@_0BG@CIFCKEJJ@SERVER_CONN_STATE_LOG?$AA@
CONST	SEGMENT
??_C@_0BG@CIFCKEJJ@SERVER_CONN_STATE_LOG?$AA@ DB 'SERVER_CONN_STATE_LOG', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LLABDCAE@?4?2SERVER_CONN_STATE_LOG?$AA@
CONST	SEGMENT
??_C@_0BI@LLABDCAE@?4?2SERVER_CONN_STATE_LOG?$AA@ DB '.\SERVER_CONN_STATE'
	DB	'_LOG', 00H					; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??__ESERVER_CONN_STATE_LOG@@YAXXZ
text$yc	SEGMENT
??__ESERVER_CONN_STATE_LOG@@YAXXZ PROC			; `dynamic initializer for 'SERVER_CONN_STATE_LOG'', COMDAT

; 14   : CLogToFile SERVER_CONN_STATE_LOG("SERVER_CONN_STATE_LOG", ".\\SERVER_CONN_STATE_LOG", 1);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	6a 01		 push	 1
  0000b	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@LLABDCAE@?4?2SERVER_CONN_STATE_LOG?$AA@
  00010	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@CIFCKEJJ@SERVER_CONN_STATE_LOG?$AA@
  00015	b9 00 00 00 00	 mov	 ecx, OFFSET ?SERVER_CONN_STATE_LOG@@3VCLogToFile@@A ; SERVER_CONN_STATE_LOG
  0001a	e8 00 00 00 00	 call	 ??0CLogToFile@@QAE@QAD0H@Z ; CLogToFile::CLogToFile
  0001f	68 00 00 00 00	 push	 OFFSET ??__FSERVER_CONN_STATE_LOG@@YAXXZ ; `dynamic atexit destructor for 'SERVER_CONN_STATE_LOG''
  00024	e8 00 00 00 00	 call	 _atexit
  00029	83 c4 04	 add	 esp, 4
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??__ESERVER_CONN_STATE_LOG@@YAXXZ ENDP			; `dynamic initializer for 'SERVER_CONN_STATE_LOG''
; Function compile flags: /Odtp /ZI
text$yc	ENDS
;	COMDAT ??__Fg_ServerInfoDisplayer@@YAXXZ
text$yd	SEGMENT
??__Fg_ServerInfoDisplayer@@YAXXZ PROC			; `dynamic atexit destructor for 'g_ServerInfoDisplayer'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ServerInfoDisplayer@@3VTServerInfoDisplayer@@A ; g_ServerInfoDisplayer
  0000e	e8 00 00 00 00	 call	 ??1TServerInfoDisplayer@@UAE@XZ ; TServerInfoDisplayer::~TServerInfoDisplayer
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__Fg_ServerInfoDisplayer@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_ServerInfoDisplayer''
text$yd	ENDS
EXTRN	??1CLogToFile@@QAE@XZ:PROC			; CLogToFile::~CLogToFile
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FSERVER_CONN_STATE_LOG@@YAXXZ
text$yd	SEGMENT
??__FSERVER_CONN_STATE_LOG@@YAXXZ PROC			; `dynamic atexit destructor for 'SERVER_CONN_STATE_LOG'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?SERVER_CONN_STATE_LOG@@3VCLogToFile@@A ; SERVER_CONN_STATE_LOG
  0000e	e8 00 00 00 00	 call	 ??1CLogToFile@@QAE@XZ	; CLogToFile::~CLogToFile
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__FSERVER_CONN_STATE_LOG@@YAXXZ ENDP			; `dynamic atexit destructor for 'SERVER_CONN_STATE_LOG''
text$yd	ENDS
PUBLIC	?SERVER_CONN_STATE_LOG@@3VCLogToFile@@A		; SERVER_CONN_STATE_LOG
PUBLIC	?g_ServerInfoDisplayer@@3VTServerInfoDisplayer@@A ; g_ServerInfoDisplayer
_BSS	SEGMENT
?SERVER_CONN_STATE_LOG@@3VCLogToFile@@A DB 010228H DUP (?) ; SERVER_CONN_STATE_LOG
?g_ServerInfoDisplayer@@3VTServerInfoDisplayer@@A DB 028H DUP (?) ; g_ServerInfoDisplayer
_BSS	ENDS
CRT$XCU	SEGMENT
_g_ServerInfoDisplayer$initializer$ DD FLAT:??__Eg_ServerInfoDisplayer@@YAXXZ
_SERVER_CONN_STATE_LOG$initializer$ DD FLAT:??__ESERVER_CONN_STATE_LOG@@YAXXZ
CRT$XCU	ENDS
END
