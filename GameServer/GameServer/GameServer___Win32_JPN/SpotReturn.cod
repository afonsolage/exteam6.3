; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\SpotReturn.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?Init@SpotReturn@@QAEXXZ			; SpotReturn::Init
PUBLIC	??0SpotReturn@@QAE@XZ				; SpotReturn::SpotReturn
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\spotreturn.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0SpotReturn@@QAE@XZ PROC				; SpotReturn::SpotReturn
; _this$ = ecx

; 19   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 20   : 	this->Init();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?Init@SpotReturn@@QAEXXZ ; SpotReturn::Init

; 21   : }

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0SpotReturn@@QAE@XZ ENDP				; SpotReturn::SpotReturn
_TEXT	ENDS
PUBLIC	??1SpotReturn@@QAE@XZ				; SpotReturn::~SpotReturn
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1SpotReturn@@QAE@XZ PROC				; SpotReturn::~SpotReturn
; _this$ = ecx

; 25   : {

  00020	55		 push	 ebp
  00021	8b ec		 mov	 ebp, esp
  00023	83 ec 44	 sub	 esp, 68			; 00000044H
  00026	53		 push	 ebx
  00027	56		 push	 esi
  00028	57		 push	 edi
  00029	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 26   : }

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??1SpotReturn@@QAE@XZ ENDP				; SpotReturn::~SpotReturn
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?Init@SpotReturn@@QAEXXZ PROC				; SpotReturn::Init
; _this$ = ecx

; 30   : {

  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
  00043	83 ec 44	 sub	 esp, 68			; 00000044H
  00046	53		 push	 ebx
  00047	56		 push	 esi
  00048	57		 push	 edi
  00049	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 31   : 	this->Enable = false;

  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	c6 00 00	 mov	 BYTE PTR [eax], 0

; 32   : 	this->CheckTimeStatus = STATUSMAXTIME;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 14 00
	00 00		 mov	 DWORD PTR [eax+4], 20	; 00000014H

; 33   : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
?Init@SpotReturn@@QAEXXZ ENDP				; SpotReturn::Init
_TEXT	ENDS
PUBLIC	?Read@SpotReturn@@QAEXPAD@Z			; SpotReturn::Read
PUBLIC	??_C@_0BG@OHKKOCDN@ExData?2SpotReturn?4ini?$AA@	; `string'
PUBLIC	?Load@SpotReturn@@QAEXXZ			; SpotReturn::Load
EXTRN	?GetNewPath@CDirPath@@QAEPADPAD@Z:PROC		; CDirPath::GetNewPath
EXTRN	?gDirPath@@3VCDirPath@@A:BYTE			; gDirPath
EXTRN	?g_ExLicense@@3VCExLicense@@A:BYTE		; g_ExLicense
;	COMDAT ??_C@_0BG@OHKKOCDN@ExData?2SpotReturn?4ini?$AA@
CONST	SEGMENT
??_C@_0BG@OHKKOCDN@ExData?2SpotReturn?4ini?$AA@ DB 'ExData\SpotReturn.ini'
	DB	00H						; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Load@SpotReturn@@QAEXXZ PROC				; SpotReturn::Load
; _this$ = ecx

; 37   : {

  00070	55		 push	 ebp
  00071	8b ec		 mov	 ebp, esp
  00073	83 ec 44	 sub	 esp, 68			; 00000044H
  00076	53		 push	 ebx
  00077	56		 push	 esi
  00078	57		 push	 edi
  00079	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 38   : 	this->Init();

  0007c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ?Init@SpotReturn@@QAEXXZ ; SpotReturn::Init

; 39   : 
; 40   : 	if(!g_ExLicense.user.SpotReturn)

  00084	0f b6 05 d7 00
	00 00		 movzx	 eax, BYTE PTR ?g_ExLicense@@3VCExLicense@@A+215
  0008b	85 c0		 test	 eax, eax
  0008d	75 02		 jne	 SHORT $LN1@Load

; 41   : 	{
; 42   : 		return;

  0008f	eb 18		 jmp	 SHORT $LN2@Load
$LN1@Load:

; 43   : 	}
; 44   : 
; 45   : 	this->Read(gDirPath.GetNewPath("ExData\\SpotReturn.ini"));

  00091	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@OHKKOCDN@ExData?2SpotReturn?4ini?$AA@
  00096	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  0009b	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  000a0	50		 push	 eax
  000a1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a4	e8 00 00 00 00	 call	 ?Read@SpotReturn@@QAEXPAD@Z ; SpotReturn::Read
$LN2@Load:

; 46   : }

  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c3		 ret	 0
?Load@SpotReturn@@QAEXXZ ENDP				; SpotReturn::Load
_TEXT	ENDS
PUBLIC	??_C@_0BA@DPNJPMGB@CheckTimeStatus?$AA@		; `string'
PUBLIC	??_C@_06MLPMCPDE@ExTeam?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
;	COMDAT ??_C@_0BA@DPNJPMGB@CheckTimeStatus?$AA@
CONST	SEGMENT
??_C@_0BA@DPNJPMGB@CheckTimeStatus?$AA@ DB 'CheckTimeStatus', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06MLPMCPDE@ExTeam?$AA@
CONST	SEGMENT
??_C@_06MLPMCPDE@ExTeam?$AA@ DB 'ExTeam', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_File$ = 8						; size = 4
?Read@SpotReturn@@QAEXPAD@Z PROC			; SpotReturn::Read
; _this$ = ecx

; 50   : {

  000b0	55		 push	 ebp
  000b1	8b ec		 mov	 ebp, esp
  000b3	83 ec 44	 sub	 esp, 68			; 00000044H
  000b6	53		 push	 ebx
  000b7	56		 push	 esi
  000b8	57		 push	 edi
  000b9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 51   : 	this->Enable = GetPrivateProfileInt("ExTeam", "Enable", 1, File);

  000bc	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  000bf	50		 push	 eax
  000c0	6a 01		 push	 1
  000c2	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  000c7	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  000cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  000d2	85 c0		 test	 eax, eax
  000d4	0f 95 c1	 setne	 cl
  000d7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000da	88 0a		 mov	 BYTE PTR [edx], cl

; 52   : 	this->CheckTimeStatus = GetPrivateProfileInt("ExTeam", "CheckTimeStatus", STATUSMAXTIME, File);

  000dc	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  000df	50		 push	 eax
  000e0	6a 14		 push	 20			; 00000014H
  000e2	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@DPNJPMGB@CheckTimeStatus?$AA@
  000e7	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  000ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  000f2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f5	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 53   : }

  000f8	5f		 pop	 edi
  000f9	5e		 pop	 esi
  000fa	5b		 pop	 ebx
  000fb	8b e5		 mov	 esp, ebp
  000fd	5d		 pop	 ebp
  000fe	c2 04 00	 ret	 4
?Read@SpotReturn@@QAEXPAD@Z ENDP			; SpotReturn::Read
_TEXT	ENDS
PUBLIC	?GDStatus@SpotReturn@@QAEXH@Z			; SpotReturn::GDStatus
PUBLIC	?GDStatusUpdate@SpotReturn@@QAEXHE@Z		; SpotReturn::GDStatusUpdate
PUBLIC	?StatusTime@SpotReturn@@QAEXXZ			; SpotReturn::StatusTime
EXTRN	?Start@MUHelper@@QAEXPAUOBJECTSTRUCT@@@Z:PROC	; MUHelper::Start
EXTRN	?g_MUHelper@@3VMUHelper@@A:BYTE			; g_MUHelper
EXTRN	?ExUserInSafeZone@@YA_NH@Z:PROC			; ExUserInSafeZone
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv71 = -80						; size = 4
_lpUser$228474 = -12					; size = 4
_aUserIndex$228469 = -8					; size = 4
_this$ = -4						; size = 4
?StatusTime@SpotReturn@@QAEXXZ PROC			; SpotReturn::StatusTime
; _this$ = ecx

; 57   : {

  00110	55		 push	 ebp
  00111	8b ec		 mov	 ebp, esp
  00113	83 ec 50	 sub	 esp, 80			; 00000050H
  00116	53		 push	 ebx
  00117	56		 push	 esi
  00118	57		 push	 edi
  00119	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 58   : 	if(!this->Enable)

  0011c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011f	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00122	85 c9		 test	 ecx, ecx
  00124	75 05		 jne	 SHORT $LN13@StatusTime

; 59   : 	{
; 60   : 		return;

  00126	e9 5d 01 00 00	 jmp	 $LN14@StatusTime
$LN13@StatusTime:

; 61   : 	}
; 62   : 
; 63   : 	for (int aUserIndex = OBJ_STARTUSERINDEX; aUserIndex < OBJMAX; aUserIndex++)

  0012b	c7 45 f8 b0 36
	00 00		 mov	 DWORD PTR _aUserIndex$228469[ebp], 14000 ; 000036b0H
  00132	eb 09		 jmp	 SHORT $LN12@StatusTime
$LN11@StatusTime:
  00134	8b 45 f8	 mov	 eax, DWORD PTR _aUserIndex$228469[ebp]
  00137	83 c0 01	 add	 eax, 1
  0013a	89 45 f8	 mov	 DWORD PTR _aUserIndex$228469[ebp], eax
$LN12@StatusTime:
  0013d	81 7d f8 98 3a
	00 00		 cmp	 DWORD PTR _aUserIndex$228469[ebp], 15000 ; 00003a98H
  00144	0f 8d 3e 01 00
	00		 jge	 $LN14@StatusTime

; 64   : 	{
; 65   : 		if(OBJMAX_RANGE(aUserIndex) == 0)

  0014a	83 7d f8 00	 cmp	 DWORD PTR _aUserIndex$228469[ebp], 0
  0014e	7d 09		 jge	 SHORT $LN16@StatusTime
  00150	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
  00157	eb 0f		 jmp	 SHORT $LN17@StatusTime
$LN16@StatusTime:
  00159	33 c0		 xor	 eax, eax
  0015b	81 7d f8 97 3a
	00 00		 cmp	 DWORD PTR _aUserIndex$228469[ebp], 14999 ; 00003a97H
  00162	0f 9e c0	 setle	 al
  00165	89 45 b0	 mov	 DWORD PTR tv71[ebp], eax
$LN17@StatusTime:
  00168	83 7d b0 00	 cmp	 DWORD PTR tv71[ebp], 0
  0016c	75 02		 jne	 SHORT $LN9@StatusTime

; 66   : 		{
; 67   : 			continue;

  0016e	eb c4		 jmp	 SHORT $LN11@StatusTime
$LN9@StatusTime:

; 68   : 		}
; 69   : 
; 70   : 		LPOBJ lpUser = &gObj[aUserIndex];

  00170	8b 45 f8	 mov	 eax, DWORD PTR _aUserIndex$228469[ebp]
  00173	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00179	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0017f	89 45 f4	 mov	 DWORD PTR _lpUser$228474[ebp], eax

; 71   : 
; 72   : 		if(lpUser->Connected < PLAYER_PLAYING)

  00182	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$228474[ebp]
  00185	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  00189	7d 02		 jge	 SHORT $LN8@StatusTime

; 73   : 		{
; 74   : 			continue;

  0018b	eb a7		 jmp	 SHORT $LN11@StatusTime
$LN8@StatusTime:

; 75   : 		}
; 76   : 
; 77   : 		if(ExUserInSafeZone(aUserIndex) == false)

  0018d	8b 45 f8	 mov	 eax, DWORD PTR _aUserIndex$228469[ebp]
  00190	50		 push	 eax
  00191	e8 00 00 00 00	 call	 ?ExUserInSafeZone@@YA_NH@Z ; ExUserInSafeZone
  00196	83 c4 04	 add	 esp, 4
  00199	0f b6 c8	 movzx	 ecx, al
  0019c	85 c9		 test	 ecx, ecx
  0019e	75 35		 jne	 SHORT $LN7@StatusTime

; 78   : 		{
; 79   : 			if(lpUser->StatusNeedHelper == 1 && lpUser->m_MUHelperOn == false )

  001a0	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$228474[ebp]
  001a3	0f b6 88 89 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10377]
  001aa	83 f9 01	 cmp	 ecx, 1
  001ad	75 26		 jne	 SHORT $LN7@StatusTime
  001af	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$228474[ebp]
  001b2	0f b6 88 a3 27
	00 00		 movzx	 ecx, BYTE PTR [eax+10147]
  001b9	85 c9		 test	 ecx, ecx
  001bb	75 18		 jne	 SHORT $LN7@StatusTime

; 80   : 			{
; 81   : 				g_MUHelper.Start(lpUser);

  001bd	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$228474[ebp]
  001c0	50		 push	 eax
  001c1	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MUHelper@@3VMUHelper@@A ; g_MUHelper
  001c6	e8 00 00 00 00	 call	 ?Start@MUHelper@@QAEXPAUOBJECTSTRUCT@@@Z ; MUHelper::Start

; 82   : 				lpUser->StatusNeedHelper = 0;

  001cb	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$228474[ebp]
  001ce	c6 80 89 28 00
	00 00		 mov	 BYTE PTR [eax+10377], 0
$LN7@StatusTime:

; 83   : 			}
; 84   : 		}
; 85   : 
; 86   : 		if(lpUser->StatusCode == 0)

  001d5	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$228474[ebp]
  001d8	0f b6 88 88 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10376]
  001df	85 c9		 test	 ecx, ecx
  001e1	75 05		 jne	 SHORT $LN5@StatusTime

; 87   : 		{
; 88   : 			return;

  001e3	e9 a0 00 00 00	 jmp	 $LN14@StatusTime
$LN5@StatusTime:

; 89   : 		}
; 90   : 
; 91   : 		if(lpUser->X != lpUser->TX || lpUser->Y != lpUser->TY)

  001e8	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$228474[ebp]
  001eb	0f bf 88 44 01
	00 00		 movsx	 ecx, WORD PTR [eax+324]
  001f2	8b 55 f4	 mov	 edx, DWORD PTR _lpUser$228474[ebp]
  001f5	0f bf 82 7c 01
	00 00		 movsx	 eax, WORD PTR [edx+380]
  001fc	3b c8		 cmp	 ecx, eax
  001fe	75 18		 jne	 SHORT $LN3@StatusTime
  00200	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$228474[ebp]
  00203	0f bf 88 46 01
	00 00		 movsx	 ecx, WORD PTR [eax+326]
  0020a	8b 55 f4	 mov	 edx, DWORD PTR _lpUser$228474[ebp]
  0020d	0f bf 82 7e 01
	00 00		 movsx	 eax, WORD PTR [edx+382]
  00214	3b c8		 cmp	 ecx, eax
  00216	74 29		 je	 SHORT $LN4@StatusTime
$LN3@StatusTime:

; 92   : 		{
; 93   : 			if(lpUser->StatusCode == 1)

  00218	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$228474[ebp]
  0021b	0f b6 88 88 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10376]
  00222	83 f9 01	 cmp	 ecx, 1
  00225	75 0e		 jne	 SHORT $LN2@StatusTime

; 94   : 			{
; 95   : 				this->GDStatusUpdate(aUserIndex, eStatusNormal);

  00227	6a 00		 push	 0
  00229	8b 45 f8	 mov	 eax, DWORD PTR _aUserIndex$228469[ebp]
  0022c	50		 push	 eax
  0022d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00230	e8 00 00 00 00	 call	 ?GDStatusUpdate@SpotReturn@@QAEXHE@Z ; SpotReturn::GDStatusUpdate
$LN2@StatusTime:

; 96   : 			}
; 97   : 			lpUser->StatusCode = 0;

  00235	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$228474[ebp]
  00238	c6 80 88 28 00
	00 00		 mov	 BYTE PTR [eax+10376], 0

; 98   : 			return;

  0023f	eb 47		 jmp	 SHORT $LN14@StatusTime
$LN4@StatusTime:

; 99   : 		}
; 100  : 
; 101  : 		lpUser->StatusTime++;

  00241	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$228474[ebp]
  00244	66 8b 88 86 28
	00 00		 mov	 cx, WORD PTR [eax+10374]
  0024b	66 83 c1 01	 add	 cx, 1
  0024f	8b 55 f4	 mov	 edx, DWORD PTR _lpUser$228474[ebp]
  00252	66 89 8a 86 28
	00 00		 mov	 WORD PTR [edx+10374], cx

; 102  : 
; 103  : 		if(lpUser->StatusTime >= this->CheckTimeStatus)

  00259	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$228474[ebp]
  0025c	0f b7 88 86 28
	00 00		 movzx	 ecx, WORD PTR [eax+10374]
  00263	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00266	3b 4a 04	 cmp	 ecx, DWORD PTR [edx+4]
  00269	7c 18		 jl	 SHORT $LN1@StatusTime

; 104  : 		{
; 105  : 			this->GDStatus(aUserIndex);

  0026b	8b 45 f8	 mov	 eax, DWORD PTR _aUserIndex$228469[ebp]
  0026e	50		 push	 eax
  0026f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00272	e8 00 00 00 00	 call	 ?GDStatus@SpotReturn@@QAEXH@Z ; SpotReturn::GDStatus

; 106  : 			lpUser->StatusTime = 0;

  00277	33 c0		 xor	 eax, eax
  00279	8b 4d f4	 mov	 ecx, DWORD PTR _lpUser$228474[ebp]
  0027c	66 89 81 86 28
	00 00		 mov	 WORD PTR [ecx+10374], ax
$LN1@StatusTime:

; 107  : 		}
; 108  : 	}

  00283	e9 ac fe ff ff	 jmp	 $LN11@StatusTime
$LN14@StatusTime:

; 109  : }

  00288	5f		 pop	 edi
  00289	5e		 pop	 esi
  0028a	5b		 pop	 ebx
  0028b	8b e5		 mov	 esp, ebp
  0028d	5d		 pop	 ebp
  0028e	c3		 ret	 0
?StatusTime@SpotReturn@@QAEXXZ ENDP			; SpotReturn::StatusTime
_TEXT	ENDS
PUBLIC	?set@PBMSG_HEAD2@@QAEXPAEEEE@Z			; PBMSG_HEAD2::set
PUBLIC	__$ArrayPad$
EXTRN	?Send@DBSockMng@@QAEHPADH@Z:PROC		; DBSockMng::Send
EXTRN	?cDBSMng@@3VDBSockMng@@A:BYTE			; cDBSMng
EXTRN	_memcpy:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv67 = -100						; size = 4
_pMsg$ = -32						; size = 18
_lpUser$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_aUserIndex$ = 8					; size = 4
?GDStatus@SpotReturn@@QAEXH@Z PROC			; SpotReturn::GDStatus
; _this$ = ecx

; 113  : {

  00290	55		 push	 ebp
  00291	8b ec		 mov	 ebp, esp
  00293	83 ec 64	 sub	 esp, 100		; 00000064H
  00296	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0029b	33 c5		 xor	 eax, ebp
  0029d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  002a0	53		 push	 ebx
  002a1	56		 push	 esi
  002a2	57		 push	 edi
  002a3	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 114  : 	if(OBJMAX_RANGE(aUserIndex) == 0)

  002a6	83 7d 08 00	 cmp	 DWORD PTR _aUserIndex$[ebp], 0
  002aa	7d 09		 jge	 SHORT $LN5@GDStatus
  002ac	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
  002b3	eb 0f		 jmp	 SHORT $LN6@GDStatus
$LN5@GDStatus:
  002b5	33 c0		 xor	 eax, eax
  002b7	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _aUserIndex$[ebp], 14999 ; 00003a97H
  002be	0f 9e c0	 setle	 al
  002c1	89 45 9c	 mov	 DWORD PTR tv67[ebp], eax
$LN6@GDStatus:
  002c4	83 7d 9c 00	 cmp	 DWORD PTR tv67[ebp], 0
  002c8	75 02		 jne	 SHORT $LN2@GDStatus

; 115  : 	{
; 116  : 		return;

  002ca	eb 76		 jmp	 SHORT $LN3@GDStatus
$LN2@GDStatus:

; 117  : 	}
; 118  : 
; 119  : 	LPOBJ lpUser = &gObj[aUserIndex];

  002cc	8b 45 08	 mov	 eax, DWORD PTR _aUserIndex$[ebp]
  002cf	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  002d5	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002db	89 45 f4	 mov	 DWORD PTR _lpUser$[ebp], eax

; 120  : 
; 121  : 	if(lpUser->Connected < PLAYER_PLAYING)

  002de	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  002e1	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  002e5	7d 02		 jge	 SHORT $LN1@GDStatus

; 122  : 	{
; 123  : 		return;

  002e7	eb 59		 jmp	 SHORT $LN3@GDStatus
$LN1@GDStatus:

; 124  : 	}
; 125  : 
; 126  : 	PMSG_GD_SPOTSTATUS pMsg = { 0 };

  002e9	c6 45 e0 00	 mov	 BYTE PTR _pMsg$[ebp], 0
  002ed	33 c0		 xor	 eax, eax
  002ef	89 45 e1	 mov	 DWORD PTR _pMsg$[ebp+1], eax
  002f2	89 45 e5	 mov	 DWORD PTR _pMsg$[ebp+5], eax
  002f5	89 45 e9	 mov	 DWORD PTR _pMsg$[ebp+9], eax
  002f8	89 45 ed	 mov	 DWORD PTR _pMsg$[ebp+13], eax
  002fb	88 45 f1	 mov	 BYTE PTR _pMsg$[ebp+17], al

; 127  : 	pMsg.h.set((LPBYTE)&pMsg, 0xE2, 0x05, sizeof(PMSG_GD_SPOTSTATUS));

  002fe	6a 12		 push	 18			; 00000012H
  00300	6a 05		 push	 5
  00302	68 e2 00 00 00	 push	 226			; 000000e2H
  00307	8d 45 e0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0030a	50		 push	 eax
  0030b	8d 4d e0	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  0030e	e8 00 00 00 00	 call	 ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ; PBMSG_HEAD2::set

; 128  : 	memcpy(pMsg.szCharName, lpUser->Name, 11);

  00313	6a 0b		 push	 11			; 0000000bH
  00315	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00318	83 c0 77	 add	 eax, 119		; 00000077H
  0031b	50		 push	 eax
  0031c	8d 4d e4	 lea	 ecx, DWORD PTR _pMsg$[ebp+4]
  0031f	51		 push	 ecx
  00320	e8 00 00 00 00	 call	 _memcpy
  00325	83 c4 0c	 add	 esp, 12			; 0000000cH

; 129  : 	pMsg.Number = lpUser->m_Index;

  00328	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  0032b	66 8b 08	 mov	 cx, WORD PTR [eax]
  0032e	66 89 4d f0	 mov	 WORD PTR _pMsg$[ebp+16], cx

; 130  : 	cDBSMng.Send((char*)&pMsg, sizeof(pMsg));

  00332	6a 12		 push	 18			; 00000012H
  00334	8d 45 e0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00337	50		 push	 eax
  00338	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  0033d	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
$LN3@GDStatus:

; 131  : }

  00342	5f		 pop	 edi
  00343	5e		 pop	 esi
  00344	5b		 pop	 ebx
  00345	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00348	33 cd		 xor	 ecx, ebp
  0034a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0034f	8b e5		 mov	 esp, ebp
  00351	5d		 pop	 ebp
  00352	c2 04 00	 ret	 4
?GDStatus@SpotReturn@@QAEXH@Z ENDP			; SpotReturn::GDStatus
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\include\prodef.h
_TEXT	ENDS
;	COMDAT ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpBuf$ = 8						; size = 4
_head$ = 12						; size = 1
_sub$ = 16						; size = 1
_size$ = 20						; size = 1
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z PROC			; PBMSG_HEAD2::set, COMDAT
; _this$ = ecx

; 104  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 105  : 		lpBuf[0] = 0xC1;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  0000f	c6 00 c1	 mov	 BYTE PTR [eax], 193	; 000000c1H

; 106  : 		lpBuf[1] = size;

  00012	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  00015	8a 4d 14	 mov	 cl, BYTE PTR _size$[ebp]
  00018	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 107  : 		lpBuf[2] = head;

  0001b	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  0001e	8a 4d 0c	 mov	 cl, BYTE PTR _head$[ebp]
  00021	88 48 02	 mov	 BYTE PTR [eax+2], cl

; 108  : 		lpBuf[3] = sub;

  00024	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  00027	8a 4d 10	 mov	 cl, BYTE PTR _sub$[ebp]
  0002a	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 109  : 	};

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 10 00	 ret	 16			; 00000010H
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ENDP			; PBMSG_HEAD2::set
_TEXT	ENDS
PUBLIC	?DGStatus@SpotReturn@@QAEXPAUPMSG_DG_SPOTSTATUS@@@Z ; SpotReturn::DGStatus
EXTRN	?gObjTeleport@@YAXHHHH@Z:PROC			; gObjTeleport
EXTRN	?gObjIsConnectedEx@@YA_NH@Z:PROC		; gObjIsConnectedEx
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\spotreturn.cpp
_TEXT	SEGMENT
tv70 = -80						; size = 4
_lpUser$ = -12						; size = 4
_aUserIndex$ = -8					; size = 4
_this$ = -4						; size = 4
_lpMsg$ = 8						; size = 4
?DGStatus@SpotReturn@@QAEXPAUPMSG_DG_SPOTSTATUS@@@Z PROC ; SpotReturn::DGStatus
; _this$ = ecx

; 135  : {

  00360	55		 push	 ebp
  00361	8b ec		 mov	 ebp, esp
  00363	83 ec 50	 sub	 esp, 80			; 00000050H
  00366	53		 push	 ebx
  00367	56		 push	 esi
  00368	57		 push	 edi
  00369	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 136  : 	if(!lpMsg)

  0036c	83 7d 08 00	 cmp	 DWORD PTR _lpMsg$[ebp], 0
  00370	75 05		 jne	 SHORT $LN8@DGStatus

; 137  : 	{
; 138  : 		return;

  00372	e9 ec 00 00 00	 jmp	 $LN9@DGStatus
$LN8@DGStatus:

; 139  : 	}
; 140  : 
; 141  : 	int aUserIndex = lpMsg->Number;

  00377	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  0037a	0f b7 48 10	 movzx	 ecx, WORD PTR [eax+16]
  0037e	89 4d f8	 mov	 DWORD PTR _aUserIndex$[ebp], ecx

; 142  : 
; 143  : 	if(OBJMAX_RANGE(aUserIndex) == 0)

  00381	83 7d f8 00	 cmp	 DWORD PTR _aUserIndex$[ebp], 0
  00385	7d 09		 jge	 SHORT $LN11@DGStatus
  00387	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
  0038e	eb 0f		 jmp	 SHORT $LN12@DGStatus
$LN11@DGStatus:
  00390	33 c0		 xor	 eax, eax
  00392	81 7d f8 97 3a
	00 00		 cmp	 DWORD PTR _aUserIndex$[ebp], 14999 ; 00003a97H
  00399	0f 9e c0	 setle	 al
  0039c	89 45 b0	 mov	 DWORD PTR tv70[ebp], eax
$LN12@DGStatus:
  0039f	83 7d b0 00	 cmp	 DWORD PTR tv70[ebp], 0
  003a3	75 05		 jne	 SHORT $LN7@DGStatus

; 144  : 	{
; 145  : 		return;

  003a5	e9 b9 00 00 00	 jmp	 $LN9@DGStatus
$LN7@DGStatus:

; 146  : 	}
; 147  : 
; 148  : 	if( !gObjIsConnectedEx(aUserIndex) )

  003aa	8b 45 f8	 mov	 eax, DWORD PTR _aUserIndex$[ebp]
  003ad	50		 push	 eax
  003ae	e8 00 00 00 00	 call	 ?gObjIsConnectedEx@@YA_NH@Z ; gObjIsConnectedEx
  003b3	83 c4 04	 add	 esp, 4
  003b6	0f b6 c8	 movzx	 ecx, al
  003b9	85 c9		 test	 ecx, ecx
  003bb	75 05		 jne	 SHORT $LN6@DGStatus

; 149  : 	{
; 150  : 		return;

  003bd	e9 a1 00 00 00	 jmp	 $LN9@DGStatus
$LN6@DGStatus:

; 151  : 	}
; 152  : 
; 153  : 	LPOBJ lpUser = &gObj[aUserIndex];

  003c2	8b 45 f8	 mov	 eax, DWORD PTR _aUserIndex$[ebp]
  003c5	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  003cb	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  003d1	89 45 f4	 mov	 DWORD PTR _lpUser$[ebp], eax

; 154  : 
; 155  : 	if(!lpUser)

  003d4	75 05		 jne	 SHORT $LN5@DGStatus

; 156  : 	{
; 157  : 		return;

  003d6	e9 88 00 00 00	 jmp	 $LN9@DGStatus
$LN5@DGStatus:

; 158  : 	}
; 159  : 
; 160  : 	if(ExUserInSafeZone(aUserIndex) == false)

  003db	8b 45 f8	 mov	 eax, DWORD PTR _aUserIndex$[ebp]
  003de	50		 push	 eax
  003df	e8 00 00 00 00	 call	 ?ExUserInSafeZone@@YA_NH@Z ; ExUserInSafeZone
  003e4	83 c4 04	 add	 esp, 4
  003e7	0f b6 c8	 movzx	 ecx, al
  003ea	85 c9		 test	 ecx, ecx
  003ec	75 02		 jne	 SHORT $LN4@DGStatus

; 161  : 	{
; 162  : 		return;

  003ee	eb 73		 jmp	 SHORT $LN9@DGStatus
$LN4@DGStatus:

; 163  : 	}
; 164  : 
; 165  : 	if(lpMsg->GetStatus == eStatusKlick)

  003f0	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  003f3	0f b6 48 12	 movzx	 ecx, BYTE PTR [eax+18]
  003f7	83 f9 02	 cmp	 ecx, 2
  003fa	75 67		 jne	 SHORT $LN9@DGStatus

; 166  : 	{
; 167  : 		gObjTeleport(aUserIndex, lpUser->StatusMap, lpUser->StatusX, lpUser->StatusY);

  003fc	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  003ff	0f b6 88 84 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10372]
  00406	51		 push	 ecx
  00407	8b 55 f4	 mov	 edx, DWORD PTR _lpUser$[ebp]
  0040a	0f b6 82 83 28
	00 00		 movzx	 eax, BYTE PTR [edx+10371]
  00411	50		 push	 eax
  00412	8b 4d f4	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  00415	0f b6 91 82 28
	00 00		 movzx	 edx, BYTE PTR [ecx+10370]
  0041c	52		 push	 edx
  0041d	8b 45 f8	 mov	 eax, DWORD PTR _aUserIndex$[ebp]
  00420	50		 push	 eax
  00421	e8 00 00 00 00	 call	 ?gObjTeleport@@YAXHHHH@Z ; gObjTeleport
  00426	83 c4 10	 add	 esp, 16			; 00000010H

; 168  : 		this->GDStatusUpdate(aUserIndex, eStatusNormal);

  00429	6a 00		 push	 0
  0042b	8b 45 f8	 mov	 eax, DWORD PTR _aUserIndex$[ebp]
  0042e	50		 push	 eax
  0042f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00432	e8 00 00 00 00	 call	 ?GDStatusUpdate@SpotReturn@@QAEXHE@Z ; SpotReturn::GDStatusUpdate

; 169  : 		if(lpUser->OffExp == false || lpUser->OffTrade == false)

  00437	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  0043a	83 b8 98 22 00
	00 00		 cmp	 DWORD PTR [eax+8856], 0
  00441	74 0c		 je	 SHORT $LN1@DGStatus
  00443	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00446	83 b8 ac 22 00
	00 00		 cmp	 DWORD PTR [eax+8876], 0
  0044d	75 0a		 jne	 SHORT $LN2@DGStatus
$LN1@DGStatus:

; 170  : 		{
; 171  : 			lpUser->StatusNeedHelper = 1;

  0044f	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00452	c6 80 89 28 00
	00 01		 mov	 BYTE PTR [eax+10377], 1
$LN2@DGStatus:

; 172  : 		}
; 173  : 		lpUser->StatusCode = 0;

  00459	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  0045c	c6 80 88 28 00
	00 00		 mov	 BYTE PTR [eax+10376], 0
$LN9@DGStatus:

; 174  : 	}
; 175  : }

  00463	5f		 pop	 edi
  00464	5e		 pop	 esi
  00465	5b		 pop	 ebx
  00466	8b e5		 mov	 esp, ebp
  00468	5d		 pop	 ebp
  00469	c2 04 00	 ret	 4
?DGStatus@SpotReturn@@QAEXPAUPMSG_DG_SPOTSTATUS@@@Z ENDP ; SpotReturn::DGStatus
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv75 = -96						; size = 4
_lpUser$ = -28						; size = 4
_pMsg$ = -24						; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_aUserIndex$ = 8					; size = 4
_eStatus$ = 12						; size = 1
?GDStatusUpdate@SpotReturn@@QAEXHE@Z PROC		; SpotReturn::GDStatusUpdate
; _this$ = ecx

; 179  : {

  00470	55		 push	 ebp
  00471	8b ec		 mov	 ebp, esp
  00473	83 ec 60	 sub	 esp, 96			; 00000060H
  00476	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0047b	33 c5		 xor	 eax, ebp
  0047d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00480	53		 push	 ebx
  00481	56		 push	 esi
  00482	57		 push	 edi
  00483	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 180  : 	PMSG_GD_SPOTSTATUS_UPDATE pMsg = { 0 };

  00486	c6 45 e8 00	 mov	 BYTE PTR _pMsg$[ebp], 0
  0048a	33 c0		 xor	 eax, eax
  0048c	89 45 e9	 mov	 DWORD PTR _pMsg$[ebp+1], eax
  0048f	89 45 ed	 mov	 DWORD PTR _pMsg$[ebp+5], eax
  00492	89 45 f1	 mov	 DWORD PTR _pMsg$[ebp+9], eax
  00495	66 89 45 f5	 mov	 WORD PTR _pMsg$[ebp+13], ax
  00499	88 45 f7	 mov	 BYTE PTR _pMsg$[ebp+15], al

; 181  : 	pMsg.h.set((LPBYTE)&pMsg, 0xE2, 0x06, sizeof(PMSG_GD_SPOTSTATUS_UPDATE));

  0049c	6a 10		 push	 16			; 00000010H
  0049e	6a 06		 push	 6
  004a0	68 e2 00 00 00	 push	 226			; 000000e2H
  004a5	8d 45 e8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  004a8	50		 push	 eax
  004a9	8d 4d e8	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  004ac	e8 00 00 00 00	 call	 ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ; PBMSG_HEAD2::set

; 182  : 
; 183  : 	if(OBJMAX_RANGE(aUserIndex) == 0)

  004b1	83 7d 08 00	 cmp	 DWORD PTR _aUserIndex$[ebp], 0
  004b5	7d 09		 jge	 SHORT $LN5@GDStatusUp
  004b7	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
  004be	eb 0f		 jmp	 SHORT $LN6@GDStatusUp
$LN5@GDStatusUp:
  004c0	33 c0		 xor	 eax, eax
  004c2	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _aUserIndex$[ebp], 14999 ; 00003a97H
  004c9	0f 9e c0	 setle	 al
  004cc	89 45 a0	 mov	 DWORD PTR tv75[ebp], eax
$LN6@GDStatusUp:
  004cf	83 7d a0 00	 cmp	 DWORD PTR tv75[ebp], 0
  004d3	75 02		 jne	 SHORT $LN2@GDStatusUp

; 184  : 	{
; 185  : 		return;

  004d5	eb 52		 jmp	 SHORT $LN3@GDStatusUp
$LN2@GDStatusUp:

; 186  : 	}
; 187  : 
; 188  : 	if( !gObjIsConnectedEx(aUserIndex) )

  004d7	8b 45 08	 mov	 eax, DWORD PTR _aUserIndex$[ebp]
  004da	50		 push	 eax
  004db	e8 00 00 00 00	 call	 ?gObjIsConnectedEx@@YA_NH@Z ; gObjIsConnectedEx
  004e0	83 c4 04	 add	 esp, 4
  004e3	0f b6 c8	 movzx	 ecx, al
  004e6	85 c9		 test	 ecx, ecx
  004e8	75 02		 jne	 SHORT $LN1@GDStatusUp

; 189  : 	{
; 190  : 		return;

  004ea	eb 3d		 jmp	 SHORT $LN3@GDStatusUp
$LN1@GDStatusUp:

; 191  : 	}
; 192  : 
; 193  : 	LPOBJ lpUser = &gObj[aUserIndex];

  004ec	8b 45 08	 mov	 eax, DWORD PTR _aUserIndex$[ebp]
  004ef	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  004f5	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  004fb	89 45 e4	 mov	 DWORD PTR _lpUser$[ebp], eax

; 194  : 
; 195  : 	memcpy(pMsg.szCharName, lpUser->Name, 11);

  004fe	6a 0b		 push	 11			; 0000000bH
  00500	8b 45 e4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00503	83 c0 77	 add	 eax, 119		; 00000077H
  00506	50		 push	 eax
  00507	8d 4d ec	 lea	 ecx, DWORD PTR _pMsg$[ebp+4]
  0050a	51		 push	 ecx
  0050b	e8 00 00 00 00	 call	 _memcpy
  00510	83 c4 0c	 add	 esp, 12			; 0000000cH

; 196  : 	pMsg.GetStatus = eStatus;

  00513	8a 45 0c	 mov	 al, BYTE PTR _eStatus$[ebp]
  00516	88 45 f7	 mov	 BYTE PTR _pMsg$[ebp+15], al

; 197  : 
; 198  : 	cDBSMng.Send((char*)&pMsg, sizeof(pMsg));

  00519	6a 10		 push	 16			; 00000010H
  0051b	8d 45 e8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0051e	50		 push	 eax
  0051f	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  00524	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
$LN3@GDStatusUp:

; 199  : }

  00529	5f		 pop	 edi
  0052a	5e		 pop	 esi
  0052b	5b		 pop	 ebx
  0052c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0052f	33 cd		 xor	 ecx, ebp
  00531	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00536	8b e5		 mov	 esp, ebp
  00538	5d		 pop	 ebp
  00539	c2 08 00	 ret	 8
?GDStatusUpdate@SpotReturn@@QAEXHE@Z ENDP		; SpotReturn::GDStatusUpdate
_TEXT	ENDS
PUBLIC	?StatusSave@SpotReturn@@QAEXH@Z			; SpotReturn::StatusSave
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv67 = -76						; size = 4
_lpUser$ = -8						; size = 4
_this$ = -4						; size = 4
_aUserIndex$ = 8					; size = 4
?StatusSave@SpotReturn@@QAEXH@Z PROC			; SpotReturn::StatusSave
; _this$ = ecx

; 203  : {

  00540	55		 push	 ebp
  00541	8b ec		 mov	 ebp, esp
  00543	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00546	53		 push	 ebx
  00547	56		 push	 esi
  00548	57		 push	 edi
  00549	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  : 	if(OBJMAX_RANGE(aUserIndex) == 0)

  0054c	83 7d 08 00	 cmp	 DWORD PTR _aUserIndex$[ebp], 0
  00550	7d 09		 jge	 SHORT $LN5@StatusSave
  00552	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
  00559	eb 0f		 jmp	 SHORT $LN6@StatusSave
$LN5@StatusSave:
  0055b	33 c0		 xor	 eax, eax
  0055d	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _aUserIndex$[ebp], 14999 ; 00003a97H
  00564	0f 9e c0	 setle	 al
  00567	89 45 b4	 mov	 DWORD PTR tv67[ebp], eax
$LN6@StatusSave:
  0056a	83 7d b4 00	 cmp	 DWORD PTR tv67[ebp], 0
  0056e	75 02		 jne	 SHORT $LN2@StatusSave

; 205  : 	{
; 206  : 		return;

  00570	eb 75		 jmp	 SHORT $LN3@StatusSave
$LN2@StatusSave:

; 207  : 	}
; 208  : 
; 209  : 	if( !gObjIsConnectedEx(aUserIndex) )

  00572	8b 45 08	 mov	 eax, DWORD PTR _aUserIndex$[ebp]
  00575	50		 push	 eax
  00576	e8 00 00 00 00	 call	 ?gObjIsConnectedEx@@YA_NH@Z ; gObjIsConnectedEx
  0057b	83 c4 04	 add	 esp, 4
  0057e	0f b6 c8	 movzx	 ecx, al
  00581	85 c9		 test	 ecx, ecx
  00583	75 02		 jne	 SHORT $LN1@StatusSave

; 210  : 	{
; 211  : 		return;

  00585	eb 60		 jmp	 SHORT $LN3@StatusSave
$LN1@StatusSave:

; 212  : 	}
; 213  : 
; 214  : 	LPOBJ lpUser = &gObj[aUserIndex];

  00587	8b 45 08	 mov	 eax, DWORD PTR _aUserIndex$[ebp]
  0058a	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00590	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00596	89 45 f8	 mov	 DWORD PTR _lpUser$[ebp], eax

; 215  : 
; 216  : 	lpUser->StatusMap = lpUser->MapNumber;

  00599	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  0059c	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  0059f	8a 91 49 01 00
	00		 mov	 dl, BYTE PTR [ecx+329]
  005a5	88 90 82 28 00
	00		 mov	 BYTE PTR [eax+10370], dl

; 217  : 	lpUser->StatusX = lpUser->X;

  005ab	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  005ae	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  005b1	8a 91 44 01 00
	00		 mov	 dl, BYTE PTR [ecx+324]
  005b7	88 90 83 28 00
	00		 mov	 BYTE PTR [eax+10371], dl

; 218  : 	lpUser->StatusY = lpUser->Y;

  005bd	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  005c0	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  005c3	8a 91 46 01 00
	00		 mov	 dl, BYTE PTR [ecx+326]
  005c9	88 90 84 28 00
	00		 mov	 BYTE PTR [eax+10372], dl

; 219  : 	lpUser->StatusCode = 1;

  005cf	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  005d2	c6 80 88 28 00
	00 01		 mov	 BYTE PTR [eax+10376], 1

; 220  : 	this->GDStatusUpdate(aUserIndex, eStatusKill);

  005d9	6a 01		 push	 1
  005db	8b 45 08	 mov	 eax, DWORD PTR _aUserIndex$[ebp]
  005de	50		 push	 eax
  005df	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005e2	e8 00 00 00 00	 call	 ?GDStatusUpdate@SpotReturn@@QAEXHE@Z ; SpotReturn::GDStatusUpdate
$LN3@StatusSave:

; 221  : }

  005e7	5f		 pop	 edi
  005e8	5e		 pop	 esi
  005e9	5b		 pop	 ebx
  005ea	8b e5		 mov	 esp, ebp
  005ec	5d		 pop	 ebp
  005ed	c2 04 00	 ret	 4
?StatusSave@SpotReturn@@QAEXH@Z ENDP			; SpotReturn::StatusSave
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ??__Eg_SpotReturn@@YAXXZ
text$yc	SEGMENT
??__Eg_SpotReturn@@YAXXZ PROC				; `dynamic initializer for 'g_SpotReturn'', COMDAT

; 15   : SpotReturn g_SpotReturn;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_SpotReturn@@3VSpotReturn@@A ; g_SpotReturn
  0000e	e8 00 00 00 00	 call	 ??0SpotReturn@@QAE@XZ	; SpotReturn::SpotReturn
  00013	68 00 00 00 00	 push	 OFFSET ??__Fg_SpotReturn@@YAXXZ ; `dynamic atexit destructor for 'g_SpotReturn''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__Eg_SpotReturn@@YAXXZ ENDP				; `dynamic initializer for 'g_SpotReturn''
; Function compile flags: /Odtp /ZI
text$yc	ENDS
;	COMDAT ??__Fg_SpotReturn@@YAXXZ
text$yd	SEGMENT
??__Fg_SpotReturn@@YAXXZ PROC				; `dynamic atexit destructor for 'g_SpotReturn'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_SpotReturn@@3VSpotReturn@@A ; g_SpotReturn
  0000e	e8 00 00 00 00	 call	 ??1SpotReturn@@QAE@XZ	; SpotReturn::~SpotReturn
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__Fg_SpotReturn@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_SpotReturn''
text$yd	ENDS
PUBLIC	?g_SpotReturn@@3VSpotReturn@@A			; g_SpotReturn
_BSS	SEGMENT
?g_SpotReturn@@3VSpotReturn@@A DQ 01H DUP (?)		; g_SpotReturn
_BSS	ENDS
CRT$XCU	SEGMENT
_g_SpotReturn$initializer$ DD FLAT:??__Eg_SpotReturn@@YAXXZ
CRT$XCU	ENDS
END
