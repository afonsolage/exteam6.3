; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\PeriodItemEx.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_7CPeriodItemEx@@6B@				; CPeriodItemEx::`vftable'
PUBLIC	??0CPeriodItemEx@@QAE@XZ			; CPeriodItemEx::CPeriodItemEx
PUBLIC	??_R4CPeriodItemEx@@6B@				; CPeriodItemEx::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCPeriodItemEx@@@8			; CPeriodItemEx `RTTI Type Descriptor'
PUBLIC	??_R3CPeriodItemEx@@8				; CPeriodItemEx::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CPeriodItemEx@@8				; CPeriodItemEx::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CPeriodItemEx@@8			; CPeriodItemEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECPeriodItemEx@@UAEPAXI@Z:PROC		; CPeriodItemEx::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CPeriodItemEx@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\perioditemex.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CPeriodItemEx@@8 DD FLAT:??_R0?AVCPeriodItemEx@@@8 ; CPeriodItemEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CPeriodItemEx@@8
rdata$r	ENDS
;	COMDAT ??_R2CPeriodItemEx@@8
rdata$r	SEGMENT
??_R2CPeriodItemEx@@8 DD FLAT:??_R1A@?0A@EA@CPeriodItemEx@@8 ; CPeriodItemEx::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CPeriodItemEx@@8
rdata$r	SEGMENT
??_R3CPeriodItemEx@@8 DD 00H				; CPeriodItemEx::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CPeriodItemEx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCPeriodItemEx@@@8
_DATA	SEGMENT
??_R0?AVCPeriodItemEx@@@8 DD FLAT:??_7type_info@@6B@	; CPeriodItemEx `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCPeriodItemEx@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CPeriodItemEx@@6B@
rdata$r	SEGMENT
??_R4CPeriodItemEx@@6B@ DD 00H				; CPeriodItemEx::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCPeriodItemEx@@@8
	DD	FLAT:??_R3CPeriodItemEx@@8
rdata$r	ENDS
;	COMDAT ??_7CPeriodItemEx@@6B@
CONST	SEGMENT
??_7CPeriodItemEx@@6B@ DD FLAT:??_R4CPeriodItemEx@@6B@	; CPeriodItemEx::`vftable'
	DD	FLAT:??_ECPeriodItemEx@@UAEPAXI@Z
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CPeriodItemEx@@QAE@XZ PROC				; CPeriodItemEx::CPeriodItemEx
; _this$ = ecx

; 20   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CPeriodItemEx@@6B@

; 21   : 
; 22   : }

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CPeriodItemEx@@QAE@XZ ENDP				; CPeriodItemEx::CPeriodItemEx
_TEXT	ENDS
PUBLIC	??1CPeriodItemEx@@UAE@XZ			; CPeriodItemEx::~CPeriodItemEx
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCPeriodItemEx@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCPeriodItemEx@@UAEPAXI@Z PROC			; CPeriodItemEx::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CPeriodItemEx@@UAE@XZ ; CPeriodItemEx::~CPeriodItemEx
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCPeriodItemEx@@UAEPAXI@Z ENDP			; CPeriodItemEx::`scalar deleting destructor'
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CPeriodItemEx@@UAE@XZ PROC				; CPeriodItemEx::~CPeriodItemEx
; _this$ = ecx

; 25   : {

  00020	55		 push	 ebp
  00021	8b ec		 mov	 ebp, esp
  00023	83 ec 44	 sub	 esp, 68			; 00000044H
  00026	53		 push	 ebx
  00027	56		 push	 esi
  00028	57		 push	 edi
  00029	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CPeriodItemEx@@6B@

; 26   : 
; 27   : }

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??1CPeriodItemEx@@UAE@XZ ENDP				; CPeriodItemEx::~CPeriodItemEx
_TEXT	ENDS
PUBLIC	?Clear@PERIOD_DATA@@QAEXXZ			; PERIOD_DATA::Clear
PUBLIC	?Initialize@CPeriodItemEx@@QAEXXZ		; CPeriodItemEx::Initialize
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$221371 = -8						; size = 4
_this$ = -4						; size = 4
?Initialize@CPeriodItemEx@@QAEXXZ PROC			; CPeriodItemEx::Initialize
; _this$ = ecx

; 31   : {

  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
  00043	83 ec 48	 sub	 esp, 72			; 00000048H
  00046	53		 push	 ebx
  00047	56		 push	 esi
  00048	57		 push	 edi
  00049	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 32   : 	for(int i = 0; i < OBJMAXUSER; i++)

  0004c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$221371[ebp], 0
  00053	eb 09		 jmp	 SHORT $LN3@Initialize
$LN2@Initialize:
  00055	8b 45 f8	 mov	 eax, DWORD PTR _i$221371[ebp]
  00058	83 c0 01	 add	 eax, 1
  0005b	89 45 f8	 mov	 DWORD PTR _i$221371[ebp], eax
$LN3@Initialize:
  0005e	81 7d f8 e8 03
	00 00		 cmp	 DWORD PTR _i$221371[ebp], 1000 ; 000003e8H
  00065	7d 17		 jge	 SHORT $LN4@Initialize

; 33   : 		this->m_PeriodData[i].Clear();

  00067	8b 45 f8	 mov	 eax, DWORD PTR _i$221371[ebp]
  0006a	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00070	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	8d 4c 01 04	 lea	 ecx, DWORD PTR [ecx+eax+4]
  00077	e8 00 00 00 00	 call	 ?Clear@PERIOD_DATA@@QAEXXZ ; PERIOD_DATA::Clear
  0007c	eb d7		 jmp	 SHORT $LN2@Initialize
$LN4@Initialize:

; 34   : }

  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	5b		 pop	 ebx
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c3		 ret	 0
?Initialize@CPeriodItemEx@@QAEXXZ ENDP			; CPeriodItemEx::Initialize
_TEXT	ENDS
PUBLIC	?Clear@ITEMDATA@@QAEXXZ				; ITEMDATA::Clear
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$221378 = -8						; size = 4
_this$ = -4						; size = 4
?Clear@PERIOD_DATA@@QAEXXZ PROC				; PERIOD_DATA::Clear
; _this$ = ecx

; 38   : {

  00090	55		 push	 ebp
  00091	8b ec		 mov	 ebp, esp
  00093	83 ec 48	 sub	 esp, 72			; 00000048H
  00096	53		 push	 ebx
  00097	56		 push	 esi
  00098	57		 push	 edi
  00099	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 39   : 	this->bInUse = 0;

  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	c6 00 00	 mov	 BYTE PTR [eax], 0

; 40   : 	for(int i = 0; i < MAX_ITEMDATA; i++)

  000a2	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$221378[ebp], 0
  000a9	eb 09		 jmp	 SHORT $LN3@Clear
$LN2@Clear:
  000ab	8b 45 f8	 mov	 eax, DWORD PTR _i$221378[ebp]
  000ae	83 c0 01	 add	 eax, 1
  000b1	89 45 f8	 mov	 DWORD PTR _i$221378[ebp], eax
$LN3@Clear:
  000b4	83 7d f8 1e	 cmp	 DWORD PTR _i$221378[ebp], 30 ; 0000001eH
  000b8	7d 14		 jge	 SHORT $LN4@Clear

; 41   : 		this->itemData[i].Clear();

  000ba	8b 45 f8	 mov	 eax, DWORD PTR _i$221378[ebp]
  000bd	6b c0 1c	 imul	 eax, 28			; 0000001cH
  000c0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	8d 4c 01 24	 lea	 ecx, DWORD PTR [ecx+eax+36]
  000c7	e8 00 00 00 00	 call	 ?Clear@ITEMDATA@@QAEXXZ	; ITEMDATA::Clear
  000cc	eb dd		 jmp	 SHORT $LN2@Clear
$LN4@Clear:

; 42   : }

  000ce	5f		 pop	 edi
  000cf	5e		 pop	 esi
  000d0	5b		 pop	 ebx
  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
?Clear@PERIOD_DATA@@QAEXXZ ENDP				; PERIOD_DATA::Clear
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\perioditemex.h
_TEXT	ENDS
;	COMDAT ?Clear@ITEMDATA@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@ITEMDATA@@QAEXXZ PROC				; ITEMDATA::Clear, COMDAT
; _this$ = ecx

; 12   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 13   : 		bInUse = 0;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c6 00 00	 mov	 BYTE PTR [eax], 0

; 14   : 		wItemCode = 0;

  00012	33 c0		 xor	 eax, eax
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	66 89 41 02	 mov	 WORD PTR [ecx+2], ax

; 15   : 		lCurentDate = 0;

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 16   : 	}

  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?Clear@ITEMDATA@@QAEXXZ ENDP				; ITEMDATA::Clear
_TEXT	ENDS
PUBLIC	?AddPeriodInfo@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@@Z ; CPeriodItemEx::AddPeriodInfo
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\perioditemex.cpp
_TEXT	SEGMENT
_i$221387 = -12						; size = 4
_iPeriodInfoIndex$ = -8					; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
?AddPeriodInfo@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@@Z PROC ; CPeriodItemEx::AddPeriodInfo
; _this$ = ecx

; 46   : {

  000e0	55		 push	 ebp
  000e1	8b ec		 mov	 ebp, esp
  000e3	83 ec 4c	 sub	 esp, 76			; 0000004cH
  000e6	53		 push	 ebx
  000e7	56		 push	 esi
  000e8	57		 push	 edi
  000e9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 47   : 	int iPeriodInfoIndex = -1;

  000ec	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR _iPeriodInfoIndex$[ebp], -1

; 48   : 	for(int i = 0; i < OBJMAXUSER; i++)

  000f3	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$221387[ebp], 0
  000fa	eb 09		 jmp	 SHORT $LN4@AddPeriodI
$LN3@AddPeriodI:
  000fc	8b 45 f4	 mov	 eax, DWORD PTR _i$221387[ebp]
  000ff	83 c0 01	 add	 eax, 1
  00102	89 45 f4	 mov	 DWORD PTR _i$221387[ebp], eax
$LN4@AddPeriodI:
  00105	81 7d f4 e8 03
	00 00		 cmp	 DWORD PTR _i$221387[ebp], 1000 ; 000003e8H
  0010c	0f 8d ed 00 00
	00		 jge	 $LN2@AddPeriodI

; 49   : 	{
; 50   : 		if( this->m_PeriodData[i].bInUse == 0 )

  00112	8b 45 f4	 mov	 eax, DWORD PTR _i$221387[ebp]
  00115	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  0011b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	0f b6 54 01 04	 movzx	 edx, BYTE PTR [ecx+eax+4]
  00123	85 d2		 test	 edx, edx
  00125	0f 85 cf 00 00
	00		 jne	 $LN1@AddPeriodI

; 51   : 		{
; 52   : 			this->m_PeriodData[i].Clear();

  0012b	8b 45 f4	 mov	 eax, DWORD PTR _i$221387[ebp]
  0012e	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00134	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00137	8d 4c 01 04	 lea	 ecx, DWORD PTR [ecx+eax+4]
  0013b	e8 00 00 00 00	 call	 ?Clear@PERIOD_DATA@@QAEXXZ ; PERIOD_DATA::Clear

; 53   : 			this->m_PeriodData[i].bInUse = TRUE;

  00140	8b 45 f4	 mov	 eax, DWORD PTR _i$221387[ebp]
  00143	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00149	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014c	c6 44 01 04 01	 mov	 BYTE PTR [ecx+eax+4], 1

; 54   : 			this->m_PeriodData[i].lpObj = lpObj;

  00151	8b 45 f4	 mov	 eax, DWORD PTR _i$221387[ebp]
  00154	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  0015a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0015d	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00160	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 55   : 			this->m_PeriodData[i].DBNumber = lpObj->DBNumber;

  00164	8b 45 f4	 mov	 eax, DWORD PTR _i$221387[ebp]
  00167	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  0016d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00170	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00173	8b 52 2c	 mov	 edx, DWORD PTR [edx+44]
  00176	89 54 01 08	 mov	 DWORD PTR [ecx+eax+8], edx

; 56   : 			this->m_PeriodData[i].aIndex = lpObj->m_Index;

  0017a	8b 45 f4	 mov	 eax, DWORD PTR _i$221387[ebp]
  0017d	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00183	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00186	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00189	66 8b 12	 mov	 dx, WORD PTR [edx]
  0018c	66 89 54 01 06	 mov	 WORD PTR [ecx+eax+6], dx

; 57   : 			this->m_PeriodData[i].btType = 0;

  00191	8b 45 f4	 mov	 eax, DWORD PTR _i$221387[ebp]
  00194	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  0019a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0019d	c6 44 01 05 00	 mov	 BYTE PTR [ecx+eax+5], 0

; 58   : 
; 59   : 			memcpy(this->m_PeriodData[i].Name,lpObj->Name,sizeof(this->m_PeriodData[i].Name));

  001a2	6a 0b		 push	 11			; 0000000bH
  001a4	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  001a7	83 c0 77	 add	 eax, 119		; 00000077H
  001aa	50		 push	 eax
  001ab	8b 4d f4	 mov	 ecx, DWORD PTR _i$221387[ebp]
  001ae	69 c9 6c 03 00
	00		 imul	 ecx, 876		; 0000036cH
  001b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001b7	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  001bb	50		 push	 eax
  001bc	e8 00 00 00 00	 call	 _memcpy
  001c1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 60   : 			memcpy(this->m_PeriodData[i].AccountID,lpObj->AccountID,sizeof(this->m_PeriodData[i].AccountID));

  001c4	6a 0b		 push	 11			; 0000000bH
  001c6	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  001c9	83 c0 6c	 add	 eax, 108		; 0000006cH
  001cc	50		 push	 eax
  001cd	8b 4d f4	 mov	 ecx, DWORD PTR _i$221387[ebp]
  001d0	69 c9 6c 03 00
	00		 imul	 ecx, 876		; 0000036cH
  001d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001d9	8d 44 0a 1b	 lea	 eax, DWORD PTR [edx+ecx+27]
  001dd	50		 push	 eax
  001de	e8 00 00 00 00	 call	 _memcpy
  001e3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 61   : 
; 62   : 			lpObj->m_PeriodDataIndex = i;

  001e6	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  001e9	8b 4d f4	 mov	 ecx, DWORD PTR _i$221387[ebp]
  001ec	89 88 20 26 00
	00		 mov	 DWORD PTR [eax+9760], ecx

; 63   : 			iPeriodInfoIndex = i;

  001f2	8b 45 f4	 mov	 eax, DWORD PTR _i$221387[ebp]
  001f5	89 45 f8	 mov	 DWORD PTR _iPeriodInfoIndex$[ebp], eax

; 64   : 			break;

  001f8	eb 05		 jmp	 SHORT $LN2@AddPeriodI
$LN1@AddPeriodI:

; 65   : 		}
; 66   : 	}

  001fa	e9 fd fe ff ff	 jmp	 $LN3@AddPeriodI
$LN2@AddPeriodI:

; 67   : return iPeriodInfoIndex;

  001ff	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodInfoIndex$[ebp]

; 68   : }

  00202	5f		 pop	 edi
  00203	5e		 pop	 esi
  00204	5b		 pop	 ebx
  00205	8b e5		 mov	 esp, ebp
  00207	5d		 pop	 ebp
  00208	c2 04 00	 ret	 4
?AddPeriodInfo@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@@Z ENDP ; CPeriodItemEx::AddPeriodInfo
_TEXT	ENDS
PUBLIC	?IsCorrectUser@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@@Z ; CPeriodItemEx::IsCorrectUser
PUBLIC	?RemovePeriodInfo@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@@Z ; CPeriodItemEx::RemovePeriodInfo
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_iPeriodItemSlotIndex$ = -8				; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
?RemovePeriodInfo@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@@Z PROC ; CPeriodItemEx::RemovePeriodInfo
; _this$ = ecx

; 72   : {

  00210	55		 push	 ebp
  00211	8b ec		 mov	 ebp, esp
  00213	83 ec 48	 sub	 esp, 72			; 00000048H
  00216	53		 push	 ebx
  00217	56		 push	 esi
  00218	57		 push	 edi
  00219	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 73   : 	int iPeriodItemSlotIndex = lpObj->m_PeriodDataIndex;

  0021c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0021f	8b 88 20 26 00
	00		 mov	 ecx, DWORD PTR [eax+9760]
  00225	89 4d f8	 mov	 DWORD PTR _iPeriodItemSlotIndex$[ebp], ecx

; 74   : 
; 75   : 	if( IsCorrectUser(lpObj) == true &&
; 76   : 		iPeriodItemSlotIndex >= 0 && iPeriodItemSlotIndex < 1000 )

  00228	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0022b	50		 push	 eax
  0022c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0022f	e8 00 00 00 00	 call	 ?IsCorrectUser@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@@Z ; CPeriodItemEx::IsCorrectUser
  00234	0f b6 c8	 movzx	 ecx, al
  00237	83 f9 01	 cmp	 ecx, 1
  0023a	75 3a		 jne	 SHORT $LN2@RemovePeri
  0023c	83 7d f8 00	 cmp	 DWORD PTR _iPeriodItemSlotIndex$[ebp], 0
  00240	7c 34		 jl	 SHORT $LN2@RemovePeri
  00242	81 7d f8 e8 03
	00 00		 cmp	 DWORD PTR _iPeriodItemSlotIndex$[ebp], 1000 ; 000003e8H
  00249	7d 2b		 jge	 SHORT $LN2@RemovePeri

; 77   : 	{
; 78   : 		if( this->m_PeriodData[iPeriodItemSlotIndex].bInUse == 1 )

  0024b	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  0024e	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00254	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00257	0f b6 54 01 04	 movzx	 edx, BYTE PTR [ecx+eax+4]
  0025c	83 fa 01	 cmp	 edx, 1
  0025f	75 15		 jne	 SHORT $LN2@RemovePeri

; 79   : 			this->m_PeriodData[iPeriodItemSlotIndex].Clear();

  00261	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  00264	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  0026a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0026d	8d 4c 01 04	 lea	 ecx, DWORD PTR [ecx+eax+4]
  00271	e8 00 00 00 00	 call	 ?Clear@PERIOD_DATA@@QAEXXZ ; PERIOD_DATA::Clear
$LN2@RemovePeri:

; 80   : 	}
; 81   : return false;

  00276	32 c0		 xor	 al, al

; 82   : }

  00278	5f		 pop	 edi
  00279	5e		 pop	 esi
  0027a	5b		 pop	 ebx
  0027b	8b e5		 mov	 esp, ebp
  0027d	5d		 pop	 ebp
  0027e	c2 04 00	 ret	 4
?RemovePeriodInfo@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@@Z ENDP ; CPeriodItemEx::RemovePeriodInfo
; Function compile flags: /Odtp /ZI
_iPeriodItemSlotIndex$ = -8				; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
?IsCorrectUser@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@@Z PROC ; CPeriodItemEx::IsCorrectUser
; _this$ = ecx

; 86   : {

  00290	55		 push	 ebp
  00291	8b ec		 mov	 ebp, esp
  00293	83 ec 48	 sub	 esp, 72			; 00000048H
  00296	53		 push	 ebx
  00297	56		 push	 esi
  00298	57		 push	 edi
  00299	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 87   : 	int iPeriodItemSlotIndex = lpObj->m_PeriodDataIndex;

  0029c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0029f	8b 88 20 26 00
	00		 mov	 ecx, DWORD PTR [eax+9760]
  002a5	89 4d f8	 mov	 DWORD PTR _iPeriodItemSlotIndex$[ebp], ecx

; 88   : 
; 89   : 	if( iPeriodItemSlotIndex < 0 )

  002a8	83 7d f8 00	 cmp	 DWORD PTR _iPeriodItemSlotIndex$[ebp], 0
  002ac	7d 04		 jge	 SHORT $LN2@IsCorrectU

; 90   : 		return false;

  002ae	32 c0		 xor	 al, al
  002b0	eb 34		 jmp	 SHORT $LN3@IsCorrectU
$LN2@IsCorrectU:

; 91   : 
; 92   : 	if( this->m_PeriodData[iPeriodItemSlotIndex].bInUse == 1 &&
; 93   : 		this->m_PeriodData[iPeriodItemSlotIndex].DBNumber == lpObj->DBNumber )

  002b2	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  002b5	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  002bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002be	0f b6 54 01 04	 movzx	 edx, BYTE PTR [ecx+eax+4]
  002c3	83 fa 01	 cmp	 edx, 1
  002c6	75 1c		 jne	 SHORT $LN1@IsCorrectU
  002c8	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  002cb	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  002d1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002d4	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  002d7	8b 44 01 08	 mov	 eax, DWORD PTR [ecx+eax+8]
  002db	3b 42 2c	 cmp	 eax, DWORD PTR [edx+44]
  002de	75 04		 jne	 SHORT $LN1@IsCorrectU

; 94   : 		return true;

  002e0	b0 01		 mov	 al, 1
  002e2	eb 02		 jmp	 SHORT $LN3@IsCorrectU
$LN1@IsCorrectU:

; 95   : 
; 96   : 	return false;

  002e4	32 c0		 xor	 al, al
$LN3@IsCorrectU:

; 97   : }

  002e6	5f		 pop	 edi
  002e7	5e		 pop	 esi
  002e8	5b		 pop	 ebx
  002e9	8b e5		 mov	 esp, ebp
  002eb	5d		 pop	 ebp
  002ec	c2 04 00	 ret	 4
?IsCorrectUser@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@@Z ENDP ; CPeriodItemEx::IsCorrectUser
_TEXT	ENDS
PUBLIC	?GetCurrentDate@CPeriodItemEx@@QAEJXZ		; CPeriodItemEx::GetCurrentDate
PUBLIC	?AddPeriodItemData@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GEEHJ@Z ; CPeriodItemEx::AddPeriodItemData
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$221417 = -12						; size = 4
_iPeriodItemSlotIndex$ = -8				; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_wItemCode$ = 12					; size = 2
_btEffectType1$ = 16					; size = 1
_btEffectType2$ = 20					; size = 1
_iDuration$ = 24					; size = 4
_lExpireDate$ = 28					; size = 4
?AddPeriodItemData@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GEEHJ@Z PROC ; CPeriodItemEx::AddPeriodItemData
; _this$ = ecx

; 101  : {

  002f0	55		 push	 ebp
  002f1	8b ec		 mov	 ebp, esp
  002f3	83 ec 4c	 sub	 esp, 76			; 0000004cH
  002f6	53		 push	 ebx
  002f7	56		 push	 esi
  002f8	57		 push	 edi
  002f9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 102  : 	int iPeriodItemSlotIndex = lpObj->m_PeriodDataIndex;

  002fc	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  002ff	8b 88 20 26 00
	00		 mov	 ecx, DWORD PTR [eax+9760]
  00305	89 4d f8	 mov	 DWORD PTR _iPeriodItemSlotIndex$[ebp], ecx

; 103  : 
; 104  : 	if( !IsCorrectUser(lpObj) )

  00308	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0030b	50		 push	 eax
  0030c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0030f	e8 00 00 00 00	 call	 ?IsCorrectUser@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@@Z ; CPeriodItemEx::IsCorrectUser
  00314	0f b6 c8	 movzx	 ecx, al
  00317	85 c9		 test	 ecx, ecx
  00319	75 08		 jne	 SHORT $LN5@AddPeriodI@2

; 105  : 		return -1;

  0031b	83 c8 ff	 or	 eax, -1
  0031e	e9 55 01 00 00	 jmp	 $LN6@AddPeriodI@2
$LN5@AddPeriodI@2:

; 106  : 
; 107  : 	for(int i = 0; i < MAX_ITEMDATA; i++)

  00323	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$221417[ebp], 0
  0032a	eb 09		 jmp	 SHORT $LN4@AddPeriodI@2
$LN3@AddPeriodI@2:
  0032c	8b 45 f4	 mov	 eax, DWORD PTR _i$221417[ebp]
  0032f	83 c0 01	 add	 eax, 1
  00332	89 45 f4	 mov	 DWORD PTR _i$221417[ebp], eax
$LN4@AddPeriodI@2:
  00335	83 7d f4 1e	 cmp	 DWORD PTR _i$221417[ebp], 30 ; 0000001eH
  00339	0f 8d 36 01 00
	00		 jge	 $LN2@AddPeriodI@2

; 108  : 	{
; 109  : 		if( !this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].bInUse )

  0033f	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  00342	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00348	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0034b	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  0034f	8b 45 f4	 mov	 eax, DWORD PTR _i$221417[ebp]
  00352	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00355	0f b6 4c 02 24	 movzx	 ecx, BYTE PTR [edx+eax+36]
  0035a	85 c9		 test	 ecx, ecx
  0035c	0f 85 0e 01 00
	00		 jne	 $LN1@AddPeriodI@2

; 110  : 		{
; 111  : 			this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].bInUse = TRUE;

  00362	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  00365	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  0036b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0036e	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  00372	8b 45 f4	 mov	 eax, DWORD PTR _i$221417[ebp]
  00375	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00378	c6 44 02 24 01	 mov	 BYTE PTR [edx+eax+36], 1

; 112  : 			this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].btType = 1;

  0037d	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  00380	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00386	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00389	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  0038d	8b 45 f4	 mov	 eax, DWORD PTR _i$221417[ebp]
  00390	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00393	c6 44 02 25 01	 mov	 BYTE PTR [edx+eax+37], 1

; 113  : 			this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].wItemCode = wItemCode;

  00398	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  0039b	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  003a1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003a4	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  003a8	8b 45 f4	 mov	 eax, DWORD PTR _i$221417[ebp]
  003ab	6b c0 1c	 imul	 eax, 28			; 0000001cH
  003ae	66 8b 4d 0c	 mov	 cx, WORD PTR _wItemCode$[ebp]
  003b2	66 89 4c 02 26	 mov	 WORD PTR [edx+eax+38], cx

; 114  : 			this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].btEffectType1 = btEffectType1;

  003b7	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  003ba	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  003c0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003c3	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  003c7	8b 45 f4	 mov	 eax, DWORD PTR _i$221417[ebp]
  003ca	6b c0 1c	 imul	 eax, 28			; 0000001cH
  003cd	8a 4d 10	 mov	 cl, BYTE PTR _btEffectType1$[ebp]
  003d0	88 4c 02 29	 mov	 BYTE PTR [edx+eax+41], cl

; 115  : 			this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].btEffectType2 = btEffectType2;

  003d4	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  003d7	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  003dd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003e0	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  003e4	8b 45 f4	 mov	 eax, DWORD PTR _i$221417[ebp]
  003e7	6b c0 1c	 imul	 eax, 28			; 0000001cH
  003ea	8a 4d 14	 mov	 cl, BYTE PTR _btEffectType2$[ebp]
  003ed	88 4c 02 2a	 mov	 BYTE PTR [edx+eax+42], cl

; 116  : 			this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].lCurentDate = this->GetCurrentDate();

  003f1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003f4	e8 00 00 00 00	 call	 ?GetCurrentDate@CPeriodItemEx@@QAEJXZ ; CPeriodItemEx::GetCurrentDate
  003f9	8b 4d f8	 mov	 ecx, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  003fc	69 c9 6c 03 00
	00		 imul	 ecx, 876		; 0000036cH
  00402	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00405	8d 4c 0a 04	 lea	 ecx, DWORD PTR [edx+ecx+4]
  00409	8b 55 f4	 mov	 edx, DWORD PTR _i$221417[ebp]
  0040c	6b d2 1c	 imul	 edx, 28			; 0000001cH
  0040f	89 44 11 30	 mov	 DWORD PTR [ecx+edx+48], eax

; 117  : 			this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].lExpireDate = lExpireDate;

  00413	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  00416	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  0041c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0041f	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  00423	8b 45 f4	 mov	 eax, DWORD PTR _i$221417[ebp]
  00426	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00429	8b 4d 1c	 mov	 ecx, DWORD PTR _lExpireDate$[ebp]
  0042c	89 4c 02 34	 mov	 DWORD PTR [edx+eax+52], ecx

; 118  : 			this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].iDuration = iDuration;

  00430	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  00433	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00439	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0043c	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  00440	8b 45 f4	 mov	 eax, DWORD PTR _i$221417[ebp]
  00443	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00446	8b 4d 18	 mov	 ecx, DWORD PTR _iDuration$[ebp]
  00449	89 4c 02 3c	 mov	 DWORD PTR [edx+eax+60], ecx

; 119  : 			this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].iUnk3 = 0;

  0044d	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  00450	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00456	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00459	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  0045d	8b 45 f4	 mov	 eax, DWORD PTR _i$221417[ebp]
  00460	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00463	c7 44 02 38 00
	00 00 00	 mov	 DWORD PTR [edx+eax+56], 0

; 120  : 			return i;

  0046b	8b 45 f4	 mov	 eax, DWORD PTR _i$221417[ebp]
  0046e	eb 08		 jmp	 SHORT $LN6@AddPeriodI@2
$LN1@AddPeriodI@2:

; 121  : 		}
; 122  : 	}

  00470	e9 b7 fe ff ff	 jmp	 $LN3@AddPeriodI@2
$LN2@AddPeriodI@2:

; 123  : 
; 124  : 	return -1;

  00475	83 c8 ff	 or	 eax, -1
$LN6@AddPeriodI@2:

; 125  : }

  00478	5f		 pop	 edi
  00479	5e		 pop	 esi
  0047a	5b		 pop	 ebx
  0047b	8b e5		 mov	 esp, ebp
  0047d	5d		 pop	 ebp
  0047e	c2 18 00	 ret	 24			; 00000018H
?AddPeriodItemData@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GEEHJ@Z ENDP ; CPeriodItemEx::AddPeriodItemData
_TEXT	ENDS
PUBLIC	?GetItemFromInventory@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GK@Z ; CPeriodItemEx::GetItemFromInventory
PUBLIC	?GetExpireDate@CPeriodItemEx@@QAEJH@Z		; CPeriodItemEx::GetExpireDate
PUBLIC	?AddPeriodItemData@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GKH@Z ; CPeriodItemEx::AddPeriodItemData
EXTRN	?SetPeriodItem@CItem@@QAEXXZ:PROC		; CItem::SetPeriodItem
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$221433 = -20						; size = 4
_iInventoryPosition$ = -16				; size = 4
_lExpireDate$ = -12					; size = 4
_iPeriodItemSlotIndex$ = -8				; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_wItemCode$ = 12					; size = 2
_dwSerial$ = 16						; size = 4
_iDuration$ = 20					; size = 4
?AddPeriodItemData@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GKH@Z PROC ; CPeriodItemEx::AddPeriodItemData
; _this$ = ecx

; 129  : {

  00490	55		 push	 ebp
  00491	8b ec		 mov	 ebp, esp
  00493	83 ec 54	 sub	 esp, 84			; 00000054H
  00496	53		 push	 ebx
  00497	56		 push	 esi
  00498	57		 push	 edi
  00499	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 130  : 	int iPeriodItemSlotIndex = lpObj->m_PeriodDataIndex;

  0049c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0049f	8b 88 20 26 00
	00		 mov	 ecx, DWORD PTR [eax+9760]
  004a5	89 4d f8	 mov	 DWORD PTR _iPeriodItemSlotIndex$[ebp], ecx

; 131  : 	long lExpireDate = 0;

  004a8	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _lExpireDate$[ebp], 0

; 132  : 	int iInventoryPosition = 0;

  004af	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _iInventoryPosition$[ebp], 0

; 133  : 
; 134  : 	if( !IsCorrectUser(lpObj) )

  004b6	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  004b9	50		 push	 eax
  004ba	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004bd	e8 00 00 00 00	 call	 ?IsCorrectUser@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@@Z ; CPeriodItemEx::IsCorrectUser
  004c2	0f b6 c8	 movzx	 ecx, al
  004c5	85 c9		 test	 ecx, ecx
  004c7	75 08		 jne	 SHORT $LN6@AddPeriodI@3

; 135  : 		return -1;

  004c9	83 c8 ff	 or	 eax, -1
  004cc	e9 83 01 00 00	 jmp	 $LN7@AddPeriodI@3
$LN6@AddPeriodI@3:

; 136  : 
; 137  : 	for(int i = 0; i < MAX_ITEMDATA; i++)

  004d1	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _i$221433[ebp], 0
  004d8	eb 09		 jmp	 SHORT $LN5@AddPeriodI@3
$LN4@AddPeriodI@3:
  004da	8b 45 ec	 mov	 eax, DWORD PTR _i$221433[ebp]
  004dd	83 c0 01	 add	 eax, 1
  004e0	89 45 ec	 mov	 DWORD PTR _i$221433[ebp], eax
$LN5@AddPeriodI@3:
  004e3	83 7d ec 1e	 cmp	 DWORD PTR _i$221433[ebp], 30 ; 0000001eH
  004e7	0f 8d 64 01 00
	00		 jge	 $LN3@AddPeriodI@3

; 138  : 	{
; 139  : 		if( !this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].bInUse )

  004ed	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  004f0	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  004f6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004f9	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  004fd	8b 45 ec	 mov	 eax, DWORD PTR _i$221433[ebp]
  00500	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00503	0f b6 4c 02 24	 movzx	 ecx, BYTE PTR [edx+eax+36]
  00508	85 c9		 test	 ecx, ecx
  0050a	0f 85 3c 01 00
	00		 jne	 $LN2@AddPeriodI@3

; 140  : 		{
; 141  : 			lExpireDate = GetExpireDate(iDuration);

  00510	8b 45 14	 mov	 eax, DWORD PTR _iDuration$[ebp]
  00513	50		 push	 eax
  00514	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00517	e8 00 00 00 00	 call	 ?GetExpireDate@CPeriodItemEx@@QAEJH@Z ; CPeriodItemEx::GetExpireDate
  0051c	89 45 f4	 mov	 DWORD PTR _lExpireDate$[ebp], eax

; 142  : 			this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].bInUse = TRUE;

  0051f	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  00522	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00528	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0052b	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  0052f	8b 45 ec	 mov	 eax, DWORD PTR _i$221433[ebp]
  00532	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00535	c6 44 02 24 01	 mov	 BYTE PTR [edx+eax+36], 1

; 143  : 			this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].btType = 2;

  0053a	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  0053d	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00543	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00546	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  0054a	8b 45 ec	 mov	 eax, DWORD PTR _i$221433[ebp]
  0054d	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00550	c6 44 02 25 02	 mov	 BYTE PTR [edx+eax+37], 2

; 144  : 			this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].wItemCode = wItemCode;

  00555	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  00558	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  0055e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00561	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  00565	8b 45 ec	 mov	 eax, DWORD PTR _i$221433[ebp]
  00568	6b c0 1c	 imul	 eax, 28			; 0000001cH
  0056b	66 8b 4d 0c	 mov	 cx, WORD PTR _wItemCode$[ebp]
  0056f	66 89 4c 02 26	 mov	 WORD PTR [edx+eax+38], cx

; 145  : 			this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].dwSerial = dwSerial;

  00574	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  00577	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  0057d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00580	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  00584	8b 45 ec	 mov	 eax, DWORD PTR _i$221433[ebp]
  00587	6b c0 1c	 imul	 eax, 28			; 0000001cH
  0058a	8b 4d 10	 mov	 ecx, DWORD PTR _dwSerial$[ebp]
  0058d	89 4c 02 2c	 mov	 DWORD PTR [edx+eax+44], ecx

; 146  : 			this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].lCurentDate = this->GetCurrentDate();

  00591	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00594	e8 00 00 00 00	 call	 ?GetCurrentDate@CPeriodItemEx@@QAEJXZ ; CPeriodItemEx::GetCurrentDate
  00599	8b 4d f8	 mov	 ecx, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  0059c	69 c9 6c 03 00
	00		 imul	 ecx, 876		; 0000036cH
  005a2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  005a5	8d 4c 0a 04	 lea	 ecx, DWORD PTR [edx+ecx+4]
  005a9	8b 55 ec	 mov	 edx, DWORD PTR _i$221433[ebp]
  005ac	6b d2 1c	 imul	 edx, 28			; 0000001cH
  005af	89 44 11 30	 mov	 DWORD PTR [ecx+edx+48], eax

; 147  : 			this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].lExpireDate = lExpireDate;

  005b3	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  005b6	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  005bc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005bf	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  005c3	8b 45 ec	 mov	 eax, DWORD PTR _i$221433[ebp]
  005c6	6b c0 1c	 imul	 eax, 28			; 0000001cH
  005c9	8b 4d f4	 mov	 ecx, DWORD PTR _lExpireDate$[ebp]
  005cc	89 4c 02 34	 mov	 DWORD PTR [edx+eax+52], ecx

; 148  : 			this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].iDuration = iDuration;

  005d0	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  005d3	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  005d9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005dc	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  005e0	8b 45 ec	 mov	 eax, DWORD PTR _i$221433[ebp]
  005e3	6b c0 1c	 imul	 eax, 28			; 0000001cH
  005e6	8b 4d 14	 mov	 ecx, DWORD PTR _iDuration$[ebp]
  005e9	89 4c 02 3c	 mov	 DWORD PTR [edx+eax+60], ecx

; 149  : 			this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].iUnk3 = 0;

  005ed	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  005f0	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  005f6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005f9	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  005fd	8b 45 ec	 mov	 eax, DWORD PTR _i$221433[ebp]
  00600	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00603	c7 44 02 38 00
	00 00 00	 mov	 DWORD PTR [edx+eax+56], 0

; 150  : 
; 151  : 			iInventoryPosition = GetItemFromInventory(lpObj,wItemCode,dwSerial);

  0060b	8b 45 10	 mov	 eax, DWORD PTR _dwSerial$[ebp]
  0060e	50		 push	 eax
  0060f	0f b7 4d 0c	 movzx	 ecx, WORD PTR _wItemCode$[ebp]
  00613	51		 push	 ecx
  00614	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00617	52		 push	 edx
  00618	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0061b	e8 00 00 00 00	 call	 ?GetItemFromInventory@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GK@Z ; CPeriodItemEx::GetItemFromInventory
  00620	89 45 f0	 mov	 DWORD PTR _iInventoryPosition$[ebp], eax

; 152  : 
; 153  : 			if( iInventoryPosition == -1 )

  00623	83 7d f0 ff	 cmp	 DWORD PTR _iInventoryPosition$[ebp], -1
  00627	75 07		 jne	 SHORT $LN1@AddPeriodI@3

; 154  : 				return -2;

  00629	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  0062e	eb 24		 jmp	 SHORT $LN7@AddPeriodI@3
$LN1@AddPeriodI@3:

; 155  : 
; 156  : 			lpObj->pInventory[iInventoryPosition].SetPeriodItem();

  00630	8b 4d f0	 mov	 ecx, DWORD PTR _iInventoryPosition$[ebp]
  00633	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  00639	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0063c	03 88 24 0e 00
	00		 add	 ecx, DWORD PTR [eax+3620]
  00642	e8 00 00 00 00	 call	 ?SetPeriodItem@CItem@@QAEXXZ ; CItem::SetPeriodItem

; 157  : 			return i;

  00647	8b 45 ec	 mov	 eax, DWORD PTR _i$221433[ebp]
  0064a	eb 08		 jmp	 SHORT $LN7@AddPeriodI@3
$LN2@AddPeriodI@3:

; 158  : 		}
; 159  : 	}

  0064c	e9 89 fe ff ff	 jmp	 $LN4@AddPeriodI@3
$LN3@AddPeriodI@3:

; 160  : 
; 161  : return -1;

  00651	83 c8 ff	 or	 eax, -1
$LN7@AddPeriodI@3:

; 162  : }

  00654	5f		 pop	 edi
  00655	5e		 pop	 esi
  00656	5b		 pop	 ebx
  00657	8b e5		 mov	 esp, ebp
  00659	5d		 pop	 ebp
  0065a	c2 10 00	 ret	 16			; 00000010H
?AddPeriodItemData@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GKH@Z ENDP ; CPeriodItemEx::AddPeriodItemData
_TEXT	ENDS
PUBLIC	?AddPeriodItemData@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GKHJ@Z ; CPeriodItemEx::AddPeriodItemData
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$221450 = -16						; size = 4
_iItemSlotIndex$ = -12					; size = 4
_iPeriodItemSlotIndex$ = -8				; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_wItemCode$ = 12					; size = 2
_dwSerial$ = 16						; size = 4
_iDuration$ = 20					; size = 4
_lExpireDate$ = 24					; size = 4
?AddPeriodItemData@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GKHJ@Z PROC ; CPeriodItemEx::AddPeriodItemData
; _this$ = ecx

; 166  : {

  00660	55		 push	 ebp
  00661	8b ec		 mov	 ebp, esp
  00663	83 ec 50	 sub	 esp, 80			; 00000050H
  00666	53		 push	 ebx
  00667	56		 push	 esi
  00668	57		 push	 edi
  00669	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 167  : 	int iPeriodItemSlotIndex = lpObj->m_PeriodDataIndex;

  0066c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0066f	8b 88 20 26 00
	00		 mov	 ecx, DWORD PTR [eax+9760]
  00675	89 4d f8	 mov	 DWORD PTR _iPeriodItemSlotIndex$[ebp], ecx

; 168  : 
; 169  : 	if( !IsCorrectUser(lpObj) )

  00678	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0067b	50		 push	 eax
  0067c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0067f	e8 00 00 00 00	 call	 ?IsCorrectUser@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@@Z ; CPeriodItemEx::IsCorrectUser
  00684	0f b6 c8	 movzx	 ecx, al
  00687	85 c9		 test	 ecx, ecx
  00689	75 08		 jne	 SHORT $LN6@AddPeriodI@4

; 170  : 		return -1;

  0068b	83 c8 ff	 or	 eax, -1
  0068e	e9 34 01 00 00	 jmp	 $LN7@AddPeriodI@4
$LN6@AddPeriodI@4:

; 171  : 
; 172  : 	int iItemSlotIndex = 0;

  00693	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _iItemSlotIndex$[ebp], 0

; 173  : 
; 174  : 	for(int i = 0; i < MAX_ITEMDATA; i++)

  0069a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$221450[ebp], 0
  006a1	eb 09		 jmp	 SHORT $LN5@AddPeriodI@4
$LN4@AddPeriodI@4:
  006a3	8b 45 f0	 mov	 eax, DWORD PTR _i$221450[ebp]
  006a6	83 c0 01	 add	 eax, 1
  006a9	89 45 f0	 mov	 DWORD PTR _i$221450[ebp], eax
$LN5@AddPeriodI@4:
  006ac	83 7d f0 1e	 cmp	 DWORD PTR _i$221450[ebp], 30 ; 0000001eH
  006b0	0f 8d 0e 01 00
	00		 jge	 $LN3@AddPeriodI@4

; 175  : 	{
; 176  : 		if( !this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].bInUse )

  006b6	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  006b9	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  006bf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006c2	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  006c6	8b 45 f0	 mov	 eax, DWORD PTR _i$221450[ebp]
  006c9	6b c0 1c	 imul	 eax, 28			; 0000001cH
  006cc	0f b6 4c 02 24	 movzx	 ecx, BYTE PTR [edx+eax+36]
  006d1	85 c9		 test	 ecx, ecx
  006d3	0f 85 e6 00 00
	00		 jne	 $LN2@AddPeriodI@4

; 177  : 		{
; 178  : 
; 179  : 			this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].bInUse = TRUE;

  006d9	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  006dc	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  006e2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006e5	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  006e9	8b 45 f0	 mov	 eax, DWORD PTR _i$221450[ebp]
  006ec	6b c0 1c	 imul	 eax, 28			; 0000001cH
  006ef	c6 44 02 24 01	 mov	 BYTE PTR [edx+eax+36], 1

; 180  : 			this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].btType = 2;

  006f4	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  006f7	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  006fd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00700	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  00704	8b 45 f0	 mov	 eax, DWORD PTR _i$221450[ebp]
  00707	6b c0 1c	 imul	 eax, 28			; 0000001cH
  0070a	c6 44 02 25 02	 mov	 BYTE PTR [edx+eax+37], 2

; 181  : 			this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].wItemCode = wItemCode;

  0070f	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  00712	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00718	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0071b	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  0071f	8b 45 f0	 mov	 eax, DWORD PTR _i$221450[ebp]
  00722	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00725	66 8b 4d 0c	 mov	 cx, WORD PTR _wItemCode$[ebp]
  00729	66 89 4c 02 26	 mov	 WORD PTR [edx+eax+38], cx

; 182  : 			this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].dwSerial = dwSerial;

  0072e	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  00731	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00737	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0073a	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  0073e	8b 45 f0	 mov	 eax, DWORD PTR _i$221450[ebp]
  00741	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00744	8b 4d 10	 mov	 ecx, DWORD PTR _dwSerial$[ebp]
  00747	89 4c 02 2c	 mov	 DWORD PTR [edx+eax+44], ecx

; 183  : 			this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].lExpireDate = lExpireDate;

  0074b	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  0074e	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00754	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00757	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  0075b	8b 45 f0	 mov	 eax, DWORD PTR _i$221450[ebp]
  0075e	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00761	8b 4d 18	 mov	 ecx, DWORD PTR _lExpireDate$[ebp]
  00764	89 4c 02 34	 mov	 DWORD PTR [edx+eax+52], ecx

; 184  : 			this->m_PeriodData[iPeriodItemSlotIndex].itemData[i].iDuration = iDuration;

  00768	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodItemSlotIndex$[ebp]
  0076b	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00771	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00774	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  00778	8b 45 f0	 mov	 eax, DWORD PTR _i$221450[ebp]
  0077b	6b c0 1c	 imul	 eax, 28			; 0000001cH
  0077e	8b 4d 14	 mov	 ecx, DWORD PTR _iDuration$[ebp]
  00781	89 4c 02 3c	 mov	 DWORD PTR [edx+eax+60], ecx

; 185  : 
; 186  : 			iItemSlotIndex = GetItemFromInventory(lpObj,wItemCode,dwSerial);

  00785	8b 45 10	 mov	 eax, DWORD PTR _dwSerial$[ebp]
  00788	50		 push	 eax
  00789	0f b7 4d 0c	 movzx	 ecx, WORD PTR _wItemCode$[ebp]
  0078d	51		 push	 ecx
  0078e	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00791	52		 push	 edx
  00792	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00795	e8 00 00 00 00	 call	 ?GetItemFromInventory@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GK@Z ; CPeriodItemEx::GetItemFromInventory
  0079a	89 45 f4	 mov	 DWORD PTR _iItemSlotIndex$[ebp], eax

; 187  : 
; 188  : 			if( iItemSlotIndex != -1 )

  0079d	83 7d f4 ff	 cmp	 DWORD PTR _iItemSlotIndex$[ebp], -1
  007a1	74 17		 je	 SHORT $LN1@AddPeriodI@4

; 189  : 			{
; 190  : 				lpObj->pInventory[iItemSlotIndex].SetPeriodItem();

  007a3	8b 4d f4	 mov	 ecx, DWORD PTR _iItemSlotIndex$[ebp]
  007a6	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  007ac	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  007af	03 88 24 0e 00
	00		 add	 ecx, DWORD PTR [eax+3620]
  007b5	e8 00 00 00 00	 call	 ?SetPeriodItem@CItem@@QAEXXZ ; CItem::SetPeriodItem
$LN1@AddPeriodI@4:

; 191  : 			}
; 192  : 
; 193  : 			return i;

  007ba	8b 45 f0	 mov	 eax, DWORD PTR _i$221450[ebp]
  007bd	eb 08		 jmp	 SHORT $LN7@AddPeriodI@4
$LN2@AddPeriodI@4:

; 194  : 		}
; 195  : 	}

  007bf	e9 df fe ff ff	 jmp	 $LN4@AddPeriodI@4
$LN3@AddPeriodI@4:

; 196  : 	return -1;

  007c4	83 c8 ff	 or	 eax, -1
$LN7@AddPeriodI@4:

; 197  : }

  007c7	5f		 pop	 edi
  007c8	5e		 pop	 esi
  007c9	5b		 pop	 ebx
  007ca	8b e5		 mov	 esp, ebp
  007cc	5d		 pop	 ebp
  007cd	c2 14 00	 ret	 20			; 00000014H
?AddPeriodItemData@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GKHJ@Z ENDP ; CPeriodItemEx::AddPeriodItemData
_TEXT	ENDS
PUBLIC	?RequestPeriodItemDelete@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@PAUITEMDATA@@@Z ; CPeriodItemEx::RequestPeriodItemDelete
PUBLIC	?SetDisableItemToExpire@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@H@Z ; CPeriodItemEx::SetDisableItemToExpire
PUBLIC	__$ArrayPad$
PUBLIC	?RemovePeriodItemData@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@EGK@Z ; CPeriodItemEx::RemovePeriodItemData
EXTRN	?MsgSendV2@@YAXPAUOBJECTSTRUCT@@PAEH@Z:PROC	; MsgSendV2
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	?LevelSmallConvert@@YAEHH@Z:PROC		; LevelSmallConvert
EXTRN	?ItemByteConvert@@YAXPAEVCItem@@@Z:PROC		; ItemByteConvert
EXTRN	?PHeadSetB@@YAXPAEEH@Z:PROC			; PHeadSetB
EXTRN	?gObjMakePreviewCharSet@@YAXH@Z:PROC		; gObjMakePreviewCharSet
EXTRN	?SkillChangeUse@CObjUseSkill@@QAEHH@Z:PROC	; CObjUseSkill::SkillChangeUse
EXTRN	?gObjUseSkill@@3VCObjUseSkill@@A:DWORD		; gObjUseSkill
EXTRN	?gObjCalCharacter@@YAXH@Z:PROC			; gObjCalCharacter
EXTRN	?GCInventoryItemDeleteSend@@YAXHEE@Z:PROC	; GCInventoryItemDeleteSend
EXTRN	?gObjInventoryDeleteItem@@YAEHH@Z:PROC		; gObjInventoryDeleteItem
EXTRN	?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z:PROC ; gObjRemoveBuffEffect
EXTRN	?GetBuffInfo@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@H@Z:PROC ; CBuffManager::GetBuffInfo
EXTRN	?g_BuffManager@@3VCBuffManager@@A:DWORD		; g_BuffManager
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_ItemData$ = -64					; size = 28
_pChange$221478 = -36					; size = 17
_iInventoryPosition$221473 = -16			; size = 4
_lpBuffData$221467 = -12				; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_btItemType$ = 12					; size = 1
_wItemCode$ = 16					; size = 2
_dwSerial$ = 20						; size = 4
?RemovePeriodItemData@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@EGK@Z PROC ; CPeriodItemEx::RemovePeriodItemData
; _this$ = ecx

; 201  : {

  007d0	55		 push	 ebp
  007d1	8b ec		 mov	 ebp, esp
  007d3	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  007d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  007de	33 c5		 xor	 eax, ebp
  007e0	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  007e3	53		 push	 ebx
  007e4	56		 push	 esi
  007e5	57		 push	 edi
  007e6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 202  : 	if( !lpObj )

  007e9	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  007ed	75 07		 jne	 SHORT $LN13@RemovePeri@2

; 203  : 		return false;

  007ef	32 c0		 xor	 al, al
  007f1	e9 ff 01 00 00	 jmp	 $LN14@RemovePeri@2
$LN13@RemovePeri@2:

; 204  : 
; 205  : 	if( lpObj->Type != OBJ_USER || lpObj->Connected < 2 )

  007f6	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  007f9	0f b7 48 68	 movzx	 ecx, WORD PTR [eax+104]
  007fd	83 f9 01	 cmp	 ecx, 1
  00800	75 09		 jne	 SHORT $LN11@RemovePeri@2
  00802	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00805	83 78 04 02	 cmp	 DWORD PTR [eax+4], 2
  00809	7d 07		 jge	 SHORT $LN12@RemovePeri@2
$LN11@RemovePeri@2:

; 206  : 		return false;

  0080b	32 c0		 xor	 al, al
  0080d	e9 e3 01 00 00	 jmp	 $LN14@RemovePeri@2
$LN12@RemovePeri@2:

; 207  : 
; 208  : 	if( btItemType == 1 )

  00812	0f b6 45 0c	 movzx	 eax, BYTE PTR _btItemType$[ebp]
  00816	83 f8 01	 cmp	 eax, 1
  00819	75 3e		 jne	 SHORT $LN10@RemovePeri@2

; 209  : 	{
; 210  : 		BUFF_EFFECT_DATE* lpBuffData = 0;

  0081b	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _lpBuffData$221467[ebp], 0

; 211  : 		lpBuffData = (LPBUFF_EFFECT_DATE)g_BuffManager.GetBuffInfo(wItemCode);

  00822	0f b7 45 10	 movzx	 eax, WORD PTR _wItemCode$[ebp]
  00826	50		 push	 eax
  00827	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  0082c	e8 00 00 00 00	 call	 ?GetBuffInfo@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@H@Z ; CBuffManager::GetBuffInfo
  00831	89 45 f4	 mov	 DWORD PTR _lpBuffData$221467[ebp], eax

; 212  : 
; 213  : 		if( !lpBuffData )

  00834	83 7d f4 00	 cmp	 DWORD PTR _lpBuffData$221467[ebp], 0
  00838	75 07		 jne	 SHORT $LN9@RemovePeri@2

; 214  : 			return false;

  0083a	32 c0		 xor	 al, al
  0083c	e9 b4 01 00 00	 jmp	 $LN14@RemovePeri@2
$LN9@RemovePeri@2:

; 215  : 
; 216  : 		gObjRemoveBuffEffect(lpObj,lpBuffData->btIndex);

  00841	8b 45 f4	 mov	 eax, DWORD PTR _lpBuffData$221467[ebp]
  00844	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00847	51		 push	 ecx
  00848	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0084b	52		 push	 edx
  0084c	e8 00 00 00 00	 call	 ?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjRemoveBuffEffect
  00851	83 c4 08	 add	 esp, 8
  00854	e9 76 01 00 00	 jmp	 $LN8@RemovePeri@2
$LN10@RemovePeri@2:

; 217  : 	}
; 218  : 	else if( btItemType == 2 )

  00859	0f b6 45 0c	 movzx	 eax, BYTE PTR _btItemType$[ebp]
  0085d	83 f8 02	 cmp	 eax, 2
  00860	0f 85 65 01 00
	00		 jne	 $LN7@RemovePeri@2

; 219  : 	{
; 220  : 		if( dwSerial == 0 )

  00866	83 7d 14 00	 cmp	 DWORD PTR _dwSerial$[ebp], 0
  0086a	75 07		 jne	 SHORT $LN6@RemovePeri@2

; 221  : 			return false;

  0086c	32 c0		 xor	 al, al
  0086e	e9 82 01 00 00	 jmp	 $LN14@RemovePeri@2
$LN6@RemovePeri@2:

; 222  : 
; 223  : 		int iInventoryPosition = 0;

  00873	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _iInventoryPosition$221473[ebp], 0

; 224  : 		iInventoryPosition = this->GetItemFromInventory(lpObj,wItemCode,dwSerial);

  0087a	8b 45 14	 mov	 eax, DWORD PTR _dwSerial$[ebp]
  0087d	50		 push	 eax
  0087e	0f b7 4d 10	 movzx	 ecx, WORD PTR _wItemCode$[ebp]
  00882	51		 push	 ecx
  00883	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00886	52		 push	 edx
  00887	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0088a	e8 00 00 00 00	 call	 ?GetItemFromInventory@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GK@Z ; CPeriodItemEx::GetItemFromInventory
  0088f	89 45 f0	 mov	 DWORD PTR _iInventoryPosition$221473[ebp], eax

; 225  : 
; 226  : 		if( iInventoryPosition == -1 )

  00892	83 7d f0 ff	 cmp	 DWORD PTR _iInventoryPosition$221473[ebp], -1
  00896	75 07		 jne	 SHORT $LN5@RemovePeri@2

; 227  : 			return false;

  00898	32 c0		 xor	 al, al
  0089a	e9 56 01 00 00	 jmp	 $LN14@RemovePeri@2
$LN5@RemovePeri@2:

; 228  : 
; 229  : 		SetDisableItemToExpire(lpObj,iInventoryPosition);

  0089f	8b 45 f0	 mov	 eax, DWORD PTR _iInventoryPosition$221473[ebp]
  008a2	50		 push	 eax
  008a3	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  008a6	51		 push	 ecx
  008a7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008aa	e8 00 00 00 00	 call	 ?SetDisableItemToExpire@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@H@Z ; CPeriodItemEx::SetDisableItemToExpire

; 230  : 		//auto-deleting
; 231  : 		gObjInventoryDeleteItem(lpObj->m_Index, iInventoryPosition);

  008af	8b 45 f0	 mov	 eax, DWORD PTR _iInventoryPosition$221473[ebp]
  008b2	50		 push	 eax
  008b3	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  008b6	8b 11		 mov	 edx, DWORD PTR [ecx]
  008b8	52		 push	 edx
  008b9	e8 00 00 00 00	 call	 ?gObjInventoryDeleteItem@@YAEHH@Z ; gObjInventoryDeleteItem
  008be	83 c4 08	 add	 esp, 8

; 232  : 		GCInventoryItemDeleteSend(lpObj->m_Index, iInventoryPosition, 1);

  008c1	6a 01		 push	 1
  008c3	0f b6 45 f0	 movzx	 eax, BYTE PTR _iInventoryPosition$221473[ebp]
  008c7	50		 push	 eax
  008c8	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  008cb	8b 11		 mov	 edx, DWORD PTR [ecx]
  008cd	52		 push	 edx
  008ce	e8 00 00 00 00	 call	 ?GCInventoryItemDeleteSend@@YAXHEE@Z ; GCInventoryItemDeleteSend
  008d3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 233  : 		gObjCalCharacter(lpObj->m_Index);

  008d6	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  008d9	8b 08		 mov	 ecx, DWORD PTR [eax]
  008db	51		 push	 ecx
  008dc	e8 00 00 00 00	 call	 ?gObjCalCharacter@@YAXH@Z ; gObjCalCharacter
  008e1	83 c4 04	 add	 esp, 4

; 234  : 		// ----
; 235  : 		if( iInventoryPosition < 12 )

  008e4	83 7d f0 0c	 cmp	 DWORD PTR _iInventoryPosition$221473[ebp], 12 ; 0000000cH
  008e8	0f 8d db 00 00
	00		 jge	 $LN4@RemovePeri@2

; 236  : 		{
; 237  : 			if( iInventoryPosition == 10 || iInventoryPosition == 11 )

  008ee	83 7d f0 0a	 cmp	 DWORD PTR _iInventoryPosition$221473[ebp], 10 ; 0000000aH
  008f2	74 06		 je	 SHORT $LN2@RemovePeri@2
  008f4	83 7d f0 0b	 cmp	 DWORD PTR _iInventoryPosition$221473[ebp], 11 ; 0000000bH
  008f8	75 10		 jne	 SHORT $LN3@RemovePeri@2
$LN2@RemovePeri@2:

; 238  : 			{
; 239  : 				gObjUseSkill.SkillChangeUse(lpObj->m_Index);

  008fa	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  008fd	8b 08		 mov	 ecx, DWORD PTR [eax]
  008ff	51		 push	 ecx
  00900	b9 00 00 00 00	 mov	 ecx, OFFSET ?gObjUseSkill@@3VCObjUseSkill@@A ; gObjUseSkill
  00905	e8 00 00 00 00	 call	 ?SkillChangeUse@CObjUseSkill@@QAEHH@Z ; CObjUseSkill::SkillChangeUse
$LN3@RemovePeri@2:

; 240  : 			}
; 241  : 			// ----
; 242  : 			gObjMakePreviewCharSet(lpObj->m_Index);

  0090a	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0090d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0090f	51		 push	 ecx
  00910	e8 00 00 00 00	 call	 ?gObjMakePreviewCharSet@@YAXH@Z ; gObjMakePreviewCharSet
  00915	83 c4 04	 add	 esp, 4

; 243  : 			PMSG_USEREQUIPMENTCHANGED pChange;
; 244  : 			PHeadSetB((LPBYTE)&pChange, 0x25, sizeof(pChange));

  00918	6a 11		 push	 17			; 00000011H
  0091a	6a 25		 push	 37			; 00000025H
  0091c	8d 45 dc	 lea	 eax, DWORD PTR _pChange$221478[ebp]
  0091f	50		 push	 eax
  00920	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  00925	83 c4 0c	 add	 esp, 12			; 0000000cH

; 245  : 			pChange.NumberH = SET_NUMBERH(lpObj->m_Index);

  00928	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0092b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0092d	c1 e9 08	 shr	 ecx, 8
  00930	88 4d df	 mov	 BYTE PTR _pChange$221478[ebp+3], cl

; 246  : 			pChange.NumberL = SET_NUMBERL(lpObj->m_Index);

  00933	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00936	8b 08		 mov	 ecx, DWORD PTR [eax]
  00938	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0093e	88 4d e0	 mov	 BYTE PTR _pChange$221478[ebp+4], cl

; 247  : 			ItemByteConvert(pChange.ItemInfo, lpObj->pInventory[iInventoryPosition]);

  00941	8b 45 f0	 mov	 eax, DWORD PTR _iInventoryPosition$221473[ebp]
  00944	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  0094a	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0094d	8b b1 24 0e 00
	00		 mov	 esi, DWORD PTR [ecx+3620]
  00953	03 f0		 add	 esi, eax
  00955	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  0095b	b9 35 00 00 00	 mov	 ecx, 53			; 00000035H
  00960	8b fc		 mov	 edi, esp
  00962	f3 a5		 rep movsd
  00964	8d 55 e1	 lea	 edx, DWORD PTR _pChange$221478[ebp+5]
  00967	52		 push	 edx
  00968	e8 00 00 00 00	 call	 ?ItemByteConvert@@YAXPAEVCItem@@@Z ; ItemByteConvert
  0096d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H

; 248  : 			pChange.ItemInfo[1] = iInventoryPosition <<  4;

  00973	8b 45 f0	 mov	 eax, DWORD PTR _iInventoryPosition$221473[ebp]
  00976	c1 e0 04	 shl	 eax, 4
  00979	88 45 e2	 mov	 BYTE PTR _pChange$221478[ebp+6], al

; 249  : 			pChange.ItemInfo[1] |= LevelSmallConvert(lpObj->m_Index, iInventoryPosition) & 0x0F;

  0097c	8b 45 f0	 mov	 eax, DWORD PTR _iInventoryPosition$221473[ebp]
  0097f	50		 push	 eax
  00980	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00983	8b 11		 mov	 edx, DWORD PTR [ecx]
  00985	52		 push	 edx
  00986	e8 00 00 00 00	 call	 ?LevelSmallConvert@@YAEHH@Z ; LevelSmallConvert
  0098b	83 c4 08	 add	 esp, 8
  0098e	0f b6 c0	 movzx	 eax, al
  00991	83 e0 0f	 and	 eax, 15			; 0000000fH
  00994	0f b6 4d e2	 movzx	 ecx, BYTE PTR _pChange$221478[ebp+6]
  00998	0b c8		 or	 ecx, eax
  0099a	88 4d e2	 mov	 BYTE PTR _pChange$221478[ebp+6], cl

; 250  : 			DataSend(lpObj->m_Index, (LPBYTE)&pChange, pChange.h.size);

  0099d	0f b6 45 dd	 movzx	 eax, BYTE PTR _pChange$221478[ebp+1]
  009a1	50		 push	 eax
  009a2	8d 4d dc	 lea	 ecx, DWORD PTR _pChange$221478[ebp]
  009a5	51		 push	 ecx
  009a6	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  009a9	8b 02		 mov	 eax, DWORD PTR [edx]
  009ab	50		 push	 eax
  009ac	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  009b1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 251  : 			MsgSendV2(lpObj, (LPBYTE)&pChange, pChange.h.size);

  009b4	0f b6 45 dd	 movzx	 eax, BYTE PTR _pChange$221478[ebp+1]
  009b8	50		 push	 eax
  009b9	8d 4d dc	 lea	 ecx, DWORD PTR _pChange$221478[ebp]
  009bc	51		 push	 ecx
  009bd	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  009c0	52		 push	 edx
  009c1	e8 00 00 00 00	 call	 ?MsgSendV2@@YAXPAUOBJECTSTRUCT@@PAEH@Z ; MsgSendV2
  009c6	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@RemovePeri@2:

; 252  : 		}
; 253  : 	}
; 254  : 	else

  009c9	eb 04		 jmp	 SHORT $LN8@RemovePeri@2
$LN7@RemovePeri@2:

; 255  : 	{
; 256  : 		return false;

  009cb	32 c0		 xor	 al, al
  009cd	eb 26		 jmp	 SHORT $LN14@RemovePeri@2
$LN8@RemovePeri@2:

; 257  : 	}
; 258  : 
; 259  : 
; 260  : 	ITEMDATA ItemData;
; 261  : 	ItemData.btType = btItemType;

  009cf	8a 45 0c	 mov	 al, BYTE PTR _btItemType$[ebp]
  009d2	88 45 c1	 mov	 BYTE PTR _ItemData$[ebp+1], al

; 262  : 	ItemData.wItemCode = wItemCode;

  009d5	66 8b 45 10	 mov	 ax, WORD PTR _wItemCode$[ebp]
  009d9	66 89 45 c2	 mov	 WORD PTR _ItemData$[ebp+2], ax

; 263  : 	ItemData.dwSerial = dwSerial;

  009dd	8b 45 14	 mov	 eax, DWORD PTR _dwSerial$[ebp]
  009e0	89 45 c8	 mov	 DWORD PTR _ItemData$[ebp+8], eax

; 264  : 
; 265  : 	RequestPeriodItemDelete(lpObj,&ItemData);

  009e3	8d 45 c0	 lea	 eax, DWORD PTR _ItemData$[ebp]
  009e6	50		 push	 eax
  009e7	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  009ea	51		 push	 ecx
  009eb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  009ee	e8 00 00 00 00	 call	 ?RequestPeriodItemDelete@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@PAUITEMDATA@@@Z ; CPeriodItemEx::RequestPeriodItemDelete

; 266  : 	return true;

  009f3	b0 01		 mov	 al, 1
$LN14@RemovePeri@2:

; 267  : }

  009f5	5f		 pop	 edi
  009f6	5e		 pop	 esi
  009f7	5b		 pop	 ebx
  009f8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  009fb	33 cd		 xor	 ecx, ebp
  009fd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00a02	8b e5		 mov	 esp, ebp
  00a04	5d		 pop	 ebp
  00a05	c2 10 00	 ret	 16			; 00000010H
?RemovePeriodItemData@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@EGK@Z ENDP ; CPeriodItemEx::RemovePeriodItemData
_TEXT	ENDS
PUBLIC	?RemovePeriodItemData@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@GK@Z ; CPeriodItemEx::RemovePeriodItemData
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_iInventoryPosition$ = -8				; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_wItemCode$ = 12					; size = 2
_dwSerial$ = 16						; size = 4
?RemovePeriodItemData@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@GK@Z PROC ; CPeriodItemEx::RemovePeriodItemData
; _this$ = ecx

; 271  : {

  00a10	55		 push	 ebp
  00a11	8b ec		 mov	 ebp, esp
  00a13	83 ec 48	 sub	 esp, 72			; 00000048H
  00a16	53		 push	 ebx
  00a17	56		 push	 esi
  00a18	57		 push	 edi
  00a19	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 272  : 	int iInventoryPosition = 0;

  00a1c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iInventoryPosition$[ebp], 0

; 273  : 
; 274  : 	if( !lpObj )

  00a23	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  00a27	75 07		 jne	 SHORT $LN4@RemovePeri@3

; 275  : 		return false;

  00a29	32 c0		 xor	 al, al
  00a2b	e9 82 00 00 00	 jmp	 $LN5@RemovePeri@3
$LN4@RemovePeri@3:

; 276  : 
; 277  : 	if( lpObj->Type != OBJ_USER || lpObj->Connected < PLAYER_LOGGED )

  00a30	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00a33	0f b7 48 68	 movzx	 ecx, WORD PTR [eax+104]
  00a37	83 f9 01	 cmp	 ecx, 1
  00a3a	75 09		 jne	 SHORT $LN2@RemovePeri@3
  00a3c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00a3f	83 78 04 02	 cmp	 DWORD PTR [eax+4], 2
  00a43	7d 04		 jge	 SHORT $LN3@RemovePeri@3
$LN2@RemovePeri@3:

; 278  : 		return false;

  00a45	32 c0		 xor	 al, al
  00a47	eb 69		 jmp	 SHORT $LN5@RemovePeri@3
$LN3@RemovePeri@3:

; 279  : 
; 280  : 	iInventoryPosition = this->GetItemFromInventory(lpObj,wItemCode,dwSerial);

  00a49	8b 45 10	 mov	 eax, DWORD PTR _dwSerial$[ebp]
  00a4c	50		 push	 eax
  00a4d	0f b7 4d 0c	 movzx	 ecx, WORD PTR _wItemCode$[ebp]
  00a51	51		 push	 ecx
  00a52	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00a55	52		 push	 edx
  00a56	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a59	e8 00 00 00 00	 call	 ?GetItemFromInventory@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GK@Z ; CPeriodItemEx::GetItemFromInventory
  00a5e	89 45 f8	 mov	 DWORD PTR _iInventoryPosition$[ebp], eax

; 281  : 
; 282  : 	if( iInventoryPosition == -1 )

  00a61	83 7d f8 ff	 cmp	 DWORD PTR _iInventoryPosition$[ebp], -1
  00a65	75 04		 jne	 SHORT $LN1@RemovePeri@3

; 283  : 		return false;

  00a67	32 c0		 xor	 al, al
  00a69	eb 47		 jmp	 SHORT $LN5@RemovePeri@3
$LN1@RemovePeri@3:

; 284  : 	//auto-deleting
; 285  : 	gObjInventoryDeleteItem(lpObj->m_Index, iInventoryPosition);

  00a6b	8b 45 f8	 mov	 eax, DWORD PTR _iInventoryPosition$[ebp]
  00a6e	50		 push	 eax
  00a6f	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00a72	8b 11		 mov	 edx, DWORD PTR [ecx]
  00a74	52		 push	 edx
  00a75	e8 00 00 00 00	 call	 ?gObjInventoryDeleteItem@@YAEHH@Z ; gObjInventoryDeleteItem
  00a7a	83 c4 08	 add	 esp, 8

; 286  : 	GCInventoryItemDeleteSend(lpObj->m_Index, iInventoryPosition, 1);

  00a7d	6a 01		 push	 1
  00a7f	0f b6 45 f8	 movzx	 eax, BYTE PTR _iInventoryPosition$[ebp]
  00a83	50		 push	 eax
  00a84	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00a87	8b 11		 mov	 edx, DWORD PTR [ecx]
  00a89	52		 push	 edx
  00a8a	e8 00 00 00 00	 call	 ?GCInventoryItemDeleteSend@@YAXHEE@Z ; GCInventoryItemDeleteSend
  00a8f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 287  : 	gObjCalCharacter(lpObj->m_Index);

  00a92	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00a95	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a97	51		 push	 ecx
  00a98	e8 00 00 00 00	 call	 ?gObjCalCharacter@@YAXH@Z ; gObjCalCharacter
  00a9d	83 c4 04	 add	 esp, 4

; 288  : 	// ----
; 289  : 	this->SetDisableItemToExpire(lpObj,iInventoryPosition);

  00aa0	8b 45 f8	 mov	 eax, DWORD PTR _iInventoryPosition$[ebp]
  00aa3	50		 push	 eax
  00aa4	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00aa7	51		 push	 ecx
  00aa8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00aab	e8 00 00 00 00	 call	 ?SetDisableItemToExpire@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@H@Z ; CPeriodItemEx::SetDisableItemToExpire

; 290  : 	return true;

  00ab0	b0 01		 mov	 al, 1
$LN5@RemovePeri@3:

; 291  : }

  00ab2	5f		 pop	 edi
  00ab3	5e		 pop	 esi
  00ab4	5b		 pop	 ebx
  00ab5	8b e5		 mov	 esp, ebp
  00ab7	5d		 pop	 ebp
  00ab8	c2 0c 00	 ret	 12			; 0000000cH
?RemovePeriodItemData@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@GK@Z ENDP ; CPeriodItemEx::RemovePeriodItemData
_TEXT	ENDS
PUBLIC	??_C@_0IO@EPPCOPIH@?$FLPeriodItemEx?$FN?$FLRemove?5PeriodItem@ ; `string'
PUBLIC	?CheckExpireDate@CPeriodItemEx@@QAE_NJ@Z	; CPeriodItemEx::CheckExpireDate
PUBLIC	?CheckPeriodData@CPeriodItemEx@@QAEXXZ		; CPeriodItemEx::CheckPeriodData
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?ItemAttribute@@3PAUITEM_ATTRIBUTE@@A:BYTE	; ItemAttribute
;	COMDAT ??_C@_0IO@EPPCOPIH@?$FLPeriodItemEx?$FN?$FLRemove?5PeriodItem@
CONST	SEGMENT
??_C@_0IO@EPPCOPIH@?$FLPeriodItemEx?$FN?$FLRemove?5PeriodItem@ DB '[Perio'
	DB	'dItemEx][Remove PeriodItem] Expire PeriodItem Data. User Id :'
	DB	' %s(%d), Name : %s, Item : %s(%d), Type : %d, Serial : %u, Ex'
	DB	'pireDate : %d', 00H				; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_iItemSlotIndex$221510 = -16				; size = 4
_i$221504 = -12						; size = 4
_lpObj$ = -8						; size = 4
_this$ = -4						; size = 4
?CheckPeriodData@CPeriodItemEx@@QAEXXZ PROC		; CPeriodItemEx::CheckPeriodData
; _this$ = ecx

; 295  : {

  00ac0	55		 push	 ebp
  00ac1	8b ec		 mov	 ebp, esp
  00ac3	83 ec 50	 sub	 esp, 80			; 00000050H
  00ac6	53		 push	 ebx
  00ac7	56		 push	 esi
  00ac8	57		 push	 edi
  00ac9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 296  : 	LPOBJ lpObj = 0;

  00acc	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _lpObj$[ebp], 0

; 297  : 
; 298  : 	for(int i = 0; i < OBJMAXUSER; i++)

  00ad3	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$221504[ebp], 0
  00ada	eb 09		 jmp	 SHORT $LN9@CheckPerio
$LN8@CheckPerio:
  00adc	8b 45 f4	 mov	 eax, DWORD PTR _i$221504[ebp]
  00adf	83 c0 01	 add	 eax, 1
  00ae2	89 45 f4	 mov	 DWORD PTR _i$221504[ebp], eax
$LN9@CheckPerio:
  00ae5	81 7d f4 e8 03
	00 00		 cmp	 DWORD PTR _i$221504[ebp], 1000 ; 000003e8H
  00aec	0f 8d 2b 02 00
	00		 jge	 $LN10@CheckPerio

; 299  : 	{
; 300  : 		if( this->m_PeriodData[i].bInUse == true && this->m_PeriodData[i].lpObj != NULL )

  00af2	8b 45 f4	 mov	 eax, DWORD PTR _i$221504[ebp]
  00af5	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00afb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00afe	0f b6 54 01 04	 movzx	 edx, BYTE PTR [ecx+eax+4]
  00b03	83 fa 01	 cmp	 edx, 1
  00b06	0f 85 0c 02 00
	00		 jne	 $LN6@CheckPerio
  00b0c	8b 45 f4	 mov	 eax, DWORD PTR _i$221504[ebp]
  00b0f	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00b15	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b18	83 7c 01 0c 00	 cmp	 DWORD PTR [ecx+eax+12], 0
  00b1d	0f 84 f5 01 00
	00		 je	 $LN6@CheckPerio

; 301  : 		{
; 302  : 			lpObj = this->m_PeriodData[i].lpObj;

  00b23	8b 45 f4	 mov	 eax, DWORD PTR _i$221504[ebp]
  00b26	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00b2c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b2f	8b 54 01 0c	 mov	 edx, DWORD PTR [ecx+eax+12]
  00b33	89 55 f8	 mov	 DWORD PTR _lpObj$[ebp], edx

; 303  : 
; 304  : 			if( lpObj->Type == OBJ_USER && lpObj->Connected >= PLAYER_LOGGED )

  00b36	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00b39	0f b7 48 68	 movzx	 ecx, WORD PTR [eax+104]
  00b3d	83 f9 01	 cmp	 ecx, 1
  00b40	0f 85 d2 01 00
	00		 jne	 $LN6@CheckPerio
  00b46	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00b49	83 78 04 02	 cmp	 DWORD PTR [eax+4], 2
  00b4d	0f 8c c5 01 00
	00		 jl	 $LN6@CheckPerio

; 305  : 			{
; 306  : 				for(int iItemSlotIndex = 0; iItemSlotIndex < MAX_ITEMDATA; iItemSlotIndex++)

  00b53	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _iItemSlotIndex$221510[ebp], 0
  00b5a	eb 09		 jmp	 SHORT $LN4@CheckPerio
$LN3@CheckPerio:
  00b5c	8b 45 f0	 mov	 eax, DWORD PTR _iItemSlotIndex$221510[ebp]
  00b5f	83 c0 01	 add	 eax, 1
  00b62	89 45 f0	 mov	 DWORD PTR _iItemSlotIndex$221510[ebp], eax
$LN4@CheckPerio:
  00b65	83 7d f0 1e	 cmp	 DWORD PTR _iItemSlotIndex$221510[ebp], 30 ; 0000001eH
  00b69	0f 8d a9 01 00
	00		 jge	 $LN6@CheckPerio

; 307  : 				{
; 308  : 					if( this->m_PeriodData[i].itemData[iItemSlotIndex].bInUse == true && this->CheckExpireDate(this->m_PeriodData[i].itemData[iItemSlotIndex].lExpireDate) == true )

  00b6f	8b 45 f4	 mov	 eax, DWORD PTR _i$221504[ebp]
  00b72	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00b78	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b7b	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  00b7f	8b 45 f0	 mov	 eax, DWORD PTR _iItemSlotIndex$221510[ebp]
  00b82	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00b85	0f b6 4c 02 24	 movzx	 ecx, BYTE PTR [edx+eax+36]
  00b8a	83 f9 01	 cmp	 ecx, 1
  00b8d	0f 85 80 01 00
	00		 jne	 $LN1@CheckPerio
  00b93	8b 45 f4	 mov	 eax, DWORD PTR _i$221504[ebp]
  00b96	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00b9c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b9f	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  00ba3	8b 45 f0	 mov	 eax, DWORD PTR _iItemSlotIndex$221510[ebp]
  00ba6	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00ba9	8b 4c 02 34	 mov	 ecx, DWORD PTR [edx+eax+52]
  00bad	51		 push	 ecx
  00bae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00bb1	e8 00 00 00 00	 call	 ?CheckExpireDate@CPeriodItemEx@@QAE_NJ@Z ; CPeriodItemEx::CheckExpireDate
  00bb6	0f b6 d0	 movzx	 edx, al
  00bb9	83 fa 01	 cmp	 edx, 1
  00bbc	0f 85 51 01 00
	00		 jne	 $LN1@CheckPerio

; 309  : 					{
; 310  : 						LogAddTD("[PeriodItemEx][Remove PeriodItem] Expire PeriodItem Data. User Id : %s(%d), Name : %s, Item : %s(%d), Type : %d, Serial : %u, ExpireDate : %d",
; 311  : 							lpObj->AccountID,lpObj->DBNumber,lpObj->Name,ItemAttribute[this->m_PeriodData[i].itemData[iItemSlotIndex].wItemCode].Name,this->m_PeriodData[i].itemData[iItemSlotIndex].wItemCode,this->m_PeriodData[i].itemData[iItemSlotIndex].btType,this->m_PeriodData[i].itemData[iItemSlotIndex].dwSerial,this->m_PeriodData[i].itemData[iItemSlotIndex].lExpireDate);

  00bc2	8b 45 f4	 mov	 eax, DWORD PTR _i$221504[ebp]
  00bc5	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00bcb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00bce	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  00bd2	8b 45 f0	 mov	 eax, DWORD PTR _iItemSlotIndex$221510[ebp]
  00bd5	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00bd8	8b 4c 02 34	 mov	 ecx, DWORD PTR [edx+eax+52]
  00bdc	51		 push	 ecx
  00bdd	8b 55 f4	 mov	 edx, DWORD PTR _i$221504[ebp]
  00be0	69 d2 6c 03 00
	00		 imul	 edx, 876		; 0000036cH
  00be6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00be9	8d 4c 10 04	 lea	 ecx, DWORD PTR [eax+edx+4]
  00bed	8b 55 f0	 mov	 edx, DWORD PTR _iItemSlotIndex$221510[ebp]
  00bf0	6b d2 1c	 imul	 edx, 28			; 0000001cH
  00bf3	8b 44 11 2c	 mov	 eax, DWORD PTR [ecx+edx+44]
  00bf7	50		 push	 eax
  00bf8	8b 4d f4	 mov	 ecx, DWORD PTR _i$221504[ebp]
  00bfb	69 c9 6c 03 00
	00		 imul	 ecx, 876		; 0000036cH
  00c01	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00c04	8d 44 0a 04	 lea	 eax, DWORD PTR [edx+ecx+4]
  00c08	8b 4d f0	 mov	 ecx, DWORD PTR _iItemSlotIndex$221510[ebp]
  00c0b	6b c9 1c	 imul	 ecx, 28			; 0000001cH
  00c0e	0f b6 54 08 25	 movzx	 edx, BYTE PTR [eax+ecx+37]
  00c13	52		 push	 edx
  00c14	8b 45 f4	 mov	 eax, DWORD PTR _i$221504[ebp]
  00c17	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00c1d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c20	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  00c24	8b 45 f0	 mov	 eax, DWORD PTR _iItemSlotIndex$221510[ebp]
  00c27	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00c2a	0f b7 4c 02 26	 movzx	 ecx, WORD PTR [edx+eax+38]
  00c2f	51		 push	 ecx
  00c30	8b 55 f4	 mov	 edx, DWORD PTR _i$221504[ebp]
  00c33	69 d2 6c 03 00
	00		 imul	 edx, 876		; 0000036cH
  00c39	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00c3c	8d 4c 10 04	 lea	 ecx, DWORD PTR [eax+edx+4]
  00c40	8b 55 f0	 mov	 edx, DWORD PTR _iItemSlotIndex$221510[ebp]
  00c43	6b d2 1c	 imul	 edx, 28			; 0000001cH
  00c46	0f b7 44 11 26	 movzx	 eax, WORD PTR [ecx+edx+38]
  00c4b	6b c0 70	 imul	 eax, 112		; 00000070H
  00c4e	05 00 00 00 00	 add	 eax, OFFSET ?ItemAttribute@@3PAUITEM_ATTRIBUTE@@A ; ItemAttribute
  00c53	50		 push	 eax
  00c54	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00c57	83 c1 77	 add	 ecx, 119		; 00000077H
  00c5a	51		 push	 ecx
  00c5b	8b 55 f8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00c5e	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  00c61	50		 push	 eax
  00c62	8b 4d f8	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00c65	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00c68	51		 push	 ecx
  00c69	68 00 00 00 00	 push	 OFFSET ??_C@_0IO@EPPCOPIH@?$FLPeriodItemEx?$FN?$FLRemove?5PeriodItem@
  00c6e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00c74	83 c4 24	 add	 esp, 36			; 00000024H

; 312  : 						this->RemovePeriodItemData(lpObj,this->m_PeriodData[i].itemData[iItemSlotIndex].btType,this->m_PeriodData[i].itemData[iItemSlotIndex].wItemCode,this->m_PeriodData[i].itemData[iItemSlotIndex].dwSerial);

  00c77	8b 45 f4	 mov	 eax, DWORD PTR _i$221504[ebp]
  00c7a	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00c80	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c83	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  00c87	8b 45 f0	 mov	 eax, DWORD PTR _iItemSlotIndex$221510[ebp]
  00c8a	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00c8d	8b 4c 02 2c	 mov	 ecx, DWORD PTR [edx+eax+44]
  00c91	51		 push	 ecx
  00c92	8b 55 f4	 mov	 edx, DWORD PTR _i$221504[ebp]
  00c95	69 d2 6c 03 00
	00		 imul	 edx, 876		; 0000036cH
  00c9b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00c9e	8d 4c 10 04	 lea	 ecx, DWORD PTR [eax+edx+4]
  00ca2	8b 55 f0	 mov	 edx, DWORD PTR _iItemSlotIndex$221510[ebp]
  00ca5	6b d2 1c	 imul	 edx, 28			; 0000001cH
  00ca8	0f b7 44 11 26	 movzx	 eax, WORD PTR [ecx+edx+38]
  00cad	50		 push	 eax
  00cae	8b 4d f4	 mov	 ecx, DWORD PTR _i$221504[ebp]
  00cb1	69 c9 6c 03 00
	00		 imul	 ecx, 876		; 0000036cH
  00cb7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00cba	8d 44 0a 04	 lea	 eax, DWORD PTR [edx+ecx+4]
  00cbe	8b 4d f0	 mov	 ecx, DWORD PTR _iItemSlotIndex$221510[ebp]
  00cc1	6b c9 1c	 imul	 ecx, 28			; 0000001cH
  00cc4	0f b6 54 08 25	 movzx	 edx, BYTE PTR [eax+ecx+37]
  00cc9	52		 push	 edx
  00cca	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00ccd	50		 push	 eax
  00cce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00cd1	e8 00 00 00 00	 call	 ?RemovePeriodItemData@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@EGK@Z ; CPeriodItemEx::RemovePeriodItemData

; 313  : 						this->m_PeriodData[i].itemData[iItemSlotIndex].Clear();

  00cd6	8b 45 f4	 mov	 eax, DWORD PTR _i$221504[ebp]
  00cd9	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  00cdf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00ce2	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  00ce6	8b 45 f0	 mov	 eax, DWORD PTR _iItemSlotIndex$221510[ebp]
  00ce9	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00cec	8d 4c 02 24	 lea	 ecx, DWORD PTR [edx+eax+36]
  00cf0	e8 00 00 00 00	 call	 ?Clear@ITEMDATA@@QAEXXZ	; ITEMDATA::Clear

; 314  : 						gObjUseSkill.SkillChangeUse(lpObj->m_Index);

  00cf5	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00cf8	8b 08		 mov	 ecx, DWORD PTR [eax]
  00cfa	51		 push	 ecx
  00cfb	b9 00 00 00 00	 mov	 ecx, OFFSET ?gObjUseSkill@@3VCObjUseSkill@@A ; gObjUseSkill
  00d00	e8 00 00 00 00	 call	 ?SkillChangeUse@CObjUseSkill@@QAEHH@Z ; CObjUseSkill::SkillChangeUse

; 315  : 						gObjCalCharacter(lpObj->m_Index);

  00d05	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00d08	8b 08		 mov	 ecx, DWORD PTR [eax]
  00d0a	51		 push	 ecx
  00d0b	e8 00 00 00 00	 call	 ?gObjCalCharacter@@YAXH@Z ; gObjCalCharacter
  00d10	83 c4 04	 add	 esp, 4
$LN1@CheckPerio:

; 316  : 					}
; 317  : 				}

  00d13	e9 44 fe ff ff	 jmp	 $LN3@CheckPerio
$LN6@CheckPerio:

; 318  : 			}
; 319  : 		}
; 320  : 	}

  00d18	e9 bf fd ff ff	 jmp	 $LN8@CheckPerio
$LN10@CheckPerio:

; 321  : }

  00d1d	5f		 pop	 edi
  00d1e	5e		 pop	 esi
  00d1f	5b		 pop	 ebx
  00d20	8b e5		 mov	 esp, ebp
  00d22	5d		 pop	 ebp
  00d23	c3		 ret	 0
?CheckPeriodData@CPeriodItemEx@@QAEXXZ ENDP		; CPeriodItemEx::CheckPeriodData
_TEXT	ENDS
PUBLIC	?GetTotalMinutes@CTimeSpan@ATL@@QBE_JXZ		; ATL::CTimeSpan::GetTotalMinutes
PUBLIC	??GCTime@ATL@@QBE?AVCTimeSpan@1@V01@@Z		; ATL::CTime::operator-
PUBLIC	??0CTime@ATL@@QAE@HHHHHHH@Z			; ATL::CTime::CTime
PUBLIC	??_C@_03DAJLBDOE@?9?3?5?$AA@			; `string'
PUBLIC	??0CTimeSpan@ATL@@QAE@XZ			; ATL::CTimeSpan::CTimeSpan
PUBLIC	??0CTime@ATL@@QAE@XZ				; ATL::CTime::CTime
PUBLIC	?GetTickCount@CTime@ATL@@SG?AV12@XZ		; ATL::CTime::GetTickCount
PUBLIC	__$ArrayPad$
PUBLIC	?ConvertStringToTime@CPeriodItemEx@@QAEJPBD@Z	; CPeriodItemEx::ConvertStringToTime
EXTRN	_atoi:PROC
EXTRN	_strtok:PROC
EXTRN	_strlen:PROC
;	COMDAT ??_C@_03DAJLBDOE@?9?3?5?$AA@
CONST	SEGMENT
??_C@_03DAJLBDOE@?9?3?5?$AA@ DB '-: ', 00H		; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
$T221976 = -168						; size = 8
_tReturnTime$ = -96					; size = 8
_seps$ = -88						; size = 4
_Token$ = -84						; size = 4
_chDate$ = -80						; size = 20
_lReturnTime$ = -60					; size = 4
_tSpanTime$ = -56					; size = 8
_tExpireTime$ = -48					; size = 8
_tCurrentTime$ = -40					; size = 8
_iDateLength$ = -32					; size = 4
_iMinute$ = -28						; size = 4
_iHour$ = -24						; size = 4
_iDay$ = -20						; size = 4
_iMonth$ = -16						; size = 4
_iYear$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pchTime$ = 8						; size = 4
?ConvertStringToTime@CPeriodItemEx@@QAEJPBD@Z PROC	; CPeriodItemEx::ConvertStringToTime
; _this$ = ecx

; 325  : {

  00d30	55		 push	 ebp
  00d31	8b ec		 mov	 ebp, esp
  00d33	81 ec a8 00 00
	00		 sub	 esp, 168		; 000000a8H
  00d39	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00d3e	33 c5		 xor	 eax, ebp
  00d40	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00d43	53		 push	 ebx
  00d44	56		 push	 esi
  00d45	57		 push	 edi
  00d46	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 326  : 	int iYear = 0;

  00d49	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _iYear$[ebp], 0

; 327  : 	int iMonth = 0;

  00d50	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _iMonth$[ebp], 0

; 328  : 	int iDay = 0;

  00d57	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _iDay$[ebp], 0

; 329  : 	int iHour = 0;

  00d5e	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _iHour$[ebp], 0

; 330  : 	int iMinute = 0;

  00d65	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _iMinute$[ebp], 0

; 331  : 	int iDateLength = 0;

  00d6c	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _iDateLength$[ebp], 0

; 332  : 
; 333  : 	CTime tCurrentTime(CTime::GetTickCount());

  00d73	8d 45 d8	 lea	 eax, DWORD PTR _tCurrentTime$[ebp]
  00d76	50		 push	 eax
  00d77	e8 00 00 00 00	 call	 ?GetTickCount@CTime@ATL@@SG?AV12@XZ ; ATL::CTime::GetTickCount

; 334  : 	CTime tExpireTime;

  00d7c	8d 4d d0	 lea	 ecx, DWORD PTR _tExpireTime$[ebp]
  00d7f	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@XZ	; ATL::CTime::CTime

; 335  : 	CTimeSpan tSpanTime;

  00d84	8d 4d c8	 lea	 ecx, DWORD PTR _tSpanTime$[ebp]
  00d87	e8 00 00 00 00	 call	 ??0CTimeSpan@ATL@@QAE@XZ ; ATL::CTimeSpan::CTimeSpan

; 336  : 
; 337  : 	long lReturnTime = 0;

  00d8c	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _lReturnTime$[ebp], 0

; 338  : 	char chDate[20];
; 339  : 
; 340  : 	char* Token;
; 341  : 	char seps[4] = "-: ";

  00d93	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_03DAJLBDOE@?9?3?5?$AA@
  00d98	89 45 a8	 mov	 DWORD PTR _seps$[ebp], eax

; 342  : 
; 343  : 	if( !pchTime )

  00d9b	83 7d 08 00	 cmp	 DWORD PTR _pchTime$[ebp], 0
  00d9f	75 07		 jne	 SHORT $LN3@ConvertStr

; 344  : 		return 0;

  00da1	33 c0		 xor	 eax, eax
  00da3	e9 26 01 00 00	 jmp	 $LN4@ConvertStr
$LN3@ConvertStr:

; 345  : 
; 346  : 	memcpy(chDate,pchTime,sizeof(chDate));

  00da8	6a 14		 push	 20			; 00000014H
  00daa	8b 45 08	 mov	 eax, DWORD PTR _pchTime$[ebp]
  00dad	50		 push	 eax
  00dae	8d 4d b0	 lea	 ecx, DWORD PTR _chDate$[ebp]
  00db1	51		 push	 ecx
  00db2	e8 00 00 00 00	 call	 _memcpy
  00db7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 347  : 	iDateLength = strlen(chDate);

  00dba	8d 45 b0	 lea	 eax, DWORD PTR _chDate$[ebp]
  00dbd	50		 push	 eax
  00dbe	e8 00 00 00 00	 call	 _strlen
  00dc3	83 c4 04	 add	 esp, 4
  00dc6	89 45 e0	 mov	 DWORD PTR _iDateLength$[ebp], eax

; 348  : 
; 349  : 	if( iDateLength < 0 || iDateLength > 20 )

  00dc9	83 7d e0 00	 cmp	 DWORD PTR _iDateLength$[ebp], 0
  00dcd	7c 06		 jl	 SHORT $LN1@ConvertStr
  00dcf	83 7d e0 14	 cmp	 DWORD PTR _iDateLength$[ebp], 20 ; 00000014H
  00dd3	7e 07		 jle	 SHORT $LN2@ConvertStr
$LN1@ConvertStr:

; 350  : 		return 0;

  00dd5	33 c0		 xor	 eax, eax
  00dd7	e9 f2 00 00 00	 jmp	 $LN4@ConvertStr
$LN2@ConvertStr:

; 351  : 
; 352  : 	Token = strtok(chDate,seps);

  00ddc	8d 45 a8	 lea	 eax, DWORD PTR _seps$[ebp]
  00ddf	50		 push	 eax
  00de0	8d 4d b0	 lea	 ecx, DWORD PTR _chDate$[ebp]
  00de3	51		 push	 ecx
  00de4	e8 00 00 00 00	 call	 _strtok
  00de9	83 c4 08	 add	 esp, 8
  00dec	89 45 ac	 mov	 DWORD PTR _Token$[ebp], eax

; 353  : 	iYear = atoi(Token);

  00def	8b 45 ac	 mov	 eax, DWORD PTR _Token$[ebp]
  00df2	50		 push	 eax
  00df3	e8 00 00 00 00	 call	 _atoi
  00df8	83 c4 04	 add	 esp, 4
  00dfb	89 45 f4	 mov	 DWORD PTR _iYear$[ebp], eax

; 354  : 
; 355  : 	Token = strtok(0,seps);

  00dfe	8d 45 a8	 lea	 eax, DWORD PTR _seps$[ebp]
  00e01	50		 push	 eax
  00e02	6a 00		 push	 0
  00e04	e8 00 00 00 00	 call	 _strtok
  00e09	83 c4 08	 add	 esp, 8
  00e0c	89 45 ac	 mov	 DWORD PTR _Token$[ebp], eax

; 356  : 	iMonth = atoi(Token);

  00e0f	8b 45 ac	 mov	 eax, DWORD PTR _Token$[ebp]
  00e12	50		 push	 eax
  00e13	e8 00 00 00 00	 call	 _atoi
  00e18	83 c4 04	 add	 esp, 4
  00e1b	89 45 f0	 mov	 DWORD PTR _iMonth$[ebp], eax

; 357  : 
; 358  : 	Token = strtok(0,seps);

  00e1e	8d 45 a8	 lea	 eax, DWORD PTR _seps$[ebp]
  00e21	50		 push	 eax
  00e22	6a 00		 push	 0
  00e24	e8 00 00 00 00	 call	 _strtok
  00e29	83 c4 08	 add	 esp, 8
  00e2c	89 45 ac	 mov	 DWORD PTR _Token$[ebp], eax

; 359  : 	iDay = atoi(Token);

  00e2f	8b 45 ac	 mov	 eax, DWORD PTR _Token$[ebp]
  00e32	50		 push	 eax
  00e33	e8 00 00 00 00	 call	 _atoi
  00e38	83 c4 04	 add	 esp, 4
  00e3b	89 45 ec	 mov	 DWORD PTR _iDay$[ebp], eax

; 360  : 
; 361  : 	Token = strtok(0,seps);

  00e3e	8d 45 a8	 lea	 eax, DWORD PTR _seps$[ebp]
  00e41	50		 push	 eax
  00e42	6a 00		 push	 0
  00e44	e8 00 00 00 00	 call	 _strtok
  00e49	83 c4 08	 add	 esp, 8
  00e4c	89 45 ac	 mov	 DWORD PTR _Token$[ebp], eax

; 362  : 	iHour = atoi(Token);

  00e4f	8b 45 ac	 mov	 eax, DWORD PTR _Token$[ebp]
  00e52	50		 push	 eax
  00e53	e8 00 00 00 00	 call	 _atoi
  00e58	83 c4 04	 add	 esp, 4
  00e5b	89 45 e8	 mov	 DWORD PTR _iHour$[ebp], eax

; 363  : 
; 364  : 	Token = strtok(0,seps);

  00e5e	8d 45 a8	 lea	 eax, DWORD PTR _seps$[ebp]
  00e61	50		 push	 eax
  00e62	6a 00		 push	 0
  00e64	e8 00 00 00 00	 call	 _strtok
  00e69	83 c4 08	 add	 esp, 8
  00e6c	89 45 ac	 mov	 DWORD PTR _Token$[ebp], eax

; 365  : 	iMinute = atoi(Token);

  00e6f	8b 45 ac	 mov	 eax, DWORD PTR _Token$[ebp]
  00e72	50		 push	 eax
  00e73	e8 00 00 00 00	 call	 _atoi
  00e78	83 c4 04	 add	 esp, 4
  00e7b	89 45 e4	 mov	 DWORD PTR _iMinute$[ebp], eax

; 366  : 
; 367  : 	CTime tReturnTime(iYear,iMonth,iDay,iHour,iMinute,0,-1);

  00e7e	6a ff		 push	 -1
  00e80	6a 00		 push	 0
  00e82	8b 45 e4	 mov	 eax, DWORD PTR _iMinute$[ebp]
  00e85	50		 push	 eax
  00e86	8b 4d e8	 mov	 ecx, DWORD PTR _iHour$[ebp]
  00e89	51		 push	 ecx
  00e8a	8b 55 ec	 mov	 edx, DWORD PTR _iDay$[ebp]
  00e8d	52		 push	 edx
  00e8e	8b 45 f0	 mov	 eax, DWORD PTR _iMonth$[ebp]
  00e91	50		 push	 eax
  00e92	8b 4d f4	 mov	 ecx, DWORD PTR _iYear$[ebp]
  00e95	51		 push	 ecx
  00e96	8d 4d a0	 lea	 ecx, DWORD PTR _tReturnTime$[ebp]
  00e99	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@HHHHHHH@Z ; ATL::CTime::CTime

; 368  : 	tSpanTime = tReturnTime - tCurrentTime;

  00e9e	8b 45 dc	 mov	 eax, DWORD PTR _tCurrentTime$[ebp+4]
  00ea1	50		 push	 eax
  00ea2	8b 4d d8	 mov	 ecx, DWORD PTR _tCurrentTime$[ebp]
  00ea5	51		 push	 ecx
  00ea6	8d 95 58 ff ff
	ff		 lea	 edx, DWORD PTR $T221976[ebp]
  00eac	52		 push	 edx
  00ead	8d 4d a0	 lea	 ecx, DWORD PTR _tReturnTime$[ebp]
  00eb0	e8 00 00 00 00	 call	 ??GCTime@ATL@@QBE?AVCTimeSpan@1@V01@@Z ; ATL::CTime::operator-
  00eb5	8b 08		 mov	 ecx, DWORD PTR [eax]
  00eb7	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00eba	89 4d c8	 mov	 DWORD PTR _tSpanTime$[ebp], ecx
  00ebd	89 55 cc	 mov	 DWORD PTR _tSpanTime$[ebp+4], edx

; 369  : 	lReturnTime = tSpanTime.GetTotalMinutes();

  00ec0	8d 4d c8	 lea	 ecx, DWORD PTR _tSpanTime$[ebp]
  00ec3	e8 00 00 00 00	 call	 ?GetTotalMinutes@CTimeSpan@ATL@@QBE_JXZ ; ATL::CTimeSpan::GetTotalMinutes
  00ec8	89 45 c4	 mov	 DWORD PTR _lReturnTime$[ebp], eax

; 370  : 	return lReturnTime;

  00ecb	8b 45 c4	 mov	 eax, DWORD PTR _lReturnTime$[ebp]
$LN4@ConvertStr:

; 371  : }

  00ece	5f		 pop	 edi
  00ecf	5e		 pop	 esi
  00ed0	5b		 pop	 ebx
  00ed1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00ed4	33 cd		 xor	 ecx, ebp
  00ed6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00edb	8b e5		 mov	 esp, ebp
  00edd	5d		 pop	 ebp
  00ede	c2 04 00	 ret	 4
?ConvertStringToTime@CPeriodItemEx@@QAEJPBD@Z ENDP	; CPeriodItemEx::ConvertStringToTime
_TEXT	ENDS
PUBLIC	?GetTime@CTime@ATL@@QBE_JXZ			; ATL::CTime::GetTime
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_tCurrent$ = -16					; size = 4
_tCurrentTime$ = -12					; size = 8
_this$ = -4						; size = 4
?GetCurrentDate@CPeriodItemEx@@QAEJXZ PROC		; CPeriodItemEx::GetCurrentDate
; _this$ = ecx

; 376  : {

  00ef0	55		 push	 ebp
  00ef1	8b ec		 mov	 ebp, esp
  00ef3	83 ec 50	 sub	 esp, 80			; 00000050H
  00ef6	53		 push	 ebx
  00ef7	56		 push	 esi
  00ef8	57		 push	 edi
  00ef9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 377  : 	CTime tCurrentTime(CTime::GetTickCount());

  00efc	8d 45 f4	 lea	 eax, DWORD PTR _tCurrentTime$[ebp]
  00eff	50		 push	 eax
  00f00	e8 00 00 00 00	 call	 ?GetTickCount@CTime@ATL@@SG?AV12@XZ ; ATL::CTime::GetTickCount

; 378  : 	long tCurrent = tCurrentTime.GetTime();

  00f05	8d 4d f4	 lea	 ecx, DWORD PTR _tCurrentTime$[ebp]
  00f08	e8 00 00 00 00	 call	 ?GetTime@CTime@ATL@@QBE_JXZ ; ATL::CTime::GetTime
  00f0d	89 45 f0	 mov	 DWORD PTR _tCurrent$[ebp], eax

; 379  : 	return tCurrent;

  00f10	8b 45 f0	 mov	 eax, DWORD PTR _tCurrent$[ebp]

; 380  : }

  00f13	5f		 pop	 edi
  00f14	5e		 pop	 esi
  00f15	5b		 pop	 ebx
  00f16	8b e5		 mov	 esp, ebp
  00f18	5d		 pop	 ebp
  00f19	c3		 ret	 0
?GetCurrentDate@CPeriodItemEx@@QAEJXZ ENDP		; CPeriodItemEx::GetCurrentDate
_TEXT	ENDS
PUBLIC	??HCTime@ATL@@QBE?AV01@VCTimeSpan@1@@Z		; ATL::CTime::operator+
PUBLIC	??0CTimeSpan@ATL@@QAE@JHHH@Z			; ATL::CTimeSpan::CTimeSpan
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
$T221979 = -104						; size = 8
_tReturnTime$ = -32					; size = 4
_tLeftTime$ = -28					; size = 8
_tCurrentTime$ = -20					; size = 8
_tExpireTime$ = -12					; size = 8
_this$ = -4						; size = 4
_iDuration$ = 8						; size = 4
?GetExpireDate@CPeriodItemEx@@QAEJH@Z PROC		; CPeriodItemEx::GetExpireDate
; _this$ = ecx

; 385  : {

  00f20	55		 push	 ebp
  00f21	8b ec		 mov	 ebp, esp
  00f23	83 ec 68	 sub	 esp, 104		; 00000068H
  00f26	53		 push	 ebx
  00f27	56		 push	 esi
  00f28	57		 push	 edi
  00f29	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 386  : 	CTime tExpireTime;

  00f2c	8d 4d f4	 lea	 ecx, DWORD PTR _tExpireTime$[ebp]
  00f2f	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@XZ	; ATL::CTime::CTime

; 387  : 	CTime tCurrentTime(CTime::GetTickCount());

  00f34	8d 45 ec	 lea	 eax, DWORD PTR _tCurrentTime$[ebp]
  00f37	50		 push	 eax
  00f38	e8 00 00 00 00	 call	 ?GetTickCount@CTime@ATL@@SG?AV12@XZ ; ATL::CTime::GetTickCount

; 388  : 	CTimeSpan tLeftTime(0,0,0,iDuration);

  00f3d	8b 45 08	 mov	 eax, DWORD PTR _iDuration$[ebp]
  00f40	50		 push	 eax
  00f41	6a 00		 push	 0
  00f43	6a 00		 push	 0
  00f45	6a 00		 push	 0
  00f47	8d 4d e4	 lea	 ecx, DWORD PTR _tLeftTime$[ebp]
  00f4a	e8 00 00 00 00	 call	 ??0CTimeSpan@ATL@@QAE@JHHH@Z ; ATL::CTimeSpan::CTimeSpan

; 389  : 
; 390  : 	tExpireTime = tCurrentTime + tLeftTime;

  00f4f	8b 45 e8	 mov	 eax, DWORD PTR _tLeftTime$[ebp+4]
  00f52	50		 push	 eax
  00f53	8b 4d e4	 mov	 ecx, DWORD PTR _tLeftTime$[ebp]
  00f56	51		 push	 ecx
  00f57	8d 55 98	 lea	 edx, DWORD PTR $T221979[ebp]
  00f5a	52		 push	 edx
  00f5b	8d 4d ec	 lea	 ecx, DWORD PTR _tCurrentTime$[ebp]
  00f5e	e8 00 00 00 00	 call	 ??HCTime@ATL@@QBE?AV01@VCTimeSpan@1@@Z ; ATL::CTime::operator+
  00f63	8b 08		 mov	 ecx, DWORD PTR [eax]
  00f65	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00f68	89 4d f4	 mov	 DWORD PTR _tExpireTime$[ebp], ecx
  00f6b	89 55 f8	 mov	 DWORD PTR _tExpireTime$[ebp+4], edx

; 391  : 	long tReturnTime = tExpireTime.GetTime();

  00f6e	8d 4d f4	 lea	 ecx, DWORD PTR _tExpireTime$[ebp]
  00f71	e8 00 00 00 00	 call	 ?GetTime@CTime@ATL@@QBE_JXZ ; ATL::CTime::GetTime
  00f76	89 45 e0	 mov	 DWORD PTR _tReturnTime$[ebp], eax

; 392  : 	return tReturnTime;

  00f79	8b 45 e0	 mov	 eax, DWORD PTR _tReturnTime$[ebp]

; 393  : }

  00f7c	5f		 pop	 edi
  00f7d	5e		 pop	 esi
  00f7e	5b		 pop	 ebx
  00f7f	8b e5		 mov	 esp, ebp
  00f81	5d		 pop	 ebp
  00f82	c2 04 00	 ret	 4
?GetExpireDate@CPeriodItemEx@@QAEJH@Z ENDP		; CPeriodItemEx::GetExpireDate
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
_dwItemExpireDate$ = 8					; size = 4
?CheckExpireDate@CPeriodItemEx@@QAE_NJ@Z PROC		; CPeriodItemEx::CheckExpireDate
; _this$ = ecx

; 397  : {

  00f90	55		 push	 ebp
  00f91	8b ec		 mov	 ebp, esp
  00f93	83 ec 44	 sub	 esp, 68			; 00000044H
  00f96	53		 push	 ebx
  00f97	56		 push	 esi
  00f98	57		 push	 edi
  00f99	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 398  : 	if( this->GetCurrentDate() > dwItemExpireDate )

  00f9c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f9f	e8 00 00 00 00	 call	 ?GetCurrentDate@CPeriodItemEx@@QAEJXZ ; CPeriodItemEx::GetCurrentDate
  00fa4	3b 45 08	 cmp	 eax, DWORD PTR _dwItemExpireDate$[ebp]
  00fa7	7e 04		 jle	 SHORT $LN1@CheckExpir

; 399  : 		return true;

  00fa9	b0 01		 mov	 al, 1
  00fab	eb 02		 jmp	 SHORT $LN2@CheckExpir
$LN1@CheckExpir:

; 400  : 	return false;

  00fad	32 c0		 xor	 al, al
$LN2@CheckExpir:

; 401  : }

  00faf	5f		 pop	 edi
  00fb0	5e		 pop	 esi
  00fb1	5b		 pop	 ebx
  00fb2	8b e5		 mov	 esp, ebp
  00fb4	5d		 pop	 ebp
  00fb5	c2 04 00	 ret	 4
?CheckExpireDate@CPeriodItemEx@@QAE_NJ@Z ENDP		; CPeriodItemEx::CheckExpireDate
_TEXT	ENDS
PUBLIC	?GetTotalSeconds@CTimeSpan@ATL@@QBE_JXZ		; ATL::CTimeSpan::GetTotalSeconds
PUBLIC	??0CTime@ATL@@QAE@_J@Z				; ATL::CTime::CTime
PUBLIC	?GetLeftDate@CPeriodItemEx@@QAEKJ@Z		; CPeriodItemEx::GetLeftDate
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
$T221982 = -104						; size = 8
_tSpanTime$ = -32					; size = 8
_tCurrentTime$ = -24					; size = 8
_tExpireTime$ = -16					; size = 8
_dwReturnValue$ = -8					; size = 4
_this$ = -4						; size = 4
_lExpireDate$ = 8					; size = 4
?GetLeftDate@CPeriodItemEx@@QAEKJ@Z PROC		; CPeriodItemEx::GetLeftDate
; _this$ = ecx

; 405  : {

  00fc0	55		 push	 ebp
  00fc1	8b ec		 mov	 ebp, esp
  00fc3	83 ec 68	 sub	 esp, 104		; 00000068H
  00fc6	53		 push	 ebx
  00fc7	56		 push	 esi
  00fc8	57		 push	 edi
  00fc9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 406  : 	unsigned long dwReturnValue = 0;

  00fcc	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _dwReturnValue$[ebp], 0

; 407  : 	CTime tExpireTime(lExpireDate);

  00fd3	8b 45 08	 mov	 eax, DWORD PTR _lExpireDate$[ebp]
  00fd6	99		 cdq
  00fd7	52		 push	 edx
  00fd8	50		 push	 eax
  00fd9	8d 4d f0	 lea	 ecx, DWORD PTR _tExpireTime$[ebp]
  00fdc	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@_J@Z	; ATL::CTime::CTime

; 408  : 	CTime tCurrentTime(CTime::GetTickCount());

  00fe1	8d 45 e8	 lea	 eax, DWORD PTR _tCurrentTime$[ebp]
  00fe4	50		 push	 eax
  00fe5	e8 00 00 00 00	 call	 ?GetTickCount@CTime@ATL@@SG?AV12@XZ ; ATL::CTime::GetTickCount

; 409  : 	CTimeSpan tSpanTime;

  00fea	8d 4d e0	 lea	 ecx, DWORD PTR _tSpanTime$[ebp]
  00fed	e8 00 00 00 00	 call	 ??0CTimeSpan@ATL@@QAE@XZ ; ATL::CTimeSpan::CTimeSpan

; 410  : 	tSpanTime = tExpireTime - tCurrentTime;

  00ff2	8b 45 ec	 mov	 eax, DWORD PTR _tCurrentTime$[ebp+4]
  00ff5	50		 push	 eax
  00ff6	8b 4d e8	 mov	 ecx, DWORD PTR _tCurrentTime$[ebp]
  00ff9	51		 push	 ecx
  00ffa	8d 55 98	 lea	 edx, DWORD PTR $T221982[ebp]
  00ffd	52		 push	 edx
  00ffe	8d 4d f0	 lea	 ecx, DWORD PTR _tExpireTime$[ebp]
  01001	e8 00 00 00 00	 call	 ??GCTime@ATL@@QBE?AVCTimeSpan@1@V01@@Z ; ATL::CTime::operator-
  01006	8b 08		 mov	 ecx, DWORD PTR [eax]
  01008	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0100b	89 4d e0	 mov	 DWORD PTR _tSpanTime$[ebp], ecx
  0100e	89 55 e4	 mov	 DWORD PTR _tSpanTime$[ebp+4], edx

; 411  : 	dwReturnValue = tSpanTime.GetTotalSeconds();

  01011	8d 4d e0	 lea	 ecx, DWORD PTR _tSpanTime$[ebp]
  01014	e8 00 00 00 00	 call	 ?GetTotalSeconds@CTimeSpan@ATL@@QBE_JXZ ; ATL::CTimeSpan::GetTotalSeconds
  01019	89 45 f8	 mov	 DWORD PTR _dwReturnValue$[ebp], eax

; 412  : 	return dwReturnValue;

  0101c	8b 45 f8	 mov	 eax, DWORD PTR _dwReturnValue$[ebp]

; 413  : }

  0101f	5f		 pop	 edi
  01020	5e		 pop	 esi
  01021	5b		 pop	 ebx
  01022	8b e5		 mov	 esp, ebp
  01024	5d		 pop	 ebp
  01025	c2 04 00	 ret	 4
?GetLeftDate@CPeriodItemEx@@QAEKJ@Z ENDP		; CPeriodItemEx::GetLeftDate
_TEXT	ENDS
PUBLIC	?RequestPeriodItemInsert@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@PAUITEMDATA@@K@Z ; CPeriodItemEx::RequestPeriodItemInsert
PUBLIC	__$ArrayPad$
PUBLIC	?SetPeriodItemInfo@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@GKK@Z ; CPeriodItemEx::SetPeriodItemInfo
EXTRN	?GetNumber@CItem@@QAEKXZ:PROC			; CItem::GetNumber
EXTRN	?GCInventoryItemOneSend@@YAXHH@Z:PROC		; GCInventoryItemOneSend
EXTRN	?gObjApplyBuffEffectItemPeriod@@YAEPAUOBJECTSTRUCT@@HH@Z:PROC ; gObjApplyBuffEffectItemPeriod
EXTRN	?SearchItemEffectType1@CItemAddOption@@QAEPAUITEMEFFECT@@H@Z:PROC ; CItemAddOption::SearchItemEffectType1
EXTRN	?g_ItemAddOption@@3VCItemAddOption@@A:BYTE	; g_ItemAddOption
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_lpItemEffect$ = -56					; size = 4
_lpBuffData$ = -52					; size = 4
_ItemData$ = -48					; size = 28
_lpItem$ = -20						; size = 4
_dwExpireDate$ = -16					; size = 4
_iInventoryPosition$ = -12				; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_wItemCode$ = 12					; size = 2
_dwSerial$ = 16						; size = 4
_dwDuration$ = 20					; size = 4
?SetPeriodItemInfo@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@GKK@Z PROC ; CPeriodItemEx::SetPeriodItemInfo
; _this$ = ecx

; 421  : {

  01030	55		 push	 ebp
  01031	8b ec		 mov	 ebp, esp
  01033	83 ec 78	 sub	 esp, 120		; 00000078H
  01036	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0103b	33 c5		 xor	 eax, ebp
  0103d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  01040	53		 push	 ebx
  01041	56		 push	 esi
  01042	57		 push	 edi
  01043	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 422  : 	if( !lpObj )

  01046	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  0104a	75 07		 jne	 SHORT $LN10@SetPeriodI

; 423  : 		return false;

  0104c	32 c0		 xor	 al, al
  0104e	e9 d6 01 00 00	 jmp	 $LN11@SetPeriodI
$LN10@SetPeriodI:

; 424  : 
; 425  : 	if( lpObj->Type != OBJ_USER || lpObj->Connected < PLAYER_LOGGED )

  01053	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01056	0f b7 48 68	 movzx	 ecx, WORD PTR [eax+104]
  0105a	83 f9 01	 cmp	 ecx, 1
  0105d	75 09		 jne	 SHORT $LN8@SetPeriodI
  0105f	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01062	83 78 04 02	 cmp	 DWORD PTR [eax+4], 2
  01066	7d 07		 jge	 SHORT $LN9@SetPeriodI
$LN8@SetPeriodI:

; 426  : 		return false;

  01068	32 c0		 xor	 al, al
  0106a	e9 ba 01 00 00	 jmp	 $LN11@SetPeriodI
$LN9@SetPeriodI:

; 427  : 
; 428  : 	int iInventoryPosition = 0;

  0106f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _iInventoryPosition$[ebp], 0

; 429  : 	DWORD dwExpireDate = 0;

  01076	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _dwExpireDate$[ebp], 0

; 430  : 	CItem* lpItem = NULL;

  0107d	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _lpItem$[ebp], 0

; 431  : 	ITEMDATA ItemData;
; 432  : 	LPBUFF_EFFECT_DATE lpBuffData = NULL;

  01084	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _lpBuffData$[ebp], 0

; 433  : 	LPITEMEFFECT lpItemEffect = NULL;

  0108b	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _lpItemEffect$[ebp], 0

; 434  : 
; 435  : 	if( !dwSerial )

  01092	83 7d 10 00	 cmp	 DWORD PTR _dwSerial$[ebp], 0
  01096	0f 85 ba 00 00
	00		 jne	 $LN7@SetPeriodI

; 436  : 	{
; 437  : 		lpBuffData		= (LPBUFF_EFFECT_DATE)g_BuffManager.GetBuffInfo(wItemCode);

  0109c	0f b7 45 0c	 movzx	 eax, WORD PTR _wItemCode$[ebp]
  010a0	50		 push	 eax
  010a1	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  010a6	e8 00 00 00 00	 call	 ?GetBuffInfo@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@H@Z ; CBuffManager::GetBuffInfo
  010ab	89 45 cc	 mov	 DWORD PTR _lpBuffData$[ebp], eax

; 438  : 		lpItemEffect	= g_ItemAddOption.SearchItemEffectType1(wItemCode);

  010ae	0f b7 45 0c	 movzx	 eax, WORD PTR _wItemCode$[ebp]
  010b2	50		 push	 eax
  010b3	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ItemAddOption@@3VCItemAddOption@@A ; g_ItemAddOption
  010b8	e8 00 00 00 00	 call	 ?SearchItemEffectType1@CItemAddOption@@QAEPAUITEMEFFECT@@H@Z ; CItemAddOption::SearchItemEffectType1
  010bd	89 45 c8	 mov	 DWORD PTR _lpItemEffect$[ebp], eax

; 439  : 
; 440  : 		if( !lpBuffData || !lpItemEffect )

  010c0	83 7d cc 00	 cmp	 DWORD PTR _lpBuffData$[ebp], 0
  010c4	74 06		 je	 SHORT $LN5@SetPeriodI
  010c6	83 7d c8 00	 cmp	 DWORD PTR _lpItemEffect$[ebp], 0
  010ca	75 07		 jne	 SHORT $LN6@SetPeriodI
$LN5@SetPeriodI:

; 441  : 			return false;

  010cc	32 c0		 xor	 al, al
  010ce	e9 56 01 00 00	 jmp	 $LN11@SetPeriodI
$LN6@SetPeriodI:

; 442  : 
; 443  : 		if( gObjApplyBuffEffectItemPeriod(lpObj,lpBuffData->btIndex,dwDuration) == TRUE )

  010d3	8b 45 14	 mov	 eax, DWORD PTR _dwDuration$[ebp]
  010d6	50		 push	 eax
  010d7	8b 4d cc	 mov	 ecx, DWORD PTR _lpBuffData$[ebp]
  010da	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  010dd	52		 push	 edx
  010de	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  010e1	50		 push	 eax
  010e2	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectItemPeriod@@YAEPAUOBJECTSTRUCT@@HH@Z ; gObjApplyBuffEffectItemPeriod
  010e7	83 c4 0c	 add	 esp, 12			; 0000000cH
  010ea	0f b6 c8	 movzx	 ecx, al
  010ed	83 f9 01	 cmp	 ecx, 1
  010f0	75 58		 jne	 SHORT $LN4@SetPeriodI

; 444  : 		{
; 445  : 			ItemData.Clear();

  010f2	8d 4d d0	 lea	 ecx, DWORD PTR _ItemData$[ebp]
  010f5	e8 00 00 00 00	 call	 ?Clear@ITEMDATA@@QAEXXZ	; ITEMDATA::Clear

; 446  : 			ItemData.btType = 1;

  010fa	c6 45 d1 01	 mov	 BYTE PTR _ItemData$[ebp+1], 1

; 447  : 			ItemData.wItemCode = wItemCode;

  010fe	66 8b 45 0c	 mov	 ax, WORD PTR _wItemCode$[ebp]
  01102	66 89 45 d2	 mov	 WORD PTR _ItemData$[ebp+2], ax

; 448  : 			ItemData.btTmp = lpBuffData->btViewPortIndex;

  01106	8b 45 cc	 mov	 eax, DWORD PTR _lpBuffData$[ebp]
  01109	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  0110c	88 4d d4	 mov	 BYTE PTR _ItemData$[ebp+4], cl

; 449  : 			ItemData.btEffectType1 = lpItemEffect->wEffectType1;

  0110f	8b 45 c8	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  01112	8a 48 02	 mov	 cl, BYTE PTR [eax+2]
  01115	88 4d d5	 mov	 BYTE PTR _ItemData$[ebp+5], cl

; 450  : 			ItemData.btEffectType2 = lpItemEffect->wEffectType2;

  01118	8b 45 c8	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  0111b	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  0111e	88 4d d6	 mov	 BYTE PTR _ItemData$[ebp+6], cl

; 451  : 			ItemData.iDuration = dwDuration;

  01121	8b 45 14	 mov	 eax, DWORD PTR _dwDuration$[ebp]
  01124	89 45 e8	 mov	 DWORD PTR _ItemData$[ebp+24], eax

; 452  : 			ItemData.iUnk3 = 0;

  01127	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _ItemData$[ebp+20], 0

; 453  : 			ItemData.lCurentDate = this->GetCurrentDate();

  0112e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01131	e8 00 00 00 00	 call	 ?GetCurrentDate@CPeriodItemEx@@QAEJXZ ; CPeriodItemEx::GetCurrentDate
  01136	89 45 dc	 mov	 DWORD PTR _ItemData$[ebp+12], eax

; 454  : 			ItemData.lExpireDate = this->GetExpireDate(dwDuration);

  01139	8b 45 14	 mov	 eax, DWORD PTR _dwDuration$[ebp]
  0113c	50		 push	 eax
  0113d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01140	e8 00 00 00 00	 call	 ?GetExpireDate@CPeriodItemEx@@QAEJH@Z ; CPeriodItemEx::GetExpireDate
  01145	89 45 e0	 mov	 DWORD PTR _ItemData$[ebp+16], eax

; 455  : 		}
; 456  : 		else

  01148	eb 07		 jmp	 SHORT $LN3@SetPeriodI
$LN4@SetPeriodI:

; 457  : 		{
; 458  : 			return FALSE;

  0114a	32 c0		 xor	 al, al
  0114c	e9 d8 00 00 00	 jmp	 $LN11@SetPeriodI
$LN3@SetPeriodI:

; 459  : 		}
; 460  : 	}
; 461  : 	else

  01151	e9 bd 00 00 00	 jmp	 $LN2@SetPeriodI
$LN7@SetPeriodI:

; 462  : 	{
; 463  : 		iInventoryPosition = this->GetItemFromInventory(lpObj,wItemCode,dwSerial);

  01156	8b 45 10	 mov	 eax, DWORD PTR _dwSerial$[ebp]
  01159	50		 push	 eax
  0115a	0f b7 4d 0c	 movzx	 ecx, WORD PTR _wItemCode$[ebp]
  0115e	51		 push	 ecx
  0115f	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01162	52		 push	 edx
  01163	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01166	e8 00 00 00 00	 call	 ?GetItemFromInventory@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GK@Z ; CPeriodItemEx::GetItemFromInventory
  0116b	89 45 f4	 mov	 DWORD PTR _iInventoryPosition$[ebp], eax

; 464  : 
; 465  : 		if( iInventoryPosition == -1 )

  0116e	83 7d f4 ff	 cmp	 DWORD PTR _iInventoryPosition$[ebp], -1
  01172	75 07		 jne	 SHORT $LN1@SetPeriodI

; 466  : 		{
; 467  : 			return false;

  01174	32 c0		 xor	 al, al
  01176	e9 ae 00 00 00	 jmp	 $LN11@SetPeriodI
$LN1@SetPeriodI:

; 468  : 		}
; 469  : 
; 470  : 		lpItem = &lpObj->pInventory[iInventoryPosition];

  0117b	8b 45 f4	 mov	 eax, DWORD PTR _iInventoryPosition$[ebp]
  0117e	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  01184	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01187	03 81 24 0e 00
	00		 add	 eax, DWORD PTR [ecx+3620]
  0118d	89 45 ec	 mov	 DWORD PTR _lpItem$[ebp], eax

; 471  : 		lpItem->SetPeriodItem();

  01190	8b 4d ec	 mov	 ecx, DWORD PTR _lpItem$[ebp]
  01193	e8 00 00 00 00	 call	 ?SetPeriodItem@CItem@@QAEXXZ ; CItem::SetPeriodItem

; 472  : 
; 473  : 		GCInventoryItemOneSend(lpObj->m_Index, iInventoryPosition);

  01198	8b 45 f4	 mov	 eax, DWORD PTR _iInventoryPosition$[ebp]
  0119b	50		 push	 eax
  0119c	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0119f	8b 11		 mov	 edx, DWORD PTR [ecx]
  011a1	52		 push	 edx
  011a2	e8 00 00 00 00	 call	 ?GCInventoryItemOneSend@@YAXHH@Z ; GCInventoryItemOneSend
  011a7	83 c4 08	 add	 esp, 8

; 474  : 
; 475  : 		dwExpireDate = this->GetExpireDate(dwDuration);

  011aa	8b 45 14	 mov	 eax, DWORD PTR _dwDuration$[ebp]
  011ad	50		 push	 eax
  011ae	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  011b1	e8 00 00 00 00	 call	 ?GetExpireDate@CPeriodItemEx@@QAEJH@Z ; CPeriodItemEx::GetExpireDate
  011b6	89 45 f0	 mov	 DWORD PTR _dwExpireDate$[ebp], eax

; 476  : 		AddPeriodItemData(lpObj,wItemCode,dwSerial,dwDuration,dwExpireDate);

  011b9	8b 45 f0	 mov	 eax, DWORD PTR _dwExpireDate$[ebp]
  011bc	50		 push	 eax
  011bd	8b 4d 14	 mov	 ecx, DWORD PTR _dwDuration$[ebp]
  011c0	51		 push	 ecx
  011c1	8b 55 10	 mov	 edx, DWORD PTR _dwSerial$[ebp]
  011c4	52		 push	 edx
  011c5	0f b7 45 0c	 movzx	 eax, WORD PTR _wItemCode$[ebp]
  011c9	50		 push	 eax
  011ca	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  011cd	51		 push	 ecx
  011ce	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  011d1	e8 00 00 00 00	 call	 ?AddPeriodItemData@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GKHJ@Z ; CPeriodItemEx::AddPeriodItemData

; 477  : 		ItemData.Clear();

  011d6	8d 4d d0	 lea	 ecx, DWORD PTR _ItemData$[ebp]
  011d9	e8 00 00 00 00	 call	 ?Clear@ITEMDATA@@QAEXXZ	; ITEMDATA::Clear

; 478  : 		ItemData.wItemCode		= wItemCode;

  011de	66 8b 45 0c	 mov	 ax, WORD PTR _wItemCode$[ebp]
  011e2	66 89 45 d2	 mov	 WORD PTR _ItemData$[ebp+2], ax

; 479  : 		ItemData.btType			= 2;

  011e6	c6 45 d1 02	 mov	 BYTE PTR _ItemData$[ebp+1], 2

; 480  : 		ItemData.dwSerial		= lpItem->GetNumber();

  011ea	8b 4d ec	 mov	 ecx, DWORD PTR _lpItem$[ebp]
  011ed	e8 00 00 00 00	 call	 ?GetNumber@CItem@@QAEKXZ ; CItem::GetNumber
  011f2	89 45 d8	 mov	 DWORD PTR _ItemData$[ebp+8], eax

; 481  : 		ItemData.iDuration		= dwDuration;

  011f5	8b 45 14	 mov	 eax, DWORD PTR _dwDuration$[ebp]
  011f8	89 45 e8	 mov	 DWORD PTR _ItemData$[ebp+24], eax

; 482  : 		ItemData.iUnk3			= 0;

  011fb	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _ItemData$[ebp+20], 0

; 483  : 		ItemData.lCurentDate	= this->GetCurrentDate();

  01202	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01205	e8 00 00 00 00	 call	 ?GetCurrentDate@CPeriodItemEx@@QAEJXZ ; CPeriodItemEx::GetCurrentDate
  0120a	89 45 dc	 mov	 DWORD PTR _ItemData$[ebp+12], eax

; 484  : 		ItemData.lExpireDate	= dwExpireDate;

  0120d	8b 45 f0	 mov	 eax, DWORD PTR _dwExpireDate$[ebp]
  01210	89 45 e0	 mov	 DWORD PTR _ItemData$[ebp+16], eax
$LN2@SetPeriodI:

; 485  : 	}
; 486  : 	RequestPeriodItemInsert(lpObj,&ItemData,dwDuration);

  01213	8b 45 14	 mov	 eax, DWORD PTR _dwDuration$[ebp]
  01216	50		 push	 eax
  01217	8d 4d d0	 lea	 ecx, DWORD PTR _ItemData$[ebp]
  0121a	51		 push	 ecx
  0121b	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0121e	52		 push	 edx
  0121f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01222	e8 00 00 00 00	 call	 ?RequestPeriodItemInsert@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@PAUITEMDATA@@K@Z ; CPeriodItemEx::RequestPeriodItemInsert

; 487  : 	return true;

  01227	b0 01		 mov	 al, 1
$LN11@SetPeriodI:

; 488  : }

  01229	5f		 pop	 edi
  0122a	5e		 pop	 esi
  0122b	5b		 pop	 ebx
  0122c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0122f	33 cd		 xor	 ecx, ebp
  01231	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01236	8b e5		 mov	 esp, ebp
  01238	5d		 pop	 ebp
  01239	c2 10 00	 ret	 16			; 00000010H
?SetPeriodItemInfo@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@GKK@Z ENDP ; CPeriodItemEx::SetPeriodItemInfo
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SetPeriodItemInfo@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@EGKK@Z ; CPeriodItemEx::SetPeriodItemInfo
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_iInventoryPosition$221616 = -48			; size = 4
_lpItemEffect$221609 = -44				; size = 4
_lpBuffData$221608 = -40				; size = 4
_ItemData$ = -36					; size = 28
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_btItemType$ = 12					; size = 1
_wItemCode$ = 16					; size = 2
_dwSerial$ = 20						; size = 4
_dwDuration$ = 24					; size = 4
?SetPeriodItemInfo@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@EGKK@Z PROC ; CPeriodItemEx::SetPeriodItemInfo
; _this$ = ecx

; 492  : {

  01240	55		 push	 ebp
  01241	8b ec		 mov	 ebp, esp
  01243	83 ec 70	 sub	 esp, 112		; 00000070H
  01246	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0124b	33 c5		 xor	 eax, ebp
  0124d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  01250	53		 push	 ebx
  01251	56		 push	 esi
  01252	57		 push	 edi
  01253	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 493  : 	if( !lpObj )

  01256	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  0125a	75 07		 jne	 SHORT $LN11@SetPeriodI@2

; 494  : 		return false;

  0125c	32 c0		 xor	 al, al
  0125e	e9 65 01 00 00	 jmp	 $LN12@SetPeriodI@2
$LN11@SetPeriodI@2:

; 495  : 
; 496  : 	if( lpObj->Type != OBJ_USER ||
; 497  : 		lpObj->Connected < PLAYER_LOGGED )

  01263	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01266	0f b7 48 68	 movzx	 ecx, WORD PTR [eax+104]
  0126a	83 f9 01	 cmp	 ecx, 1
  0126d	75 09		 jne	 SHORT $LN9@SetPeriodI@2
  0126f	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01272	83 78 04 02	 cmp	 DWORD PTR [eax+4], 2
  01276	7d 07		 jge	 SHORT $LN10@SetPeriodI@2
$LN9@SetPeriodI@2:

; 498  : 		return false;

  01278	32 c0		 xor	 al, al
  0127a	e9 49 01 00 00	 jmp	 $LN12@SetPeriodI@2
$LN10@SetPeriodI@2:

; 499  : 
; 500  : 	ITEMDATA ItemData;
; 501  : 	
; 502  : 	if( btItemType == 1 )

  0127f	0f b6 45 0c	 movzx	 eax, BYTE PTR _btItemType$[ebp]
  01283	83 f8 01	 cmp	 eax, 1
  01286	0f 85 a0 00 00
	00		 jne	 $LN8@SetPeriodI@2

; 503  : 	{
; 504  : 		LPBUFF_EFFECT_DATE lpBuffData = NULL;

  0128c	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _lpBuffData$221608[ebp], 0

; 505  : 		LPITEMEFFECT lpItemEffect = NULL;

  01293	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _lpItemEffect$221609[ebp], 0

; 506  : 
; 507  : 		lpBuffData =(LPBUFF_EFFECT_DATE) g_BuffManager.GetBuffInfo(wItemCode);

  0129a	0f b7 45 10	 movzx	 eax, WORD PTR _wItemCode$[ebp]
  0129e	50		 push	 eax
  0129f	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  012a4	e8 00 00 00 00	 call	 ?GetBuffInfo@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@H@Z ; CBuffManager::GetBuffInfo
  012a9	89 45 d8	 mov	 DWORD PTR _lpBuffData$221608[ebp], eax

; 508  : 		lpItemEffect = g_ItemAddOption.SearchItemEffectType1(wItemCode);

  012ac	0f b7 45 10	 movzx	 eax, WORD PTR _wItemCode$[ebp]
  012b0	50		 push	 eax
  012b1	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ItemAddOption@@3VCItemAddOption@@A ; g_ItemAddOption
  012b6	e8 00 00 00 00	 call	 ?SearchItemEffectType1@CItemAddOption@@QAEPAUITEMEFFECT@@H@Z ; CItemAddOption::SearchItemEffectType1
  012bb	89 45 d4	 mov	 DWORD PTR _lpItemEffect$221609[ebp], eax

; 509  : 
; 510  : 		if( !lpBuffData || !lpItemEffect )

  012be	83 7d d8 00	 cmp	 DWORD PTR _lpBuffData$221608[ebp], 0
  012c2	74 06		 je	 SHORT $LN6@SetPeriodI@2
  012c4	83 7d d4 00	 cmp	 DWORD PTR _lpItemEffect$221609[ebp], 0
  012c8	75 07		 jne	 SHORT $LN7@SetPeriodI@2
$LN6@SetPeriodI@2:

; 511  : 			return false;

  012ca	32 c0		 xor	 al, al
  012cc	e9 f7 00 00 00	 jmp	 $LN12@SetPeriodI@2
$LN7@SetPeriodI@2:

; 512  : 
; 513  : 		ItemData.Clear();

  012d1	8d 4d dc	 lea	 ecx, DWORD PTR _ItemData$[ebp]
  012d4	e8 00 00 00 00	 call	 ?Clear@ITEMDATA@@QAEXXZ	; ITEMDATA::Clear

; 514  : 		ItemData.btType = 1;

  012d9	c6 45 dd 01	 mov	 BYTE PTR _ItemData$[ebp+1], 1

; 515  : 		ItemData.wItemCode = wItemCode;

  012dd	66 8b 45 10	 mov	 ax, WORD PTR _wItemCode$[ebp]
  012e1	66 89 45 de	 mov	 WORD PTR _ItemData$[ebp+2], ax

; 516  : 		ItemData.btTmp = lpBuffData->btViewPortIndex;

  012e5	8b 45 d8	 mov	 eax, DWORD PTR _lpBuffData$221608[ebp]
  012e8	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  012eb	88 4d e0	 mov	 BYTE PTR _ItemData$[ebp+4], cl

; 517  : 		ItemData.btEffectType1 = lpItemEffect->wEffectType1;

  012ee	8b 45 d4	 mov	 eax, DWORD PTR _lpItemEffect$221609[ebp]
  012f1	8a 48 02	 mov	 cl, BYTE PTR [eax+2]
  012f4	88 4d e1	 mov	 BYTE PTR _ItemData$[ebp+5], cl

; 518  : 		ItemData.btEffectType2 = lpItemEffect->wEffectType2;

  012f7	8b 45 d4	 mov	 eax, DWORD PTR _lpItemEffect$221609[ebp]
  012fa	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  012fd	88 4d e2	 mov	 BYTE PTR _ItemData$[ebp+6], cl

; 519  : 		ItemData.iDuration = dwDuration;

  01300	8b 45 18	 mov	 eax, DWORD PTR _dwDuration$[ebp]
  01303	89 45 f4	 mov	 DWORD PTR _ItemData$[ebp+24], eax

; 520  : 		ItemData.iUnk3 = 0;

  01306	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _ItemData$[ebp+20], 0

; 521  : 		ItemData.lCurentDate = this->GetCurrentDate();

  0130d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01310	e8 00 00 00 00	 call	 ?GetCurrentDate@CPeriodItemEx@@QAEJXZ ; CPeriodItemEx::GetCurrentDate
  01315	89 45 e8	 mov	 DWORD PTR _ItemData$[ebp+12], eax

; 522  : 		ItemData.lExpireDate = this->GetExpireDate(dwDuration);

  01318	8b 45 18	 mov	 eax, DWORD PTR _dwDuration$[ebp]
  0131b	50		 push	 eax
  0131c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0131f	e8 00 00 00 00	 call	 ?GetExpireDate@CPeriodItemEx@@QAEJH@Z ; CPeriodItemEx::GetExpireDate
  01324	89 45 ec	 mov	 DWORD PTR _ItemData$[ebp+16], eax
  01327	e9 86 00 00 00	 jmp	 $LN5@SetPeriodI@2
$LN8@SetPeriodI@2:

; 523  : 	}
; 524  : 	else if( btItemType == 2 )

  0132c	0f b6 45 0c	 movzx	 eax, BYTE PTR _btItemType$[ebp]
  01330	83 f8 02	 cmp	 eax, 2
  01333	75 79		 jne	 SHORT $LN4@SetPeriodI@2

; 525  : 	{
; 526  : 		if( dwSerial == 0 )

  01335	83 7d 14 00	 cmp	 DWORD PTR _dwSerial$[ebp], 0
  01339	75 07		 jne	 SHORT $LN3@SetPeriodI@2

; 527  : 			return false;

  0133b	32 c0		 xor	 al, al
  0133d	e9 86 00 00 00	 jmp	 $LN12@SetPeriodI@2
$LN3@SetPeriodI@2:

; 528  : 
; 529  : 		int iInventoryPosition = 0;

  01342	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _iInventoryPosition$221616[ebp], 0

; 530  : 
; 531  : 		iInventoryPosition = this->GetItemFromInventory(lpObj,wItemCode,dwSerial);

  01349	8b 45 14	 mov	 eax, DWORD PTR _dwSerial$[ebp]
  0134c	50		 push	 eax
  0134d	0f b7 4d 10	 movzx	 ecx, WORD PTR _wItemCode$[ebp]
  01351	51		 push	 ecx
  01352	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01355	52		 push	 edx
  01356	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01359	e8 00 00 00 00	 call	 ?GetItemFromInventory@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GK@Z ; CPeriodItemEx::GetItemFromInventory
  0135e	89 45 d0	 mov	 DWORD PTR _iInventoryPosition$221616[ebp], eax

; 532  : 
; 533  : 		if( iInventoryPosition == -1 )

  01361	83 7d d0 ff	 cmp	 DWORD PTR _iInventoryPosition$221616[ebp], -1
  01365	75 04		 jne	 SHORT $LN2@SetPeriodI@2

; 534  : 			return false;

  01367	32 c0		 xor	 al, al
  01369	eb 5d		 jmp	 SHORT $LN12@SetPeriodI@2
$LN2@SetPeriodI@2:

; 535  : 
; 536  : 		//lpObj->pInventory[iInventoryPosition].SetPeriodItem(); //not original, fix
; 537  : 
; 538  : 		ItemData.Clear();

  0136b	8d 4d dc	 lea	 ecx, DWORD PTR _ItemData$[ebp]
  0136e	e8 00 00 00 00	 call	 ?Clear@ITEMDATA@@QAEXXZ	; ITEMDATA::Clear

; 539  : 		ItemData.wItemCode = wItemCode;

  01373	66 8b 45 10	 mov	 ax, WORD PTR _wItemCode$[ebp]
  01377	66 89 45 de	 mov	 WORD PTR _ItemData$[ebp+2], ax

; 540  : 		ItemData.btType = 2;

  0137b	c6 45 dd 02	 mov	 BYTE PTR _ItemData$[ebp+1], 2

; 541  : 		ItemData.dwSerial = dwSerial;

  0137f	8b 45 14	 mov	 eax, DWORD PTR _dwSerial$[ebp]
  01382	89 45 e4	 mov	 DWORD PTR _ItemData$[ebp+8], eax

; 542  : 		ItemData.iDuration = dwDuration;

  01385	8b 45 18	 mov	 eax, DWORD PTR _dwDuration$[ebp]
  01388	89 45 f4	 mov	 DWORD PTR _ItemData$[ebp+24], eax

; 543  : 		ItemData.iUnk3 = 0;

  0138b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _ItemData$[ebp+20], 0

; 544  : 		ItemData.lCurentDate = this->GetCurrentDate();

  01392	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01395	e8 00 00 00 00	 call	 ?GetCurrentDate@CPeriodItemEx@@QAEJXZ ; CPeriodItemEx::GetCurrentDate
  0139a	89 45 e8	 mov	 DWORD PTR _ItemData$[ebp+12], eax

; 545  : 		ItemData.lExpireDate = this->GetExpireDate(dwDuration);

  0139d	8b 45 18	 mov	 eax, DWORD PTR _dwDuration$[ebp]
  013a0	50		 push	 eax
  013a1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  013a4	e8 00 00 00 00	 call	 ?GetExpireDate@CPeriodItemEx@@QAEJH@Z ; CPeriodItemEx::GetExpireDate
  013a9	89 45 ec	 mov	 DWORD PTR _ItemData$[ebp+16], eax

; 546  : 	}
; 547  : 	else

  013ac	eb 04		 jmp	 SHORT $LN5@SetPeriodI@2
$LN4@SetPeriodI@2:

; 548  : 	{
; 549  : 		return false;

  013ae	32 c0		 xor	 al, al
  013b0	eb 16		 jmp	 SHORT $LN12@SetPeriodI@2
$LN5@SetPeriodI@2:

; 550  : 	}
; 551  : 
; 552  : 	RequestPeriodItemInsert(lpObj,&ItemData,dwDuration);

  013b2	8b 45 18	 mov	 eax, DWORD PTR _dwDuration$[ebp]
  013b5	50		 push	 eax
  013b6	8d 4d dc	 lea	 ecx, DWORD PTR _ItemData$[ebp]
  013b9	51		 push	 ecx
  013ba	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  013bd	52		 push	 edx
  013be	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  013c1	e8 00 00 00 00	 call	 ?RequestPeriodItemInsert@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@PAUITEMDATA@@K@Z ; CPeriodItemEx::RequestPeriodItemInsert

; 553  : return true;

  013c6	b0 01		 mov	 al, 1
$LN12@SetPeriodI@2:

; 554  : }

  013c8	5f		 pop	 edi
  013c9	5e		 pop	 esi
  013ca	5b		 pop	 ebx
  013cb	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  013ce	33 cd		 xor	 ecx, ebp
  013d0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  013d5	8b e5		 mov	 esp, ebp
  013d7	5d		 pop	 ebp
  013d8	c2 14 00	 ret	 20			; 00000014H
?SetPeriodItemInfo@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@EGKK@Z ENDP ; CPeriodItemEx::SetPeriodItemInfo
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SetPeriodItemInfo@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@G@Z ; CPeriodItemEx::SetPeriodItemInfo
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_lpItemEffect$ = -52					; size = 4
_lpBuffData$ = -48					; size = 4
_ItemData$ = -44					; size = 28
_lpItem$ = -16						; size = 4
_dwExpireDate$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_wItemCode$ = 12					; size = 2
?SetPeriodItemInfo@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@G@Z PROC ; CPeriodItemEx::SetPeriodItemInfo
; _this$ = ecx

; 558  : {

  013e0	55		 push	 ebp
  013e1	8b ec		 mov	 ebp, esp
  013e3	83 ec 74	 sub	 esp, 116		; 00000074H
  013e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  013eb	33 c5		 xor	 eax, ebp
  013ed	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  013f0	53		 push	 ebx
  013f1	56		 push	 esi
  013f2	57		 push	 edi
  013f3	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 559  : 	if( !lpObj )

  013f6	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  013fa	75 07		 jne	 SHORT $LN7@SetPeriodI@3

; 560  : 		return false;

  013fc	32 c0		 xor	 al, al
  013fe	e9 0c 01 00 00	 jmp	 $LN8@SetPeriodI@3
$LN7@SetPeriodI@3:

; 561  : 
; 562  : 	if( lpObj->Type != OBJ_USER ||
; 563  : 		lpObj->Connected < PLAYER_LOGGED )

  01403	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01406	0f b7 48 68	 movzx	 ecx, WORD PTR [eax+104]
  0140a	83 f9 01	 cmp	 ecx, 1
  0140d	75 09		 jne	 SHORT $LN5@SetPeriodI@3
  0140f	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01412	83 78 04 02	 cmp	 DWORD PTR [eax+4], 2
  01416	7d 07		 jge	 SHORT $LN6@SetPeriodI@3
$LN5@SetPeriodI@3:

; 564  : 		return false;

  01418	32 c0		 xor	 al, al
  0141a	e9 f0 00 00 00	 jmp	 $LN8@SetPeriodI@3
$LN6@SetPeriodI@3:

; 565  : 
; 566  : 	DWORD dwExpireDate = 0;

  0141f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _dwExpireDate$[ebp], 0

; 567  : 	CItem* lpItem = NULL;

  01426	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _lpItem$[ebp], 0

; 568  : 	ITEMDATA ItemData;
; 569  : 	LPBUFF_EFFECT_DATE lpBuffData = NULL;

  0142d	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _lpBuffData$[ebp], 0

; 570  : 	LPITEMEFFECT lpItemEffect = NULL;

  01434	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _lpItemEffect$[ebp], 0

; 571  : 
; 572  : 	lpBuffData = (LPBUFF_EFFECT_DATE)g_BuffManager.GetBuffInfo(wItemCode);

  0143b	0f b7 45 0c	 movzx	 eax, WORD PTR _wItemCode$[ebp]
  0143f	50		 push	 eax
  01440	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BuffManager@@3VCBuffManager@@A ; g_BuffManager
  01445	e8 00 00 00 00	 call	 ?GetBuffInfo@CBuffManager@@QAEPAUBUFF_EFFECT_DATA@@H@Z ; CBuffManager::GetBuffInfo
  0144a	89 45 d0	 mov	 DWORD PTR _lpBuffData$[ebp], eax

; 573  : 	lpItemEffect = g_ItemAddOption.SearchItemEffectType1(wItemCode);

  0144d	0f b7 45 0c	 movzx	 eax, WORD PTR _wItemCode$[ebp]
  01451	50		 push	 eax
  01452	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ItemAddOption@@3VCItemAddOption@@A ; g_ItemAddOption
  01457	e8 00 00 00 00	 call	 ?SearchItemEffectType1@CItemAddOption@@QAEPAUITEMEFFECT@@H@Z ; CItemAddOption::SearchItemEffectType1
  0145c	89 45 cc	 mov	 DWORD PTR _lpItemEffect$[ebp], eax

; 574  : 
; 575  : 	if( !lpBuffData || !lpItemEffect )

  0145f	83 7d d0 00	 cmp	 DWORD PTR _lpBuffData$[ebp], 0
  01463	74 06		 je	 SHORT $LN3@SetPeriodI@3
  01465	83 7d cc 00	 cmp	 DWORD PTR _lpItemEffect$[ebp], 0
  01469	75 07		 jne	 SHORT $LN4@SetPeriodI@3
$LN3@SetPeriodI@3:

; 576  : 		return false;

  0146b	32 c0		 xor	 al, al
  0146d	e9 9d 00 00 00	 jmp	 $LN8@SetPeriodI@3
$LN4@SetPeriodI@3:

; 577  : 
; 578  : 	if( gObjApplyBuffEffectItemPeriod(lpObj,lpBuffData->btIndex,lpItemEffect->iEffectValidTime) == TRUE )

  01472	8b 45 cc	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  01475	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  01478	51		 push	 ecx
  01479	8b 55 d0	 mov	 edx, DWORD PTR _lpBuffData$[ebp]
  0147c	0f b6 02	 movzx	 eax, BYTE PTR [edx]
  0147f	50		 push	 eax
  01480	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01483	51		 push	 ecx
  01484	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectItemPeriod@@YAEPAUOBJECTSTRUCT@@HH@Z ; gObjApplyBuffEffectItemPeriod
  01489	83 c4 0c	 add	 esp, 12			; 0000000cH
  0148c	0f b6 d0	 movzx	 edx, al
  0148f	83 fa 01	 cmp	 edx, 1
  01492	75 5e		 jne	 SHORT $LN2@SetPeriodI@3

; 579  : 	{
; 580  : 		ItemData.Clear();

  01494	8d 4d d4	 lea	 ecx, DWORD PTR _ItemData$[ebp]
  01497	e8 00 00 00 00	 call	 ?Clear@ITEMDATA@@QAEXXZ	; ITEMDATA::Clear

; 581  : 		ItemData.btType = 1;

  0149c	c6 45 d5 01	 mov	 BYTE PTR _ItemData$[ebp+1], 1

; 582  : 		ItemData.wItemCode = wItemCode;

  014a0	66 8b 45 0c	 mov	 ax, WORD PTR _wItemCode$[ebp]
  014a4	66 89 45 d6	 mov	 WORD PTR _ItemData$[ebp+2], ax

; 583  : 		ItemData.btTmp = lpBuffData->btViewPortIndex;

  014a8	8b 45 d0	 mov	 eax, DWORD PTR _lpBuffData$[ebp]
  014ab	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  014ae	88 4d d8	 mov	 BYTE PTR _ItemData$[ebp+4], cl

; 584  : 		ItemData.btEffectType1 = lpItemEffect->wEffectType1;

  014b1	8b 45 cc	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  014b4	8a 48 02	 mov	 cl, BYTE PTR [eax+2]
  014b7	88 4d d9	 mov	 BYTE PTR _ItemData$[ebp+5], cl

; 585  : 		ItemData.btEffectType2 = lpItemEffect->wEffectType2;

  014ba	8b 45 cc	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  014bd	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  014c0	88 4d da	 mov	 BYTE PTR _ItemData$[ebp+6], cl

; 586  : 		ItemData.iDuration = lpItemEffect->iEffectValidTime;

  014c3	8b 45 cc	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  014c6	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  014c9	89 4d ec	 mov	 DWORD PTR _ItemData$[ebp+24], ecx

; 587  : 		ItemData.iUnk3 = 0;

  014cc	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _ItemData$[ebp+20], 0

; 588  : 		ItemData.lCurentDate = this->GetCurrentDate();

  014d3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  014d6	e8 00 00 00 00	 call	 ?GetCurrentDate@CPeriodItemEx@@QAEJXZ ; CPeriodItemEx::GetCurrentDate
  014db	89 45 e0	 mov	 DWORD PTR _ItemData$[ebp+12], eax

; 589  : 		ItemData.lExpireDate = this->GetExpireDate(lpItemEffect->iEffectValidTime);

  014de	8b 45 cc	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  014e1	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  014e4	51		 push	 ecx
  014e5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  014e8	e8 00 00 00 00	 call	 ?GetExpireDate@CPeriodItemEx@@QAEJH@Z ; CPeriodItemEx::GetExpireDate
  014ed	89 45 e4	 mov	 DWORD PTR _ItemData$[ebp+16], eax

; 590  : 	}
; 591  : 	else

  014f0	eb 04		 jmp	 SHORT $LN1@SetPeriodI@3
$LN2@SetPeriodI@3:

; 592  : 	{
; 593  : 		return FALSE;

  014f2	32 c0		 xor	 al, al
  014f4	eb 19		 jmp	 SHORT $LN8@SetPeriodI@3
$LN1@SetPeriodI@3:

; 594  : 	}
; 595  : 
; 596  : 	RequestPeriodItemInsert(lpObj,&ItemData,lpItemEffect->iEffectValidTime);

  014f6	8b 45 cc	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  014f9	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  014fc	51		 push	 ecx
  014fd	8d 55 d4	 lea	 edx, DWORD PTR _ItemData$[ebp]
  01500	52		 push	 edx
  01501	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01504	50		 push	 eax
  01505	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01508	e8 00 00 00 00	 call	 ?RequestPeriodItemInsert@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@PAUITEMDATA@@K@Z ; CPeriodItemEx::RequestPeriodItemInsert

; 597  : 	return true;

  0150d	b0 01		 mov	 al, 1
$LN8@SetPeriodI@3:

; 598  : }

  0150f	5f		 pop	 edi
  01510	5e		 pop	 esi
  01511	5b		 pop	 ebx
  01512	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01515	33 cd		 xor	 ecx, ebp
  01517	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0151c	8b e5		 mov	 esp, ebp
  0151e	5d		 pop	 ebp
  0151f	c2 08 00	 ret	 8
?SetPeriodItemInfo@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@G@Z ENDP ; CPeriodItemEx::SetPeriodItemInfo
_TEXT	ENDS
PUBLIC	?OnRequestPeriodItemList@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@@Z ; CPeriodItemEx::OnRequestPeriodItemList
EXTRN	?GCItemListSend@@YAXH@Z:PROC			; GCItemListSend
EXTRN	?SetPeriodItemExpire@CItem@@QAEXXZ:PROC		; CItem::SetPeriodItemExpire
EXTRN	?IsPeriodItem@CItem@@QAE_NXZ:PROC		; CItem::IsPeriodItem
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_iInventoryPosition$ = 12				; size = 4
?SetDisableItemToExpire@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@H@Z PROC ; CPeriodItemEx::SetDisableItemToExpire
; _this$ = ecx

; 602  : {

  01530	55		 push	 ebp
  01531	8b ec		 mov	 ebp, esp
  01533	83 ec 44	 sub	 esp, 68			; 00000044H
  01536	53		 push	 ebx
  01537	56		 push	 esi
  01538	57		 push	 edi
  01539	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 603  : 	if( !lpObj )

  0153c	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  01540	75 04		 jne	 SHORT $LN5@SetDisable

; 604  : 		return false;

  01542	32 c0		 xor	 al, al
  01544	eb 78		 jmp	 SHORT $LN6@SetDisable
$LN5@SetDisable:

; 605  : 
; 606  : 	if( lpObj->Connected < PLAYER_LOGGED ||
; 607  : 		lpObj->Type != OBJ_USER )

  01546	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01549	83 78 04 02	 cmp	 DWORD PTR [eax+4], 2
  0154d	7c 0c		 jl	 SHORT $LN3@SetDisable
  0154f	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01552	0f b7 48 68	 movzx	 ecx, WORD PTR [eax+104]
  01556	83 f9 01	 cmp	 ecx, 1
  01559	74 04		 je	 SHORT $LN4@SetDisable
$LN3@SetDisable:

; 608  : 		return false;

  0155b	32 c0		 xor	 al, al
  0155d	eb 5f		 jmp	 SHORT $LN6@SetDisable
$LN4@SetDisable:

; 609  : 
; 610  : 	if( iInventoryPosition == -1 )

  0155f	83 7d 0c ff	 cmp	 DWORD PTR _iInventoryPosition$[ebp], -1
  01563	75 04		 jne	 SHORT $LN2@SetDisable

; 611  : 		return false;

  01565	32 c0		 xor	 al, al
  01567	eb 55		 jmp	 SHORT $LN6@SetDisable
$LN2@SetDisable:

; 612  : 
; 613  : 	if( !lpObj->pInventory[iInventoryPosition].IsPeriodItem() )

  01569	8b 4d 0c	 mov	 ecx, DWORD PTR _iInventoryPosition$[ebp]
  0156c	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  01572	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01575	03 88 24 0e 00
	00		 add	 ecx, DWORD PTR [eax+3620]
  0157b	e8 00 00 00 00	 call	 ?IsPeriodItem@CItem@@QAE_NXZ ; CItem::IsPeriodItem
  01580	0f b6 c8	 movzx	 ecx, al
  01583	85 c9		 test	 ecx, ecx
  01585	75 04		 jne	 SHORT $LN1@SetDisable

; 614  : 		return false;

  01587	32 c0		 xor	 al, al
  01589	eb 33		 jmp	 SHORT $LN6@SetDisable
$LN1@SetDisable:

; 615  : 
; 616  : 	lpObj->pInventory[iInventoryPosition].SetPeriodItemExpire();

  0158b	8b 4d 0c	 mov	 ecx, DWORD PTR _iInventoryPosition$[ebp]
  0158e	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  01594	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01597	03 88 24 0e 00
	00		 add	 ecx, DWORD PTR [eax+3620]
  0159d	e8 00 00 00 00	 call	 ?SetPeriodItemExpire@CItem@@QAEXXZ ; CItem::SetPeriodItemExpire

; 617  : 	GCItemListSend(lpObj->m_Index);

  015a2	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  015a5	8b 08		 mov	 ecx, DWORD PTR [eax]
  015a7	51		 push	 ecx
  015a8	e8 00 00 00 00	 call	 ?GCItemListSend@@YAXH@Z	; GCItemListSend
  015ad	83 c4 04	 add	 esp, 4

; 618  : 	g_PeriodItemEx.OnRequestPeriodItemList(lpObj);

  015b0	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  015b3	50		 push	 eax
  015b4	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_PeriodItemEx@@3VCPeriodItemEx@@A ; g_PeriodItemEx
  015b9	e8 00 00 00 00	 call	 ?OnRequestPeriodItemList@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@@Z ; CPeriodItemEx::OnRequestPeriodItemList
$LN6@SetDisable:

; 619  : 
; 620  : }

  015be	5f		 pop	 edi
  015bf	5e		 pop	 esi
  015c0	5b		 pop	 ebx
  015c1	8b e5		 mov	 esp, ebp
  015c3	5d		 pop	 ebp
  015c4	c2 08 00	 ret	 8
?SetDisableItemToExpire@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@H@Z ENDP ; CPeriodItemEx::SetDisableItemToExpire
_TEXT	ENDS
PUBLIC	?SetExpireNotMatchedData@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@@Z ; CPeriodItemEx::SetExpireNotMatchedData
EXTRN	?IsPeriodItemExpire@CItem@@QAE_NXZ:PROC		; CItem::IsPeriodItemExpire
EXTRN	?IsItem@CItem@@QAEHXZ:PROC			; CItem::IsItem
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_iPeriodItemData$ = -20					; size = 4
_i$ = -16						; size = 4
_iSetExpiredItemCount$ = -12				; size = 4
_bIsValidMatchedItem$ = -5				; size = 1
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
?SetExpireNotMatchedData@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@@Z PROC ; CPeriodItemEx::SetExpireNotMatchedData
; _this$ = ecx

; 624  : {

  015d0	55		 push	 ebp
  015d1	8b ec		 mov	 ebp, esp
  015d3	83 ec 54	 sub	 esp, 84			; 00000054H
  015d6	53		 push	 ebx
  015d7	56		 push	 esi
  015d8	57		 push	 edi
  015d9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 625  : 	BYTE bIsValidMatchedItem = 0;

  015dc	c6 45 fb 00	 mov	 BYTE PTR _bIsValidMatchedItem$[ebp], 0

; 626  : 	int iSetExpiredItemCount = 0;

  015e0	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _iSetExpiredItemCount$[ebp], 0

; 627  : 	int i;
; 628  : 	int iPeriodItemData;
; 629  : 
; 630  : 	for( i = 0; i < MAIN_INVENTORY_SIZE; i++)

  015e7	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  015ee	eb 09		 jmp	 SHORT $LN13@SetExpireN
$LN12@SetExpireN:
  015f0	8b 45 f0	 mov	 eax, DWORD PTR _i$[ebp]
  015f3	83 c0 01	 add	 eax, 1
  015f6	89 45 f0	 mov	 DWORD PTR _i$[ebp], eax
$LN13@SetExpireN:
  015f9	81 7d f0 cc 00
	00 00		 cmp	 DWORD PTR _i$[ebp], 204	; 000000ccH
  01600	0f 8d 52 01 00
	00		 jge	 $LN11@SetExpireN

; 631  : 	{
; 632  : 		if( !lpObj->pInventory[i].IsItem() )

  01606	8b 4d f0	 mov	 ecx, DWORD PTR _i$[ebp]
  01609	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  0160f	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01612	03 88 24 0e 00
	00		 add	 ecx, DWORD PTR [eax+3620]
  01618	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  0161d	85 c0		 test	 eax, eax
  0161f	75 02		 jne	 SHORT $LN10@SetExpireN

; 633  : 			continue;

  01621	eb cd		 jmp	 SHORT $LN12@SetExpireN
$LN10@SetExpireN:

; 634  : 
; 635  : 		if( lpObj->pInventory[i].IsPeriodItem() == TRUE )

  01623	8b 4d f0	 mov	 ecx, DWORD PTR _i$[ebp]
  01626	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  0162c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0162f	03 88 24 0e 00
	00		 add	 ecx, DWORD PTR [eax+3620]
  01635	e8 00 00 00 00	 call	 ?IsPeriodItem@CItem@@QAE_NXZ ; CItem::IsPeriodItem
  0163a	0f b6 c8	 movzx	 ecx, al
  0163d	83 f9 01	 cmp	 ecx, 1
  01640	0f 85 0d 01 00
	00		 jne	 $LN9@SetExpireN

; 636  : 		{
; 637  : 			if( !lpObj->pInventory[i].IsPeriodItemExpire() )

  01646	8b 4d f0	 mov	 ecx, DWORD PTR _i$[ebp]
  01649	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  0164f	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01652	03 88 24 0e 00
	00		 add	 ecx, DWORD PTR [eax+3620]
  01658	e8 00 00 00 00	 call	 ?IsPeriodItemExpire@CItem@@QAE_NXZ ; CItem::IsPeriodItemExpire
  0165d	0f b6 c8	 movzx	 ecx, al
  01660	85 c9		 test	 ecx, ecx
  01662	0f 85 eb 00 00
	00		 jne	 $LN9@SetExpireN

; 638  : 			{
; 639  : 				bIsValidMatchedItem = 0;

  01668	c6 45 fb 00	 mov	 BYTE PTR _bIsValidMatchedItem$[ebp], 0

; 640  : 
; 641  : 				for( iPeriodItemData = 0; iPeriodItemData < MAX_ITEMDATA; iPeriodItemData++)

  0166c	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _iPeriodItemData$[ebp], 0
  01673	eb 09		 jmp	 SHORT $LN7@SetExpireN
$LN6@SetExpireN:
  01675	8b 45 ec	 mov	 eax, DWORD PTR _iPeriodItemData$[ebp]
  01678	83 c0 01	 add	 eax, 1
  0167b	89 45 ec	 mov	 DWORD PTR _iPeriodItemData$[ebp], eax
$LN7@SetExpireN:
  0167e	83 7d ec 1e	 cmp	 DWORD PTR _iPeriodItemData$[ebp], 30 ; 0000001eH
  01682	0f 8d a3 00 00
	00		 jge	 $LN5@SetExpireN

; 642  : 				{
; 643  : 					if( !this->m_PeriodData[lpObj->m_PeriodDataIndex].itemData[iPeriodItemData].bInUse )

  01688	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0168b	8b 88 20 26 00
	00		 mov	 ecx, DWORD PTR [eax+9760]
  01691	69 c9 6c 03 00
	00		 imul	 ecx, 876		; 0000036cH
  01697	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0169a	8d 44 0a 04	 lea	 eax, DWORD PTR [edx+ecx+4]
  0169e	8b 4d ec	 mov	 ecx, DWORD PTR _iPeriodItemData$[ebp]
  016a1	6b c9 1c	 imul	 ecx, 28			; 0000001cH
  016a4	0f b6 54 08 24	 movzx	 edx, BYTE PTR [eax+ecx+36]
  016a9	85 d2		 test	 edx, edx
  016ab	75 02		 jne	 SHORT $LN4@SetExpireN

; 644  : 						continue;

  016ad	eb c6		 jmp	 SHORT $LN6@SetExpireN
$LN4@SetExpireN:

; 645  : 
; 646  : 					if( lpObj->pInventory[i].m_Type == this->m_PeriodData[lpObj->m_PeriodDataIndex].itemData[iPeriodItemData].wItemCode &&
; 647  : 						lpObj->pInventory[i].m_Number == this->m_PeriodData[lpObj->m_PeriodDataIndex].itemData[iPeriodItemData].dwSerial )

  016af	8b 45 f0	 mov	 eax, DWORD PTR _i$[ebp]
  016b2	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  016b8	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  016bb	8b 91 24 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3620]
  016c1	0f bf 44 02 06	 movsx	 eax, WORD PTR [edx+eax+6]
  016c6	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  016c9	8b 91 20 26 00
	00		 mov	 edx, DWORD PTR [ecx+9760]
  016cf	69 d2 6c 03 00
	00		 imul	 edx, 876		; 0000036cH
  016d5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  016d8	8d 54 11 04	 lea	 edx, DWORD PTR [ecx+edx+4]
  016dc	8b 4d ec	 mov	 ecx, DWORD PTR _iPeriodItemData$[ebp]
  016df	6b c9 1c	 imul	 ecx, 28			; 0000001cH
  016e2	0f b7 54 0a 26	 movzx	 edx, WORD PTR [edx+ecx+38]
  016e7	3b c2		 cmp	 eax, edx
  016e9	75 3b		 jne	 SHORT $LN3@SetExpireN
  016eb	8b 45 f0	 mov	 eax, DWORD PTR _i$[ebp]
  016ee	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  016f4	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  016f7	8b 91 24 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3620]
  016fd	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01700	8b 89 20 26 00
	00		 mov	 ecx, DWORD PTR [ecx+9760]
  01706	69 c9 6c 03 00
	00		 imul	 ecx, 876		; 0000036cH
  0170c	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  0170f	8d 4c 0e 04	 lea	 ecx, DWORD PTR [esi+ecx+4]
  01713	8b 75 ec	 mov	 esi, DWORD PTR _iPeriodItemData$[ebp]
  01716	6b f6 1c	 imul	 esi, 28			; 0000001cH
  01719	8b 14 10	 mov	 edx, DWORD PTR [eax+edx]
  0171c	3b 54 31 2c	 cmp	 edx, DWORD PTR [ecx+esi+44]
  01720	75 04		 jne	 SHORT $LN3@SetExpireN

; 648  : 					{
; 649  : 						bIsValidMatchedItem = TRUE;

  01722	c6 45 fb 01	 mov	 BYTE PTR _bIsValidMatchedItem$[ebp], 1
$LN3@SetExpireN:

; 650  : 					}
; 651  : 				}

  01726	e9 4a ff ff ff	 jmp	 $LN6@SetExpireN
$LN5@SetExpireN:

; 652  : 
; 653  : 				if( !bIsValidMatchedItem )

  0172b	0f b6 45 fb	 movzx	 eax, BYTE PTR _bIsValidMatchedItem$[ebp]
  0172f	85 c0		 test	 eax, eax
  01731	75 20		 jne	 SHORT $LN9@SetExpireN

; 654  : 				{
; 655  : 					lpObj->pInventory[i].SetPeriodItemExpire();

  01733	8b 4d f0	 mov	 ecx, DWORD PTR _i$[ebp]
  01736	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  0173c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0173f	03 88 24 0e 00
	00		 add	 ecx, DWORD PTR [eax+3620]
  01745	e8 00 00 00 00	 call	 ?SetPeriodItemExpire@CItem@@QAEXXZ ; CItem::SetPeriodItemExpire

; 656  : 					iSetExpiredItemCount++;

  0174a	8b 45 f4	 mov	 eax, DWORD PTR _iSetExpiredItemCount$[ebp]
  0174d	83 c0 01	 add	 eax, 1
  01750	89 45 f4	 mov	 DWORD PTR _iSetExpiredItemCount$[ebp], eax
$LN9@SetExpireN:

; 657  : 				}
; 658  : 			}
; 659  : 		}
; 660  : 	}

  01753	e9 98 fe ff ff	 jmp	 $LN12@SetExpireN
$LN11@SetExpireN:

; 661  : 
; 662  : 	if( iSetExpiredItemCount > 0 )

  01758	83 7d f4 00	 cmp	 DWORD PTR _iSetExpiredItemCount$[ebp], 0
  0175c	7e 0e		 jle	 SHORT $LN14@SetExpireN

; 663  : 		GCItemListSend(lpObj->m_Index);

  0175e	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01761	8b 08		 mov	 ecx, DWORD PTR [eax]
  01763	51		 push	 ecx
  01764	e8 00 00 00 00	 call	 ?GCItemListSend@@YAXH@Z	; GCItemListSend
  01769	83 c4 04	 add	 esp, 4
$LN14@SetExpireN:

; 664  : }

  0176c	5f		 pop	 edi
  0176d	5e		 pop	 esi
  0176e	5b		 pop	 ebx
  0176f	8b e5		 mov	 esp, ebp
  01771	5d		 pop	 ebp
  01772	c2 04 00	 ret	 4
?SetExpireNotMatchedData@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@@Z ENDP ; CPeriodItemEx::SetExpireNotMatchedData
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?RequestPeriodItemInfo@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@@Z ; CPeriodItemEx::RequestPeriodItemInfo
EXTRN	?Send@DBSockMng@@QAEHPADH@Z:PROC		; DBSockMng::Send
EXTRN	?cDBSMng@@3VDBSockMng@@A:BYTE			; cDBSMng
EXTRN	?PHeadSubSetB@@YAXPAEEEH@Z:PROC			; PHeadSubSetB
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pMsg$ = -32						; size = 24
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
?RequestPeriodItemInfo@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@@Z PROC ; CPeriodItemEx::RequestPeriodItemInfo
; _this$ = ecx

; 668  : {

  01780	55		 push	 ebp
  01781	8b ec		 mov	 ebp, esp
  01783	83 ec 60	 sub	 esp, 96			; 00000060H
  01786	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0178b	33 c5		 xor	 eax, ebp
  0178d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  01790	53		 push	 ebx
  01791	56		 push	 esi
  01792	57		 push	 edi
  01793	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 669  : 	PMSG_REQ_PERIODITEMEX_SELECT pMsg;
; 670  : 	pMsg.wUserIndex = lpObj->m_Index;

  01796	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01799	66 8b 08	 mov	 cx, WORD PTR [eax]
  0179c	66 89 4d e8	 mov	 WORD PTR _pMsg$[ebp+8], cx

; 671  : 	pMsg.dwUserGuid = lpObj->DBNumber;

  017a0	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  017a3	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  017a6	89 4d e4	 mov	 DWORD PTR _pMsg$[ebp+4], ecx

; 672  : 	memcpy(pMsg.chCharacterName,lpObj->Name,11);

  017a9	6a 0b		 push	 11			; 0000000bH
  017ab	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  017ae	83 c0 77	 add	 eax, 119		; 00000077H
  017b1	50		 push	 eax
  017b2	8d 4d ea	 lea	 ecx, DWORD PTR _pMsg$[ebp+10]
  017b5	51		 push	 ecx
  017b6	e8 00 00 00 00	 call	 _memcpy
  017bb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 673  : 
; 674  : 	PHeadSubSetB((LPBYTE)&pMsg,0xD1,0x03,sizeof(pMsg));

  017be	6a 18		 push	 24			; 00000018H
  017c0	6a 03		 push	 3
  017c2	68 d1 00 00 00	 push	 209			; 000000d1H
  017c7	8d 45 e0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  017ca	50		 push	 eax
  017cb	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB
  017d0	83 c4 10	 add	 esp, 16			; 00000010H

; 675  : 
; 676  : 	cDBSMng.Send((char*)&pMsg,sizeof(pMsg));

  017d3	6a 18		 push	 24			; 00000018H
  017d5	8d 45 e0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  017d8	50		 push	 eax
  017d9	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  017de	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send

; 677  : }

  017e3	5f		 pop	 edi
  017e4	5e		 pop	 esi
  017e5	5b		 pop	 ebx
  017e6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  017e9	33 cd		 xor	 ecx, ebp
  017eb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  017f0	8b e5		 mov	 esp, ebp
  017f2	5d		 pop	 ebp
  017f3	c2 04 00	 ret	 4
?RequestPeriodItemInfo@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@@Z ENDP ; CPeriodItemEx::RequestPeriodItemInfo
_TEXT	ENDS
PUBLIC	??_C@_0JE@PDPOHGBI@?$FLPeriodItemEx?$FN?$FLInsert?5PeriodItem@ ; `string'
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_0JE@PDPOHGBI@?$FLPeriodItemEx?$FN?$FLInsert?5PeriodItem@
CONST	SEGMENT
??_C@_0JE@PDPOHGBI@?$FLPeriodItemEx?$FN?$FLInsert?5PeriodItem@ DB '[Perio'
	DB	'dItemEx][Insert PeriodItem] Request Insert PeriodItem Data. U'
	DB	'ser Id : %s(%d), Name : %s, Item : %s(%d), Type : %d, Serial '
	DB	': %u, Duration : %d', 00H			; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_pMsg$ = -52						; size = 44
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_lpItemData$ = 12					; size = 4
_dwDuration$ = 16					; size = 4
?RequestPeriodItemInsert@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@PAUITEMDATA@@K@Z PROC ; CPeriodItemEx::RequestPeriodItemInsert
; _this$ = ecx

; 682  : {

  01800	55		 push	 ebp
  01801	8b ec		 mov	 ebp, esp
  01803	83 ec 74	 sub	 esp, 116		; 00000074H
  01806	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0180b	33 c5		 xor	 eax, ebp
  0180d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  01810	53		 push	 ebx
  01811	56		 push	 esi
  01812	57		 push	 edi
  01813	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 683  : 	PMSG_REQ_PERIODITEMEX_INSERT pMsg;
; 684  : 	pMsg.wUserIndex = lpObj->m_Index;

  01816	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01819	66 8b 08	 mov	 cx, WORD PTR [eax]
  0181c	66 89 4d d4	 mov	 WORD PTR _pMsg$[ebp+8], cx

; 685  : 	pMsg.dwUserGuid = lpObj->DBNumber;

  01820	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01823	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  01826	89 4d d0	 mov	 DWORD PTR _pMsg$[ebp+4], ecx

; 686  : 	memcpy(pMsg.chCharacterName,lpObj->Name,11);

  01829	6a 0b		 push	 11			; 0000000bH
  0182b	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0182e	83 c0 77	 add	 eax, 119		; 00000077H
  01831	50		 push	 eax
  01832	8d 4d d6	 lea	 ecx, DWORD PTR _pMsg$[ebp+10]
  01835	51		 push	 ecx
  01836	e8 00 00 00 00	 call	 _memcpy
  0183b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 687  : 
; 688  : 	pMsg.wItemCode = lpItemData->wItemCode;

  0183e	8b 45 0c	 mov	 eax, DWORD PTR _lpItemData$[ebp]
  01841	66 8b 48 02	 mov	 cx, WORD PTR [eax+2]
  01845	66 89 4d e2	 mov	 WORD PTR _pMsg$[ebp+22], cx

; 689  : 	pMsg.btItemType = lpItemData->btType;

  01849	8b 45 0c	 mov	 eax, DWORD PTR _lpItemData$[ebp]
  0184c	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  0184f	88 4d e1	 mov	 BYTE PTR _pMsg$[ebp+21], cl

; 690  : 	pMsg.btEffectType1 = lpItemData->btEffectType1;

  01852	8b 45 0c	 mov	 eax, DWORD PTR _lpItemData$[ebp]
  01855	8a 48 05	 mov	 cl, BYTE PTR [eax+5]
  01858	88 4d e5	 mov	 BYTE PTR _pMsg$[ebp+25], cl

; 691  : 	pMsg.btEffectType2 = lpItemData->btEffectType2;

  0185b	8b 45 0c	 mov	 eax, DWORD PTR _lpItemData$[ebp]
  0185e	8a 48 06	 mov	 cl, BYTE PTR [eax+6]
  01861	88 4d e6	 mov	 BYTE PTR _pMsg$[ebp+26], cl

; 692  : 	pMsg.btOptionType = lpItemData->btTmp;

  01864	8b 45 0c	 mov	 eax, DWORD PTR _lpItemData$[ebp]
  01867	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  0186a	88 4d e4	 mov	 BYTE PTR _pMsg$[ebp+24], cl

; 693  : 	pMsg.dwSerial = lpItemData->dwSerial;

  0186d	8b 45 0c	 mov	 eax, DWORD PTR _lpItemData$[ebp]
  01870	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  01873	89 4d e8	 mov	 DWORD PTR _pMsg$[ebp+28], ecx

; 694  : 	pMsg.dwDuration = dwDuration;

  01876	8b 45 10	 mov	 eax, DWORD PTR _dwDuration$[ebp]
  01879	89 45 ec	 mov	 DWORD PTR _pMsg$[ebp+32], eax

; 695  : 	pMsg.lBuyDate = this->GetCurrentDate();

  0187c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0187f	e8 00 00 00 00	 call	 ?GetCurrentDate@CPeriodItemEx@@QAEJXZ ; CPeriodItemEx::GetCurrentDate
  01884	89 45 f0	 mov	 DWORD PTR _pMsg$[ebp+36], eax

; 696  : 	pMsg.lExpireDate = this->GetExpireDate(dwDuration);

  01887	8b 45 10	 mov	 eax, DWORD PTR _dwDuration$[ebp]
  0188a	50		 push	 eax
  0188b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0188e	e8 00 00 00 00	 call	 ?GetExpireDate@CPeriodItemEx@@QAEJH@Z ; CPeriodItemEx::GetExpireDate
  01893	89 45 f4	 mov	 DWORD PTR _pMsg$[ebp+40], eax

; 697  : 
; 698  : 	PHeadSubSetB((LPBYTE)&pMsg,0xD1,0x01,sizeof(pMsg));

  01896	6a 2c		 push	 44			; 0000002cH
  01898	6a 01		 push	 1
  0189a	68 d1 00 00 00	 push	 209			; 000000d1H
  0189f	8d 45 cc	 lea	 eax, DWORD PTR _pMsg$[ebp]
  018a2	50		 push	 eax
  018a3	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB
  018a8	83 c4 10	 add	 esp, 16			; 00000010H

; 699  : 	LogAddTD("[PeriodItemEx][Insert PeriodItem] Request Insert PeriodItem Data. User Id : %s(%d), Name : %s, Item : %s(%d), Type : %d, Serial : %u, Duration : %d",
; 700  : 		lpObj->AccountID,lpObj->DBNumber,lpObj->Name,ItemAttribute[lpItemData->wItemCode].Name,lpItemData->wItemCode,lpItemData->btType,lpItemData->dwSerial,dwDuration);

  018ab	8b 45 10	 mov	 eax, DWORD PTR _dwDuration$[ebp]
  018ae	50		 push	 eax
  018af	8b 4d 0c	 mov	 ecx, DWORD PTR _lpItemData$[ebp]
  018b2	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  018b5	52		 push	 edx
  018b6	8b 45 0c	 mov	 eax, DWORD PTR _lpItemData$[ebp]
  018b9	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  018bd	51		 push	 ecx
  018be	8b 55 0c	 mov	 edx, DWORD PTR _lpItemData$[ebp]
  018c1	0f b7 42 02	 movzx	 eax, WORD PTR [edx+2]
  018c5	50		 push	 eax
  018c6	8b 4d 0c	 mov	 ecx, DWORD PTR _lpItemData$[ebp]
  018c9	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  018cd	6b d2 70	 imul	 edx, 112		; 00000070H
  018d0	81 c2 00 00 00
	00		 add	 edx, OFFSET ?ItemAttribute@@3PAUITEM_ATTRIBUTE@@A ; ItemAttribute
  018d6	52		 push	 edx
  018d7	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  018da	83 c0 77	 add	 eax, 119		; 00000077H
  018dd	50		 push	 eax
  018de	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  018e1	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  018e4	52		 push	 edx
  018e5	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  018e8	83 c0 6c	 add	 eax, 108		; 0000006cH
  018eb	50		 push	 eax
  018ec	68 00 00 00 00	 push	 OFFSET ??_C@_0JE@PDPOHGBI@?$FLPeriodItemEx?$FN?$FLInsert?5PeriodItem@
  018f1	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  018f7	83 c4 24	 add	 esp, 36			; 00000024H

; 701  : 
; 702  : 	cDBSMng.Send((char*)&pMsg,sizeof(pMsg));

  018fa	6a 2c		 push	 44			; 0000002cH
  018fc	8d 45 cc	 lea	 eax, DWORD PTR _pMsg$[ebp]
  018ff	50		 push	 eax
  01900	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  01905	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send

; 703  : }

  0190a	5f		 pop	 edi
  0190b	5e		 pop	 esi
  0190c	5b		 pop	 ebx
  0190d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01910	33 cd		 xor	 ecx, ebp
  01912	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01917	8b e5		 mov	 esp, ebp
  01919	5d		 pop	 ebp
  0191a	c2 0c 00	 ret	 12			; 0000000cH
?RequestPeriodItemInsert@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@PAUITEMDATA@@K@Z ENDP ; CPeriodItemEx::RequestPeriodItemInsert
_TEXT	ENDS
PUBLIC	??_C@_0IF@CLMCMAOG@?$FLPeriodItemEx?$FN?$FLDelete?5PeriodItem@ ; `string'
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_0IF@CLMCMAOG@?$FLPeriodItemEx?$FN?$FLDelete?5PeriodItem@
CONST	SEGMENT
??_C@_0IF@CLMCMAOG@?$FLPeriodItemEx?$FN?$FLDelete?5PeriodItem@ DB '[Perio'
	DB	'dItemEx][Delete PeriodItem] Request Delete PeriodItem Data. U'
	DB	'ser Id : %s(%d), Name : %s, Item : %s(%d), Type : %d, Serial '
	DB	': %u', 00H					; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_pMsg$ = -40						; size = 32
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_lpItemData$ = 12					; size = 4
?RequestPeriodItemDelete@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@PAUITEMDATA@@@Z PROC ; CPeriodItemEx::RequestPeriodItemDelete
; _this$ = ecx

; 707  : {

  01920	55		 push	 ebp
  01921	8b ec		 mov	 ebp, esp
  01923	83 ec 68	 sub	 esp, 104		; 00000068H
  01926	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0192b	33 c5		 xor	 eax, ebp
  0192d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  01930	53		 push	 ebx
  01931	56		 push	 esi
  01932	57		 push	 edi
  01933	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 708  : 	PMSG_REQ_PERIODITEMEX_DELETE pMsg;
; 709  : 	pMsg.wUserIndex = lpObj->m_Index;

  01936	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01939	66 8b 08	 mov	 cx, WORD PTR [eax]
  0193c	66 89 4d e0	 mov	 WORD PTR _pMsg$[ebp+8], cx

; 710  : 	pMsg.dwUserGuid = lpObj->DBNumber;

  01940	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01943	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  01946	89 4d dc	 mov	 DWORD PTR _pMsg$[ebp+4], ecx

; 711  : 	memcpy(pMsg.chCharacterName,lpObj->Name,11);

  01949	6a 0b		 push	 11			; 0000000bH
  0194b	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0194e	83 c0 77	 add	 eax, 119		; 00000077H
  01951	50		 push	 eax
  01952	8d 4d eb	 lea	 ecx, DWORD PTR _pMsg$[ebp+19]
  01955	51		 push	 ecx
  01956	e8 00 00 00 00	 call	 _memcpy
  0195b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 712  : 
; 713  : 	pMsg.wItemCode = lpItemData->wItemCode;

  0195e	8b 45 0c	 mov	 eax, DWORD PTR _lpItemData$[ebp]
  01961	66 8b 48 02	 mov	 cx, WORD PTR [eax+2]
  01965	66 89 4d e8	 mov	 WORD PTR _pMsg$[ebp+16], cx

; 714  : 	pMsg.btItemType = lpItemData->btType;

  01969	8b 45 0c	 mov	 eax, DWORD PTR _lpItemData$[ebp]
  0196c	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  0196f	88 4d ea	 mov	 BYTE PTR _pMsg$[ebp+18], cl

; 715  : 	pMsg.dwSerial = lpItemData->dwSerial;

  01972	8b 45 0c	 mov	 eax, DWORD PTR _lpItemData$[ebp]
  01975	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  01978	89 4d e4	 mov	 DWORD PTR _pMsg$[ebp+12], ecx

; 716  : 
; 717  : 	PHeadSubSetB((LPBYTE)&pMsg,0xD1,0x02,sizeof(pMsg));

  0197b	6a 20		 push	 32			; 00000020H
  0197d	6a 02		 push	 2
  0197f	68 d1 00 00 00	 push	 209			; 000000d1H
  01984	8d 45 d8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  01987	50		 push	 eax
  01988	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB
  0198d	83 c4 10	 add	 esp, 16			; 00000010H

; 718  : 
; 719  : 	LogAddTD("[PeriodItemEx][Delete PeriodItem] Request Delete PeriodItem Data. User Id : %s(%d), Name : %s, Item : %s(%d), Type : %d, Serial : %u",
; 720  : 		lpObj->AccountID,lpObj->DBNumber,lpObj->Name,ItemAttribute[lpItemData->wItemCode].Name,lpItemData->wItemCode,lpItemData->btType,lpItemData->dwSerial);

  01990	8b 45 0c	 mov	 eax, DWORD PTR _lpItemData$[ebp]
  01993	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  01996	51		 push	 ecx
  01997	8b 55 0c	 mov	 edx, DWORD PTR _lpItemData$[ebp]
  0199a	0f b6 42 01	 movzx	 eax, BYTE PTR [edx+1]
  0199e	50		 push	 eax
  0199f	8b 4d 0c	 mov	 ecx, DWORD PTR _lpItemData$[ebp]
  019a2	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  019a6	52		 push	 edx
  019a7	8b 45 0c	 mov	 eax, DWORD PTR _lpItemData$[ebp]
  019aa	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  019ae	6b c9 70	 imul	 ecx, 112		; 00000070H
  019b1	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?ItemAttribute@@3PAUITEM_ATTRIBUTE@@A ; ItemAttribute
  019b7	51		 push	 ecx
  019b8	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  019bb	83 c2 77	 add	 edx, 119		; 00000077H
  019be	52		 push	 edx
  019bf	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  019c2	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  019c5	51		 push	 ecx
  019c6	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  019c9	83 c2 6c	 add	 edx, 108		; 0000006cH
  019cc	52		 push	 edx
  019cd	68 00 00 00 00	 push	 OFFSET ??_C@_0IF@CLMCMAOG@?$FLPeriodItemEx?$FN?$FLDelete?5PeriodItem@
  019d2	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  019d8	83 c4 20	 add	 esp, 32			; 00000020H

; 721  : 
; 722  : 	cDBSMng.Send((char*)&pMsg,sizeof(pMsg));

  019db	6a 20		 push	 32			; 00000020H
  019dd	8d 45 d8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  019e0	50		 push	 eax
  019e1	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  019e6	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send

; 723  : }

  019eb	5f		 pop	 edi
  019ec	5e		 pop	 esi
  019ed	5b		 pop	 ebx
  019ee	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  019f1	33 cd		 xor	 ecx, ebp
  019f3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  019f8	8b e5		 mov	 esp, ebp
  019fa	5d		 pop	 ebp
  019fb	c2 08 00	 ret	 8
?RequestPeriodItemDelete@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@PAUITEMDATA@@@Z ENDP ; CPeriodItemEx::RequestPeriodItemDelete
_TEXT	ENDS
PUBLIC	?RequestPeriodItemUpdate@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@PAUITEMDATA@@@Z ; CPeriodItemEx::RequestPeriodItemUpdate
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_lpItemData$ = 12					; size = 4
?RequestPeriodItemUpdate@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@PAUITEMDATA@@@Z PROC ; CPeriodItemEx::RequestPeriodItemUpdate
; _this$ = ecx

; 727  : {

  01a00	55		 push	 ebp
  01a01	8b ec		 mov	 ebp, esp
  01a03	83 ec 44	 sub	 esp, 68			; 00000044H
  01a06	53		 push	 ebx
  01a07	56		 push	 esi
  01a08	57		 push	 edi
  01a09	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 728  : 	// ----
; 729  : }

  01a0c	5f		 pop	 edi
  01a0d	5e		 pop	 esi
  01a0e	5b		 pop	 ebx
  01a0f	8b e5		 mov	 esp, ebp
  01a11	5d		 pop	 ebp
  01a12	c2 08 00	 ret	 8
?RequestPeriodItemUpdate@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@PAUITEMDATA@@@Z ENDP ; CPeriodItemEx::RequestPeriodItemUpdate
_TEXT	ENDS
PUBLIC	??_C@_0KD@OMJFFMBH@?$FLPeriodItemEx?$FN?$FLInsert?5PeriodItem@ ; `string'
PUBLIC	?OnRequestPeriodItemListOnce@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@PAUITEMDATA@@@Z ; CPeriodItemEx::OnRequestPeriodItemListOnce
PUBLIC	?DGPeriodItemExInsert@CPeriodItemEx@@QAEXPAUPMSG_ANS_PERIODITEMEX_INSERT@@@Z ; CPeriodItemEx::DGPeriodItemExInsert
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
;	COMDAT ??_C@_0KD@OMJFFMBH@?$FLPeriodItemEx?$FN?$FLInsert?5PeriodItem@
CONST	SEGMENT
??_C@_0KD@OMJFFMBH@?$FLPeriodItemEx?$FN?$FLInsert?5PeriodItem@ DB '[Perio'
	DB	'dItemEx][Insert PeriodItem] OnRequest Insert PeriodItem Data.'
	DB	' User Id : %s(%d), Name : %s, Item : %s(%d), Type : %d, Seria'
	DB	'l : %u, Duration : %d, Result : %d', 00H	; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
tv78 = -84						; size = 4
_lpObj$ = -16						; size = 4
_iInsertedSlotIndex$ = -12				; size = 4
_iIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_lpMsg$ = 8						; size = 4
?DGPeriodItemExInsert@CPeriodItemEx@@QAEXPAUPMSG_ANS_PERIODITEMEX_INSERT@@@Z PROC ; CPeriodItemEx::DGPeriodItemExInsert
; _this$ = ecx

; 733  : {

  01a20	55		 push	 ebp
  01a21	8b ec		 mov	 ebp, esp
  01a23	83 ec 54	 sub	 esp, 84			; 00000054H
  01a26	53		 push	 ebx
  01a27	56		 push	 esi
  01a28	57		 push	 edi
  01a29	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 734  : 	int iIndex = lpMsg->wUserIndex;

  01a2c	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01a2f	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  01a33	89 4d f8	 mov	 DWORD PTR _iIndex$[ebp], ecx

; 735  : 	int iInsertedSlotIndex = 0;

  01a36	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _iInsertedSlotIndex$[ebp], 0

; 736  : 
; 737  : 	if( iIndex < 0 || iIndex >= OBJMAX )

  01a3d	83 7d f8 00	 cmp	 DWORD PTR _iIndex$[ebp], 0
  01a41	7c 09		 jl	 SHORT $LN11@DGPeriodIt
  01a43	81 7d f8 98 3a
	00 00		 cmp	 DWORD PTR _iIndex$[ebp], 15000 ; 00003a98H
  01a4a	7c 05		 jl	 SHORT $LN12@DGPeriodIt
$LN11@DGPeriodIt:

; 738  : 		return;

  01a4c	e9 28 01 00 00	 jmp	 $LN13@DGPeriodIt
$LN12@DGPeriodIt:

; 739  : 
; 740  : 	LPOBJ lpObj = &gObj[iIndex];

  01a51	8b 45 f8	 mov	 eax, DWORD PTR _iIndex$[ebp]
  01a54	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01a5a	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01a60	89 45 f0	 mov	 DWORD PTR _lpObj$[ebp], eax

; 741  : 
; 742  : 	if( lpObj == NULL )

  01a63	75 05		 jne	 SHORT $LN10@DGPeriodIt

; 743  : 		return;

  01a65	e9 0f 01 00 00	 jmp	 $LN13@DGPeriodIt
$LN10@DGPeriodIt:

; 744  : 
; 745  : 	if( lpObj->Type != OBJ_USER ||
; 746  : 		lpObj->Connected < PLAYER_LOGGED )

  01a6a	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01a6d	0f b7 48 68	 movzx	 ecx, WORD PTR [eax+104]
  01a71	83 f9 01	 cmp	 ecx, 1
  01a74	75 09		 jne	 SHORT $LN8@DGPeriodIt
  01a76	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01a79	83 78 04 02	 cmp	 DWORD PTR [eax+4], 2
  01a7d	7d 05		 jge	 SHORT $LN9@DGPeriodIt
$LN8@DGPeriodIt:

; 747  : 		return;

  01a7f	e9 f5 00 00 00	 jmp	 $LN13@DGPeriodIt
$LN9@DGPeriodIt:

; 748  : 
; 749  : 
; 750  : 	switch( lpMsg->btResultCode )

  01a84	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01a87	8a 48 0a	 mov	 cl, BYTE PTR [eax+10]
  01a8a	88 4d ac	 mov	 BYTE PTR tv78[ebp], cl
  01a8d	80 7d ac 00	 cmp	 BYTE PTR tv78[ebp], 0
  01a91	74 05		 je	 SHORT $LN5@DGPeriodIt
  01a93	e9 87 00 00 00	 jmp	 $LN6@DGPeriodIt
$LN5@DGPeriodIt:

; 751  : 	{
; 752  : 	case 0:
; 753  : 		if( lpMsg->btItemtype == 1 )

  01a98	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01a9b	0f b6 48 0b	 movzx	 ecx, BYTE PTR [eax+11]
  01a9f	83 f9 01	 cmp	 ecx, 1
  01aa2	75 1d		 jne	 SHORT $LN4@DGPeriodIt

; 754  : 		{
; 755  : 			gObjApplyBuffEffectItemPeriod(lpObj,lpMsg->wItemCode,lpMsg->dwDuration);

  01aa4	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01aa7	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  01aaa	51		 push	 ecx
  01aab	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  01aae	0f b7 42 0c	 movzx	 eax, WORD PTR [edx+12]
  01ab2	50		 push	 eax
  01ab3	8b 4d f0	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01ab6	51		 push	 ecx
  01ab7	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectItemPeriod@@YAEPAUOBJECTSTRUCT@@HH@Z ; gObjApplyBuffEffectItemPeriod
  01abc	83 c4 0c	 add	 esp, 12			; 0000000cH
  01abf	eb 5e		 jmp	 SHORT $LN6@DGPeriodIt
$LN4@DGPeriodIt:

; 756  : 		}
; 757  : 		else if( lpMsg->btItemtype == 2 )

  01ac1	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01ac4	0f b6 48 0b	 movzx	 ecx, BYTE PTR [eax+11]
  01ac8	83 f9 02	 cmp	 ecx, 2
  01acb	75 52		 jne	 SHORT $LN6@DGPeriodIt

; 758  : 		{
; 759  : 			iInsertedSlotIndex = this->AddPeriodItemData(lpObj,lpMsg->wItemCode,lpMsg->dwSerial,lpMsg->dwDuration);

  01acd	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01ad0	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  01ad3	51		 push	 ecx
  01ad4	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  01ad7	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  01ada	50		 push	 eax
  01adb	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  01ade	0f b7 51 0c	 movzx	 edx, WORD PTR [ecx+12]
  01ae2	52		 push	 edx
  01ae3	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01ae6	50		 push	 eax
  01ae7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01aea	e8 00 00 00 00	 call	 ?AddPeriodItemData@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GKH@Z ; CPeriodItemEx::AddPeriodItemData
  01aef	89 45 f4	 mov	 DWORD PTR _iInsertedSlotIndex$[ebp], eax

; 760  : 			OnRequestPeriodItemListOnce(lpObj,&this->m_PeriodData[lpObj->m_PeriodDataIndex].itemData[iInsertedSlotIndex]);

  01af2	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01af5	8b 88 20 26 00
	00		 mov	 ecx, DWORD PTR [eax+9760]
  01afb	69 c9 6c 03 00
	00		 imul	 ecx, 876		; 0000036cH
  01b01	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01b04	8d 44 0a 04	 lea	 eax, DWORD PTR [edx+ecx+4]
  01b08	8b 4d f4	 mov	 ecx, DWORD PTR _iInsertedSlotIndex$[ebp]
  01b0b	6b c9 1c	 imul	 ecx, 28			; 0000001cH
  01b0e	8d 54 08 24	 lea	 edx, DWORD PTR [eax+ecx+36]
  01b12	52		 push	 edx
  01b13	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01b16	50		 push	 eax
  01b17	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01b1a	e8 00 00 00 00	 call	 ?OnRequestPeriodItemListOnce@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@PAUITEMDATA@@@Z ; CPeriodItemEx::OnRequestPeriodItemListOnce
$LN6@DGPeriodIt:

; 761  : 		}
; 762  : 		break;
; 763  : 	default:break;
; 764  : 	}
; 765  : 
; 766  : 	LogAddTD("[PeriodItemEx][Insert PeriodItem] OnRequest Insert PeriodItem Data. User Id : %s(%d), Name : %s, Item : %s(%d), Type : %d, Serial : %u, Duration : %d, Result : %d",
; 767  : 		lpObj->AccountID,lpObj->DBNumber,lpObj->Name,ItemAttribute[lpMsg->wItemCode].Name,lpMsg->wItemCode,lpMsg->btItemtype,lpMsg->dwSerial,lpMsg->dwDuration,lpMsg->btResultCode);

  01b1f	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01b22	0f b6 48 0a	 movzx	 ecx, BYTE PTR [eax+10]
  01b26	51		 push	 ecx
  01b27	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  01b2a	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  01b2d	50		 push	 eax
  01b2e	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  01b31	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  01b34	52		 push	 edx
  01b35	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01b38	0f b6 48 0b	 movzx	 ecx, BYTE PTR [eax+11]
  01b3c	51		 push	 ecx
  01b3d	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  01b40	0f b7 42 0c	 movzx	 eax, WORD PTR [edx+12]
  01b44	50		 push	 eax
  01b45	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  01b48	0f b7 51 0c	 movzx	 edx, WORD PTR [ecx+12]
  01b4c	6b d2 70	 imul	 edx, 112		; 00000070H
  01b4f	81 c2 00 00 00
	00		 add	 edx, OFFSET ?ItemAttribute@@3PAUITEM_ATTRIBUTE@@A ; ItemAttribute
  01b55	52		 push	 edx
  01b56	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01b59	83 c0 77	 add	 eax, 119		; 00000077H
  01b5c	50		 push	 eax
  01b5d	8b 4d f0	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01b60	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  01b63	52		 push	 edx
  01b64	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01b67	83 c0 6c	 add	 eax, 108		; 0000006cH
  01b6a	50		 push	 eax
  01b6b	68 00 00 00 00	 push	 OFFSET ??_C@_0KD@OMJFFMBH@?$FLPeriodItemEx?$FN?$FLInsert?5PeriodItem@
  01b70	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  01b76	83 c4 28	 add	 esp, 40			; 00000028H
$LN13@DGPeriodIt:

; 768  : }

  01b79	5f		 pop	 edi
  01b7a	5e		 pop	 esi
  01b7b	5b		 pop	 ebx
  01b7c	8b e5		 mov	 esp, ebp
  01b7e	5d		 pop	 ebp
  01b7f	c2 04 00	 ret	 4
?DGPeriodItemExInsert@CPeriodItemEx@@QAEXPAUPMSG_ANS_PERIODITEMEX_INSERT@@@Z ENDP ; CPeriodItemEx::DGPeriodItemExInsert
_TEXT	ENDS
PUBLIC	??_C@_0GN@KBPCICLD@?$FLPeriodItemEx?$FN?$FLDelete?5PeriodItem@ ; `string'
PUBLIC	?DGPeriodItemExDelete@CPeriodItemEx@@QAEXPAUPMSG_ANS_PERIODITEMEX_DELETE@@@Z ; CPeriodItemEx::DGPeriodItemExDelete
;	COMDAT ??_C@_0GN@KBPCICLD@?$FLPeriodItemEx?$FN?$FLDelete?5PeriodItem@
CONST	SEGMENT
??_C@_0GN@KBPCICLD@?$FLPeriodItemEx?$FN?$FLDelete?5PeriodItem@ DB '[Perio'
	DB	'dItemEx][Delete PeriodItem] OnRequest Delete PeriodItem Data.'
	DB	' User Id : %s(%d), Name : %s, Result : %d', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_lpObj$ = -12						; size = 4
_iIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_lpMsg$ = 8						; size = 4
?DGPeriodItemExDelete@CPeriodItemEx@@QAEXPAUPMSG_ANS_PERIODITEMEX_DELETE@@@Z PROC ; CPeriodItemEx::DGPeriodItemExDelete
; _this$ = ecx

; 772  : {

  01b90	55		 push	 ebp
  01b91	8b ec		 mov	 ebp, esp
  01b93	83 ec 4c	 sub	 esp, 76			; 0000004cH
  01b96	53		 push	 ebx
  01b97	56		 push	 esi
  01b98	57		 push	 edi
  01b99	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 773  : 	int iIndex = lpMsg->wUserIndex;

  01b9c	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01b9f	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  01ba3	89 4d f8	 mov	 DWORD PTR _iIndex$[ebp], ecx

; 774  : 
; 775  : 	if( iIndex < 0 || iIndex >= OBJMAX )

  01ba6	83 7d f8 00	 cmp	 DWORD PTR _iIndex$[ebp], 0
  01baa	7c 09		 jl	 SHORT $LN6@DGPeriodIt@2
  01bac	81 7d f8 98 3a
	00 00		 cmp	 DWORD PTR _iIndex$[ebp], 15000 ; 00003a98H
  01bb3	7c 02		 jl	 SHORT $LN7@DGPeriodIt@2
$LN6@DGPeriodIt@2:

; 776  : 		return;

  01bb5	eb 65		 jmp	 SHORT $LN8@DGPeriodIt@2
$LN7@DGPeriodIt@2:

; 777  : 
; 778  : 	LPOBJ lpObj = &gObj[iIndex];

  01bb7	8b 45 f8	 mov	 eax, DWORD PTR _iIndex$[ebp]
  01bba	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01bc0	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01bc6	89 45 f4	 mov	 DWORD PTR _lpObj$[ebp], eax

; 779  : 
; 780  : 	if( lpObj == NULL )

  01bc9	75 02		 jne	 SHORT $LN5@DGPeriodIt@2

; 781  : 		return;

  01bcb	eb 4f		 jmp	 SHORT $LN8@DGPeriodIt@2
$LN5@DGPeriodIt@2:

; 782  : 
; 783  : 	if( lpObj->Type != OBJ_USER ||
; 784  : 		lpObj->Connected < PLAYER_LOGGED )

  01bcd	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01bd0	0f b7 48 68	 movzx	 ecx, WORD PTR [eax+104]
  01bd4	83 f9 01	 cmp	 ecx, 1
  01bd7	75 09		 jne	 SHORT $LN3@DGPeriodIt@2
  01bd9	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01bdc	83 78 04 02	 cmp	 DWORD PTR [eax+4], 2
  01be0	7d 02		 jge	 SHORT $LN4@DGPeriodIt@2
$LN3@DGPeriodIt@2:

; 785  : 		return;

  01be2	eb 38		 jmp	 SHORT $LN8@DGPeriodIt@2
$LN4@DGPeriodIt@2:

; 786  : 
; 787  : 	if( lpMsg->btResultCode )

  01be4	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01be7	0f b6 48 0a	 movzx	 ecx, BYTE PTR [eax+10]
  01beb	85 c9		 test	 ecx, ecx
  01bed	74 02		 je	 SHORT $LN2@DGPeriodIt@2

; 788  : 	{
; 789  : 
; 790  : 	}
; 791  : 	else

  01bef	eb 2b		 jmp	 SHORT $LN8@DGPeriodIt@2
$LN2@DGPeriodIt@2:

; 792  : 	{
; 793  : 		LogAddTD("[PeriodItemEx][Delete PeriodItem] OnRequest Delete PeriodItem Data. User Id : %s(%d), Name : %s, Result : %d",
; 794  : 			lpObj->AccountID,lpObj->DBNumber,lpObj->Name,lpMsg->btResultCode);

  01bf1	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01bf4	0f b6 48 0a	 movzx	 ecx, BYTE PTR [eax+10]
  01bf8	51		 push	 ecx
  01bf9	8b 55 f4	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01bfc	83 c2 77	 add	 edx, 119		; 00000077H
  01bff	52		 push	 edx
  01c00	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01c03	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  01c06	51		 push	 ecx
  01c07	8b 55 f4	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01c0a	83 c2 6c	 add	 edx, 108		; 0000006cH
  01c0d	52		 push	 edx
  01c0e	68 00 00 00 00	 push	 OFFSET ??_C@_0GN@KBPCICLD@?$FLPeriodItemEx?$FN?$FLDelete?5PeriodItem@
  01c13	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  01c19	83 c4 14	 add	 esp, 20			; 00000014H
$LN8@DGPeriodIt@2:

; 795  : 	}
; 796  : }

  01c1c	5f		 pop	 edi
  01c1d	5e		 pop	 esi
  01c1e	5b		 pop	 ebx
  01c1f	8b e5		 mov	 esp, ebp
  01c21	5d		 pop	 ebp
  01c22	c2 04 00	 ret	 4
?DGPeriodItemExDelete@CPeriodItemEx@@QAEXPAUPMSG_ANS_PERIODITEMEX_DELETE@@@Z ENDP ; CPeriodItemEx::DGPeriodItemExDelete
_TEXT	ENDS
PUBLIC	??_C@_0IN@JNCNNGOP@?$FLPeriodItemEx?$FN?$FLSelectItemList?$FN?5U@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?DGPeriodItemExSelect@CPeriodItemEx@@QAEXPAUPMSG_ANS_PERIODITEMEX_SELECT@@@Z ; CPeriodItemEx::DGPeriodItemExSelect
;	COMDAT ??_C@_0IN@JNCNNGOP@?$FLPeriodItemEx?$FN?$FLSelectItemList?$FN?5U@
CONST	SEGMENT
??_C@_0IN@JNCNNGOP@?$FLPeriodItemEx?$FN?$FLSelectItemList?$FN?5U@ DB '[Pe'
	DB	'riodItemEx][SelectItemList] User Id : %s(%d), Name : %s, Item'
	DB	' Code : %d(%s), PeriodType : %d, Serial : %u, Duration : %d, '
	DB	'ExpireDate : %d', 00H			; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_i$221750 = -644					; size = 4
_dwDuration$221749 = -640				; size = 4
_iItemCount$221748 = -636				; size = 4
_ItemList$221747 = -632					; size = 616
_lpObj$ = -16						; size = 4
_iIndex$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?DGPeriodItemExSelect@CPeriodItemEx@@QAEXPAUPMSG_ANS_PERIODITEMEX_SELECT@@@Z PROC ; CPeriodItemEx::DGPeriodItemExSelect
; _this$ = ecx

; 800  : {

  01c30	55		 push	 ebp
  01c31	8b ec		 mov	 ebp, esp
  01c33	81 ec c4 02 00
	00		 sub	 esp, 708		; 000002c4H
  01c39	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  01c3e	33 c5		 xor	 eax, ebp
  01c40	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  01c43	53		 push	 ebx
  01c44	56		 push	 esi
  01c45	57		 push	 edi
  01c46	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 801  : 	int iIndex = lpMsg->wUserIndex;

  01c49	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01c4c	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  01c50	89 4d f4	 mov	 DWORD PTR _iIndex$[ebp], ecx

; 802  : 
; 803  : 	if( iIndex < 0 || iIndex >= OBJMAX )

  01c53	83 7d f4 00	 cmp	 DWORD PTR _iIndex$[ebp], 0
  01c57	7c 09		 jl	 SHORT $LN11@DGPeriodIt@3
  01c59	81 7d f4 98 3a
	00 00		 cmp	 DWORD PTR _iIndex$[ebp], 15000 ; 00003a98H
  01c60	7c 05		 jl	 SHORT $LN12@DGPeriodIt@3
$LN11@DGPeriodIt@3:

; 804  : 		return;

  01c62	e9 ec 01 00 00	 jmp	 $LN13@DGPeriodIt@3
$LN12@DGPeriodIt@3:

; 805  : 
; 806  : 	LPOBJ lpObj = &gObj[iIndex];

  01c67	8b 45 f4	 mov	 eax, DWORD PTR _iIndex$[ebp]
  01c6a	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01c70	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01c76	89 45 f0	 mov	 DWORD PTR _lpObj$[ebp], eax

; 807  : 
; 808  : 	if( lpObj == NULL )

  01c79	75 05		 jne	 SHORT $LN10@DGPeriodIt@3

; 809  : 		return;

  01c7b	e9 d3 01 00 00	 jmp	 $LN13@DGPeriodIt@3
$LN10@DGPeriodIt@3:

; 810  : 
; 811  : 	if( lpObj->Type != OBJ_USER ||
; 812  : 		lpObj->Connected < PLAYER_LOGGED )

  01c80	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01c83	0f b7 48 68	 movzx	 ecx, WORD PTR [eax+104]
  01c87	83 f9 01	 cmp	 ecx, 1
  01c8a	75 09		 jne	 SHORT $LN8@DGPeriodIt@3
  01c8c	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01c8f	83 78 04 02	 cmp	 DWORD PTR [eax+4], 2
  01c93	7d 05		 jge	 SHORT $LN9@DGPeriodIt@3
$LN8@DGPeriodIt@3:

; 813  : 		return;

  01c95	e9 b9 01 00 00	 jmp	 $LN13@DGPeriodIt@3
$LN9@DGPeriodIt@3:

; 814  : 
; 815  : 	if( lpMsg->btResultCode > 0 )

  01c9a	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01c9d	0f b6 48 0a	 movzx	 ecx, BYTE PTR [eax+10]
  01ca1	85 c9		 test	 ecx, ecx
  01ca3	0f 8e aa 01 00
	00		 jle	 $LN13@DGPeriodIt@3

; 816  : 	{
; 817  : 		PERIOD_ITEMLIST ItemList;
; 818  : 		memcpy(&ItemList,&lpMsg->ItemList,sizeof(ItemList));

  01ca9	68 68 02 00 00	 push	 616			; 00000268H
  01cae	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01cb1	83 c0 0c	 add	 eax, 12			; 0000000cH
  01cb4	50		 push	 eax
  01cb5	8d 8d 88 fd ff
	ff		 lea	 ecx, DWORD PTR _ItemList$221747[ebp]
  01cbb	51		 push	 ecx
  01cbc	e8 00 00 00 00	 call	 _memcpy
  01cc1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 819  : 
; 820  : 		int iItemCount = ItemList.btItemCount;

  01cc4	0f b6 85 8c fd
	ff ff		 movzx	 eax, BYTE PTR _ItemList$221747[ebp+4]
  01ccb	89 85 84 fd ff
	ff		 mov	 DWORD PTR _iItemCount$221748[ebp], eax

; 821  : 		DWORD dwDuration;
; 822  : 
; 823  : 		for(int i = 0; i < iItemCount; i++)

  01cd1	c7 85 7c fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$221750[ebp], 0
  01cdb	eb 0f		 jmp	 SHORT $LN6@DGPeriodIt@3
$LN5@DGPeriodIt@3:
  01cdd	8b 85 7c fd ff
	ff		 mov	 eax, DWORD PTR _i$221750[ebp]
  01ce3	83 c0 01	 add	 eax, 1
  01ce6	89 85 7c fd ff
	ff		 mov	 DWORD PTR _i$221750[ebp], eax
$LN6@DGPeriodIt@3:
  01cec	8b 85 7c fd ff
	ff		 mov	 eax, DWORD PTR _i$221750[ebp]
  01cf2	3b 85 84 fd ff
	ff		 cmp	 eax, DWORD PTR _iItemCount$221748[ebp]
  01cf8	0f 8d 49 01 00
	00		 jge	 $LN4@DGPeriodIt@3

; 824  : 		{
; 825  : 			dwDuration = this->GetLeftDate(ItemList.ItemData[i].lItemExpireDate);

  01cfe	8b 85 7c fd ff
	ff		 mov	 eax, DWORD PTR _i$221750[ebp]
  01d04	6b c0 14	 imul	 eax, 20			; 00000014H
  01d07	8b 8c 05 a8 fd
	ff ff		 mov	 ecx, DWORD PTR _ItemList$221747[ebp+eax+32]
  01d0e	51		 push	 ecx
  01d0f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01d12	e8 00 00 00 00	 call	 ?GetLeftDate@CPeriodItemEx@@QAEKJ@Z ; CPeriodItemEx::GetLeftDate
  01d17	89 85 80 fd ff
	ff		 mov	 DWORD PTR _dwDuration$221749[ebp], eax

; 826  : 
; 827  : 			if( ItemList.ItemData[i].btItemType == 1 )

  01d1d	8b 85 7c fd ff
	ff		 mov	 eax, DWORD PTR _i$221750[ebp]
  01d23	6b c0 14	 imul	 eax, 20			; 00000014H
  01d26	0f b6 8c 05 99
	fd ff ff	 movzx	 ecx, BYTE PTR _ItemList$221747[ebp+eax+17]
  01d2e	83 f9 01	 cmp	 ecx, 1
  01d31	75 27		 jne	 SHORT $LN3@DGPeriodIt@3

; 828  : 			{
; 829  : 				gObjApplyBuffEffectItemPeriod(lpObj,ItemList.ItemData[i].wItemCode,dwDuration);

  01d33	8b 85 80 fd ff
	ff		 mov	 eax, DWORD PTR _dwDuration$221749[ebp]
  01d39	50		 push	 eax
  01d3a	8b 8d 7c fd ff
	ff		 mov	 ecx, DWORD PTR _i$221750[ebp]
  01d40	6b c9 14	 imul	 ecx, 20			; 00000014H
  01d43	0f b7 94 0d 9a
	fd ff ff	 movzx	 edx, WORD PTR _ItemList$221747[ebp+ecx+18]
  01d4b	52		 push	 edx
  01d4c	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01d4f	50		 push	 eax
  01d50	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectItemPeriod@@YAEPAUOBJECTSTRUCT@@HH@Z ; gObjApplyBuffEffectItemPeriod
  01d55	83 c4 0c	 add	 esp, 12			; 0000000cH
  01d58	eb 5d		 jmp	 SHORT $LN2@DGPeriodIt@3
$LN3@DGPeriodIt@3:

; 830  : 			}
; 831  : 			else if( ItemList.ItemData[i].btItemType == 2 )

  01d5a	8b 85 7c fd ff
	ff		 mov	 eax, DWORD PTR _i$221750[ebp]
  01d60	6b c0 14	 imul	 eax, 20			; 00000014H
  01d63	0f b6 8c 05 99
	fd ff ff	 movzx	 ecx, BYTE PTR _ItemList$221747[ebp+eax+17]
  01d6b	83 f9 02	 cmp	 ecx, 2
  01d6e	75 47		 jne	 SHORT $LN2@DGPeriodIt@3

; 832  : 			{
; 833  : 				AddPeriodItemData(lpObj,ItemList.ItemData[i].wItemCode,ItemList.ItemData[i].dwSerial,dwDuration,ItemList.ItemData[i].lItemExpireDate);

  01d70	8b 85 7c fd ff
	ff		 mov	 eax, DWORD PTR _i$221750[ebp]
  01d76	6b c0 14	 imul	 eax, 20			; 00000014H
  01d79	8b 8c 05 a8 fd
	ff ff		 mov	 ecx, DWORD PTR _ItemList$221747[ebp+eax+32]
  01d80	51		 push	 ecx
  01d81	8b 95 80 fd ff
	ff		 mov	 edx, DWORD PTR _dwDuration$221749[ebp]
  01d87	52		 push	 edx
  01d88	8b 85 7c fd ff
	ff		 mov	 eax, DWORD PTR _i$221750[ebp]
  01d8e	6b c0 14	 imul	 eax, 20			; 00000014H
  01d91	8b 8c 05 a0 fd
	ff ff		 mov	 ecx, DWORD PTR _ItemList$221747[ebp+eax+24]
  01d98	51		 push	 ecx
  01d99	8b 95 7c fd ff
	ff		 mov	 edx, DWORD PTR _i$221750[ebp]
  01d9f	6b d2 14	 imul	 edx, 20			; 00000014H
  01da2	0f b7 84 15 9a
	fd ff ff	 movzx	 eax, WORD PTR _ItemList$221747[ebp+edx+18]
  01daa	50		 push	 eax
  01dab	8b 4d f0	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01dae	51		 push	 ecx
  01daf	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01db2	e8 00 00 00 00	 call	 ?AddPeriodItemData@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GKHJ@Z ; CPeriodItemEx::AddPeriodItemData
$LN2@DGPeriodIt@3:

; 834  : 			}
; 835  : 	
; 836  : 			LogAddTD("[PeriodItemEx][SelectItemList] User Id : %s(%d), Name : %s, Item Code : %d(%s), PeriodType : %d, Serial : %u, Duration : %d, ExpireDate : %d",
; 837  : 				lpObj->AccountID,lpObj->DBNumber,lpObj->Name,ItemList.ItemData[i].wItemCode,ItemAttribute[ItemList.ItemData[i].wItemCode].Name,ItemList.ItemData[i].btItemType,
; 838  : 				ItemList.ItemData[i].dwSerial,dwDuration,ItemList.ItemData[i].lItemExpireDate);

  01db7	8b 85 7c fd ff
	ff		 mov	 eax, DWORD PTR _i$221750[ebp]
  01dbd	6b c0 14	 imul	 eax, 20			; 00000014H
  01dc0	8b 8c 05 a8 fd
	ff ff		 mov	 ecx, DWORD PTR _ItemList$221747[ebp+eax+32]
  01dc7	51		 push	 ecx
  01dc8	8b 95 80 fd ff
	ff		 mov	 edx, DWORD PTR _dwDuration$221749[ebp]
  01dce	52		 push	 edx
  01dcf	8b 85 7c fd ff
	ff		 mov	 eax, DWORD PTR _i$221750[ebp]
  01dd5	6b c0 14	 imul	 eax, 20			; 00000014H
  01dd8	8b 8c 05 a0 fd
	ff ff		 mov	 ecx, DWORD PTR _ItemList$221747[ebp+eax+24]
  01ddf	51		 push	 ecx
  01de0	8b 95 7c fd ff
	ff		 mov	 edx, DWORD PTR _i$221750[ebp]
  01de6	6b d2 14	 imul	 edx, 20			; 00000014H
  01de9	0f b6 84 15 99
	fd ff ff	 movzx	 eax, BYTE PTR _ItemList$221747[ebp+edx+17]
  01df1	50		 push	 eax
  01df2	8b 8d 7c fd ff
	ff		 mov	 ecx, DWORD PTR _i$221750[ebp]
  01df8	6b c9 14	 imul	 ecx, 20			; 00000014H
  01dfb	0f b7 94 0d 9a
	fd ff ff	 movzx	 edx, WORD PTR _ItemList$221747[ebp+ecx+18]
  01e03	6b d2 70	 imul	 edx, 112		; 00000070H
  01e06	81 c2 00 00 00
	00		 add	 edx, OFFSET ?ItemAttribute@@3PAUITEM_ATTRIBUTE@@A ; ItemAttribute
  01e0c	52		 push	 edx
  01e0d	8b 85 7c fd ff
	ff		 mov	 eax, DWORD PTR _i$221750[ebp]
  01e13	6b c0 14	 imul	 eax, 20			; 00000014H
  01e16	0f b7 8c 05 9a
	fd ff ff	 movzx	 ecx, WORD PTR _ItemList$221747[ebp+eax+18]
  01e1e	51		 push	 ecx
  01e1f	8b 55 f0	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01e22	83 c2 77	 add	 edx, 119		; 00000077H
  01e25	52		 push	 edx
  01e26	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01e29	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  01e2c	51		 push	 ecx
  01e2d	8b 55 f0	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01e30	83 c2 6c	 add	 edx, 108		; 0000006cH
  01e33	52		 push	 edx
  01e34	68 00 00 00 00	 push	 OFFSET ??_C@_0IN@JNCNNGOP@?$FLPeriodItemEx?$FN?$FLSelectItemList?$FN?5U@
  01e39	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  01e3f	83 c4 28	 add	 esp, 40			; 00000028H

; 839  : 		}

  01e42	e9 96 fe ff ff	 jmp	 $LN5@DGPeriodIt@3
$LN4@DGPeriodIt@3:

; 840  : 		//GCItemListSend(lpObj->m_Index);//test
; 841  : 		OnRequestPeriodItemList(lpObj);

  01e47	8b 45 f0	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01e4a	50		 push	 eax
  01e4b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01e4e	e8 00 00 00 00	 call	 ?OnRequestPeriodItemList@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@@Z ; CPeriodItemEx::OnRequestPeriodItemList
$LN13@DGPeriodIt@3:

; 842  : 	}
; 843  : }

  01e53	5f		 pop	 edi
  01e54	5e		 pop	 esi
  01e55	5b		 pop	 ebx
  01e56	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01e59	33 cd		 xor	 ecx, ebp
  01e5b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01e60	8b e5		 mov	 esp, ebp
  01e62	5d		 pop	 ebp
  01e63	c2 04 00	 ret	 4
?DGPeriodItemExSelect@CPeriodItemEx@@QAEXPAUPMSG_ANS_PERIODITEMEX_SELECT@@@Z ENDP ; CPeriodItemEx::DGPeriodItemExSelect
_TEXT	ENDS
PUBLIC	??_C@_0HP@MAPFOGIP@?$FLPeriodItemEx?$FN?$FLSetExpiredItemLis@ ; `string'
PUBLIC	?DGPeriodItemExExpiredItemList@CPeriodItemEx@@QAEXPAUPMSG_ANS_PERIODITEMEX_EXPIRED_ITEMLIST@@@Z ; CPeriodItemEx::DGPeriodItemExExpiredItemList
;	COMDAT ??_C@_0HP@MAPFOGIP@?$FLPeriodItemEx?$FN?$FLSetExpiredItemLis@
CONST	SEGMENT
??_C@_0HP@MAPFOGIP@?$FLPeriodItemEx?$FN?$FLSetExpiredItemLis@ DB '[Period'
	DB	'ItemEx][SetExpiredItemList] OnRequest Expired Item Set Disabl'
	DB	'e. User Id : %s(%d), Name : %s, Item : %s(%d), Serial : %u', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_i$221770 = -20						; size = 4
_iInventoryPosition$ = -16				; size = 4
_lpObj$ = -12						; size = 4
_iIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_lpMsg$ = 8						; size = 4
?DGPeriodItemExExpiredItemList@CPeriodItemEx@@QAEXPAUPMSG_ANS_PERIODITEMEX_EXPIRED_ITEMLIST@@@Z PROC ; CPeriodItemEx::DGPeriodItemExExpiredItemList
; _this$ = ecx

; 847  : {

  01e70	55		 push	 ebp
  01e71	8b ec		 mov	 ebp, esp
  01e73	83 ec 54	 sub	 esp, 84			; 00000054H
  01e76	53		 push	 ebx
  01e77	56		 push	 esi
  01e78	57		 push	 edi
  01e79	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 848  : 	int iIndex = lpMsg->wUserIndex;

  01e7c	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01e7f	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  01e83	89 4d f8	 mov	 DWORD PTR _iIndex$[ebp], ecx

; 849  : 
; 850  : 	if( iIndex < 0 || iIndex >= OBJMAX )

  01e86	83 7d f8 00	 cmp	 DWORD PTR _iIndex$[ebp], 0
  01e8a	7c 09		 jl	 SHORT $LN8@DGPeriodIt@4
  01e8c	81 7d f8 98 3a
	00 00		 cmp	 DWORD PTR _iIndex$[ebp], 15000 ; 00003a98H
  01e93	7c 05		 jl	 SHORT $LN9@DGPeriodIt@4
$LN8@DGPeriodIt@4:

; 851  : 		return;

  01e95	e9 ec 00 00 00	 jmp	 $LN10@DGPeriodIt@4
$LN9@DGPeriodIt@4:

; 852  : 
; 853  : 	LPOBJ lpObj = &gObj[iIndex];

  01e9a	8b 45 f8	 mov	 eax, DWORD PTR _iIndex$[ebp]
  01e9d	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01ea3	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01ea9	89 45 f4	 mov	 DWORD PTR _lpObj$[ebp], eax

; 854  : 
; 855  : 	if( lpObj == NULL )

  01eac	75 05		 jne	 SHORT $LN7@DGPeriodIt@4

; 856  : 		return;

  01eae	e9 d3 00 00 00	 jmp	 $LN10@DGPeriodIt@4
$LN7@DGPeriodIt@4:

; 857  : 
; 858  : 	if( lpObj->Type != OBJ_USER ||
; 859  : 		lpObj->Connected < PLAYER_LOGGED )

  01eb3	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01eb6	0f b7 48 68	 movzx	 ecx, WORD PTR [eax+104]
  01eba	83 f9 01	 cmp	 ecx, 1
  01ebd	75 09		 jne	 SHORT $LN5@DGPeriodIt@4
  01ebf	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01ec2	83 78 04 02	 cmp	 DWORD PTR [eax+4], 2
  01ec6	7d 05		 jge	 SHORT $LN6@DGPeriodIt@4
$LN5@DGPeriodIt@4:

; 860  : 		return;

  01ec8	e9 b9 00 00 00	 jmp	 $LN10@DGPeriodIt@4
$LN6@DGPeriodIt@4:

; 861  : 
; 862  : 	int iInventoryPosition = 0;

  01ecd	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _iInventoryPosition$[ebp], 0

; 863  : 
; 864  : 	for(int i = 0; i < lpMsg->btExpiredItemCount; i++)

  01ed4	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _i$221770[ebp], 0
  01edb	eb 09		 jmp	 SHORT $LN4@DGPeriodIt@4
$LN3@DGPeriodIt@4:
  01edd	8b 45 ec	 mov	 eax, DWORD PTR _i$221770[ebp]
  01ee0	83 c0 01	 add	 eax, 1
  01ee3	89 45 ec	 mov	 DWORD PTR _i$221770[ebp], eax
$LN4@DGPeriodIt@4:
  01ee6	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01ee9	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  01eed	39 4d ec	 cmp	 DWORD PTR _i$221770[ebp], ecx
  01ef0	0f 8d 90 00 00
	00		 jge	 $LN10@DGPeriodIt@4

; 865  : 	{
; 866  : 		iInventoryPosition = this->GetItemFromInventory(lpObj,lpMsg->wItemCode[i],lpMsg->dwSerial[i]);

  01ef6	8b 45 ec	 mov	 eax, DWORD PTR _i$221770[ebp]
  01ef9	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  01efc	8b 54 81 30	 mov	 edx, DWORD PTR [ecx+eax*4+48]
  01f00	52		 push	 edx
  01f01	8b 45 ec	 mov	 eax, DWORD PTR _i$221770[ebp]
  01f04	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  01f07	0f b7 54 41 08	 movzx	 edx, WORD PTR [ecx+eax*2+8]
  01f0c	52		 push	 edx
  01f0d	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01f10	50		 push	 eax
  01f11	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01f14	e8 00 00 00 00	 call	 ?GetItemFromInventory@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GK@Z ; CPeriodItemEx::GetItemFromInventory
  01f19	89 45 f0	 mov	 DWORD PTR _iInventoryPosition$[ebp], eax

; 867  : 
; 868  : 		if( iInventoryPosition != -1 )

  01f1c	83 7d f0 ff	 cmp	 DWORD PTR _iInventoryPosition$[ebp], -1
  01f20	74 5f		 je	 SHORT $LN1@DGPeriodIt@4

; 869  : 		{
; 870  : 			LogAddTD("[PeriodItemEx][SetExpiredItemList] OnRequest Expired Item Set Disable. User Id : %s(%d), Name : %s, Item : %s(%d), Serial : %u",
; 871  : 				lpObj->AccountID,lpObj->DBNumber,lpObj->Name,ItemAttribute[lpMsg->wItemCode[i]].Name,lpMsg->wItemCode[i],lpMsg->dwSerial[i]);

  01f22	8b 45 ec	 mov	 eax, DWORD PTR _i$221770[ebp]
  01f25	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  01f28	8b 54 81 30	 mov	 edx, DWORD PTR [ecx+eax*4+48]
  01f2c	52		 push	 edx
  01f2d	8b 45 ec	 mov	 eax, DWORD PTR _i$221770[ebp]
  01f30	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  01f33	0f b7 54 41 08	 movzx	 edx, WORD PTR [ecx+eax*2+8]
  01f38	52		 push	 edx
  01f39	8b 45 ec	 mov	 eax, DWORD PTR _i$221770[ebp]
  01f3c	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  01f3f	0f b7 54 41 08	 movzx	 edx, WORD PTR [ecx+eax*2+8]
  01f44	6b d2 70	 imul	 edx, 112		; 00000070H
  01f47	81 c2 00 00 00
	00		 add	 edx, OFFSET ?ItemAttribute@@3PAUITEM_ATTRIBUTE@@A ; ItemAttribute
  01f4d	52		 push	 edx
  01f4e	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01f51	83 c0 77	 add	 eax, 119		; 00000077H
  01f54	50		 push	 eax
  01f55	8b 4d f4	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01f58	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  01f5b	52		 push	 edx
  01f5c	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01f5f	83 c0 6c	 add	 eax, 108		; 0000006cH
  01f62	50		 push	 eax
  01f63	68 00 00 00 00	 push	 OFFSET ??_C@_0HP@MAPFOGIP@?$FLPeriodItemEx?$FN?$FLSetExpiredItemLis@
  01f68	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  01f6e	83 c4 1c	 add	 esp, 28			; 0000001cH

; 872  : 
; 873  : 			SetDisableItemToExpire(lpObj,iInventoryPosition);

  01f71	8b 45 f0	 mov	 eax, DWORD PTR _iInventoryPosition$[ebp]
  01f74	50		 push	 eax
  01f75	8b 4d f4	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01f78	51		 push	 ecx
  01f79	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01f7c	e8 00 00 00 00	 call	 ?SetDisableItemToExpire@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@H@Z ; CPeriodItemEx::SetDisableItemToExpire
$LN1@DGPeriodIt@4:

; 874  : 		}
; 875  : 	}

  01f81	e9 57 ff ff ff	 jmp	 $LN3@DGPeriodIt@4
$LN10@DGPeriodIt@4:

; 876  : }

  01f86	5f		 pop	 edi
  01f87	5e		 pop	 esi
  01f88	5b		 pop	 ebx
  01f89	8b e5		 mov	 esp, ebp
  01f8b	5d		 pop	 ebp
  01f8c	c2 04 00	 ret	 4
?DGPeriodItemExExpiredItemList@CPeriodItemEx@@QAEXPAUPMSG_ANS_PERIODITEMEX_EXPIRED_ITEMLIST@@@Z ENDP ; CPeriodItemEx::DGPeriodItemExExpiredItemList
_TEXT	ENDS
PUBLIC	??_C@_0FM@CCEOFLFF@?$FLPeriodItemEx?$FN?$FLSelectItemListCou@ ; `string'
PUBLIC	?DGPeriodItemExListCount@CPeriodItemEx@@QAEXPAUPMSG_ANS_PERIODITEMEX_LIST_COUNT@@@Z ; CPeriodItemEx::DGPeriodItemExListCount
;	COMDAT ??_C@_0FM@CCEOFLFF@?$FLPeriodItemEx?$FN?$FLSelectItemListCou@
CONST	SEGMENT
??_C@_0FM@CCEOFLFF@?$FLPeriodItemEx?$FN?$FLSelectItemListCou@ DB '[Period'
	DB	'ItemEx][SelectItemListCount] End PeriodItem List Receive User'
	DB	' Id : %s(%d), Name : %s', 00H		; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_lpObj$ = -12						; size = 4
_iIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_lpMsg$ = 8						; size = 4
?DGPeriodItemExListCount@CPeriodItemEx@@QAEXPAUPMSG_ANS_PERIODITEMEX_LIST_COUNT@@@Z PROC ; CPeriodItemEx::DGPeriodItemExListCount
; _this$ = ecx

; 880  : {

  01f90	55		 push	 ebp
  01f91	8b ec		 mov	 ebp, esp
  01f93	83 ec 4c	 sub	 esp, 76			; 0000004cH
  01f96	53		 push	 ebx
  01f97	56		 push	 esi
  01f98	57		 push	 edi
  01f99	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 881  : 	int iIndex = lpMsg->wUserIndex;

  01f9c	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01f9f	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  01fa3	89 4d f8	 mov	 DWORD PTR _iIndex$[ebp], ecx

; 882  : 
; 883  : 	if( iIndex < 0 || iIndex >= OBJMAX )

  01fa6	83 7d f8 00	 cmp	 DWORD PTR _iIndex$[ebp], 0
  01faa	7c 09		 jl	 SHORT $LN5@DGPeriodIt@5
  01fac	81 7d f8 98 3a
	00 00		 cmp	 DWORD PTR _iIndex$[ebp], 15000 ; 00003a98H
  01fb3	7c 02		 jl	 SHORT $LN6@DGPeriodIt@5
$LN5@DGPeriodIt@5:

; 884  : 		return;

  01fb5	eb 78		 jmp	 SHORT $LN7@DGPeriodIt@5
$LN6@DGPeriodIt@5:

; 885  : 
; 886  : 	LPOBJ lpObj = &gObj[iIndex];

  01fb7	8b 45 f8	 mov	 eax, DWORD PTR _iIndex$[ebp]
  01fba	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01fc0	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01fc6	89 45 f4	 mov	 DWORD PTR _lpObj$[ebp], eax

; 887  : 
; 888  : 	if( lpObj == NULL )

  01fc9	75 02		 jne	 SHORT $LN4@DGPeriodIt@5

; 889  : 		return;

  01fcb	eb 62		 jmp	 SHORT $LN7@DGPeriodIt@5
$LN4@DGPeriodIt@5:

; 890  : 
; 891  : 	if( lpObj->Type != OBJ_USER ||
; 892  : 		lpObj->Connected < PLAYER_LOGGED )

  01fcd	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01fd0	0f b7 48 68	 movzx	 ecx, WORD PTR [eax+104]
  01fd4	83 f9 01	 cmp	 ecx, 1
  01fd7	75 09		 jne	 SHORT $LN2@DGPeriodIt@5
  01fd9	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01fdc	83 78 04 02	 cmp	 DWORD PTR [eax+4], 2
  01fe0	7d 02		 jge	 SHORT $LN3@DGPeriodIt@5
$LN2@DGPeriodIt@5:

; 893  : 		return;

  01fe2	eb 4b		 jmp	 SHORT $LN7@DGPeriodIt@5
$LN3@DGPeriodIt@5:

; 894  : 
; 895  : 	if( lpObj->DBNumber != lpMsg->dwUserGuid )

  01fe4	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01fe7	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  01fea	8b 50 2c	 mov	 edx, DWORD PTR [eax+44]
  01fed	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  01ff0	74 02		 je	 SHORT $LN1@DGPeriodIt@5

; 896  : 		return;

  01ff2	eb 3b		 jmp	 SHORT $LN7@DGPeriodIt@5
$LN1@DGPeriodIt@5:

; 897  : 
; 898  : 	LogAddTD("[PeriodItemEx][SelectItemListCount] End PeriodItem List Receive User Id : %s(%d), Name : %s",
; 899  : 		lpObj->AccountID,lpObj->DBNumber,lpObj->Name);

  01ff4	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01ff7	83 c0 77	 add	 eax, 119		; 00000077H
  01ffa	50		 push	 eax
  01ffb	8b 4d f4	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01ffe	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  02001	52		 push	 edx
  02002	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  02005	83 c0 6c	 add	 eax, 108		; 0000006cH
  02008	50		 push	 eax
  02009	68 00 00 00 00	 push	 OFFSET ??_C@_0FM@CCEOFLFF@?$FLPeriodItemEx?$FN?$FLSelectItemListCou@
  0200e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  02014	83 c4 10	 add	 esp, 16			; 00000010H

; 900  : 
; 901  : 	SetExpireNotMatchedData(lpObj);

  02017	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0201a	50		 push	 eax
  0201b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0201e	e8 00 00 00 00	 call	 ?SetExpireNotMatchedData@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@@Z ; CPeriodItemEx::SetExpireNotMatchedData

; 902  : 	OnRequestPeriodItemList(lpObj);

  02023	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  02026	50		 push	 eax
  02027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0202a	e8 00 00 00 00	 call	 ?OnRequestPeriodItemList@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@@Z ; CPeriodItemEx::OnRequestPeriodItemList
$LN7@DGPeriodIt@5:

; 903  : }

  0202f	5f		 pop	 edi
  02030	5e		 pop	 esi
  02031	5b		 pop	 ebx
  02032	8b e5		 mov	 esp, ebp
  02034	5d		 pop	 ebp
  02035	c2 04 00	 ret	 4
?DGPeriodItemExListCount@CPeriodItemEx@@QAEXPAUPMSG_ANS_PERIODITEMEX_LIST_COUNT@@@Z ENDP ; CPeriodItemEx::DGPeriodItemExListCount
_TEXT	ENDS
PUBLIC	??_C@_0JE@GELAMJMB@?$FLPeriodItemEx?$FN?$FLSelectItemList?$FN?5F@ ; `string'
PUBLIC	?DGPeriodItemExList@CPeriodItemEx@@QAEXPAUPMSG_ANS_PERIODITEMEX_LIST@@@Z ; CPeriodItemEx::DGPeriodItemExList
;	COMDAT ??_C@_0JE@GELAMJMB@?$FLPeriodItemEx?$FN?$FLSelectItemList?$FN?5F@
CONST	SEGMENT
??_C@_0JE@GELAMJMB@?$FLPeriodItemEx?$FN?$FLSelectItemList?$FN?5F@ DB '[Pe'
	DB	'riodItemEx][SelectItemList] Failed User Id : %s(%d), Name : %'
	DB	's, Item Code : %d(%s), PeriodType : %d, Serial : %u, Duration'
	DB	' : %d, ExpireDate : %d', 00H		; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_dwDuration$ = -20					; size = 4
_iItemCount$ = -16					; size = 4
_lpObj$ = -12						; size = 4
_iIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_lpMsg$ = 8						; size = 4
?DGPeriodItemExList@CPeriodItemEx@@QAEXPAUPMSG_ANS_PERIODITEMEX_LIST@@@Z PROC ; CPeriodItemEx::DGPeriodItemExList
; _this$ = ecx

; 907  : {

  02040	55		 push	 ebp
  02041	8b ec		 mov	 ebp, esp
  02043	83 ec 54	 sub	 esp, 84			; 00000054H
  02046	53		 push	 ebx
  02047	56		 push	 esi
  02048	57		 push	 edi
  02049	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 908  : 	int iIndex = lpMsg->wUserIndex;

  0204c	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  0204f	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  02053	89 4d f8	 mov	 DWORD PTR _iIndex$[ebp], ecx

; 909  : 
; 910  : 	if( iIndex < 0 || iIndex >= OBJMAX )

  02056	83 7d f8 00	 cmp	 DWORD PTR _iIndex$[ebp], 0
  0205a	7c 09		 jl	 SHORT $LN12@DGPeriodIt@6
  0205c	81 7d f8 98 3a
	00 00		 cmp	 DWORD PTR _iIndex$[ebp], 15000 ; 00003a98H
  02063	7c 05		 jl	 SHORT $LN13@DGPeriodIt@6
$LN12@DGPeriodIt@6:

; 911  : 		return;

  02065	e9 31 02 00 00	 jmp	 $LN14@DGPeriodIt@6
$LN13@DGPeriodIt@6:

; 912  : 
; 913  : 	LPOBJ lpObj = &gObj[iIndex];

  0206a	8b 45 f8	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0206d	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  02073	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  02079	89 45 f4	 mov	 DWORD PTR _lpObj$[ebp], eax

; 914  : 
; 915  : 	if( lpObj == NULL )

  0207c	75 05		 jne	 SHORT $LN11@DGPeriodIt@6

; 916  : 		return;

  0207e	e9 18 02 00 00	 jmp	 $LN14@DGPeriodIt@6
$LN11@DGPeriodIt@6:

; 917  : 
; 918  : 	if( lpObj->Type != OBJ_USER ||
; 919  : 		lpObj->Connected < PLAYER_LOGGED )

  02083	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  02086	0f b7 48 68	 movzx	 ecx, WORD PTR [eax+104]
  0208a	83 f9 01	 cmp	 ecx, 1
  0208d	75 09		 jne	 SHORT $LN9@DGPeriodIt@6
  0208f	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  02092	83 78 04 02	 cmp	 DWORD PTR [eax+4], 2
  02096	7d 05		 jge	 SHORT $LN10@DGPeriodIt@6
$LN9@DGPeriodIt@6:

; 920  : 		return;

  02098	e9 fe 01 00 00	 jmp	 $LN14@DGPeriodIt@6
$LN10@DGPeriodIt@6:

; 921  : 
; 922  : 	if( lpObj->DBNumber != lpMsg->dwUserGuid )

  0209d	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  020a0	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  020a3	8b 50 2c	 mov	 edx, DWORD PTR [eax+44]
  020a6	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  020a9	74 05		 je	 SHORT $LN8@DGPeriodIt@6

; 923  : 		return;

  020ab	e9 eb 01 00 00	 jmp	 $LN14@DGPeriodIt@6
$LN8@DGPeriodIt@6:

; 924  : 
; 925  : 	int iItemCount = 0;

  020b0	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _iItemCount$[ebp], 0

; 926  : 	DWORD dwDuration = 0;

  020b7	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _dwDuration$[ebp], 0

; 927  : 
; 928  : 	dwDuration = this->GetLeftDate(lpMsg->lItemExpireDate);

  020be	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  020c1	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  020c4	51		 push	 ecx
  020c5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  020c8	e8 00 00 00 00	 call	 ?GetLeftDate@CPeriodItemEx@@QAEKJ@Z ; CPeriodItemEx::GetLeftDate
  020cd	89 45 ec	 mov	 DWORD PTR _dwDuration$[ebp], eax

; 929  : 
; 930  : 	if( lpMsg->btItemType == 1 )

  020d0	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  020d3	0f b6 48 0b	 movzx	 ecx, BYTE PTR [eax+11]
  020d7	83 f9 01	 cmp	 ecx, 1
  020da	0f 85 d2 00 00
	00		 jne	 $LN7@DGPeriodIt@6

; 931  : 	{
; 932  : 		if( !gObjApplyBuffEffectItemPeriod(lpObj,lpMsg->wItemCode,dwDuration) )

  020e0	8b 45 ec	 mov	 eax, DWORD PTR _dwDuration$[ebp]
  020e3	50		 push	 eax
  020e4	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  020e7	0f b7 51 18	 movzx	 edx, WORD PTR [ecx+24]
  020eb	52		 push	 edx
  020ec	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  020ef	50		 push	 eax
  020f0	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectItemPeriod@@YAEPAUOBJECTSTRUCT@@HH@Z ; gObjApplyBuffEffectItemPeriod
  020f5	83 c4 0c	 add	 esp, 12			; 0000000cH
  020f8	0f b6 c8	 movzx	 ecx, al
  020fb	85 c9		 test	 ecx, ecx
  020fd	75 58		 jne	 SHORT $LN6@DGPeriodIt@6

; 933  : 		{
; 934  : 			LogAddTD("[PeriodItemEx][SelectItemList] Failed User Id : %s(%d), Name : %s, Item Code : %d(%s), PeriodType : %d, Serial : %u, Duration : %d, ExpireDate : %d",
; 935  : 				lpObj->AccountID,lpObj->DBNumber,lpObj->Name,lpMsg->wItemCode,ItemAttribute[lpMsg->wItemCode].Name,lpMsg->btItemType,lpMsg->dwSerial,dwDuration,lpMsg->lItemExpireDate);

  020ff	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  02102	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  02105	51		 push	 ecx
  02106	8b 55 ec	 mov	 edx, DWORD PTR _dwDuration$[ebp]
  02109	52		 push	 edx
  0210a	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  0210d	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  02110	51		 push	 ecx
  02111	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  02114	0f b6 42 0b	 movzx	 eax, BYTE PTR [edx+11]
  02118	50		 push	 eax
  02119	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  0211c	0f b7 51 18	 movzx	 edx, WORD PTR [ecx+24]
  02120	6b d2 70	 imul	 edx, 112		; 00000070H
  02123	81 c2 00 00 00
	00		 add	 edx, OFFSET ?ItemAttribute@@3PAUITEM_ATTRIBUTE@@A ; ItemAttribute
  02129	52		 push	 edx
  0212a	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  0212d	0f b7 48 18	 movzx	 ecx, WORD PTR [eax+24]
  02131	51		 push	 ecx
  02132	8b 55 f4	 mov	 edx, DWORD PTR _lpObj$[ebp]
  02135	83 c2 77	 add	 edx, 119		; 00000077H
  02138	52		 push	 edx
  02139	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0213c	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0213f	51		 push	 ecx
  02140	8b 55 f4	 mov	 edx, DWORD PTR _lpObj$[ebp]
  02143	83 c2 6c	 add	 edx, 108		; 0000006cH
  02146	52		 push	 edx
  02147	68 00 00 00 00	 push	 OFFSET ??_C@_0JE@GELAMJMB@?$FLPeriodItemEx?$FN?$FLSelectItemList?$FN?5F@
  0214c	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  02152	83 c4 28	 add	 esp, 40			; 00000028H

; 936  : 		}
; 937  : 		else

  02155	eb 56		 jmp	 SHORT $LN5@DGPeriodIt@6
$LN6@DGPeriodIt@6:

; 938  : 		{
; 939  : 			LogAddTD("[PeriodItemEx][SelectItemList] User Id : %s(%d), Name : %s, Item Code : %d(%s), PeriodType : %d, Serial : %u, Duration : %d, ExpireDate : %d",
; 940  : 				lpObj->AccountID,lpObj->DBNumber,lpObj->Name,lpMsg->wItemCode,ItemAttribute[lpMsg->wItemCode].Name,lpMsg->btItemType,lpMsg->dwSerial,dwDuration,lpMsg->lItemExpireDate);

  02157	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  0215a	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0215d	51		 push	 ecx
  0215e	8b 55 ec	 mov	 edx, DWORD PTR _dwDuration$[ebp]
  02161	52		 push	 edx
  02162	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  02165	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  02168	51		 push	 ecx
  02169	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  0216c	0f b6 42 0b	 movzx	 eax, BYTE PTR [edx+11]
  02170	50		 push	 eax
  02171	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  02174	0f b7 51 18	 movzx	 edx, WORD PTR [ecx+24]
  02178	6b d2 70	 imul	 edx, 112		; 00000070H
  0217b	81 c2 00 00 00
	00		 add	 edx, OFFSET ?ItemAttribute@@3PAUITEM_ATTRIBUTE@@A ; ItemAttribute
  02181	52		 push	 edx
  02182	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  02185	0f b7 48 18	 movzx	 ecx, WORD PTR [eax+24]
  02189	51		 push	 ecx
  0218a	8b 55 f4	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0218d	83 c2 77	 add	 edx, 119		; 00000077H
  02190	52		 push	 edx
  02191	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  02194	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  02197	51		 push	 ecx
  02198	8b 55 f4	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0219b	83 c2 6c	 add	 edx, 108		; 0000006cH
  0219e	52		 push	 edx
  0219f	68 00 00 00 00	 push	 OFFSET ??_C@_0IN@JNCNNGOP@?$FLPeriodItemEx?$FN?$FLSelectItemList?$FN?5U@
  021a4	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  021aa	83 c4 28	 add	 esp, 40			; 00000028H
$LN5@DGPeriodIt@6:

; 941  : 		}

  021ad	e9 e9 00 00 00	 jmp	 $LN14@DGPeriodIt@6
$LN7@DGPeriodIt@6:

; 942  : 	}
; 943  : 	else if( lpMsg->btItemType == 2 )

  021b2	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  021b5	0f b6 48 0b	 movzx	 ecx, BYTE PTR [eax+11]
  021b9	83 f9 02	 cmp	 ecx, 2
  021bc	0f 85 d9 00 00
	00		 jne	 $LN14@DGPeriodIt@6

; 944  : 	{
; 945  : 		if( this->AddPeriodItemData(lpObj,lpMsg->wItemCode,lpMsg->dwSerial,dwDuration,lpMsg->lItemExpireDate) != -1 )

  021c2	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  021c5	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  021c8	51		 push	 ecx
  021c9	8b 55 ec	 mov	 edx, DWORD PTR _dwDuration$[ebp]
  021cc	52		 push	 edx
  021cd	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  021d0	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  021d3	51		 push	 ecx
  021d4	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  021d7	0f b7 42 18	 movzx	 eax, WORD PTR [edx+24]
  021db	50		 push	 eax
  021dc	8b 4d f4	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  021df	51		 push	 ecx
  021e0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  021e3	e8 00 00 00 00	 call	 ?AddPeriodItemData@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GKHJ@Z ; CPeriodItemEx::AddPeriodItemData
  021e8	83 f8 ff	 cmp	 eax, -1
  021eb	74 58		 je	 SHORT $LN2@DGPeriodIt@6

; 946  : 		{
; 947  : 			LogAddTD("[PeriodItemEx][SelectItemList] User Id : %s(%d), Name : %s, Item Code : %d(%s), PeriodType : %d, Serial : %u, Duration : %d, ExpireDate : %d",
; 948  : 				lpObj->AccountID,lpObj->DBNumber,lpObj->Name,lpMsg->wItemCode,ItemAttribute[lpMsg->wItemCode].Name,lpMsg->btItemType,lpMsg->dwSerial,dwDuration,lpMsg->lItemExpireDate);

  021ed	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  021f0	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  021f3	51		 push	 ecx
  021f4	8b 55 ec	 mov	 edx, DWORD PTR _dwDuration$[ebp]
  021f7	52		 push	 edx
  021f8	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  021fb	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  021fe	51		 push	 ecx
  021ff	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  02202	0f b6 42 0b	 movzx	 eax, BYTE PTR [edx+11]
  02206	50		 push	 eax
  02207	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  0220a	0f b7 51 18	 movzx	 edx, WORD PTR [ecx+24]
  0220e	6b d2 70	 imul	 edx, 112		; 00000070H
  02211	81 c2 00 00 00
	00		 add	 edx, OFFSET ?ItemAttribute@@3PAUITEM_ATTRIBUTE@@A ; ItemAttribute
  02217	52		 push	 edx
  02218	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  0221b	0f b7 48 18	 movzx	 ecx, WORD PTR [eax+24]
  0221f	51		 push	 ecx
  02220	8b 55 f4	 mov	 edx, DWORD PTR _lpObj$[ebp]
  02223	83 c2 77	 add	 edx, 119		; 00000077H
  02226	52		 push	 edx
  02227	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0222a	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0222d	51		 push	 ecx
  0222e	8b 55 f4	 mov	 edx, DWORD PTR _lpObj$[ebp]
  02231	83 c2 6c	 add	 edx, 108		; 0000006cH
  02234	52		 push	 edx
  02235	68 00 00 00 00	 push	 OFFSET ??_C@_0IN@JNCNNGOP@?$FLPeriodItemEx?$FN?$FLSelectItemList?$FN?5U@
  0223a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  02240	83 c4 28	 add	 esp, 40			; 00000028H

; 949  : 		}
; 950  : 		else

  02243	eb 56		 jmp	 SHORT $LN14@DGPeriodIt@6
$LN2@DGPeriodIt@6:

; 951  : 		{
; 952  : 			LogAddTD("[PeriodItemEx][SelectItemList] Failed User Id : %s(%d), Name : %s, Item Code : %d(%s), PeriodType : %d, Serial : %u, Duration : %d, ExpireDate : %d",
; 953  : 				lpObj->AccountID,lpObj->DBNumber,lpObj->Name,lpMsg->wItemCode,ItemAttribute[lpMsg->wItemCode].Name,lpMsg->btItemType,lpMsg->dwSerial,dwDuration,lpMsg->lItemExpireDate);

  02245	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  02248	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0224b	51		 push	 ecx
  0224c	8b 55 ec	 mov	 edx, DWORD PTR _dwDuration$[ebp]
  0224f	52		 push	 edx
  02250	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  02253	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  02256	51		 push	 ecx
  02257	8b 55 08	 mov	 edx, DWORD PTR _lpMsg$[ebp]
  0225a	0f b6 42 0b	 movzx	 eax, BYTE PTR [edx+11]
  0225e	50		 push	 eax
  0225f	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  02262	0f b7 51 18	 movzx	 edx, WORD PTR [ecx+24]
  02266	6b d2 70	 imul	 edx, 112		; 00000070H
  02269	81 c2 00 00 00
	00		 add	 edx, OFFSET ?ItemAttribute@@3PAUITEM_ATTRIBUTE@@A ; ItemAttribute
  0226f	52		 push	 edx
  02270	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  02273	0f b7 48 18	 movzx	 ecx, WORD PTR [eax+24]
  02277	51		 push	 ecx
  02278	8b 55 f4	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0227b	83 c2 77	 add	 edx, 119		; 00000077H
  0227e	52		 push	 edx
  0227f	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  02282	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  02285	51		 push	 ecx
  02286	8b 55 f4	 mov	 edx, DWORD PTR _lpObj$[ebp]
  02289	83 c2 6c	 add	 edx, 108		; 0000006cH
  0228c	52		 push	 edx
  0228d	68 00 00 00 00	 push	 OFFSET ??_C@_0JE@GELAMJMB@?$FLPeriodItemEx?$FN?$FLSelectItemList?$FN?5F@
  02292	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  02298	83 c4 28	 add	 esp, 40			; 00000028H
$LN14@DGPeriodIt@6:

; 954  : 		}
; 955  : 	}
; 956  : 
; 957  : }

  0229b	5f		 pop	 edi
  0229c	5e		 pop	 esi
  0229d	5b		 pop	 ebx
  0229e	8b e5		 mov	 esp, ebp
  022a0	5d		 pop	 ebp
  022a1	c2 04 00	 ret	 4
?DGPeriodItemExList@CPeriodItemEx@@QAEXPAUPMSG_ANS_PERIODITEMEX_LIST@@@Z ENDP ; CPeriodItemEx::DGPeriodItemExList
; Function compile flags: /Odtp /ZI
_i$221821 = -12					; size = 4
_iReturnIndex$ = -8					; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_wItemCode$ = 12					; size = 2
_dwSerial$ = 16						; size = 4
?GetItemFromInventory@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GK@Z PROC ; CPeriodItemEx::GetItemFromInventory
; _this$ = ecx

; 961  : {

  022b0	55		 push	 ebp
  022b1	8b ec		 mov	 ebp, esp
  022b3	83 ec 4c	 sub	 esp, 76			; 0000004cH
  022b6	53		 push	 ebx
  022b7	56		 push	 esi
  022b8	57		 push	 edi
  022b9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 962  : 	int iReturnIndex = -1;

  022bc	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR _iReturnIndex$[ebp], -1

; 963  : 
; 964  : 	if( !lpObj )

  022c3	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  022c7	75 08		 jne	 SHORT $LN9@GetItemFro

; 965  : 		return -1;

  022c9	83 c8 ff	 or	 eax, -1
  022cc	e9 98 00 00 00	 jmp	 $LN10@GetItemFro
$LN9@GetItemFro:

; 966  : 
; 967  : 	if( lpObj->Type != OBJ_USER ||
; 968  : 		lpObj->Connected < PLAYER_LOGGED )

  022d1	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  022d4	0f b7 48 68	 movzx	 ecx, WORD PTR [eax+104]
  022d8	83 f9 01	 cmp	 ecx, 1
  022db	75 09		 jne	 SHORT $LN7@GetItemFro
  022dd	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  022e0	83 78 04 02	 cmp	 DWORD PTR [eax+4], 2
  022e4	7d 05		 jge	 SHORT $LN8@GetItemFro
$LN7@GetItemFro:

; 969  : 		return -1;

  022e6	83 c8 ff	 or	 eax, -1
  022e9	eb 7e		 jmp	 SHORT $LN10@GetItemFro
$LN8@GetItemFro:

; 970  : 
; 971  : 	for(int i = 0; i < MAIN_INVENTORY_SIZE; i++)

  022eb	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$221821[ebp], 0
  022f2	eb 09		 jmp	 SHORT $LN6@GetItemFro
$LN5@GetItemFro:
  022f4	8b 45 f4	 mov	 eax, DWORD PTR _i$221821[ebp]
  022f7	83 c0 01	 add	 eax, 1
  022fa	89 45 f4	 mov	 DWORD PTR _i$221821[ebp], eax
$LN6@GetItemFro:
  022fd	81 7d f4 cc 00
	00 00		 cmp	 DWORD PTR _i$221821[ebp], 204 ; 000000ccH
  02304	7d 60		 jge	 SHORT $LN4@GetItemFro

; 972  : 	{
; 973  : 		if( lpObj->pInventory[i].IsItem() )

  02306	8b 4d f4	 mov	 ecx, DWORD PTR _i$221821[ebp]
  02309	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  0230f	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  02312	03 88 24 0e 00
	00		 add	 ecx, DWORD PTR [eax+3620]
  02318	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  0231d	85 c0		 test	 eax, eax
  0231f	74 43		 je	 SHORT $LN3@GetItemFro

; 974  : 		{
; 975  : 			if( lpObj->pInventory[i].m_Type == wItemCode )

  02321	8b 45 f4	 mov	 eax, DWORD PTR _i$221821[ebp]
  02324	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  0232a	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0232d	8b 91 24 0e 00
	00		 mov	 edx, DWORD PTR [ecx+3620]
  02333	0f bf 44 02 06	 movsx	 eax, WORD PTR [edx+eax+6]
  02338	0f b7 4d 0c	 movzx	 ecx, WORD PTR _wItemCode$[ebp]
  0233c	3b c1		 cmp	 eax, ecx
  0233e	75 24		 jne	 SHORT $LN3@GetItemFro

; 976  : 			{
; 977  : #ifdef DEBUG_CODE
; 978  : 				LogAddC(2,"wItemCode:%d dwSerial:%d lpObj->pInventory[i].GetNumber():%d",wItemCode,dwSerial,lpObj->pInventory[i].GetNumber());
; 979  : #endif
; 980  : 				if( lpObj->pInventory[i].GetNumber() == dwSerial )

  02340	8b 4d f4	 mov	 ecx, DWORD PTR _i$221821[ebp]
  02343	69 c9 d4 00 00
	00		 imul	 ecx, 212		; 000000d4H
  02349	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0234c	03 88 24 0e 00
	00		 add	 ecx, DWORD PTR [eax+3620]
  02352	e8 00 00 00 00	 call	 ?GetNumber@CItem@@QAEKXZ ; CItem::GetNumber
  02357	3b 45 10	 cmp	 eax, DWORD PTR _dwSerial$[ebp]
  0235a	75 08		 jne	 SHORT $LN3@GetItemFro

; 981  : 				{
; 982  : 					iReturnIndex = i;

  0235c	8b 45 f4	 mov	 eax, DWORD PTR _i$221821[ebp]
  0235f	89 45 f8	 mov	 DWORD PTR _iReturnIndex$[ebp], eax

; 983  : 					break;

  02362	eb 02		 jmp	 SHORT $LN4@GetItemFro
$LN3@GetItemFro:

; 984  : 				}
; 985  : 			}
; 986  : 		}
; 987  : 	}

  02364	eb 8e		 jmp	 SHORT $LN5@GetItemFro
$LN4@GetItemFro:

; 988  : 	return iReturnIndex;

  02366	8b 45 f8	 mov	 eax, DWORD PTR _iReturnIndex$[ebp]
$LN10@GetItemFro:

; 989  : }

  02369	5f		 pop	 edi
  0236a	5e		 pop	 esi
  0236b	5b		 pop	 ebx
  0236c	8b e5		 mov	 esp, ebp
  0236e	5d		 pop	 ebp
  0236f	c2 0c 00	 ret	 12			; 0000000cH
?GetItemFromInventory@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GK@Z ENDP ; CPeriodItemEx::GetItemFromInventory
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$221852 = -52						; size = 4
_lExpireDate$ = -48					; size = 4
_iItemSlotIndex$ = -44					; size = 4
_dwSerial$ = -40					; size = 4
_wItemCode$ = -36					; size = 2
_pList$ = -32						; size = 12
_pCount$ = -20						; size = 5
_iPeriodItemInfoSlotIndex$ = -12			; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
?OnRequestPeriodItemList@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@@Z PROC ; CPeriodItemEx::OnRequestPeriodItemList
; _this$ = ecx

; 1001 : {

  02380	55		 push	 ebp
  02381	8b ec		 mov	 ebp, esp
  02383	83 ec 74	 sub	 esp, 116		; 00000074H
  02386	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0238b	33 c5		 xor	 eax, ebp
  0238d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  02390	53		 push	 ebx
  02391	56		 push	 esi
  02392	57		 push	 edi
  02393	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1002 : 	int iPeriodItemInfoSlotIndex = 0;

  02396	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _iPeriodItemInfoSlotIndex$[ebp], 0

; 1003 : 	PMSG_ANS_PERIODLIST_COUNT pCount = {0};

  0239d	c6 45 ec 00	 mov	 BYTE PTR _pCount$[ebp], 0
  023a1	33 c0		 xor	 eax, eax
  023a3	89 45 ed	 mov	 DWORD PTR _pCount$[ebp+1], eax

; 1004 : 	PMSG_ANS_PERIODLIST pList = {0};

  023a6	c6 45 e0 00	 mov	 BYTE PTR _pList$[ebp], 0
  023aa	33 c0		 xor	 eax, eax
  023ac	89 45 e1	 mov	 DWORD PTR _pList$[ebp+1], eax
  023af	89 45 e5	 mov	 DWORD PTR _pList$[ebp+5], eax
  023b2	66 89 45 e9	 mov	 WORD PTR _pList$[ebp+9], ax
  023b6	88 45 eb	 mov	 BYTE PTR _pList$[ebp+11], al

; 1005 : 
; 1006 : 	WORD wItemCode = 0;

  023b9	33 c0		 xor	 eax, eax
  023bb	66 89 45 dc	 mov	 WORD PTR _wItemCode$[ebp], ax

; 1007 : 	DWORD dwSerial = 0;

  023bf	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _dwSerial$[ebp], 0

; 1008 : 	int iItemSlotIndex = 0;

  023c6	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _iItemSlotIndex$[ebp], 0

; 1009 : 	long lExpireDate = 0;

  023cd	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _lExpireDate$[ebp], 0

; 1010 : 
; 1011 : 	iPeriodItemInfoSlotIndex = lpObj->m_PeriodDataIndex;

  023d4	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  023d7	8b 88 20 26 00
	00		 mov	 ecx, DWORD PTR [eax+9760]
  023dd	89 4d f4	 mov	 DWORD PTR _iPeriodItemInfoSlotIndex$[ebp], ecx

; 1012 : 
; 1013 : 	PHeadSubSetB((LPBYTE)&pCount,0xD2,0x11,sizeof(pCount));

  023e0	6a 05		 push	 5
  023e2	6a 11		 push	 17			; 00000011H
  023e4	68 d2 00 00 00	 push	 210			; 000000d2H
  023e9	8d 45 ec	 lea	 eax, DWORD PTR _pCount$[ebp]
  023ec	50		 push	 eax
  023ed	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB
  023f2	83 c4 10	 add	 esp, 16			; 00000010H

; 1014 : 	PHeadSubSetB((LPBYTE)&pList,0xD2,0x12,sizeof(pList));

  023f5	6a 0c		 push	 12			; 0000000cH
  023f7	6a 12		 push	 18			; 00000012H
  023f9	68 d2 00 00 00	 push	 210			; 000000d2H
  023fe	8d 45 e0	 lea	 eax, DWORD PTR _pList$[ebp]
  02401	50		 push	 eax
  02402	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB
  02407	83 c4 10	 add	 esp, 16			; 00000010H

; 1015 : 
; 1016 : 	pCount.btItemCount = this->m_PeriodData[iPeriodItemInfoSlotIndex].btType;

  0240a	8b 45 f4	 mov	 eax, DWORD PTR _iPeriodItemInfoSlotIndex$[ebp]
  0240d	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  02413	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  02416	8a 54 01 05	 mov	 dl, BYTE PTR [ecx+eax+5]
  0241a	88 55 f0	 mov	 BYTE PTR _pCount$[ebp+4], dl

; 1017 : 	DataSend(lpObj->m_Index,(LPBYTE)&pCount,pCount.h.size);

  0241d	0f b6 45 ed	 movzx	 eax, BYTE PTR _pCount$[ebp+1]
  02421	50		 push	 eax
  02422	8d 4d ec	 lea	 ecx, DWORD PTR _pCount$[ebp]
  02425	51		 push	 ecx
  02426	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  02429	8b 02		 mov	 eax, DWORD PTR [edx]
  0242b	50		 push	 eax
  0242c	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  02431	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1018 : 
; 1019 : 	if( this->m_PeriodData[iPeriodItemInfoSlotIndex].bInUse == 1 )

  02434	8b 45 f4	 mov	 eax, DWORD PTR _iPeriodItemInfoSlotIndex$[ebp]
  02437	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  0243d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  02440	0f b6 54 01 04	 movzx	 edx, BYTE PTR [ecx+eax+4]
  02445	83 fa 01	 cmp	 edx, 1
  02448	0f 85 e3 00 00
	00		 jne	 $LN6@OnRequestP

; 1020 : 	{
; 1021 : 		for(int i = 0; i < MAX_ITEMDATA; i++)

  0244e	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _i$221852[ebp], 0
  02455	eb 09		 jmp	 SHORT $LN4@OnRequestP
$LN3@OnRequestP:
  02457	8b 45 cc	 mov	 eax, DWORD PTR _i$221852[ebp]
  0245a	83 c0 01	 add	 eax, 1
  0245d	89 45 cc	 mov	 DWORD PTR _i$221852[ebp], eax
$LN4@OnRequestP:
  02460	83 7d cc 1e	 cmp	 DWORD PTR _i$221852[ebp], 30 ; 0000001eH
  02464	0f 8d c7 00 00
	00		 jge	 $LN6@OnRequestP

; 1022 : 		{
; 1023 : 			if( this->m_PeriodData[iPeriodItemInfoSlotIndex].itemData[i].bInUse == TRUE )

  0246a	8b 45 f4	 mov	 eax, DWORD PTR _iPeriodItemInfoSlotIndex$[ebp]
  0246d	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  02473	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  02476	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  0247a	8b 45 cc	 mov	 eax, DWORD PTR _i$221852[ebp]
  0247d	6b c0 1c	 imul	 eax, 28			; 0000001cH
  02480	0f b6 4c 02 24	 movzx	 ecx, BYTE PTR [edx+eax+36]
  02485	83 f9 01	 cmp	 ecx, 1
  02488	0f 85 9e 00 00
	00		 jne	 $LN1@OnRequestP

; 1024 : 			{
; 1025 : 				wItemCode = this->m_PeriodData[iPeriodItemInfoSlotIndex].itemData[i].wItemCode;

  0248e	8b 45 f4	 mov	 eax, DWORD PTR _iPeriodItemInfoSlotIndex$[ebp]
  02491	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  02497	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0249a	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  0249e	8b 45 cc	 mov	 eax, DWORD PTR _i$221852[ebp]
  024a1	6b c0 1c	 imul	 eax, 28			; 0000001cH
  024a4	66 8b 4c 02 26	 mov	 cx, WORD PTR [edx+eax+38]
  024a9	66 89 4d dc	 mov	 WORD PTR _wItemCode$[ebp], cx

; 1026 : 				dwSerial = this->m_PeriodData[iPeriodItemInfoSlotIndex].itemData[i].dwSerial;

  024ad	8b 45 f4	 mov	 eax, DWORD PTR _iPeriodItemInfoSlotIndex$[ebp]
  024b0	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  024b6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  024b9	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  024bd	8b 45 cc	 mov	 eax, DWORD PTR _i$221852[ebp]
  024c0	6b c0 1c	 imul	 eax, 28			; 0000001cH
  024c3	8b 4c 02 2c	 mov	 ecx, DWORD PTR [edx+eax+44]
  024c7	89 4d d8	 mov	 DWORD PTR _dwSerial$[ebp], ecx

; 1027 : 				iItemSlotIndex = this->GetItemFromInventory(lpObj,wItemCode,dwSerial);

  024ca	8b 45 d8	 mov	 eax, DWORD PTR _dwSerial$[ebp]
  024cd	50		 push	 eax
  024ce	0f b7 4d dc	 movzx	 ecx, WORD PTR _wItemCode$[ebp]
  024d2	51		 push	 ecx
  024d3	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  024d6	52		 push	 edx
  024d7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  024da	e8 00 00 00 00	 call	 ?GetItemFromInventory@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GK@Z ; CPeriodItemEx::GetItemFromInventory
  024df	89 45 d4	 mov	 DWORD PTR _iItemSlotIndex$[ebp], eax

; 1028 : 				lExpireDate = this->m_PeriodData[iPeriodItemInfoSlotIndex].itemData[i].lExpireDate;

  024e2	8b 45 f4	 mov	 eax, DWORD PTR _iPeriodItemInfoSlotIndex$[ebp]
  024e5	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  024eb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  024ee	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  024f2	8b 45 cc	 mov	 eax, DWORD PTR _i$221852[ebp]
  024f5	6b c0 1c	 imul	 eax, 28			; 0000001cH
  024f8	8b 4c 02 34	 mov	 ecx, DWORD PTR [edx+eax+52]
  024fc	89 4d d0	 mov	 DWORD PTR _lExpireDate$[ebp], ecx

; 1029 : 
; 1030 : 				pList.wItemCode = wItemCode;

  024ff	66 8b 45 dc	 mov	 ax, WORD PTR _wItemCode$[ebp]
  02503	66 89 45 e4	 mov	 WORD PTR _pList$[ebp+4], ax

; 1031 : 				pList.wItemPos = iItemSlotIndex;

  02507	66 8b 45 d4	 mov	 ax, WORD PTR _iItemSlotIndex$[ebp]
  0250b	66 89 45 e6	 mov	 WORD PTR _pList$[ebp+6], ax

; 1032 : 				pList.lExpireDate = lExpireDate;

  0250f	8b 45 d0	 mov	 eax, DWORD PTR _lExpireDate$[ebp]
  02512	89 45 e8	 mov	 DWORD PTR _pList$[ebp+8], eax

; 1033 : 
; 1034 : 				DataSend(lpObj->m_Index,(LPBYTE)&pList,pList.h.size);

  02515	0f b6 45 e1	 movzx	 eax, BYTE PTR _pList$[ebp+1]
  02519	50		 push	 eax
  0251a	8d 4d e0	 lea	 ecx, DWORD PTR _pList$[ebp]
  0251d	51		 push	 ecx
  0251e	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  02521	8b 02		 mov	 eax, DWORD PTR [edx]
  02523	50		 push	 eax
  02524	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  02529	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnRequestP:

; 1035 : 			}
; 1036 : 		}

  0252c	e9 26 ff ff ff	 jmp	 $LN3@OnRequestP
$LN6@OnRequestP:

; 1037 : 	}
; 1038 : }

  02531	5f		 pop	 edi
  02532	5e		 pop	 esi
  02533	5b		 pop	 ebx
  02534	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  02537	33 cd		 xor	 ecx, ebp
  02539	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0253e	8b e5		 mov	 esp, ebp
  02540	5d		 pop	 ebp
  02541	c2 04 00	 ret	 4
?OnRequestPeriodItemList@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@@Z ENDP ; CPeriodItemEx::OnRequestPeriodItemList
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_dwLeftTime$ = -36					; size = 4
_iItemSlotIndex$ = -32					; size = 4
_dwSerial$ = -28					; size = 4
_wItemCode$ = -24					; size = 2
_pMsg$ = -20						; size = 12
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
_lpItemData$ = 12					; size = 4
?OnRequestPeriodItemListOnce@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@PAUITEMDATA@@@Z PROC ; CPeriodItemEx::OnRequestPeriodItemListOnce
; _this$ = ecx

; 1042 : {

  02550	55		 push	 ebp
  02551	8b ec		 mov	 ebp, esp
  02553	83 ec 64	 sub	 esp, 100		; 00000064H
  02556	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0255b	33 c5		 xor	 eax, ebp
  0255d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  02560	53		 push	 ebx
  02561	56		 push	 esi
  02562	57		 push	 edi
  02563	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1043 : 	if( !lpObj || !lpItemData )

  02566	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  0256a	74 06		 je	 SHORT $LN2@OnRequestP@2
  0256c	83 7d 0c 00	 cmp	 DWORD PTR _lpItemData$[ebp], 0
  02570	75 05		 jne	 SHORT $LN3@OnRequestP@2
$LN2@OnRequestP@2:

; 1044 : 		return;

  02572	e9 ae 00 00 00	 jmp	 $LN4@OnRequestP@2
$LN3@OnRequestP@2:

; 1045 : 
; 1046 : 	if( !lpItemData->bInUse )

  02577	8b 45 0c	 mov	 eax, DWORD PTR _lpItemData$[ebp]
  0257a	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0257d	85 c9		 test	 ecx, ecx
  0257f	75 05		 jne	 SHORT $LN1@OnRequestP@2

; 1047 : 		return;

  02581	e9 9f 00 00 00	 jmp	 $LN4@OnRequestP@2
$LN1@OnRequestP@2:

; 1048 : 
; 1049 : 	PMSG_ANS_PERIODLIST pMsg = {0};

  02586	c6 45 ec 00	 mov	 BYTE PTR _pMsg$[ebp], 0
  0258a	33 c0		 xor	 eax, eax
  0258c	89 45 ed	 mov	 DWORD PTR _pMsg$[ebp+1], eax
  0258f	89 45 f1	 mov	 DWORD PTR _pMsg$[ebp+5], eax
  02592	66 89 45 f5	 mov	 WORD PTR _pMsg$[ebp+9], ax
  02596	88 45 f7	 mov	 BYTE PTR _pMsg$[ebp+11], al

; 1050 : 	PHeadSubSetB((LPBYTE)&pMsg,0xD2,0x12,sizeof(pMsg));

  02599	6a 0c		 push	 12			; 0000000cH
  0259b	6a 12		 push	 18			; 00000012H
  0259d	68 d2 00 00 00	 push	 210			; 000000d2H
  025a2	8d 45 ec	 lea	 eax, DWORD PTR _pMsg$[ebp]
  025a5	50		 push	 eax
  025a6	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB
  025ab	83 c4 10	 add	 esp, 16			; 00000010H

; 1051 : 	
; 1052 : 	WORD wItemCode = 0;

  025ae	33 c0		 xor	 eax, eax
  025b0	66 89 45 e8	 mov	 WORD PTR _wItemCode$[ebp], ax

; 1053 : 	DWORD dwSerial = 0;

  025b4	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _dwSerial$[ebp], 0

; 1054 : 	int iItemSlotIndex = 0;

  025bb	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _iItemSlotIndex$[ebp], 0

; 1055 : 	DWORD dwLeftTime = 0;

  025c2	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _dwLeftTime$[ebp], 0

; 1056 : 
; 1057 : 	wItemCode			= lpItemData->wItemCode;

  025c9	8b 45 0c	 mov	 eax, DWORD PTR _lpItemData$[ebp]
  025cc	66 8b 48 02	 mov	 cx, WORD PTR [eax+2]
  025d0	66 89 4d e8	 mov	 WORD PTR _wItemCode$[ebp], cx

; 1058 : 	dwSerial			= lpItemData->dwSerial;

  025d4	8b 45 0c	 mov	 eax, DWORD PTR _lpItemData$[ebp]
  025d7	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  025da	89 4d e4	 mov	 DWORD PTR _dwSerial$[ebp], ecx

; 1059 : 	iItemSlotIndex		= this->GetItemFromInventory(lpObj,wItemCode,dwSerial);

  025dd	8b 45 e4	 mov	 eax, DWORD PTR _dwSerial$[ebp]
  025e0	50		 push	 eax
  025e1	0f b7 4d e8	 movzx	 ecx, WORD PTR _wItemCode$[ebp]
  025e5	51		 push	 ecx
  025e6	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  025e9	52		 push	 edx
  025ea	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  025ed	e8 00 00 00 00	 call	 ?GetItemFromInventory@CPeriodItemEx@@QAEHPAUOBJECTSTRUCT@@GK@Z ; CPeriodItemEx::GetItemFromInventory
  025f2	89 45 e0	 mov	 DWORD PTR _iItemSlotIndex$[ebp], eax

; 1060 : 
; 1061 : 	pMsg.wItemCode		= wItemCode;

  025f5	66 8b 45 e8	 mov	 ax, WORD PTR _wItemCode$[ebp]
  025f9	66 89 45 f0	 mov	 WORD PTR _pMsg$[ebp+4], ax

; 1062 : 	pMsg.wItemPos		= iItemSlotIndex;

  025fd	66 8b 45 e0	 mov	 ax, WORD PTR _iItemSlotIndex$[ebp]
  02601	66 89 45 f2	 mov	 WORD PTR _pMsg$[ebp+6], ax

; 1063 : 	pMsg.lExpireDate	= lpItemData->lExpireDate;

  02605	8b 45 0c	 mov	 eax, DWORD PTR _lpItemData$[ebp]
  02608	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0260b	89 4d f4	 mov	 DWORD PTR _pMsg$[ebp+8], ecx

; 1064 : 
; 1065 : 	DataSend(lpObj->m_Index,(LPBYTE)&pMsg,pMsg.h.size);

  0260e	0f b6 45 ed	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  02612	50		 push	 eax
  02613	8d 4d ec	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  02616	51		 push	 ecx
  02617	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0261a	8b 02		 mov	 eax, DWORD PTR [edx]
  0261c	50		 push	 eax
  0261d	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  02622	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@OnRequestP@2:

; 1066 : }

  02625	5f		 pop	 edi
  02626	5e		 pop	 esi
  02627	5b		 pop	 ebx
  02628	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0262b	33 cd		 xor	 ecx, ebp
  0262d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  02632	8b e5		 mov	 esp, ebp
  02634	5d		 pop	 ebp
  02635	c2 08 00	 ret	 8
?OnRequestPeriodItemListOnce@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@PAUITEMDATA@@@Z ENDP ; CPeriodItemEx::OnRequestPeriodItemListOnce
_TEXT	ENDS
PUBLIC	?OnRequestPeriodExpiredItem@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@PAUITEMDATA@@@Z ; CPeriodItemEx::OnRequestPeriodExpiredItem
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_lpItemData$ = 12					; size = 4
?OnRequestPeriodExpiredItem@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@PAUITEMDATA@@@Z PROC ; CPeriodItemEx::OnRequestPeriodExpiredItem
; _this$ = ecx

; 1070 : {

  02640	55		 push	 ebp
  02641	8b ec		 mov	 ebp, esp
  02643	83 ec 44	 sub	 esp, 68			; 00000044H
  02646	53		 push	 ebx
  02647	56		 push	 esi
  02648	57		 push	 edi
  02649	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1071 : 	// not implemented
; 1072 : }

  0264c	5f		 pop	 edi
  0264d	5e		 pop	 esi
  0264e	5b		 pop	 ebx
  0264f	8b e5		 mov	 esp, ebp
  02651	5d		 pop	 ebp
  02652	c2 08 00	 ret	 8
?OnRequestPeriodExpiredItem@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@PAUITEMDATA@@@Z ENDP ; CPeriodItemEx::OnRequestPeriodExpiredItem
_TEXT	ENDS
PUBLIC	?SendPeriodItemInfoOnce@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@PAVCItem@@@Z ; CPeriodItemEx::SendPeriodItemInfoOnce
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$221885 = -12						; size = 4
_iPeriodInfoIndex$ = -8					; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_lpItem$ = 12						; size = 4
?SendPeriodItemInfoOnce@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@PAVCItem@@@Z PROC ; CPeriodItemEx::SendPeriodItemInfoOnce
; _this$ = ecx

; 1076 : {

  02660	55		 push	 ebp
  02661	8b ec		 mov	 ebp, esp
  02663	83 ec 4c	 sub	 esp, 76			; 0000004cH
  02666	53		 push	 ebx
  02667	56		 push	 esi
  02668	57		 push	 edi
  02669	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1077 : 	int iPeriodInfoIndex = 0;

  0266c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iPeriodInfoIndex$[ebp], 0

; 1078 : 	iPeriodInfoIndex = lpObj->m_PeriodDataIndex;

  02673	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  02676	8b 88 20 26 00
	00		 mov	 ecx, DWORD PTR [eax+9760]
  0267c	89 4d f8	 mov	 DWORD PTR _iPeriodInfoIndex$[ebp], ecx

; 1079 : 
; 1080 : 	if( this->m_PeriodData[iPeriodInfoIndex].bInUse == TRUE &&
; 1081 : 		this->m_PeriodData[iPeriodInfoIndex].DBNumber == lpObj->DBNumber )

  0267f	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodInfoIndex$[ebp]
  02682	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  02688	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0268b	0f b6 54 01 04	 movzx	 edx, BYTE PTR [ecx+eax+4]
  02690	83 fa 01	 cmp	 edx, 1
  02693	0f 85 a5 00 00
	00		 jne	 $LN6@SendPeriod
  02699	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodInfoIndex$[ebp]
  0269c	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  026a2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  026a5	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  026a8	8b 44 01 08	 mov	 eax, DWORD PTR [ecx+eax+8]
  026ac	3b 42 2c	 cmp	 eax, DWORD PTR [edx+44]
  026af	0f 85 89 00 00
	00		 jne	 $LN6@SendPeriod

; 1082 : 	{
; 1083 : 		for(int i = 0; i < MAX_ITEMDATA; i++)

  026b5	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$221885[ebp], 0
  026bc	eb 09		 jmp	 SHORT $LN5@SendPeriod
$LN4@SendPeriod:
  026be	8b 45 f4	 mov	 eax, DWORD PTR _i$221885[ebp]
  026c1	83 c0 01	 add	 eax, 1
  026c4	89 45 f4	 mov	 DWORD PTR _i$221885[ebp], eax
$LN5@SendPeriod:
  026c7	83 7d f4 1e	 cmp	 DWORD PTR _i$221885[ebp], 30 ; 0000001eH
  026cb	7d 71		 jge	 SHORT $LN6@SendPeriod

; 1084 : 		{
; 1085 : 			if( this->m_PeriodData[iPeriodInfoIndex].itemData[i].bInUse == TRUE )

  026cd	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodInfoIndex$[ebp]
  026d0	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  026d6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  026d9	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  026dd	8b 45 f4	 mov	 eax, DWORD PTR _i$221885[ebp]
  026e0	6b c0 1c	 imul	 eax, 28			; 0000001cH
  026e3	0f b6 4c 02 24	 movzx	 ecx, BYTE PTR [edx+eax+36]
  026e8	83 f9 01	 cmp	 ecx, 1
  026eb	75 4f		 jne	 SHORT $LN2@SendPeriod

; 1086 : 			{
; 1087 : 				if( this->m_PeriodData[iPeriodInfoIndex].itemData[i].dwSerial == lpItem->GetNumber() )

  026ed	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodInfoIndex$[ebp]
  026f0	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  026f6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  026f9	8d 74 01 04	 lea	 esi, DWORD PTR [ecx+eax+4]
  026fd	8b 7d f4	 mov	 edi, DWORD PTR _i$221885[ebp]
  02700	6b ff 1c	 imul	 edi, 28			; 0000001cH
  02703	8b 4d 0c	 mov	 ecx, DWORD PTR _lpItem$[ebp]
  02706	e8 00 00 00 00	 call	 ?GetNumber@CItem@@QAEKXZ ; CItem::GetNumber
  0270b	39 44 3e 2c	 cmp	 DWORD PTR [esi+edi+44], eax
  0270f	75 2b		 jne	 SHORT $LN2@SendPeriod

; 1088 : 				{
; 1089 : 					this->OnRequestPeriodItemListOnce(lpObj,&this->m_PeriodData[iPeriodInfoIndex].itemData[i]);

  02711	8b 45 f8	 mov	 eax, DWORD PTR _iPeriodInfoIndex$[ebp]
  02714	69 c0 6c 03 00
	00		 imul	 eax, 876		; 0000036cH
  0271a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0271d	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  02721	8b 45 f4	 mov	 eax, DWORD PTR _i$221885[ebp]
  02724	6b c0 1c	 imul	 eax, 28			; 0000001cH
  02727	8d 4c 02 24	 lea	 ecx, DWORD PTR [edx+eax+36]
  0272b	51		 push	 ecx
  0272c	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0272f	52		 push	 edx
  02730	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02733	e8 00 00 00 00	 call	 ?OnRequestPeriodItemListOnce@CPeriodItemEx@@QAEXPAUOBJECTSTRUCT@@PAUITEMDATA@@@Z ; CPeriodItemEx::OnRequestPeriodItemListOnce

; 1090 : 					return true;

  02738	b0 01		 mov	 al, 1
  0273a	eb 04		 jmp	 SHORT $LN7@SendPeriod
$LN2@SendPeriod:

; 1091 : 				}
; 1092 : 			}
; 1093 : 		}

  0273c	eb 80		 jmp	 SHORT $LN4@SendPeriod
$LN6@SendPeriod:

; 1094 : 	}
; 1095 : 	return false;

  0273e	32 c0		 xor	 al, al
$LN7@SendPeriod:

; 1096 : }

  02740	5f		 pop	 edi
  02741	5e		 pop	 esi
  02742	5b		 pop	 ebx
  02743	8b e5		 mov	 esp, ebp
  02745	5d		 pop	 ebp
  02746	c2 08 00	 ret	 8
?SendPeriodItemInfoOnce@CPeriodItemEx@@QAE_NPAUOBJECTSTRUCT@@PAVCItem@@@Z ENDP ; CPeriodItemEx::SendPeriodItemInfoOnce
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\atlmfc\include\atltime.inl
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CTimeSpan@ATL@@QAE@XZ PROC				; ATL::CTimeSpan::CTimeSpan, COMDAT
; _this$ = ecx

; 28   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00015	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 29   : }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
??0CTimeSpan@ATL@@QAE@XZ ENDP				; ATL::CTimeSpan::CTimeSpan
_TEXT	ENDS
EXTRN	__allmul:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CTimeSpan@ATL@@QAE@JHHH@Z
_TEXT	SEGMENT
tv180 = -80						; size = 4
tv178 = -76						; size = 4
tv176 = -72						; size = 4
_this$ = -4						; size = 4
_lDays$ = 8						; size = 4
_nHours$ = 12						; size = 4
_nMins$ = 16						; size = 4
_nSecs$ = 20						; size = 4
??0CTimeSpan@ATL@@QAE@JHHH@Z PROC			; ATL::CTimeSpan::CTimeSpan, COMDAT
; _this$ = ecx

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 42   :  	m_timeSpan = nSecs + 60* (nMins + 60* (nHours + __int64(24) * lDays));

  0000c	8b 45 14	 mov	 eax, DWORD PTR _nSecs$[ebp]
  0000f	99		 cdq
  00010	8b f0		 mov	 esi, eax
  00012	8b fa		 mov	 edi, edx
  00014	8b 45 10	 mov	 eax, DWORD PTR _nMins$[ebp]
  00017	99		 cdq
  00018	8b d8		 mov	 ebx, eax
  0001a	8b c2		 mov	 eax, edx
  0001c	89 45 b8	 mov	 DWORD PTR tv176[ebp], eax
  0001f	8b 45 0c	 mov	 eax, DWORD PTR _nHours$[ebp]
  00022	99		 cdq
  00023	8b ca		 mov	 ecx, edx
  00025	89 45 b4	 mov	 DWORD PTR tv178[ebp], eax
  00028	8b 45 08	 mov	 eax, DWORD PTR _lDays$[ebp]
  0002b	99		 cdq
  0002c	6a 00		 push	 0
  0002e	6a 18		 push	 24			; 00000018H
  00030	52		 push	 edx
  00031	50		 push	 eax
  00032	89 4d b0	 mov	 DWORD PTR tv180[ebp], ecx
  00035	e8 00 00 00 00	 call	 __allmul
  0003a	8b 4d b4	 mov	 ecx, DWORD PTR tv178[ebp]
  0003d	03 c8		 add	 ecx, eax
  0003f	8b 45 b0	 mov	 eax, DWORD PTR tv180[ebp]
  00042	13 c2		 adc	 eax, edx
  00044	6a 00		 push	 0
  00046	6a 3c		 push	 60			; 0000003cH
  00048	50		 push	 eax
  00049	51		 push	 ecx
  0004a	e8 00 00 00 00	 call	 __allmul
  0004f	03 d8		 add	 ebx, eax
  00051	8b 45 b8	 mov	 eax, DWORD PTR tv176[ebp]
  00054	13 c2		 adc	 eax, edx
  00056	6a 00		 push	 0
  00058	6a 3c		 push	 60			; 0000003cH
  0005a	50		 push	 eax
  0005b	53		 push	 ebx
  0005c	e8 00 00 00 00	 call	 __allmul
  00061	03 f0		 add	 esi, eax
  00063	13 fa		 adc	 edi, edx
  00065	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00068	89 30		 mov	 DWORD PTR [eax], esi
  0006a	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 43   : }

  0006d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	5b		 pop	 ebx
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c2 10 00	 ret	 16			; 00000010H
??0CTimeSpan@ATL@@QAE@JHHH@Z ENDP			; ATL::CTimeSpan::CTimeSpan
_TEXT	ENDS
EXTRN	__alldiv:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetTotalMinutes@CTimeSpan@ATL@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTotalMinutes@CTimeSpan@ATL@@QBE_JXZ PROC		; ATL::CTimeSpan::GetTotalMinutes, COMDAT
; _this$ = ecx

; 61   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 62   : 	return( m_timeSpan/60 );

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	6a 00		 push	 0
  00011	6a 3c		 push	 60			; 0000003cH
  00013	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00016	51		 push	 ecx
  00017	8b 10		 mov	 edx, DWORD PTR [eax]
  00019	52		 push	 edx
  0001a	e8 00 00 00 00	 call	 __alldiv

; 63   : }

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?GetTotalMinutes@CTimeSpan@ATL@@QBE_JXZ ENDP		; ATL::CTimeSpan::GetTotalMinutes
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?GetTotalSeconds@CTimeSpan@ATL@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTotalSeconds@CTimeSpan@ATL@@QBE_JXZ PROC		; ATL::CTimeSpan::GetTotalSeconds, COMDAT
; _this$ = ecx

; 71   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 72   : 	return( m_timeSpan );

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00011	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]

; 73   : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetTotalSeconds@CTimeSpan@ATL@@QBE_JXZ ENDP		; ATL::CTimeSpan::GetTotalSeconds
_TEXT	ENDS
EXTRN	__time64:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetTickCount@CTime@ATL@@SG?AV12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetTickCount@CTime@ATL@@SG?AV12@XZ PROC		; ATL::CTime::GetTickCount, COMDAT

; 142  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 143  : 	return( CTime( ::_time64( NULL ) ) );

  00009	6a 00		 push	 0
  0000b	e8 00 00 00 00	 call	 __time64
  00010	83 c4 04	 add	 esp, 4
  00013	52		 push	 edx
  00014	50		 push	 eax
  00015	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00018	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@_J@Z	; ATL::CTime::CTime
  0001d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 144  : }

  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?GetTickCount@CTime@ATL@@SG?AV12@XZ ENDP		; ATL::CTime::GetTickCount
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??0CTime@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CTime@ATL@@QAE@XZ PROC				; ATL::CTime::CTime, COMDAT
; _this$ = ecx

; 166  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00015	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 167  : }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
??0CTime@ATL@@QAE@XZ ENDP				; ATL::CTime::CTime
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??0CTime@ATL@@QAE@_J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_time$ = 8						; size = 8
??0CTime@ATL@@QAE@_J@Z PROC				; ATL::CTime::CTime, COMDAT
; _this$ = ecx

; 171  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _time$[ebp]
  00012	89 08		 mov	 DWORD PTR [eax], ecx
  00014	8b 55 0c	 mov	 edx, DWORD PTR _time$[ebp+4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 172  : }

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
??0CTime@ATL@@QAE@_J@Z ENDP				; ATL::CTime::CTime
_TEXT	ENDS
PUBLIC	?AtlThrowImpl@ATL@@YGXJ@Z			; ATL::AtlThrowImpl
PUBLIC	__$ArrayPad$
EXTRN	__mktime64:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CTime@ATL@@QAE@HHHHHHH@Z
_TEXT	SEGMENT
tv194 = -136						; size = 4
tv137 = -136						; size = 4
tv129 = -136						; size = 4
tv89 = -136						; size = 4
tv81 = -136						; size = 4
tv73 = -136						; size = 4
_atm$ = -68						; size = 36
___atl_condVal$86718 = -32				; size = 4
___atl_condVal$86705 = -28				; size = 4
___atl_condVal$86692 = -24				; size = 4
___atl_condVal$86679 = -20				; size = 4
___atl_condVal$86666 = -16				; size = 4
___atl_condVal$86653 = -12				; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_nYear$ = 8						; size = 4
_nMonth$ = 12						; size = 4
_nDay$ = 16						; size = 4
_nHour$ = 20						; size = 4
_nMin$ = 24						; size = 4
_nSec$ = 28						; size = 4
_nDST$ = 32						; size = 4
??0CTime@ATL@@QAE@HHHHHHH@Z PROC			; ATL::CTime::CTime, COMDAT
; _this$ = ecx

; 182  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
$LN67@CTime:

; 183  : #pragma warning (push)
; 184  : #pragma warning (disable: 4127)  // conditional expression constant
; 185  : 
; 186  : 	ATLENSURE( nYear >= 1900 );

  00019	33 c0		 xor	 eax, eax
  0001b	81 7d 08 6c 07
	00 00		 cmp	 DWORD PTR _nYear$[ebp], 1900 ; 0000076cH
  00022	0f 9d c0	 setge	 al
  00025	89 45 f4	 mov	 DWORD PTR ___atl_condVal$86653[ebp], eax
$LN60@CTime:
  00028	33 c0		 xor	 eax, eax
  0002a	75 fc		 jne	 SHORT $LN60@CTime
  0002c	33 c0		 xor	 eax, eax
  0002e	75 f8		 jne	 SHORT $LN60@CTime
  00030	83 7d f4 00	 cmp	 DWORD PTR ___atl_condVal$86653[ebp], 0
  00034	75 0a		 jne	 SHORT $LN66@CTime
  00036	68 05 40 00 80	 push	 -2147467259		; 80004005H
  0003b	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN66@CTime:
  00040	33 c0		 xor	 eax, eax
  00042	75 d5		 jne	 SHORT $LN67@CTime
$LN57@CTime:

; 187  : 	ATLENSURE( nMonth >= 1 && nMonth <= 12 );

  00044	83 7d 0c 01	 cmp	 DWORD PTR _nMonth$[ebp], 1
  00048	7c 12		 jl	 SHORT $LN70@CTime
  0004a	83 7d 0c 0c	 cmp	 DWORD PTR _nMonth$[ebp], 12 ; 0000000cH
  0004e	7f 0c		 jg	 SHORT $LN70@CTime
  00050	c7 85 78 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv73[ebp], 1
  0005a	eb 0a		 jmp	 SHORT $LN71@CTime
$LN70@CTime:
  0005c	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv73[ebp], 0
$LN71@CTime:
  00066	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv73[ebp]
  0006c	89 45 f0	 mov	 DWORD PTR ___atl_condVal$86666[ebp], eax
$LN50@CTime:
  0006f	33 c0		 xor	 eax, eax
  00071	75 fc		 jne	 SHORT $LN50@CTime
  00073	33 c0		 xor	 eax, eax
  00075	75 f8		 jne	 SHORT $LN50@CTime
  00077	83 7d f0 00	 cmp	 DWORD PTR ___atl_condVal$86666[ebp], 0
  0007b	75 0a		 jne	 SHORT $LN56@CTime
  0007d	68 05 40 00 80	 push	 -2147467259		; 80004005H
  00082	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN56@CTime:
  00087	33 c0		 xor	 eax, eax
  00089	75 b9		 jne	 SHORT $LN57@CTime
$LN47@CTime:

; 188  : 	ATLENSURE( nDay >= 1 && nDay <= 31 );

  0008b	83 7d 10 01	 cmp	 DWORD PTR _nDay$[ebp], 1
  0008f	7c 12		 jl	 SHORT $LN72@CTime
  00091	83 7d 10 1f	 cmp	 DWORD PTR _nDay$[ebp], 31 ; 0000001fH
  00095	7f 0c		 jg	 SHORT $LN72@CTime
  00097	c7 85 78 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv81[ebp], 1
  000a1	eb 0a		 jmp	 SHORT $LN73@CTime
$LN72@CTime:
  000a3	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv81[ebp], 0
$LN73@CTime:
  000ad	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv81[ebp]
  000b3	89 45 ec	 mov	 DWORD PTR ___atl_condVal$86679[ebp], eax
$LN40@CTime:
  000b6	33 c0		 xor	 eax, eax
  000b8	75 fc		 jne	 SHORT $LN40@CTime
  000ba	33 c0		 xor	 eax, eax
  000bc	75 f8		 jne	 SHORT $LN40@CTime
  000be	83 7d ec 00	 cmp	 DWORD PTR ___atl_condVal$86679[ebp], 0
  000c2	75 0a		 jne	 SHORT $LN46@CTime
  000c4	68 05 40 00 80	 push	 -2147467259		; 80004005H
  000c9	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN46@CTime:
  000ce	33 c0		 xor	 eax, eax
  000d0	75 b9		 jne	 SHORT $LN47@CTime
$LN37@CTime:

; 189  : 	ATLENSURE( nHour >= 0 && nHour <= 23 );

  000d2	83 7d 14 00	 cmp	 DWORD PTR _nHour$[ebp], 0
  000d6	7c 12		 jl	 SHORT $LN74@CTime
  000d8	83 7d 14 17	 cmp	 DWORD PTR _nHour$[ebp], 23 ; 00000017H
  000dc	7f 0c		 jg	 SHORT $LN74@CTime
  000de	c7 85 78 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv89[ebp], 1
  000e8	eb 0a		 jmp	 SHORT $LN75@CTime
$LN74@CTime:
  000ea	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv89[ebp], 0
$LN75@CTime:
  000f4	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv89[ebp]
  000fa	89 45 e8	 mov	 DWORD PTR ___atl_condVal$86692[ebp], eax
$LN30@CTime:
  000fd	33 c0		 xor	 eax, eax
  000ff	75 fc		 jne	 SHORT $LN30@CTime
  00101	33 c0		 xor	 eax, eax
  00103	75 f8		 jne	 SHORT $LN30@CTime
  00105	83 7d e8 00	 cmp	 DWORD PTR ___atl_condVal$86692[ebp], 0
  00109	75 0a		 jne	 SHORT $LN36@CTime
  0010b	68 05 40 00 80	 push	 -2147467259		; 80004005H
  00110	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN36@CTime:
  00115	33 c0		 xor	 eax, eax
  00117	75 b9		 jne	 SHORT $LN37@CTime
$LN27@CTime:

; 190  : 	ATLENSURE( nMin >= 0 && nMin <= 59 );

  00119	83 7d 18 00	 cmp	 DWORD PTR _nMin$[ebp], 0
  0011d	7c 12		 jl	 SHORT $LN76@CTime
  0011f	83 7d 18 3b	 cmp	 DWORD PTR _nMin$[ebp], 59 ; 0000003bH
  00123	7f 0c		 jg	 SHORT $LN76@CTime
  00125	c7 85 78 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv129[ebp], 1
  0012f	eb 0a		 jmp	 SHORT $LN77@CTime
$LN76@CTime:
  00131	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv129[ebp], 0
$LN77@CTime:
  0013b	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv129[ebp]
  00141	89 45 e4	 mov	 DWORD PTR ___atl_condVal$86705[ebp], eax
$LN20@CTime:
  00144	33 c0		 xor	 eax, eax
  00146	75 fc		 jne	 SHORT $LN20@CTime
  00148	33 c0		 xor	 eax, eax
  0014a	75 f8		 jne	 SHORT $LN20@CTime
  0014c	83 7d e4 00	 cmp	 DWORD PTR ___atl_condVal$86705[ebp], 0
  00150	75 0a		 jne	 SHORT $LN26@CTime
  00152	68 05 40 00 80	 push	 -2147467259		; 80004005H
  00157	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN26@CTime:
  0015c	33 c0		 xor	 eax, eax
  0015e	75 b9		 jne	 SHORT $LN27@CTime
$LN17@CTime:

; 191  : 	ATLENSURE( nSec >= 0 && nSec <= 59 );

  00160	83 7d 1c 00	 cmp	 DWORD PTR _nSec$[ebp], 0
  00164	7c 12		 jl	 SHORT $LN78@CTime
  00166	83 7d 1c 3b	 cmp	 DWORD PTR _nSec$[ebp], 59 ; 0000003bH
  0016a	7f 0c		 jg	 SHORT $LN78@CTime
  0016c	c7 85 78 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv137[ebp], 1
  00176	eb 0a		 jmp	 SHORT $LN79@CTime
$LN78@CTime:
  00178	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv137[ebp], 0
$LN79@CTime:
  00182	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv137[ebp]
  00188	89 45 e0	 mov	 DWORD PTR ___atl_condVal$86718[ebp], eax
$LN10@CTime:
  0018b	33 c0		 xor	 eax, eax
  0018d	75 fc		 jne	 SHORT $LN10@CTime
  0018f	33 c0		 xor	 eax, eax
  00191	75 f8		 jne	 SHORT $LN10@CTime
  00193	83 7d e0 00	 cmp	 DWORD PTR ___atl_condVal$86718[ebp], 0
  00197	75 0a		 jne	 SHORT $LN16@CTime
  00199	68 05 40 00 80	 push	 -2147467259		; 80004005H
  0019e	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN16@CTime:
  001a3	33 c0		 xor	 eax, eax
  001a5	75 b9		 jne	 SHORT $LN17@CTime

; 192  : 
; 193  : #pragma warning (pop)
; 194  : 
; 195  : 	struct tm atm;
; 196  : 
; 197  : 	atm.tm_sec = nSec;

  001a7	8b 45 1c	 mov	 eax, DWORD PTR _nSec$[ebp]
  001aa	89 45 bc	 mov	 DWORD PTR _atm$[ebp], eax

; 198  : 	atm.tm_min = nMin;

  001ad	8b 45 18	 mov	 eax, DWORD PTR _nMin$[ebp]
  001b0	89 45 c0	 mov	 DWORD PTR _atm$[ebp+4], eax

; 199  : 	atm.tm_hour = nHour;

  001b3	8b 45 14	 mov	 eax, DWORD PTR _nHour$[ebp]
  001b6	89 45 c4	 mov	 DWORD PTR _atm$[ebp+8], eax

; 200  : 	atm.tm_mday = nDay;

  001b9	8b 45 10	 mov	 eax, DWORD PTR _nDay$[ebp]
  001bc	89 45 c8	 mov	 DWORD PTR _atm$[ebp+12], eax

; 201  : 	atm.tm_mon = nMonth - 1;        // tm_mon is 0 based

  001bf	8b 45 0c	 mov	 eax, DWORD PTR _nMonth$[ebp]
  001c2	83 e8 01	 sub	 eax, 1
  001c5	89 45 cc	 mov	 DWORD PTR _atm$[ebp+16], eax

; 202  : 	atm.tm_year = nYear - 1900;     // tm_year is 1900 based

  001c8	8b 45 08	 mov	 eax, DWORD PTR _nYear$[ebp]
  001cb	2d 6c 07 00 00	 sub	 eax, 1900		; 0000076cH
  001d0	89 45 d0	 mov	 DWORD PTR _atm$[ebp+20], eax

; 203  : 	atm.tm_isdst = nDST;

  001d3	8b 45 20	 mov	 eax, DWORD PTR _nDST$[ebp]
  001d6	89 45 dc	 mov	 DWORD PTR _atm$[ebp+32], eax

; 204  : 
; 205  : 	m_time = _mktime64(&atm);

  001d9	8d 45 bc	 lea	 eax, DWORD PTR _atm$[ebp]
  001dc	50		 push	 eax
  001dd	e8 00 00 00 00	 call	 __mktime64
  001e2	83 c4 04	 add	 esp, 4
  001e5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001e8	89 01		 mov	 DWORD PTR [ecx], eax
  001ea	89 51 04	 mov	 DWORD PTR [ecx+4], edx
$LN3@CTime:

; 206  : 	ATLASSUME(m_time != -1);       // indicates an illegal input time

  001ed	33 c0		 xor	 eax, eax
  001ef	75 fc		 jne	 SHORT $LN3@CTime
  001f1	33 c0		 xor	 eax, eax
  001f3	75 f8		 jne	 SHORT $LN3@CTime

; 207  : 	if(m_time == -1)

  001f5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001f8	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv194[ebp], eax
  001fe	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv194[ebp]
  00204	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR tv194[ebp]
  0020a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0020c	23 42 04	 and	 eax, DWORD PTR [edx+4]
  0020f	83 f8 ff	 cmp	 eax, -1
  00212	75 0a		 jne	 SHORT $LN68@CTime

; 208  : 	{
; 209  : 		AtlThrow(E_INVALIDARG);

  00214	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00219	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN68@CTime:

; 210  : 	}
; 211  : }

  0021e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
$LN69@CTime:
  00221	5f		 pop	 edi
  00222	5e		 pop	 esi
  00223	5b		 pop	 ebx
  00224	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00227	33 cd		 xor	 ecx, ebp
  00229	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0022e	8b e5		 mov	 esp, ebp
  00230	5d		 pop	 ebp
  00231	c2 1c 00	 ret	 28			; 0000001cH
??0CTime@ATL@@QAE@HHHHHHH@Z ENDP			; ATL::CTime::CTime
_TEXT	ENDS
EXTRN	?AfxThrowOleException@@YGXJ@Z:PROC		; AfxThrowOleException
EXTRN	?AfxThrowMemoryException@@YGXXZ:PROC		; AfxThrowMemoryException
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\atlmfc\include\atlexcept.h
;	COMDAT ?AtlThrowImpl@ATL@@YGXJ@Z
_TEXT	SEGMENT
_hr$ = 8						; size = 4
?AtlThrowImpl@ATL@@YGXJ@Z PROC				; ATL::AtlThrowImpl, COMDAT

; 65   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 66   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );
; 67   : #ifdef _AFX
; 68   : 	if( hr == E_OUTOFMEMORY )

  00009	81 7d 08 0e 00
	07 80		 cmp	 DWORD PTR _hr$[ebp], -2147024882 ; 8007000eH
  00010	75 07		 jne	 SHORT $LN2@AtlThrowIm

; 69   : 	{
; 70   : 		AfxThrowMemoryException();

  00012	e8 00 00 00 00	 call	 ?AfxThrowMemoryException@@YGXXZ ; AfxThrowMemoryException

; 71   : 	}
; 72   : 	else

  00017	eb 09		 jmp	 SHORT $LN4@AtlThrowIm
$LN2@AtlThrowIm:

; 73   : 	{
; 74   : 		AfxThrowOleException( hr );

  00019	8b 45 08	 mov	 eax, DWORD PTR _hr$[ebp]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ?AfxThrowOleException@@YGXJ@Z ; AfxThrowOleException
$LN4@AtlThrowIm:

; 75   : 	}
; 76   : #else
; 77   : 	throw CAtlException( hr );
; 78   : #endif
; 79   : };

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?AtlThrowImpl@ATL@@YGXJ@Z ENDP				; ATL::AtlThrowImpl
_TEXT	ENDS
PUBLIC	??0CTimeSpan@ATL@@QAE@_J@Z			; ATL::CTimeSpan::CTimeSpan
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\atlmfc\include\atltime.inl
;	COMDAT ??GCTime@ATL@@QBE?AVCTimeSpan@1@V01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_time$ = 12						; size = 8
??GCTime@ATL@@QBE?AVCTimeSpan@1@V01@@Z PROC		; ATL::CTime::operator-, COMDAT
; _this$ = ecx

; 304  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 305  : 	return( CTimeSpan( m_time-time.m_time ) );

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	2b 4d 0c	 sub	 ecx, DWORD PTR _time$[ebp]
  00014	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00017	1b 55 10	 sbb	 edx, DWORD PTR _time$[ebp+4]
  0001a	52		 push	 edx
  0001b	51		 push	 ecx
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001f	e8 00 00 00 00	 call	 ??0CTimeSpan@ATL@@QAE@_J@Z ; ATL::CTimeSpan::CTimeSpan
  00024	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 306  : }

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 0c 00	 ret	 12			; 0000000cH
??GCTime@ATL@@QBE?AVCTimeSpan@1@V01@@Z ENDP		; ATL::CTime::operator-
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@ATL@@QAE@_J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_time$ = 8						; size = 8
??0CTimeSpan@ATL@@QAE@_J@Z PROC				; ATL::CTimeSpan::CTimeSpan, COMDAT
; _this$ = ecx

; 33   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _time$[ebp]
  00012	89 08		 mov	 DWORD PTR [eax], ecx
  00014	8b 55 0c	 mov	 edx, DWORD PTR _time$[ebp+4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 34   : }

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
??0CTimeSpan@ATL@@QAE@_J@Z ENDP				; ATL::CTimeSpan::CTimeSpan
_TEXT	ENDS
PUBLIC	?GetTimeSpan@CTimeSpan@ATL@@QBE_JXZ		; ATL::CTimeSpan::GetTimeSpan
; Function compile flags: /Odtp /ZI
;	COMDAT ??HCTime@ATL@@QBE?AV01@VCTimeSpan@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_span$ = 12						; size = 8
??HCTime@ATL@@QBE?AV01@VCTimeSpan@1@@Z PROC		; ATL::CTime::operator+, COMDAT
; _this$ = ecx

; 314  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 315  : 	return( CTime( m_time+span.GetTimeSpan() ) );

  0000c	8d 4d 0c	 lea	 ecx, DWORD PTR _span$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetTimeSpan@CTimeSpan@ATL@@QBE_JXZ ; ATL::CTimeSpan::GetTimeSpan
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	03 01		 add	 eax, DWORD PTR [ecx]
  00019	13 51 04	 adc	 edx, DWORD PTR [ecx+4]
  0001c	52		 push	 edx
  0001d	50		 push	 eax
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00021	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@_J@Z	; ATL::CTime::CTime
  00026	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 316  : }

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
??HCTime@ATL@@QBE?AV01@VCTimeSpan@1@@Z ENDP		; ATL::CTime::operator+
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?GetTimeSpan@CTimeSpan@ATL@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTimeSpan@CTimeSpan@ATL@@QBE_JXZ PROC		; ATL::CTimeSpan::GetTimeSpan, COMDAT
; _this$ = ecx

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 82   : 	return( m_timeSpan );

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00011	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]

; 83   : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetTimeSpan@CTimeSpan@ATL@@QBE_JXZ ENDP		; ATL::CTimeSpan::GetTimeSpan
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?GetTime@CTime@ATL@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTime@CTime@ATL@@QBE_JXZ PROC			; ATL::CTime::GetTime, COMDAT
; _this$ = ecx

; 414  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 415  : 	return( m_time );

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00011	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]

; 416  : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetTime@CTime@ATL@@QBE_JXZ ENDP			; ATL::CTime::GetTime
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\perioditemex.cpp
;	COMDAT ??__Eg_PeriodItemEx@@YAXXZ
text$yc	SEGMENT
??__Eg_PeriodItemEx@@YAXXZ PROC				; `dynamic initializer for 'g_PeriodItemEx'', COMDAT

; 17   : CPeriodItemEx g_PeriodItemEx;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_PeriodItemEx@@3VCPeriodItemEx@@A ; g_PeriodItemEx
  0000e	e8 00 00 00 00	 call	 ??0CPeriodItemEx@@QAE@XZ ; CPeriodItemEx::CPeriodItemEx
  00013	68 00 00 00 00	 push	 OFFSET ??__Fg_PeriodItemEx@@YAXXZ ; `dynamic atexit destructor for 'g_PeriodItemEx''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__Eg_PeriodItemEx@@YAXXZ ENDP				; `dynamic initializer for 'g_PeriodItemEx''
; Function compile flags: /Odtp /ZI
text$yc	ENDS
;	COMDAT ??__Fg_PeriodItemEx@@YAXXZ
text$yd	SEGMENT
??__Fg_PeriodItemEx@@YAXXZ PROC				; `dynamic atexit destructor for 'g_PeriodItemEx'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_PeriodItemEx@@3VCPeriodItemEx@@A ; g_PeriodItemEx
  0000e	e8 00 00 00 00	 call	 ??1CPeriodItemEx@@UAE@XZ ; CPeriodItemEx::~CPeriodItemEx
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__Fg_PeriodItemEx@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_PeriodItemEx''
text$yd	ENDS
PUBLIC	?g_PeriodItemEx@@3VCPeriodItemEx@@A		; g_PeriodItemEx
_BSS	SEGMENT
?g_PeriodItemEx@@3VCPeriodItemEx@@A DB 0d5de4H DUP (?)	; g_PeriodItemEx
_BSS	ENDS
CRT$XCU	SEGMENT
_g_PeriodItemEx$initializer$ DD FLAT:??__Eg_PeriodItemEx@@YAXXZ
CRT$XCU	ENDS
END
