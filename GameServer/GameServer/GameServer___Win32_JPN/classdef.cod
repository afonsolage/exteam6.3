; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\common\classdef.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??0DEFAULTCLASSTYPE@@QAE@XZ			; DEFAULTCLASSTYPE::DEFAULTCLASSTYPE
PUBLIC	??_7classdef@@6B@				; classdef::`vftable'
PUBLIC	??0classdef@@QAE@XZ				; classdef::classdef
PUBLIC	??_R4classdef@@6B@				; classdef::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVclassdef@@@8				; classdef `RTTI Type Descriptor'
PUBLIC	??_R3classdef@@8				; classdef::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2classdef@@8				; classdef::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@classdef@@8			; classdef::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Eclassdef@@UAEPAXI@Z:PROC			; classdef::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@classdef@@8
; File d:\projects\exteam6.3\source\gameserver\common\classdef.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@classdef@@8 DD FLAT:??_R0?AVclassdef@@@8	; classdef::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3classdef@@8
rdata$r	ENDS
;	COMDAT ??_R2classdef@@8
rdata$r	SEGMENT
??_R2classdef@@8 DD FLAT:??_R1A@?0A@EA@classdef@@8	; classdef::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3classdef@@8
rdata$r	SEGMENT
??_R3classdef@@8 DD 00H					; classdef::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2classdef@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVclassdef@@@8
_DATA	SEGMENT
??_R0?AVclassdef@@@8 DD FLAT:??_7type_info@@6B@		; classdef `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVclassdef@@', 00H
_DATA	ENDS
;	COMDAT ??_R4classdef@@6B@
rdata$r	SEGMENT
??_R4classdef@@6B@ DD 00H				; classdef::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVclassdef@@@8
	DD	FLAT:??_R3classdef@@8
rdata$r	ENDS
;	COMDAT ??_7classdef@@6B@
CONST	SEGMENT
??_7classdef@@6B@ DD FLAT:??_R4classdef@@6B@		; classdef::`vftable'
	DD	FLAT:??_Eclassdef@@UAEPAXI@Z
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0classdef@@QAE@XZ PROC				; classdef::classdef
; _this$ = ecx

; 11   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7classdef@@6B@
  00015	68 00 00 00 00	 push	 OFFSET ??0DEFAULTCLASSTYPE@@QAE@XZ
  0001a	6a 07		 push	 7
  0001c	68 c8 0b 00 00	 push	 3016			; 00000bc8H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 c0 04	 add	 eax, 4
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??_H@YGXPAXIHP6EPAX0@Z@Z

; 12   : 	this->m_BabubBanJiCreate = FALSE;

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	c7 80 7c 52 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+21116], 0

; 13   : }

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
??0classdef@@QAE@XZ ENDP				; classdef::classdef
_TEXT	ENDS
PUBLIC	??1classdef@@UAE@XZ				; classdef::~classdef
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_Gclassdef@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gclassdef@@UAEPAXI@Z PROC				; classdef::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1classdef@@UAE@XZ	; classdef::~classdef
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_Gclassdef@@UAEPAXI@Z ENDP				; classdef::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??0CItem@@QAE@XZ:PROC				; CItem::CItem
; Function compile flags: /Odtp /ZI
;	COMDAT ??0DEFAULTCLASSTYPE@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0DEFAULTCLASSTYPE@@QAE@XZ PROC			; DEFAULTCLASSTYPE::DEFAULTCLASSTYPE, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	68 00 00 00 00	 push	 OFFSET ??0CItem@@QAE@XZ	; CItem::CItem
  00011	6a 0e		 push	 14			; 0000000eH
  00013	68 d4 00 00 00	 push	 212			; 000000d4H
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 c0 2c	 add	 eax, 44			; 0000002cH
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??_H@YGXPAXIHP6EPAX0@Z@Z
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
??0DEFAULTCLASSTYPE@@QAE@XZ ENDP			; DEFAULTCLASSTYPE::DEFAULTCLASSTYPE
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1classdef@@UAE@XZ PROC				; classdef::~classdef
; _this$ = ecx

; 16   : {

  00050	55		 push	 ebp
  00051	8b ec		 mov	 ebp, esp
  00053	83 ec 44	 sub	 esp, 68			; 00000044H
  00056	53		 push	 ebx
  00057	56		 push	 esi
  00058	57		 push	 edi
  00059	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0005c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7classdef@@6B@

; 17   : 	return;
; 18   : }

  00065	5f		 pop	 edi
  00066	5e		 pop	 esi
  00067	5b		 pop	 ebx
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
??1classdef@@UAE@XZ ENDP				; classdef::~classdef
_TEXT	ENDS
PUBLIC	__real@42c80000
PUBLIC	__real@3fa66666
PUBLIC	__real@428c0000
PUBLIC	__real@42b40000
PUBLIC	__real@42200000
PUBLIC	__real@42a00000
PUBLIC	__real@41f00000
PUBLIC	__real@3fc00000
PUBLIC	__real@42dc0000
PUBLIC	__real@41a00000
PUBLIC	__real@3f000000
PUBLIC	__real@40400000
PUBLIC	?SetCharacter@classdef@@QAEXHHHHHMMMMMMH@Z	; classdef::SetCharacter
PUBLIC	__real@42700000
PUBLIC	__real@3f800000
PUBLIC	__real@40000000
PUBLIC	?Init@classdef@@QAEXXZ				; classdef::Init
EXTRN	__fltused:DWORD
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@3fa66666
CONST	SEGMENT
__real@3fa66666 DD 03fa66666r			; 1.3
CONST	ENDS
;	COMDAT __real@428c0000
CONST	SEGMENT
__real@428c0000 DD 0428c0000r			; 70
CONST	ENDS
;	COMDAT __real@42b40000
CONST	SEGMENT
__real@42b40000 DD 042b40000r			; 90
CONST	ENDS
;	COMDAT __real@42200000
CONST	SEGMENT
__real@42200000 DD 042200000r			; 40
CONST	ENDS
;	COMDAT __real@42a00000
CONST	SEGMENT
__real@42a00000 DD 042a00000r			; 80
CONST	ENDS
;	COMDAT __real@41f00000
CONST	SEGMENT
__real@41f00000 DD 041f00000r			; 30
CONST	ENDS
;	COMDAT __real@3fc00000
CONST	SEGMENT
__real@3fc00000 DD 03fc00000r			; 1.5
CONST	ENDS
;	COMDAT __real@42dc0000
CONST	SEGMENT
__real@42dc0000 DD 042dc0000r			; 110
CONST	ENDS
;	COMDAT __real@41a00000
CONST	SEGMENT
__real@41a00000 DD 041a00000r			; 20
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@42700000
CONST	SEGMENT
__real@42700000 DD 042700000r			; 60
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@classdef@@QAEXXZ PROC				; classdef::Init
; _this$ = ecx

; 21   : {

  00070	55		 push	 ebp
  00071	8b ec		 mov	 ebp, esp
  00073	83 ec 44	 sub	 esp, 68			; 00000044H
  00076	53		 push	 ebx
  00077	56		 push	 esi
  00078	57		 push	 edi
  00079	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 22   : 	this->SetCharacter( CLASS_WIZARD, 18, 18, 15, 30, 60.0, 60.0, 1.0, 2.0, 2.0, 2.0, 0);

  0007c	6a 00		 push	 0
  0007e	51		 push	 ecx
  0007f	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@40000000
  00085	d9 1c 24	 fstp	 DWORD PTR [esp]
  00088	51		 push	 ecx
  00089	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@40000000
  0008f	d9 1c 24	 fstp	 DWORD PTR [esp]
  00092	51		 push	 ecx
  00093	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@40000000
  00099	d9 1c 24	 fstp	 DWORD PTR [esp]
  0009c	51		 push	 ecx
  0009d	d9 e8		 fld1
  0009f	d9 1c 24	 fstp	 DWORD PTR [esp]
  000a2	51		 push	 ecx
  000a3	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@42700000
  000a9	d9 1c 24	 fstp	 DWORD PTR [esp]
  000ac	51		 push	 ecx
  000ad	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@42700000
  000b3	d9 1c 24	 fstp	 DWORD PTR [esp]
  000b6	6a 1e		 push	 30			; 0000001eH
  000b8	6a 0f		 push	 15			; 0000000fH
  000ba	6a 12		 push	 18			; 00000012H
  000bc	6a 12		 push	 18			; 00000012H
  000be	6a 00		 push	 0
  000c0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	e8 00 00 00 00	 call	 ?SetCharacter@classdef@@QAEXHHHHHMMMMMMH@Z ; classdef::SetCharacter

; 23   : 	this->SetCharacter( CLASS_KNIGHT, 28, 20, 25, 10, 110.0, 20.0, 2.0, 0.5, 3.0, 1.0, 0);

  000c8	6a 00		 push	 0
  000ca	51		 push	 ecx
  000cb	d9 e8		 fld1
  000cd	d9 1c 24	 fstp	 DWORD PTR [esp]
  000d0	51		 push	 ecx
  000d1	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@40400000
  000d7	d9 1c 24	 fstp	 DWORD PTR [esp]
  000da	51		 push	 ecx
  000db	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@3f000000
  000e1	d9 1c 24	 fstp	 DWORD PTR [esp]
  000e4	51		 push	 ecx
  000e5	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@40000000
  000eb	d9 1c 24	 fstp	 DWORD PTR [esp]
  000ee	51		 push	 ecx
  000ef	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@41a00000
  000f5	d9 1c 24	 fstp	 DWORD PTR [esp]
  000f8	51		 push	 ecx
  000f9	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@42dc0000
  000ff	d9 1c 24	 fstp	 DWORD PTR [esp]
  00102	6a 0a		 push	 10			; 0000000aH
  00104	6a 19		 push	 25			; 00000019H
  00106	6a 14		 push	 20			; 00000014H
  00108	6a 1c		 push	 28			; 0000001cH
  0010a	6a 01		 push	 1
  0010c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010f	e8 00 00 00 00	 call	 ?SetCharacter@classdef@@QAEXHHHHHMMMMMMH@Z ; classdef::SetCharacter

; 24   : 	this->SetCharacter( CLASS_ELF, 22, 25, 20, 15, 80.0, 30.0, 1.0, 1.5, 2.0, 1.5, 0);

  00114	6a 00		 push	 0
  00116	51		 push	 ecx
  00117	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@3fc00000
  0011d	d9 1c 24	 fstp	 DWORD PTR [esp]
  00120	51		 push	 ecx
  00121	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@40000000
  00127	d9 1c 24	 fstp	 DWORD PTR [esp]
  0012a	51		 push	 ecx
  0012b	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@3fc00000
  00131	d9 1c 24	 fstp	 DWORD PTR [esp]
  00134	51		 push	 ecx
  00135	d9 e8		 fld1
  00137	d9 1c 24	 fstp	 DWORD PTR [esp]
  0013a	51		 push	 ecx
  0013b	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@41f00000
  00141	d9 1c 24	 fstp	 DWORD PTR [esp]
  00144	51		 push	 ecx
  00145	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@42a00000
  0014b	d9 1c 24	 fstp	 DWORD PTR [esp]
  0014e	6a 0f		 push	 15			; 0000000fH
  00150	6a 14		 push	 20			; 00000014H
  00152	6a 19		 push	 25			; 00000019H
  00154	6a 16		 push	 22			; 00000016H
  00156	6a 02		 push	 2
  00158	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0015b	e8 00 00 00 00	 call	 ?SetCharacter@classdef@@QAEXHHHHHMMMMMMH@Z ; classdef::SetCharacter

; 25   : 	this->SetCharacter( CLASS_MAGUMSA, 26, 26, 26, 26, 110.0, 60.0, 1.0, 1.0, 2.0, 2.0, 0);

  00160	6a 00		 push	 0
  00162	51		 push	 ecx
  00163	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@40000000
  00169	d9 1c 24	 fstp	 DWORD PTR [esp]
  0016c	51		 push	 ecx
  0016d	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@40000000
  00173	d9 1c 24	 fstp	 DWORD PTR [esp]
  00176	51		 push	 ecx
  00177	d9 e8		 fld1
  00179	d9 1c 24	 fstp	 DWORD PTR [esp]
  0017c	51		 push	 ecx
  0017d	d9 e8		 fld1
  0017f	d9 1c 24	 fstp	 DWORD PTR [esp]
  00182	51		 push	 ecx
  00183	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@42700000
  00189	d9 1c 24	 fstp	 DWORD PTR [esp]
  0018c	51		 push	 ecx
  0018d	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@42dc0000
  00193	d9 1c 24	 fstp	 DWORD PTR [esp]
  00196	6a 1a		 push	 26			; 0000001aH
  00198	6a 1a		 push	 26			; 0000001aH
  0019a	6a 1a		 push	 26			; 0000001aH
  0019c	6a 1a		 push	 26			; 0000001aH
  0019e	6a 03		 push	 3
  001a0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001a3	e8 00 00 00 00	 call	 ?SetCharacter@classdef@@QAEXHHHHHMMMMMMH@Z ; classdef::SetCharacter

; 26   : 	this->SetCharacter( CLASS_DARKLORD, 26, 20, 20, 15, 90.0, 40.0, 1.5, 1.0, 2.0, 1.5, 25);

  001a8	6a 19		 push	 25			; 00000019H
  001aa	51		 push	 ecx
  001ab	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@3fc00000
  001b1	d9 1c 24	 fstp	 DWORD PTR [esp]
  001b4	51		 push	 ecx
  001b5	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@40000000
  001bb	d9 1c 24	 fstp	 DWORD PTR [esp]
  001be	51		 push	 ecx
  001bf	d9 e8		 fld1
  001c1	d9 1c 24	 fstp	 DWORD PTR [esp]
  001c4	51		 push	 ecx
  001c5	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@3fc00000
  001cb	d9 1c 24	 fstp	 DWORD PTR [esp]
  001ce	51		 push	 ecx
  001cf	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@42200000
  001d5	d9 1c 24	 fstp	 DWORD PTR [esp]
  001d8	51		 push	 ecx
  001d9	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@42b40000
  001df	d9 1c 24	 fstp	 DWORD PTR [esp]
  001e2	6a 0f		 push	 15			; 0000000fH
  001e4	6a 14		 push	 20			; 00000014H
  001e6	6a 14		 push	 20			; 00000014H
  001e8	6a 1a		 push	 26			; 0000001aH
  001ea	6a 04		 push	 4
  001ec	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001ef	e8 00 00 00 00	 call	 ?SetCharacter@classdef@@QAEXHHHHHMMMMMMH@Z ; classdef::SetCharacter

; 27   : 	this->SetCharacter( CLASS_SUMMONER, 21, 21, 18, 23, 70.0, 40.0, 1.0, 1.5, 2.0, 1.5, 0);

  001f4	6a 00		 push	 0
  001f6	51		 push	 ecx
  001f7	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@3fc00000
  001fd	d9 1c 24	 fstp	 DWORD PTR [esp]
  00200	51		 push	 ecx
  00201	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@40000000
  00207	d9 1c 24	 fstp	 DWORD PTR [esp]
  0020a	51		 push	 ecx
  0020b	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@3fc00000
  00211	d9 1c 24	 fstp	 DWORD PTR [esp]
  00214	51		 push	 ecx
  00215	d9 e8		 fld1
  00217	d9 1c 24	 fstp	 DWORD PTR [esp]
  0021a	51		 push	 ecx
  0021b	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@42200000
  00221	d9 1c 24	 fstp	 DWORD PTR [esp]
  00224	51		 push	 ecx
  00225	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@428c0000
  0022b	d9 1c 24	 fstp	 DWORD PTR [esp]
  0022e	6a 17		 push	 23			; 00000017H
  00230	6a 12		 push	 18			; 00000012H
  00232	6a 15		 push	 21			; 00000015H
  00234	6a 15		 push	 21			; 00000015H
  00236	6a 05		 push	 5
  00238	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0023b	e8 00 00 00 00	 call	 ?SetCharacter@classdef@@QAEXHHHHHMMMMMMH@Z ; classdef::SetCharacter

; 28   : 	this->SetCharacter(CLASS_MONK, 32, 27, 25, 20, 100.0f, 40.0f, 1.3f, 1.0f, 2.0f, 1.3f, 0);

  00240	6a 00		 push	 0
  00242	51		 push	 ecx
  00243	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@3fa66666
  00249	d9 1c 24	 fstp	 DWORD PTR [esp]
  0024c	51		 push	 ecx
  0024d	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@40000000
  00253	d9 1c 24	 fstp	 DWORD PTR [esp]
  00256	51		 push	 ecx
  00257	d9 e8		 fld1
  00259	d9 1c 24	 fstp	 DWORD PTR [esp]
  0025c	51		 push	 ecx
  0025d	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@3fa66666
  00263	d9 1c 24	 fstp	 DWORD PTR [esp]
  00266	51		 push	 ecx
  00267	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@42200000
  0026d	d9 1c 24	 fstp	 DWORD PTR [esp]
  00270	51		 push	 ecx
  00271	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@42c80000
  00277	d9 1c 24	 fstp	 DWORD PTR [esp]
  0027a	6a 14		 push	 20			; 00000014H
  0027c	6a 19		 push	 25			; 00000019H
  0027e	6a 1b		 push	 27			; 0000001bH
  00280	6a 20		 push	 32			; 00000020H
  00282	6a 06		 push	 6
  00284	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00287	e8 00 00 00 00	 call	 ?SetCharacter@classdef@@QAEXHHHHHMMMMMMH@Z ; classdef::SetCharacter

; 29   : }

  0028c	5f		 pop	 edi
  0028d	5e		 pop	 esi
  0028e	5b		 pop	 ebx
  0028f	8b e5		 mov	 esp, ebp
  00291	5d		 pop	 ebp
  00292	c3		 ret	 0
?Init@classdef@@QAEXXZ ENDP				; classdef::Init
_TEXT	ENDS
PUBLIC	?SetEquipment@classdef@@QAEXH@Z			; classdef::SetEquipment
PUBLIC	__real@4024000000000000
EXTRN	?ExConfig@@3VcExConfigs@@A:BYTE			; ExConfig
EXTRN	?CheckUser@CExLicense@@QAE_NH@Z:PROC		; CExLicense::CheckUser
EXTRN	?g_ExLicense@@3VCExLicense@@A:BYTE		; g_ExLicense
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
tv354 = -72						; size = 4
tv350 = -72						; size = 4
tv346 = -72						; size = 4
tv342 = -72						; size = 4
tv338 = -72						; size = 4
tv334 = -72						; size = 4
tv330 = -72						; size = 4
tv326 = -72						; size = 4
tv322 = -72						; size = 4
tv318 = -72						; size = 4
tv314 = -72						; size = 4
tv310 = -72						; size = 4
tv306 = -72						; size = 4
tv302 = -72						; size = 4
tv74 = -72						; size = 4
_this$ = -4						; size = 4
_Class$ = 8						; size = 4
_Str$ = 12						; size = 4
_Dex$ = 16						; size = 4
_Vit$ = 20						; size = 4
_Energy$ = 24						; size = 4
_Life$ = 28						; size = 4
_Mana$ = 32						; size = 4
_LevelLife$ = 36					; size = 4
_LevelMana$ = 40					; size = 4
_VitalityToLife$ = 44					; size = 4
_EnergyToMana$ = 48					; size = 4
_Leadership$ = 52					; size = 4
?SetCharacter@classdef@@QAEXHHHHHMMMMMMH@Z PROC		; classdef::SetCharacter
; _this$ = ecx

; 32   : {

  002a0	55		 push	 ebp
  002a1	8b ec		 mov	 ebp, esp
  002a3	83 ec 48	 sub	 esp, 72			; 00000048H
  002a6	53		 push	 ebx
  002a7	56		 push	 esi
  002a8	57		 push	 edi
  002a9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 33   : #ifdef HP_CONFIG	
; 34   : 	if(g_ExLicense.CheckUser(eExUB::PrideMuLocal) || g_ExLicense.CheckUser(eExUB::PrideMu))

  002ac	6a 1a		 push	 26			; 0000001aH
  002ae	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  002b3	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  002b8	0f b6 c0	 movzx	 eax, al
  002bb	85 c0		 test	 eax, eax
  002bd	75 17		 jne	 SHORT $LN16@SetCharact
  002bf	6a 11		 push	 17			; 00000011H
  002c1	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  002c6	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  002cb	0f b6 c0	 movzx	 eax, al
  002ce	85 c0		 test	 eax, eax
  002d0	0f 84 11 02 00
	00		 je	 $LN14@SetCharact
$LN16@SetCharact:

; 35   : 	{
; 36   : 		switch (Class)

  002d6	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  002d9	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
  002dc	83 7d b8 06	 cmp	 DWORD PTR tv74[ebp], 6
  002e0	0f 87 01 02 00
	00		 ja	 $LN14@SetCharact
  002e6	8b 4d b8	 mov	 ecx, DWORD PTR tv74[ebp]
  002e9	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN20@SetCharact[ecx*4]
$LN13@SetCharact:

; 37   : 		{
; 38   : 			case CLASS_WIZARD:
; 39   : 				this->DefClass[Class].LevelLife = (float)ExConfig.PrideMu.LevelLifeSM / 10.0;

  002f0	db 05 70 0b 00
	00		 fild	 DWORD PTR ?ExConfig@@3VcExConfigs@@A+2928
  002f6	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4024000000000000
  002fc	d9 5d b8	 fstp	 DWORD PTR tv302[ebp]
  002ff	d9 45 b8	 fld	 DWORD PTR tv302[ebp]
  00302	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  00305	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  0030b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0030e	d9 5c 01 10	 fstp	 DWORD PTR [ecx+eax+16]

; 40   : 				this->DefClass[Class].VitalityToLife = (float)ExConfig.PrideMu.VitalityToLifeSM / 10.0;

  00312	db 05 74 0b 00
	00		 fild	 DWORD PTR ?ExConfig@@3VcExConfigs@@A+2932
  00318	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4024000000000000
  0031e	d9 5d b8	 fstp	 DWORD PTR tv306[ebp]
  00321	d9 45 b8	 fld	 DWORD PTR tv306[ebp]
  00324	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  00327	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  0032d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00330	d9 5c 01 28	 fstp	 DWORD PTR [ecx+eax+40]

; 41   : 				break;

  00334	e9 ae 01 00 00	 jmp	 $LN14@SetCharact
$LN12@SetCharact:

; 42   : 			case CLASS_KNIGHT:
; 43   : 				this->DefClass[Class].LevelLife = (float)ExConfig.PrideMu.LevelLifeDK / 10.0;

  00339	db 05 78 0b 00
	00		 fild	 DWORD PTR ?ExConfig@@3VcExConfigs@@A+2936
  0033f	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4024000000000000
  00345	d9 5d b8	 fstp	 DWORD PTR tv310[ebp]
  00348	d9 45 b8	 fld	 DWORD PTR tv310[ebp]
  0034b	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  0034e	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  00354	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00357	d9 5c 01 10	 fstp	 DWORD PTR [ecx+eax+16]

; 44   : 				this->DefClass[Class].VitalityToLife = (float)ExConfig.PrideMu.VitalityToLifeDK / 10.0;

  0035b	db 05 7c 0b 00
	00		 fild	 DWORD PTR ?ExConfig@@3VcExConfigs@@A+2940
  00361	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4024000000000000
  00367	d9 5d b8	 fstp	 DWORD PTR tv314[ebp]
  0036a	d9 45 b8	 fld	 DWORD PTR tv314[ebp]
  0036d	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  00370	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  00376	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00379	d9 5c 01 28	 fstp	 DWORD PTR [ecx+eax+40]

; 45   : 				break;

  0037d	e9 65 01 00 00	 jmp	 $LN14@SetCharact
$LN11@SetCharact:

; 46   : 			case CLASS_ELF:
; 47   : 				this->DefClass[Class].LevelLife = (float)ExConfig.PrideMu.LevelLifeELF / 10.0;

  00382	db 05 80 0b 00
	00		 fild	 DWORD PTR ?ExConfig@@3VcExConfigs@@A+2944
  00388	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4024000000000000
  0038e	d9 5d b8	 fstp	 DWORD PTR tv318[ebp]
  00391	d9 45 b8	 fld	 DWORD PTR tv318[ebp]
  00394	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  00397	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  0039d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003a0	d9 5c 01 10	 fstp	 DWORD PTR [ecx+eax+16]

; 48   : 				this->DefClass[Class].VitalityToLife = (float)ExConfig.PrideMu.VitalityToLifeELF / 10.0;

  003a4	db 05 84 0b 00
	00		 fild	 DWORD PTR ?ExConfig@@3VcExConfigs@@A+2948
  003aa	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4024000000000000
  003b0	d9 5d b8	 fstp	 DWORD PTR tv322[ebp]
  003b3	d9 45 b8	 fld	 DWORD PTR tv322[ebp]
  003b6	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  003b9	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  003bf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003c2	d9 5c 01 28	 fstp	 DWORD PTR [ecx+eax+40]

; 49   : 				break;

  003c6	e9 1c 01 00 00	 jmp	 $LN14@SetCharact
$LN10@SetCharact:

; 50   : 			case CLASS_MAGUMSA:
; 51   : 				this->DefClass[Class].LevelLife = (float)ExConfig.PrideMu.LevelLifeMG / 10.0;

  003cb	db 05 88 0b 00
	00		 fild	 DWORD PTR ?ExConfig@@3VcExConfigs@@A+2952
  003d1	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4024000000000000
  003d7	d9 5d b8	 fstp	 DWORD PTR tv326[ebp]
  003da	d9 45 b8	 fld	 DWORD PTR tv326[ebp]
  003dd	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  003e0	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  003e6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003e9	d9 5c 01 10	 fstp	 DWORD PTR [ecx+eax+16]

; 52   : 				this->DefClass[Class].VitalityToLife = (float)ExConfig.PrideMu.VitalityToLifeMG / 10.0;

  003ed	db 05 8c 0b 00
	00		 fild	 DWORD PTR ?ExConfig@@3VcExConfigs@@A+2956
  003f3	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4024000000000000
  003f9	d9 5d b8	 fstp	 DWORD PTR tv330[ebp]
  003fc	d9 45 b8	 fld	 DWORD PTR tv330[ebp]
  003ff	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  00402	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  00408	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0040b	d9 5c 01 28	 fstp	 DWORD PTR [ecx+eax+40]

; 53   : 				break;

  0040f	e9 d3 00 00 00	 jmp	 $LN14@SetCharact
$LN9@SetCharact:

; 54   : 			case CLASS_DARKLORD:
; 55   : 				this->DefClass[Class].LevelLife = (float)ExConfig.PrideMu.LevelLifeDL / 10.0;

  00414	db 05 90 0b 00
	00		 fild	 DWORD PTR ?ExConfig@@3VcExConfigs@@A+2960
  0041a	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4024000000000000
  00420	d9 5d b8	 fstp	 DWORD PTR tv334[ebp]
  00423	d9 45 b8	 fld	 DWORD PTR tv334[ebp]
  00426	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  00429	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  0042f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00432	d9 5c 01 10	 fstp	 DWORD PTR [ecx+eax+16]

; 56   : 				this->DefClass[Class].VitalityToLife = (float)ExConfig.PrideMu.VitalityToLifeDL / 10.0;

  00436	db 05 94 0b 00
	00		 fild	 DWORD PTR ?ExConfig@@3VcExConfigs@@A+2964
  0043c	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4024000000000000
  00442	d9 5d b8	 fstp	 DWORD PTR tv338[ebp]
  00445	d9 45 b8	 fld	 DWORD PTR tv338[ebp]
  00448	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  0044b	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  00451	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00454	d9 5c 01 28	 fstp	 DWORD PTR [ecx+eax+40]

; 57   : 				break;

  00458	e9 8a 00 00 00	 jmp	 $LN14@SetCharact
$LN8@SetCharact:

; 58   : 			case CLASS_SUMMONER:
; 59   : 				this->DefClass[Class].LevelLife = (float)ExConfig.PrideMu.LevelLifeSUM / 10.0;

  0045d	db 05 98 0b 00
	00		 fild	 DWORD PTR ?ExConfig@@3VcExConfigs@@A+2968
  00463	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4024000000000000
  00469	d9 5d b8	 fstp	 DWORD PTR tv342[ebp]
  0046c	d9 45 b8	 fld	 DWORD PTR tv342[ebp]
  0046f	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  00472	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  00478	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0047b	d9 5c 01 10	 fstp	 DWORD PTR [ecx+eax+16]

; 60   : 				this->DefClass[Class].VitalityToLife = (float)ExConfig.PrideMu.VitalityToLifeSUM / 10.0;

  0047f	db 05 9c 0b 00
	00		 fild	 DWORD PTR ?ExConfig@@3VcExConfigs@@A+2972
  00485	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4024000000000000
  0048b	d9 5d b8	 fstp	 DWORD PTR tv346[ebp]
  0048e	d9 45 b8	 fld	 DWORD PTR tv346[ebp]
  00491	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  00494	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  0049a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0049d	d9 5c 01 28	 fstp	 DWORD PTR [ecx+eax+40]

; 61   : 				break;

  004a1	eb 44		 jmp	 SHORT $LN14@SetCharact
$LN7@SetCharact:

; 62   : 			case CLASS_MONK:
; 63   : 				this->DefClass[Class].LevelLife = (float)ExConfig.PrideMu.LevelLifeRF / 10.0;

  004a3	db 05 a0 0b 00
	00		 fild	 DWORD PTR ?ExConfig@@3VcExConfigs@@A+2976
  004a9	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4024000000000000
  004af	d9 5d b8	 fstp	 DWORD PTR tv350[ebp]
  004b2	d9 45 b8	 fld	 DWORD PTR tv350[ebp]
  004b5	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  004b8	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  004be	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004c1	d9 5c 01 10	 fstp	 DWORD PTR [ecx+eax+16]

; 64   : 				this->DefClass[Class].VitalityToLife = (float)ExConfig.PrideMu.VitalityToLifeRF / 10.0;

  004c5	db 05 a4 0b 00
	00		 fild	 DWORD PTR ?ExConfig@@3VcExConfigs@@A+2980
  004cb	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4024000000000000
  004d1	d9 5d b8	 fstp	 DWORD PTR tv354[ebp]
  004d4	d9 45 b8	 fld	 DWORD PTR tv354[ebp]
  004d7	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  004da	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  004e0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004e3	d9 5c 01 28	 fstp	 DWORD PTR [ecx+eax+40]
$LN14@SetCharact:

; 65   : 				break;
; 66   : 		}
; 67   : 	}
; 68   : #endif
; 69   : 
; 70   : 	this->DefClass[Class].Experience = 0;

  004e7	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  004ea	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  004f0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004f3	c7 44 01 04 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+4], 0

; 71   : 
; 72   : 	this->DefClass[Class].Strength = Str;

  004fb	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  004fe	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  00504	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00507	66 8b 55 0c	 mov	 dx, WORD PTR _Str$[ebp]
  0050b	66 89 54 01 08	 mov	 WORD PTR [ecx+eax+8], dx

; 73   : 	this->DefClass[Class].Dexterity = Dex;

  00510	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  00513	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  00519	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0051c	66 8b 55 10	 mov	 dx, WORD PTR _Dex$[ebp]
  00520	66 89 54 01 0a	 mov	 WORD PTR [ecx+eax+10], dx

; 74   : 	this->DefClass[Class].Vitality = Vit;

  00525	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  00528	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  0052e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00531	66 8b 55 14	 mov	 dx, WORD PTR _Vit$[ebp]
  00535	66 89 54 01 0c	 mov	 WORD PTR [ecx+eax+12], dx

; 75   : 	this->DefClass[Class].Energy = Energy;

  0053a	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  0053d	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  00543	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00546	66 8b 55 18	 mov	 dx, WORD PTR _Energy$[ebp]
  0054a	66 89 54 01 0e	 mov	 WORD PTR [ecx+eax+14], dx

; 76   : 
; 77   : 	this->DefClass[Class].Life = Life;

  0054f	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  00552	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  00558	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0055b	d9 45 1c	 fld	 DWORD PTR _Life$[ebp]
  0055e	d9 5c 01 14	 fstp	 DWORD PTR [ecx+eax+20]

; 78   : 	this->DefClass[Class].MaxLife = Life;

  00562	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  00565	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  0056b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0056e	d9 45 1c	 fld	 DWORD PTR _Life$[ebp]
  00571	d9 5c 01 18	 fstp	 DWORD PTR [ecx+eax+24]

; 79   : #ifdef HP_CONFIG	
; 80   : 	if(g_ExLicense.CheckUser(eExUB::PrideMuLocal) || g_ExLicense.CheckUser(eExUB::PrideMu))

  00575	6a 1a		 push	 26			; 0000001aH
  00577	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  0057c	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  00581	0f b6 c0	 movzx	 eax, al
  00584	85 c0		 test	 eax, eax
  00586	75 13		 jne	 SHORT $LN5@SetCharact
  00588	6a 11		 push	 17			; 00000011H
  0058a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  0058f	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  00594	0f b6 c0	 movzx	 eax, al
  00597	85 c0		 test	 eax, eax
  00599	74 02		 je	 SHORT $LN6@SetCharact
$LN5@SetCharact:

; 81   : 	{
; 82   : 	}
; 83   : 	else

  0059b	eb 13		 jmp	 SHORT $LN4@SetCharact
$LN6@SetCharact:

; 84   : 	{
; 85   : 		this->DefClass[Class].LevelLife = LevelLife;

  0059d	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  005a0	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  005a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005a9	d9 45 24	 fld	 DWORD PTR _LevelLife$[ebp]
  005ac	d9 5c 01 10	 fstp	 DWORD PTR [ecx+eax+16]
$LN4@SetCharact:

; 86   : 	}
; 87   : #else
; 88   : 	this->DefClass[Class].LevelLife = LevelLife;
; 89   : #endif
; 90   : 	this->DefClass[Class].Mana = Mana;

  005b0	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  005b3	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  005b9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005bc	d9 45 20	 fld	 DWORD PTR _Mana$[ebp]
  005bf	d9 5c 01 20	 fstp	 DWORD PTR [ecx+eax+32]

; 91   : 	this->DefClass[Class].MaxMana = Mana;

  005c3	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  005c6	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  005cc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005cf	d9 45 20	 fld	 DWORD PTR _Mana$[ebp]
  005d2	d9 5c 01 24	 fstp	 DWORD PTR [ecx+eax+36]

; 92   : 	this->DefClass[Class].LevelMana = LevelMana;

  005d6	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  005d9	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  005df	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005e2	d9 45 28	 fld	 DWORD PTR _LevelMana$[ebp]
  005e5	d9 5c 01 1c	 fstp	 DWORD PTR [ecx+eax+28]

; 93   : 
; 94   : #ifdef HP_CONFIG	
; 95   : 	if(g_ExLicense.CheckUser(eExUB::PrideMuLocal) || g_ExLicense.CheckUser(eExUB::PrideMu) )

  005e9	6a 1a		 push	 26			; 0000001aH
  005eb	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  005f0	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  005f5	0f b6 c0	 movzx	 eax, al
  005f8	85 c0		 test	 eax, eax
  005fa	75 13		 jne	 SHORT $LN2@SetCharact
  005fc	6a 11		 push	 17			; 00000011H
  005fe	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  00603	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  00608	0f b6 c0	 movzx	 eax, al
  0060b	85 c0		 test	 eax, eax
  0060d	74 02		 je	 SHORT $LN3@SetCharact
$LN2@SetCharact:

; 96   : 	{
; 97   : 	}
; 98   : 	else

  0060f	eb 13		 jmp	 SHORT $LN1@SetCharact
$LN3@SetCharact:

; 99   : 	{
; 100  : 		this->DefClass[Class].VitalityToLife = VitalityToLife;

  00611	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  00614	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  0061a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0061d	d9 45 2c	 fld	 DWORD PTR _VitalityToLife$[ebp]
  00620	d9 5c 01 28	 fstp	 DWORD PTR [ecx+eax+40]
$LN1@SetCharact:

; 101  : 	}
; 102  : #else
; 103  : 	this->DefClass[Class].VitalityToLife = VitalityToLife;
; 104  : #endif
; 105  : 
; 106  : 	this->DefClass[Class].EnergyToMana = EnergyToMana;

  00624	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  00627	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  0062d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00630	d9 45 30	 fld	 DWORD PTR _EnergyToMana$[ebp]
  00633	d9 5c 01 2c	 fstp	 DWORD PTR [ecx+eax+44]

; 107  : 
; 108  : 	this->DefClass[Class].Leadership = Leadership;

  00637	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  0063a	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  00640	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00643	66 8b 55 34	 mov	 dx, WORD PTR _Leadership$[ebp]
  00647	66 89 94 01 c8
	0b 00 00	 mov	 WORD PTR [ecx+eax+3016], dx

; 109  : 
; 110  : 	this->SetEquipment(Class);

  0064f	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  00652	50		 push	 eax
  00653	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00656	e8 00 00 00 00	 call	 ?SetEquipment@classdef@@QAEXH@Z ; classdef::SetEquipment

; 111  : 
; 112  : }

  0065b	5f		 pop	 edi
  0065c	5e		 pop	 esi
  0065d	5b		 pop	 ebx
  0065e	8b e5		 mov	 esp, ebp
  00660	5d		 pop	 ebp
  00661	c2 30 00	 ret	 48			; 00000030H
$LN20@SetCharact:
  00664	00 00 00 00	 DD	 $LN13@SetCharact
  00668	00 00 00 00	 DD	 $LN12@SetCharact
  0066c	00 00 00 00	 DD	 $LN11@SetCharact
  00670	00 00 00 00	 DD	 $LN10@SetCharact
  00674	00 00 00 00	 DD	 $LN9@SetCharact
  00678	00 00 00 00	 DD	 $LN8@SetCharact
  0067c	00 00 00 00	 DD	 $LN7@SetCharact
?SetCharacter@classdef@@QAEXHHHHHMMMMMMH@Z ENDP		; classdef::SetCharacter
_TEXT	ENDS
EXTRN	?Convert@CItem@@QAEXHEEEEEEPAEEEE@Z:PROC	; CItem::Convert
EXTRN	?ItemGetNumberMake@@YAHHH@Z:PROC		; ItemGetNumberMake
EXTRN	?Clear@CItem@@QAEXXZ:PROC			; CItem::Clear
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv73 = -84						; size = 4
_n$ = -16						; size = 4
_right_type$ = -12					; size = 4
_def_type$ = -8						; size = 4
_this$ = -4						; size = 4
_Class$ = 8						; size = 4
?SetEquipment@classdef@@QAEXH@Z PROC			; classdef::SetEquipment
; _this$ = ecx

; 115  : {

  00680	55		 push	 ebp
  00681	8b ec		 mov	 ebp, esp
  00683	83 ec 54	 sub	 esp, 84			; 00000054H
  00686	53		 push	 ebx
  00687	56		 push	 esi
  00688	57		 push	 edi
  00689	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 116  : 	int def_type=0;

  0068c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _def_type$[ebp], 0

; 117  : 	int right_type=0;

  00693	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _right_type$[ebp], 0

; 118  : 	int n;
; 119  : 
; 120  : 	for (n=0;n<MAX_PLAYER_EQUIPMENT+1;n++)

  0069a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _n$[ebp], 0
  006a1	eb 09		 jmp	 SHORT $LN20@SetEquipme
$LN19@SetEquipme:
  006a3	8b 45 f0	 mov	 eax, DWORD PTR _n$[ebp]
  006a6	83 c0 01	 add	 eax, 1
  006a9	89 45 f0	 mov	 DWORD PTR _n$[ebp], eax
$LN20@SetEquipme:
  006ac	83 7d f0 0d	 cmp	 DWORD PTR _n$[ebp], 13	; 0000000dH
  006b0	7d 24		 jge	 SHORT $LN18@SetEquipme

; 121  : 	{
; 122  : 		this->DefClass[Class].Equipment[n].Clear();

  006b2	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  006b5	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  006bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006be	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  006c2	8b 45 f0	 mov	 eax, DWORD PTR _n$[ebp]
  006c5	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  006cb	8d 4c 02 2c	 lea	 ecx, DWORD PTR [edx+eax+44]
  006cf	e8 00 00 00 00	 call	 ?Clear@CItem@@QAEXXZ	; CItem::Clear

; 123  : 	}

  006d4	eb cd		 jmp	 SHORT $LN19@SetEquipme
$LN18@SetEquipme:

; 124  : 
; 125  : 	switch (Class)

  006d6	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  006d9	89 45 ac	 mov	 DWORD PTR tv73[ebp], eax
  006dc	8b 4d ac	 mov	 ecx, DWORD PTR tv73[ebp]
  006df	83 e9 01	 sub	 ecx, 1
  006e2	89 4d ac	 mov	 DWORD PTR tv73[ebp], ecx
  006e5	83 7d ac 05	 cmp	 DWORD PTR tv73[ebp], 5
  006e9	0f 87 9e 00 00
	00		 ja	 $LN16@SetEquipme
  006ef	8b 55 ac	 mov	 edx, DWORD PTR tv73[ebp]
  006f2	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN23@SetEquipme[edx*4]
$LN15@SetEquipme:

; 126  : 	{
; 127  : 		case CLASS_KNIGHT:
; 128  : 			def_type = ItemGetNumberMake(1, 0);

  006f9	6a 00		 push	 0
  006fb	6a 01		 push	 1
  006fd	e8 00 00 00 00	 call	 ?ItemGetNumberMake@@YAHHH@Z ; ItemGetNumberMake
  00702	83 c4 08	 add	 esp, 8
  00705	89 45 f8	 mov	 DWORD PTR _def_type$[ebp], eax

; 129  : 			break;

  00708	e9 80 00 00 00	 jmp	 $LN16@SetEquipme
$LN14@SetEquipme:

; 130  : 
; 131  : 		case CLASS_ELF:
; 132  : 			def_type = ItemGetNumberMake(4, 0);

  0070d	6a 00		 push	 0
  0070f	6a 04		 push	 4
  00711	e8 00 00 00 00	 call	 ?ItemGetNumberMake@@YAHHH@Z ; ItemGetNumberMake
  00716	83 c4 08	 add	 esp, 8
  00719	89 45 f8	 mov	 DWORD PTR _def_type$[ebp], eax

; 133  : 			right_type = ItemGetNumberMake(4, 15);

  0071c	6a 0f		 push	 15			; 0000000fH
  0071e	6a 04		 push	 4
  00720	e8 00 00 00 00	 call	 ?ItemGetNumberMake@@YAHHH@Z ; ItemGetNumberMake
  00725	83 c4 08	 add	 esp, 8
  00728	89 45 f4	 mov	 DWORD PTR _right_type$[ebp], eax

; 134  : 			break;

  0072b	eb 60		 jmp	 SHORT $LN16@SetEquipme
$LN13@SetEquipme:

; 135  : 
; 136  : 		case CLASS_DARKLORD:
; 137  : 			def_type = ItemGetNumberMake(6, 0);

  0072d	6a 00		 push	 0
  0072f	6a 06		 push	 6
  00731	e8 00 00 00 00	 call	 ?ItemGetNumberMake@@YAHHH@Z ; ItemGetNumberMake
  00736	83 c4 08	 add	 esp, 8
  00739	89 45 f8	 mov	 DWORD PTR _def_type$[ebp], eax

; 138  : 			right_type = ItemGetNumberMake(0, 1);

  0073c	6a 01		 push	 1
  0073e	6a 00		 push	 0
  00740	e8 00 00 00 00	 call	 ?ItemGetNumberMake@@YAHHH@Z ; ItemGetNumberMake
  00745	83 c4 08	 add	 esp, 8
  00748	89 45 f4	 mov	 DWORD PTR _right_type$[ebp], eax

; 139  : 			break;

  0074b	eb 40		 jmp	 SHORT $LN16@SetEquipme
$LN12@SetEquipme:

; 140  : 
; 141  : 		case CLASS_MAGUMSA:
; 142  : 			def_type = ItemGetNumberMake(6, 0);

  0074d	6a 00		 push	 0
  0074f	6a 06		 push	 6
  00751	e8 00 00 00 00	 call	 ?ItemGetNumberMake@@YAHHH@Z ; ItemGetNumberMake
  00756	83 c4 08	 add	 esp, 8
  00759	89 45 f8	 mov	 DWORD PTR _def_type$[ebp], eax

; 143  : 			right_type = ItemGetNumberMake(0, 1);

  0075c	6a 01		 push	 1
  0075e	6a 00		 push	 0
  00760	e8 00 00 00 00	 call	 ?ItemGetNumberMake@@YAHHH@Z ; ItemGetNumberMake
  00765	83 c4 08	 add	 esp, 8
  00768	89 45 f4	 mov	 DWORD PTR _right_type$[ebp], eax

; 144  : 			break;

  0076b	eb 20		 jmp	 SHORT $LN16@SetEquipme
$LN11@SetEquipme:

; 145  : 
; 146  : 		case CLASS_SUMMONER:
; 147  : 			def_type = ItemGetNumberMake(1, 0);

  0076d	6a 00		 push	 0
  0076f	6a 01		 push	 1
  00771	e8 00 00 00 00	 call	 ?ItemGetNumberMake@@YAHHH@Z ; ItemGetNumberMake
  00776	83 c4 08	 add	 esp, 8
  00779	89 45 f8	 mov	 DWORD PTR _def_type$[ebp], eax

; 148  : 		break;

  0077c	eb 0f		 jmp	 SHORT $LN16@SetEquipme
$LN10@SetEquipme:

; 149  : 
; 150  : 		case CLASS_MONK:
; 151  : 			def_type = ItemGetNumberMake(1, 0);

  0077e	6a 00		 push	 0
  00780	6a 01		 push	 1
  00782	e8 00 00 00 00	 call	 ?ItemGetNumberMake@@YAHHH@Z ; ItemGetNumberMake
  00787	83 c4 08	 add	 esp, 8
  0078a	89 45 f8	 mov	 DWORD PTR _def_type$[ebp], eax
$LN16@SetEquipme:

; 152  : 			break;
; 153  : 	}
; 154  : 
; 155  : 	if ( Class != 0 )

  0078d	83 7d 08 00	 cmp	 DWORD PTR _Class$[ebp], 0
  00791	0f 84 ca 01 00
	00		 je	 $LN9@SetEquipme

; 156  : 	{
; 157  : 		if ( Class == CLASS_DARKLORD )

  00797	83 7d 08 04	 cmp	 DWORD PTR _Class$[ebp], 4
  0079b	0f 85 91 00 00
	00		 jne	 $LN8@SetEquipme

; 158  : 		{
; 159  : 			this->DefClass[Class].Equipment[0].m_Level = 0;

  007a1	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  007a4	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  007aa	33 c9		 xor	 ecx, ecx
  007ac	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  007af	66 89 4c 02 38	 mov	 WORD PTR [edx+eax+56], cx

; 160  : 			this->DefClass[Class].Equipment[1].m_Level = 0;

  007b4	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  007b7	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  007bd	33 c9		 xor	 ecx, ecx
  007bf	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  007c2	66 89 8c 02 0c
	01 00 00	 mov	 WORD PTR [edx+eax+268], cx

; 161  : 			this->DefClass[Class].Equipment[0].Convert(right_type, 0,0,0,0,0,0,NULL, 0xFF, 0, CURRENT_DB_VERSION);

  007ca	6a 03		 push	 3
  007cc	6a 00		 push	 0
  007ce	68 ff 00 00 00	 push	 255			; 000000ffH
  007d3	6a 00		 push	 0
  007d5	6a 00		 push	 0
  007d7	6a 00		 push	 0
  007d9	6a 00		 push	 0
  007db	6a 00		 push	 0
  007dd	6a 00		 push	 0
  007df	6a 00		 push	 0
  007e1	8b 45 f4	 mov	 eax, DWORD PTR _right_type$[ebp]
  007e4	50		 push	 eax
  007e5	8b 4d 08	 mov	 ecx, DWORD PTR _Class$[ebp]
  007e8	69 c9 c8 0b 00
	00		 imul	 ecx, 3016		; 00000bc8H
  007ee	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  007f1	8d 4c 0a 30	 lea	 ecx, DWORD PTR [edx+ecx+48]
  007f5	e8 00 00 00 00	 call	 ?Convert@CItem@@QAEXHEEEEEEPAEEEE@Z ; CItem::Convert

; 162  : 			this->DefClass[Class].Equipment[1].Convert(def_type, 0,0,0,0,0,0,NULL, 0xFF, 0, CURRENT_DB_VERSION);

  007fa	6a 03		 push	 3
  007fc	6a 00		 push	 0
  007fe	68 ff 00 00 00	 push	 255			; 000000ffH
  00803	6a 00		 push	 0
  00805	6a 00		 push	 0
  00807	6a 00		 push	 0
  00809	6a 00		 push	 0
  0080b	6a 00		 push	 0
  0080d	6a 00		 push	 0
  0080f	6a 00		 push	 0
  00811	8b 45 f8	 mov	 eax, DWORD PTR _def_type$[ebp]
  00814	50		 push	 eax
  00815	8b 4d 08	 mov	 ecx, DWORD PTR _Class$[ebp]
  00818	69 c9 c8 0b 00
	00		 imul	 ecx, 3016		; 00000bc8H
  0081e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00821	8d 8c 0a 04 01
	00 00		 lea	 ecx, DWORD PTR [edx+ecx+260]
  00828	e8 00 00 00 00	 call	 ?Convert@CItem@@QAEXHEEEEEEPAEEEE@Z ; CItem::Convert
  0082d	e9 2f 01 00 00	 jmp	 $LN9@SetEquipme
$LN8@SetEquipme:

; 163  : 		}
; 164  : 		else if ( Class == CLASS_ELF || Class == CLASS_MAGUMSA )

  00832	83 7d 08 02	 cmp	 DWORD PTR _Class$[ebp], 2
  00836	74 0a		 je	 SHORT $LN5@SetEquipme
  00838	83 7d 08 03	 cmp	 DWORD PTR _Class$[ebp], 3
  0083c	0f 85 91 00 00
	00		 jne	 $LN6@SetEquipme
$LN5@SetEquipme:

; 165  : 		{
; 166  : 			this->DefClass[Class].Equipment[0].m_Level = 0;

  00842	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  00845	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  0084b	33 c9		 xor	 ecx, ecx
  0084d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00850	66 89 4c 02 38	 mov	 WORD PTR [edx+eax+56], cx

; 167  : 			this->DefClass[Class].Equipment[1].m_Level = 0;

  00855	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  00858	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  0085e	33 c9		 xor	 ecx, ecx
  00860	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00863	66 89 8c 02 0c
	01 00 00	 mov	 WORD PTR [edx+eax+268], cx

; 168  : 			this->DefClass[Class].Equipment[0].Convert(right_type, 0,0,0,0,0,0,NULL, 0xFF, 0, CURRENT_DB_VERSION);

  0086b	6a 03		 push	 3
  0086d	6a 00		 push	 0
  0086f	68 ff 00 00 00	 push	 255			; 000000ffH
  00874	6a 00		 push	 0
  00876	6a 00		 push	 0
  00878	6a 00		 push	 0
  0087a	6a 00		 push	 0
  0087c	6a 00		 push	 0
  0087e	6a 00		 push	 0
  00880	6a 00		 push	 0
  00882	8b 45 f4	 mov	 eax, DWORD PTR _right_type$[ebp]
  00885	50		 push	 eax
  00886	8b 4d 08	 mov	 ecx, DWORD PTR _Class$[ebp]
  00889	69 c9 c8 0b 00
	00		 imul	 ecx, 3016		; 00000bc8H
  0088f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00892	8d 4c 0a 30	 lea	 ecx, DWORD PTR [edx+ecx+48]
  00896	e8 00 00 00 00	 call	 ?Convert@CItem@@QAEXHEEEEEEPAEEEE@Z ; CItem::Convert

; 169  : 			this->DefClass[Class].Equipment[1].Convert(def_type, 0,0,0,0,0,0,NULL, 0xFF, 0, CURRENT_DB_VERSION);

  0089b	6a 03		 push	 3
  0089d	6a 00		 push	 0
  0089f	68 ff 00 00 00	 push	 255			; 000000ffH
  008a4	6a 00		 push	 0
  008a6	6a 00		 push	 0
  008a8	6a 00		 push	 0
  008aa	6a 00		 push	 0
  008ac	6a 00		 push	 0
  008ae	6a 00		 push	 0
  008b0	6a 00		 push	 0
  008b2	8b 45 f8	 mov	 eax, DWORD PTR _def_type$[ebp]
  008b5	50		 push	 eax
  008b6	8b 4d 08	 mov	 ecx, DWORD PTR _Class$[ebp]
  008b9	69 c9 c8 0b 00
	00		 imul	 ecx, 3016		; 00000bc8H
  008bf	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  008c2	8d 8c 0a 04 01
	00 00		 lea	 ecx, DWORD PTR [edx+ecx+260]
  008c9	e8 00 00 00 00	 call	 ?Convert@CItem@@QAEXHEEEEEEPAEEEE@Z ; CItem::Convert
  008ce	e9 8e 00 00 00	 jmp	 $LN9@SetEquipme
$LN6@SetEquipme:

; 170  : 		}
; 171  : 		else if( Class == CLASS_SUMMONER )

  008d3	83 7d 08 05	 cmp	 DWORD PTR _Class$[ebp], 5
  008d7	75 45		 jne	 SHORT $LN3@SetEquipme

; 172  : 		{
; 173  : 			DefClass[Class].Equipment[0].m_Level = 0;

  008d9	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  008dc	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  008e2	33 c9		 xor	 ecx, ecx
  008e4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  008e7	66 89 4c 02 38	 mov	 WORD PTR [edx+eax+56], cx

; 174  : 			DefClass[Class].Equipment[0].Convert(def_type, 0,0,0,0,0,0,NULL, 0xFF, 0, CURRENT_DB_VERSION);

  008ec	6a 03		 push	 3
  008ee	6a 00		 push	 0
  008f0	68 ff 00 00 00	 push	 255			; 000000ffH
  008f5	6a 00		 push	 0
  008f7	6a 00		 push	 0
  008f9	6a 00		 push	 0
  008fb	6a 00		 push	 0
  008fd	6a 00		 push	 0
  008ff	6a 00		 push	 0
  00901	6a 00		 push	 0
  00903	8b 45 f8	 mov	 eax, DWORD PTR _def_type$[ebp]
  00906	50		 push	 eax
  00907	8b 4d 08	 mov	 ecx, DWORD PTR _Class$[ebp]
  0090a	69 c9 c8 0b 00
	00		 imul	 ecx, 3016		; 00000bc8H
  00910	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00913	8d 4c 0a 30	 lea	 ecx, DWORD PTR [edx+ecx+48]
  00917	e8 00 00 00 00	 call	 ?Convert@CItem@@QAEXHEEEEEEPAEEEE@Z ; CItem::Convert

; 175  : 		}
; 176  : 		else

  0091c	eb 43		 jmp	 SHORT $LN9@SetEquipme
$LN3@SetEquipme:

; 177  : 		{
; 178  : 			this->DefClass[Class].Equipment[0].m_Level = 0;

  0091e	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  00921	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  00927	33 c9		 xor	 ecx, ecx
  00929	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0092c	66 89 4c 02 38	 mov	 WORD PTR [edx+eax+56], cx

; 179  : 			this->DefClass[Class].Equipment[0].Convert(def_type, 0,0,0,0,0,0,NULL, 0xFF, 0, CURRENT_DB_VERSION);

  00931	6a 03		 push	 3
  00933	6a 00		 push	 0
  00935	68 ff 00 00 00	 push	 255			; 000000ffH
  0093a	6a 00		 push	 0
  0093c	6a 00		 push	 0
  0093e	6a 00		 push	 0
  00940	6a 00		 push	 0
  00942	6a 00		 push	 0
  00944	6a 00		 push	 0
  00946	6a 00		 push	 0
  00948	8b 45 f8	 mov	 eax, DWORD PTR _def_type$[ebp]
  0094b	50		 push	 eax
  0094c	8b 4d 08	 mov	 ecx, DWORD PTR _Class$[ebp]
  0094f	69 c9 c8 0b 00
	00		 imul	 ecx, 3016		; 00000bc8H
  00955	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00958	8d 4c 0a 30	 lea	 ecx, DWORD PTR [edx+ecx+48]
  0095c	e8 00 00 00 00	 call	 ?Convert@CItem@@QAEXHEEEEEEPAEEEE@Z ; CItem::Convert
$LN9@SetEquipme:

; 180  : 		}
; 181  : 	}
; 182  : 
; 183  : 	if ( this->m_BabubBanJiCreate == TRUE )

  00961	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00964	83 b8 7c 52 00
	00 01		 cmp	 DWORD PTR [eax+21116], 1
  0096b	0f 85 b6 00 00
	00		 jne	 $LN21@SetEquipme

; 184  : 	{
; 185  : 		def_type = ItemGetNumberMake(13, 20);

  00971	6a 14		 push	 20			; 00000014H
  00973	6a 0d		 push	 13			; 0000000dH
  00975	e8 00 00 00 00	 call	 ?ItemGetNumberMake@@YAHHH@Z ; ItemGetNumberMake
  0097a	83 c4 08	 add	 esp, 8
  0097d	89 45 f8	 mov	 DWORD PTR _def_type$[ebp], eax

; 186  : 		this->DefClass[Class].Equipment[12].m_Level = 1;

  00980	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  00983	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  00989	b9 01 00 00 00	 mov	 ecx, 1
  0098e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00991	66 89 8c 02 28
	0a 00 00	 mov	 WORD PTR [edx+eax+2600], cx

; 187  : 		this->DefClass[Class].Equipment[12].Convert(def_type, 0,0,0,0,0,0,NULL, 0xFF, 0, CURRENT_DB_VERSION);

  00999	6a 03		 push	 3
  0099b	6a 00		 push	 0
  0099d	68 ff 00 00 00	 push	 255			; 000000ffH
  009a2	6a 00		 push	 0
  009a4	6a 00		 push	 0
  009a6	6a 00		 push	 0
  009a8	6a 00		 push	 0
  009aa	6a 00		 push	 0
  009ac	6a 00		 push	 0
  009ae	6a 00		 push	 0
  009b0	8b 45 f8	 mov	 eax, DWORD PTR _def_type$[ebp]
  009b3	50		 push	 eax
  009b4	8b 4d 08	 mov	 ecx, DWORD PTR _Class$[ebp]
  009b7	69 c9 c8 0b 00
	00		 imul	 ecx, 3016		; 00000bc8H
  009bd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  009c0	8d 8c 0a 20 0a
	00 00		 lea	 ecx, DWORD PTR [edx+ecx+2592]
  009c7	e8 00 00 00 00	 call	 ?Convert@CItem@@QAEXHEEEEEEPAEEEE@Z ; CItem::Convert

; 188  : 		
; 189  : 		def_type = ItemGetNumberMake(13, 20);

  009cc	6a 14		 push	 20			; 00000014H
  009ce	6a 0d		 push	 13			; 0000000dH
  009d0	e8 00 00 00 00	 call	 ?ItemGetNumberMake@@YAHHH@Z ; ItemGetNumberMake
  009d5	83 c4 08	 add	 esp, 8
  009d8	89 45 f8	 mov	 DWORD PTR _def_type$[ebp], eax

; 190  : 		this->DefClass[Class].Equipment[13].m_Level = 2;

  009db	8b 45 08	 mov	 eax, DWORD PTR _Class$[ebp]
  009de	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  009e4	b9 02 00 00 00	 mov	 ecx, 2
  009e9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  009ec	66 89 8c 02 fc
	0a 00 00	 mov	 WORD PTR [edx+eax+2812], cx

; 191  : 		this->DefClass[Class].Equipment[13].Convert(def_type, 0,0,0,0,0,0,NULL, 0xFF, 0, CURRENT_DB_VERSION);

  009f4	6a 03		 push	 3
  009f6	6a 00		 push	 0
  009f8	68 ff 00 00 00	 push	 255			; 000000ffH
  009fd	6a 00		 push	 0
  009ff	6a 00		 push	 0
  00a01	6a 00		 push	 0
  00a03	6a 00		 push	 0
  00a05	6a 00		 push	 0
  00a07	6a 00		 push	 0
  00a09	6a 00		 push	 0
  00a0b	8b 45 f8	 mov	 eax, DWORD PTR _def_type$[ebp]
  00a0e	50		 push	 eax
  00a0f	8b 4d 08	 mov	 ecx, DWORD PTR _Class$[ebp]
  00a12	69 c9 c8 0b 00
	00		 imul	 ecx, 3016		; 00000bc8H
  00a18	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00a1b	8d 8c 0a f4 0a
	00 00		 lea	 ecx, DWORD PTR [edx+ecx+2804]
  00a22	e8 00 00 00 00	 call	 ?Convert@CItem@@QAEXHEEEEEEPAEEEE@Z ; CItem::Convert
$LN21@SetEquipme:

; 192  : 	}
; 193  : 
; 194  : }

  00a27	5f		 pop	 edi
  00a28	5e		 pop	 esi
  00a29	5b		 pop	 ebx
  00a2a	8b e5		 mov	 esp, ebp
  00a2c	5d		 pop	 ebp
  00a2d	c2 04 00	 ret	 4
$LN23@SetEquipme:
  00a30	00 00 00 00	 DD	 $LN15@SetEquipme
  00a34	00 00 00 00	 DD	 $LN14@SetEquipme
  00a38	00 00 00 00	 DD	 $LN12@SetEquipme
  00a3c	00 00 00 00	 DD	 $LN13@SetEquipme
  00a40	00 00 00 00	 DD	 $LN11@SetEquipme
  00a44	00 00 00 00	 DD	 $LN10@SetEquipme
?SetEquipment@classdef@@QAEXH@Z ENDP			; classdef::SetEquipment
_TEXT	ENDS
PUBLIC	?GetDefPoint@classdef@@QAEHH@Z			; classdef::GetDefPoint
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_char_class$ = 8					; size = 4
?GetDefPoint@classdef@@QAEHH@Z PROC			; classdef::GetDefPoint
; _this$ = ecx

; 197  : {

  00a50	55		 push	 ebp
  00a51	8b ec		 mov	 ebp, esp
  00a53	83 ec 44	 sub	 esp, 68			; 00000044H
  00a56	53		 push	 ebx
  00a57	56		 push	 esi
  00a58	57		 push	 edi
  00a59	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 198  : 	if ( char_class < 0 || char_class > MAX_TYPE_PLAYER-1 )

  00a5c	83 7d 08 00	 cmp	 DWORD PTR _char_class$[ebp], 0
  00a60	7c 06		 jl	 SHORT $LN1@GetDefPoin
  00a62	83 7d 08 06	 cmp	 DWORD PTR _char_class$[ebp], 6
  00a66	7e 04		 jle	 SHORT $LN2@GetDefPoin
$LN1@GetDefPoin:

; 199  : 	{
; 200  : 		return 0;

  00a68	33 c0		 xor	 eax, eax
  00a6a	eb 60		 jmp	 SHORT $LN3@GetDefPoin
$LN2@GetDefPoin:

; 201  : 	}
; 202  : 
; 203  : 	return this->DefClass[char_class].Strength + this->DefClass[char_class].Dexterity + this->DefClass[char_class].Vitality + this->DefClass[char_class].Energy + this->DefClass[char_class].Leadership;

  00a6c	8b 45 08	 mov	 eax, DWORD PTR _char_class$[ebp]
  00a6f	69 c0 c8 0b 00
	00		 imul	 eax, 3016		; 00000bc8H
  00a75	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a78	0f b7 44 01 08	 movzx	 eax, WORD PTR [ecx+eax+8]
  00a7d	8b 55 08	 mov	 edx, DWORD PTR _char_class$[ebp]
  00a80	69 d2 c8 0b 00
	00		 imul	 edx, 3016		; 00000bc8H
  00a86	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a89	0f b7 54 11 0a	 movzx	 edx, WORD PTR [ecx+edx+10]
  00a8e	03 c2		 add	 eax, edx
  00a90	8b 4d 08	 mov	 ecx, DWORD PTR _char_class$[ebp]
  00a93	69 c9 c8 0b 00
	00		 imul	 ecx, 3016		; 00000bc8H
  00a99	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00a9c	0f b7 4c 0a 0c	 movzx	 ecx, WORD PTR [edx+ecx+12]
  00aa1	03 c1		 add	 eax, ecx
  00aa3	8b 55 08	 mov	 edx, DWORD PTR _char_class$[ebp]
  00aa6	69 d2 c8 0b 00
	00		 imul	 edx, 3016		; 00000bc8H
  00aac	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00aaf	0f b7 54 11 0e	 movzx	 edx, WORD PTR [ecx+edx+14]
  00ab4	03 c2		 add	 eax, edx
  00ab6	8b 4d 08	 mov	 ecx, DWORD PTR _char_class$[ebp]
  00ab9	69 c9 c8 0b 00
	00		 imul	 ecx, 3016		; 00000bc8H
  00abf	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00ac2	0f b7 8c 0a c8
	0b 00 00	 movzx	 ecx, WORD PTR [edx+ecx+3016]
  00aca	03 c1		 add	 eax, ecx
$LN3@GetDefPoin:

; 204  : }

  00acc	5f		 pop	 edi
  00acd	5e		 pop	 esi
  00ace	5b		 pop	 ebx
  00acf	8b e5		 mov	 esp, ebp
  00ad1	5d		 pop	 ebp
  00ad2	c2 04 00	 ret	 4
?GetDefPoint@classdef@@QAEHH@Z ENDP			; classdef::GetDefPoint
_TEXT	ENDS
PUBLIC	?SetMabubBanjiOption@classdef@@QAEXH@Z		; classdef::SetMabubBanjiOption
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Flag$ = 8						; size = 4
?SetMabubBanjiOption@classdef@@QAEXH@Z PROC		; classdef::SetMabubBanjiOption
; _this$ = ecx

; 207  : {

  00ae0	55		 push	 ebp
  00ae1	8b ec		 mov	 ebp, esp
  00ae3	83 ec 44	 sub	 esp, 68			; 00000044H
  00ae6	53		 push	 ebx
  00ae7	56		 push	 esi
  00ae8	57		 push	 edi
  00ae9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 208  : 	this->m_BabubBanJiCreate=Flag;

  00aec	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00aef	8b 4d 08	 mov	 ecx, DWORD PTR _Flag$[ebp]
  00af2	89 88 7c 52 00
	00		 mov	 DWORD PTR [eax+21116], ecx

; 209  : }

  00af8	5f		 pop	 edi
  00af9	5e		 pop	 esi
  00afa	5b		 pop	 ebx
  00afb	8b e5		 mov	 esp, ebp
  00afd	5d		 pop	 ebp
  00afe	c2 04 00	 ret	 4
?SetMabubBanjiOption@classdef@@QAEXH@Z ENDP		; classdef::SetMabubBanjiOption
_TEXT	ENDS
END
