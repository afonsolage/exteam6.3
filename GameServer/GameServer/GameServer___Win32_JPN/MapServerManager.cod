; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\MapServerManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?Clear@_MAPSVR_DATA@@QAEXH@Z			; _MAPSVR_DATA::Clear
PUBLIC	??_7_MAPSVR_DATA@@6B@				; _MAPSVR_DATA::`vftable'
PUBLIC	??0_MAPSVR_DATA@@QAE@XZ				; _MAPSVR_DATA::_MAPSVR_DATA
PUBLIC	??_R4_MAPSVR_DATA@@6B@				; _MAPSVR_DATA::`RTTI Complete Object Locator'
PUBLIC	??_R0?AU_MAPSVR_DATA@@@8			; _MAPSVR_DATA `RTTI Type Descriptor'
PUBLIC	??_R3_MAPSVR_DATA@@8				; _MAPSVR_DATA::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_MAPSVR_DATA@@8				; _MAPSVR_DATA::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_MAPSVR_DATA@@8			; _MAPSVR_DATA::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E_MAPSVR_DATA@@UAEPAXI@Z:PROC		; _MAPSVR_DATA::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@_MAPSVR_DATA@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\mapservermanager.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@_MAPSVR_DATA@@8 DD FLAT:??_R0?AU_MAPSVR_DATA@@@8 ; _MAPSVR_DATA::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_MAPSVR_DATA@@8
rdata$r	ENDS
;	COMDAT ??_R2_MAPSVR_DATA@@8
rdata$r	SEGMENT
??_R2_MAPSVR_DATA@@8 DD FLAT:??_R1A@?0A@EA@_MAPSVR_DATA@@8 ; _MAPSVR_DATA::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3_MAPSVR_DATA@@8
rdata$r	SEGMENT
??_R3_MAPSVR_DATA@@8 DD 00H				; _MAPSVR_DATA::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2_MAPSVR_DATA@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU_MAPSVR_DATA@@@8
_DATA	SEGMENT
??_R0?AU_MAPSVR_DATA@@@8 DD FLAT:??_7type_info@@6B@	; _MAPSVR_DATA `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU_MAPSVR_DATA@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_MAPSVR_DATA@@6B@
rdata$r	SEGMENT
??_R4_MAPSVR_DATA@@6B@ DD 00H				; _MAPSVR_DATA::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU_MAPSVR_DATA@@@8
	DD	FLAT:??_R3_MAPSVR_DATA@@8
rdata$r	ENDS
;	COMDAT ??_7_MAPSVR_DATA@@6B@
CONST	SEGMENT
??_7_MAPSVR_DATA@@6B@ DD FLAT:??_R4_MAPSVR_DATA@@6B@	; _MAPSVR_DATA::`vftable'
	DD	FLAT:??_E_MAPSVR_DATA@@UAEPAXI@Z
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_MAPSVR_DATA@@QAE@XZ PROC				; _MAPSVR_DATA::_MAPSVR_DATA
; _this$ = ecx

; 11   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7_MAPSVR_DATA@@6B@

; 12   : 	this->Clear(1);

  00015	6a 01		 push	 1
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?Clear@_MAPSVR_DATA@@QAEXH@Z ; _MAPSVR_DATA::Clear

; 13   : }

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??0_MAPSVR_DATA@@QAE@XZ ENDP				; _MAPSVR_DATA::_MAPSVR_DATA
_TEXT	ENDS
PUBLIC	??1_MAPSVR_DATA@@UAE@XZ				; _MAPSVR_DATA::~_MAPSVR_DATA
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G_MAPSVR_DATA@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_MAPSVR_DATA@@UAEPAXI@Z PROC			; _MAPSVR_DATA::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1_MAPSVR_DATA@@UAE@XZ	; _MAPSVR_DATA::~_MAPSVR_DATA
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_G_MAPSVR_DATA@@UAEPAXI@Z ENDP			; _MAPSVR_DATA::`scalar deleting destructor'
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_MAPSVR_DATA@@UAE@XZ PROC				; _MAPSVR_DATA::~_MAPSVR_DATA
; _this$ = ecx

; 16   : {

  00030	55		 push	 ebp
  00031	8b ec		 mov	 ebp, esp
  00033	83 ec 44	 sub	 esp, 68			; 00000044H
  00036	53		 push	 ebx
  00037	56		 push	 esi
  00038	57		 push	 edi
  00039	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7_MAPSVR_DATA@@6B@

; 17   : 	return;
; 18   : }

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??1_MAPSVR_DATA@@UAE@XZ ENDP				; _MAPSVR_DATA::~_MAPSVR_DATA
_TEXT	ENDS
EXTRN	_memset:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv74 = -76						; size = 4
_iMAP_COUNT$227715 = -8					; size = 4
_this$ = -4						; size = 4
_iInitSetVal$ = 8					; size = 4
?Clear@_MAPSVR_DATA@@QAEXH@Z PROC			; _MAPSVR_DATA::Clear
; _this$ = ecx

; 21   : {

  00050	55		 push	 ebp
  00051	8b ec		 mov	 ebp, esp
  00053	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00056	53		 push	 ebx
  00057	56		 push	 esi
  00058	57		 push	 edi
  00059	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 22   : 	this->m_bIN_USE = FALSE;

  0005c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 23   : 	this->m_btMAPSVR_GROUP = -1;

  00066	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00069	c6 40 08 ff	 mov	 BYTE PTR [eax+8], 255	; 000000ffH

; 24   : 	this->m_sSVR_CODE = -1;

  0006d	83 c8 ff	 or	 eax, -1
  00070	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	66 89 41 0a	 mov	 WORD PTR [ecx+10], ax

; 25   : 	memset(this->m_cIPADDR, 0, sizeof(this->m_cIPADDR));

  00077	6a 10		 push	 16			; 00000010H
  00079	6a 00		 push	 0
  0007b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	83 c0 0c	 add	 eax, 12			; 0000000cH
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 _memset
  00087	83 c4 0c	 add	 esp, 12			; 0000000cH

; 26   : 	this->m_wPORT = 0;

  0008a	33 c0		 xor	 eax, eax
  0008c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	66 89 41 1c	 mov	 WORD PTR [ecx+28], ax

; 27   : 
; 28   : 	for ( int iMAP_COUNT =0;iMAP_COUNT<MAX_NUMBER_MAP;iMAP_COUNT++)

  00093	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iMAP_COUNT$227715[ebp], 0
  0009a	eb 09		 jmp	 SHORT $LN8@Clear
$LN7@Clear:
  0009c	8b 45 f8	 mov	 eax, DWORD PTR _iMAP_COUNT$227715[ebp]
  0009f	83 c0 01	 add	 eax, 1
  000a2	89 45 f8	 mov	 DWORD PTR _iMAP_COUNT$227715[ebp], eax
$LN8@Clear:
  000a5	83 7d f8 5a	 cmp	 DWORD PTR _iMAP_COUNT$227715[ebp], 90 ; 0000005aH
  000a9	7d 48		 jge	 SHORT $LN9@Clear

; 29   : 	{
; 30   : 		switch ( iInitSetVal )

  000ab	8b 45 08	 mov	 eax, DWORD PTR _iInitSetVal$[ebp]
  000ae	89 45 b4	 mov	 DWORD PTR tv74[ebp], eax
  000b1	83 7d b4 ff	 cmp	 DWORD PTR tv74[ebp], -1
  000b5	74 08		 je	 SHORT $LN3@Clear
  000b7	83 7d b4 00	 cmp	 DWORD PTR tv74[ebp], 0
  000bb	74 14		 je	 SHORT $LN2@Clear
  000bd	eb 22		 jmp	 SHORT $LN1@Clear
$LN3@Clear:

; 31   : 		{
; 32   : 			case -1:
; 33   : 				this->m_sMAP_MOVE[iMAP_COUNT] = -2;

  000bf	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  000c4	8b 4d f8	 mov	 ecx, DWORD PTR _iMAP_COUNT$227715[ebp]
  000c7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ca	66 89 44 4a 1e	 mov	 WORD PTR [edx+ecx*2+30], ax

; 34   : 				break;

  000cf	eb 20		 jmp	 SHORT $LN4@Clear
$LN2@Clear:

; 35   : 			case 0:
; 36   : 				this->m_sMAP_MOVE[iMAP_COUNT] = -1;

  000d1	83 c8 ff	 or	 eax, -1
  000d4	8b 4d f8	 mov	 ecx, DWORD PTR _iMAP_COUNT$227715[ebp]
  000d7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000da	66 89 44 4a 1e	 mov	 WORD PTR [edx+ecx*2+30], ax

; 37   : 				break;

  000df	eb 10		 jmp	 SHORT $LN4@Clear
$LN1@Clear:

; 38   : 			default:
; 39   : 				this->m_sMAP_MOVE[iMAP_COUNT] = -3;

  000e1	b8 fd ff ff ff	 mov	 eax, -3			; fffffffdH
  000e6	8b 4d f8	 mov	 ecx, DWORD PTR _iMAP_COUNT$227715[ebp]
  000e9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ec	66 89 44 4a 1e	 mov	 WORD PTR [edx+ecx*2+30], ax
$LN4@Clear:

; 40   : 		}
; 41   : 	}

  000f1	eb a9		 jmp	 SHORT $LN7@Clear
$LN9@Clear:

; 42   : }

  000f3	5f		 pop	 edi
  000f4	5e		 pop	 esi
  000f5	5b		 pop	 ebx
  000f6	8b e5		 mov	 esp, ebp
  000f8	5d		 pop	 ebp
  000f9	c2 04 00	 ret	 4
?Clear@_MAPSVR_DATA@@QAEXH@Z ENDP			; _MAPSVR_DATA::Clear
_TEXT	ENDS
PUBLIC	??0?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ ; std::map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >::map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >
PUBLIC	??_7CMapServerManager@@6B@			; CMapServerManager::`vftable'
PUBLIC	??0CMapServerManager@@QAE@XZ			; CMapServerManager::CMapServerManager
PUBLIC	??_R4CMapServerManager@@6B@			; CMapServerManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMapServerManager@@@8			; CMapServerManager `RTTI Type Descriptor'
PUBLIC	??_R3CMapServerManager@@8			; CMapServerManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMapServerManager@@8			; CMapServerManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMapServerManager@@8		; CMapServerManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__imp__InitializeCriticalSection@4:PROC
EXTRN	_srand:PROC
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_ECMapServerManager@@UAEPAXI@Z:PROC		; CMapServerManager::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CMapServerManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMapServerManager@@8 DD FLAT:??_R0?AVCMapServerManager@@@8 ; CMapServerManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMapServerManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CMapServerManager@@8
rdata$r	SEGMENT
??_R2CMapServerManager@@8 DD FLAT:??_R1A@?0A@EA@CMapServerManager@@8 ; CMapServerManager::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMapServerManager@@8
rdata$r	SEGMENT
??_R3CMapServerManager@@8 DD 00H			; CMapServerManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMapServerManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMapServerManager@@@8
_DATA	SEGMENT
??_R0?AVCMapServerManager@@@8 DD FLAT:??_7type_info@@6B@ ; CMapServerManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMapServerManager@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CMapServerManager@@6B@
rdata$r	SEGMENT
??_R4CMapServerManager@@6B@ DD 00H			; CMapServerManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMapServerManager@@@8
	DD	FLAT:??_R3CMapServerManager@@8
rdata$r	ENDS
;	COMDAT ??_7CMapServerManager@@6B@
CONST	SEGMENT
??_7CMapServerManager@@6B@ DD FLAT:??_R4CMapServerManager@@6B@ ; CMapServerManager::`vftable'
	DD	FLAT:??_ECMapServerManager@@UAEPAXI@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??0CMapServerManager@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CMapServerManager@@QAE@XZ$0
__ehfuncinfo$??0CMapServerManager@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CMapServerManager@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CMapServerManager@@QAE@XZ PROC			; CMapServerManager::CMapServerManager
; _this$ = ecx

; 48   : {

  00100	55		 push	 ebp
  00101	8b ec		 mov	 ebp, esp
  00103	6a ff		 push	 -1
  00105	68 00 00 00 00	 push	 __ehhandler$??0CMapServerManager@@QAE@XZ
  0010a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00110	50		 push	 eax
  00111	83 ec 44	 sub	 esp, 68			; 00000044H
  00114	53		 push	 ebx
  00115	56		 push	 esi
  00116	57		 push	 edi
  00117	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0011c	33 c5		 xor	 eax, ebp
  0011e	50		 push	 eax
  0011f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00122	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00128	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0012b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0012e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CMapServerManager@@6B@
  00134	68 00 00 00 00	 push	 OFFSET ??1_MAPSVR_DATA@@UAE@XZ ; _MAPSVR_DATA::~_MAPSVR_DATA
  00139	68 00 00 00 00	 push	 OFFSET ??0_MAPSVR_DATA@@QAE@XZ ; _MAPSVR_DATA::_MAPSVR_DATA
  0013e	68 90 01 00 00	 push	 400			; 00000190H
  00143	68 d4 00 00 00	 push	 212			; 000000d4H
  00148	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0014b	83 c0 08	 add	 eax, 8
  0014e	50		 push	 eax
  0014f	e8 00 00 00 00	 call	 ??_L@YGXPAXIHP6EX0@Z1@Z
  00154	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0015b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0015e	81 c1 98 4b 01
	00		 add	 ecx, 84888		; 00014b98H
  00164	e8 00 00 00 00	 call	 ??0?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ ; std::map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >::map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >

; 49   : 	srand(time(NULL)); 

  00169	6a 00		 push	 0
  0016b	e8 00 00 00 00	 call	 _time
  00170	83 c4 04	 add	 esp, 4
  00173	50		 push	 eax
  00174	e8 00 00 00 00	 call	 _srand
  00179	83 c4 04	 add	 esp, 4

; 50   : 	this->m_bMapDataLoadOk=FALSE;

  0017c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0017f	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 51   : 	this->m_lpThisMapSvrData = NULL;

  00186	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00189	c7 80 c0 4b 01
	00 00 00 00 00	 mov	 DWORD PTR [eax+84928], 0

; 52   : 
; 53   : 	InitializeCriticalSection(&this->m_critSVRCODE_MAP);

  00193	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00196	05 a8 4b 01 00	 add	 eax, 84904		; 00014ba8H
  0019b	50		 push	 eax
  0019c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSection@4

; 54   : }

  001a2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001a9	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001ac	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001af	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001b6	59		 pop	 ecx
  001b7	5f		 pop	 edi
  001b8	5e		 pop	 esi
  001b9	5b		 pop	 ebx
  001ba	8b e5		 mov	 esp, ebp
  001bc	5d		 pop	 ebp
  001bd	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CMapServerManager@@QAE@XZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ??1_MAPSVR_DATA@@UAE@XZ ; _MAPSVR_DATA::~_MAPSVR_DATA
  00005	68 90 01 00 00	 push	 400			; 00000190H
  0000a	68 d4 00 00 00	 push	 212			; 000000d4H
  0000f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 c0 08	 add	 eax, 8
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  0001b	c3		 ret	 0
__ehhandler$??0CMapServerManager@@QAE@XZ:
  0001c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00020	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00023	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00026	33 c8		 xor	 ecx, eax
  00028	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002d	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CMapServerManager@@QAE@XZ
  00032	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CMapServerManager@@QAE@XZ ENDP			; CMapServerManager::CMapServerManager
EXTRN	__time64:PROC
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\time.inl
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC

; 132  : {

  001c0	55		 push	 ebp
  001c1	8b ec		 mov	 ebp, esp
  001c3	83 ec 40	 sub	 esp, 64			; 00000040H
  001c6	53		 push	 ebx
  001c7	56		 push	 esi
  001c8	57		 push	 edi

; 133  :     return _time64(_Time);

  001c9	8b 45 08	 mov	 eax, DWORD PTR __Time$[ebp]
  001cc	50		 push	 eax
  001cd	e8 00 00 00 00	 call	 __time64
  001d2	83 c4 04	 add	 esp, 4

; 134  : }

  001d5	5f		 pop	 edi
  001d6	5e		 pop	 esi
  001d7	5b		 pop	 ebx
  001d8	8b e5		 mov	 esp, ebp
  001da	5d		 pop	 ebp
  001db	c3		 ret	 0
_time	ENDP
_TEXT	ENDS
PUBLIC	??1CMapServerManager@@UAE@XZ			; CMapServerManager::~CMapServerManager
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCMapServerManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCMapServerManager@@UAEPAXI@Z PROC			; CMapServerManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CMapServerManager@@UAE@XZ ; CMapServerManager::~CMapServerManager
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar@2
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar@2:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCMapServerManager@@UAEPAXI@Z ENDP			; CMapServerManager::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ ; std::map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >::~map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >
EXTRN	__imp__DeleteCriticalSection@4:PROC
xdata$x	SEGMENT
__unwindtable$??1CMapServerManager@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CMapServerManager@@UAE@XZ$0
__ehfuncinfo$??1CMapServerManager@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CMapServerManager@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\mapservermanager.cpp
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CMapServerManager@@UAE@XZ PROC			; CMapServerManager::~CMapServerManager
; _this$ = ecx

; 58   : {

  001e0	55		 push	 ebp
  001e1	8b ec		 mov	 ebp, esp
  001e3	6a ff		 push	 -1
  001e5	68 00 00 00 00	 push	 __ehhandler$??1CMapServerManager@@UAE@XZ
  001ea	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  001f0	50		 push	 eax
  001f1	83 ec 44	 sub	 esp, 68			; 00000044H
  001f4	53		 push	 ebx
  001f5	56		 push	 esi
  001f6	57		 push	 edi
  001f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  001fc	33 c5		 xor	 eax, ebp
  001fe	50		 push	 eax
  001ff	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00202	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00208	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0020b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0020e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CMapServerManager@@6B@
  00214	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 59   : 	DeleteCriticalSection(&this->m_critSVRCODE_MAP);

  0021b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0021e	05 a8 4b 01 00	 add	 eax, 84904		; 00014ba8H
  00223	50		 push	 eax
  00224	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4

; 60   : }

  0022a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0022d	81 c1 98 4b 01
	00		 add	 ecx, 84888		; 00014b98H
  00233	e8 00 00 00 00	 call	 ??1?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ
  00238	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0023f	68 00 00 00 00	 push	 OFFSET ??1_MAPSVR_DATA@@UAE@XZ ; _MAPSVR_DATA::~_MAPSVR_DATA
  00244	68 90 01 00 00	 push	 400			; 00000190H
  00249	68 d4 00 00 00	 push	 212			; 000000d4H
  0024e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00251	83 c0 08	 add	 eax, 8
  00254	50		 push	 eax
  00255	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  0025a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0025d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00264	59		 pop	 ecx
  00265	5f		 pop	 edi
  00266	5e		 pop	 esi
  00267	5b		 pop	 ebx
  00268	8b e5		 mov	 esp, ebp
  0026a	5d		 pop	 ebp
  0026b	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1CMapServerManager@@UAE@XZ$0:
  00037	68 00 00 00 00	 push	 OFFSET ??1_MAPSVR_DATA@@UAE@XZ ; _MAPSVR_DATA::~_MAPSVR_DATA
  0003c	68 90 01 00 00	 push	 400			; 00000190H
  00041	68 d4 00 00 00	 push	 212			; 000000d4H
  00046	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00049	83 c0 08	 add	 eax, 8
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  00052	c3		 ret	 0
__ehhandler$??1CMapServerManager@@UAE@XZ:
  00053	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00057	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0005a	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0005d	33 c8		 xor	 ecx, eax
  0005f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00064	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CMapServerManager@@UAE@XZ
  00069	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CMapServerManager@@UAE@XZ ENDP			; CMapServerManager::~CMapServerManager
PUBLIC	??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::~_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ PROC ; std::map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >::~map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::~_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??1?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >::~map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::clear
PUBLIC	?Clear@CMapServerManager@@QAEXXZ		; CMapServerManager::Clear
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_iSUB_GROUP_COUNT$227749 = -12				; size = 4
_iGROUP_COUNT$227745 = -8				; size = 4
_this$ = -4						; size = 4
?Clear@CMapServerManager@@QAEXXZ PROC			; CMapServerManager::Clear
; _this$ = ecx

; 64   : {

  00270	55		 push	 ebp
  00271	8b ec		 mov	 ebp, esp
  00273	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00276	53		 push	 ebx
  00277	56		 push	 esi
  00278	57		 push	 edi
  00279	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 65   : 	this->m_bMapDataLoadOk = FALSE;

  0027c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0027f	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 66   : 
; 67   : 	for ( int iGROUP_COUNT=0;iGROUP_COUNT<MAX_MAP_GROUPS;iGROUP_COUNT++)

  00286	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iGROUP_COUNT$227745[ebp], 0
  0028d	eb 09		 jmp	 SHORT $LN6@Clear@2
$LN5@Clear@2:
  0028f	8b 45 f8	 mov	 eax, DWORD PTR _iGROUP_COUNT$227745[ebp]
  00292	83 c0 01	 add	 eax, 1
  00295	89 45 f8	 mov	 DWORD PTR _iGROUP_COUNT$227745[ebp], eax
$LN6@Clear@2:
  00298	83 7d f8 14	 cmp	 DWORD PTR _iGROUP_COUNT$227745[ebp], 20 ; 00000014H
  0029c	7d 4f		 jge	 SHORT $LN4@Clear@2

; 68   : 	{
; 69   : 		this->m_iMAPSVR_GROUP_COUNT[iGROUP_COUNT] = 0;

  0029e	8b 45 f8	 mov	 eax, DWORD PTR _iGROUP_COUNT$227745[ebp]
  002a1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002a4	c7 84 81 48 4b
	01 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax*4+84808], 0

; 70   : 
; 71   : 		for ( int iSUB_GROUP_COUNT=0;iSUB_GROUP_COUNT<MAX_MAP_SUBGROUPS;iSUB_GROUP_COUNT++)

  002af	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _iSUB_GROUP_COUNT$227749[ebp], 0
  002b6	eb 09		 jmp	 SHORT $LN3@Clear@2
$LN2@Clear@2:
  002b8	8b 45 f4	 mov	 eax, DWORD PTR _iSUB_GROUP_COUNT$227749[ebp]
  002bb	83 c0 01	 add	 eax, 1
  002be	89 45 f4	 mov	 DWORD PTR _iSUB_GROUP_COUNT$227749[ebp], eax
$LN3@Clear@2:
  002c1	83 7d f4 14	 cmp	 DWORD PTR _iSUB_GROUP_COUNT$227749[ebp], 20 ; 00000014H
  002c5	7d 24		 jge	 SHORT $LN1@Clear@2

; 72   : 		{
; 73   : 			this->m_MAPSVR_DATA[iGROUP_COUNT][iSUB_GROUP_COUNT].Clear(1);

  002c7	6a 01		 push	 1
  002c9	8b 45 f8	 mov	 eax, DWORD PTR _iGROUP_COUNT$227745[ebp]
  002cc	69 c0 90 10 00
	00		 imul	 eax, 4240		; 00001090H
  002d2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002d5	8d 4c 01 08	 lea	 ecx, DWORD PTR [ecx+eax+8]
  002d9	8b 55 f4	 mov	 edx, DWORD PTR _iSUB_GROUP_COUNT$227749[ebp]
  002dc	69 d2 d4 00 00
	00		 imul	 edx, 212		; 000000d4H
  002e2	03 ca		 add	 ecx, edx
  002e4	e8 00 00 00 00	 call	 ?Clear@_MAPSVR_DATA@@QAEXH@Z ; _MAPSVR_DATA::Clear

; 74   : 		}

  002e9	eb cd		 jmp	 SHORT $LN2@Clear@2
$LN1@Clear@2:

; 75   : 	}

  002eb	eb a2		 jmp	 SHORT $LN5@Clear@2
$LN4@Clear@2:

; 76   : 
; 77   : 	this->m_mapSVRCODE_MAP.clear();

  002ed	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002f0	81 c1 98 4b 01
	00		 add	 ecx, 84888		; 00014b98H
  002f6	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::clear

; 78   : }

  002fb	5f		 pop	 edi
  002fc	5e		 pop	 esi
  002fd	5b		 pop	 ebx
  002fe	8b e5		 mov	 esp, ebp
  00300	5d		 pop	 ebp
  00301	c3		 ret	 0
?Clear@CMapServerManager@@QAEXXZ ENDP			; CMapServerManager::Clear
_TEXT	ENDS
PUBLIC	??_C@_0IC@BIPGFAJD@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator!=
PUBLIC	??_C@_0GN@OFPCNONA@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_0HJ@HNGNAGOE@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_0HB@PMNAKCMJ@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_0GL@LAJNEJB@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_0FP@BNNDCEBC@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator->
PUBLIC	??_C@_0GG@ONBCFDCN@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator==
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::end
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::find
PUBLIC	??_C@_0GP@JAAIOOFD@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_0FM@HEAHEOLH@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??$insert@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::insert<std::pair<int,_MAPSVR_DATA *> >
PUBLIC	??$?0AAFAAPAU_MAPSVR_DATA@@@?$pair@HPAU_MAPSVR_DATA@@@std@@QAE@AAFAAPAU_MAPSVR_DATA@@@Z ; std::pair<int,_MAPSVR_DATA *>::pair<int,_MAPSVR_DATA *><short &,_MAPSVR_DATA * &>
PUBLIC	??_C@_0GD@GJEAEGDB@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_0GB@OFMELGHA@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_0FH@IKIILNPP@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_0GE@MEENNMEP@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_0FM@FPCKBNHE@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_03JBJLGPFL@end?$AA@			; `string'
PUBLIC	??_C@_0EO@CDDNPBHI@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_0FB@JDAKAEIH@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?LoadData@CMapServerManager@@QAEHPAD@Z		; CMapServerManager::LoadData
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	?gGameServerCode@@3FA:WORD			; gGameServerCode
EXTRN	_fclose:PROC
EXTRN	_memcpy:PROC
EXTRN	_fopen:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	?MsgBox@@YAXPADZZ:PROC				; MsgBox
EXTRN	_strcmp:PROC
EXTRN	__except_handler4:PROC
EXTRN	__ftol2_sse:PROC
EXTRN	__local_unwind4:PROC
_BSS	SEGMENT
_TokenString DB	064H DUP (?)
_TokenNumber DD	01H DUP (?)
_SMDFile DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0IC@BIPGFAJD@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0IC@BIPGFAJD@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : This '
	DB	'GameServerCode (%d) doesn''t Exist at file ''%s'' != sSVR_COD'
	DB	'E', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0GN@OFPCNONA@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0GN@OFPCNONA@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : Map N'
	DB	'umber is out of bound (SVR:%d, MAP:%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HJ@HNGNAGOE@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0HJ@HNGNAGOE@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : lpMap'
	DB	'SvrData->m_sSVR_CODE != sSVR_CODE (SVR:%d, OPT:%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HB@PMNAKCMJ@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0HB@PMNAKCMJ@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : lpMap'
	DB	'SvrData->m_sSVR_CODE != sSVR_CODE (SVR:%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GL@LAJNEJB@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0GL@LAJNEJB@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServer'
	DB	'Mng] CMapServerManager::LoadData() - file load error : lpMapS'
	DB	'vrData->m_bIN_USE == FALSE (SVR:%d)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FP@BNNDCEBC@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0FP@BNNDCEBC@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : lpMap'
	DB	'SvrData == NULL (SVR:%d)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0GG@ONBCFDCN@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0GG@ONBCFDCN@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : sSVR_'
	DB	'CODE wasn''t registered (SVR:%d)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GP@JAAIOOFD@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0GP@JAAIOOFD@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : sDEST'
	DB	'_SVR_CODE < -1 (SVR:%d, DEST_SVR:%d) - 2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FM@HEAHEOLH@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0FM@HEAHEOLH@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : sSVR_'
	DB	'CODE < 0 (SVR:%d) - 2', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GD@GJEAEGDB@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0GD@GJEAEGDB@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : No Sp'
	DB	'ace to Save SvrInfo (SVR:%d)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0GB@OFMELGHA@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0GB@OFMELGHA@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : Map S'
	DB	'erver Group Index (IDX:%d)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FH@IKIILNPP@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0FH@IKIILNPP@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : No Ip'
	DB	'Address (SVR:%d)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GE@MEENNMEP@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0GE@MEENNMEP@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : iInit'
	DB	'Setting Value:%d (SVR:%d) - 1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FM@FPCKBNHE@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0FM@FPCKBNHE@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : sSVR_'
	DB	'CODE < 0 (SVR:%d) - 1', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JBJLGPFL@end?$AA@
CONST	SEGMENT
??_C@_03JBJLGPFL@end?$AA@ DB 'end', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@CDDNPBHI@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0EO@CDDNPBHI@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : fopen'
	DB	'() : %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FB@JDAKAEIH@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0FB@JDAKAEIH@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : File '
	DB	'Name Error', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
xdata$x	SEGMENT
__sehtable$?LoadData@CMapServerManager@@QAEHPAD@Z DD 0ffffffe4H
	DD	00H
	DD	0fffffee0H
	DD	00H
	DD	0fffffffeH
	DD	00H
	DD	FLAT:$LN43@LoadData
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
_TEXT	SEGMENT
tv578 = -272						; size = 4
tv569 = -272						; size = 4
tv500 = -272						; size = 4
tv576 = -268						; size = 4
tv567 = -268						; size = 4
tv498 = -268						; size = 4
tv325 = -264						; size = 4
tv317 = -264						; size = 4
tv162 = -264						; size = 4
tv573 = -262						; size = 2
tv564 = -262						; size = 2
tv495 = -262						; size = 2
$T230557 = -260						; size = 8
$T230558 = -252						; size = 8
$T230559 = -244						; size = 4
$T230560 = -240						; size = 4
$T230563 = -236						; size = 4
$T230564 = -232						; size = 4
$T230570 = -228						; size = 4
$T230571 = -224						; size = 4
$T230572 = -220						; size = 4
$T230573 = -216						; size = 4
$T230574 = -212						; size = 4
$T230575 = -208						; size = 4
$T230576 = -204						; size = 4
$T230577 = -200						; size = 4
$T230578 = -196						; size = 4
$T230579 = -192						; size = 4
$T230580 = -188						; size = 4
$T230581 = -184						; size = 4
$T230582 = -180						; size = 4
$T230583 = -176						; size = 4
$T230584 = -172						; size = 4
_it$228480 = -104					; size = 4
_it$228428 = -100					; size = 4
_lpMapSvrData$228405 = -96				; size = 4
_sDEST_SVR_CODE$228404 = -92				; size = 2
_wMapNum$228403 = -88					; size = 2
_btNotMoveOption$228402 = -81				; size = 1
_sSVR_CODE$228401 = -80					; size = 2
_lpMapSvrData$227812 = -76				; size = 4
_wPortNum$227795 = -72					; size = 2
_szIpAddr$227794 = -68					; size = 16
_iInitSetVal$227793 = -52				; size = 4
_sMAPSVR_GROUP$227792 = -48				; size = 2
_sSVR_CODE$227791 = -44					; size = 2
_Token$227765 = -40					; size = 4
_type$227764 = -36					; size = 4
_this$ = -32						; size = 4
__$ArrayPad$ = -28					; size = 4
__$SEHRec$ = -24					; size = 24
_lpszFileName$ = 8					; size = 4
?LoadData@CMapServerManager@@QAEHPAD@Z PROC		; CMapServerManager::LoadData
; _this$ = ecx

; 81   : {

  00310	55		 push	 ebp
  00311	8b ec		 mov	 ebp, esp
  00313	6a fe		 push	 -2			; fffffffeH
  00315	68 00 00 00 00	 push	 OFFSET __sehtable$?LoadData@CMapServerManager@@QAEHPAD@Z
  0031a	68 00 00 00 00	 push	 OFFSET __except_handler4
  0031f	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00325	50		 push	 eax
  00326	81 c4 00 ff ff
	ff		 add	 esp, -256		; ffffff00H
  0032c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00331	31 45 f8	 xor	 DWORD PTR __$SEHRec$[ebp+16], eax
  00334	33 c5		 xor	 eax, ebp
  00336	89 45 e4	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00339	53		 push	 ebx
  0033a	56		 push	 esi
  0033b	57		 push	 edi
  0033c	50		 push	 eax
  0033d	8d 45 f0	 lea	 eax, DWORD PTR __$SEHRec$[ebp+8]
  00340	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00346	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 82   : 	if ( (lpszFileName == NULL) || ( strcmp(lpszFileName, "")== 0 ) ) 

  00349	83 7d 08 00	 cmp	 DWORD PTR _lpszFileName$[ebp], 0
  0034d	74 15		 je	 SHORT $LN34@LoadData
  0034f	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00354	8b 45 08	 mov	 eax, DWORD PTR _lpszFileName$[ebp]
  00357	50		 push	 eax
  00358	e8 00 00 00 00	 call	 _strcmp
  0035d	83 c4 08	 add	 esp, 8
  00360	85 c0		 test	 eax, eax
  00362	75 14		 jne	 SHORT $LN35@LoadData
$LN34@LoadData:

; 83   : 	{
; 84   : 		MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : File Name Error");

  00364	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@JDAKAEIH@?$FLMapServerMng?$FN?5CMapServerManager@
  00369	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  0036e	83 c4 04	 add	 esp, 4

; 85   : 		return FALSE;

  00371	33 c0		 xor	 eax, eax
  00373	e9 19 09 00 00	 jmp	 $LN36@LoadData
$LN35@LoadData:

; 86   : 	}
; 87   : 
; 88   : 	EnterCriticalSection(&this->m_critSVRCODE_MAP);

  00378	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0037b	05 a8 4b 01 00	 add	 eax, 84904		; 00014ba8H
  00380	50		 push	 eax
  00381	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 89   : 
; 90   : 	__try

  00387	9b		 fwait
  00388	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$SEHRec$[ebp+20], 0

; 91   : 	{
; 92   : 		this->Clear();

  0038f	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00392	e8 00 00 00 00	 call	 ?Clear@CMapServerManager@@QAEXXZ ; CMapServerManager::Clear

; 93   : 
; 94   : 		SMDFile = fopen(lpszFileName, "r");

  00397	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  0039c	8b 45 08	 mov	 eax, DWORD PTR _lpszFileName$[ebp]
  0039f	50		 push	 eax
  003a0	e8 00 00 00 00	 call	 _fopen
  003a5	83 c4 08	 add	 esp, 8
  003a8	a3 00 00 00 00	 mov	 DWORD PTR _SMDFile, eax

; 95   : 
; 96   : 		if ( SMDFile == NULL )

  003ad	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _SMDFile, 0
  003b4	75 3a		 jne	 SHORT $LN32@LoadData

; 97   : 		{
; 98   : 			MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : fopen() : %s",
; 99   : 				lpszFileName);

  003b6	8b 45 08	 mov	 eax, DWORD PTR _lpszFileName$[ebp]
  003b9	50		 push	 eax
  003ba	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CDDNPBHI@?$FLMapServerMng?$FN?5CMapServerManager@
  003bf	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  003c4	83 c4 08	 add	 esp, 8

; 100  : 
; 101  : 			return FALSE;

  003c7	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T230570[ebp], 0
  003d1	6a fe		 push	 -2			; fffffffeH
  003d3	9b		 fwait
  003d4	8d 45 f0	 lea	 eax, DWORD PTR __$SEHRec$[ebp+8]
  003d7	50		 push	 eax
  003d8	68 00 00 00 00	 push	 OFFSET ___security_cookie
  003dd	e8 00 00 00 00	 call	 __local_unwind4
  003e2	83 c4 0c	 add	 esp, 12			; 0000000cH
  003e5	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR $T230570[ebp]
  003eb	e9 a1 08 00 00	 jmp	 $LN36@LoadData
$LN32@LoadData:

; 102  : 		}
; 103  : 
; 104  : 		int type = -1;

  003f0	c7 45 dc ff ff
	ff ff		 mov	 DWORD PTR _type$227764[ebp], -1
$LN31@LoadData:

; 105  : 		SMDToken Token;
; 106  : 
; 107  : 		while ( true )

  003f7	b8 01 00 00 00	 mov	 eax, 1
  003fc	85 c0		 test	 eax, eax
  003fe	0f 84 98 07 00
	00		 je	 $LN30@LoadData

; 108  : 		{
; 109  : 			Token = GetToken();

  00404	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00409	89 45 d8	 mov	 DWORD PTR _Token$227765[ebp], eax

; 110  : 
; 111  : 			if ( Token == END )

  0040c	83 7d d8 02	 cmp	 DWORD PTR _Token$227765[ebp], 2
  00410	75 05		 jne	 SHORT $LN29@LoadData

; 112  : 				break;

  00412	e9 85 07 00 00	 jmp	 $LN30@LoadData
$LN29@LoadData:

; 113  : 
; 114  : 			type = (int)TokenNumber;

  00417	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0041d	e8 00 00 00 00	 call	 __ftol2_sse
  00422	89 45 dc	 mov	 DWORD PTR _type$227764[ebp], eax
$LN28@LoadData:

; 115  : 
; 116  : 			while ( true )

  00425	b8 01 00 00 00	 mov	 eax, 1
  0042a	85 c0		 test	 eax, eax
  0042c	0f 84 65 07 00
	00		 je	 $LN27@LoadData

; 117  : 			{
; 118  : 				if ( type == 0 )

  00432	83 7d dc 00	 cmp	 DWORD PTR _type$227764[ebp], 0
  00436	0f 85 5b 03 00
	00		 jne	 $LN26@LoadData

; 119  : 				{
; 120  : 					short sSVR_CODE = -1;

  0043c	83 c8 ff	 or	 eax, -1
  0043f	66 89 45 d4	 mov	 WORD PTR _sSVR_CODE$227791[ebp], ax

; 121  : 					short sMAPSVR_GROUP = -1;

  00443	83 c8 ff	 or	 eax, -1
  00446	66 89 45 d0	 mov	 WORD PTR _sMAPSVR_GROUP$227792[ebp], ax

; 122  : 					int iInitSetVal = 1;

  0044a	c7 45 cc 01 00
	00 00		 mov	 DWORD PTR _iInitSetVal$227793[ebp], 1

; 123  : 					char szIpAddr[16]={0};

  00451	c6 45 bc 00	 mov	 BYTE PTR _szIpAddr$227794[ebp], 0
  00455	33 c0		 xor	 eax, eax
  00457	89 45 bd	 mov	 DWORD PTR _szIpAddr$227794[ebp+1], eax
  0045a	89 45 c1	 mov	 DWORD PTR _szIpAddr$227794[ebp+5], eax
  0045d	89 45 c5	 mov	 DWORD PTR _szIpAddr$227794[ebp+9], eax
  00460	66 89 45 c9	 mov	 WORD PTR _szIpAddr$227794[ebp+13], ax
  00464	88 45 cb	 mov	 BYTE PTR _szIpAddr$227794[ebp+15], al

; 124  : 					WORD wPortNum = 0;

  00467	33 c0		 xor	 eax, eax
  00469	66 89 45 b8	 mov	 WORD PTR _wPortNum$227795[ebp], ax

; 125  : 					
; 126  : 					Token = GetToken();

  0046d	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00472	89 45 d8	 mov	 DWORD PTR _Token$227765[ebp], eax

; 127  : 
; 128  : 					if ( !strcmp("end", TokenString))

  00475	68 00 00 00 00	 push	 OFFSET _TokenString
  0047a	68 00 00 00 00	 push	 OFFSET ??_C@_03JBJLGPFL@end?$AA@
  0047f	e8 00 00 00 00	 call	 _strcmp
  00484	83 c4 08	 add	 esp, 8
  00487	85 c0		 test	 eax, eax
  00489	75 05		 jne	 SHORT $LN25@LoadData

; 129  : 						break;

  0048b	e9 07 07 00 00	 jmp	 $LN27@LoadData
$LN25@LoadData:

; 130  : 
; 131  : 					sSVR_CODE = (short)TokenNumber;

  00490	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00496	e8 00 00 00 00	 call	 __ftol2_sse
  0049b	66 89 45 d4	 mov	 WORD PTR _sSVR_CODE$227791[ebp], ax

; 132  : 
; 133  : 					Token = GetToken();

  0049f	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  004a4	89 45 d8	 mov	 DWORD PTR _Token$227765[ebp], eax

; 134  : 					sMAPSVR_GROUP = (short)TokenNumber;

  004a7	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  004ad	e8 00 00 00 00	 call	 __ftol2_sse
  004b2	66 89 45 d0	 mov	 WORD PTR _sMAPSVR_GROUP$227792[ebp], ax

; 135  : 
; 136  : 					Token = GetToken();

  004b6	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  004bb	89 45 d8	 mov	 DWORD PTR _Token$227765[ebp], eax

; 137  : 					iInitSetVal = (int)TokenNumber;

  004be	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  004c4	e8 00 00 00 00	 call	 __ftol2_sse
  004c9	89 45 cc	 mov	 DWORD PTR _iInitSetVal$227793[ebp], eax

; 138  : 
; 139  : 					Token = GetToken();

  004cc	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  004d1	89 45 d8	 mov	 DWORD PTR _Token$227765[ebp], eax

; 140  : 					memcpy(szIpAddr, &TokenString[1], 16);

  004d4	6a 10		 push	 16			; 00000010H
  004d6	68 01 00 00 00	 push	 OFFSET _TokenString+1
  004db	8d 45 bc	 lea	 eax, DWORD PTR _szIpAddr$227794[ebp]
  004de	50		 push	 eax
  004df	e8 00 00 00 00	 call	 _memcpy
  004e4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 141  : 					szIpAddr[15] =0;

  004e7	c6 45 cb 00	 mov	 BYTE PTR _szIpAddr$227794[ebp+15], 0

; 142  : 
; 143  : 					Token = GetToken();

  004eb	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  004f0	89 45 d8	 mov	 DWORD PTR _Token$227765[ebp], eax

; 144  : 					wPortNum = (WORD)TokenNumber;

  004f3	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  004f9	d9 bd fa fe ff
	ff		 fnstcw	 WORD PTR tv495[ebp]
  004ff	0f b7 85 fa fe
	ff ff		 movzx	 eax, WORD PTR tv495[ebp]
  00506	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  0050b	89 85 f4 fe ff
	ff		 mov	 DWORD PTR tv498[ebp], eax
  00511	d9 ad f4 fe ff
	ff		 fldcw	 WORD PTR tv498[ebp]
  00517	db 9d f0 fe ff
	ff		 fistp	 DWORD PTR tv500[ebp]
  0051d	d9 ad fa fe ff
	ff		 fldcw	 WORD PTR tv495[ebp]
  00523	66 8b 85 f0 fe
	ff ff		 mov	 ax, WORD PTR tv500[ebp]
  0052a	66 89 45 b8	 mov	 WORD PTR _wPortNum$227795[ebp], ax

; 145  : 
; 146  : 					if ( sSVR_CODE < 0 )

  0052e	0f bf 45 d4	 movsx	 eax, WORD PTR _sSVR_CODE$227791[ebp]
  00532	85 c0		 test	 eax, eax
  00534	7d 3b		 jge	 SHORT $LN24@LoadData

; 147  : 					{
; 148  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : sSVR_CODE < 0 (SVR:%d) - 1",
; 149  : 							sSVR_CODE);

  00536	0f bf 45 d4	 movsx	 eax, WORD PTR _sSVR_CODE$227791[ebp]
  0053a	50		 push	 eax
  0053b	68 00 00 00 00	 push	 OFFSET ??_C@_0FM@FPCKBNHE@?$FLMapServerMng?$FN?5CMapServerManager@
  00540	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00545	83 c4 08	 add	 esp, 8

; 150  : 
; 151  : 						return FALSE;

  00548	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T230571[ebp], 0
  00552	6a fe		 push	 -2			; fffffffeH
  00554	9b		 fwait
  00555	8d 45 f0	 lea	 eax, DWORD PTR __$SEHRec$[ebp+8]
  00558	50		 push	 eax
  00559	68 00 00 00 00	 push	 OFFSET ___security_cookie
  0055e	e8 00 00 00 00	 call	 __local_unwind4
  00563	83 c4 0c	 add	 esp, 12			; 0000000cH
  00566	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T230571[ebp]
  0056c	e9 20 07 00 00	 jmp	 $LN36@LoadData
$LN24@LoadData:

; 152  : 					}
; 153  : 
; 154  : 					if ( iInitSetVal != -1 && iInitSetVal != 0 && iInitSetVal != 1 )

  00571	83 7d cc ff	 cmp	 DWORD PTR _iInitSetVal$227793[ebp], -1
  00575	74 4b		 je	 SHORT $LN23@LoadData
  00577	83 7d cc 00	 cmp	 DWORD PTR _iInitSetVal$227793[ebp], 0
  0057b	74 45		 je	 SHORT $LN23@LoadData
  0057d	83 7d cc 01	 cmp	 DWORD PTR _iInitSetVal$227793[ebp], 1
  00581	74 3f		 je	 SHORT $LN23@LoadData

; 155  : 					{
; 156  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : iInitSetting Value:%d (SVR:%d) - 1",
; 157  : 							iInitSetVal, sSVR_CODE);

  00583	0f bf 45 d4	 movsx	 eax, WORD PTR _sSVR_CODE$227791[ebp]
  00587	50		 push	 eax
  00588	8b 4d cc	 mov	 ecx, DWORD PTR _iInitSetVal$227793[ebp]
  0058b	51		 push	 ecx
  0058c	68 00 00 00 00	 push	 OFFSET ??_C@_0GE@MEENNMEP@?$FLMapServerMng?$FN?5CMapServerManager@
  00591	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00596	83 c4 0c	 add	 esp, 12			; 0000000cH

; 158  : 
; 159  : 						return FALSE;

  00599	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T230572[ebp], 0
  005a3	6a fe		 push	 -2			; fffffffeH
  005a5	9b		 fwait
  005a6	8d 45 f0	 lea	 eax, DWORD PTR __$SEHRec$[ebp+8]
  005a9	50		 push	 eax
  005aa	68 00 00 00 00	 push	 OFFSET ___security_cookie
  005af	e8 00 00 00 00	 call	 __local_unwind4
  005b4	83 c4 0c	 add	 esp, 12			; 0000000cH
  005b7	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR $T230572[ebp]
  005bd	e9 cf 06 00 00	 jmp	 $LN36@LoadData
$LN23@LoadData:

; 160  : 					}
; 161  : 
; 162  : 					if ( !strcmp(szIpAddr, ""))

  005c2	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  005c7	8d 45 bc	 lea	 eax, DWORD PTR _szIpAddr$227794[ebp]
  005ca	50		 push	 eax
  005cb	e8 00 00 00 00	 call	 _strcmp
  005d0	83 c4 08	 add	 esp, 8
  005d3	85 c0		 test	 eax, eax
  005d5	75 3b		 jne	 SHORT $LN22@LoadData

; 163  : 					{
; 164  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : No IpAddress (SVR:%d)",
; 165  : 							sSVR_CODE);

  005d7	0f bf 45 d4	 movsx	 eax, WORD PTR _sSVR_CODE$227791[ebp]
  005db	50		 push	 eax
  005dc	68 00 00 00 00	 push	 OFFSET ??_C@_0FH@IKIILNPP@?$FLMapServerMng?$FN?5CMapServerManager@
  005e1	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  005e6	83 c4 08	 add	 esp, 8

; 166  : 
; 167  : 						return FALSE;

  005e9	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T230573[ebp], 0
  005f3	6a fe		 push	 -2			; fffffffeH
  005f5	9b		 fwait
  005f6	8d 45 f0	 lea	 eax, DWORD PTR __$SEHRec$[ebp+8]
  005f9	50		 push	 eax
  005fa	68 00 00 00 00	 push	 OFFSET ___security_cookie
  005ff	e8 00 00 00 00	 call	 __local_unwind4
  00604	83 c4 0c	 add	 esp, 12			; 0000000cH
  00607	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR $T230573[ebp]
  0060d	e9 7f 06 00 00	 jmp	 $LN36@LoadData
$LN22@LoadData:

; 168  : 					}
; 169  : 
; 170  : 					if ( CHECK_LIMIT(sMAPSVR_GROUP, MAX_MAP_GROUPS) == FALSE )

  00612	0f bf 45 d0	 movsx	 eax, WORD PTR _sMAPSVR_GROUP$227792[ebp]
  00616	85 c0		 test	 eax, eax
  00618	7d 0c		 jge	 SHORT $LN38@LoadData
  0061a	c7 85 f8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv162[ebp], 0
  00624	eb 12		 jmp	 SHORT $LN39@LoadData
$LN38@LoadData:
  00626	0f bf 4d d0	 movsx	 ecx, WORD PTR _sMAPSVR_GROUP$227792[ebp]
  0062a	33 d2		 xor	 edx, edx
  0062c	83 f9 13	 cmp	 ecx, 19			; 00000013H
  0062f	0f 9e c2	 setle	 dl
  00632	89 95 f8 fe ff
	ff		 mov	 DWORD PTR tv162[ebp], edx
$LN39@LoadData:
  00638	83 bd f8 fe ff
	ff 00		 cmp	 DWORD PTR tv162[ebp], 0
  0063f	75 3b		 jne	 SHORT $LN21@LoadData

; 171  : 					{
; 172  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : Map Server Group Index (IDX:%d)",
; 173  : 							sMAPSVR_GROUP);

  00641	0f bf 45 d0	 movsx	 eax, WORD PTR _sMAPSVR_GROUP$227792[ebp]
  00645	50		 push	 eax
  00646	68 00 00 00 00	 push	 OFFSET ??_C@_0GB@OFMELGHA@?$FLMapServerMng?$FN?5CMapServerManager@
  0064b	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00650	83 c4 08	 add	 esp, 8

; 174  : 
; 175  : 						return FALSE;

  00653	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T230574[ebp], 0
  0065d	6a fe		 push	 -2			; fffffffeH
  0065f	9b		 fwait
  00660	8d 45 f0	 lea	 eax, DWORD PTR __$SEHRec$[ebp+8]
  00663	50		 push	 eax
  00664	68 00 00 00 00	 push	 OFFSET ___security_cookie
  00669	e8 00 00 00 00	 call	 __local_unwind4
  0066e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00671	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR $T230574[ebp]
  00677	e9 15 06 00 00	 jmp	 $LN36@LoadData
$LN21@LoadData:

; 176  : 					}
; 177  : 
; 178  : 					if ( this->m_iMAPSVR_GROUP_COUNT[sMAPSVR_GROUP] >= MAX_MAP_SUBGROUPS )

  0067c	0f bf 45 d0	 movsx	 eax, WORD PTR _sMAPSVR_GROUP$227792[ebp]
  00680	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00683	83 bc 81 48 4b
	01 00 14	 cmp	 DWORD PTR [ecx+eax*4+84808], 20 ; 00000014H
  0068b	7c 3b		 jl	 SHORT $LN20@LoadData

; 179  : 					{
; 180  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : No Space to Save SvrInfo (SVR:%d)",
; 181  : 							sSVR_CODE);

  0068d	0f bf 45 d4	 movsx	 eax, WORD PTR _sSVR_CODE$227791[ebp]
  00691	50		 push	 eax
  00692	68 00 00 00 00	 push	 OFFSET ??_C@_0GD@GJEAEGDB@?$FLMapServerMng?$FN?5CMapServerManager@
  00697	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  0069c	83 c4 08	 add	 esp, 8

; 182  : 
; 183  : 						return FALSE;

  0069f	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T230575[ebp], 0
  006a9	6a fe		 push	 -2			; fffffffeH
  006ab	9b		 fwait
  006ac	8d 45 f0	 lea	 eax, DWORD PTR __$SEHRec$[ebp+8]
  006af	50		 push	 eax
  006b0	68 00 00 00 00	 push	 OFFSET ___security_cookie
  006b5	e8 00 00 00 00	 call	 __local_unwind4
  006ba	83 c4 0c	 add	 esp, 12			; 0000000cH
  006bd	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR $T230575[ebp]
  006c3	e9 c9 05 00 00	 jmp	 $LN36@LoadData
$LN20@LoadData:

; 184  : 					}
; 185  : 
; 186  : 					_MAPSVR_DATA * lpMapSvrData = NULL;

  006c8	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _lpMapSvrData$227812[ebp], 0

; 187  : 
; 188  : 					lpMapSvrData= &this->m_MAPSVR_DATA[sMAPSVR_GROUP][this->m_iMAPSVR_GROUP_COUNT[sMAPSVR_GROUP]];

  006cf	0f bf 45 d0	 movsx	 eax, WORD PTR _sMAPSVR_GROUP$227792[ebp]
  006d3	69 c0 90 10 00
	00		 imul	 eax, 4240		; 00001090H
  006d9	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  006dc	8d 54 01 08	 lea	 edx, DWORD PTR [ecx+eax+8]
  006e0	0f bf 45 d0	 movsx	 eax, WORD PTR _sMAPSVR_GROUP$227792[ebp]
  006e4	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  006e7	8b 84 81 48 4b
	01 00		 mov	 eax, DWORD PTR [ecx+eax*4+84808]
  006ee	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  006f4	03 d0		 add	 edx, eax
  006f6	89 55 b4	 mov	 DWORD PTR _lpMapSvrData$227812[ebp], edx

; 189  : 
; 190  : 					lpMapSvrData->Clear(iInitSetVal);

  006f9	8b 45 cc	 mov	 eax, DWORD PTR _iInitSetVal$227793[ebp]
  006fc	50		 push	 eax
  006fd	8b 4d b4	 mov	 ecx, DWORD PTR _lpMapSvrData$227812[ebp]
  00700	e8 00 00 00 00	 call	 ?Clear@_MAPSVR_DATA@@QAEXH@Z ; _MAPSVR_DATA::Clear

; 191  : 					lpMapSvrData->m_bIN_USE = TRUE;

  00705	8b 45 b4	 mov	 eax, DWORD PTR _lpMapSvrData$227812[ebp]
  00708	c7 40 04 01 00
	00 00		 mov	 DWORD PTR [eax+4], 1

; 192  : 					lpMapSvrData->m_sSVR_CODE = sSVR_CODE;

  0070f	8b 45 b4	 mov	 eax, DWORD PTR _lpMapSvrData$227812[ebp]
  00712	66 8b 4d d4	 mov	 cx, WORD PTR _sSVR_CODE$227791[ebp]
  00716	66 89 48 0a	 mov	 WORD PTR [eax+10], cx

; 193  : 					lpMapSvrData->m_btMAPSVR_GROUP = sMAPSVR_GROUP;

  0071a	8b 45 b4	 mov	 eax, DWORD PTR _lpMapSvrData$227812[ebp]
  0071d	8a 4d d0	 mov	 cl, BYTE PTR _sMAPSVR_GROUP$227792[ebp]
  00720	88 48 08	 mov	 BYTE PTR [eax+8], cl

; 194  : 					lpMapSvrData->m_wPORT = wPortNum;

  00723	8b 45 b4	 mov	 eax, DWORD PTR _lpMapSvrData$227812[ebp]
  00726	66 8b 4d b8	 mov	 cx, WORD PTR _wPortNum$227795[ebp]
  0072a	66 89 48 1c	 mov	 WORD PTR [eax+28], cx

; 195  : 					memcpy(lpMapSvrData->m_cIPADDR, szIpAddr, 16);

  0072e	6a 10		 push	 16			; 00000010H
  00730	8d 45 bc	 lea	 eax, DWORD PTR _szIpAddr$227794[ebp]
  00733	50		 push	 eax
  00734	8b 4d b4	 mov	 ecx, DWORD PTR _lpMapSvrData$227812[ebp]
  00737	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0073a	51		 push	 ecx
  0073b	e8 00 00 00 00	 call	 _memcpy
  00740	83 c4 0c	 add	 esp, 12			; 0000000cH

; 196  : 					lpMapSvrData->m_cIPADDR[15] = 0;

  00743	8b 45 b4	 mov	 eax, DWORD PTR _lpMapSvrData$227812[ebp]
  00746	c6 40 1b 00	 mov	 BYTE PTR [eax+27], 0

; 197  : 					
; 198  : 					this->m_mapSVRCODE_MAP.insert(std::pair<int,_MAPSVR_DATA *>(sSVR_CODE, lpMapSvrData));

  0074a	8d 45 b4	 lea	 eax, DWORD PTR _lpMapSvrData$227812[ebp]
  0074d	50		 push	 eax
  0074e	8d 4d d4	 lea	 ecx, DWORD PTR _sSVR_CODE$227791[ebp]
  00751	51		 push	 ecx
  00752	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR $T230557[ebp]
  00758	e8 00 00 00 00	 call	 ??$?0AAFAAPAU_MAPSVR_DATA@@@?$pair@HPAU_MAPSVR_DATA@@@std@@QAE@AAFAAPAU_MAPSVR_DATA@@@Z ; std::pair<int,_MAPSVR_DATA *>::pair<int,_MAPSVR_DATA *><short &,_MAPSVR_DATA * &>
  0075d	50		 push	 eax
  0075e	8d 95 04 ff ff
	ff		 lea	 edx, DWORD PTR $T230558[ebp]
  00764	52		 push	 edx
  00765	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00768	81 c1 98 4b 01
	00		 add	 ecx, 84888		; 00014b98H
  0076e	e8 00 00 00 00	 call	 ??$insert@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::insert<std::pair<int,_MAPSVR_DATA *> >

; 199  : 					this->m_iMAPSVR_GROUP_COUNT[sMAPSVR_GROUP]++;

  00773	0f bf 45 d0	 movsx	 eax, WORD PTR _sMAPSVR_GROUP$227792[ebp]
  00777	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0077a	8b 94 81 48 4b
	01 00		 mov	 edx, DWORD PTR [ecx+eax*4+84808]
  00781	83 c2 01	 add	 edx, 1
  00784	0f bf 45 d0	 movsx	 eax, WORD PTR _sMAPSVR_GROUP$227792[ebp]
  00788	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0078b	89 94 81 48 4b
	01 00		 mov	 DWORD PTR [ecx+eax*4+84808], edx
  00792	e9 fb 03 00 00	 jmp	 $LN7@LoadData
$LN26@LoadData:

; 200  : 				}
; 201  : 				else if ( type == 1 )

  00797	83 7d dc 01	 cmp	 DWORD PTR _type$227764[ebp], 1
  0079b	0f 85 f1 03 00
	00		 jne	 $LN7@LoadData

; 202  : 				{
; 203  : 					short sSVR_CODE = -1;

  007a1	83 c8 ff	 or	 eax, -1
  007a4	66 89 45 b0	 mov	 WORD PTR _sSVR_CODE$228401[ebp], ax

; 204  : 					BYTE btNotMoveOption = 0;

  007a8	c6 45 af 00	 mov	 BYTE PTR _btNotMoveOption$228402[ebp], 0

; 205  : 					WORD wMapNum = 0;

  007ac	33 c0		 xor	 eax, eax
  007ae	66 89 45 a8	 mov	 WORD PTR _wMapNum$228403[ebp], ax

; 206  : 					short sDEST_SVR_CODE = -1;

  007b2	83 c8 ff	 or	 eax, -1
  007b5	66 89 45 a4	 mov	 WORD PTR _sDEST_SVR_CODE$228404[ebp], ax

; 207  : 					_MAPSVR_DATA * lpMapSvrData = NULL;

  007b9	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _lpMapSvrData$228405[ebp], 0

; 208  : 
; 209  : 					Token = GetToken();

  007c0	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  007c5	89 45 d8	 mov	 DWORD PTR _Token$227765[ebp], eax

; 210  : 
; 211  : 					if ( !strcmp("end", TokenString))

  007c8	68 00 00 00 00	 push	 OFFSET _TokenString
  007cd	68 00 00 00 00	 push	 OFFSET ??_C@_03JBJLGPFL@end?$AA@
  007d2	e8 00 00 00 00	 call	 _strcmp
  007d7	83 c4 08	 add	 esp, 8
  007da	85 c0		 test	 eax, eax
  007dc	75 05		 jne	 SHORT $LN17@LoadData

; 212  : 						break;

  007de	e9 b4 03 00 00	 jmp	 $LN27@LoadData
$LN17@LoadData:

; 213  : 
; 214  : 					sSVR_CODE = (short)TokenNumber;

  007e3	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  007e9	e8 00 00 00 00	 call	 __ftol2_sse
  007ee	66 89 45 b0	 mov	 WORD PTR _sSVR_CODE$228401[ebp], ax

; 215  : 
; 216  : 					Token = GetToken();

  007f2	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  007f7	89 45 d8	 mov	 DWORD PTR _Token$227765[ebp], eax

; 217  : 					btNotMoveOption = (BYTE)TokenNumber;

  007fa	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00800	d9 bd fa fe ff
	ff		 fnstcw	 WORD PTR tv564[ebp]
  00806	0f b7 85 fa fe
	ff ff		 movzx	 eax, WORD PTR tv564[ebp]
  0080d	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  00812	89 85 f4 fe ff
	ff		 mov	 DWORD PTR tv567[ebp], eax
  00818	d9 ad f4 fe ff
	ff		 fldcw	 WORD PTR tv567[ebp]
  0081e	db 9d f0 fe ff
	ff		 fistp	 DWORD PTR tv569[ebp]
  00824	d9 ad fa fe ff
	ff		 fldcw	 WORD PTR tv564[ebp]
  0082a	8a 85 f0 fe ff
	ff		 mov	 al, BYTE PTR tv569[ebp]
  00830	88 45 af	 mov	 BYTE PTR _btNotMoveOption$228402[ebp], al

; 218  : 
; 219  : 					Token = GetToken();

  00833	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00838	89 45 d8	 mov	 DWORD PTR _Token$227765[ebp], eax

; 220  : 					wMapNum = (WORD)TokenNumber;

  0083b	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00841	d9 bd fa fe ff
	ff		 fnstcw	 WORD PTR tv573[ebp]
  00847	0f b7 85 fa fe
	ff ff		 movzx	 eax, WORD PTR tv573[ebp]
  0084e	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  00853	89 85 f4 fe ff
	ff		 mov	 DWORD PTR tv576[ebp], eax
  00859	d9 ad f4 fe ff
	ff		 fldcw	 WORD PTR tv576[ebp]
  0085f	db 9d f0 fe ff
	ff		 fistp	 DWORD PTR tv578[ebp]
  00865	d9 ad fa fe ff
	ff		 fldcw	 WORD PTR tv573[ebp]
  0086b	66 8b 85 f0 fe
	ff ff		 mov	 ax, WORD PTR tv578[ebp]
  00872	66 89 45 a8	 mov	 WORD PTR _wMapNum$228403[ebp], ax

; 221  : 
; 222  : 					Token = GetToken();

  00876	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  0087b	89 45 d8	 mov	 DWORD PTR _Token$227765[ebp], eax

; 223  : 					sDEST_SVR_CODE = (short)TokenNumber;

  0087e	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00884	e8 00 00 00 00	 call	 __ftol2_sse
  00889	66 89 45 a4	 mov	 WORD PTR _sDEST_SVR_CODE$228404[ebp], ax

; 224  : 
; 225  : 					if ( sSVR_CODE < 0 )

  0088d	0f bf 45 b0	 movsx	 eax, WORD PTR _sSVR_CODE$228401[ebp]
  00891	85 c0		 test	 eax, eax
  00893	7d 3b		 jge	 SHORT $LN16@LoadData

; 226  : 					{
; 227  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : sSVR_CODE < 0 (SVR:%d) - 2",
; 228  : 							sSVR_CODE);

  00895	0f bf 45 b0	 movsx	 eax, WORD PTR _sSVR_CODE$228401[ebp]
  00899	50		 push	 eax
  0089a	68 00 00 00 00	 push	 OFFSET ??_C@_0FM@HEAHEOLH@?$FLMapServerMng?$FN?5CMapServerManager@
  0089f	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  008a4	83 c4 08	 add	 esp, 8

; 229  : 
; 230  : 						return FALSE;

  008a7	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T230576[ebp], 0
  008b1	6a fe		 push	 -2			; fffffffeH
  008b3	9b		 fwait
  008b4	8d 45 f0	 lea	 eax, DWORD PTR __$SEHRec$[ebp+8]
  008b7	50		 push	 eax
  008b8	68 00 00 00 00	 push	 OFFSET ___security_cookie
  008bd	e8 00 00 00 00	 call	 __local_unwind4
  008c2	83 c4 0c	 add	 esp, 12			; 0000000cH
  008c5	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR $T230576[ebp]
  008cb	e9 c1 03 00 00	 jmp	 $LN36@LoadData
$LN16@LoadData:

; 231  : 					}
; 232  : 
; 233  : 					if ( sDEST_SVR_CODE < -2 )

  008d0	0f bf 45 a4	 movsx	 eax, WORD PTR _sDEST_SVR_CODE$228404[ebp]
  008d4	83 f8 fe	 cmp	 eax, -2			; fffffffeH
  008d7	7d 40		 jge	 SHORT $LN15@LoadData

; 234  : 					{
; 235  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : sDEST_SVR_CODE < -1 (SVR:%d, DEST_SVR:%d) - 2",
; 236  : 							sSVR_CODE, sDEST_SVR_CODE);

  008d9	0f bf 45 a4	 movsx	 eax, WORD PTR _sDEST_SVR_CODE$228404[ebp]
  008dd	50		 push	 eax
  008de	0f bf 4d b0	 movsx	 ecx, WORD PTR _sSVR_CODE$228401[ebp]
  008e2	51		 push	 ecx
  008e3	68 00 00 00 00	 push	 OFFSET ??_C@_0GP@JAAIOOFD@?$FLMapServerMng?$FN?5CMapServerManager@
  008e8	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  008ed	83 c4 0c	 add	 esp, 12			; 0000000cH

; 237  : 
; 238  : 						return FALSE;

  008f0	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T230577[ebp], 0
  008fa	6a fe		 push	 -2			; fffffffeH
  008fc	9b		 fwait
  008fd	8d 45 f0	 lea	 eax, DWORD PTR __$SEHRec$[ebp+8]
  00900	50		 push	 eax
  00901	68 00 00 00 00	 push	 OFFSET ___security_cookie
  00906	e8 00 00 00 00	 call	 __local_unwind4
  0090b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0090e	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR $T230577[ebp]
  00914	e9 78 03 00 00	 jmp	 $LN36@LoadData
$LN15@LoadData:

; 239  : 					}
; 240  : 
; 241  : 					std::map<int  ,_MAPSVR_DATA *>::iterator it = this->m_mapSVRCODE_MAP.find(sSVR_CODE);

  00919	0f bf 45 b0	 movsx	 eax, WORD PTR _sSVR_CODE$228401[ebp]
  0091d	89 85 0c ff ff
	ff		 mov	 DWORD PTR $T230559[ebp], eax
  00923	8d 8d 0c ff ff
	ff		 lea	 ecx, DWORD PTR $T230559[ebp]
  00929	51		 push	 ecx
  0092a	8d 55 9c	 lea	 edx, DWORD PTR _it$228428[ebp]
  0092d	52		 push	 edx
  0092e	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00931	81 c1 98 4b 01
	00		 add	 ecx, 84888		; 00014b98H
  00937	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::find

; 242  : 
; 243  : 					if ( it == this->m_mapSVRCODE_MAP.end() )

  0093c	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR $T230560[ebp]
  00942	50		 push	 eax
  00943	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00946	81 c1 98 4b 01
	00		 add	 ecx, 84888		; 00014b98H
  0094c	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::end
  00951	50		 push	 eax
  00952	8d 4d 9c	 lea	 ecx, DWORD PTR _it$228428[ebp]
  00955	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator==
  0095a	0f b6 c8	 movzx	 ecx, al
  0095d	85 c9		 test	 ecx, ecx
  0095f	74 3b		 je	 SHORT $LN14@LoadData

; 244  : 					{
; 245  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : sSVR_CODE wasn't registered (SVR:%d)",
; 246  : 							sSVR_CODE);

  00961	0f bf 45 b0	 movsx	 eax, WORD PTR _sSVR_CODE$228401[ebp]
  00965	50		 push	 eax
  00966	68 00 00 00 00	 push	 OFFSET ??_C@_0GG@ONBCFDCN@?$FLMapServerMng?$FN?5CMapServerManager@
  0096b	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00970	83 c4 08	 add	 esp, 8

; 247  : 
; 248  : 						return FALSE;

  00973	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T230578[ebp], 0
  0097d	6a fe		 push	 -2			; fffffffeH
  0097f	9b		 fwait
  00980	8d 45 f0	 lea	 eax, DWORD PTR __$SEHRec$[ebp+8]
  00983	50		 push	 eax
  00984	68 00 00 00 00	 push	 OFFSET ___security_cookie
  00989	e8 00 00 00 00	 call	 __local_unwind4
  0098e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00991	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR $T230578[ebp]
  00997	e9 f5 02 00 00	 jmp	 $LN36@LoadData
$LN14@LoadData:

; 249  : 					}
; 250  : 
; 251  : 					lpMapSvrData = it->second;

  0099c	8d 4d 9c	 lea	 ecx, DWORD PTR _it$228428[ebp]
  0099f	e8 00 00 00 00	 call	 ??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator->
  009a4	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  009a7	89 45 a0	 mov	 DWORD PTR _lpMapSvrData$228405[ebp], eax

; 252  : 
; 253  : 					if ( lpMapSvrData == NULL )

  009aa	83 7d a0 00	 cmp	 DWORD PTR _lpMapSvrData$228405[ebp], 0
  009ae	75 3b		 jne	 SHORT $LN13@LoadData

; 254  : 					{
; 255  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : lpMapSvrData == NULL (SVR:%d)",
; 256  : 							sSVR_CODE);

  009b0	0f bf 45 b0	 movsx	 eax, WORD PTR _sSVR_CODE$228401[ebp]
  009b4	50		 push	 eax
  009b5	68 00 00 00 00	 push	 OFFSET ??_C@_0FP@BNNDCEBC@?$FLMapServerMng?$FN?5CMapServerManager@
  009ba	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  009bf	83 c4 08	 add	 esp, 8

; 257  : 
; 258  : 						return FALSE;

  009c2	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T230579[ebp], 0
  009cc	6a fe		 push	 -2			; fffffffeH
  009ce	9b		 fwait
  009cf	8d 45 f0	 lea	 eax, DWORD PTR __$SEHRec$[ebp+8]
  009d2	50		 push	 eax
  009d3	68 00 00 00 00	 push	 OFFSET ___security_cookie
  009d8	e8 00 00 00 00	 call	 __local_unwind4
  009dd	83 c4 0c	 add	 esp, 12			; 0000000cH
  009e0	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR $T230579[ebp]
  009e6	e9 a6 02 00 00	 jmp	 $LN36@LoadData
$LN13@LoadData:

; 259  : 					}
; 260  : 
; 261  : 					if ( lpMapSvrData->m_bIN_USE == FALSE )

  009eb	8b 45 a0	 mov	 eax, DWORD PTR _lpMapSvrData$228405[ebp]
  009ee	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  009f2	75 3b		 jne	 SHORT $LN12@LoadData

; 262  : 					{
; 263  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : lpMapSvrData->m_bIN_USE == FALSE (SVR:%d)",
; 264  : 							sSVR_CODE);

  009f4	0f bf 45 b0	 movsx	 eax, WORD PTR _sSVR_CODE$228401[ebp]
  009f8	50		 push	 eax
  009f9	68 00 00 00 00	 push	 OFFSET ??_C@_0GL@LAJNEJB@?$FLMapServerMng?$FN?5CMapServerManager@
  009fe	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00a03	83 c4 08	 add	 esp, 8

; 265  : 
; 266  : 						return FALSE;

  00a06	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T230580[ebp], 0
  00a10	6a fe		 push	 -2			; fffffffeH
  00a12	9b		 fwait
  00a13	8d 45 f0	 lea	 eax, DWORD PTR __$SEHRec$[ebp+8]
  00a16	50		 push	 eax
  00a17	68 00 00 00 00	 push	 OFFSET ___security_cookie
  00a1c	e8 00 00 00 00	 call	 __local_unwind4
  00a21	83 c4 0c	 add	 esp, 12			; 0000000cH
  00a24	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR $T230580[ebp]
  00a2a	e9 62 02 00 00	 jmp	 $LN36@LoadData
$LN12@LoadData:

; 267  : 					}
; 268  : 
; 269  : 					if ( lpMapSvrData->m_sSVR_CODE != sSVR_CODE )

  00a2f	8b 45 a0	 mov	 eax, DWORD PTR _lpMapSvrData$228405[ebp]
  00a32	0f bf 48 0a	 movsx	 ecx, WORD PTR [eax+10]
  00a36	0f bf 55 b0	 movsx	 edx, WORD PTR _sSVR_CODE$228401[ebp]
  00a3a	3b ca		 cmp	 ecx, edx
  00a3c	74 3b		 je	 SHORT $LN11@LoadData

; 270  : 					{
; 271  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : lpMapSvrData->m_sSVR_CODE != sSVR_CODE (SVR:%d)",
; 272  : 							sSVR_CODE);

  00a3e	0f bf 45 b0	 movsx	 eax, WORD PTR _sSVR_CODE$228401[ebp]
  00a42	50		 push	 eax
  00a43	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@PMNAKCMJ@?$FLMapServerMng?$FN?5CMapServerManager@
  00a48	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00a4d	83 c4 08	 add	 esp, 8

; 273  : 
; 274  : 						return FALSE;

  00a50	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T230581[ebp], 0
  00a5a	6a fe		 push	 -2			; fffffffeH
  00a5c	9b		 fwait
  00a5d	8d 45 f0	 lea	 eax, DWORD PTR __$SEHRec$[ebp+8]
  00a60	50		 push	 eax
  00a61	68 00 00 00 00	 push	 OFFSET ___security_cookie
  00a66	e8 00 00 00 00	 call	 __local_unwind4
  00a6b	83 c4 0c	 add	 esp, 12			; 0000000cH
  00a6e	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR $T230581[ebp]
  00a74	e9 18 02 00 00	 jmp	 $LN36@LoadData
$LN11@LoadData:

; 275  : 					}
; 276  : 
; 277  : 					if ( btNotMoveOption != 0 && btNotMoveOption != 1 )

  00a79	0f b6 45 af	 movzx	 eax, BYTE PTR _btNotMoveOption$228402[ebp]
  00a7d	85 c0		 test	 eax, eax
  00a7f	74 49		 je	 SHORT $LN10@LoadData
  00a81	0f b6 45 af	 movzx	 eax, BYTE PTR _btNotMoveOption$228402[ebp]
  00a85	83 f8 01	 cmp	 eax, 1
  00a88	74 40		 je	 SHORT $LN10@LoadData

; 278  : 					{
; 279  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : lpMapSvrData->m_sSVR_CODE != sSVR_CODE (SVR:%d, OPT:%d)",
; 280  : 							sSVR_CODE, btNotMoveOption);

  00a8a	0f b6 45 af	 movzx	 eax, BYTE PTR _btNotMoveOption$228402[ebp]
  00a8e	50		 push	 eax
  00a8f	0f bf 4d b0	 movsx	 ecx, WORD PTR _sSVR_CODE$228401[ebp]
  00a93	51		 push	 ecx
  00a94	68 00 00 00 00	 push	 OFFSET ??_C@_0HJ@HNGNAGOE@?$FLMapServerMng?$FN?5CMapServerManager@
  00a99	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00a9e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 281  : 
; 282  : 						return FALSE;

  00aa1	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T230582[ebp], 0
  00aab	6a fe		 push	 -2			; fffffffeH
  00aad	9b		 fwait
  00aae	8d 45 f0	 lea	 eax, DWORD PTR __$SEHRec$[ebp+8]
  00ab1	50		 push	 eax
  00ab2	68 00 00 00 00	 push	 OFFSET ___security_cookie
  00ab7	e8 00 00 00 00	 call	 __local_unwind4
  00abc	83 c4 0c	 add	 esp, 12			; 0000000cH
  00abf	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR $T230582[ebp]
  00ac5	e9 c7 01 00 00	 jmp	 $LN36@LoadData
$LN10@LoadData:

; 283  : 					}
; 284  : 
; 285  : 					if ( CHECK_LIMIT(wMapNum, MAX_NUMBER_MAP) == FALSE )

  00aca	0f b7 45 a8	 movzx	 eax, WORD PTR _wMapNum$228403[ebp]
  00ace	85 c0		 test	 eax, eax
  00ad0	7d 0c		 jge	 SHORT $LN40@LoadData
  00ad2	c7 85 f8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv317[ebp], 0
  00adc	eb 12		 jmp	 SHORT $LN41@LoadData
$LN40@LoadData:
  00ade	0f b7 4d a8	 movzx	 ecx, WORD PTR _wMapNum$228403[ebp]
  00ae2	33 d2		 xor	 edx, edx
  00ae4	83 f9 59	 cmp	 ecx, 89			; 00000059H
  00ae7	0f 9e c2	 setle	 dl
  00aea	89 95 f8 fe ff
	ff		 mov	 DWORD PTR tv317[ebp], edx
$LN41@LoadData:
  00af0	83 bd f8 fe ff
	ff 00		 cmp	 DWORD PTR tv317[ebp], 0
  00af7	75 40		 jne	 SHORT $LN9@LoadData

; 286  : 					{
; 287  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : Map Number is out of bound (SVR:%d, MAP:%d)",
; 288  : 							sSVR_CODE, wMapNum);

  00af9	0f b7 45 a8	 movzx	 eax, WORD PTR _wMapNum$228403[ebp]
  00afd	50		 push	 eax
  00afe	0f bf 4d b0	 movsx	 ecx, WORD PTR _sSVR_CODE$228401[ebp]
  00b02	51		 push	 ecx
  00b03	68 00 00 00 00	 push	 OFFSET ??_C@_0GN@OFPCNONA@?$FLMapServerMng?$FN?5CMapServerManager@
  00b08	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00b0d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 289  : 
; 290  : 						return FALSE;

  00b10	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T230583[ebp], 0
  00b1a	6a fe		 push	 -2			; fffffffeH
  00b1c	9b		 fwait
  00b1d	8d 45 f0	 lea	 eax, DWORD PTR __$SEHRec$[ebp+8]
  00b20	50		 push	 eax
  00b21	68 00 00 00 00	 push	 OFFSET ___security_cookie
  00b26	e8 00 00 00 00	 call	 __local_unwind4
  00b2b	83 c4 0c	 add	 esp, 12			; 0000000cH
  00b2e	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR $T230583[ebp]
  00b34	e9 58 01 00 00	 jmp	 $LN36@LoadData
$LN9@LoadData:

; 291  : 					}
; 292  : 
; 293  : 					switch ( btNotMoveOption )

  00b39	8a 45 af	 mov	 al, BYTE PTR _btNotMoveOption$228402[ebp]
  00b3c	88 85 f8 fe ff
	ff		 mov	 BYTE PTR tv325[ebp], al
  00b42	80 bd f8 fe ff
	ff 00		 cmp	 BYTE PTR tv325[ebp], 0
  00b49	74 0b		 je	 SHORT $LN6@LoadData
  00b4b	80 bd f8 fe ff
	ff 01		 cmp	 BYTE PTR tv325[ebp], 1
  00b52	74 14		 je	 SHORT $LN5@LoadData
  00b54	eb 25		 jmp	 SHORT $LN4@LoadData
$LN6@LoadData:

; 294  : 					{
; 295  : 						case 0:
; 296  : 							lpMapSvrData->m_sMAP_MOVE[wMapNum] = sDEST_SVR_CODE;

  00b56	0f b7 45 a8	 movzx	 eax, WORD PTR _wMapNum$228403[ebp]
  00b5a	8b 4d a0	 mov	 ecx, DWORD PTR _lpMapSvrData$228405[ebp]
  00b5d	66 8b 55 a4	 mov	 dx, WORD PTR _sDEST_SVR_CODE$228404[ebp]
  00b61	66 89 54 41 1e	 mov	 WORD PTR [ecx+eax*2+30], dx

; 297  : 							break;

  00b66	eb 2a		 jmp	 SHORT $LN7@LoadData
$LN5@LoadData:

; 298  : 						case 1:
; 299  : 							lpMapSvrData->m_sMAP_MOVE[wMapNum] = -3;

  00b68	0f b7 45 a8	 movzx	 eax, WORD PTR _wMapNum$228403[ebp]
  00b6c	b9 fd ff ff ff	 mov	 ecx, -3			; fffffffdH
  00b71	8b 55 a0	 mov	 edx, DWORD PTR _lpMapSvrData$228405[ebp]
  00b74	66 89 4c 42 1e	 mov	 WORD PTR [edx+eax*2+30], cx

; 300  : 							break;

  00b79	eb 17		 jmp	 SHORT $LN7@LoadData
$LN4@LoadData:

; 301  : 						default:
; 302  : 							MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : lpMapSvrData->m_sSVR_CODE != sSVR_CODE (SVR:%d, OPT:%d)",
; 303  : 								sSVR_CODE, btNotMoveOption);

  00b7b	0f b6 45 af	 movzx	 eax, BYTE PTR _btNotMoveOption$228402[ebp]
  00b7f	50		 push	 eax
  00b80	0f bf 4d b0	 movsx	 ecx, WORD PTR _sSVR_CODE$228401[ebp]
  00b84	51		 push	 ecx
  00b85	68 00 00 00 00	 push	 OFFSET ??_C@_0HJ@HNGNAGOE@?$FLMapServerMng?$FN?5CMapServerManager@
  00b8a	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00b8f	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@LoadData:

; 304  : 							break;
; 305  : 					}
; 306  : 				}	// if type
; 307  : 			}	// while ( true )

  00b92	e9 8e f8 ff ff	 jmp	 $LN28@LoadData
$LN27@LoadData:

; 308  : 		}	// while ( true )

  00b97	e9 5b f8 ff ff	 jmp	 $LN31@LoadData
$LN30@LoadData:

; 309  : 
; 310  : 		fclose(SMDFile);

  00b9c	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00ba1	50		 push	 eax
  00ba2	e8 00 00 00 00	 call	 _fclose
  00ba7	83 c4 04	 add	 esp, 4

; 311  : 
; 312  : 		std::map<int  ,_MAPSVR_DATA *>::iterator it = this->m_mapSVRCODE_MAP.find(gGameServerCode);

  00baa	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  00bb1	89 85 14 ff ff
	ff		 mov	 DWORD PTR $T230563[ebp], eax
  00bb7	8d 8d 14 ff ff
	ff		 lea	 ecx, DWORD PTR $T230563[ebp]
  00bbd	51		 push	 ecx
  00bbe	8d 55 98	 lea	 edx, DWORD PTR _it$228480[ebp]
  00bc1	52		 push	 edx
  00bc2	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00bc5	81 c1 98 4b 01
	00		 add	 ecx, 84888		; 00014b98H
  00bcb	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::find

; 313  : 
; 314  : 		if ( it != this->m_mapSVRCODE_MAP.end() )

  00bd0	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR $T230564[ebp]
  00bd6	50		 push	 eax
  00bd7	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00bda	81 c1 98 4b 01
	00		 add	 ecx, 84888		; 00014b98H
  00be0	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::end
  00be5	50		 push	 eax
  00be6	8d 4d 98	 lea	 ecx, DWORD PTR _it$228480[ebp]
  00be9	e8 00 00 00 00	 call	 ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator!=
  00bee	0f b6 c8	 movzx	 ecx, al
  00bf1	85 c9		 test	 ecx, ecx
  00bf3	74 16		 je	 SHORT $LN3@LoadData

; 315  : 		{
; 316  : 			this->m_lpThisMapSvrData = it->second;

  00bf5	8d 4d 98	 lea	 ecx, DWORD PTR _it$228480[ebp]
  00bf8	e8 00 00 00 00	 call	 ??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator->
  00bfd	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00c00	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00c03	89 91 c0 4b 01
	00		 mov	 DWORD PTR [ecx+84928], edx

; 317  : 		}
; 318  : 		else

  00c09	eb 0d		 jmp	 SHORT $LN2@LoadData
$LN3@LoadData:

; 319  : 		{
; 320  : 			this->m_lpThisMapSvrData = NULL;

  00c0b	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00c0e	c7 80 c0 4b 01
	00 00 00 00 00	 mov	 DWORD PTR [eax+84928], 0
$LN2@LoadData:

; 321  : 		}
; 322  : 
; 323  : 		if ( this->m_lpThisMapSvrData == NULL )

  00c18	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00c1b	83 b8 c0 4b 01
	00 00		 cmp	 DWORD PTR [eax+84928], 0
  00c22	75 3f		 jne	 SHORT $LN1@LoadData

; 324  : 		{
; 325  : 			MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : This GameServerCode (%d) doesn't Exist at file '%s' != sSVR_CODE",
; 326  : 				gGameServerCode, lpszFileName);

  00c24	8b 45 08	 mov	 eax, DWORD PTR _lpszFileName$[ebp]
  00c27	50		 push	 eax
  00c28	0f bf 0d 00 00
	00 00		 movsx	 ecx, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  00c2f	51		 push	 ecx
  00c30	68 00 00 00 00	 push	 OFFSET ??_C@_0IC@BIPGFAJD@?$FLMapServerMng?$FN?5CMapServerManager@
  00c35	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00c3a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 327  : 
; 328  : 			return FALSE;

  00c3d	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T230584[ebp], 0
  00c47	6a fe		 push	 -2			; fffffffeH
  00c49	9b		 fwait
  00c4a	8d 45 f0	 lea	 eax, DWORD PTR __$SEHRec$[ebp+8]
  00c4d	50		 push	 eax
  00c4e	68 00 00 00 00	 push	 OFFSET ___security_cookie
  00c53	e8 00 00 00 00	 call	 __local_unwind4
  00c58	83 c4 0c	 add	 esp, 12			; 0000000cH
  00c5b	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR $T230584[ebp]
  00c61	eb 2e		 jmp	 SHORT $LN36@LoadData
$LN1@LoadData:

; 329  : 		}
; 330  : 
; 331  : 		this->m_bMapDataLoadOk = TRUE;

  00c63	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00c66	c7 40 04 01 00
	00 00		 mov	 DWORD PTR [eax+4], 1

; 332  : 	}
; 333  : 	__finally

  00c6d	9b		 fwait
  00c6e	c7 45 fc fe ff
	ff ff		 mov	 DWORD PTR __$SEHRec$[ebp+20], -2 ; fffffffeH
  00c75	e8 02 00 00 00	 call	 $LN45@LoadData
  00c7a	eb 10		 jmp	 SHORT $LN46@LoadData
$LN43@LoadData:
$LN48@LoadData:
$LN45@LoadData:

; 334  : 	{
; 335  : 		LeaveCriticalSection(&this->m_critSVRCODE_MAP);

  00c7c	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00c7f	05 a8 4b 01 00	 add	 eax, 84904		; 00014ba8H
  00c84	50		 push	 eax
  00c85	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
$LN44@LoadData:
$LN47@LoadData:
  00c8b	c3		 ret	 0
$LN46@LoadData:

; 336  : 	}
; 337  : 
; 338  : 	return TRUE;

  00c8c	b8 01 00 00 00	 mov	 eax, 1
$LN36@LoadData:

; 339  : }

  00c91	8b 4d f0	 mov	 ecx, DWORD PTR __$SEHRec$[ebp+8]
  00c94	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00c9b	59		 pop	 ecx
  00c9c	5f		 pop	 edi
  00c9d	5e		 pop	 esi
  00c9e	5b		 pop	 ebx
  00c9f	8b 4d e4	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00ca2	33 cd		 xor	 ecx, ebp
  00ca4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00ca9	8b e5		 mov	 esp, ebp
  00cab	5d		 pop	 ebp
  00cac	c2 04 00	 ret	 4
?LoadData@CMapServerManager@@QAEHPAD@Z ENDP		; CMapServerManager::LoadData
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_isalnum:PROC
EXTRN	_isalpha:PROC
EXTRN	_atof:PROC
EXTRN	_isdigit:PROC
EXTRN	_getc:PROC
EXTRN	_ungetc:PROC
EXTRN	_isspace:PROC
EXTRN	_fgetc:PROC
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_CurrentToken DD 01H DUP (?)
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\include\readscript.h
_BSS	ENDS
_TEXT	SEGMENT
tv90 = -180						; size = 4
_TempString$ = -112					; size = 100
_p$ = -12						; size = 4
_ch$ = -5						; size = 1
__$ArrayPad$ = -4					; size = 4
?GetToken@@YA?AW4SMDToken@@XZ PROC			; GetToken

; 24   : {

  00cb0	55		 push	 ebp
  00cb1	8b ec		 mov	 ebp, esp
  00cb3	81 ec b4 00 00
	00		 sub	 esp, 180		; 000000b4H
  00cb9	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00cbe	33 c5		 xor	 eax, ebp
  00cc0	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00cc3	53		 push	 ebx
  00cc4	56		 push	 esi
  00cc5	57		 push	 edi

; 25   : 	char ch;
; 26   : 	char* p;
; 27   : 	char TempString[100];
; 28   : 
; 29   : 	TokenString[0]=0;

  00cc6	c6 05 00 00 00
	00 00		 mov	 BYTE PTR _TokenString, 0
$LN31@GetToken:

; 30   : 
; 31   : 	do
; 32   : 	{
; 33   : 		if ((ch=fgetc(SMDFile)) == -1)

  00ccd	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00cd2	50		 push	 eax
  00cd3	e8 00 00 00 00	 call	 _fgetc
  00cd8	83 c4 04	 add	 esp, 4
  00cdb	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  00cde	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00ce2	83 f9 ff	 cmp	 ecx, -1
  00ce5	75 0c		 jne	 SHORT $LN28@GetToken

; 34   : 		{
; 35   : 			return END;	// End of FILE (EOF)

  00ce7	b8 02 00 00 00	 mov	 eax, 2
  00cec	e9 f7 02 00 00	 jmp	 $LN32@GetToken

; 36   : 		}
; 37   : 		else

  00cf1	eb 5b		 jmp	 SHORT $LN22@GetToken
$LN28@GetToken:

; 38   : 		{	
; 39   : 			if (ch=='/')		// this is /

  00cf3	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00cf7	83 f8 2f	 cmp	 eax, 47			; 0000002fH
  00cfa	75 52		 jne	 SHORT $LN22@GetToken

; 40   : 			{
; 41   : 				if((ch=fgetc(SMDFile)) == '/')

  00cfc	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00d01	50		 push	 eax
  00d02	e8 00 00 00 00	 call	 _fgetc
  00d07	83 c4 04	 add	 esp, 4
  00d0a	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  00d0d	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00d11	83 f9 2f	 cmp	 ecx, 47			; 0000002fH
  00d14	75 38		 jne	 SHORT $LN22@GetToken
$LN24@GetToken:

; 42   : 				{
; 43   : 					while ((ch != '\n') && (ch != -1))	// End of Line (EOL)

  00d16	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00d1a	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00d1d	74 1c		 je	 SHORT $LN23@GetToken
  00d1f	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00d23	83 f8 ff	 cmp	 eax, -1
  00d26	74 13		 je	 SHORT $LN23@GetToken

; 44   : 					{
; 45   : 						ch=fgetc(SMDFile);

  00d28	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00d2d	50		 push	 eax
  00d2e	e8 00 00 00 00	 call	 _fgetc
  00d33	83 c4 04	 add	 esp, 4
  00d36	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al

; 46   : 					}

  00d39	eb db		 jmp	 SHORT $LN24@GetToken
$LN23@GetToken:

; 47   : 	
; 48   : 					if (ch == -1)

  00d3b	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00d3f	83 f8 ff	 cmp	 eax, -1
  00d42	75 0a		 jne	 SHORT $LN22@GetToken

; 49   : 					{
; 50   : 						return END;	// End of FILE

  00d44	b8 02 00 00 00	 mov	 eax, 2
  00d49	e9 9a 02 00 00	 jmp	 $LN32@GetToken
$LN22@GetToken:

; 51   : 					}
; 52   : 				}
; 53   : 			}
; 54   : 		}
; 55   : 	}
; 56   : 	while (isspace(ch) != 0);

  00d4e	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00d52	50		 push	 eax
  00d53	e8 00 00 00 00	 call	 _isspace
  00d58	83 c4 04	 add	 esp, 4
  00d5b	85 c0		 test	 eax, eax
  00d5d	0f 85 6a ff ff
	ff		 jne	 $LN31@GetToken

; 57   : 
; 58   : 	
; 59   : 	switch(ch)

  00d63	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00d67	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv90[ebp], eax
  00d6d	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR tv90[ebp]
  00d73	83 e9 22	 sub	 ecx, 34			; 00000022H
  00d76	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv90[ebp], ecx
  00d7c	83 bd 4c ff ff
	ff 5b		 cmp	 DWORD PTR tv90[ebp], 91	; 0000005bH
  00d83	0f 87 a3 01 00
	00		 ja	 $LN6@GetToken
  00d89	8b 95 4c ff ff
	ff		 mov	 edx, DWORD PTR tv90[ebp]
  00d8f	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN34@GetToken[edx]
  00d96	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN35@GetToken[eax*4]
$LN19@GetToken:

; 60   : 	{
; 61   : 
; 62   : 	case 0x23:	// #
; 63   : 		return CurrentToken=COMMAND;

  00d9d	c7 05 00 00 00
	00 23 00 00 00	 mov	 DWORD PTR _CurrentToken, 35 ; 00000023H
  00da7	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00dac	e9 37 02 00 00	 jmp	 $LN32@GetToken

; 64   : 		break;

  00db1	e9 30 02 00 00	 jmp	 $LN20@GetToken
$LN18@GetToken:

; 65   : 	
; 66   : 	case 0x3B:	// ;
; 67   : 		return CurrentToken=SEMICOLON;

  00db6	c7 05 00 00 00
	00 3b 00 00 00	 mov	 DWORD PTR _CurrentToken, 59 ; 0000003bH
  00dc0	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00dc5	e9 1e 02 00 00	 jmp	 $LN32@GetToken

; 68   : 		break;

  00dca	e9 17 02 00 00	 jmp	 $LN20@GetToken
$LN17@GetToken:

; 69   : 	
; 70   : 	case 0x2C:	// ,
; 71   : 
; 72   : 		return CurrentToken=COMMA;

  00dcf	c7 05 00 00 00
	00 2c 00 00 00	 mov	 DWORD PTR _CurrentToken, 44 ; 0000002cH
  00dd9	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00dde	e9 05 02 00 00	 jmp	 $LN32@GetToken

; 73   : 		break;

  00de3	e9 fe 01 00 00	 jmp	 $LN20@GetToken
$LN16@GetToken:

; 74   : 	
; 75   : 	case 0x7B:	// {
; 76   : 		return CurrentToken = LP;

  00de8	c7 05 00 00 00
	00 7b 00 00 00	 mov	 DWORD PTR _CurrentToken, 123 ; 0000007bH
  00df2	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00df7	e9 ec 01 00 00	 jmp	 $LN32@GetToken

; 77   : 		break;

  00dfc	e9 e5 01 00 00	 jmp	 $LN20@GetToken
$LN15@GetToken:

; 78   : 
; 79   : 	case 0x7D:	// }
; 80   : 		return CurrentToken = RP;

  00e01	c7 05 00 00 00
	00 7d 00 00 00	 mov	 DWORD PTR _CurrentToken, 125 ; 0000007dH
  00e0b	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00e10	e9 d3 01 00 00	 jmp	 $LN32@GetToken

; 81   : 		break;

  00e15	e9 cc 01 00 00	 jmp	 $LN20@GetToken
$LN14@GetToken:

; 82   : 	// Nice Index Table :)	by Deathway
; 83   : 	// Numbers Case
; 84   : 	case 0x2D:	//-
; 85   : 	case 0x2E:	//.
; 86   : 	case '0':	//0
; 87   : 	case '1':	//1
; 88   : 	case '2':	//2
; 89   : 	case '3':	//3
; 90   : 	case '4':	//4		
; 91   : 	case '5':	//5
; 92   : 	case '6':	//6
; 93   : 	case '7':	//7
; 94   : 	case '8':	//8
; 95   : 	case '9':	//9
; 96   : 		ungetc(ch, SMDFile);

  00e1a	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00e1f	50		 push	 eax
  00e20	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00e24	51		 push	 ecx
  00e25	e8 00 00 00 00	 call	 _ungetc
  00e2a	83 c4 08	 add	 esp, 8

; 97   : 		p = TempString;

  00e2d	8d 45 90	 lea	 eax, DWORD PTR _TempString$[ebp]
  00e30	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax
$LN13@GetToken:

; 98   : 		
; 99   : 		while (((ch=getc(SMDFile)) != -1) && ((ch == 0x2E) || (isdigit(ch) != 0) || (ch == 0x2D)))  // 2e '.'  2D '-'

  00e33	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00e38	50		 push	 eax
  00e39	e8 00 00 00 00	 call	 _getc
  00e3e	83 c4 04	 add	 esp, 4
  00e41	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  00e44	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00e48	83 f9 ff	 cmp	 ecx, -1
  00e4b	74 36		 je	 SHORT $LN12@GetToken
  00e4d	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00e51	83 f8 2e	 cmp	 eax, 46			; 0000002eH
  00e54	74 1a		 je	 SHORT $LN11@GetToken
  00e56	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00e5a	50		 push	 eax
  00e5b	e8 00 00 00 00	 call	 _isdigit
  00e60	83 c4 04	 add	 esp, 4
  00e63	85 c0		 test	 eax, eax
  00e65	75 09		 jne	 SHORT $LN11@GetToken
  00e67	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00e6b	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  00e6e	75 13		 jne	 SHORT $LN12@GetToken
$LN11@GetToken:

; 100  : 		{
; 101  : 			*p = ch;	// Construct a String

  00e70	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00e73	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  00e76	88 08		 mov	 BYTE PTR [eax], cl

; 102  : 			p++;

  00e78	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00e7b	83 c0 01	 add	 eax, 1
  00e7e	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 103  : 		}		

  00e81	eb b0		 jmp	 SHORT $LN13@GetToken
$LN12@GetToken:

; 104  : 		*p = 0;

  00e83	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00e86	c6 00 00	 mov	 BYTE PTR [eax], 0

; 105  : 		TokenNumber = atof( TempString);	// Select the first Byte as Main ID

  00e89	8d 45 90	 lea	 eax, DWORD PTR _TempString$[ebp]
  00e8c	50		 push	 eax
  00e8d	e8 00 00 00 00	 call	 _atof
  00e92	83 c4 04	 add	 esp, 4
  00e95	d9 1d 00 00 00
	00		 fstp	 DWORD PTR _TokenNumber

; 106  : 		return CurrentToken  = NUMBER ;

  00e9b	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _CurrentToken, 1
  00ea5	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00eaa	e9 39 01 00 00	 jmp	 $LN32@GetToken

; 107  : 		break;

  00eaf	e9 32 01 00 00	 jmp	 $LN20@GetToken
$LN10@GetToken:

; 108  : 
; 109  : 	case '\"':	// "	String Case
; 110  : 		p=&TokenString[0];

  00eb4	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], OFFSET _TokenString
$LN9@GetToken:

; 111  : 		
; 112  : 		while (((ch=getc(SMDFile)) != -1 ) && (ch != 0x22))	// nice

  00ebb	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00ec0	50		 push	 eax
  00ec1	e8 00 00 00 00	 call	 _getc
  00ec6	83 c4 04	 add	 esp, 4
  00ec9	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  00ecc	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00ed0	83 f9 ff	 cmp	 ecx, -1
  00ed3	74 1c		 je	 SHORT $LN8@GetToken
  00ed5	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00ed9	83 f8 22	 cmp	 eax, 34			; 00000022H
  00edc	74 13		 je	 SHORT $LN8@GetToken

; 113  : 		{
; 114  : 			*p = ch;

  00ede	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00ee1	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  00ee4	88 08		 mov	 BYTE PTR [eax], cl

; 115  : 			p++;

  00ee6	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00ee9	83 c0 01	 add	 eax, 1
  00eec	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 116  : 		}

  00eef	eb ca		 jmp	 SHORT $LN9@GetToken
$LN8@GetToken:

; 117  : 		if (ch != 0x22 )

  00ef1	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00ef5	83 f8 22	 cmp	 eax, 34			; 00000022H
  00ef8	74 13		 je	 SHORT $LN7@GetToken

; 118  : 		{
; 119  : 			ungetc(ch, SMDFile);

  00efa	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00eff	50		 push	 eax
  00f00	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00f04	51		 push	 ecx
  00f05	e8 00 00 00 00	 call	 _ungetc
  00f0a	83 c4 08	 add	 esp, 8
$LN7@GetToken:

; 120  : 		}
; 121  : 		*p = 0;

  00f0d	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00f10	c6 00 00	 mov	 BYTE PTR [eax], 0

; 122  : 		return CurrentToken = NAME;

  00f13	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _CurrentToken, 0
  00f1d	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00f22	e9 c1 00 00 00	 jmp	 $LN32@GetToken

; 123  : 		break;

  00f27	e9 ba 00 00 00	 jmp	 $LN20@GetToken
$LN6@GetToken:

; 124  : 
; 125  : 	default:	// Others
; 126  : 		if (isalpha(ch))

  00f2c	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00f30	50		 push	 eax
  00f31	e8 00 00 00 00	 call	 _isalpha
  00f36	83 c4 04	 add	 esp, 4
  00f39	85 c0		 test	 eax, eax
  00f3b	0f 84 94 00 00
	00		 je	 $LN5@GetToken

; 127  : 		{
; 128  : 			p=&TokenString[0];

  00f41	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], OFFSET _TokenString

; 129  : 			*p=ch;

  00f48	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00f4b	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  00f4e	88 08		 mov	 BYTE PTR [eax], cl

; 130  : 			p++;

  00f50	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00f53	83 c0 01	 add	 eax, 1
  00f56	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax
$LN4@GetToken:

; 131  : 
; 132  : 			while ( ((ch=getc(SMDFile)) != -1) && ( (ch == 0x2E) || (ch == 0x5F) || (isalnum(ch) != 0) ) )

  00f59	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00f5e	50		 push	 eax
  00f5f	e8 00 00 00 00	 call	 _getc
  00f64	83 c4 04	 add	 esp, 4
  00f67	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  00f6a	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00f6e	83 f9 ff	 cmp	 ecx, -1
  00f71	74 36		 je	 SHORT $LN3@GetToken
  00f73	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00f77	83 f8 2e	 cmp	 eax, 46			; 0000002eH
  00f7a	74 1a		 je	 SHORT $LN2@GetToken
  00f7c	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00f80	83 f8 5f	 cmp	 eax, 95			; 0000005fH
  00f83	74 11		 je	 SHORT $LN2@GetToken
  00f85	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00f89	50		 push	 eax
  00f8a	e8 00 00 00 00	 call	 _isalnum
  00f8f	83 c4 04	 add	 esp, 4
  00f92	85 c0		 test	 eax, eax
  00f94	74 13		 je	 SHORT $LN3@GetToken
$LN2@GetToken:

; 133  : 			{
; 134  : 				*p=ch;

  00f96	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00f99	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  00f9c	88 08		 mov	 BYTE PTR [eax], cl

; 135  : 				p++;

  00f9e	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00fa1	83 c0 01	 add	 eax, 1
  00fa4	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 136  : 				
; 137  : 			}

  00fa7	eb b0		 jmp	 SHORT $LN4@GetToken
$LN3@GetToken:

; 138  : 
; 139  : 			ungetc(ch, SMDFile);

  00fa9	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00fae	50		 push	 eax
  00faf	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00fb3	51		 push	 ecx
  00fb4	e8 00 00 00 00	 call	 _ungetc
  00fb9	83 c4 08	 add	 esp, 8

; 140  : 			*p=0;

  00fbc	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00fbf	c6 00 00	 mov	 BYTE PTR [eax], 0

; 141  : 			CurrentToken=NAME;

  00fc2	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _CurrentToken, 0

; 142  : 			return CurrentToken;

  00fcc	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00fd1	eb 15		 jmp	 SHORT $LN32@GetToken

; 143  : 		}
; 144  : 		else

  00fd3	eb 11		 jmp	 SHORT $LN1@GetToken
$LN5@GetToken:

; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'

  00fd5	c7 05 00 00 00
	00 3c 00 00 00	 mov	 DWORD PTR _CurrentToken, 60 ; 0000003cH
  00fdf	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00fe4	eb 02		 jmp	 SHORT $LN32@GetToken
$LN1@GetToken:
$LN20@GetToken:

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;

  00fe6	33 c0		 xor	 eax, eax
$LN32@GetToken:

; 153  : }

  00fe8	5f		 pop	 edi
  00fe9	5e		 pop	 esi
  00fea	5b		 pop	 ebx
  00feb	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00fee	33 cd		 xor	 ecx, ebp
  00ff0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00ff5	8b e5		 mov	 esp, ebp
  00ff7	5d		 pop	 ebp
  00ff8	c3		 ret	 0
  00ff9	8d 49 00	 npad	 3
$LN35@GetToken:
  00ffc	00 00 00 00	 DD	 $LN10@GetToken
  01000	00 00 00 00	 DD	 $LN19@GetToken
  01004	00 00 00 00	 DD	 $LN17@GetToken
  01008	00 00 00 00	 DD	 $LN14@GetToken
  0100c	00 00 00 00	 DD	 $LN18@GetToken
  01010	00 00 00 00	 DD	 $LN16@GetToken
  01014	00 00 00 00	 DD	 $LN15@GetToken
  01018	00 00 00 00	 DD	 $LN6@GetToken
$LN34@GetToken:
  0101c	00		 DB	 0
  0101d	01		 DB	 1
  0101e	07		 DB	 7
  0101f	07		 DB	 7
  01020	07		 DB	 7
  01021	07		 DB	 7
  01022	07		 DB	 7
  01023	07		 DB	 7
  01024	07		 DB	 7
  01025	07		 DB	 7
  01026	02		 DB	 2
  01027	03		 DB	 3
  01028	03		 DB	 3
  01029	07		 DB	 7
  0102a	03		 DB	 3
  0102b	03		 DB	 3
  0102c	03		 DB	 3
  0102d	03		 DB	 3
  0102e	03		 DB	 3
  0102f	03		 DB	 3
  01030	03		 DB	 3
  01031	03		 DB	 3
  01032	03		 DB	 3
  01033	03		 DB	 3
  01034	07		 DB	 7
  01035	04		 DB	 4
  01036	07		 DB	 7
  01037	07		 DB	 7
  01038	07		 DB	 7
  01039	07		 DB	 7
  0103a	07		 DB	 7
  0103b	07		 DB	 7
  0103c	07		 DB	 7
  0103d	07		 DB	 7
  0103e	07		 DB	 7
  0103f	07		 DB	 7
  01040	07		 DB	 7
  01041	07		 DB	 7
  01042	07		 DB	 7
  01043	07		 DB	 7
  01044	07		 DB	 7
  01045	07		 DB	 7
  01046	07		 DB	 7
  01047	07		 DB	 7
  01048	07		 DB	 7
  01049	07		 DB	 7
  0104a	07		 DB	 7
  0104b	07		 DB	 7
  0104c	07		 DB	 7
  0104d	07		 DB	 7
  0104e	07		 DB	 7
  0104f	07		 DB	 7
  01050	07		 DB	 7
  01051	07		 DB	 7
  01052	07		 DB	 7
  01053	07		 DB	 7
  01054	07		 DB	 7
  01055	07		 DB	 7
  01056	07		 DB	 7
  01057	07		 DB	 7
  01058	07		 DB	 7
  01059	07		 DB	 7
  0105a	07		 DB	 7
  0105b	07		 DB	 7
  0105c	07		 DB	 7
  0105d	07		 DB	 7
  0105e	07		 DB	 7
  0105f	07		 DB	 7
  01060	07		 DB	 7
  01061	07		 DB	 7
  01062	07		 DB	 7
  01063	07		 DB	 7
  01064	07		 DB	 7
  01065	07		 DB	 7
  01066	07		 DB	 7
  01067	07		 DB	 7
  01068	07		 DB	 7
  01069	07		 DB	 7
  0106a	07		 DB	 7
  0106b	07		 DB	 7
  0106c	07		 DB	 7
  0106d	07		 DB	 7
  0106e	07		 DB	 7
  0106f	07		 DB	 7
  01070	07		 DB	 7
  01071	07		 DB	 7
  01072	07		 DB	 7
  01073	07		 DB	 7
  01074	07		 DB	 7
  01075	05		 DB	 5
  01076	07		 DB	 7
  01077	06		 DB	 6
?GetToken@@YA?AW4SMDToken@@XZ ENDP			; GetToken
_TEXT	ENDS
PUBLIC	?CheckMapCanMove@CMapServerManager@@QAEHH@Z	; CMapServerManager::CheckMapCanMove
EXTRN	?MapNumberCheck@@YAHH@Z:PROC			; MapNumberCheck
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\mapservermanager.cpp
_TEXT	SEGMENT
_sMAP_MOVE_INFO$ = -12					; size = 2
_lpMapSvrData$ = -8					; size = 4
_this$ = -4						; size = 4
_iMAP_NUM$ = 8						; size = 4
?CheckMapCanMove@CMapServerManager@@QAEHH@Z PROC	; CMapServerManager::CheckMapCanMove
; _this$ = ecx

; 344  : {

  01080	55		 push	 ebp
  01081	8b ec		 mov	 ebp, esp
  01083	83 ec 4c	 sub	 esp, 76			; 0000004cH
  01086	53		 push	 ebx
  01087	56		 push	 esi
  01088	57		 push	 edi
  01089	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 345  : 	if ( MapNumberCheck(iMAP_NUM) == 0 )

  0108c	8b 45 08	 mov	 eax, DWORD PTR _iMAP_NUM$[ebp]
  0108f	50		 push	 eax
  01090	e8 00 00 00 00	 call	 ?MapNumberCheck@@YAHH@Z	; MapNumberCheck
  01095	83 c4 04	 add	 esp, 4
  01098	85 c0		 test	 eax, eax
  0109a	75 04		 jne	 SHORT $LN4@CheckMapCa

; 346  : 	{
; 347  : 		return FALSE;

  0109c	33 c0		 xor	 eax, eax
  0109e	eb 44		 jmp	 SHORT $LN5@CheckMapCa
$LN4@CheckMapCa:

; 348  : 	}
; 349  : 
; 350  : 	_MAPSVR_DATA * lpMapSvrData = this->m_lpThisMapSvrData;

  010a0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  010a3	8b 88 c0 4b 01
	00		 mov	 ecx, DWORD PTR [eax+84928]
  010a9	89 4d f8	 mov	 DWORD PTR _lpMapSvrData$[ebp], ecx

; 351  : 
; 352  : 	if ( lpMapSvrData == NULL )

  010ac	83 7d f8 00	 cmp	 DWORD PTR _lpMapSvrData$[ebp], 0
  010b0	75 04		 jne	 SHORT $LN3@CheckMapCa

; 353  : 	{
; 354  : 		return FALSE;

  010b2	33 c0		 xor	 eax, eax
  010b4	eb 2e		 jmp	 SHORT $LN5@CheckMapCa
$LN3@CheckMapCa:

; 355  : 	}
; 356  : 
; 357  : 	if ( lpMapSvrData->m_bIN_USE == FALSE )

  010b6	8b 45 f8	 mov	 eax, DWORD PTR _lpMapSvrData$[ebp]
  010b9	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  010bd	75 04		 jne	 SHORT $LN2@CheckMapCa

; 358  : 	{
; 359  : 		return FALSE;

  010bf	33 c0		 xor	 eax, eax
  010c1	eb 21		 jmp	 SHORT $LN5@CheckMapCa
$LN2@CheckMapCa:

; 360  : 	}
; 361  : 
; 362  : 	short sMAP_MOVE_INFO = lpMapSvrData->m_sMAP_MOVE[iMAP_NUM];

  010c3	8b 45 08	 mov	 eax, DWORD PTR _iMAP_NUM$[ebp]
  010c6	8b 4d f8	 mov	 ecx, DWORD PTR _lpMapSvrData$[ebp]
  010c9	66 8b 54 41 1e	 mov	 dx, WORD PTR [ecx+eax*2+30]
  010ce	66 89 55 f4	 mov	 WORD PTR _sMAP_MOVE_INFO$[ebp], dx

; 363  : 
; 364  : 	if ( sMAP_MOVE_INFO != -3 )

  010d2	0f bf 45 f4	 movsx	 eax, WORD PTR _sMAP_MOVE_INFO$[ebp]
  010d6	83 f8 fd	 cmp	 eax, -3			; fffffffdH
  010d9	74 04		 je	 SHORT $LN1@CheckMapCa

; 365  : 	{
; 366  : 		return FALSE;

  010db	33 c0		 xor	 eax, eax
  010dd	eb 05		 jmp	 SHORT $LN5@CheckMapCa
$LN1@CheckMapCa:

; 367  : 	}
; 368  : 
; 369  : 	return TRUE;

  010df	b8 01 00 00 00	 mov	 eax, 1
$LN5@CheckMapCa:

; 370  : }

  010e4	5f		 pop	 edi
  010e5	5e		 pop	 esi
  010e6	5b		 pop	 ebx
  010e7	8b e5		 mov	 esp, ebp
  010e9	5d		 pop	 ebp
  010ea	c2 04 00	 ret	 4
?CheckMapCanMove@CMapServerManager@@QAEHH@Z ENDP	; CMapServerManager::CheckMapCanMove
_TEXT	ENDS
PUBLIC	??_C@_0FE@HMFMELGB@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ ; `string'
PUBLIC	??_C@_0GK@EEMBMNOK@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ ; `string'
PUBLIC	??1?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::~vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >
PUBLIC	??_C@_0GJ@HAGGDALD@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ ; `string'
PUBLIC	??A?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEAAPAU_MAPSVR_DATA@@I@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::operator[]
PUBLIC	?size@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::size
PUBLIC	?empty@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBE_NXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::empty
PUBLIC	?push_back@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXABQAU_MAPSVR_DATA@@@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::push_back
PUBLIC	??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::begin
PUBLIC	??0?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >
PUBLIC	??_C@_0FC@MPBANOIK@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ ; `string'
PUBLIC	??_C@_0EM@BGAAFCHD@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ ; `string'
PUBLIC	??_C@_0EJ@EFCOMEEG@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ ; `string'
PUBLIC	?CheckMoveMapSvr@CMapServerManager@@QAEFHHF@Z	; CMapServerManager::CheckMoveMapSvr
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	_rand:PROC
EXTRN	?LogAddC@@3P6AXEPADZZA:DWORD			; LogAddC
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
;	COMDAT ??_C@_0FE@HMFMELGB@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
CONST	SEGMENT
??_C@_0FE@HMFMELGB@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ DB '[Ma'
	DB	'pServerMng] CheckMoveMapSvr() - Unknown MapMove Info [%s][%s]'
	DB	' : MAP-%d / INFO-%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@EEMBMNOK@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
CONST	SEGMENT
??_C@_0GK@EEMBMNOK@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ DB '[Ma'
	DB	'pServerMng] CheckMoveMapSvr() - MapServer Check OK [%s][%s] :'
	DB	' MAP-%d / SVR-%d (State Map:%d X:%d Y:%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GJ@HAGGDALD@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
CONST	SEGMENT
??_C@_0GJ@HAGGDALD@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ DB '[Ma'
	DB	'pServerMng] CheckMoveMapSvr() - MapServer Check OK [%s][%s] :'
	DB	' MAP-%d / SVR-%d(State Map:%d X:%d Y:%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FC@MPBANOIK@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
CONST	SEGMENT
??_C@_0FC@MPBANOIK@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ DB '[Ma'
	DB	'pServerMng] CheckMoveMapSvr() - lpMapSvrData->m_bIN_USE == FA'
	DB	'LSE [%s][%s] : %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@BGAAFCHD@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
CONST	SEGMENT
??_C@_0EM@BGAAFCHD@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ DB '[Ma'
	DB	'pServerMng] CheckMoveMapSvr() - m_lpThisMapSvrData == NULL [%'
	DB	's][%s] : %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@EFCOMEEG@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
CONST	SEGMENT
??_C@_0EJ@EFCOMEEG@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ DB '[Ma'
	DB	'pServerMng] CheckMoveMapSvr() - Map Index doesn''t exist [%s]'
	DB	'[%s] : %d', 00H				; `string'
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$?CheckMoveMapSvr@CMapServerManager@@QAEFHHF@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CheckMoveMapSvr@CMapServerManager@@QAEFHHF@Z$0
__ehfuncinfo$?CheckMoveMapSvr@CMapServerManager@@QAEFHHF@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CheckMoveMapSvr@CMapServerManager@@QAEFHHF@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
_TEXT	SEGMENT
tv145 = -220						; size = 4
$T230599 = -216						; size = 4
$T230600 = -212						; size = 4
$T230601 = -208						; size = 4
$T230602 = -204						; size = 4
$T230603 = -198						; size = 2
$T230604 = -196						; size = 4
$T230605 = -192						; size = 4
$T230606 = -188						; size = 4
$T230607 = -184						; size = 4
$T230608 = -180						; size = 4
$T230609 = -176						; size = 4
$T230610 = -172						; size = 4
$T230611 = -168						; size = 4
$T230612 = -164						; size = 4
_lpTempMapSvrData$228990 = -96				; size = 4
_sDestServerCode$228983 = -92				; size = 2
_it$228977 = -88					; size = 4
_lpDestMapSvrData$228963 = -84				; size = 4
_lpTempMapSvrData$228956 = -80				; size = 4
_it$228949 = -76					; size = 4
_sDestServerCode$228935 = -72				; size = 2
_it$228928 = -68					; size = 4
_lpDestMapSvrData$228913 = -64				; size = 4
_sDestServerCode$228907 = -60				; size = 2
_lpTempMapSvrData$228905 = -56				; size = 4
_it$228898 = -52					; size = 4
_vtMapSvrData$228884 = -48				; size = 16
_it$228534 = -32					; size = 4
_lpDestMapSvrData$228519 = -28				; size = 4
_sMAP_MOVE_INFO$ = -24					; size = 2
_lpMapSvrData$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_iIndex$ = 8						; size = 4
_iMAP_NUM$ = 12						; size = 4
_sSVR_CODE_BEFORE$ = 16					; size = 2
?CheckMoveMapSvr@CMapServerManager@@QAEFHHF@Z PROC	; CMapServerManager::CheckMoveMapSvr
; _this$ = ecx

; 377  : {

  010f0	55		 push	 ebp
  010f1	8b ec		 mov	 ebp, esp
  010f3	6a ff		 push	 -1
  010f5	68 00 00 00 00	 push	 __ehhandler$?CheckMoveMapSvr@CMapServerManager@@QAEFHHF@Z
  010fa	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  01100	50		 push	 eax
  01101	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  01107	53		 push	 ebx
  01108	56		 push	 esi
  01109	57		 push	 edi
  0110a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0110f	33 c5		 xor	 eax, ebp
  01111	50		 push	 eax
  01112	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  01115	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0111b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 378  : 	if ( this->m_bMapDataLoadOk == FALSE )

  0111e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  01121	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  01125	75 0b		 jne	 SHORT $LN39@CheckMoveM

; 379  : 		return gGameServerCode;

  01127	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  0112d	e9 99 08 00 00	 jmp	 $LN40@CheckMoveM
$LN39@CheckMoveM:

; 380  : 
; 381  : 	if ( !gObjIsConnected(iIndex))

  01132	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  01135	50		 push	 eax
  01136	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0113b	83 c4 04	 add	 esp, 4
  0113e	85 c0		 test	 eax, eax
  01140	75 0b		 jne	 SHORT $LN38@CheckMoveM

; 382  : 		return gGameServerCode;

  01142	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  01148	e9 7e 08 00 00	 jmp	 $LN40@CheckMoveM
$LN38@CheckMoveM:

; 383  : 
; 384  : 	if ( !MapNumberCheck(iMAP_NUM))

  0114d	8b 45 0c	 mov	 eax, DWORD PTR _iMAP_NUM$[ebp]
  01150	50		 push	 eax
  01151	e8 00 00 00 00	 call	 ?MapNumberCheck@@YAHH@Z	; MapNumberCheck
  01156	83 c4 04	 add	 esp, 4
  01159	85 c0		 test	 eax, eax
  0115b	75 47		 jne	 SHORT $LN37@CheckMoveM

; 385  : 	{
; 386  : 		LogAddC(2, "[MapServerMng] CheckMoveMapSvr() - Map Index doesn't exist [%s][%s] : %d",
; 387  : 			gObj[iIndex].AccountID, gObj[iIndex].Name, iMAP_NUM);

  0115d	8b 45 0c	 mov	 eax, DWORD PTR _iMAP_NUM$[ebp]
  01160	50		 push	 eax
  01161	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  01164	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0116a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01170	8d 44 0a 77	 lea	 eax, DWORD PTR [edx+ecx+119]
  01174	50		 push	 eax
  01175	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  01178	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0117e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01184	8d 44 0a 6c	 lea	 eax, DWORD PTR [edx+ecx+108]
  01188	50		 push	 eax
  01189	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@EFCOMEEG@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
  0118e	6a 02		 push	 2
  01190	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  01196	83 c4 14	 add	 esp, 20			; 00000014H

; 388  : 
; 389  : 		return gGameServerCode;

  01199	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  0119f	e9 27 08 00 00	 jmp	 $LN40@CheckMoveM
$LN37@CheckMoveM:

; 390  : 	}
; 391  : 
; 392  : 	_MAPSVR_DATA * lpMapSvrData = this->m_lpThisMapSvrData;

  011a4	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  011a7	8b 88 c0 4b 01
	00		 mov	 ecx, DWORD PTR [eax+84928]
  011ad	89 4d ec	 mov	 DWORD PTR _lpMapSvrData$[ebp], ecx

; 393  : 
; 394  : 	if ( lpMapSvrData == NULL )

  011b0	83 7d ec 00	 cmp	 DWORD PTR _lpMapSvrData$[ebp], 0
  011b4	75 47		 jne	 SHORT $LN36@CheckMoveM

; 395  : 	{
; 396  : 		LogAddC(2, "[MapServerMng] CheckMoveMapSvr() - m_lpThisMapSvrData == NULL [%s][%s] : %d",
; 397  : 			gObj[iIndex].AccountID, gObj[iIndex].Name, iMAP_NUM);

  011b6	8b 45 0c	 mov	 eax, DWORD PTR _iMAP_NUM$[ebp]
  011b9	50		 push	 eax
  011ba	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  011bd	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  011c3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  011c9	8d 44 0a 77	 lea	 eax, DWORD PTR [edx+ecx+119]
  011cd	50		 push	 eax
  011ce	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  011d1	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  011d7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  011dd	8d 44 0a 6c	 lea	 eax, DWORD PTR [edx+ecx+108]
  011e1	50		 push	 eax
  011e2	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@BGAAFCHD@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
  011e7	6a 02		 push	 2
  011e9	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  011ef	83 c4 14	 add	 esp, 20			; 00000014H

; 398  : 
; 399  : 		return gGameServerCode;

  011f2	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  011f8	e9 ce 07 00 00	 jmp	 $LN40@CheckMoveM
$LN36@CheckMoveM:

; 400  : 	}
; 401  : 
; 402  : 	if ( lpMapSvrData->m_bIN_USE == FALSE )

  011fd	8b 45 ec	 mov	 eax, DWORD PTR _lpMapSvrData$[ebp]
  01200	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  01204	75 47		 jne	 SHORT $LN35@CheckMoveM

; 403  : 	{
; 404  : 		LogAddC(2, "[MapServerMng] CheckMoveMapSvr() - lpMapSvrData->m_bIN_USE == FALSE [%s][%s] : %d",
; 405  : 			gObj[iIndex].AccountID, gObj[iIndex].Name, iMAP_NUM);

  01206	8b 45 0c	 mov	 eax, DWORD PTR _iMAP_NUM$[ebp]
  01209	50		 push	 eax
  0120a	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  0120d	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  01213	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01219	8d 44 0a 77	 lea	 eax, DWORD PTR [edx+ecx+119]
  0121d	50		 push	 eax
  0121e	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  01221	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  01227	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0122d	8d 44 0a 6c	 lea	 eax, DWORD PTR [edx+ecx+108]
  01231	50		 push	 eax
  01232	68 00 00 00 00	 push	 OFFSET ??_C@_0FC@MPBANOIK@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
  01237	6a 02		 push	 2
  01239	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  0123f	83 c4 14	 add	 esp, 20			; 00000014H

; 406  : 
; 407  : 		return gGameServerCode;

  01242	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  01248	e9 7e 07 00 00	 jmp	 $LN40@CheckMoveM
$LN35@CheckMoveM:

; 408  : 	}
; 409  : 
; 410  : 	short sMAP_MOVE_INFO = lpMapSvrData->m_sMAP_MOVE[iMAP_NUM];

  0124d	8b 45 0c	 mov	 eax, DWORD PTR _iMAP_NUM$[ebp]
  01250	8b 4d ec	 mov	 ecx, DWORD PTR _lpMapSvrData$[ebp]
  01253	66 8b 54 41 1e	 mov	 dx, WORD PTR [ecx+eax*2+30]
  01258	66 89 55 e8	 mov	 WORD PTR _sMAP_MOVE_INFO$[ebp], dx

; 411  : 
; 412  : 	switch ( sMAP_MOVE_INFO )

  0125c	0f bf 45 e8	 movsx	 eax, WORD PTR _sMAP_MOVE_INFO$[ebp]
  01260	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv145[ebp], eax
  01266	83 bd 24 ff ff
	ff fd		 cmp	 DWORD PTR tv145[ebp], -3 ; fffffffdH
  0126d	0f 84 78 04 00
	00		 je	 $LN11@CheckMoveM
  01273	83 bd 24 ff ff
	ff fe		 cmp	 DWORD PTR tv145[ebp], -2 ; fffffffeH
  0127a	0f 84 7b 02 00
	00		 je	 $LN21@CheckMoveM
  01280	83 bd 24 ff ff
	ff ff		 cmp	 DWORD PTR tv145[ebp], -1
  01287	74 05		 je	 SHORT $LN32@CheckMoveM
  01289	e9 f5 04 00 00	 jmp	 $LN10@CheckMoveM
$LN32@CheckMoveM:

; 413  : 	{
; 414  : 		case -1:
; 415  : 			{
; 416  : 				_MAPSVR_DATA * lpDestMapSvrData = NULL;

  0128e	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _lpDestMapSvrData$228519[ebp], 0

; 417  : 
; 418  : 				if ( sSVR_CODE_BEFORE != -1 )

  01295	0f bf 45 10	 movsx	 eax, WORD PTR _sSVR_CODE_BEFORE$[ebp]
  01299	83 f8 ff	 cmp	 eax, -1
  0129c	0f 84 93 00 00
	00		 je	 $LN31@CheckMoveM

; 419  : 				{
; 420  : 					EnterCriticalSection(&this->m_critSVRCODE_MAP);

  012a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  012a5	05 a8 4b 01 00	 add	 eax, 84904		; 00014ba8H
  012aa	50		 push	 eax
  012ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 421  : 
; 422  : 					std::map<int, _MAPSVR_DATA *>::iterator it = this->m_mapSVRCODE_MAP.find(sSVR_CODE_BEFORE);

  012b1	0f bf 45 10	 movsx	 eax, WORD PTR _sSVR_CODE_BEFORE$[ebp]
  012b5	89 85 28 ff ff
	ff		 mov	 DWORD PTR $T230599[ebp], eax
  012bb	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR $T230599[ebp]
  012c1	51		 push	 ecx
  012c2	8d 55 e0	 lea	 edx, DWORD PTR _it$228534[ebp]
  012c5	52		 push	 edx
  012c6	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  012c9	81 c1 98 4b 01
	00		 add	 ecx, 84888		; 00014b98H
  012cf	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::find

; 423  : 
; 424  : 					if ( it != this->m_mapSVRCODE_MAP.end() )

  012d4	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR $T230600[ebp]
  012da	50		 push	 eax
  012db	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  012de	81 c1 98 4b 01
	00		 add	 ecx, 84888		; 00014b98H
  012e4	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::end
  012e9	50		 push	 eax
  012ea	8d 4d e0	 lea	 ecx, DWORD PTR _it$228534[ebp]
  012ed	e8 00 00 00 00	 call	 ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator!=
  012f2	0f b6 c8	 movzx	 ecx, al
  012f5	85 c9		 test	 ecx, ecx
  012f7	74 0e		 je	 SHORT $LN30@CheckMoveM

; 425  : 					{
; 426  : 						lpDestMapSvrData = it->second;

  012f9	8d 4d e0	 lea	 ecx, DWORD PTR _it$228534[ebp]
  012fc	e8 00 00 00 00	 call	 ??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator->
  01301	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  01304	89 45 e4	 mov	 DWORD PTR _lpDestMapSvrData$228519[ebp], eax
$LN30@CheckMoveM:

; 427  : 					}
; 428  : 
; 429  : 					LeaveCriticalSection(&this->m_critSVRCODE_MAP);

  01307	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0130a	05 a8 4b 01 00	 add	 eax, 84904		; 00014ba8H
  0130f	50		 push	 eax
  01310	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 430  : 
; 431  : 					if ( lpDestMapSvrData != NULL )

  01316	83 7d e4 00	 cmp	 DWORD PTR _lpDestMapSvrData$228519[ebp], 0
  0131a	74 19		 je	 SHORT $LN31@CheckMoveM

; 432  : 					{
; 433  : 						if ( lpDestMapSvrData->m_sMAP_MOVE[iMAP_NUM] == -3 )

  0131c	8b 45 0c	 mov	 eax, DWORD PTR _iMAP_NUM$[ebp]
  0131f	8b 4d e4	 mov	 ecx, DWORD PTR _lpDestMapSvrData$228519[ebp]
  01322	0f bf 54 41 1e	 movsx	 edx, WORD PTR [ecx+eax*2+30]
  01327	83 fa fd	 cmp	 edx, -3			; fffffffdH
  0132a	75 09		 jne	 SHORT $LN31@CheckMoveM

; 434  : 						{
; 435  : 							return sSVR_CODE_BEFORE;

  0132c	66 8b 45 10	 mov	 ax, WORD PTR _sSVR_CODE_BEFORE$[ebp]
  01330	e9 96 06 00 00	 jmp	 $LN40@CheckMoveM
$LN31@CheckMoveM:

; 436  : 						}
; 437  : 					}
; 438  : 				}
; 439  : 
; 440  : 				std::vector<_MAPSVR_DATA *> vtMapSvrData;

  01335	8d 4d d0	 lea	 ecx, DWORD PTR _vtMapSvrData$228884[ebp]
  01338	e8 00 00 00 00	 call	 ??0?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >
  0133d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 441  : 
; 442  : 				EnterCriticalSection(&this->m_critSVRCODE_MAP);

  01344	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  01347	05 a8 4b 01 00	 add	 eax, 84904		; 00014ba8H
  0134c	50		 push	 eax
  0134d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 443  : 
; 444  : 				for ( std::map<int ,_MAPSVR_DATA *>::iterator it = this->m_mapSVRCODE_MAP.begin() ; it != this->m_mapSVRCODE_MAP.end() ;it++)

  01353	8d 45 cc	 lea	 eax, DWORD PTR _it$228898[ebp]
  01356	50		 push	 eax
  01357	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0135a	81 c1 98 4b 01
	00		 add	 ecx, 84888		; 00014b98H
  01360	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::begin
  01365	eb 11		 jmp	 SHORT $LN27@CheckMoveM
$LN26@CheckMoveM:
  01367	6a 00		 push	 0
  01369	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR $T230601[ebp]
  0136f	50		 push	 eax
  01370	8d 4d cc	 lea	 ecx, DWORD PTR _it$228898[ebp]
  01373	e8 00 00 00 00	 call	 ??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++
$LN27@CheckMoveM:
  01378	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR $T230602[ebp]
  0137e	50		 push	 eax
  0137f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  01382	81 c1 98 4b 01
	00		 add	 ecx, 84888		; 00014b98H
  01388	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::end
  0138d	50		 push	 eax
  0138e	8d 4d cc	 lea	 ecx, DWORD PTR _it$228898[ebp]
  01391	e8 00 00 00 00	 call	 ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator!=
  01396	0f b6 c8	 movzx	 ecx, al
  01399	85 c9		 test	 ecx, ecx
  0139b	74 43		 je	 SHORT $LN25@CheckMoveM

; 445  : 				{
; 446  : 					_MAPSVR_DATA * lpTempMapSvrData = it->second;

  0139d	8d 4d cc	 lea	 ecx, DWORD PTR _it$228898[ebp]
  013a0	e8 00 00 00 00	 call	 ??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator->
  013a5	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  013a8	89 45 c8	 mov	 DWORD PTR _lpTempMapSvrData$228905[ebp], eax

; 447  : 
; 448  : 					if ( lpTempMapSvrData != NULL &&
; 449  : 						 lpTempMapSvrData->m_bIN_USE == TRUE &&
; 450  : 						 lpTempMapSvrData->m_sMAP_MOVE[iMAP_NUM] == -3)

  013ab	83 7d c8 00	 cmp	 DWORD PTR _lpTempMapSvrData$228905[ebp], 0
  013af	74 2d		 je	 SHORT $LN24@CheckMoveM
  013b1	8b 45 c8	 mov	 eax, DWORD PTR _lpTempMapSvrData$228905[ebp]
  013b4	83 78 04 01	 cmp	 DWORD PTR [eax+4], 1
  013b8	75 24		 jne	 SHORT $LN24@CheckMoveM
  013ba	8b 45 0c	 mov	 eax, DWORD PTR _iMAP_NUM$[ebp]
  013bd	8b 4d c8	 mov	 ecx, DWORD PTR _lpTempMapSvrData$228905[ebp]
  013c0	0f bf 54 41 1e	 movsx	 edx, WORD PTR [ecx+eax*2+30]
  013c5	83 fa fd	 cmp	 edx, -3			; fffffffdH
  013c8	75 14		 jne	 SHORT $LN24@CheckMoveM

; 451  : 					{
; 452  : 						vtMapSvrData.push_back(it->second);

  013ca	8d 4d cc	 lea	 ecx, DWORD PTR _it$228898[ebp]
  013cd	e8 00 00 00 00	 call	 ??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator->
  013d2	83 c0 04	 add	 eax, 4
  013d5	50		 push	 eax
  013d6	8d 4d d0	 lea	 ecx, DWORD PTR _vtMapSvrData$228884[ebp]
  013d9	e8 00 00 00 00	 call	 ?push_back@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXABQAU_MAPSVR_DATA@@@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::push_back
$LN24@CheckMoveM:

; 453  : 					}
; 454  : 				}

  013de	eb 87		 jmp	 SHORT $LN26@CheckMoveM
$LN25@CheckMoveM:

; 455  : 
; 456  : 				LeaveCriticalSection(&this->m_critSVRCODE_MAP);

  013e0	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  013e3	05 a8 4b 01 00	 add	 eax, 84904		; 00014ba8H
  013e8	50		 push	 eax
  013e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 457  : 
; 458  : 				short sDestServerCode = -1;

  013ef	83 c8 ff	 or	 eax, -1
  013f2	66 89 45 c4	 mov	 WORD PTR _sDestServerCode$228907[ebp], ax

; 459  : 
; 460  : 				if ( vtMapSvrData.empty() == 0 )

  013f6	8d 4d d0	 lea	 ecx, DWORD PTR _vtMapSvrData$228884[ebp]
  013f9	e8 00 00 00 00	 call	 ?empty@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBE_NXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::empty
  013fe	0f b6 c0	 movzx	 eax, al
  01401	85 c0		 test	 eax, eax
  01403	75 2a		 jne	 SHORT $LN23@CheckMoveM

; 461  : 				{
; 462  : 					sDestServerCode = vtMapSvrData[rand()%vtMapSvrData.size()]->m_sSVR_CODE;

  01405	e8 00 00 00 00	 call	 _rand
  0140a	8b f0		 mov	 esi, eax
  0140c	8d 4d d0	 lea	 ecx, DWORD PTR _vtMapSvrData$228884[ebp]
  0140f	e8 00 00 00 00	 call	 ?size@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::size
  01414	8b c8		 mov	 ecx, eax
  01416	8b c6		 mov	 eax, esi
  01418	33 d2		 xor	 edx, edx
  0141a	f7 f1		 div	 ecx
  0141c	52		 push	 edx
  0141d	8d 4d d0	 lea	 ecx, DWORD PTR _vtMapSvrData$228884[ebp]
  01420	e8 00 00 00 00	 call	 ??A?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEAAPAU_MAPSVR_DATA@@I@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::operator[]
  01425	8b 10		 mov	 edx, DWORD PTR [eax]
  01427	66 8b 42 0a	 mov	 ax, WORD PTR [edx+10]
  0142b	66 89 45 c4	 mov	 WORD PTR _sDestServerCode$228907[ebp], ax
$LN23@CheckMoveM:

; 463  : 				}
; 464  : 
; 465  : 				if ( sDestServerCode != -1 )

  0142f	0f bf 45 c4	 movsx	 eax, WORD PTR _sDestServerCode$228907[ebp]
  01433	83 f8 ff	 cmp	 eax, -1
  01436	0f 84 ab 00 00
	00		 je	 $LN22@CheckMoveM

; 466  : 				{
; 467  : 					LogAddTD("[MapServerMng] CheckMoveMapSvr() - MapServer Check OK [%s][%s] : MAP-%d / SVR-%d(State Map:%d X:%d Y:%d)",
; 468  : 						gObj[iIndex].AccountID, gObj[iIndex].Name, iMAP_NUM, sDestServerCode,
; 469  : 						gObj[iIndex].MapNumber, gObj[iIndex].X, gObj[iIndex].Y);

  0143c	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0143f	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01445	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0144b	0f bf 94 01 46
	01 00 00	 movsx	 edx, WORD PTR [ecx+eax+326]
  01453	52		 push	 edx
  01454	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  01457	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0145d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01463	0f bf 94 01 44
	01 00 00	 movsx	 edx, WORD PTR [ecx+eax+324]
  0146b	52		 push	 edx
  0146c	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0146f	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01475	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0147b	0f b6 94 01 49
	01 00 00	 movzx	 edx, BYTE PTR [ecx+eax+329]
  01483	52		 push	 edx
  01484	0f bf 45 c4	 movsx	 eax, WORD PTR _sDestServerCode$228907[ebp]
  01488	50		 push	 eax
  01489	8b 4d 0c	 mov	 ecx, DWORD PTR _iMAP_NUM$[ebp]
  0148c	51		 push	 ecx
  0148d	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  01490	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  01496	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0149b	8d 4c 10 77	 lea	 ecx, DWORD PTR [eax+edx+119]
  0149f	51		 push	 ecx
  014a0	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  014a3	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  014a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  014ae	8d 4c 10 6c	 lea	 ecx, DWORD PTR [eax+edx+108]
  014b2	51		 push	 ecx
  014b3	68 00 00 00 00	 push	 OFFSET ??_C@_0GJ@HAGGDALD@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
  014b8	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  014be	83 c4 20	 add	 esp, 32			; 00000020H

; 470  : 
; 471  : 					return sDestServerCode;

  014c1	66 8b 45 c4	 mov	 ax, WORD PTR _sDestServerCode$228907[ebp]
  014c5	66 89 85 3a ff
	ff ff		 mov	 WORD PTR $T230603[ebp], ax
  014cc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  014d3	8d 4d d0	 lea	 ecx, DWORD PTR _vtMapSvrData$228884[ebp]
  014d6	e8 00 00 00 00	 call	 ??1?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::~vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >
  014db	66 8b 85 3a ff
	ff ff		 mov	 ax, WORD PTR $T230603[ebp]
  014e2	e9 e4 04 00 00	 jmp	 $LN40@CheckMoveM
$LN22@CheckMoveM:

; 472  : 				}
; 473  : 			}

  014e7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  014ee	8d 4d d0	 lea	 ecx, DWORD PTR _vtMapSvrData$228884[ebp]
  014f1	e8 00 00 00 00	 call	 ??1?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::~vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >

; 474  : 			break;

  014f6	e9 ca 04 00 00	 jmp	 $LN33@CheckMoveM
$LN21@CheckMoveM:

; 475  : 
; 476  : 		case -2:
; 477  : 			{
; 478  : 				_MAPSVR_DATA * lpDestMapSvrData = NULL;

  014fb	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _lpDestMapSvrData$228913[ebp], 0

; 479  : 
; 480  : 				if ( sSVR_CODE_BEFORE != -1 )

  01502	0f bf 45 10	 movsx	 eax, WORD PTR _sSVR_CODE_BEFORE$[ebp]
  01506	83 f8 ff	 cmp	 eax, -1
  01509	0f 84 93 00 00
	00		 je	 $LN20@CheckMoveM

; 481  : 				{
; 482  : 					EnterCriticalSection(&this->m_critSVRCODE_MAP);

  0150f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  01512	05 a8 4b 01 00	 add	 eax, 84904		; 00014ba8H
  01517	50		 push	 eax
  01518	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 483  : 
; 484  : 					std::map<int, _MAPSVR_DATA *>::iterator it = this->m_mapSVRCODE_MAP.find(sSVR_CODE_BEFORE);

  0151e	0f bf 45 10	 movsx	 eax, WORD PTR _sSVR_CODE_BEFORE$[ebp]
  01522	89 85 3c ff ff
	ff		 mov	 DWORD PTR $T230604[ebp], eax
  01528	8d 8d 3c ff ff
	ff		 lea	 ecx, DWORD PTR $T230604[ebp]
  0152e	51		 push	 ecx
  0152f	8d 55 bc	 lea	 edx, DWORD PTR _it$228928[ebp]
  01532	52		 push	 edx
  01533	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  01536	81 c1 98 4b 01
	00		 add	 ecx, 84888		; 00014b98H
  0153c	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::find

; 485  : 
; 486  : 					if ( it != this->m_mapSVRCODE_MAP.end() )

  01541	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR $T230605[ebp]
  01547	50		 push	 eax
  01548	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0154b	81 c1 98 4b 01
	00		 add	 ecx, 84888		; 00014b98H
  01551	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::end
  01556	50		 push	 eax
  01557	8d 4d bc	 lea	 ecx, DWORD PTR _it$228928[ebp]
  0155a	e8 00 00 00 00	 call	 ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator!=
  0155f	0f b6 c8	 movzx	 ecx, al
  01562	85 c9		 test	 ecx, ecx
  01564	74 0e		 je	 SHORT $LN19@CheckMoveM

; 487  : 					{
; 488  : 						lpDestMapSvrData = it->second;

  01566	8d 4d bc	 lea	 ecx, DWORD PTR _it$228928[ebp]
  01569	e8 00 00 00 00	 call	 ??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator->
  0156e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  01571	89 45 c0	 mov	 DWORD PTR _lpDestMapSvrData$228913[ebp], eax
$LN19@CheckMoveM:

; 489  : 					}
; 490  : 
; 491  : 					LeaveCriticalSection(&this->m_critSVRCODE_MAP);

  01574	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  01577	05 a8 4b 01 00	 add	 eax, 84904		; 00014ba8H
  0157c	50		 push	 eax
  0157d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 492  : 
; 493  : 					if ( lpDestMapSvrData != NULL )

  01583	83 7d c0 00	 cmp	 DWORD PTR _lpDestMapSvrData$228913[ebp], 0
  01587	74 19		 je	 SHORT $LN20@CheckMoveM

; 494  : 					{
; 495  : 						if ( lpDestMapSvrData->m_sMAP_MOVE[iMAP_NUM] == -3 )

  01589	8b 45 0c	 mov	 eax, DWORD PTR _iMAP_NUM$[ebp]
  0158c	8b 4d c0	 mov	 ecx, DWORD PTR _lpDestMapSvrData$228913[ebp]
  0158f	0f bf 54 41 1e	 movsx	 edx, WORD PTR [ecx+eax*2+30]
  01594	83 fa fd	 cmp	 edx, -3			; fffffffdH
  01597	75 09		 jne	 SHORT $LN20@CheckMoveM

; 496  : 						{
; 497  : 							return sSVR_CODE_BEFORE;

  01599	66 8b 45 10	 mov	 ax, WORD PTR _sSVR_CODE_BEFORE$[ebp]
  0159d	e9 29 04 00 00	 jmp	 $LN40@CheckMoveM
$LN20@CheckMoveM:

; 498  : 						}
; 499  : 					}
; 500  : 				}
; 501  : 				
; 502  : 				short sDestServerCode = -1;

  015a2	83 c8 ff	 or	 eax, -1
  015a5	66 89 45 b8	 mov	 WORD PTR _sDestServerCode$228935[ebp], ax

; 503  : 
; 504  : 				EnterCriticalSection(&this->m_critSVRCODE_MAP);

  015a9	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  015ac	05 a8 4b 01 00	 add	 eax, 84904		; 00014ba8H
  015b1	50		 push	 eax
  015b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 505  : 
; 506  : 				for ( std::map<int ,_MAPSVR_DATA *>::iterator it = this->m_mapSVRCODE_MAP.begin() ; it != this->m_mapSVRCODE_MAP.end() ;it++)

  015b8	8d 45 b4	 lea	 eax, DWORD PTR _it$228949[ebp]
  015bb	50		 push	 eax
  015bc	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  015bf	81 c1 98 4b 01
	00		 add	 ecx, 84888		; 00014b98H
  015c5	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::begin
  015ca	eb 11		 jmp	 SHORT $LN16@CheckMoveM
$LN15@CheckMoveM:
  015cc	6a 00		 push	 0
  015ce	8d 85 44 ff ff
	ff		 lea	 eax, DWORD PTR $T230606[ebp]
  015d4	50		 push	 eax
  015d5	8d 4d b4	 lea	 ecx, DWORD PTR _it$228949[ebp]
  015d8	e8 00 00 00 00	 call	 ??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++
$LN16@CheckMoveM:
  015dd	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR $T230607[ebp]
  015e3	50		 push	 eax
  015e4	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  015e7	81 c1 98 4b 01
	00		 add	 ecx, 84888		; 00014b98H
  015ed	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::end
  015f2	50		 push	 eax
  015f3	8d 4d b4	 lea	 ecx, DWORD PTR _it$228949[ebp]
  015f6	e8 00 00 00 00	 call	 ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator!=
  015fb	0f b6 c8	 movzx	 ecx, al
  015fe	85 c9		 test	 ecx, ecx
  01600	74 3a		 je	 SHORT $LN14@CheckMoveM

; 507  : 				{
; 508  : 					_MAPSVR_DATA * lpTempMapSvrData = it->second;

  01602	8d 4d b4	 lea	 ecx, DWORD PTR _it$228949[ebp]
  01605	e8 00 00 00 00	 call	 ??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator->
  0160a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0160d	89 45 b0	 mov	 DWORD PTR _lpTempMapSvrData$228956[ebp], eax

; 509  : 
; 510  : 					if ( lpTempMapSvrData != NULL &&
; 511  : 						 lpTempMapSvrData->m_bIN_USE == TRUE &&
; 512  : 						 lpTempMapSvrData->m_sMAP_MOVE[iMAP_NUM] == -3)

  01610	83 7d b0 00	 cmp	 DWORD PTR _lpTempMapSvrData$228956[ebp], 0
  01614	74 24		 je	 SHORT $LN13@CheckMoveM
  01616	8b 45 b0	 mov	 eax, DWORD PTR _lpTempMapSvrData$228956[ebp]
  01619	83 78 04 01	 cmp	 DWORD PTR [eax+4], 1
  0161d	75 1b		 jne	 SHORT $LN13@CheckMoveM
  0161f	8b 45 0c	 mov	 eax, DWORD PTR _iMAP_NUM$[ebp]
  01622	8b 4d b0	 mov	 ecx, DWORD PTR _lpTempMapSvrData$228956[ebp]
  01625	0f bf 54 41 1e	 movsx	 edx, WORD PTR [ecx+eax*2+30]
  0162a	83 fa fd	 cmp	 edx, -3			; fffffffdH
  0162d	75 0b		 jne	 SHORT $LN13@CheckMoveM

; 513  : 					{
; 514  : 						sDestServerCode = lpTempMapSvrData->m_sSVR_CODE;

  0162f	8b 45 b0	 mov	 eax, DWORD PTR _lpTempMapSvrData$228956[ebp]
  01632	66 8b 48 0a	 mov	 cx, WORD PTR [eax+10]
  01636	66 89 4d b8	 mov	 WORD PTR _sDestServerCode$228935[ebp], cx
$LN13@CheckMoveM:

; 515  : 					}
; 516  : 				}

  0163a	eb 90		 jmp	 SHORT $LN15@CheckMoveM
$LN14@CheckMoveM:

; 517  : 
; 518  : 				LeaveCriticalSection(&this->m_critSVRCODE_MAP);

  0163c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0163f	05 a8 4b 01 00	 add	 eax, 84904		; 00014ba8H
  01644	50		 push	 eax
  01645	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 519  : 
; 520  : 				if ( sDestServerCode != -1 )

  0164b	0f bf 45 b8	 movsx	 eax, WORD PTR _sDestServerCode$228935[ebp]
  0164f	83 f8 ff	 cmp	 eax, -1
  01652	0f 84 8e 00 00
	00		 je	 $LN12@CheckMoveM

; 521  : 				{
; 522  : 					LogAddTD("[MapServerMng] CheckMoveMapSvr() - MapServer Check OK [%s][%s] : MAP-%d / SVR-%d(State Map:%d X:%d Y:%d)",
; 523  : 						gObj[iIndex].AccountID, gObj[iIndex].Name, iMAP_NUM, sDestServerCode,
; 524  : 						gObj[iIndex].MapNumber, gObj[iIndex].X, gObj[iIndex].Y);

  01658	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0165b	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01661	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01667	0f bf 94 01 46
	01 00 00	 movsx	 edx, WORD PTR [ecx+eax+326]
  0166f	52		 push	 edx
  01670	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  01673	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01679	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0167f	0f bf 94 01 44
	01 00 00	 movsx	 edx, WORD PTR [ecx+eax+324]
  01687	52		 push	 edx
  01688	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0168b	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01691	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01697	0f b6 94 01 49
	01 00 00	 movzx	 edx, BYTE PTR [ecx+eax+329]
  0169f	52		 push	 edx
  016a0	0f bf 45 b8	 movsx	 eax, WORD PTR _sDestServerCode$228935[ebp]
  016a4	50		 push	 eax
  016a5	8b 4d 0c	 mov	 ecx, DWORD PTR _iMAP_NUM$[ebp]
  016a8	51		 push	 ecx
  016a9	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  016ac	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  016b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  016b7	8d 4c 10 77	 lea	 ecx, DWORD PTR [eax+edx+119]
  016bb	51		 push	 ecx
  016bc	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  016bf	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  016c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  016ca	8d 4c 10 6c	 lea	 ecx, DWORD PTR [eax+edx+108]
  016ce	51		 push	 ecx
  016cf	68 00 00 00 00	 push	 OFFSET ??_C@_0GJ@HAGGDALD@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
  016d4	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  016da	83 c4 20	 add	 esp, 32			; 00000020H

; 525  : 
; 526  : 					return sDestServerCode;

  016dd	66 8b 45 b8	 mov	 ax, WORD PTR _sDestServerCode$228935[ebp]
  016e1	e9 e5 02 00 00	 jmp	 $LN40@CheckMoveM
$LN12@CheckMoveM:

; 527  : 				}
; 528  : 			}
; 529  : 			break;

  016e6	e9 da 02 00 00	 jmp	 $LN33@CheckMoveM
$LN11@CheckMoveM:

; 530  : 
; 531  : 		case -3:
; 532  : 			LogAddTD("[MapServerMng] CheckMoveMapSvr() - MapServer Check OK [%s][%s] : MAP-%d / SVR-%d (State Map:%d X:%d Y:%d)",
; 533  : 				gObj[iIndex].AccountID, gObj[iIndex].Name, iMAP_NUM, gGameServerCode,
; 534  : 				gObj[iIndex].MapNumber, gObj[iIndex].X, gObj[iIndex].Y);

  016eb	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  016ee	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  016f4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  016fa	0f bf 94 01 46
	01 00 00	 movsx	 edx, WORD PTR [ecx+eax+326]
  01702	52		 push	 edx
  01703	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  01706	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0170c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01712	0f bf 94 01 44
	01 00 00	 movsx	 edx, WORD PTR [ecx+eax+324]
  0171a	52		 push	 edx
  0171b	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0171e	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01724	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0172a	0f b6 94 01 49
	01 00 00	 movzx	 edx, BYTE PTR [ecx+eax+329]
  01732	52		 push	 edx
  01733	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  0173a	50		 push	 eax
  0173b	8b 4d 0c	 mov	 ecx, DWORD PTR _iMAP_NUM$[ebp]
  0173e	51		 push	 ecx
  0173f	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  01742	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  01748	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0174d	8d 4c 10 77	 lea	 ecx, DWORD PTR [eax+edx+119]
  01751	51		 push	 ecx
  01752	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  01755	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  0175b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01760	8d 4c 10 6c	 lea	 ecx, DWORD PTR [eax+edx+108]
  01764	51		 push	 ecx
  01765	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@EEMBMNOK@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
  0176a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  01770	83 c4 20	 add	 esp, 32			; 00000020H

; 535  : 
; 536  : 			return gGameServerCode;

  01773	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  01779	e9 4d 02 00 00	 jmp	 $LN40@CheckMoveM

; 537  : 			break;

  0177e	e9 42 02 00 00	 jmp	 $LN33@CheckMoveM
$LN10@CheckMoveM:

; 538  : 
; 539  : 		default:
; 540  : 			if ( sMAP_MOVE_INFO > -1 )

  01783	0f bf 45 e8	 movsx	 eax, WORD PTR _sMAP_MOVE_INFO$[ebp]
  01787	83 f8 ff	 cmp	 eax, -1
  0178a	0f 8e ee 01 00
	00		 jle	 $LN9@CheckMoveM

; 541  : 			{
; 542  : 				_MAPSVR_DATA * lpDestMapSvrData = NULL;

  01790	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR _lpDestMapSvrData$228963[ebp], 0

; 543  : 
; 544  : 				EnterCriticalSection(&this->m_critSVRCODE_MAP);

  01797	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0179a	05 a8 4b 01 00	 add	 eax, 84904		; 00014ba8H
  0179f	50		 push	 eax
  017a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 545  : 
; 546  : 				std::map<int, _MAPSVR_DATA *>::iterator it = this->m_mapSVRCODE_MAP.find(sMAP_MOVE_INFO);

  017a6	0f bf 45 e8	 movsx	 eax, WORD PTR _sMAP_MOVE_INFO$[ebp]
  017aa	89 85 4c ff ff
	ff		 mov	 DWORD PTR $T230608[ebp], eax
  017b0	8d 8d 4c ff ff
	ff		 lea	 ecx, DWORD PTR $T230608[ebp]
  017b6	51		 push	 ecx
  017b7	8d 55 a8	 lea	 edx, DWORD PTR _it$228977[ebp]
  017ba	52		 push	 edx
  017bb	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  017be	81 c1 98 4b 01
	00		 add	 ecx, 84888		; 00014b98H
  017c4	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::find

; 547  : 
; 548  : 				if ( it != this->m_mapSVRCODE_MAP.end() )

  017c9	8d 85 50 ff ff
	ff		 lea	 eax, DWORD PTR $T230609[ebp]
  017cf	50		 push	 eax
  017d0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  017d3	81 c1 98 4b 01
	00		 add	 ecx, 84888		; 00014b98H
  017d9	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::end
  017de	50		 push	 eax
  017df	8d 4d a8	 lea	 ecx, DWORD PTR _it$228977[ebp]
  017e2	e8 00 00 00 00	 call	 ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator!=
  017e7	0f b6 c8	 movzx	 ecx, al
  017ea	85 c9		 test	 ecx, ecx
  017ec	74 0e		 je	 SHORT $LN8@CheckMoveM

; 549  : 				{
; 550  : 					lpDestMapSvrData = it->second;

  017ee	8d 4d a8	 lea	 ecx, DWORD PTR _it$228977[ebp]
  017f1	e8 00 00 00 00	 call	 ??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator->
  017f6	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  017f9	89 45 ac	 mov	 DWORD PTR _lpDestMapSvrData$228963[ebp], eax
$LN8@CheckMoveM:

; 551  : 				}
; 552  : 
; 553  : 				LeaveCriticalSection(&this->m_critSVRCODE_MAP);

  017fc	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  017ff	05 a8 4b 01 00	 add	 eax, 84904		; 00014ba8H
  01804	50		 push	 eax
  01805	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 554  : 
; 555  : 				if ( lpDestMapSvrData != NULL &&
; 556  : 					 lpDestMapSvrData->m_bIN_USE == TRUE &&
; 557  : 					 lpDestMapSvrData->m_sMAP_MOVE[iMAP_NUM] == -3)

  0180b	83 7d ac 00	 cmp	 DWORD PTR _lpDestMapSvrData$228963[ebp], 0
  0180f	74 22		 je	 SHORT $LN7@CheckMoveM
  01811	8b 45 ac	 mov	 eax, DWORD PTR _lpDestMapSvrData$228963[ebp]
  01814	83 78 04 01	 cmp	 DWORD PTR [eax+4], 1
  01818	75 19		 jne	 SHORT $LN7@CheckMoveM
  0181a	8b 45 0c	 mov	 eax, DWORD PTR _iMAP_NUM$[ebp]
  0181d	8b 4d ac	 mov	 ecx, DWORD PTR _lpDestMapSvrData$228963[ebp]
  01820	0f bf 54 41 1e	 movsx	 edx, WORD PTR [ecx+eax*2+30]
  01825	83 fa fd	 cmp	 edx, -3			; fffffffdH
  01828	75 09		 jne	 SHORT $LN7@CheckMoveM

; 558  : 				{
; 559  : 					return sMAP_MOVE_INFO;

  0182a	66 8b 45 e8	 mov	 ax, WORD PTR _sMAP_MOVE_INFO$[ebp]
  0182e	e9 98 01 00 00	 jmp	 $LN40@CheckMoveM
$LN7@CheckMoveM:

; 560  : 				}
; 561  : 
; 562  : 				short sDestServerCode = -1;

  01833	83 c8 ff	 or	 eax, -1
  01836	66 89 45 a4	 mov	 WORD PTR _sDestServerCode$228983[ebp], ax

; 563  : 
; 564  : 				EnterCriticalSection(&this->m_critSVRCODE_MAP);

  0183a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0183d	05 a8 4b 01 00	 add	 eax, 84904		; 00014ba8H
  01842	50		 push	 eax
  01843	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 565  : 
; 566  : 				for ( it = this->m_mapSVRCODE_MAP.begin() ; it != this->m_mapSVRCODE_MAP.end() ;it++)

  01849	8d 85 54 ff ff
	ff		 lea	 eax, DWORD PTR $T230610[ebp]
  0184f	50		 push	 eax
  01850	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  01853	81 c1 98 4b 01
	00		 add	 ecx, 84888		; 00014b98H
  01859	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::begin
  0185e	8b 08		 mov	 ecx, DWORD PTR [eax]
  01860	89 4d a8	 mov	 DWORD PTR _it$228977[ebp], ecx
  01863	eb 11		 jmp	 SHORT $LN6@CheckMoveM
$LN5@CheckMoveM:
  01865	6a 00		 push	 0
  01867	8d 85 58 ff ff
	ff		 lea	 eax, DWORD PTR $T230611[ebp]
  0186d	50		 push	 eax
  0186e	8d 4d a8	 lea	 ecx, DWORD PTR _it$228977[ebp]
  01871	e8 00 00 00 00	 call	 ??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++
$LN6@CheckMoveM:
  01876	8d 85 5c ff ff
	ff		 lea	 eax, DWORD PTR $T230612[ebp]
  0187c	50		 push	 eax
  0187d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  01880	81 c1 98 4b 01
	00		 add	 ecx, 84888		; 00014b98H
  01886	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::end
  0188b	50		 push	 eax
  0188c	8d 4d a8	 lea	 ecx, DWORD PTR _it$228977[ebp]
  0188f	e8 00 00 00 00	 call	 ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator!=
  01894	0f b6 c8	 movzx	 ecx, al
  01897	85 c9		 test	 ecx, ecx
  01899	74 3a		 je	 SHORT $LN4@CheckMoveM

; 567  : 				{
; 568  : 					_MAPSVR_DATA * lpTempMapSvrData = it->second;

  0189b	8d 4d a8	 lea	 ecx, DWORD PTR _it$228977[ebp]
  0189e	e8 00 00 00 00	 call	 ??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator->
  018a3	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  018a6	89 45 a0	 mov	 DWORD PTR _lpTempMapSvrData$228990[ebp], eax

; 569  : 
; 570  : 					if ( lpTempMapSvrData != NULL &&
; 571  : 						 lpTempMapSvrData->m_bIN_USE == TRUE &&
; 572  : 						 lpTempMapSvrData->m_sMAP_MOVE[iMAP_NUM] == -3)

  018a9	83 7d a0 00	 cmp	 DWORD PTR _lpTempMapSvrData$228990[ebp], 0
  018ad	74 24		 je	 SHORT $LN3@CheckMoveM
  018af	8b 45 a0	 mov	 eax, DWORD PTR _lpTempMapSvrData$228990[ebp]
  018b2	83 78 04 01	 cmp	 DWORD PTR [eax+4], 1
  018b6	75 1b		 jne	 SHORT $LN3@CheckMoveM
  018b8	8b 45 0c	 mov	 eax, DWORD PTR _iMAP_NUM$[ebp]
  018bb	8b 4d a0	 mov	 ecx, DWORD PTR _lpTempMapSvrData$228990[ebp]
  018be	0f bf 54 41 1e	 movsx	 edx, WORD PTR [ecx+eax*2+30]
  018c3	83 fa fd	 cmp	 edx, -3			; fffffffdH
  018c6	75 0b		 jne	 SHORT $LN3@CheckMoveM

; 573  : 					{
; 574  : 						sDestServerCode = lpTempMapSvrData->m_sSVR_CODE;

  018c8	8b 45 a0	 mov	 eax, DWORD PTR _lpTempMapSvrData$228990[ebp]
  018cb	66 8b 48 0a	 mov	 cx, WORD PTR [eax+10]
  018cf	66 89 4d a4	 mov	 WORD PTR _sDestServerCode$228983[ebp], cx
$LN3@CheckMoveM:

; 575  : 					}
; 576  : 				}

  018d3	eb 90		 jmp	 SHORT $LN5@CheckMoveM
$LN4@CheckMoveM:

; 577  : 				
; 578  : 				LeaveCriticalSection(&this->m_critSVRCODE_MAP);

  018d5	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  018d8	05 a8 4b 01 00	 add	 eax, 84904		; 00014ba8H
  018dd	50		 push	 eax
  018de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 579  : 
; 580  : 				if ( sDestServerCode != -1 )

  018e4	0f bf 45 a4	 movsx	 eax, WORD PTR _sDestServerCode$228983[ebp]
  018e8	83 f8 ff	 cmp	 eax, -1
  018eb	0f 84 8b 00 00
	00		 je	 $LN2@CheckMoveM

; 581  : 				{
; 582  : 					LogAddTD("[MapServerMng] CheckMoveMapSvr() - MapServer Check OK [%s][%s] : MAP-%d / SVR-%d(State Map:%d X:%d Y:%d)",
; 583  : 						gObj[iIndex].AccountID, gObj[iIndex].Name, iMAP_NUM, sDestServerCode,
; 584  : 						gObj[iIndex].MapNumber, gObj[iIndex].X, gObj[iIndex].Y);

  018f1	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  018f4	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  018fa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01900	0f bf 94 01 46
	01 00 00	 movsx	 edx, WORD PTR [ecx+eax+326]
  01908	52		 push	 edx
  01909	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0190c	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01912	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01918	0f bf 94 01 44
	01 00 00	 movsx	 edx, WORD PTR [ecx+eax+324]
  01920	52		 push	 edx
  01921	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  01924	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0192a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01930	0f b6 94 01 49
	01 00 00	 movzx	 edx, BYTE PTR [ecx+eax+329]
  01938	52		 push	 edx
  01939	0f bf 45 a4	 movsx	 eax, WORD PTR _sDestServerCode$228983[ebp]
  0193d	50		 push	 eax
  0193e	8b 4d 0c	 mov	 ecx, DWORD PTR _iMAP_NUM$[ebp]
  01941	51		 push	 ecx
  01942	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  01945	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  0194b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01950	8d 4c 10 77	 lea	 ecx, DWORD PTR [eax+edx+119]
  01954	51		 push	 ecx
  01955	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  01958	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  0195e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01963	8d 4c 10 6c	 lea	 ecx, DWORD PTR [eax+edx+108]
  01967	51		 push	 ecx
  01968	68 00 00 00 00	 push	 OFFSET ??_C@_0GJ@HAGGDALD@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
  0196d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  01973	83 c4 20	 add	 esp, 32			; 00000020H

; 585  : 
; 586  : 					return sDestServerCode;

  01976	66 8b 45 a4	 mov	 ax, WORD PTR _sDestServerCode$228983[ebp]
  0197a	eb 4f		 jmp	 SHORT $LN40@CheckMoveM
$LN2@CheckMoveM:

; 587  : 				}
; 588  : 			}
; 589  : 			else

  0197c	eb 47		 jmp	 SHORT $LN33@CheckMoveM
$LN9@CheckMoveM:

; 590  : 			{
; 591  : 				LogAddC(2, "[MapServerMng] CheckMoveMapSvr() - Unknown MapMove Info [%s][%s] : MAP-%d / INFO-%d",
; 592  : 					gObj[iIndex].AccountID, gObj[iIndex].Name, iMAP_NUM, sMAP_MOVE_INFO);

  0197e	0f bf 45 e8	 movsx	 eax, WORD PTR _sMAP_MOVE_INFO$[ebp]
  01982	50		 push	 eax
  01983	8b 4d 0c	 mov	 ecx, DWORD PTR _iMAP_NUM$[ebp]
  01986	51		 push	 ecx
  01987	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  0198a	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  01990	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01995	8d 4c 10 77	 lea	 ecx, DWORD PTR [eax+edx+119]
  01999	51		 push	 ecx
  0199a	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  0199d	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  019a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  019a8	8d 4c 10 6c	 lea	 ecx, DWORD PTR [eax+edx+108]
  019ac	51		 push	 ecx
  019ad	68 00 00 00 00	 push	 OFFSET ??_C@_0FE@HMFMELGB@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
  019b2	6a 02		 push	 2
  019b4	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  019ba	83 c4 18	 add	 esp, 24			; 00000018H

; 593  : 
; 594  : 				return gGameServerCode;

  019bd	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  019c3	eb 06		 jmp	 SHORT $LN40@CheckMoveM
$LN33@CheckMoveM:

; 595  : 			}
; 596  : 	}
; 597  : 
; 598  : 	return gGameServerCode;

  019c5	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
$LN40@CheckMoveM:

; 599  : }

  019cb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  019ce	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  019d5	59		 pop	 ecx
  019d6	5f		 pop	 edi
  019d7	5e		 pop	 esi
  019d8	5b		 pop	 ebx
  019d9	8b e5		 mov	 esp, ebp
  019db	5d		 pop	 ebp
  019dc	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CheckMoveMapSvr@CMapServerManager@@QAEFHHF@Z$0:
  0006e	8d 4d d0	 lea	 ecx, DWORD PTR _vtMapSvrData$228884[ebp]
  00071	e9 00 00 00 00	 jmp	 ??1?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::~vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >
__ehhandler$?CheckMoveMapSvr@CMapServerManager@@QAEFHHF@Z:
  00076	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0007a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0007d	8b 8a 20 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-224]
  00083	33 c8		 xor	 ecx, eax
  00085	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CheckMoveMapSvr@CMapServerManager@@QAEFHHF@Z
  0008f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CheckMoveMapSvr@CMapServerManager@@QAEFHHF@Z ENDP	; CMapServerManager::CheckMoveMapSvr
PUBLIC	?GetSvrCodeData@CMapServerManager@@QAEHGPADPAG@Z ; CMapServerManager::GetSvrCodeData
EXTRN	_strcpy:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
$T230619 = -84						; size = 4
$T230620 = -80						; size = 4
_it$ = -12						; size = 4
_lpMapSvrData$ = -8					; size = 4
_this$ = -4						; size = 4
_wServerCode$ = 8					; size = 2
_lpszIpAddress$ = 12					; size = 4
_lpwPort$ = 16						; size = 4
?GetSvrCodeData@CMapServerManager@@QAEHGPADPAG@Z PROC	; CMapServerManager::GetSvrCodeData
; _this$ = ecx

; 605  : {

  019e0	55		 push	 ebp
  019e1	8b ec		 mov	 ebp, esp
  019e3	83 ec 54	 sub	 esp, 84			; 00000054H
  019e6	53		 push	 ebx
  019e7	56		 push	 esi
  019e8	57		 push	 edi
  019e9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 606  : 	if ( !lpszIpAddress || !lpwPort )

  019ec	83 7d 0c 00	 cmp	 DWORD PTR _lpszIpAddress$[ebp], 0
  019f0	74 06		 je	 SHORT $LN3@GetSvrCode
  019f2	83 7d 10 00	 cmp	 DWORD PTR _lpwPort$[ebp], 0
  019f6	75 07		 jne	 SHORT $LN4@GetSvrCode
$LN3@GetSvrCode:

; 607  : 		return FALSE;

  019f8	33 c0		 xor	 eax, eax
  019fa	e9 a1 00 00 00	 jmp	 $LN5@GetSvrCode
$LN4@GetSvrCode:

; 608  : 
; 609  : 	_MAPSVR_DATA * lpMapSvrData = NULL;

  019ff	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _lpMapSvrData$[ebp], 0

; 610  : 
; 611  : 	EnterCriticalSection(&this->m_critSVRCODE_MAP);

  01a06	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01a09	05 a8 4b 01 00	 add	 eax, 84904		; 00014ba8H
  01a0e	50		 push	 eax
  01a0f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 612  : 
; 613  : 	std::map<int, _MAPSVR_DATA *>::iterator it = this->m_mapSVRCODE_MAP.find(wServerCode);

  01a15	0f b7 45 08	 movzx	 eax, WORD PTR _wServerCode$[ebp]
  01a19	89 45 ac	 mov	 DWORD PTR $T230619[ebp], eax
  01a1c	8d 4d ac	 lea	 ecx, DWORD PTR $T230619[ebp]
  01a1f	51		 push	 ecx
  01a20	8d 55 f4	 lea	 edx, DWORD PTR _it$[ebp]
  01a23	52		 push	 edx
  01a24	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01a27	81 c1 98 4b 01
	00		 add	 ecx, 84888		; 00014b98H
  01a2d	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::find

; 614  : 
; 615  : 	if ( it != this->m_mapSVRCODE_MAP.end() )

  01a32	8d 45 b0	 lea	 eax, DWORD PTR $T230620[ebp]
  01a35	50		 push	 eax
  01a36	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01a39	81 c1 98 4b 01
	00		 add	 ecx, 84888		; 00014b98H
  01a3f	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::end
  01a44	50		 push	 eax
  01a45	8d 4d f4	 lea	 ecx, DWORD PTR _it$[ebp]
  01a48	e8 00 00 00 00	 call	 ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator!=
  01a4d	0f b6 c8	 movzx	 ecx, al
  01a50	85 c9		 test	 ecx, ecx
  01a52	74 0e		 je	 SHORT $LN2@GetSvrCode

; 616  : 	{
; 617  : 		lpMapSvrData = it->second;

  01a54	8d 4d f4	 lea	 ecx, DWORD PTR _it$[ebp]
  01a57	e8 00 00 00 00	 call	 ??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator->
  01a5c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  01a5f	89 45 f8	 mov	 DWORD PTR _lpMapSvrData$[ebp], eax
$LN2@GetSvrCode:

; 618  : 	}
; 619  : 
; 620  : 	LeaveCriticalSection(&this->m_critSVRCODE_MAP);

  01a62	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01a65	05 a8 4b 01 00	 add	 eax, 84904		; 00014ba8H
  01a6a	50		 push	 eax
  01a6b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 621  : 
; 622  : 	if ( lpMapSvrData == NULL )

  01a71	83 7d f8 00	 cmp	 DWORD PTR _lpMapSvrData$[ebp], 0
  01a75	75 04		 jne	 SHORT $LN1@GetSvrCode

; 623  : 		return FALSE;

  01a77	33 c0		 xor	 eax, eax
  01a79	eb 25		 jmp	 SHORT $LN5@GetSvrCode
$LN1@GetSvrCode:

; 624  : 
; 625  : 	strcpy(lpszIpAddress, lpMapSvrData->m_cIPADDR);

  01a7b	8b 45 f8	 mov	 eax, DWORD PTR _lpMapSvrData$[ebp]
  01a7e	83 c0 0c	 add	 eax, 12			; 0000000cH
  01a81	50		 push	 eax
  01a82	8b 4d 0c	 mov	 ecx, DWORD PTR _lpszIpAddress$[ebp]
  01a85	51		 push	 ecx
  01a86	e8 00 00 00 00	 call	 _strcpy
  01a8b	83 c4 08	 add	 esp, 8

; 626  : 	*lpwPort = lpMapSvrData->m_wPORT;

  01a8e	8b 45 10	 mov	 eax, DWORD PTR _lpwPort$[ebp]
  01a91	8b 4d f8	 mov	 ecx, DWORD PTR _lpMapSvrData$[ebp]
  01a94	66 8b 51 1c	 mov	 dx, WORD PTR [ecx+28]
  01a98	66 89 10	 mov	 WORD PTR [eax], dx

; 627  : 
; 628  : 	return TRUE;

  01a9b	b8 01 00 00 00	 mov	 eax, 1
$LN5@GetSvrCode:

; 629  : }

  01aa0	5f		 pop	 edi
  01aa1	5e		 pop	 esi
  01aa2	5b		 pop	 ebx
  01aa3	8b e5		 mov	 esp, ebp
  01aa5	5d		 pop	 ebp
  01aa6	c2 0c 00	 ret	 12			; 0000000cH
?GetSvrCodeData@CMapServerManager@@QAEHGPADPAG@Z ENDP	; CMapServerManager::GetSvrCodeData
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
PUBLIC	??0?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::allocator<std::pair<int const ,_MAPSVR_DATA *> >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T230622 = -70						; size = 1
$T230623 = -69						; size = 1
_this$ = -4						; size = 4
??0?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ PROC ; std::map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >::map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >, COMDAT
; _this$ = ecx

; 106  : 		{	// construct empty map from defaults

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8d 4d ba	 lea	 ecx, DWORD PTR $T230622[ebp]
  0000f	e8 00 00 00 00	 call	 ??0?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::allocator<std::pair<int const ,_MAPSVR_DATA *> >
  00014	50		 push	 eax
  00015	8d 45 bb	 lea	 eax, DWORD PTR $T230623[ebp]
  00018	50		 push	 eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >

; 107  : 		}

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??0?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >::map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >
_TEXT	ENDS
PUBLIC	??1?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::~_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tidy
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::~_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >, COMDAT
; _this$ = ecx

; 790  : 		{	// destroy tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 791  : 		_Tidy();

  00032	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ?_Tidy@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tidy

; 792  : 		}

  0003a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00041	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ??1?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::~_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
  00049	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00053	59		 pop	 ecx
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::~_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
__ehhandler$??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::~_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lmost
; Function compile flags: /Odtp /ZI
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::begin, COMDAT
; _this$ = ecx

; 806  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 807  : 		return (iterator(_Lmost(), this));

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lmost
  00018	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001a	51		 push	 ecx
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 808  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::begin
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::end, COMDAT
; _this$ = ecx

; 816  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 817  : 		return (iterator(this->_Myhead, this));

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00016	52		 push	 edx
  00017	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001a	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >
  0001f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 818  : 		}

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::end
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rmost
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Erase
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Root
; Function compile flags: /Odtp /ZI
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::clear, COMDAT
; _this$ = ecx

; 1410 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1411 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1412 : 		this->_Orphan_ptr(*this, 0);
; 1413 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1414 : 
; 1415 : 		_Erase(_Root());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Root
  00014	8b 00		 mov	 eax, DWORD PTR [eax]
  00016	50		 push	 eax
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Erase

; 1416 : 		_Root() = this->_Myhead;

  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Root
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002d	89 10		 mov	 DWORD PTR [eax], edx

; 1417 : 		_Lmost() = this->_Myhead;

  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lmost
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0003d	89 10		 mov	 DWORD PTR [eax], edx

; 1418 : 		_Rmost() = this->_Myhead;

  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rmost
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0004d	89 10		 mov	 DWORD PTR [eax], edx

; 1419 : 		this->_Mysize = 0;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 1420 : 		}

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::clear
_TEXT	ENDS
PUBLIC	??R?$less@H@std@@QBE_NABH0@Z			; std::less<int>::operator()
PUBLIC	?_Key@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Key
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::_Mynode
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::lower_bound
; Function compile flags: /Odtp /ZI
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z
_TEXT	SEGMENT
tv137 = -88						; size = 4
$T230642 = -84						; size = 4
$T230643 = -80						; size = 4
$T230645 = -76						; size = 4
__Where$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::find, COMDAT
; _this$ = ecx

; 1423 : 		{	// find an element in mutable sequence that matches _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1424 : 		iterator _Where = lower_bound(_Keyval);

  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Keyval$[ebp]
  0000f	50		 push	 eax
  00010	8d 4d f8	 lea	 ecx, DWORD PTR __Where$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?lower_bound@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::lower_bound

; 1425 : 		return (_Where == end()
; 1426 : 			|| _DEBUG_LT_PRED(this->comp,
; 1427 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1428 : 					? end() : _Where);

  0001c	8d 45 b0	 lea	 eax, DWORD PTR $T230643[ebp]
  0001f	50		 push	 eax
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::end
  00028	50		 push	 eax
  00029	8d 4d f8	 lea	 ecx, DWORD PTR __Where$[ebp]
  0002c	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator==
  00031	0f b6 c8	 movzx	 ecx, al
  00034	85 c9		 test	 ecx, ecx
  00036	75 2d		 jne	 SHORT $LN3@find
  00038	8d 4d f8	 lea	 ecx, DWORD PTR __Where$[ebp]
  0003b	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::_Mynode
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Key
  00046	83 c4 04	 add	 esp, 4
  00049	50		 push	 eax
  0004a	8b 55 0c	 mov	 edx, DWORD PTR __Keyval$[ebp]
  0004d	52		 push	 edx
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  00056	0f b6 c0	 movzx	 eax, al
  00059	85 c0		 test	 eax, eax
  0005b	75 08		 jne	 SHORT $LN3@find
  0005d	8d 4d f8	 lea	 ecx, DWORD PTR __Where$[ebp]
  00060	89 4d a8	 mov	 DWORD PTR tv137[ebp], ecx
  00063	eb 0f		 jmp	 SHORT $LN4@find
$LN3@find:
  00065	8d 55 b4	 lea	 edx, DWORD PTR $T230645[ebp]
  00068	52		 push	 edx
  00069	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::end
  00071	89 45 a8	 mov	 DWORD PTR tv137[ebp], eax
$LN4@find:
  00074	8b 45 a8	 mov	 eax, DWORD PTR tv137[ebp]
  00077	89 45 ac	 mov	 DWORD PTR $T230642[ebp], eax
  0007a	8b 4d ac	 mov	 ecx, DWORD PTR $T230642[ebp]
  0007d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00082	89 10		 mov	 DWORD PTR [eax], edx
  00084	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1429 : 		}

  00087	5f		 pop	 edi
  00088	5e		 pop	 esi
  00089	5b		 pop	 ebx
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::find
_TEXT	ENDS
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator*
; Function compile flags: /Odtp /ZI
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator->, COMDAT
; _this$ = ecx

; 400  : 		{	// return pointer to class object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 401  : 		return (&**this);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator*

; 402  : 		}

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator->
_TEXT	ENDS
PUBLIC	??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++
; Function compile flags: /Odtp /ZI
;	COMDAT ??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 411  : 		{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 412  : 		_Myiter _Tmp = *this;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	89 4d f8	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 413  : 		++*this;

  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++

; 414  : 		return (_Tmp);

  0001c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001f	8b 4d f8	 mov	 ecx, DWORD PTR __Tmp$[ebp]
  00022	89 08		 mov	 DWORD PTR [eax], ecx
  00024	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 415  : 		}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator==, COMDAT
; _this$ = ecx

; 316  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 318  : 		if (this->_Getcont() == 0
; 319  : 			|| this->_Getcont() != _Right._Getcont())
; 320  : 			{	// report error
; 321  : 			_DEBUG_ERROR("map/set iterators incompatible");
; 322  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 323  : 			}
; 324  : 
; 325  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 326  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 327  : 			&& this->_Getcont() == _Right._Getcont());
; 328  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 329  : 
; 330  : 		return (this->_Ptr == _Right._Ptr);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00012	8b 10		 mov	 edx, DWORD PTR [eax]
  00014	33 c0		 xor	 eax, eax
  00016	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00018	0f 94 c0	 sete	 al

; 331  : 		}

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator==
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator!=, COMDAT
; _this$ = ecx

; 334  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 335  : 		return (!(*this == _Right));

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator==
  00018	0f b6 c0	 movzx	 eax, al
  0001b	f7 d8		 neg	 eax
  0001d	1b c0		 sbb	 eax, eax
  0001f	83 c0 01	 add	 eax, 1

; 336  : 		}

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator!=
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@V?$allocator@PAU_MAPSVR_DATA@@@1@@Z ; std::_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >
PUBLIC	??0?$allocator@PAU_MAPSVR_DATA@@@std@@QAE@XZ	; std::allocator<_MAPSVR_DATA *>::allocator<_MAPSVR_DATA *>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T230657 = -72						; size = 4
_this$ = -4						; size = 4
??0?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	51		 push	 ecx
  0000d	8b cc		 mov	 ecx, esp
  0000f	89 65 b8	 mov	 DWORD PTR $T230657[ebp], esp
  00012	e8 00 00 00 00	 call	 ??0?$allocator@PAU_MAPSVR_DATA@@@std@@QAE@XZ ; std::allocator<_MAPSVR_DATA *>::allocator<_MAPSVR_DATA *>
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ??0?$_Vector_val@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@V?$allocator@PAU_MAPSVR_DATA@@@1@@Z ; std::_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >

; 508  : 		}

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??0?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ; std::_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::~_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >
PUBLIC	?_Tidy@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Tidy
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ??1?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::~vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >, COMDAT
; _this$ = ecx

; 704  : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 705  : 		_Tidy();

  00032	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Tidy

; 706  : 		}

  0003a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00041	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ??1?$_Vector_val@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ; std::_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::~_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >
  00049	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00053	59		 pop	 ecx
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_val@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ; std::_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::~_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >
__ehhandler$??1?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::~vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >
; Function compile flags: /Odtp /ZI
;	COMDAT ?size@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::size, COMDAT
; _this$ = ecx

; 878  : 		{	// return length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00015	2b 01		 sub	 eax, DWORD PTR [ecx]
  00017	c1 f8 02	 sar	 eax, 2

; 880  : 		}

  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	5b		 pop	 ebx
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?size@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::size
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?empty@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?empty@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBE_NXZ PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::empty, COMDAT
; _this$ = ecx

; 888  : 		{	// test if sequence is empty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 889  : 		return (this->_Myfirst == this->_Mylast);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 10		 mov	 edx, DWORD PTR [eax]
  00014	33 c0		 xor	 eax, eax
  00016	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00019	0f 94 c0	 sete	 al

; 890  : 		}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
?empty@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBE_NXZ ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::empty
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??A?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEAAPAU_MAPSVR_DATA@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEAAPAU_MAPSVR_DATA@@I@Z PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::operator[], COMDAT
; _this$ = ecx

; 928  : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 929  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 930  : 		if (size() <= _Pos)
; 931  : 			{	// report error
; 932  : 			_DEBUG_ERROR("vector subscript out of range");
; 933  : 			_SCL_SECURE_OUT_OF_RANGE;
; 934  : 			}
; 935  : 
; 936  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 937  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 938  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 939  : 
; 940  : 		return (*(this->_Myfirst + _Pos));

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	8b 55 08	 mov	 edx, DWORD PTR __Pos$[ebp]
  00014	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]

; 941  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??A?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEAAPAU_MAPSVR_DATA@@I@Z ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::operator[]
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAU_MAPSVR_DATA@@@std@@PAU_MAPSVR_DATA@@ABQAU3@@std@@YAXAAV?$allocator@PAU_MAPSVR_DATA@@@0@PAPAU_MAPSVR_DATA@@ABQAU2@@Z ; std::_Cons_val<std::allocator<_MAPSVR_DATA *>,_MAPSVR_DATA *,_MAPSVR_DATA * const &>
PUBLIC	??$_Cons_val@V?$allocator@PAU_MAPSVR_DATA@@@std@@PAU_MAPSVR_DATA@@AAPAU3@@std@@YAXAAV?$allocator@PAU_MAPSVR_DATA@@@0@PAPAU_MAPSVR_DATA@@AAPAU2@@Z ; std::_Cons_val<std::allocator<_MAPSVR_DATA *>,_MAPSVR_DATA *,_MAPSVR_DATA * &>
PUBLIC	?_Orphan_range@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEXPAPAU_MAPSVR_DATA@@0@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Orphan_range
PUBLIC	?_Reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXI@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Reserve
PUBLIC	?_Inside@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBE_NPBQAU_MAPSVR_DATA@@@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Inside
PUBLIC	??$addressof@QAU_MAPSVR_DATA@@@std@@YAPBQAU_MAPSVR_DATA@@ABQAU1@@Z ; std::addressof<_MAPSVR_DATA * const>
; Function compile flags: /Odtp /ZI
;	COMDAT ?push_back@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXABQAU_MAPSVR_DATA@@@Z
_TEXT	SEGMENT
__Idx$229110 = -8					; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXABQAU_MAPSVR_DATA@@@Z PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$addressof@QAU_MAPSVR_DATA@@@std@@YAPBQAU_MAPSVR_DATA@@ABQAU1@@Z ; std::addressof<_MAPSVR_DATA * const>
  00015	83 c4 04	 add	 esp, 4
  00018	50		 push	 eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Inside@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBE_NPBQAU_MAPSVR_DATA@@@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Inside
  00021	0f b6 c8	 movzx	 ecx, al
  00024	85 c9		 test	 ecx, ecx
  00026	74 78		 je	 SHORT $LN4@push_back

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00028	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$addressof@QAU_MAPSVR_DATA@@@std@@YAPBQAU_MAPSVR_DATA@@ABQAU1@@Z ; std::addressof<_MAPSVR_DATA * const>
  00031	83 c4 04	 add	 esp, 4
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	2b 01		 sub	 eax, DWORD PTR [ecx]
  00039	c1 f8 02	 sar	 eax, 2
  0003c	89 45 f8	 mov	 DWORD PTR __Idx$229110[ebp], eax

; 980  : 			if (this->_Mylast == this->_Myend)

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00048	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0004b	75 0a		 jne	 SHORT $LN3@push_back

; 981  : 				_Reserve(1);

  0004d	6a 01		 push	 1
  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXI@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Reserve
$LN3@push_back:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);

  00057	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0005d	51		 push	 ecx
  0005e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00061	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00064	50		 push	 eax
  00065	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEXPAPAU_MAPSVR_DATA@@0@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Orphan_range

; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  0006d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00070	8b 08		 mov	 ecx, DWORD PTR [eax]
  00072	8b 55 f8	 mov	 edx, DWORD PTR __Idx$229110[ebp]
  00075	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00078	50		 push	 eax
  00079	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0007f	52		 push	 edx
  00080	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00083	83 c0 0c	 add	 eax, 12			; 0000000cH
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@PAU_MAPSVR_DATA@@@std@@PAU_MAPSVR_DATA@@AAPAU3@@std@@YAXAAV?$allocator@PAU_MAPSVR_DATA@@@0@PAPAU_MAPSVR_DATA@@AAPAU2@@Z ; std::_Cons_val<std::allocator<_MAPSVR_DATA *>,_MAPSVR_DATA *,_MAPSVR_DATA * &>
  0008c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 986  : 			++this->_Mylast;

  0008f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00095	83 c1 04	 add	 ecx, 4
  00098	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0009b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 987  : 			}
; 988  : 		else

  0009e	eb 57		 jmp	 SHORT $LN5@push_back
$LN4@push_back:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  000a0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000a9	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  000ac	75 0a		 jne	 SHORT $LN1@push_back

; 991  : 				_Reserve(1);

  000ae	6a 01		 push	 1
  000b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXI@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Reserve
$LN1@push_back:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);

  000b8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bb	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000be	51		 push	 ecx
  000bf	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c5	50		 push	 eax
  000c6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c9	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEXPAPAU_MAPSVR_DATA@@0@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Orphan_range

; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  000ce	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  000d1	50		 push	 eax
  000d2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d5	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d8	52		 push	 edx
  000d9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000dc	83 c0 0c	 add	 eax, 12			; 0000000cH
  000df	50		 push	 eax
  000e0	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@PAU_MAPSVR_DATA@@@std@@PAU_MAPSVR_DATA@@ABQAU3@@std@@YAXAAV?$allocator@PAU_MAPSVR_DATA@@@0@PAPAU_MAPSVR_DATA@@ABQAU2@@Z ; std::_Cons_val<std::allocator<_MAPSVR_DATA *>,_MAPSVR_DATA *,_MAPSVR_DATA * const &>
  000e5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 996  : 			++this->_Mylast;

  000e8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000eb	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ee	83 c1 04	 add	 ecx, 4
  000f1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000f4	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$LN5@push_back:

; 997  : 			}
; 998  : 		}

  000f7	5f		 pop	 edi
  000f8	5e		 pop	 esi
  000f9	5b		 pop	 ebx
  000fa	8b e5		 mov	 esp, ebp
  000fc	5d		 pop	 ebp
  000fd	c2 04 00	 ret	 4
?push_back@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXABQAU_MAPSVR_DATA@@@Z ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::push_back
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xfunctional
_TEXT	ENDS
;	COMDAT ??R?$less@H@std@@QBE_NABH0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@H@std@@QBE_NABH0@Z PROC			; std::less<int>::operator(), COMDAT
; _this$ = ecx

; 124  : 		{	// apply operator< to operands

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 125  : 		return (_Left < _Right);

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000f	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  00012	8b 10		 mov	 edx, DWORD PTR [eax]
  00014	33 c0		 xor	 eax, eax
  00016	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00018	0f 9c c0	 setl	 al

; 126  : 		}

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 08 00	 ret	 8
??R?$less@H@std@@QBE_NABH0@Z ENDP			; std::less<int>::operator()
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
PUBLIC	??0?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::allocator<std::pair<int const ,_MAPSVR_DATA *> >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z
_TEXT	SEGMENT
$T230680 = -72						; size = 4
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >, COMDAT
; _this$ = ecx

; 698  : 		{	// construct empty tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	51		 push	 ecx
  0000d	8b cc		 mov	 ecx, esp
  0000f	89 65 b8	 mov	 DWORD PTR $T230680[ebp], esp
  00012	8b 45 0c	 mov	 eax, DWORD PTR __Al$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??0?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::allocator<std::pair<int const ,_MAPSVR_DATA *> >
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >

; 699  : 		}

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lbound
; Function compile flags: /Odtp /ZI
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 1449 : 		{	// find leftmost node not less than _Keyval in mutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1450 : 		return (iterator(_Lbound(_Keyval), this));

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lbound
  0001c	50		 push	 eax
  0001d	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00020	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >
  00025	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1451 : 		}

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::deallocate
PUBLIC	??$_Dest_val@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@U?$pair@$$CBHPAU_MAPSVR_DATA@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@0@PAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,std::pair<int const ,_MAPSVR_DATA *> >
PUBLIC	??$addressof@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@YAPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@AAU10@@Z ; std::addressof<std::pair<int const ,_MAPSVR_DATA *> >
PUBLIC	?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Myval
PUBLIC	?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
PUBLIC	?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
PUBLIC	?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
; Function compile flags: /Odtp /ZI
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$229146 = -8					; size = 4
_this$ = -4						; size = 4
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 1610 : 		{	// free entire subtree, recursively

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1611 : 		for (_Nodeptr _Pnode = _Rootnode;

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Rootnode$[ebp]
  0000f	89 45 f8	 mov	 DWORD PTR __Pnode$229146[ebp], eax
  00012	eb 06		 jmp	 SHORT $LN3@Erase
$LN2@Erase:

; 1612 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

  00014	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229146[ebp]
  00017	89 45 08	 mov	 DWORD PTR __Rootnode$[ebp], eax
$LN3@Erase:
  0001a	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229146[ebp]
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  00023	83 c4 04	 add	 esp, 4
  00026	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00029	85 c9		 test	 ecx, ecx
  0002b	75 60		 jne	 SHORT $LN4@Erase

; 1613 : 			{	// free subtrees, then node
; 1614 : 			_Erase(this->_Right(_Pnode));

  0002d	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229146[ebp]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  00036	83 c4 04	 add	 esp, 4
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	51		 push	 ecx
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Erase

; 1615 : 			_Pnode = this->_Left(_Pnode);

  00044	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229146[ebp]
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  0004d	83 c4 04	 add	 esp, 4
  00050	8b 08		 mov	 ecx, DWORD PTR [eax]
  00052	89 4d f8	 mov	 DWORD PTR __Pnode$229146[ebp], ecx

; 1616 : 			_Dest_val(this->_Alval,
; 1617 : 				_STD addressof(this->_Myval(_Rootnode)));

  00055	8b 45 08	 mov	 eax, DWORD PTR __Rootnode$[ebp]
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Myval
  0005e	83 c4 04	 add	 esp, 4
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ??$addressof@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@YAPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@AAU10@@Z ; std::addressof<std::pair<int const ,_MAPSVR_DATA *> >
  00067	83 c4 04	 add	 esp, 4
  0006a	50		 push	 eax
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	83 c1 0d	 add	 ecx, 13			; 0000000dH
  00071	51		 push	 ecx
  00072	e8 00 00 00 00	 call	 ??$_Dest_val@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@U?$pair@$$CBHPAU_MAPSVR_DATA@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@0@PAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,std::pair<int const ,_MAPSVR_DATA *> >
  00077	83 c4 08	 add	 esp, 8

; 1618 : 
; 1619 : 			this->_Alnod.deallocate(_Rootnode, 1);

  0007a	6a 01		 push	 1
  0007c	8b 45 08	 mov	 eax, DWORD PTR __Rootnode$[ebp]
  0007f	50		 push	 eax
  00080	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00086	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::deallocate

; 1620 : 			}

  0008b	eb 87		 jmp	 SHORT $LN2@Erase
$LN4@Erase:

; 1621 : 		}

  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	5b		 pop	 ebx
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Erase
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Lmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1758 : 		{	// return leftmost node in nonmutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1759 : 		return (this->_Left(this->_Myhead));

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  00018	83 c4 04	 add	 esp, 4

; 1760 : 		}

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lmost
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Rmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1783 : 		{	// return rightmost node in nonmutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1784 : 		return (this->_Right(this->_Myhead));

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  00018	83 c4 04	 add	 esp, 4

; 1785 : 		}

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
; Function compile flags: /Odtp /ZI
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Root@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1788 : 		{	// return root of nonmutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1789 : 		return (this->_Parent(this->_Myhead));

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00018	83 c4 04	 add	 esp, 4

; 1790 : 		}

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::erase
; Function compile flags: /Odtp /ZI
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T230694 = -88						; size = 4
$T230695 = -84						; size = 4
$T230696 = -80						; size = 4
$T230697 = -76						; size = 4
$T230698 = -72						; size = 4
_this$ = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1865 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1866 : 		erase(begin(), end());

  0000c	8d 45 ac	 lea	 eax, DWORD PTR $T230695[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::end
  00018	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001a	89 4d a8	 mov	 DWORD PTR $T230694[ebp], ecx
  0001d	8d 55 b4	 lea	 edx, DWORD PTR $T230697[ebp]
  00020	52		 push	 edx
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::begin
  00029	8b 00		 mov	 eax, DWORD PTR [eax]
  0002b	89 45 b0	 mov	 DWORD PTR $T230696[ebp], eax
  0002e	8b 4d a8	 mov	 ecx, DWORD PTR $T230694[ebp]
  00031	51		 push	 ecx
  00032	8b 55 b0	 mov	 edx, DWORD PTR $T230696[ebp]
  00035	52		 push	 edx
  00036	8d 45 b8	 lea	 eax, DWORD PTR $T230698[ebp]
  00039	50		 push	 eax
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::erase

; 1867 : 		}

  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tidy
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??1?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::~_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >, COMDAT
; _this$ = ecx

; 554  : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 555  : 		this->_Alnod.deallocate(this->_Myhead, 1);

  0000c	6a 01		 push	 1
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00014	51		 push	 ecx
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0001b	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::deallocate

; 556  : 		}

  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??1?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::~_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
_TEXT	ENDS
PUBLIC	??$_Kfn@$$CBHPAU_MAPSVR_DATA@@@?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@@Z ; std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>::_Kfn<int const ,_MAPSVR_DATA *>
; Function compile flags: /Odtp /ZI
;	COMDAT ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Key, COMDAT

; 616  : 		{	// return reference to key in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 617  : 		return ((key_type&)_Traits::_Kfn(_Myval(_Pnode)));

  00009	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Myval
  00012	83 c4 04	 add	 esp, 4
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??$_Kfn@$$CBHPAU_MAPSVR_DATA@@@?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@@Z ; std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>::_Kfn<int const ,_MAPSVR_DATA *>
  0001b	83 c4 04	 add	 esp, 4

; 618  : 		}

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?_Key@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Key
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::allocator<std::pair<int const ,_MAPSVR_DATA *> >, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::allocator<std::pair<int const ,_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >, COMDAT
; _this$ = ecx

; 378  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Plist$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >

; 379  : 		}

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >
_TEXT	ENDS
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator*
; Function compile flags: /Odtp /ZI
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 395  : 		{	// return designated value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 396  : 		return ((reference)**(_Mybase *)this);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator*

; 397  : 		}

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++
; Function compile flags: /Odtp /ZI
;	COMDAT ??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 405  : 		{	// preincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 406  : 		++(*(_Mybase *)this);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++

; 407  : 		return (*this);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 408  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 121  : 		{	// return node pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 122  : 		return (_Ptr);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 00		 mov	 eax, DWORD PTR [eax]

; 123  : 		}

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::_Mynode
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Inside@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBE_NPBQAU_MAPSVR_DATA@@@Z
_TEXT	SEGMENT
tv76 = -72						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBE_NPBQAU_MAPSVR_DATA@@@Z PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00012	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00015	73 13		 jae	 SHORT $LN3@Inside
  00017	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001a	8b 02		 mov	 eax, DWORD PTR [edx]
  0001c	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  0001f	77 09		 ja	 SHORT $LN3@Inside
  00021	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  0002a	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN4@Inside:
  00031	8a 45 b8	 mov	 al, BYTE PTR tv76[ebp]

; 1287 : 		}

  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
?_Inside@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBE_NPBQAU_MAPSVR_DATA@@@Z ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Inside
_TEXT	ENDS
PUBLIC	?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::reserve
PUBLIC	?_Grow_to@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEII@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Grow_to
PUBLIC	?capacity@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::capacity
PUBLIC	?_Xlen@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEXXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Xlen
PUBLIC	?max_size@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::max_size
; Function compile flags: /Odtp /ZI
;	COMDAT ?_Reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -8						; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXI@Z PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1291 : 		size_type _Size = size();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?size@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::size
  00014	89 45 f8	 mov	 DWORD PTR __Size$[ebp], eax

; 1292 : 		if (max_size() - _Count < _Size)

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?max_size@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::max_size
  0001f	2b 45 08	 sub	 eax, DWORD PTR __Count$[ebp]
  00022	3b 45 f8	 cmp	 eax, DWORD PTR __Size$[ebp]
  00025	73 0a		 jae	 SHORT $LN4@Reserve

; 1293 : 			_Xlen();

  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEXXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Xlen
  0002f	eb 2d		 jmp	 SHORT $LN6@Reserve
$LN4@Reserve:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  00031	8b 45 f8	 mov	 eax, DWORD PTR __Size$[ebp]
  00034	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  00037	89 45 f8	 mov	 DWORD PTR __Size$[ebp], eax
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?capacity@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::capacity
  00042	39 45 f8	 cmp	 DWORD PTR __Size$[ebp], eax
  00045	77 02		 ja	 SHORT $LN2@Reserve

; 1295 : 			;
; 1296 : 		else

  00047	eb 15		 jmp	 SHORT $LN6@Reserve
$LN2@Reserve:

; 1297 : 			reserve(_Grow_to(_Size));

  00049	8b 45 f8	 mov	 eax, DWORD PTR __Size$[ebp]
  0004c	50		 push	 eax
  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEII@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Grow_to
  00055	50		 push	 eax
  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::reserve
$LN6@Reserve:

; 1298 : 		}

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?_Reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXI@Z ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Reserve
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@I@Z ; std::allocator<_MAPSVR_DATA *>::deallocate
PUBLIC	?_Destroy@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXPAPAU_MAPSVR_DATA@@0@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Destroy
PUBLIC	?_Orphan_all@_Container_base0@std@@QAEXXZ	; std::_Container_base0::_Orphan_all
; Function compile flags: /Odtp /ZI
;	COMDAT ?_Tidy@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXXZ PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1302 : 		if (this->_Myfirst != 0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 38 00	 cmp	 DWORD PTR [eax], 0
  00012	74 3d		 je	 SHORT $LN1@Tidy

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00022	51		 push	 ecx
  00023	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00026	8b 02		 mov	 eax, DWORD PTR [edx]
  00028	50		 push	 eax
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXPAPAU_MAPSVR_DATA@@0@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Destroy

; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0003a	2b 11		 sub	 edx, DWORD PTR [ecx]
  0003c	c1 fa 02	 sar	 edx, 2
  0003f	52		 push	 edx
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	8b 08		 mov	 ecx, DWORD PTR [eax]
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0004c	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@I@Z ; std::allocator<_MAPSVR_DATA *>::deallocate
$LN1@Tidy:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00051	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00054	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1310 : 		this->_Mylast = 0;

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1311 : 		this->_Myend = 0;

  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 1312 : 		}

  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
?_Tidy@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXXZ ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Tidy
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Orphan_range@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEXPAPAU_MAPSVR_DATA@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEXPAPAU_MAPSVR_DATA@@0@Z PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1453 : 		{	// orphan iterators within specified (inclusive) range

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1454 : 		}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?_Orphan_range@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEXPAPAU_MAPSVR_DATA@@0@Z ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??0?$allocator@PAU_MAPSVR_DATA@@@std@@QAE@ABV01@@Z ; std::allocator<_MAPSVR_DATA *>::allocator<_MAPSVR_DATA *>
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$_Vector_val@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@V?$allocator@PAU_MAPSVR_DATA@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 1
??0?$_Vector_val@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@V?$allocator@PAU_MAPSVR_DATA@@@1@@Z PROC ; std::_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8d 45 08	 lea	 eax, DWORD PTR __Al$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00016	e8 00 00 00 00	 call	 ??0?$allocator@PAU_MAPSVR_DATA@@@std@@QAE@ABV01@@Z ; std::allocator<_MAPSVR_DATA *>::allocator<_MAPSVR_DATA *>

; 427  : 		_Myfirst = 0;

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 428  : 		_Mylast = 0;

  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 429  : 		_Myend = 0;

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 430  : 		}

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
??0?$_Vector_val@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@V?$allocator@PAU_MAPSVR_DATA@@@1@@Z ENDP ; std::_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::~_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >, COMDAT
; _this$ = ecx

; 433  : 		{	// destroy proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 434  : 		}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1?$_Vector_val@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::~_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAU_MAPSVR_DATA@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAU_MAPSVR_DATA@@@std@@QAE@XZ PROC	; std::allocator<_MAPSVR_DATA *>::allocator<_MAPSVR_DATA *>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0?$allocator@PAU_MAPSVR_DATA@@@std@@QAE@XZ ENDP	; std::allocator<_MAPSVR_DATA *>::allocator<_MAPSVR_DATA *>
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::erase
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T230731 = -84						; size = 4
$T230732 = -80						; size = 4
$T230733 = -76						; size = 4
$T230734 = -72						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1379 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1380 : 		if (_First == begin() && _Last == end())

  0000c	8d 45 ac	 lea	 eax, DWORD PTR $T230731[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::begin
  00018	50		 push	 eax
  00019	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  0001c	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator==
  00021	0f b6 c8	 movzx	 ecx, al
  00024	85 c9		 test	 ecx, ecx
  00026	74 37		 je	 SHORT $LN2@erase
  00028	8d 45 b0	 lea	 eax, DWORD PTR $T230732[ebp]
  0002b	50		 push	 eax
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::end
  00034	50		 push	 eax
  00035	8d 4d 10	 lea	 ecx, DWORD PTR __Last$[ebp]
  00038	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator==
  0003d	0f b6 c8	 movzx	 ecx, al
  00040	85 c9		 test	 ecx, ecx
  00042	74 1b		 je	 SHORT $LN2@erase

; 1381 : 			{	// erase all
; 1382 : 			clear();

  00044	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::clear

; 1383 : 			return (begin());

  0004c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0004f	50		 push	 eax
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::begin
  00058	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0005b	eb 47		 jmp	 SHORT $LN5@erase

; 1384 : 			}
; 1385 : 		else

  0005d	eb 45		 jmp	 SHORT $LN5@erase
$LN2@erase:

; 1386 : 			{	// partial erase, one at a time
; 1387 : 			while (_First != _Last)

  0005f	8d 45 10	 lea	 eax, DWORD PTR __Last$[ebp]
  00062	50		 push	 eax
  00063	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  00066	e8 00 00 00 00	 call	 ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator!=
  0006b	0f b6 c8	 movzx	 ecx, al
  0006e	85 c9		 test	 ecx, ecx
  00070	74 1f		 je	 SHORT $LN1@erase

; 1388 : 				erase(_First++);

  00072	6a 00		 push	 0
  00074	8d 45 b4	 lea	 eax, DWORD PTR $T230733[ebp]
  00077	50		 push	 eax
  00078	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  0007b	e8 00 00 00 00	 call	 ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++
  00080	8b 08		 mov	 ecx, DWORD PTR [eax]
  00082	51		 push	 ecx
  00083	8d 55 b8	 lea	 edx, DWORD PTR $T230734[ebp]
  00086	52		 push	 edx
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::erase
  0008f	eb ce		 jmp	 SHORT $LN2@erase
$LN1@erase:

; 1389 : 			return (iterator(_First._Ptr, this));

  00091	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00094	50		 push	 eax
  00095	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  00098	51		 push	 ecx
  00099	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0009c	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >
  000a1	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@erase:

; 1390 : 			}
; 1391 : 		}

  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::erase
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@ABH@Z
_TEXT	SEGMENT
__Wherenode$ = -12					; size = 4
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 1741 : 		{	// find leftmost node not less than _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1742 : 		_Nodeptr _Pnode = _Root();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Root
  00014	8b 00		 mov	 eax, DWORD PTR [eax]
  00016	89 45 f8	 mov	 DWORD PTR __Pnode$[ebp], eax

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001f	89 4d f4	 mov	 DWORD PTR __Wherenode$[ebp], ecx
$LN4@Lbound:

; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00022	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  0002b	83 c4 04	 add	 esp, 4
  0002e	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00031	85 c9		 test	 ecx, ecx
  00033	75 4c		 jne	 SHORT $LN3@Lbound

; 1746 : 			if (_DEBUG_LT_PRED(this->comp, this->_Key(_Pnode), _Keyval))

  00035	8b 45 08	 mov	 eax, DWORD PTR __Keyval$[ebp]
  00038	50		 push	 eax
  00039	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0003c	51		 push	 ecx
  0003d	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Key
  00042	83 c4 04	 add	 esp, 4
  00045	50		 push	 eax
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  0004e	0f b6 d0	 movzx	 edx, al
  00051	85 d2		 test	 edx, edx
  00053	74 13		 je	 SHORT $LN2@Lbound

; 1747 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

  00055	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  0005e	83 c4 04	 add	 esp, 4
  00061	8b 08		 mov	 ecx, DWORD PTR [eax]
  00063	89 4d f8	 mov	 DWORD PTR __Pnode$[ebp], ecx

; 1748 : 			else

  00066	eb 17		 jmp	 SHORT $LN1@Lbound
$LN2@Lbound:

; 1749 : 				{	// _Pnode not less than _Keyval, remember it
; 1750 : 				_Wherenode = _Pnode;

  00068	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0006b	89 45 f4	 mov	 DWORD PTR __Wherenode$[ebp], eax

; 1751 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

  0006e	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  00077	83 c4 04	 add	 esp, 4
  0007a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007c	89 4d f8	 mov	 DWORD PTR __Pnode$[ebp], ecx
$LN1@Lbound:

; 1752 : 				}

  0007f	eb a1		 jmp	 SHORT $LN4@Lbound
$LN3@Lbound:

; 1753 : 
; 1754 : 		return (_Wherenode);	// return best remembered candidate

  00081	8b 45 f4	 mov	 eax, DWORD PTR __Wherenode$[ebp]

; 1755 : 		}

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::allocate
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >, COMDAT
; _this$ = ecx

; 542  : 		{	// construct base, and allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	51		 push	 ecx
  0000d	8b cc		 mov	 ecx, esp
  0000f	8d 45 0c	 lea	 eax, DWORD PTR __Al$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??0?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::allocator<std::pair<int const ,_MAPSVR_DATA *> >
  00018	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  0001b	51		 push	 ecx
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ??0?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >

; 543  : 		this->_Mysize = 0;

  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

  0002e	6a 01		 push	 1
  00030	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00036	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::allocate
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 545  : 
; 546  : 		this->_Left(this->_Myhead) = this->_Myhead;

  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  0004d	83 c4 04	 add	 esp, 4
  00050	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00053	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00056	89 08		 mov	 DWORD PTR [eax], ecx

; 547  : 		this->_Parent(this->_Myhead) = this->_Myhead;

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0005e	51		 push	 ecx
  0005f	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00064	83 c4 04	 add	 esp, 4
  00067	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006a	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  0006d	89 08		 mov	 DWORD PTR [eax], ecx

; 548  : 		this->_Right(this->_Myhead) = this->_Myhead;

  0006f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00072	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00075	51		 push	 ecx
  00076	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  0007b	83 c4 04	 add	 esp, 4
  0007e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00081	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00084	89 08		 mov	 DWORD PTR [eax], ecx

; 549  : 		this->_Color(this->_Myhead) = this->_Black;

  00086	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00089	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0008c	51		 push	 ecx
  0008d	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  00092	83 c4 04	 add	 esp, 4
  00095	c6 00 01	 mov	 BYTE PTR [eax], 1

; 550  : 		this->_Isnil(this->_Myhead) = true;

  00098	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0009e	51		 push	 ecx
  0009f	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  000a4	83 c4 04	 add	 esp, 4
  000a7	c6 00 01	 mov	 BYTE PTR [eax], 1

; 551  : 		}

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil, COMDAT

; 611  : 		{	// return reference to nil flag in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 612  : 		return ((char&)(*_Pnode)._Isnil);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0000c	83 c0 15	 add	 eax, 21			; 00000015H

; 613  : 		}

  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left, COMDAT

; 621  : 		{	// return reference to left pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 622  : 		return ((_Nodepref)(*_Pnode)._Left);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 623  : 		}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent, COMDAT

; 626  : 		{	// return reference to parent pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 627  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0000c	83 c0 04	 add	 eax, 4

; 628  : 		}

  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right, COMDAT

; 631  : 		{	// return reference to right pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 632  : 		return ((_Nodepref)(*_Pnode)._Right);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0000c	83 c0 08	 add	 eax, 8

; 633  : 		}

  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Myval, COMDAT

; 636  : 		{	// return reference to value in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 637  : 		return ((reference)(*_Pnode)._Myval);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0000c	83 c0 0c	 add	 eax, 12			; 0000000cH

; 638  : 		}

  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Myval
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::allocator<std::pair<int const ,_MAPSVR_DATA *> >, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::allocator<std::pair<int const ,_MAPSVR_DATA *> >
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 182  : 		::operator delete(_Ptr);

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4

; 183  : 		}

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >, COMDAT
; _this$ = ecx

; 213  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Plist$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>

; 214  : 		}

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 230  : 		{	// return designated value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 231  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 232  : 		if (this->_Getcont() == 0
; 233  : 			|| this->_Ptr == 0
; 234  : 			|| this->_Ptr == ((_Mytree *)this->_Getcont())->_Myhead)
; 235  : 			{	// report error
; 236  : 			_DEBUG_ERROR("map/set iterator not dereferencable");
; 237  : 			_SCL_SECURE_OUT_OF_RANGE;
; 238  : 			}
; 239  : 
; 240  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 241  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 242  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 243  : 			((_Mytree *)this->_Getcont())->_Myhead);
; 244  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 245  : 
; 246  : 		return (_Mytree::_Myval(this->_Ptr));

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Myval
  00017	83 c4 04	 add	 esp, 4

; 247  : 		}

  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	5b		 pop	 ebx
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator++
; Function compile flags: /Odtp /ZI
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 250  : 		{	// preincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 251  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 252  : 		if (this->_Getcont() == 0
; 253  : 			|| this->_Ptr == 0
; 254  : 			|| _Mytree::_Isnil(this->_Ptr))
; 255  : 			{	// report error
; 256  : 			_DEBUG_ERROR("map/set iterator not incrementable");
; 257  : 			_SCL_SECURE_OUT_OF_RANGE;
; 258  : 			}
; 259  : 
; 260  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 261  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 262  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 263  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 264  : 
; 265  : 		++(*(_Mybase *)this);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator++

; 266  : 		return (*this);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 267  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??$_Umove@PAPAU_MAPSVR_DATA@@@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEPAPAU_MAPSVR_DATA@@PAPAU2@00@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Umove<_MAPSVR_DATA * *>
PUBLIC	?allocate@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEPAPAU_MAPSVR_DATA@@I@Z ; std::allocator<_MAPSVR_DATA *>::allocate
EXTRN	__CxxThrowException@8:PROC
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Size$229287 = -28					; size = 4
__Ptr$229280 = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 747  : 		if (max_size() < _Count)

  0002f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?max_size@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::max_size
  00037	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0003a	73 0d		 jae	 SHORT $LN5@reserve

; 748  : 			_Xlen();	// result too long

  0003c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEXXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Xlen
  00044	e9 eb 00 00 00	 jmp	 $LN7@reserve
$LN5@reserve:

; 749  : 		else if (capacity() < _Count)

  00049	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?capacity@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::capacity
  00051	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00054	0f 83 da 00 00
	00		 jae	 $LN7@reserve

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  0005a	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0005d	50		 push	 eax
  0005e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00064	e8 00 00 00 00	 call	 ?allocate@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEPAPAU_MAPSVR_DATA@@I@Z ; std::allocator<_MAPSVR_DATA *>::allocate
  00069	89 45 e8	 mov	 DWORD PTR __Ptr$229280[ebp], eax

; 752  : 
; 753  : 			_TRY_BEGIN

  0006c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  00073	8b 45 e8	 mov	 eax, DWORD PTR __Ptr$229280[ebp]
  00076	50		 push	 eax
  00077	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0007d	52		 push	 edx
  0007e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00081	8b 08		 mov	 ecx, DWORD PTR [eax]
  00083	51		 push	 ecx
  00084	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00087	e8 00 00 00 00	 call	 ??$_Umove@PAPAU_MAPSVR_DATA@@@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEPAPAU_MAPSVR_DATA@@PAPAU2@00@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Umove<_MAPSVR_DATA * *>
  0008c	eb 29		 jmp	 SHORT $LN8@reserve
__catch$?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z$0:

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);

  0008e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00091	50		 push	 eax
  00092	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$229280[ebp]
  00095	51		 push	 ecx
  00096	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0009c	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@I@Z ; std::allocator<_MAPSVR_DATA *>::deallocate

; 757  : 			_RERAISE;

  000a1	6a 00		 push	 0
  000a3	6a 00		 push	 0
  000a5	e8 00 00 00 00	 call	 __CxxThrowException@8

; 758  : 			_CATCH_END

  000aa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000b1	b8 00 00 00 00	 mov	 eax, __tryend$?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z$1
  000b6	c3		 ret	 0
$LN8@reserve:
  000b7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z$1:

; 759  : 
; 760  : 			size_type _Size = size();

  000be	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	e8 00 00 00 00	 call	 ?size@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::size
  000c6	89 45 e4	 mov	 DWORD PTR __Size$229287[ebp], eax

; 761  : 			if (this->_Myfirst != 0)

  000c9	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000cc	83 38 00	 cmp	 DWORD PTR [eax], 0
  000cf	74 35		 je	 SHORT $LN1@reserve

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);

  000d1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000d4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d7	51		 push	 ecx
  000d8	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000db	8b 02		 mov	 eax, DWORD PTR [edx]
  000dd	50		 push	 eax
  000de	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXPAPAU_MAPSVR_DATA@@0@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Destroy

; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  000e6	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000e9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ec	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000ef	2b 11		 sub	 edx, DWORD PTR [ecx]
  000f1	c1 fa 02	 sar	 edx, 2
  000f4	52		 push	 edx
  000f5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fa	51		 push	 ecx
  000fb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000fe	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00101	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@I@Z ; std::allocator<_MAPSVR_DATA *>::deallocate
$LN1@reserve:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  00106	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00109	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 769  : 			this->_Myend = _Ptr + _Count;

  0010e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00111	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$229280[ebp]
  00114	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00117	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0011a	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 770  : 			this->_Mylast = _Ptr + _Size;

  0011d	8b 45 e4	 mov	 eax, DWORD PTR __Size$229287[ebp]
  00120	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$229280[ebp]
  00123	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00126	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00129	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 771  : 			this->_Myfirst = _Ptr;

  0012c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0012f	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$229280[ebp]
  00132	89 08		 mov	 DWORD PTR [eax], ecx
$LN7@reserve:

; 772  : 			}
; 773  : 		}

  00134	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00137	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0013e	59		 pop	 ecx
  0013f	5f		 pop	 edi
  00140	5e		 pop	 esi
  00141	5b		 pop	 ebx
  00142	8b e5		 mov	 esp, ebp
  00144	5d		 pop	 ebp
  00145	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::reserve
; Function compile flags: /Odtp /ZI
;	COMDAT ?capacity@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::capacity, COMDAT
; _this$ = ecx

; 776  : 		{	// return current length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00015	2b 01		 sub	 eax, DWORD PTR [ecx]
  00017	c1 f8 02	 sar	 eax, 2

; 778  : 		}

  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	5b		 pop	 ebx
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?capacity@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::capacity
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAU_MAPSVR_DATA@@@std@@QBEIXZ ; std::allocator<_MAPSVR_DATA *>::max_size
; Function compile flags: /Odtp /ZI
;	COMDAT ?max_size@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::max_size, COMDAT
; _this$ = ecx

; 883  : 		{	// return maximum possible length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 884  : 		return (this->_Alval.max_size());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00012	e8 00 00 00 00	 call	 ?max_size@?$allocator@PAU_MAPSVR_DATA@@@std@@QBEIXZ ; std::allocator<_MAPSVR_DATA *>::max_size

; 885  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?max_size@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::max_size
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAXPAPAU_MAPSVR_DATA@@0AAV?$allocator@PAU_MAPSVR_DATA@@@0@@Z ; std::_Destroy_range<std::allocator<_MAPSVR_DATA *> >
; Function compile flags: /Odtp /ZI
;	COMDAT ?_Destroy@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXPAPAU_MAPSVR_DATA@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXPAPAU_MAPSVR_DATA@@0@Z PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Destroy, COMDAT
; _this$ = ecx

; 1269 : 		{	// destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 0c	 add	 eax, 12			; 0000000cH
  00012	50		 push	 eax
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0001a	52		 push	 edx
  0001b	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAXPAPAU_MAPSVR_DATA@@0AAV?$allocator@PAU_MAPSVR_DATA@@@0@@Z ; std::_Destroy_range<std::allocator<_MAPSVR_DATA *> >
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1271 : 		}

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 08 00	 ret	 8
?_Destroy@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXPAPAU_MAPSVR_DATA@@0@Z ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Destroy
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Grow_to@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -76						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEII@Z PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1275 : 		size_type _Capacity = capacity();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?capacity@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::capacity
  00014	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?max_size@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::max_size
  0001f	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00022	d1 e9		 shr	 ecx, 1
  00024	2b c1		 sub	 eax, ecx
  00026	3b 45 f8	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  00029	73 09		 jae	 SHORT $LN4@Grow_to
  0002b	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
  00032	eb 0b		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00034	8b 55 f8	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00037	d1 ea		 shr	 edx, 1
  00039	03 55 f8	 add	 edx, DWORD PTR __Capacity$[ebp]
  0003c	89 55 b4	 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  0003f	8b 45 b4	 mov	 eax, DWORD PTR tv73[ebp]
  00042	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax

; 1279 : 		if (_Capacity < _Count)

  00045	8b 45 f8	 mov	 eax, DWORD PTR __Capacity$[ebp]
  00048	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0004b	73 06		 jae	 SHORT $LN1@Grow_to

; 1280 : 			_Capacity = _Count;

  0004d	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00050	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
$LN1@Grow_to:

; 1281 : 		return (_Capacity);

  00053	8b 45 f8	 mov	 eax, DWORD PTR __Capacity$[ebp]

; 1282 : 		}

  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
?_Grow_to@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEII@Z ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Grow_to
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEXXZ PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Xlen, COMDAT
; _this$ = ecx

; 1426 : 		{	// report a length_error

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00011	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN2@Xlen:

; 1428 : 		}

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?_Xlen@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEXXZ ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Xlen
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAU_MAPSVR_DATA@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@PAU_MAPSVR_DATA@@@std@@QAE@ABV01@@Z PROC	; std::allocator<_MAPSVR_DATA *>::allocator<_MAPSVR_DATA *>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0?$allocator@PAU_MAPSVR_DATA@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<_MAPSVR_DATA *>::allocator<_MAPSVR_DATA *>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@I@Z PROC ; std::allocator<_MAPSVR_DATA *>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 182  : 		::operator delete(_Ptr);

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4

; 183  : 		}

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
?deallocate@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@I@Z ENDP ; std::allocator<_MAPSVR_DATA *>::deallocate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rrotate
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lrotate
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
PUBLIC	?_Max@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Max
PUBLIC	?_Min@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Min
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
; File d:\microsoft visual studio 10.0\vc\include\xtree
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv182 = -88						; size = 4
tv170 = -88						; size = 4
__Pnode$ = -20						; size = 4
__Fixnodeparent$ = -16					; size = 4
__Fixnode$ = -12					; size = 4
__Erasednode$ = -8					; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1195 : 		{	// erase element at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 		if (_Where._Getcont() != this || this->_Isnil(_Where._Mynode()))
; 1198 : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 1199 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1200 : 		++_Where;	// save successor iterator for return
; 1201 : 		_Orphan_ptr(*this, _Erasednode);
; 1202 : 
; 1203 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1204 : 		if (this->_Isnil(_Where._Mynode()))

  0000c	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::_Mynode
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  0001a	83 c4 04	 add	 esp, 4
  0001d	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00020	85 c0		 test	 eax, eax
  00022	74 0a		 je	 SHORT $LN40@erase@2

; 1205 : 			_Xout_of_range("invalid map/set<T> iterator");

  00024	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00029	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN40@erase@2:

; 1206 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  0002e	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::_Mynode
  00036	89 45 f8	 mov	 DWORD PTR __Erasednode$[ebp], eax

; 1207 : 		++_Where;	// save successor iterator for return

  00039	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0003c	e8 00 00 00 00	 call	 ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1211 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1212 : 		_Nodeptr _Pnode = _Erasednode;

  00041	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  00044	89 45 ec	 mov	 DWORD PTR __Pnode$[ebp], eax

; 1213 : 
; 1214 : 		if (this->_Isnil(this->_Left(_Pnode)))

  00047	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  00050	83 c4 04	 add	 esp, 4
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	51		 push	 ecx
  00056	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  0005b	83 c4 04	 add	 esp, 4
  0005e	0f be 10	 movsx	 edx, BYTE PTR [eax]
  00061	85 d2		 test	 edx, edx
  00063	74 13		 je	 SHORT $LN39@erase@2

; 1215 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

  00065	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  0006e	83 c4 04	 add	 esp, 4
  00071	8b 08		 mov	 ecx, DWORD PTR [eax]
  00073	89 4d f4	 mov	 DWORD PTR __Fixnode$[ebp], ecx
  00076	eb 4d		 jmp	 SHORT $LN38@erase@2
$LN39@erase@2:

; 1216 : 		else if (this->_Isnil(this->_Right(_Pnode)))

  00078	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  00081	83 c4 04	 add	 esp, 4
  00084	8b 08		 mov	 ecx, DWORD PTR [eax]
  00086	51		 push	 ecx
  00087	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  0008c	83 c4 04	 add	 esp, 4
  0008f	0f be 10	 movsx	 edx, BYTE PTR [eax]
  00092	85 d2		 test	 edx, edx
  00094	74 13		 je	 SHORT $LN37@erase@2

; 1217 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

  00096	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  0009f	83 c4 04	 add	 esp, 4
  000a2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a4	89 4d f4	 mov	 DWORD PTR __Fixnode$[ebp], ecx

; 1218 : 		else

  000a7	eb 1c		 jmp	 SHORT $LN38@erase@2
$LN37@erase@2:

; 1219 : 			{	// two subtrees, must lift successor node to replace erased
; 1220 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

  000a9	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  000ac	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::_Mynode
  000b1	89 45 ec	 mov	 DWORD PTR __Pnode$[ebp], eax

; 1221 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

  000b4	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  000bd	83 c4 04	 add	 esp, 4
  000c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c2	89 4d f4	 mov	 DWORD PTR __Fixnode$[ebp], ecx
$LN38@erase@2:

; 1222 : 			}
; 1223 : 
; 1224 : 		if (_Pnode == _Erasednode)

  000c5	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  000c8	3b 45 f8	 cmp	 eax, DWORD PTR __Erasednode$[ebp]
  000cb	0f 85 1b 01 00
	00		 jne	 $LN35@erase@2

; 1225 : 			{	// at most one subtree, relink it
; 1226 : 			_Fixnodeparent = this->_Parent(_Erasednode);

  000d1	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  000d4	50		 push	 eax
  000d5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  000da	83 c4 04	 add	 esp, 4
  000dd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000df	89 4d f0	 mov	 DWORD PTR __Fixnodeparent$[ebp], ecx

; 1227 : 			if (!this->_Isnil(_Fixnode))

  000e2	8b 45 f4	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  000e5	50		 push	 eax
  000e6	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  000eb	83 c4 04	 add	 esp, 4
  000ee	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  000f1	85 c9		 test	 ecx, ecx
  000f3	75 11		 jne	 SHORT $LN34@erase@2

; 1228 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000f5	8b 45 f4	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  000fe	83 c4 04	 add	 esp, 4
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  00104	89 08		 mov	 DWORD PTR [eax], ecx
$LN34@erase@2:

; 1229 : 
; 1230 : 			if (_Root() == _Erasednode)

  00106	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00109	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Root
  0010e	8b 00		 mov	 eax, DWORD PTR [eax]
  00110	3b 45 f8	 cmp	 eax, DWORD PTR __Erasednode$[ebp]
  00113	75 0f		 jne	 SHORT $LN33@erase@2

; 1231 : 				_Root() = _Fixnode;	// link down from root

  00115	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00118	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Root
  0011d	8b 4d f4	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  00120	89 08		 mov	 DWORD PTR [eax], ecx
  00122	eb 37		 jmp	 SHORT $LN32@erase@2
$LN33@erase@2:

; 1232 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

  00124	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00127	50		 push	 eax
  00128	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  0012d	83 c4 04	 add	 esp, 4
  00130	8b 08		 mov	 ecx, DWORD PTR [eax]
  00132	3b 4d f8	 cmp	 ecx, DWORD PTR __Erasednode$[ebp]
  00135	75 13		 jne	 SHORT $LN31@erase@2

; 1233 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  00137	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  0013a	50		 push	 eax
  0013b	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  00140	83 c4 04	 add	 esp, 4
  00143	8b 4d f4	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  00146	89 08		 mov	 DWORD PTR [eax], ecx

; 1234 : 			else

  00148	eb 11		 jmp	 SHORT $LN32@erase@2
$LN31@erase@2:

; 1235 : 				this->_Right(_Fixnodeparent) =
; 1236 : 					_Fixnode;	// link down to right

  0014a	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  0014d	50		 push	 eax
  0014e	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  00153	83 c4 04	 add	 esp, 4
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  00159	89 08		 mov	 DWORD PTR [eax], ecx
$LN32@erase@2:

; 1237 : 
; 1238 : 			if (_Lmost() == _Erasednode)

  0015b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0015e	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lmost
  00163	8b 00		 mov	 eax, DWORD PTR [eax]
  00165	3b 45 f8	 cmp	 eax, DWORD PTR __Erasednode$[ebp]
  00168	75 37		 jne	 SHORT $LN29@erase@2

; 1239 : 				_Lmost() = this->_Isnil(_Fixnode)
; 1240 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1241 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree

  0016a	8b 45 f4	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  0016d	50		 push	 eax
  0016e	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  00173	83 c4 04	 add	 esp, 4
  00176	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00179	85 c9		 test	 ecx, ecx
  0017b	74 08		 je	 SHORT $LN43@erase@2
  0017d	8b 55 f0	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  00180	89 55 a8	 mov	 DWORD PTR tv170[ebp], edx
  00183	eb 0f		 jmp	 SHORT $LN44@erase@2
$LN43@erase@2:
  00185	8b 45 f4	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  00188	50		 push	 eax
  00189	e8 00 00 00 00	 call	 ?_Min@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Min
  0018e	83 c4 04	 add	 esp, 4
  00191	89 45 a8	 mov	 DWORD PTR tv170[ebp], eax
$LN44@erase@2:
  00194	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00197	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lmost
  0019c	8b 4d a8	 mov	 ecx, DWORD PTR tv170[ebp]
  0019f	89 08		 mov	 DWORD PTR [eax], ecx
$LN29@erase@2:

; 1242 : 
; 1243 : 			if (_Rmost() == _Erasednode)

  001a1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001a4	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rmost
  001a9	8b 00		 mov	 eax, DWORD PTR [eax]
  001ab	3b 45 f8	 cmp	 eax, DWORD PTR __Erasednode$[ebp]
  001ae	75 37		 jne	 SHORT $LN28@erase@2

; 1244 : 				_Rmost() = this->_Isnil(_Fixnode)
; 1245 : 					? _Fixnodeparent	// largest is parent of erased node
; 1246 : 					: this->_Max(_Fixnode);	// largest in relinked subtree

  001b0	8b 45 f4	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  001b3	50		 push	 eax
  001b4	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  001b9	83 c4 04	 add	 esp, 4
  001bc	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  001bf	85 c9		 test	 ecx, ecx
  001c1	74 08		 je	 SHORT $LN45@erase@2
  001c3	8b 55 f0	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  001c6	89 55 a8	 mov	 DWORD PTR tv182[ebp], edx
  001c9	eb 0f		 jmp	 SHORT $LN46@erase@2
$LN45@erase@2:
  001cb	8b 45 f4	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  001ce	50		 push	 eax
  001cf	e8 00 00 00 00	 call	 ?_Max@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Max
  001d4	83 c4 04	 add	 esp, 4
  001d7	89 45 a8	 mov	 DWORD PTR tv182[ebp], eax
$LN46@erase@2:
  001da	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001dd	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rmost
  001e2	8b 4d a8	 mov	 ecx, DWORD PTR tv182[ebp]
  001e5	89 08		 mov	 DWORD PTR [eax], ecx
$LN28@erase@2:

; 1247 : 			}
; 1248 : 		else

  001e7	e9 8e 01 00 00	 jmp	 $LN27@erase@2
$LN35@erase@2:

; 1249 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1250 : 			this->_Parent(this->_Left(_Erasednode)) =
; 1251 : 				_Pnode;	// link left up

  001ec	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  001ef	50		 push	 eax
  001f0	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  001f5	83 c4 04	 add	 esp, 4
  001f8	8b 08		 mov	 ecx, DWORD PTR [eax]
  001fa	51		 push	 ecx
  001fb	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00200	83 c4 04	 add	 esp, 4
  00203	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00206	89 10		 mov	 DWORD PTR [eax], edx

; 1252 : 			this->_Left(_Pnode) =
; 1253 : 				this->_Left(_Erasednode);	// link successor down

  00208	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  0020b	50		 push	 eax
  0020c	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  00211	83 c4 04	 add	 esp, 4
  00214	8b f0		 mov	 esi, eax
  00216	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00219	51		 push	 ecx
  0021a	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  0021f	83 c4 04	 add	 esp, 4
  00222	8b 16		 mov	 edx, DWORD PTR [esi]
  00224	89 10		 mov	 DWORD PTR [eax], edx

; 1254 : 
; 1255 : 			if (_Pnode == this->_Right(_Erasednode))

  00226	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  00229	50		 push	 eax
  0022a	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  0022f	83 c4 04	 add	 esp, 4
  00232	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00235	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00237	75 0b		 jne	 SHORT $LN26@erase@2

; 1256 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00239	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0023c	89 45 f0	 mov	 DWORD PTR __Fixnodeparent$[ebp], eax

; 1257 : 			else

  0023f	e9 80 00 00 00	 jmp	 $LN25@erase@2
$LN26@erase@2:

; 1258 : 				{	// successor further down, link in place of erased
; 1259 : 				_Fixnodeparent =
; 1260 : 					this->_Parent(_Pnode);	// parent is successor's

  00244	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00247	50		 push	 eax
  00248	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  0024d	83 c4 04	 add	 esp, 4
  00250	8b 08		 mov	 ecx, DWORD PTR [eax]
  00252	89 4d f0	 mov	 DWORD PTR __Fixnodeparent$[ebp], ecx

; 1261 : 				if (!this->_Isnil(_Fixnode))

  00255	8b 45 f4	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  00258	50		 push	 eax
  00259	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  0025e	83 c4 04	 add	 esp, 4
  00261	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00264	85 c9		 test	 ecx, ecx
  00266	75 11		 jne	 SHORT $LN24@erase@2

; 1262 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00268	8b 45 f4	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  0026b	50		 push	 eax
  0026c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00271	83 c4 04	 add	 esp, 4
  00274	8b 4d f0	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  00277	89 08		 mov	 DWORD PTR [eax], ecx
$LN24@erase@2:

; 1263 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00279	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  00282	83 c4 04	 add	 esp, 4
  00285	8b 4d f4	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  00288	89 08		 mov	 DWORD PTR [eax], ecx

; 1264 : 				this->_Right(_Pnode) =
; 1265 : 					this->_Right(_Erasednode);	// link next down

  0028a	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  0028d	50		 push	 eax
  0028e	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  00293	83 c4 04	 add	 esp, 4
  00296	8b f0		 mov	 esi, eax
  00298	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0029b	51		 push	 ecx
  0029c	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  002a1	83 c4 04	 add	 esp, 4
  002a4	8b 16		 mov	 edx, DWORD PTR [esi]
  002a6	89 10		 mov	 DWORD PTR [eax], edx

; 1266 : 				this->_Parent(this->_Right(_Erasednode)) =
; 1267 : 					_Pnode;	// right up

  002a8	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  002ab	50		 push	 eax
  002ac	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  002b1	83 c4 04	 add	 esp, 4
  002b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  002b6	51		 push	 ecx
  002b7	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  002bc	83 c4 04	 add	 esp, 4
  002bf	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$[ebp]
  002c2	89 10		 mov	 DWORD PTR [eax], edx
$LN25@erase@2:

; 1268 : 				}
; 1269 : 
; 1270 : 			if (_Root() == _Erasednode)

  002c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002c7	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Root
  002cc	8b 00		 mov	 eax, DWORD PTR [eax]
  002ce	3b 45 f8	 cmp	 eax, DWORD PTR __Erasednode$[ebp]
  002d1	75 0f		 jne	 SHORT $LN23@erase@2

; 1271 : 				_Root() = _Pnode;	// link down from root

  002d3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002d6	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Root
  002db	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  002de	89 08		 mov	 DWORD PTR [eax], ecx
  002e0	eb 58		 jmp	 SHORT $LN22@erase@2
$LN23@erase@2:

; 1272 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

  002e2	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  002e5	50		 push	 eax
  002e6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  002eb	83 c4 04	 add	 esp, 4
  002ee	8b 08		 mov	 ecx, DWORD PTR [eax]
  002f0	51		 push	 ecx
  002f1	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  002f6	83 c4 04	 add	 esp, 4
  002f9	8b 10		 mov	 edx, DWORD PTR [eax]
  002fb	3b 55 f8	 cmp	 edx, DWORD PTR __Erasednode$[ebp]
  002fe	75 1e		 jne	 SHORT $LN21@erase@2

; 1273 : 				this->_Left(this->_Parent(_Erasednode)) =
; 1274 : 					_Pnode;	// link down to left

  00300	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  00303	50		 push	 eax
  00304	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00309	83 c4 04	 add	 esp, 4
  0030c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0030e	51		 push	 ecx
  0030f	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  00314	83 c4 04	 add	 esp, 4
  00317	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0031a	89 10		 mov	 DWORD PTR [eax], edx

; 1275 : 			else

  0031c	eb 1c		 jmp	 SHORT $LN22@erase@2
$LN21@erase@2:

; 1276 : 				this->_Right(this->_Parent(_Erasednode)) =
; 1277 : 					_Pnode;	// link down to right

  0031e	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  00321	50		 push	 eax
  00322	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00327	83 c4 04	 add	 esp, 4
  0032a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0032c	51		 push	 ecx
  0032d	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  00332	83 c4 04	 add	 esp, 4
  00335	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00338	89 10		 mov	 DWORD PTR [eax], edx
$LN22@erase@2:

; 1278 : 
; 1279 : 			this->_Parent(_Pnode) =
; 1280 : 				this->_Parent(_Erasednode);	// link successor up

  0033a	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  0033d	50		 push	 eax
  0033e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00343	83 c4 04	 add	 esp, 4
  00346	8b f0		 mov	 esi, eax
  00348	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0034b	51		 push	 ecx
  0034c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00351	83 c4 04	 add	 esp, 4
  00354	8b 16		 mov	 edx, DWORD PTR [esi]
  00356	89 10		 mov	 DWORD PTR [eax], edx

; 1281 : 			_STD swap(this->_Color(_Pnode),
; 1282 : 				this->_Color(_Erasednode));	// recolor it

  00358	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  0035b	50		 push	 eax
  0035c	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  00361	83 c4 04	 add	 esp, 4
  00364	50		 push	 eax
  00365	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00368	51		 push	 ecx
  00369	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  0036e	83 c4 04	 add	 esp, 4
  00371	50		 push	 eax
  00372	e8 00 00 00 00	 call	 ??$swap@D@std@@YAXAAD0@Z ; std::swap<char>
  00377	83 c4 08	 add	 esp, 8
$LN27@erase@2:

; 1283 : 			}
; 1284 : 
; 1285 : 		if (this->_Color(_Erasednode) == this->_Black)

  0037a	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  0037d	50		 push	 eax
  0037e	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  00383	83 c4 04	 add	 esp, 4
  00386	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00389	83 f9 01	 cmp	 ecx, 1
  0038c	0f 85 8f 03 00
	00		 jne	 $LN19@erase@2
  00392	eb 11		 jmp	 SHORT $LN18@erase@2
$LN17@erase@2:

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  00394	8b 45 f4	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  00397	50		 push	 eax
  00398	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  0039d	83 c4 04	 add	 esp, 4
  003a0	8b 08		 mov	 ecx, DWORD PTR [eax]
  003a2	89 4d f0	 mov	 DWORD PTR __Fixnodeparent$[ebp], ecx
$LN18@erase@2:
  003a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003a8	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Root
  003ad	8b 4d f4	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  003b0	3b 08		 cmp	 ecx, DWORD PTR [eax]
  003b2	0f 84 5a 03 00
	00		 je	 $LN16@erase@2
  003b8	8b 45 f4	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  003bb	50		 push	 eax
  003bc	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  003c1	83 c4 04	 add	 esp, 4
  003c4	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  003c7	83 f9 01	 cmp	 ecx, 1
  003ca	0f 85 42 03 00
	00		 jne	 $LN16@erase@2

; 1290 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

  003d0	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  003d3	50		 push	 eax
  003d4	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  003d9	83 c4 04	 add	 esp, 4
  003dc	8b 4d f4	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  003df	3b 08		 cmp	 ecx, DWORD PTR [eax]
  003e1	0f 85 97 01 00
	00		 jne	 $LN15@erase@2

; 1291 : 					{	// fixup left subtree
; 1292 : 					_Pnode = this->_Right(_Fixnodeparent);

  003e7	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  003ea	50		 push	 eax
  003eb	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  003f0	83 c4 04	 add	 esp, 4
  003f3	8b 08		 mov	 ecx, DWORD PTR [eax]
  003f5	89 4d ec	 mov	 DWORD PTR __Pnode$[ebp], ecx

; 1293 : 					if (this->_Color(_Pnode) == this->_Red)

  003f8	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  003fb	50		 push	 eax
  003fc	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  00401	83 c4 04	 add	 esp, 4
  00404	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00407	85 c9		 test	 ecx, ecx
  00409	75 3b		 jne	 SHORT $LN14@erase@2

; 1294 : 						{	// rotate red up from right subtree
; 1295 : 						this->_Color(_Pnode) = this->_Black;

  0040b	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0040e	50		 push	 eax
  0040f	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  00414	83 c4 04	 add	 esp, 4
  00417	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1296 : 						this->_Color(_Fixnodeparent) = this->_Red;

  0041a	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  0041d	50		 push	 eax
  0041e	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  00423	83 c4 04	 add	 esp, 4
  00426	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1297 : 						_Lrotate(_Fixnodeparent);

  00429	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  0042c	50		 push	 eax
  0042d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00430	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lrotate

; 1298 : 						_Pnode = this->_Right(_Fixnodeparent);

  00435	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00438	50		 push	 eax
  00439	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  0043e	83 c4 04	 add	 esp, 4
  00441	8b 08		 mov	 ecx, DWORD PTR [eax]
  00443	89 4d ec	 mov	 DWORD PTR __Pnode$[ebp], ecx
$LN14@erase@2:

; 1299 : 						}
; 1300 : 
; 1301 : 					if (this->_Isnil(_Pnode))

  00446	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00449	50		 push	 eax
  0044a	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  0044f	83 c4 04	 add	 esp, 4
  00452	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00455	85 c9		 test	 ecx, ecx
  00457	74 0b		 je	 SHORT $LN13@erase@2

; 1302 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

  00459	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  0045c	89 45 f4	 mov	 DWORD PTR __Fixnode$[ebp], eax

; 1303 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

  0045f	e9 15 01 00 00	 jmp	 $LN12@erase@2
$LN13@erase@2:

; 1304 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

  00464	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00467	50		 push	 eax
  00468	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  0046d	83 c4 04	 add	 esp, 4
  00470	8b 08		 mov	 ecx, DWORD PTR [eax]
  00472	51		 push	 ecx
  00473	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  00478	83 c4 04	 add	 esp, 4
  0047b	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0047e	83 fa 01	 cmp	 edx, 1
  00481	75 39		 jne	 SHORT $LN11@erase@2
  00483	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00486	50		 push	 eax
  00487	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  0048c	83 c4 04	 add	 esp, 4
  0048f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00491	51		 push	 ecx
  00492	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  00497	83 c4 04	 add	 esp, 4
  0049a	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0049d	83 fa 01	 cmp	 edx, 1
  004a0	75 1a		 jne	 SHORT $LN11@erase@2

; 1305 : 						{	// redden right subtree with black children
; 1306 : 						this->_Color(_Pnode) = this->_Red;

  004a2	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  004a5	50		 push	 eax
  004a6	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  004ab	83 c4 04	 add	 esp, 4
  004ae	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1307 : 						_Fixnode = _Fixnodeparent;

  004b1	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  004b4	89 45 f4	 mov	 DWORD PTR __Fixnode$[ebp], eax

; 1308 : 						}
; 1309 : 					else

  004b7	e9 bd 00 00 00	 jmp	 $LN12@erase@2
$LN11@erase@2:

; 1310 : 						{	// must rearrange right subtree
; 1311 : 						if (this->_Color(this->_Right(_Pnode))
; 1312 : 							== this->_Black)

  004bc	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  004bf	50		 push	 eax
  004c0	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  004c5	83 c4 04	 add	 esp, 4
  004c8	8b 08		 mov	 ecx, DWORD PTR [eax]
  004ca	51		 push	 ecx
  004cb	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  004d0	83 c4 04	 add	 esp, 4
  004d3	0f be 10	 movsx	 edx, BYTE PTR [eax]
  004d6	83 fa 01	 cmp	 edx, 1
  004d9	75 46		 jne	 SHORT $LN9@erase@2

; 1313 : 							{	// rotate red up from left sub-subtree
; 1314 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

  004db	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  004de	50		 push	 eax
  004df	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  004e4	83 c4 04	 add	 esp, 4
  004e7	8b 08		 mov	 ecx, DWORD PTR [eax]
  004e9	51		 push	 ecx
  004ea	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  004ef	83 c4 04	 add	 esp, 4
  004f2	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1315 : 							this->_Color(_Pnode) = this->_Red;

  004f5	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  004f8	50		 push	 eax
  004f9	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  004fe	83 c4 04	 add	 esp, 4
  00501	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1316 : 							_Rrotate(_Pnode);

  00504	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00507	50		 push	 eax
  00508	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0050b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rrotate

; 1317 : 							_Pnode = this->_Right(_Fixnodeparent);

  00510	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00513	50		 push	 eax
  00514	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  00519	83 c4 04	 add	 esp, 4
  0051c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0051e	89 4d ec	 mov	 DWORD PTR __Pnode$[ebp], ecx
$LN9@erase@2:

; 1318 : 							}
; 1319 : 
; 1320 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  00521	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00524	50		 push	 eax
  00525	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  0052a	83 c4 04	 add	 esp, 4
  0052d	8b f0		 mov	 esi, eax
  0052f	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00532	51		 push	 ecx
  00533	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  00538	83 c4 04	 add	 esp, 4
  0053b	8a 16		 mov	 dl, BYTE PTR [esi]
  0053d	88 10		 mov	 BYTE PTR [eax], dl

; 1321 : 						this->_Color(_Fixnodeparent) = this->_Black;

  0053f	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00542	50		 push	 eax
  00543	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  00548	83 c4 04	 add	 esp, 4
  0054b	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1322 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;

  0054e	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00551	50		 push	 eax
  00552	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  00557	83 c4 04	 add	 esp, 4
  0055a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0055c	51		 push	 ecx
  0055d	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  00562	83 c4 04	 add	 esp, 4
  00565	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1323 : 						_Lrotate(_Fixnodeparent);

  00568	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  0056b	50		 push	 eax
  0056c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0056f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lrotate

; 1324 : 						break;	// tree now recolored/rebalanced

  00574	e9 99 01 00 00	 jmp	 $LN16@erase@2
$LN12@erase@2:

; 1325 : 						}
; 1326 : 					}
; 1327 : 				else

  00579	e9 8f 01 00 00	 jmp	 $LN8@erase@2
$LN15@erase@2:

; 1328 : 					{	// fixup right subtree
; 1329 : 					_Pnode = this->_Left(_Fixnodeparent);

  0057e	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00581	50		 push	 eax
  00582	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  00587	83 c4 04	 add	 esp, 4
  0058a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0058c	89 4d ec	 mov	 DWORD PTR __Pnode$[ebp], ecx

; 1330 : 					if (this->_Color(_Pnode) == this->_Red)

  0058f	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00592	50		 push	 eax
  00593	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  00598	83 c4 04	 add	 esp, 4
  0059b	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0059e	85 c9		 test	 ecx, ecx
  005a0	75 3b		 jne	 SHORT $LN7@erase@2

; 1331 : 						{	// rotate red up from left subtree
; 1332 : 						this->_Color(_Pnode) = this->_Black;

  005a2	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  005a5	50		 push	 eax
  005a6	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  005ab	83 c4 04	 add	 esp, 4
  005ae	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1333 : 						this->_Color(_Fixnodeparent) = this->_Red;

  005b1	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  005b4	50		 push	 eax
  005b5	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  005ba	83 c4 04	 add	 esp, 4
  005bd	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1334 : 						_Rrotate(_Fixnodeparent);

  005c0	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  005c3	50		 push	 eax
  005c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005c7	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rrotate

; 1335 : 						_Pnode = this->_Left(_Fixnodeparent);

  005cc	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  005cf	50		 push	 eax
  005d0	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  005d5	83 c4 04	 add	 esp, 4
  005d8	8b 08		 mov	 ecx, DWORD PTR [eax]
  005da	89 4d ec	 mov	 DWORD PTR __Pnode$[ebp], ecx
$LN7@erase@2:

; 1336 : 						}
; 1337 : 					if (this->_Isnil(_Pnode))

  005dd	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  005e0	50		 push	 eax
  005e1	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  005e6	83 c4 04	 add	 esp, 4
  005e9	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  005ec	85 c9		 test	 ecx, ecx
  005ee	74 0b		 je	 SHORT $LN6@erase@2

; 1338 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

  005f0	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  005f3	89 45 f4	 mov	 DWORD PTR __Fixnode$[ebp], eax

; 1339 : 					else if (this->_Color(this->_Right(_Pnode)) ==

  005f6	e9 12 01 00 00	 jmp	 $LN8@erase@2
$LN6@erase@2:

; 1340 : 						this->_Black
; 1341 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

  005fb	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  005fe	50		 push	 eax
  005ff	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  00604	83 c4 04	 add	 esp, 4
  00607	8b 08		 mov	 ecx, DWORD PTR [eax]
  00609	51		 push	 ecx
  0060a	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  0060f	83 c4 04	 add	 esp, 4
  00612	0f be 10	 movsx	 edx, BYTE PTR [eax]
  00615	83 fa 01	 cmp	 edx, 1
  00618	75 39		 jne	 SHORT $LN4@erase@2
  0061a	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0061d	50		 push	 eax
  0061e	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  00623	83 c4 04	 add	 esp, 4
  00626	8b 08		 mov	 ecx, DWORD PTR [eax]
  00628	51		 push	 ecx
  00629	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  0062e	83 c4 04	 add	 esp, 4
  00631	0f be 10	 movsx	 edx, BYTE PTR [eax]
  00634	83 fa 01	 cmp	 edx, 1
  00637	75 1a		 jne	 SHORT $LN4@erase@2

; 1342 : 						{	// redden left subtree with black children
; 1343 : 						this->_Color(_Pnode) = this->_Red;

  00639	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0063c	50		 push	 eax
  0063d	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  00642	83 c4 04	 add	 esp, 4
  00645	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1344 : 						_Fixnode = _Fixnodeparent;

  00648	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  0064b	89 45 f4	 mov	 DWORD PTR __Fixnode$[ebp], eax

; 1345 : 						}
; 1346 : 					else

  0064e	e9 ba 00 00 00	 jmp	 $LN8@erase@2
$LN4@erase@2:

; 1347 : 						{	// must rearrange left subtree
; 1348 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

  00653	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00656	50		 push	 eax
  00657	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  0065c	83 c4 04	 add	 esp, 4
  0065f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00661	51		 push	 ecx
  00662	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  00667	83 c4 04	 add	 esp, 4
  0066a	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0066d	83 fa 01	 cmp	 edx, 1
  00670	75 46		 jne	 SHORT $LN2@erase@2

; 1349 : 							{	// rotate red up from right sub-subtree
; 1350 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

  00672	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00675	50		 push	 eax
  00676	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  0067b	83 c4 04	 add	 esp, 4
  0067e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00680	51		 push	 ecx
  00681	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  00686	83 c4 04	 add	 esp, 4
  00689	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1351 : 							this->_Color(_Pnode) = this->_Red;

  0068c	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0068f	50		 push	 eax
  00690	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  00695	83 c4 04	 add	 esp, 4
  00698	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1352 : 							_Lrotate(_Pnode);

  0069b	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0069e	50		 push	 eax
  0069f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006a2	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lrotate

; 1353 : 							_Pnode = this->_Left(_Fixnodeparent);

  006a7	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  006aa	50		 push	 eax
  006ab	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  006b0	83 c4 04	 add	 esp, 4
  006b3	8b 08		 mov	 ecx, DWORD PTR [eax]
  006b5	89 4d ec	 mov	 DWORD PTR __Pnode$[ebp], ecx
$LN2@erase@2:

; 1354 : 							}
; 1355 : 
; 1356 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  006b8	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  006bb	50		 push	 eax
  006bc	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  006c1	83 c4 04	 add	 esp, 4
  006c4	8b f0		 mov	 esi, eax
  006c6	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  006c9	51		 push	 ecx
  006ca	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  006cf	83 c4 04	 add	 esp, 4
  006d2	8a 16		 mov	 dl, BYTE PTR [esi]
  006d4	88 10		 mov	 BYTE PTR [eax], dl

; 1357 : 						this->_Color(_Fixnodeparent) = this->_Black;

  006d6	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  006d9	50		 push	 eax
  006da	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  006df	83 c4 04	 add	 esp, 4
  006e2	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1358 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;

  006e5	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  006e8	50		 push	 eax
  006e9	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  006ee	83 c4 04	 add	 esp, 4
  006f1	8b 08		 mov	 ecx, DWORD PTR [eax]
  006f3	51		 push	 ecx
  006f4	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  006f9	83 c4 04	 add	 esp, 4
  006fc	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1359 : 						_Rrotate(_Fixnodeparent);

  006ff	8b 45 f0	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00702	50		 push	 eax
  00703	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00706	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rrotate

; 1360 : 						break;	// tree now recolored/rebalanced

  0070b	eb 05		 jmp	 SHORT $LN16@erase@2
$LN8@erase@2:

; 1361 : 						}
; 1362 : 					}

  0070d	e9 82 fc ff ff	 jmp	 $LN17@erase@2
$LN16@erase@2:

; 1363 : 
; 1364 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

  00712	8b 45 f4	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  00715	50		 push	 eax
  00716	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  0071b	83 c4 04	 add	 esp, 4
  0071e	c6 00 01	 mov	 BYTE PTR [eax], 1
$LN19@erase@2:

; 1365 : 			}
; 1366 : 
; 1367 : 		_Dest_val(this->_Alval,
; 1368 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node

  00721	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  00724	50		 push	 eax
  00725	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Myval
  0072a	83 c4 04	 add	 esp, 4
  0072d	50		 push	 eax
  0072e	e8 00 00 00 00	 call	 ??$addressof@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@YAPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@AAU10@@Z ; std::addressof<std::pair<int const ,_MAPSVR_DATA *> >
  00733	83 c4 04	 add	 esp, 4
  00736	50		 push	 eax
  00737	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0073a	83 c1 0d	 add	 ecx, 13			; 0000000dH
  0073d	51		 push	 ecx
  0073e	e8 00 00 00 00	 call	 ??$_Dest_val@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@U?$pair@$$CBHPAU_MAPSVR_DATA@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@0@PAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,std::pair<int const ,_MAPSVR_DATA *> >
  00743	83 c4 08	 add	 esp, 8

; 1369 : 
; 1370 : 		this->_Alnod.deallocate(_Erasednode, 1);

  00746	6a 01		 push	 1
  00748	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  0074b	50		 push	 eax
  0074c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0074f	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00752	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::deallocate

; 1371 : 
; 1372 : 		if (0 < this->_Mysize)

  00757	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0075a	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0075e	76 0f		 jbe	 SHORT $LN1@erase@2

; 1373 : 			--this->_Mysize;

  00760	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00763	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00766	83 e9 01	 sub	 ecx, 1
  00769	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0076c	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN1@erase@2:

; 1374 : 
; 1375 : 		return (iterator(_Where._Ptr, this));	// return successor iterator

  0076f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00772	50		 push	 eax
  00773	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00776	51		 push	 ecx
  00777	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0077a	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >
  0077f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN42@erase@2:

; 1376 : 		}

  00782	5f		 pop	 edi
  00783	5e		 pop	 esi
  00784	5b		 pop	 ebx
  00785	8b e5		 mov	 esp, ebp
  00787	5d		 pop	 ebp
  00788	c2 08 00	 ret	 8
?erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::erase
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color, COMDAT

; 606  : 		{	// return reference to color in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 607  : 		return ((char&)(*_Pnode)._Color);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0000c	83 c0 14	 add	 eax, 20			; 00000014H

; 608  : 		}

  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node><std::pair<int const ,_MAPSVR_DATA *> >
PUBLIC	??0?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z ; std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >, COMDAT
; _this$ = ecx

; 482  : 		{	// construct traits from _Parg and allocators from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR __Parg$[ebp]
  0000f	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00012	51		 push	 ecx
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	e8 00 00 00 00	 call	 ??0?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z ; std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>
  0001b	8d 45 0c	 lea	 eax, DWORD PTR __Al$[ebp]
  0001e	50		 push	 eax
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00025	e8 00 00 00 00	 call	 ??$?0U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node><std::pair<int const ,_MAPSVR_DATA *> >
  0002a	8d 45 0c	 lea	 eax, DWORD PTR __Al$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	83 c1 0d	 add	 ecx, 13			; 0000000dH
  00034	e8 00 00 00 00	 call	 ??0?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::allocator<std::pair<int const ,_MAPSVR_DATA *> >

; 483  : 		}

  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 187  : 		return (_Allocate(_Count, (pointer)0));

  0000c	6a 00		 push	 0
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>
  00017	83 c4 08	 add	 esp, 8

; 188  : 		}

  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	5b		 pop	 ebx
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::allocate
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 270  : 		{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 271  : 		_Myiter _Tmp = *this;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	89 4d f8	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 272  : 		++*this;

  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++

; 273  : 		return (_Tmp);

  0001c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001f	8b 4d f8	 mov	 ecx, DWORD PTR __Tmp$[ebp]
  00022	89 08		 mov	 DWORD PTR [eax], ecx
  00024	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 274  : 		}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 43   : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00012	89 08		 mov	 DWORD PTR [eax], ecx

; 44   : 		this->_Adopt(_Plist);

  00014	8b 45 0c	 mov	 eax, DWORD PTR __Plist$[ebp]
  00017	50		 push	 eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ; std::_Iterator_base0::_Adopt

; 45   : 		}

  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 08 00	 ret	 8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Pnode$229411 = -8					; size = 4
_this$ = -4						; size = 4
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 58   : 		{	// preincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 59   : 		if (_Mytree::_Isnil(_Ptr))

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  00017	83 c4 04	 add	 esp, 4
  0001a	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0001d	85 d2		 test	 edx, edx
  0001f	74 05		 je	 SHORT $LN6@operator
  00021	e9 8d 00 00 00	 jmp	 $LN5@operator
$LN6@operator:

; 60   : 			;	// end() shouldn't be incremented, don't move
; 61   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	51		 push	 ecx
  0002c	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  00031	83 c4 04	 add	 esp, 4
  00034	8b 10		 mov	 edx, DWORD PTR [eax]
  00036	52		 push	 edx
  00037	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  0003c	83 c4 04	 add	 esp, 4
  0003f	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00042	85 c0		 test	 eax, eax
  00044	75 20		 jne	 SHORT $LN2@operator

; 62   : 			_Ptr = _Mytree::_Min(
; 63   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree

  00046	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00049	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  00051	83 c4 04	 add	 esp, 4
  00054	8b 10		 mov	 edx, DWORD PTR [eax]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?_Min@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Min
  0005c	83 c4 04	 add	 esp, 4
  0005f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	89 01		 mov	 DWORD PTR [ecx], eax

; 64   : 		else

  00064	eb 4d		 jmp	 SHORT $LN5@operator
$LN2@operator:

; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  00066	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00069	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006b	51		 push	 ecx
  0006c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00071	83 c4 04	 add	 esp, 4
  00074	8b 10		 mov	 edx, DWORD PTR [eax]
  00076	89 55 f8	 mov	 DWORD PTR __Pnode$229411[ebp], edx
  00079	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229411[ebp]
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  00082	83 c4 04	 add	 esp, 4
  00085	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00088	85 c9		 test	 ecx, ecx
  0008a	75 1f		 jne	 SHORT $LN1@operator
  0008c	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229411[ebp]
  0008f	50		 push	 eax
  00090	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  00095	83 c4 04	 add	 esp, 4
  00098	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009d	3b 10		 cmp	 edx, DWORD PTR [eax]
  0009f	75 0a		 jne	 SHORT $LN1@operator

; 69   : 				_Ptr = _Pnode;	// ==> parent while right subtree

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$229411[ebp]
  000a7	89 08		 mov	 DWORD PTR [eax], ecx
  000a9	eb bb		 jmp	 SHORT $LN2@operator
$LN1@operator:

; 70   : 			_Ptr = _Pnode;	// ==> parent (head if end())

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$229411[ebp]
  000b1	89 08		 mov	 DWORD PTR [eax], ecx
$LN5@operator:

; 71   : 			}
; 72   : 		return (*this);

  000b3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 73   : 		}

  000b6	5f		 pop	 edi
  000b7	5e		 pop	 esi
  000b8	5b		 pop	 ebx
  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c3		 ret	 0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
PUBLIC	??$_Allocate@PAU_MAPSVR_DATA@@@std@@YAPAPAU_MAPSVR_DATA@@IPAPAU1@@Z ; std::_Allocate<_MAPSVR_DATA *>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEPAPAU_MAPSVR_DATA@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEPAPAU_MAPSVR_DATA@@I@Z PROC ; std::allocator<_MAPSVR_DATA *>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 187  : 		return (_Allocate(_Count, (pointer)0));

  0000c	6a 00		 push	 0
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$_Allocate@PAU_MAPSVR_DATA@@@std@@YAPAPAU_MAPSVR_DATA@@IPAPAU1@@Z ; std::_Allocate<_MAPSVR_DATA *>
  00017	83 c4 08	 add	 esp, 8

; 188  : 		}

  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	5b		 pop	 ebx
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
?allocate@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEPAPAU_MAPSVR_DATA@@I@Z ENDP ; std::allocator<_MAPSVR_DATA *>::allocate
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAU_MAPSVR_DATA@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -76						; size = 4
__Count$ = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$allocator@PAU_MAPSVR_DATA@@@std@@QBEIXZ PROC ; std::allocator<_MAPSVR_DATA *>::max_size, COMDAT
; _this$ = ecx

; 217  : 		{	// estimate maximum array size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);

  0000c	c7 45 f8 ff ff
	ff 3f		 mov	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH

; 219  : 		return (0 < _Count ? _Count : 1);

  00013	83 7d f8 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00017	76 08		 jbe	 SHORT $LN3@max_size
  00019	8b 45 f8	 mov	 eax, DWORD PTR __Count$[ebp]
  0001c	89 45 b4	 mov	 DWORD PTR tv65[ebp], eax
  0001f	eb 07		 jmp	 SHORT $LN4@max_size
$LN3@max_size:
  00021	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv65[ebp], 1
$LN4@max_size:
  00028	8b 45 b4	 mov	 eax, DWORD PTR tv65[ebp]

; 220  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?max_size@?$allocator@PAU_MAPSVR_DATA@@@std@@QBEIXZ ENDP ; std::allocator<_MAPSVR_DATA *>::max_size
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1763 : 		{	// promote right node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1764 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  00015	83 c4 04	 add	 esp, 4
  00018	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001a	89 4d f8	 mov	 DWORD PTR __Pnode$[ebp], ecx

; 1765 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

  0001d	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  00026	83 c4 04	 add	 esp, 4
  00029	8b f0		 mov	 esi, eax
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  0002e	51		 push	 ecx
  0002f	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  00034	83 c4 04	 add	 esp, 4
  00037	8b 16		 mov	 edx, DWORD PTR [esi]
  00039	89 10		 mov	 DWORD PTR [eax], edx

; 1766 : 
; 1767 : 		if (!this->_Isnil(this->_Left(_Pnode)))

  0003b	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  00044	83 c4 04	 add	 esp, 4
  00047	8b 08		 mov	 ecx, DWORD PTR [eax]
  00049	51		 push	 ecx
  0004a	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  0004f	83 c4 04	 add	 esp, 4
  00052	0f be 10	 movsx	 edx, BYTE PTR [eax]
  00055	85 d2		 test	 edx, edx
  00057	75 1c		 jne	 SHORT $LN5@Lrotate

; 1768 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

  00059	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  00062	83 c4 04	 add	 esp, 4
  00065	8b 08		 mov	 ecx, DWORD PTR [eax]
  00067	51		 push	 ecx
  00068	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  0006d	83 c4 04	 add	 esp, 4
  00070	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00073	89 10		 mov	 DWORD PTR [eax], edx
$LN5@Lrotate:

; 1769 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  00075	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  0007e	83 c4 04	 add	 esp, 4
  00081	8b f0		 mov	 esi, eax
  00083	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00086	51		 push	 ecx
  00087	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  0008c	83 c4 04	 add	 esp, 4
  0008f	8b 16		 mov	 edx, DWORD PTR [esi]
  00091	89 10		 mov	 DWORD PTR [eax], edx

; 1770 : 
; 1771 : 		if (_Wherenode == _Root())

  00093	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Root
  0009b	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  0009e	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000a0	75 0f		 jne	 SHORT $LN4@Lrotate

; 1772 : 			_Root() = _Pnode;

  000a2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Root
  000aa	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  000ad	89 08		 mov	 DWORD PTR [eax], ecx
  000af	eb 58		 jmp	 SHORT $LN3@Lrotate
$LN4@Lrotate:

; 1773 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

  000b1	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  000b4	50		 push	 eax
  000b5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  000ba	83 c4 04	 add	 esp, 4
  000bd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  000c5	83 c4 04	 add	 esp, 4
  000c8	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000cb	3b 10		 cmp	 edx, DWORD PTR [eax]
  000cd	75 1e		 jne	 SHORT $LN2@Lrotate

; 1774 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  000cf	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  000d2	50		 push	 eax
  000d3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  000d8	83 c4 04	 add	 esp, 4
  000db	8b 08		 mov	 ecx, DWORD PTR [eax]
  000dd	51		 push	 ecx
  000de	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  000e3	83 c4 04	 add	 esp, 4
  000e6	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  000e9	89 10		 mov	 DWORD PTR [eax], edx

; 1775 : 		else

  000eb	eb 1c		 jmp	 SHORT $LN3@Lrotate
$LN2@Lrotate:

; 1776 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  000ed	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  000f0	50		 push	 eax
  000f1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  000f6	83 c4 04	 add	 esp, 4
  000f9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fb	51		 push	 ecx
  000fc	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  00101	83 c4 04	 add	 esp, 4
  00104	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00107	89 10		 mov	 DWORD PTR [eax], edx
$LN3@Lrotate:

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  00109	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0010c	50		 push	 eax
  0010d	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  00112	83 c4 04	 add	 esp, 4
  00115	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  00118	89 08		 mov	 DWORD PTR [eax], ecx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  0011a	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0011d	50		 push	 eax
  0011e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00123	83 c4 04	 add	 esp, 4
  00126	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00129	89 08		 mov	 DWORD PTR [eax], ecx

; 1780 : 		}

  0012b	5f		 pop	 edi
  0012c	5e		 pop	 esi
  0012d	5b		 pop	 ebx
  0012e	8b e5		 mov	 esp, ebp
  00130	5d		 pop	 ebp
  00131	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lrotate
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1793 : 		{	// promote left node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1794 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  00015	83 c4 04	 add	 esp, 4
  00018	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001a	89 4d f8	 mov	 DWORD PTR __Pnode$[ebp], ecx

; 1795 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

  0001d	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  00026	83 c4 04	 add	 esp, 4
  00029	8b f0		 mov	 esi, eax
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  0002e	51		 push	 ecx
  0002f	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  00034	83 c4 04	 add	 esp, 4
  00037	8b 16		 mov	 edx, DWORD PTR [esi]
  00039	89 10		 mov	 DWORD PTR [eax], edx

; 1796 : 
; 1797 : 		if (!this->_Isnil(this->_Right(_Pnode)))

  0003b	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  00044	83 c4 04	 add	 esp, 4
  00047	8b 08		 mov	 ecx, DWORD PTR [eax]
  00049	51		 push	 ecx
  0004a	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  0004f	83 c4 04	 add	 esp, 4
  00052	0f be 10	 movsx	 edx, BYTE PTR [eax]
  00055	85 d2		 test	 edx, edx
  00057	75 1c		 jne	 SHORT $LN5@Rrotate

; 1798 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

  00059	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  00062	83 c4 04	 add	 esp, 4
  00065	8b 08		 mov	 ecx, DWORD PTR [eax]
  00067	51		 push	 ecx
  00068	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  0006d	83 c4 04	 add	 esp, 4
  00070	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00073	89 10		 mov	 DWORD PTR [eax], edx
$LN5@Rrotate:

; 1799 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  00075	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  0007e	83 c4 04	 add	 esp, 4
  00081	8b f0		 mov	 esi, eax
  00083	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00086	51		 push	 ecx
  00087	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  0008c	83 c4 04	 add	 esp, 4
  0008f	8b 16		 mov	 edx, DWORD PTR [esi]
  00091	89 10		 mov	 DWORD PTR [eax], edx

; 1800 : 
; 1801 : 		if (_Wherenode == _Root())

  00093	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Root
  0009b	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  0009e	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000a0	75 0f		 jne	 SHORT $LN4@Rrotate

; 1802 : 			_Root() = _Pnode;

  000a2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Root
  000aa	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  000ad	89 08		 mov	 DWORD PTR [eax], ecx
  000af	eb 58		 jmp	 SHORT $LN3@Rrotate
$LN4@Rrotate:

; 1803 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

  000b1	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  000b4	50		 push	 eax
  000b5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  000ba	83 c4 04	 add	 esp, 4
  000bd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  000c5	83 c4 04	 add	 esp, 4
  000c8	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000cb	3b 10		 cmp	 edx, DWORD PTR [eax]
  000cd	75 1e		 jne	 SHORT $LN2@Rrotate

; 1804 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  000cf	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  000d2	50		 push	 eax
  000d3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  000d8	83 c4 04	 add	 esp, 4
  000db	8b 08		 mov	 ecx, DWORD PTR [eax]
  000dd	51		 push	 ecx
  000de	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  000e3	83 c4 04	 add	 esp, 4
  000e6	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  000e9	89 10		 mov	 DWORD PTR [eax], edx

; 1805 : 		else

  000eb	eb 1c		 jmp	 SHORT $LN3@Rrotate
$LN2@Rrotate:

; 1806 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  000ed	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  000f0	50		 push	 eax
  000f1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  000f6	83 c4 04	 add	 esp, 4
  000f9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fb	51		 push	 ecx
  000fc	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  00101	83 c4 04	 add	 esp, 4
  00104	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00107	89 10		 mov	 DWORD PTR [eax], edx
$LN3@Rrotate:

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  00109	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0010c	50		 push	 eax
  0010d	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  00112	83 c4 04	 add	 esp, 4
  00115	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  00118	89 08		 mov	 DWORD PTR [eax], ecx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  0011a	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0011d	50		 push	 eax
  0011e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00123	83 c4 04	 add	 esp, 4
  00126	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00129	89 08		 mov	 DWORD PTR [eax], ecx

; 1810 : 		}

  0012b	5f		 pop	 edi
  0012c	5e		 pop	 esi
  0012d	5b		 pop	 ebx
  0012e	8b e5		 mov	 esp, ebp
  00130	5d		 pop	 ebp
  00131	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rrotate
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Max, COMDAT

; 641  : 		{	// return rightmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@Max:

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  00009	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  00012	83 c4 04	 add	 esp, 4
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	51		 push	 ecx
  00018	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  0001d	83 c4 04	 add	 esp, 4
  00020	0f be 10	 movsx	 edx, BYTE PTR [eax]
  00023	85 d2		 test	 edx, edx
  00025	75 13		 jne	 SHORT $LN1@Max

; 643  : 			_Pnode = _Right(_Pnode);

  00027	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  00030	83 c4 04	 add	 esp, 4
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 4d 08	 mov	 DWORD PTR __Pnode$[ebp], ecx
  00038	eb cf		 jmp	 SHORT $LN2@Max
$LN1@Max:

; 644  : 		return (_Pnode);

  0003a	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 645  : 		}

  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
?_Max@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Max
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Min, COMDAT

; 648  : 		{	// return leftmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@Min:

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  00009	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  00012	83 c4 04	 add	 esp, 4
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	51		 push	 ecx
  00018	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  0001d	83 c4 04	 add	 esp, 4
  00020	0f be 10	 movsx	 edx, BYTE PTR [eax]
  00023	85 d2		 test	 edx, edx
  00025	75 13		 jne	 SHORT $LN1@Min

; 650  : 			_Pnode = _Left(_Pnode);

  00027	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  00030	83 c4 04	 add	 esp, 4
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 4d 08	 mov	 DWORD PTR __Pnode$[ebp], ecx
  00038	eb cf		 jmp	 SHORT $LN2@Min
$LN1@Min:

; 651  : 		return (_Pnode);

  0003a	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 652  : 		}

  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
?_Min@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Min
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\map
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z PROC ; std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>, COMDAT
; _this$ = ecx

; 40   : 		{	// construct with specified comparator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 41   : 		}

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z ENDP ; std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>
_TEXT	ENDS
PUBLIC	??$?0AAFAAPAU_MAPSVR_DATA@@@?$_Pair_base@HPAU_MAPSVR_DATA@@@std@@QAE@AAFAAPAU_MAPSVR_DATA@@@Z ; std::_Pair_base<int,_MAPSVR_DATA *>::_Pair_base<int,_MAPSVR_DATA *><short &,_MAPSVR_DATA * &>
PUBLIC	??$forward@AAF@std@@YAAAFAAF@Z			; std::forward<short &>
PUBLIC	??$forward@AAPAU_MAPSVR_DATA@@@std@@YAAAPAU_MAPSVR_DATA@@AAPAU1@@Z ; std::forward<_MAPSVR_DATA * &>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAFAAPAU_MAPSVR_DATA@@@?$pair@HPAU_MAPSVR_DATA@@@std@@QAE@AAFAAPAU_MAPSVR_DATA@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAFAAPAU_MAPSVR_DATA@@@?$pair@HPAU_MAPSVR_DATA@@@std@@QAE@AAFAAPAU_MAPSVR_DATA@@@Z PROC ; std::pair<int,_MAPSVR_DATA *>::pair<int,_MAPSVR_DATA *><short &,_MAPSVR_DATA * &>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$forward@AAPAU_MAPSVR_DATA@@@std@@YAAAPAU_MAPSVR_DATA@@AAPAU1@@Z ; std::forward<_MAPSVR_DATA * &>
  00015	83 c4 04	 add	 esp, 4
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??$forward@AAF@std@@YAAAFAAF@Z ; std::forward<short &>
  00022	83 c4 04	 add	 esp, 4
  00025	50		 push	 eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ??$?0AAFAAPAU_MAPSVR_DATA@@@?$_Pair_base@HPAU_MAPSVR_DATA@@@std@@QAE@AAFAAPAU_MAPSVR_DATA@@@Z ; std::_Pair_base<int,_MAPSVR_DATA *>::_Pair_base<int,_MAPSVR_DATA *><short &,_MAPSVR_DATA * &>

; 248  : 		}

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 08 00	 ret	 8
??$?0AAFAAPAU_MAPSVR_DATA@@@?$pair@HPAU_MAPSVR_DATA@@@std@@QAE@AAFAAPAU_MAPSVR_DATA@@@Z ENDP ; std::pair<int,_MAPSVR_DATA *>::pair<int,_MAPSVR_DATA *><short &,_MAPSVR_DATA * &>
_TEXT	ENDS
PUBLIC	?_Linsert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Linsert
PUBLIC	??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Buynode<std::pair<int,_MAPSVR_DATA *> >
PUBLIC	??$forward@U?$pair@HPAU_MAPSVR_DATA@@@std@@@std@@YA$$QAU?$pair@HPAU_MAPSVR_DATA@@@0@AAU10@@Z ; std::forward<std::pair<int,_MAPSVR_DATA *> >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??$insert@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::insert<std::pair<int,_MAPSVR_DATA *> >, COMDAT
; _this$ = ecx

; 753  : 		_Pairib insert(_Valty&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 754  : 		{	// try to insert node with value _Val, favoring right side
; 755  : 		return (_Linsert(this->_Buynode(_STD forward<_Valty>(_Val)),
; 756  : 			false));

  0000c	6a 00		 push	 0
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@U?$pair@HPAU_MAPSVR_DATA@@@std@@@std@@YA$$QAU?$pair@HPAU_MAPSVR_DATA@@@0@AAU10@@Z ; std::forward<std::pair<int,_MAPSVR_DATA *> >
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Buynode<std::pair<int,_MAPSVR_DATA *> >
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00027	51		 push	 ecx
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Linsert
  00030	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 757  : 		}

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
??$insert@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::insert<std::pair<int,_MAPSVR_DATA *> >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$addressof@QAU_MAPSVR_DATA@@@std@@YAPBQAU_MAPSVR_DATA@@ABQAU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAU_MAPSVR_DATA@@@std@@YAPBQAU_MAPSVR_DATA@@ABQAU1@@Z PROC ; std::addressof<_MAPSVR_DATA * const>, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 111  : 	return ((_Ty *) &(char&)_Val);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$addressof@QAU_MAPSVR_DATA@@@std@@YAPBQAU_MAPSVR_DATA@@ABQAU1@@Z ENDP ; std::addressof<_MAPSVR_DATA * const>
_TEXT	ENDS
PUBLIC	??$construct@AAPAU_MAPSVR_DATA@@@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@AAPAU2@@Z ; std::allocator<_MAPSVR_DATA *>::construct<_MAPSVR_DATA * &>
; Function compile flags: /Odtp /ZI
;	COMDAT ??$_Cons_val@V?$allocator@PAU_MAPSVR_DATA@@@std@@PAU_MAPSVR_DATA@@AAPAU3@@std@@YAXAAV?$allocator@PAU_MAPSVR_DATA@@@0@PAPAU_MAPSVR_DATA@@AAPAU2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAU_MAPSVR_DATA@@@std@@PAU_MAPSVR_DATA@@AAPAU3@@std@@YAXAAV?$allocator@PAU_MAPSVR_DATA@@@0@PAPAU_MAPSVR_DATA@@AAPAU2@@Z PROC ; std::_Cons_val<std::allocator<_MAPSVR_DATA *>,_MAPSVR_DATA *,_MAPSVR_DATA * &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00009	8b 45 10	 mov	 eax, DWORD PTR __Src$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??$forward@AAPAU_MAPSVR_DATA@@@std@@YAAAPAU_MAPSVR_DATA@@AAPAU1@@Z ; std::forward<_MAPSVR_DATA * &>
  00012	83 c4 04	 add	 esp, 4
  00015	50		 push	 eax
  00016	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]
  00019	51		 push	 ecx
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __Alval$[ebp]
  0001d	e8 00 00 00 00	 call	 ??$construct@AAPAU_MAPSVR_DATA@@@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@AAPAU2@@Z ; std::allocator<_MAPSVR_DATA *>::construct<_MAPSVR_DATA * &>

; 281  : 	}

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$_Cons_val@V?$allocator@PAU_MAPSVR_DATA@@@std@@PAU_MAPSVR_DATA@@AAPAU3@@std@@YAXAAV?$allocator@PAU_MAPSVR_DATA@@@0@PAPAU_MAPSVR_DATA@@AAPAU2@@Z ENDP ; std::_Cons_val<std::allocator<_MAPSVR_DATA *>,_MAPSVR_DATA *,_MAPSVR_DATA * &>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@ABQAU3@@Z ; std::allocator<_MAPSVR_DATA *>::construct
PUBLIC	??$forward@ABQAU_MAPSVR_DATA@@@std@@YAABQAU_MAPSVR_DATA@@ABQAU1@@Z ; std::forward<_MAPSVR_DATA * const &>
; Function compile flags: /Odtp /ZI
;	COMDAT ??$_Cons_val@V?$allocator@PAU_MAPSVR_DATA@@@std@@PAU_MAPSVR_DATA@@ABQAU3@@std@@YAXAAV?$allocator@PAU_MAPSVR_DATA@@@0@PAPAU_MAPSVR_DATA@@ABQAU2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAU_MAPSVR_DATA@@@std@@PAU_MAPSVR_DATA@@ABQAU3@@std@@YAXAAV?$allocator@PAU_MAPSVR_DATA@@@0@PAPAU_MAPSVR_DATA@@ABQAU2@@Z PROC ; std::_Cons_val<std::allocator<_MAPSVR_DATA *>,_MAPSVR_DATA *,_MAPSVR_DATA * const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00009	8b 45 10	 mov	 eax, DWORD PTR __Src$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??$forward@ABQAU_MAPSVR_DATA@@@std@@YAABQAU_MAPSVR_DATA@@ABQAU1@@Z ; std::forward<_MAPSVR_DATA * const &>
  00012	83 c4 04	 add	 esp, 4
  00015	50		 push	 eax
  00016	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]
  00019	51		 push	 ecx
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __Alval$[ebp]
  0001d	e8 00 00 00 00	 call	 ?construct@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@ABQAU3@@Z ; std::allocator<_MAPSVR_DATA *>::construct

; 281  : 	}

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$_Cons_val@V?$allocator@PAU_MAPSVR_DATA@@@std@@PAU_MAPSVR_DATA@@ABQAU3@@std@@YAXAAV?$allocator@PAU_MAPSVR_DATA@@@0@PAPAU_MAPSVR_DATA@@ABQAU2@@Z ENDP ; std::_Cons_val<std::allocator<_MAPSVR_DATA *>,_MAPSVR_DATA *,_MAPSVR_DATA * const &>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$addressof@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@YAPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@YAPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@AAU10@@Z PROC ; std::addressof<std::pair<int const ,_MAPSVR_DATA *> >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 111  : 	return ((_Ty *) &(char&)_Val);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$addressof@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@YAPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<int const ,_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@@Z ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::destroy
; Function compile flags: /Odtp /ZI
;	COMDAT ??$_Dest_val@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@U?$pair@$$CBHPAU_MAPSVR_DATA@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@0@PAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@U?$pair@$$CBHPAU_MAPSVR_DATA@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@0@PAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,std::pair<int const ,_MAPSVR_DATA *> >, COMDAT

; 286  : 	{	// destroy using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 287  : 	_Alval.destroy(_Pdest);

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR __Alval$[ebp]
  00010	e8 00 00 00 00	 call	 ?destroy@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@@Z ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::destroy

; 288  : 	}

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Dest_val@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@U?$pair@$$CBHPAU_MAPSVR_DATA@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@0@PAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,std::pair<int const ,_MAPSVR_DATA *> >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\map
_TEXT	ENDS
;	COMDAT ??$_Kfn@$$CBHPAU_MAPSVR_DATA@@@?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBHPAU_MAPSVR_DATA@@@?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@@Z PROC ; std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>::_Kfn<int const ,_MAPSVR_DATA *>, COMDAT

; 66   : 		static const _Kty& _Kfn(const _STD pair<_Ty1, _Ty2>& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 67   : 		{	// extract key from element value
; 68   : 		return (_Val.first);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 69   : 		}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Kfn@$$CBHPAU_MAPSVR_DATA@@@?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@@Z ENDP ; std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>::_Kfn<int const ,_MAPSVR_DATA *>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAPAU_MAPSVR_DATA@@PAPAU1@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@00AAV?$allocator@PAU_MAPSVR_DATA@@@0@@Z ; std::_Uninitialized_move<_MAPSVR_DATA * *,_MAPSVR_DATA * *,std::allocator<_MAPSVR_DATA *> >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??$_Umove@PAPAU_MAPSVR_DATA@@@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEPAPAU_MAPSVR_DATA@@PAPAU2@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAU_MAPSVR_DATA@@@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEPAPAU_MAPSVR_DATA@@PAPAU2@00@Z PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Umove<_MAPSVR_DATA * *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 0c	 add	 eax, 12			; 0000000cH
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  0001a	52		 push	 edx
  0001b	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAU_MAPSVR_DATA@@PAPAU1@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@00AAV?$allocator@PAU_MAPSVR_DATA@@@0@@Z ; std::_Uninitialized_move<_MAPSVR_DATA * *,_MAPSVR_DATA * *,std::allocator<_MAPSVR_DATA *> >
  00024	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAPAU_MAPSVR_DATA@@@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEPAPAU_MAPSVR_DATA@@PAPAU2@00@Z ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Umove<_MAPSVR_DATA * *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAXPAPAU_MAPSVR_DATA@@0AAV?$allocator@PAU_MAPSVR_DATA@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<_MAPSVR_DATA *> >
PUBLIC	??$_Ptr_cat@PAU_MAPSVR_DATA@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAU_MAPSVR_DATA@@0@Z ; std::_Ptr_cat<_MAPSVR_DATA *,_MAPSVR_DATA *>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAXPAPAU_MAPSVR_DATA@@0AAV?$allocator@PAU_MAPSVR_DATA@@@0@@Z
_TEXT	SEGMENT
$T230846 = -65						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAXPAPAU_MAPSVR_DATA@@0AAV?$allocator@PAU_MAPSVR_DATA@@@0@@Z PROC ; std::_Destroy_range<std::allocator<_MAPSVR_DATA *> >, COMDAT

; 87   : 	{	// destroy [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAU_MAPSVR_DATA@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAU_MAPSVR_DATA@@0@Z ; std::_Ptr_cat<_MAPSVR_DATA *,_MAPSVR_DATA *>
  00016	83 c4 08	 add	 esp, 8
  00019	88 45 bf	 mov	 BYTE PTR $T230846[ebp], al
  0001c	0f b6 55 bf	 movzx	 edx, BYTE PTR $T230846[ebp]
  00020	52		 push	 edx
  00021	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  00024	50		 push	 eax
  00025	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00028	51		 push	 ecx
  00029	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0002c	52		 push	 edx
  0002d	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAXPAPAU_MAPSVR_DATA@@0AAV?$allocator@PAU_MAPSVR_DATA@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<_MAPSVR_DATA *> >
  00032	83 c4 10	 add	 esp, 16			; 00000010H

; 89   : 	}

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAXPAPAU_MAPSVR_DATA@@0AAV?$allocator@PAU_MAPSVR_DATA@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	??$_Move@AAD@std@@YA$$QADAAD@Z			; std::_Move<char &>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Tmp$ = -1						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC				; std::swap<char>, COMDAT

; 101  : 	{	// exchange values stored at _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 102  : 	_Ty _Tmp = _Move(_Left);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??$_Move@AAD@std@@YA$$QADAAD@Z ; std::_Move<char &>
  00012	83 c4 04	 add	 esp, 4
  00015	8a 08		 mov	 cl, BYTE PTR [eax]
  00017	88 4d ff	 mov	 BYTE PTR __Tmp$[ebp], cl

; 103  : 	_Left = _Move(_Right);

  0001a	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ??$_Move@AAD@std@@YA$$QADAAD@Z ; std::_Move<char &>
  00023	83 c4 04	 add	 esp, 4
  00026	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00029	8a 10		 mov	 dl, BYTE PTR [eax]
  0002b	88 11		 mov	 BYTE PTR [ecx], dl

; 104  : 	_Right = _Move(_Tmp);

  0002d	8d 45 ff	 lea	 eax, DWORD PTR __Tmp$[ebp]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ??$_Move@AAD@std@@YA$$QADAAD@Z ; std::_Move<char &>
  00036	83 c4 04	 add	 esp, 4
  00039	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0003c	8a 10		 mov	 dl, BYTE PTR [eax]
  0003e	88 11		 mov	 BYTE PTR [ecx], dl

; 105  : 	}

  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node><std::pair<int const ,_MAPSVR_DATA *> >, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??$?0U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node><std::pair<int const ,_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T230853 = -80						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 31   : 	void *_Ptr = 0;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0

; 32   : 
; 33   : 	if (_Count <= 0)

  00010	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00014	77 09		 ja	 SHORT $LN4@Allocate

; 34   : 		_Count = 0;

  00016	c7 45 08 00 00
	00 00		 mov	 DWORD PTR __Count$[ebp], 0

; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0001d	eb 39		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0001f	81 7d 08 aa aa
	aa 0a		 cmp	 DWORD PTR __Count$[ebp], 178956970 ; 0aaaaaaaH
  00026	77 18		 ja	 SHORT $LN1@Allocate
  00028	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0002b	6b c0 18	 imul	 eax, 24			; 00000018H
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00034	83 c4 04	 add	 esp, 4
  00037	89 45 fc	 mov	 DWORD PTR __Ptr$[ebp], eax
  0003a	83 7d fc 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0003e	75 18		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00040	6a 00		 push	 0
  00042	8d 4d b0	 lea	 ecx, DWORD PTR $T230853[ebp]
  00045	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QAE@PBD@Z ; std::bad_alloc::bad_alloc
  0004a	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0004f	8d 45 b0	 lea	 eax, DWORD PTR $T230853[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Allocate:

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00058	8b 45 fc	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 40   : 	}

  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi
  0005d	5b		 pop	 ebx
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$_Allocate@PAU_MAPSVR_DATA@@@std@@YAPAPAU_MAPSVR_DATA@@IPAPAU1@@Z
_TEXT	SEGMENT
$T230856 = -80						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAU_MAPSVR_DATA@@@std@@YAPAPAU_MAPSVR_DATA@@IPAPAU1@@Z PROC ; std::_Allocate<_MAPSVR_DATA *>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 31   : 	void *_Ptr = 0;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0

; 32   : 
; 33   : 	if (_Count <= 0)

  00010	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00014	77 09		 ja	 SHORT $LN4@Allocate@2

; 34   : 		_Count = 0;

  00016	c7 45 08 00 00
	00 00		 mov	 DWORD PTR __Count$[ebp], 0

; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0001d	eb 39		 jmp	 SHORT $LN3@Allocate@2
$LN4@Allocate@2:

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0001f	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH
  00026	77 18		 ja	 SHORT $LN1@Allocate@2
  00028	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0002b	c1 e0 02	 shl	 eax, 2
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00034	83 c4 04	 add	 esp, 4
  00037	89 45 fc	 mov	 DWORD PTR __Ptr$[ebp], eax
  0003a	83 7d fc 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0003e	75 18		 jne	 SHORT $LN3@Allocate@2
$LN1@Allocate@2:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00040	6a 00		 push	 0
  00042	8d 4d b0	 lea	 ecx, DWORD PTR $T230856[ebp]
  00045	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QAE@PBD@Z ; std::bad_alloc::bad_alloc
  0004a	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0004f	8d 45 b0	 lea	 eax, DWORD PTR $T230856[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Allocate@2:

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00058	8b 45 fc	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@2:

; 40   : 	}

  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi
  0005d	5b		 pop	 ebx
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
??$_Allocate@PAU_MAPSVR_DATA@@@std@@YAPAPAU_MAPSVR_DATA@@IPAPAU1@@Z ENDP ; std::_Allocate<_MAPSVR_DATA *>
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &,bool>
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator--
PUBLIC	??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Insert
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Linsert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@_N@Z
_TEXT	SEGMENT
tv147 = -124						; size = 4
$T230861 = -117						; size = 1
$T230862 = -116						; size = 4
$T230863 = -112						; size = 4
$T230864 = -105						; size = 1
$T230865 = -104						; size = 4
$T230866 = -97						; size = 1
$T230867 = -96						; size = 4
$T230868 = -89						; size = 1
__Where$229883 = -24					; size = 4
__Addleft$ = -17					; size = 1
__Wherenode$ = -16					; size = 4
__Trynode$ = -12					; size = 4
__Val$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Node$ = 12						; size = 4
__Leftish$ = 16						; size = 1
?_Linsert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@_N@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Linsert, COMDAT
; _this$ = ecx

; 944  : 		{	// try to insert node at _Node, on left if _Leftish

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 945  : 		const value_type& _Val = this->_Myval(_Node);

  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Node$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Myval
  00015	83 c4 04	 add	 esp, 4
  00018	89 45 f8	 mov	 DWORD PTR __Val$[ebp], eax

; 946  : 
; 947  : 		_Nodeptr _Trynode = _Root();

  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Root
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
  00025	89 45 f4	 mov	 DWORD PTR __Trynode$[ebp], eax

; 948  : 		_Nodeptr _Wherenode = this->_Myhead;

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002e	89 4d f0	 mov	 DWORD PTR __Wherenode$[ebp], ecx

; 949  : 		bool _Addleft = true;	// add to left of head if tree empty

  00031	c6 45 ef 01	 mov	 BYTE PTR __Addleft$[ebp], 1
$LN12@Linsert:

; 950  : 		while (!this->_Isnil(_Trynode))

  00035	8b 45 f4	 mov	 eax, DWORD PTR __Trynode$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  0003e	83 c4 04	 add	 esp, 4
  00041	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00044	85 c9		 test	 ecx, ecx
  00046	0f 85 9b 00 00
	00		 jne	 $LN11@Linsert

; 951  : 			{	// look for leaf to insert before (_Addleft) or after
; 952  : 			_Wherenode = _Trynode;

  0004c	8b 45 f4	 mov	 eax, DWORD PTR __Trynode$[ebp]
  0004f	89 45 f0	 mov	 DWORD PTR __Wherenode$[ebp], eax

; 953  : 			if (_Leftish)

  00052	0f b6 45 10	 movzx	 eax, BYTE PTR __Leftish$[ebp]
  00056	85 c0		 test	 eax, eax
  00058	74 31		 je	 SHORT $LN10@Linsert

; 954  : 				_Addleft = !_DEBUG_LT_PRED(this->comp,

  0005a	8b 45 f8	 mov	 eax, DWORD PTR __Val$[ebp]
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ??$_Kfn@$$CBHPAU_MAPSVR_DATA@@@?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@@Z ; std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>::_Kfn<int const ,_MAPSVR_DATA *>
  00063	83 c4 04	 add	 esp, 4
  00066	50		 push	 eax
  00067	8b 4d f4	 mov	 ecx, DWORD PTR __Trynode$[ebp]
  0006a	51		 push	 ecx
  0006b	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Key
  00070	83 c4 04	 add	 esp, 4
  00073	50		 push	 eax
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  0007c	0f b6 d0	 movzx	 edx, al
  0007f	f7 da		 neg	 edx
  00081	1b d2		 sbb	 edx, edx
  00083	83 c2 01	 add	 edx, 1
  00086	88 55 ef	 mov	 BYTE PTR __Addleft$[ebp], dl

; 955  : 					this->_Key(_Trynode),
; 956  : 					this->_Kfn(_Val));	// favor left end
; 957  : 			else

  00089	eb 25		 jmp	 SHORT $LN9@Linsert
$LN10@Linsert:

; 958  : 				_Addleft = _DEBUG_LT_PRED(this->comp,

  0008b	8b 45 f4	 mov	 eax, DWORD PTR __Trynode$[ebp]
  0008e	50		 push	 eax
  0008f	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Key
  00094	83 c4 04	 add	 esp, 4
  00097	50		 push	 eax
  00098	8b 4d f8	 mov	 ecx, DWORD PTR __Val$[ebp]
  0009b	51		 push	 ecx
  0009c	e8 00 00 00 00	 call	 ??$_Kfn@$$CBHPAU_MAPSVR_DATA@@@?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@@Z ; std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>::_Kfn<int const ,_MAPSVR_DATA *>
  000a1	83 c4 04	 add	 esp, 4
  000a4	50		 push	 eax
  000a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  000ad	88 45 ef	 mov	 BYTE PTR __Addleft$[ebp], al
$LN9@Linsert:

; 959  : 					this->_Kfn(_Val),
; 960  : 					this->_Key(_Trynode));	// favor right end
; 961  : 			_Trynode = _Addleft ? this->_Left(_Trynode)
; 962  : 				: this->_Right(_Trynode);

  000b0	0f b6 45 ef	 movzx	 eax, BYTE PTR __Addleft$[ebp]
  000b4	85 c0		 test	 eax, eax
  000b6	74 13		 je	 SHORT $LN15@Linsert
  000b8	8b 4d f4	 mov	 ecx, DWORD PTR __Trynode$[ebp]
  000bb	51		 push	 ecx
  000bc	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  000c1	83 c4 04	 add	 esp, 4
  000c4	8b 10		 mov	 edx, DWORD PTR [eax]
  000c6	89 55 84	 mov	 DWORD PTR tv147[ebp], edx
  000c9	eb 11		 jmp	 SHORT $LN16@Linsert
$LN15@Linsert:
  000cb	8b 45 f4	 mov	 eax, DWORD PTR __Trynode$[ebp]
  000ce	50		 push	 eax
  000cf	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  000d4	83 c4 04	 add	 esp, 4
  000d7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d9	89 4d 84	 mov	 DWORD PTR tv147[ebp], ecx
$LN16@Linsert:
  000dc	8b 55 84	 mov	 edx, DWORD PTR tv147[ebp]
  000df	89 55 f4	 mov	 DWORD PTR __Trynode$[ebp], edx

; 963  : 			}

  000e2	e9 4e ff ff ff	 jmp	 $LN12@Linsert
$LN11@Linsert:

; 964  : 
; 965  : 		if (this->_Multi)

  000e7	33 c0		 xor	 eax, eax
  000e9	74 37		 je	 SHORT $LN8@Linsert

; 966  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));

  000eb	c6 45 8b 01	 mov	 BYTE PTR $T230861[ebp], 1
  000ef	8d 45 8b	 lea	 eax, DWORD PTR $T230861[ebp]
  000f2	50		 push	 eax
  000f3	8b 4d 0c	 mov	 ecx, DWORD PTR __Node$[ebp]
  000f6	51		 push	 ecx
  000f7	8b 55 f0	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000fa	52		 push	 edx
  000fb	0f b6 45 ef	 movzx	 eax, BYTE PTR __Addleft$[ebp]
  000ff	50		 push	 eax
  00100	8d 4d 8c	 lea	 ecx, DWORD PTR $T230862[ebp]
  00103	51		 push	 ecx
  00104	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00107	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Insert
  0010c	50		 push	 eax
  0010d	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00110	e8 00 00 00 00	 call	 ??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>
  00115	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00118	e9 20 01 00 00	 jmp	 $LN13@Linsert

; 967  : 		else

  0011d	e9 1b 01 00 00	 jmp	 $LN13@Linsert
$LN8@Linsert:

; 968  : 			{	// insert only if unique
; 969  : 			iterator _Where = iterator(_Wherenode, this);

  00122	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00125	50		 push	 eax
  00126	8b 4d f0	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  00129	51		 push	 ecx
  0012a	8d 4d e8	 lea	 ecx, DWORD PTR __Where$229883[ebp]
  0012d	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >

; 970  : 			if (!_Addleft)

  00132	0f b6 45 ef	 movzx	 eax, BYTE PTR __Addleft$[ebp]
  00136	85 c0		 test	 eax, eax
  00138	75 02		 jne	 SHORT $LN6@Linsert
  0013a	eb 55		 jmp	 SHORT $LN5@Linsert
$LN6@Linsert:

; 971  : 				;	// need to test if insert after is okay
; 972  : 			else if (_Where == begin())

  0013c	8d 45 90	 lea	 eax, DWORD PTR $T230863[ebp]
  0013f	50		 push	 eax
  00140	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00143	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::begin
  00148	50		 push	 eax
  00149	8d 4d e8	 lea	 ecx, DWORD PTR __Where$229883[ebp]
  0014c	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator==
  00151	0f b6 c8	 movzx	 ecx, al
  00154	85 c9		 test	 ecx, ecx
  00156	74 31		 je	 SHORT $LN4@Linsert

; 973  : 				return (_Pairib(_Insert(true, _Wherenode, _Node), true));

  00158	c6 45 97 01	 mov	 BYTE PTR $T230864[ebp], 1
  0015c	8d 45 97	 lea	 eax, DWORD PTR $T230864[ebp]
  0015f	50		 push	 eax
  00160	8b 4d 0c	 mov	 ecx, DWORD PTR __Node$[ebp]
  00163	51		 push	 ecx
  00164	8b 55 f0	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00167	52		 push	 edx
  00168	6a 01		 push	 1
  0016a	8d 45 98	 lea	 eax, DWORD PTR $T230865[ebp]
  0016d	50		 push	 eax
  0016e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00171	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Insert
  00176	50		 push	 eax
  00177	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0017a	e8 00 00 00 00	 call	 ??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>
  0017f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00182	e9 b6 00 00 00	 jmp	 $LN13@Linsert

; 974  : 			else

  00187	eb 08		 jmp	 SHORT $LN5@Linsert
$LN4@Linsert:

; 975  : 				--_Where;	// need to test if insert before is okay

  00189	8d 4d e8	 lea	 ecx, DWORD PTR __Where$229883[ebp]
  0018c	e8 00 00 00 00	 call	 ??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator--
$LN5@Linsert:

; 976  : 
; 977  : 			if (_DEBUG_LT_PRED(this->comp,

  00191	8b 45 f8	 mov	 eax, DWORD PTR __Val$[ebp]
  00194	50		 push	 eax
  00195	e8 00 00 00 00	 call	 ??$_Kfn@$$CBHPAU_MAPSVR_DATA@@@?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@@Z ; std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>::_Kfn<int const ,_MAPSVR_DATA *>
  0019a	83 c4 04	 add	 esp, 4
  0019d	50		 push	 eax
  0019e	8d 4d e8	 lea	 ecx, DWORD PTR __Where$229883[ebp]
  001a1	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::_Mynode
  001a6	50		 push	 eax
  001a7	e8 00 00 00 00	 call	 ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Key
  001ac	83 c4 04	 add	 esp, 4
  001af	50		 push	 eax
  001b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b3	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  001b8	0f b6 c8	 movzx	 ecx, al
  001bb	85 c9		 test	 ecx, ecx
  001bd	74 31		 je	 SHORT $LN2@Linsert

; 978  : 				this->_Key(_Where._Mynode()),
; 979  : 				this->_Kfn(_Val)))
; 980  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));

  001bf	c6 45 9f 01	 mov	 BYTE PTR $T230866[ebp], 1
  001c3	8d 45 9f	 lea	 eax, DWORD PTR $T230866[ebp]
  001c6	50		 push	 eax
  001c7	8b 4d 0c	 mov	 ecx, DWORD PTR __Node$[ebp]
  001ca	51		 push	 ecx
  001cb	8b 55 f0	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  001ce	52		 push	 edx
  001cf	0f b6 45 ef	 movzx	 eax, BYTE PTR __Addleft$[ebp]
  001d3	50		 push	 eax
  001d4	8d 4d a0	 lea	 ecx, DWORD PTR $T230867[ebp]
  001d7	51		 push	 ecx
  001d8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001db	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Insert
  001e0	50		 push	 eax
  001e1	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  001e4	e8 00 00 00 00	 call	 ??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>
  001e9	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  001ec	eb 4f		 jmp	 SHORT $LN13@Linsert

; 981  : 			else

  001ee	eb 4d		 jmp	 SHORT $LN13@Linsert
$LN2@Linsert:

; 982  : 				{	// duplicate, don't insert
; 983  : 				_Dest_val(this->_Alval,
; 984  : 					_STD addressof(this->_Myval(_Node)));

  001f0	8b 45 0c	 mov	 eax, DWORD PTR __Node$[ebp]
  001f3	50		 push	 eax
  001f4	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Myval
  001f9	83 c4 04	 add	 esp, 4
  001fc	50		 push	 eax
  001fd	e8 00 00 00 00	 call	 ??$addressof@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@YAPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@AAU10@@Z ; std::addressof<std::pair<int const ,_MAPSVR_DATA *> >
  00202	83 c4 04	 add	 esp, 4
  00205	50		 push	 eax
  00206	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00209	83 c1 0d	 add	 ecx, 13			; 0000000dH
  0020c	51		 push	 ecx
  0020d	e8 00 00 00 00	 call	 ??$_Dest_val@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@U?$pair@$$CBHPAU_MAPSVR_DATA@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@0@PAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,std::pair<int const ,_MAPSVR_DATA *> >
  00212	83 c4 08	 add	 esp, 8

; 985  : 
; 986  : 				this->_Alnod.deallocate(_Node, 1);

  00215	6a 01		 push	 1
  00217	8b 45 0c	 mov	 eax, DWORD PTR __Node$[ebp]
  0021a	50		 push	 eax
  0021b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0021e	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00221	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::deallocate

; 987  : 
; 988  : 				return (_Pairib(_Where, false));

  00226	c6 45 a7 00	 mov	 BYTE PTR $T230868[ebp], 0
  0022a	8d 45 a7	 lea	 eax, DWORD PTR $T230868[ebp]
  0022d	50		 push	 eax
  0022e	8d 4d e8	 lea	 ecx, DWORD PTR __Where$229883[ebp]
  00231	51		 push	 ecx
  00232	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00235	e8 00 00 00 00	 call	 ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &,bool>
  0023a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN13@Linsert:

; 989  : 				}
; 990  : 			}
; 991  : 		}

  0023d	5f		 pop	 edi
  0023e	5e		 pop	 esi
  0023f	5b		 pop	 ebx
  00240	8b e5		 mov	 esp, ebp
  00242	5d		 pop	 ebp
  00243	c2 0c 00	 ret	 12			; 0000000cH
?_Linsert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@_N@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Linsert
_TEXT	ENDS
PUBLIC	??$_Destroy@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@YAXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@@Z ; std::_Destroy<std::pair<int const ,_MAPSVR_DATA *> >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@@Z PROC ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 213  : 		_Destroy(_Ptr);

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$_Destroy@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@YAXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@@Z ; std::_Destroy<std::pair<int const ,_MAPSVR_DATA *> >
  00015	83 c4 04	 add	 esp, 4

; 214  : 		}

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?destroy@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@@Z ENDP ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::destroy
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_MAPSVR_DATA@@ABQAU1@@std@@YAXPAPAU_MAPSVR_DATA@@ABQAU1@@Z ; std::_Construct<_MAPSVR_DATA *,_MAPSVR_DATA * const &>
; Function compile flags: /Odtp /ZI
;	COMDAT ?construct@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@ABQAU3@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@ABQAU3@@Z PROC ; std::allocator<_MAPSVR_DATA *>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 197  : 		_Construct(_Ptr, _Val);

  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ??$_Construct@PAU_MAPSVR_DATA@@ABQAU1@@std@@YAXPAPAU_MAPSVR_DATA@@ABQAU1@@Z ; std::_Construct<_MAPSVR_DATA *,_MAPSVR_DATA * const &>
  00019	83 c4 08	 add	 esp, 8

; 198  : 		}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
?construct@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@ABQAU3@@Z ENDP ; std::allocator<_MAPSVR_DATA *>::construct
_TEXT	ENDS
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::max_size
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
; File d:\microsoft visual studio 10.0\vc\include\xtree
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@1@Z
_TEXT	SEGMENT
__Pnode$229930 = -8					; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@1@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 1631 : 		{	// add node with value next to _Wherenode, to left if _Addleft

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1632 : 		if (max_size() - 1 <= this->_Mysize)

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?max_size@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::max_size
  00014	83 e8 01	 sub	 eax, 1
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  0001d	77 40		 ja	 SHORT $LN17@Insert

; 1633 : 			{	// tree would get too big, fail
; 1634 : 			_Dest_val(this->_Alval,
; 1635 : 				_STD addressof(this->_Myval(_Newnode)));

  0001f	8b 45 14	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Myval
  00028	83 c4 04	 add	 esp, 4
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$addressof@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@YAPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@AAU10@@Z ; std::addressof<std::pair<int const ,_MAPSVR_DATA *> >
  00031	83 c4 04	 add	 esp, 4
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	83 c1 0d	 add	 ecx, 13			; 0000000dH
  0003b	51		 push	 ecx
  0003c	e8 00 00 00 00	 call	 ??$_Dest_val@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@U?$pair@$$CBHPAU_MAPSVR_DATA@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@0@PAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,std::pair<int const ,_MAPSVR_DATA *> >
  00041	83 c4 08	 add	 esp, 8

; 1636 : 
; 1637 : 			this->_Alnod.deallocate(_Newnode, 1);

  00044	6a 01		 push	 1
  00046	8b 45 14	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00049	50		 push	 eax
  0004a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00050	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::deallocate

; 1638 : 
; 1639 : 			_Xlength_error("map/set<T> too long");

  00055	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0005a	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN17@Insert:

; 1640 : 			}
; 1641 : 		++this->_Mysize;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00065	83 c1 01	 add	 ecx, 1
  00068	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006b	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1642 : 		_Newnode->_Parent = _Wherenode;

  0006e	8b 45 14	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00071	8b 4d 10	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  00074	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 1643 : 
; 1644 : 		if (_Wherenode == this->_Myhead)

  00077	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007a	8b 4d 10	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  0007d	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00080	75 29		 jne	 SHORT $LN16@Insert

; 1645 : 			{	// first node in tree, just set head values
; 1646 : 			_Root() = _Newnode;

  00082	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Root
  0008a	8b 4d 14	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  0008d	89 08		 mov	 DWORD PTR [eax], ecx

; 1647 : 			_Lmost() = _Newnode;

  0008f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lmost
  00097	8b 4d 14	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  0009a	89 08		 mov	 DWORD PTR [eax], ecx

; 1648 : 			_Rmost() = _Newnode;

  0009c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rmost
  000a4	8b 4d 14	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  000a7	89 08		 mov	 DWORD PTR [eax], ecx
  000a9	eb 64		 jmp	 SHORT $LN15@Insert
$LN16@Insert:

; 1649 : 			}
; 1650 : 		else if (_Addleft)

  000ab	0f b6 45 0c	 movzx	 eax, BYTE PTR __Addleft$[ebp]
  000af	85 c0		 test	 eax, eax
  000b1	74 2f		 je	 SHORT $LN14@Insert

; 1651 : 			{	// add to left of _Wherenode
; 1652 : 			this->_Left(_Wherenode) = _Newnode;

  000b3	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  000b6	50		 push	 eax
  000b7	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  000bc	83 c4 04	 add	 esp, 4
  000bf	8b 4d 14	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  000c2	89 08		 mov	 DWORD PTR [eax], ecx

; 1653 : 			if (_Wherenode == _Lmost())

  000c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c7	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lmost
  000cc	8b 4d 10	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  000cf	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000d1	75 0d		 jne	 SHORT $LN13@Insert

; 1654 : 				_Lmost() = _Newnode;

  000d3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d6	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lmost
  000db	8b 4d 14	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  000de	89 08		 mov	 DWORD PTR [eax], ecx
$LN13@Insert:

; 1655 : 			}
; 1656 : 		else

  000e0	eb 2d		 jmp	 SHORT $LN15@Insert
$LN14@Insert:

; 1657 : 			{	// add to right of _Wherenode
; 1658 : 			this->_Right(_Wherenode) = _Newnode;

  000e2	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  000e5	50		 push	 eax
  000e6	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  000eb	83 c4 04	 add	 esp, 4
  000ee	8b 4d 14	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  000f1	89 08		 mov	 DWORD PTR [eax], ecx

; 1659 : 			if (_Wherenode == _Rmost())

  000f3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f6	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rmost
  000fb	8b 4d 10	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  000fe	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00100	75 0d		 jne	 SHORT $LN15@Insert

; 1660 : 				_Rmost() = _Newnode;

  00102	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00105	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rmost
  0010a	8b 4d 14	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  0010d	89 08		 mov	 DWORD PTR [eax], ecx
$LN15@Insert:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;

  0010f	8b 45 14	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00112	89 45 f8	 mov	 DWORD PTR __Pnode$229930[ebp], eax
$LN10@Insert:

; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  00115	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229930[ebp]
  00118	50		 push	 eax
  00119	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  0011e	83 c4 04	 add	 esp, 4
  00121	8b 08		 mov	 ecx, DWORD PTR [eax]
  00123	51		 push	 ecx
  00124	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  00129	83 c4 04	 add	 esp, 4
  0012c	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0012f	85 d2		 test	 edx, edx
  00131	0f 85 ce 02 00
	00		 jne	 $LN9@Insert

; 1665 : 			if (this->_Parent(_Pnode)
; 1666 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

  00137	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229930[ebp]
  0013a	50		 push	 eax
  0013b	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00140	83 c4 04	 add	 esp, 4
  00143	8b f0		 mov	 esi, eax
  00145	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$229930[ebp]
  00148	51		 push	 ecx
  00149	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  0014e	83 c4 04	 add	 esp, 4
  00151	8b 10		 mov	 edx, DWORD PTR [eax]
  00153	52		 push	 edx
  00154	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00159	83 c4 04	 add	 esp, 4
  0015c	8b 00		 mov	 eax, DWORD PTR [eax]
  0015e	50		 push	 eax
  0015f	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  00164	83 c4 04	 add	 esp, 4
  00167	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00169	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0016b	0f 85 4a 01 00
	00		 jne	 $LN8@Insert

; 1667 : 				{	// fixup red-red in left subtree
; 1668 : 				_Wherenode =
; 1669 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));

  00171	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229930[ebp]
  00174	50		 push	 eax
  00175	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  0017a	83 c4 04	 add	 esp, 4
  0017d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0017f	51		 push	 ecx
  00180	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00185	83 c4 04	 add	 esp, 4
  00188	8b 10		 mov	 edx, DWORD PTR [eax]
  0018a	52		 push	 edx
  0018b	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  00190	83 c4 04	 add	 esp, 4
  00193	8b 00		 mov	 eax, DWORD PTR [eax]
  00195	89 45 10	 mov	 DWORD PTR __Wherenode$[ebp], eax

; 1670 : 				if (this->_Color(_Wherenode) == this->_Red)

  00198	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0019b	50		 push	 eax
  0019c	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  001a1	83 c4 04	 add	 esp, 4
  001a4	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  001a7	85 c9		 test	 ecx, ecx
  001a9	75 6f		 jne	 SHORT $LN7@Insert

; 1671 : 					{	// parent has two red children, blacken both
; 1672 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

  001ab	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229930[ebp]
  001ae	50		 push	 eax
  001af	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  001b4	83 c4 04	 add	 esp, 4
  001b7	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b9	51		 push	 ecx
  001ba	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  001bf	83 c4 04	 add	 esp, 4
  001c2	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1673 : 					this->_Color(_Wherenode) = this->_Black;

  001c5	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  001c8	50		 push	 eax
  001c9	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  001ce	83 c4 04	 add	 esp, 4
  001d1	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1674 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))
; 1675 : 						= this->_Red;

  001d4	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229930[ebp]
  001d7	50		 push	 eax
  001d8	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  001dd	83 c4 04	 add	 esp, 4
  001e0	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e2	51		 push	 ecx
  001e3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  001e8	83 c4 04	 add	 esp, 4
  001eb	8b 10		 mov	 edx, DWORD PTR [eax]
  001ed	52		 push	 edx
  001ee	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  001f3	83 c4 04	 add	 esp, 4
  001f6	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1676 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

  001f9	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229930[ebp]
  001fc	50		 push	 eax
  001fd	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00202	83 c4 04	 add	 esp, 4
  00205	8b 08		 mov	 ecx, DWORD PTR [eax]
  00207	51		 push	 ecx
  00208	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  0020d	83 c4 04	 add	 esp, 4
  00210	8b 10		 mov	 edx, DWORD PTR [eax]
  00212	89 55 f8	 mov	 DWORD PTR __Pnode$229930[ebp], edx

; 1677 : 					}
; 1678 : 				else

  00215	e9 9c 00 00 00	 jmp	 $LN6@Insert
$LN7@Insert:

; 1679 : 					{	// parent has red and black children
; 1680 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

  0021a	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229930[ebp]
  0021d	50		 push	 eax
  0021e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00223	83 c4 04	 add	 esp, 4
  00226	8b 08		 mov	 ecx, DWORD PTR [eax]
  00228	51		 push	 ecx
  00229	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  0022e	83 c4 04	 add	 esp, 4
  00231	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$229930[ebp]
  00234	3b 10		 cmp	 edx, DWORD PTR [eax]
  00236	75 1d		 jne	 SHORT $LN5@Insert

; 1681 : 						{	// rotate right child to left
; 1682 : 						_Pnode = this->_Parent(_Pnode);

  00238	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229930[ebp]
  0023b	50		 push	 eax
  0023c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00241	83 c4 04	 add	 esp, 4
  00244	8b 08		 mov	 ecx, DWORD PTR [eax]
  00246	89 4d f8	 mov	 DWORD PTR __Pnode$229930[ebp], ecx

; 1683 : 						_Lrotate(_Pnode);

  00249	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229930[ebp]
  0024c	50		 push	 eax
  0024d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00250	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lrotate
$LN5@Insert:

; 1684 : 						}
; 1685 : 					this->_Color(this->_Parent(_Pnode)) =
; 1686 : 						this->_Black;	// propagate red up

  00255	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229930[ebp]
  00258	50		 push	 eax
  00259	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  0025e	83 c4 04	 add	 esp, 4
  00261	8b 08		 mov	 ecx, DWORD PTR [eax]
  00263	51		 push	 ecx
  00264	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  00269	83 c4 04	 add	 esp, 4
  0026c	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1687 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1688 : 						this->_Red;

  0026f	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229930[ebp]
  00272	50		 push	 eax
  00273	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00278	83 c4 04	 add	 esp, 4
  0027b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0027d	51		 push	 ecx
  0027e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00283	83 c4 04	 add	 esp, 4
  00286	8b 10		 mov	 edx, DWORD PTR [eax]
  00288	52		 push	 edx
  00289	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  0028e	83 c4 04	 add	 esp, 4
  00291	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

  00294	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229930[ebp]
  00297	50		 push	 eax
  00298	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  0029d	83 c4 04	 add	 esp, 4
  002a0	8b 08		 mov	 ecx, DWORD PTR [eax]
  002a2	51		 push	 ecx
  002a3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  002a8	83 c4 04	 add	 esp, 4
  002ab	8b 10		 mov	 edx, DWORD PTR [eax]
  002ad	52		 push	 edx
  002ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002b1	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rrotate
$LN6@Insert:

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

  002b6	e9 45 01 00 00	 jmp	 $LN4@Insert
$LN8@Insert:

; 1693 : 				{	// fixup red-red in right subtree
; 1694 : 				_Wherenode =
; 1695 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));

  002bb	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229930[ebp]
  002be	50		 push	 eax
  002bf	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  002c4	83 c4 04	 add	 esp, 4
  002c7	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c9	51		 push	 ecx
  002ca	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  002cf	83 c4 04	 add	 esp, 4
  002d2	8b 10		 mov	 edx, DWORD PTR [eax]
  002d4	52		 push	 edx
  002d5	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  002da	83 c4 04	 add	 esp, 4
  002dd	8b 00		 mov	 eax, DWORD PTR [eax]
  002df	89 45 10	 mov	 DWORD PTR __Wherenode$[ebp], eax

; 1696 : 				if (this->_Color(_Wherenode) == this->_Red)

  002e2	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  002e5	50		 push	 eax
  002e6	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  002eb	83 c4 04	 add	 esp, 4
  002ee	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  002f1	85 c9		 test	 ecx, ecx
  002f3	75 6f		 jne	 SHORT $LN3@Insert

; 1697 : 					{	// parent has two red children, blacken both
; 1698 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

  002f5	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229930[ebp]
  002f8	50		 push	 eax
  002f9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  002fe	83 c4 04	 add	 esp, 4
  00301	8b 08		 mov	 ecx, DWORD PTR [eax]
  00303	51		 push	 ecx
  00304	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  00309	83 c4 04	 add	 esp, 4
  0030c	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1699 : 					this->_Color(_Wherenode) = this->_Black;

  0030f	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  00312	50		 push	 eax
  00313	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  00318	83 c4 04	 add	 esp, 4
  0031b	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1700 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1701 : 						this->_Red;

  0031e	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229930[ebp]
  00321	50		 push	 eax
  00322	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00327	83 c4 04	 add	 esp, 4
  0032a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0032c	51		 push	 ecx
  0032d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00332	83 c4 04	 add	 esp, 4
  00335	8b 10		 mov	 edx, DWORD PTR [eax]
  00337	52		 push	 edx
  00338	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  0033d	83 c4 04	 add	 esp, 4
  00340	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1702 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

  00343	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229930[ebp]
  00346	50		 push	 eax
  00347	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  0034c	83 c4 04	 add	 esp, 4
  0034f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00351	51		 push	 ecx
  00352	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00357	83 c4 04	 add	 esp, 4
  0035a	8b 10		 mov	 edx, DWORD PTR [eax]
  0035c	89 55 f8	 mov	 DWORD PTR __Pnode$229930[ebp], edx

; 1703 : 					}
; 1704 : 				else

  0035f	e9 9c 00 00 00	 jmp	 $LN4@Insert
$LN3@Insert:

; 1705 : 					{	// parent has red and black children
; 1706 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

  00364	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229930[ebp]
  00367	50		 push	 eax
  00368	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  0036d	83 c4 04	 add	 esp, 4
  00370	8b 08		 mov	 ecx, DWORD PTR [eax]
  00372	51		 push	 ecx
  00373	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  00378	83 c4 04	 add	 esp, 4
  0037b	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$229930[ebp]
  0037e	3b 10		 cmp	 edx, DWORD PTR [eax]
  00380	75 1d		 jne	 SHORT $LN1@Insert

; 1707 : 						{	// rotate left child to right
; 1708 : 						_Pnode = this->_Parent(_Pnode);

  00382	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229930[ebp]
  00385	50		 push	 eax
  00386	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  0038b	83 c4 04	 add	 esp, 4
  0038e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00390	89 4d f8	 mov	 DWORD PTR __Pnode$229930[ebp], ecx

; 1709 : 						_Rrotate(_Pnode);

  00393	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229930[ebp]
  00396	50		 push	 eax
  00397	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0039a	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rrotate
$LN1@Insert:

; 1710 : 						}
; 1711 : 					this->_Color(this->_Parent(_Pnode)) =
; 1712 : 						this->_Black;	// propagate red up

  0039f	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229930[ebp]
  003a2	50		 push	 eax
  003a3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  003a8	83 c4 04	 add	 esp, 4
  003ab	8b 08		 mov	 ecx, DWORD PTR [eax]
  003ad	51		 push	 ecx
  003ae	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  003b3	83 c4 04	 add	 esp, 4
  003b6	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1713 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1714 : 						this->_Red;

  003b9	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229930[ebp]
  003bc	50		 push	 eax
  003bd	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  003c2	83 c4 04	 add	 esp, 4
  003c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  003c7	51		 push	 ecx
  003c8	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  003cd	83 c4 04	 add	 esp, 4
  003d0	8b 10		 mov	 edx, DWORD PTR [eax]
  003d2	52		 push	 edx
  003d3	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  003d8	83 c4 04	 add	 esp, 4
  003db	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1715 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

  003de	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229930[ebp]
  003e1	50		 push	 eax
  003e2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  003e7	83 c4 04	 add	 esp, 4
  003ea	8b 08		 mov	 ecx, DWORD PTR [eax]
  003ec	51		 push	 ecx
  003ed	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  003f2	83 c4 04	 add	 esp, 4
  003f5	8b 10		 mov	 edx, DWORD PTR [eax]
  003f7	52		 push	 edx
  003f8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003fb	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lrotate
$LN4@Insert:

; 1716 : 					}
; 1717 : 				}

  00400	e9 10 fd ff ff	 jmp	 $LN10@Insert
$LN9@Insert:

; 1718 : 
; 1719 : 		this->_Color(_Root()) = this->_Black;	// root is always black

  00405	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00408	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Root
  0040d	8b 00		 mov	 eax, DWORD PTR [eax]
  0040f	50		 push	 eax
  00410	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  00415	83 c4 04	 add	 esp, 4
  00418	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1720 : 		return (iterator(_Newnode, this));

  0041b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0041e	50		 push	 eax
  0041f	8b 4d 14	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  00422	51		 push	 ecx
  00423	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00426	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >
  0042b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN19@Insert:

; 1721 : 		}

  0042e	5f		 pop	 edi
  0042f	5e		 pop	 esi
  00430	5b		 pop	 ebx
  00431	8b e5		 mov	 esp, ebp
  00433	5d		 pop	 ebp
  00434	c2 10 00	 ret	 16			; 00000010H
?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@1@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Insert
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>
PUBLIC	??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &>
PUBLIC	??$move@AA_N@std@@YA$$QA_NAA_N@Z		; std::move<bool &>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 227  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$move@AA_N@std@@YA$$QA_NAA_N@Z ; std::move<bool &>
  00015	83 c4 04	 add	 esp, 4
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &>
  00022	83 c4 04	 add	 esp, 4
  00025	50		 push	 eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>

; 228  : 		}

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 08 00	 ret	 8
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator--
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 418  : 		{	// predecrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 419  : 		--(*(_Mybase *)this);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator--

; 420  : 		return (*this);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 421  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::max_size
; Function compile flags: /Odtp /ZI
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 873  : 		{	// return maximum possible length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 874  : 		return (this->_Alval.max_size());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 0d	 add	 ecx, 13			; 0000000dH
  00012	e8 00 00 00 00	 call	 ?max_size@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::max_size

; 875  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::max_size
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &>
  00015	83 c4 04	 add	 esp, 4
  00018	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001d	89 0a		 mov	 DWORD PTR [edx], ecx
  0001f	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ??$move@AA_N@std@@YA$$QA_NAA_N@Z ; std::move<bool &>
  00028	83 c4 04	 add	 esp, 4
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	8a 10		 mov	 dl, BYTE PTR [eax]
  00030	88 51 04	 mov	 BYTE PTR [ecx+4], dl

; 146  : 		}

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator--
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 277  : 		{	// predecrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 278  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 279  : 		if (this->_Getcont() == 0
; 280  : 			|| this->_Ptr == 0)
; 281  : 			{	// report error
; 282  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 283  : 			_SCL_SECURE_OUT_OF_RANGE;
; 284  : 			}
; 285  : 
; 286  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 287  : 		--(*(_Mybase *)this);
; 288  : 		if (_Ptrsav == this->_Ptr)
; 289  : 			{	// report error
; 290  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 291  : 			_SCL_SECURE_OUT_OF_RANGE;
; 292  : 			}
; 293  : 
; 294  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 295  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 296  : 
; 297  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 298  : 		--(*(_Mybase *)this);
; 299  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 300  : 
; 301  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 302  : 		--(*(_Mybase *)this);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator--

; 303  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 304  : 
; 305  : 		return (*this);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 306  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator--
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -76						; size = 4
__Count$ = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::max_size, COMDAT
; _this$ = ecx

; 217  : 		{	// estimate maximum array size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);

  0000c	c7 45 f8 ff ff
	ff 1f		 mov	 DWORD PTR __Count$[ebp], 536870911 ; 1fffffffH

; 219  : 		return (0 < _Count ? _Count : 1);

  00013	83 7d f8 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00017	76 08		 jbe	 SHORT $LN3@max_size@2
  00019	8b 45 f8	 mov	 eax, DWORD PTR __Count$[ebp]
  0001c	89 45 b4	 mov	 DWORD PTR tv65[ebp], eax
  0001f	eb 07		 jmp	 SHORT $LN4@max_size@2
$LN3@max_size@2:
  00021	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv65[ebp], 1
$LN4@max_size@2:
  00028	8b 45 b4	 mov	 eax, DWORD PTR tv65[ebp]

; 220  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::max_size
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Pnode$229999 = -8					; size = 4
_this$ = -4						; size = 4
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 83   : 		{	// predecrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 84   : 		if (_Mytree::_Isnil(_Ptr))

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  00017	83 c4 04	 add	 esp, 4
  0001a	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0001d	85 d2		 test	 edx, edx
  0001f	74 1a		 je	 SHORT $LN8@operator@2

; 85   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 08		 mov	 ecx, DWORD PTR [eax]
  00026	51		 push	 ecx
  00027	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  0002c	83 c4 04	 add	 esp, 4
  0002f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00032	8b 00		 mov	 eax, DWORD PTR [eax]
  00034	89 02		 mov	 DWORD PTR [edx], eax
  00036	e9 a4 00 00 00	 jmp	 $LN7@operator@2
$LN8@operator@2:

; 86   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  00046	83 c4 04	 add	 esp, 4
  00049	8b 10		 mov	 edx, DWORD PTR [eax]
  0004b	52		 push	 edx
  0004c	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  00051	83 c4 04	 add	 esp, 4
  00054	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00057	85 c0		 test	 eax, eax
  00059	75 20		 jne	 SHORT $LN4@operator@2

; 87   : 			_Ptr = _Mytree::_Max(
; 88   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree

  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00060	51		 push	 ecx
  00061	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  00066	83 c4 04	 add	 esp, 4
  00069	8b 10		 mov	 edx, DWORD PTR [eax]
  0006b	52		 push	 edx
  0006c	e8 00 00 00 00	 call	 ?_Max@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Max
  00071	83 c4 04	 add	 esp, 4
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	89 01		 mov	 DWORD PTR [ecx], eax

; 89   : 		else

  00079	eb 64		 jmp	 SHORT $LN7@operator@2
$LN4@operator@2:

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  0007b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00080	51		 push	 ecx
  00081	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00086	83 c4 04	 add	 esp, 4
  00089	8b 10		 mov	 edx, DWORD PTR [eax]
  0008b	89 55 f8	 mov	 DWORD PTR __Pnode$229999[ebp], edx
  0008e	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229999[ebp]
  00091	50		 push	 eax
  00092	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  00097	83 c4 04	 add	 esp, 4
  0009a	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0009d	85 c9		 test	 ecx, ecx
  0009f	75 1f		 jne	 SHORT $LN3@operator@2
  000a1	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$229999[ebp]
  000a4	50		 push	 eax
  000a5	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  000aa	83 c4 04	 add	 esp, 4
  000ad	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b2	3b 10		 cmp	 edx, DWORD PTR [eax]
  000b4	75 0a		 jne	 SHORT $LN3@operator@2

; 94   : 				_Ptr = _Pnode;	// ==> parent while left subtree

  000b6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b9	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$229999[ebp]
  000bc	89 08		 mov	 DWORD PTR [eax], ecx
  000be	eb bb		 jmp	 SHORT $LN4@operator@2
$LN3@operator@2:

; 95   : 			if (_Mytree::_Isnil(_Ptr))

  000c0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c5	51		 push	 ecx
  000c6	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  000cb	83 c4 04	 add	 esp, 4
  000ce	0f be 10	 movsx	 edx, BYTE PTR [eax]
  000d1	85 d2		 test	 edx, edx
  000d3	74 02		 je	 SHORT $LN2@operator@2

; 96   : 				;	// begin() shouldn't be decremented, don't move
; 97   : 			else

  000d5	eb 08		 jmp	 SHORT $LN7@operator@2
$LN2@operator@2:

; 98   : 				_Ptr = _Pnode;	// ==> parent if not head

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$229999[ebp]
  000dd	89 08		 mov	 DWORD PTR [eax], ecx
$LN7@operator@2:

; 99   : 			}
; 100  : 		return (*this);

  000df	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 101  : 		}

  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi
  000e4	5b		 pop	 ebx
  000e5	8b e5		 mov	 esp, ebp
  000e7	5d		 pop	 ebp
  000e8	c3		 ret	 0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator--
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$forward@AAF@std@@YAAAFAAF@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAF@std@@YAAAFAAF@Z PROC			; std::forward<short &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 79   : 	return ((_Ty&&)_Arg);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$forward@AAF@std@@YAAAFAAF@Z ENDP			; std::forward<short &>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$forward@AAPAU_MAPSVR_DATA@@@std@@YAAAPAU_MAPSVR_DATA@@AAPAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU_MAPSVR_DATA@@@std@@YAAAPAU_MAPSVR_DATA@@AAPAU1@@Z PROC ; std::forward<_MAPSVR_DATA * &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 79   : 	return ((_Ty&&)_Arg);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$forward@AAPAU_MAPSVR_DATA@@@std@@YAAAPAU_MAPSVR_DATA@@AAPAU1@@Z ENDP ; std::forward<_MAPSVR_DATA * &>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$?0AAFAAPAU_MAPSVR_DATA@@@?$_Pair_base@HPAU_MAPSVR_DATA@@@std@@QAE@AAFAAPAU_MAPSVR_DATA@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAFAAPAU_MAPSVR_DATA@@@?$_Pair_base@HPAU_MAPSVR_DATA@@@std@@QAE@AAFAAPAU_MAPSVR_DATA@@@Z PROC ; std::_Pair_base<int,_MAPSVR_DATA *>::_Pair_base<int,_MAPSVR_DATA *><short &,_MAPSVR_DATA * &>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$forward@AAF@std@@YAAAFAAF@Z ; std::forward<short &>
  00015	83 c4 04	 add	 esp, 4
  00018	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  0001b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001e	89 0a		 mov	 DWORD PTR [edx], ecx
  00020	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 ??$forward@AAPAU_MAPSVR_DATA@@@std@@YAAAPAU_MAPSVR_DATA@@AAPAU1@@Z ; std::forward<_MAPSVR_DATA * &>
  00029	83 c4 04	 add	 esp, 4
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 10		 mov	 edx, DWORD PTR [eax]
  00031	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 164  : 		}

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 08 00	 ret	 8
??$?0AAFAAPAU_MAPSVR_DATA@@@?$_Pair_base@HPAU_MAPSVR_DATA@@@std@@QAE@AAFAAPAU_MAPSVR_DATA@@@Z ENDP ; std::_Pair_base<int,_MAPSVR_DATA *>::_Pair_base<int,_MAPSVR_DATA *><short &,_MAPSVR_DATA * &>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$forward@U?$pair@HPAU_MAPSVR_DATA@@@std@@@std@@YA$$QAU?$pair@HPAU_MAPSVR_DATA@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@HPAU_MAPSVR_DATA@@@std@@@std@@YA$$QAU?$pair@HPAU_MAPSVR_DATA@@@0@AAU10@@Z PROC ; std::forward<std::pair<int,_MAPSVR_DATA *> >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 79   : 	return ((_Ty&&)_Arg);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$forward@U?$pair@HPAU_MAPSVR_DATA@@@std@@@std@@YA$$QAU?$pair@HPAU_MAPSVR_DATA@@@0@AAU10@@Z ENDP ; std::forward<std::pair<int,_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@U?$pair@$$CBHPAU_MAPSVR_DATA@@@2@U?$pair@HPAU_MAPSVR_DATA@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@0@PAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@$$QAU?$pair@HPAU_MAPSVR_DATA@@@0@@Z ; std::_Cons_val<std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,std::pair<int const ,_MAPSVR_DATA *>,std::pair<int,_MAPSVR_DATA *> >
PUBLIC	?_Buynode@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Buynode
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__catchsym$??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z$0
__unwindtable$??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z$2
__ehfuncinfo$??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z
_TEXT	SEGMENT
tv93 = -100						; size = 4
tv92 = -96						; size = 4
tv91 = -92						; size = 4
__Wherenode$ = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Val$ = 8						; size = 4
??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Buynode<std::pair<int,_MAPSVR_DATA *> >, COMDAT
; _this$ = ecx

; 586  : 		_Nodeptr _Buynode(_Valty&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 54	 sub	 esp, 84			; 00000054H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 587  : 		{	// allocate a node with defaults
; 588  : 		_Nodeptr _Wherenode = _Buynode();

  0002f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Buynode
  00037	89 45 e8	 mov	 DWORD PTR __Wherenode$[ebp], eax

; 589  : 
; 590  : 		_TRY_BEGIN

  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 591  : 		_Cons_val(this->_Alval, _STD addressof(this->_Myval(_Wherenode)),
; 592  : 			_STD forward<_Valty>(_Val));

  00041	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ??$forward@U?$pair@HPAU_MAPSVR_DATA@@@std@@@std@@YA$$QAU?$pair@HPAU_MAPSVR_DATA@@@0@AAU10@@Z ; std::forward<std::pair<int,_MAPSVR_DATA *> >
  0004a	83 c4 04	 add	 esp, 4
  0004d	89 45 a4	 mov	 DWORD PTR tv91[ebp], eax
  00050	8b 4d e8	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  00053	51		 push	 ecx
  00054	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Myval
  00059	83 c4 04	 add	 esp, 4
  0005c	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  0005f	8b 55 a0	 mov	 edx, DWORD PTR tv92[ebp]
  00062	52		 push	 edx
  00063	e8 00 00 00 00	 call	 ??$addressof@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@YAPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@AAU10@@Z ; std::addressof<std::pair<int const ,_MAPSVR_DATA *> >
  00068	83 c4 04	 add	 esp, 4
  0006b	89 45 9c	 mov	 DWORD PTR tv93[ebp], eax
  0006e	8b 45 a4	 mov	 eax, DWORD PTR tv91[ebp]
  00071	50		 push	 eax
  00072	8b 4d 9c	 mov	 ecx, DWORD PTR tv93[ebp]
  00075	51		 push	 ecx
  00076	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00079	83 c2 0d	 add	 edx, 13			; 0000000dH
  0007c	52		 push	 edx
  0007d	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@U?$pair@$$CBHPAU_MAPSVR_DATA@@@2@U?$pair@HPAU_MAPSVR_DATA@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@0@PAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@$$QAU?$pair@HPAU_MAPSVR_DATA@@@0@@Z ; std::_Cons_val<std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,std::pair<int const ,_MAPSVR_DATA *>,std::pair<int,_MAPSVR_DATA *> >
  00082	83 c4 0c	 add	 esp, 12			; 0000000cH
  00085	eb 27		 jmp	 SHORT $LN4@Buynode
__catch$??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z$0:

; 593  : 		_CATCH_ALL
; 594  : 		this->_Alnod.deallocate(_Wherenode, 1);

  00087	6a 01		 push	 1
  00089	8b 45 e8	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0008c	50		 push	 eax
  0008d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00093	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::deallocate

; 595  : 		_RERAISE;

  00098	6a 00		 push	 0
  0009a	6a 00		 push	 0
  0009c	e8 00 00 00 00	 call	 __CxxThrowException@8

; 596  : 		_CATCH_END

  000a1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000a8	b8 00 00 00 00	 mov	 eax, __tryend$??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z$1
  000ad	c3		 ret	 0
$LN4@Buynode:
  000ae	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z$1:

; 597  : 
; 598  : 		return (_Wherenode);

  000b5	8b 45 e8	 mov	 eax, DWORD PTR __Wherenode$[ebp]
$LN3@Buynode:

; 599  : 		}

  000b8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000bb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c2	59		 pop	 ecx
  000c3	5f		 pop	 edi
  000c4	5e		 pop	 esi
  000c5	5b		 pop	 ebx
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a 98	 mov	 ecx, DWORD PTR [edx-104]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Buynode<std::pair<int,_MAPSVR_DATA *> >
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??$construct@AAPAU_MAPSVR_DATA@@@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@AAPAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@AAPAU_MAPSVR_DATA@@@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@AAPAU2@@Z$0
__ehfuncinfo$??$construct@AAPAU_MAPSVR_DATA@@@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@AAPAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@AAPAU_MAPSVR_DATA@@@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@AAPAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ??$construct@AAPAU_MAPSVR_DATA@@@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@AAPAU2@@Z
_TEXT	SEGMENT
tv73 = -92						; size = 4
$T230916 = -88						; size = 4
$T230917 = -84						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAPAU_MAPSVR_DATA@@@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@AAPAU2@@Z PROC ; std::allocator<_MAPSVR_DATA *>::construct<_MAPSVR_DATA * &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@AAPAU_MAPSVR_DATA@@@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@AAPAU2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  0002b	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0002e	50		 push	 eax
  0002f	6a 04		 push	 4
  00031	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00036	83 c4 08	 add	 esp, 8
  00039	89 45 ac	 mov	 DWORD PTR $T230917[ebp], eax
  0003c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00043	83 7d ac 00	 cmp	 DWORD PTR $T230917[ebp], 0
  00047	74 1b		 je	 SHORT $LN3@construct
  00049	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0004c	51		 push	 ecx
  0004d	e8 00 00 00 00	 call	 ??$forward@AAPAU_MAPSVR_DATA@@@std@@YAAAPAU_MAPSVR_DATA@@AAPAU1@@Z ; std::forward<_MAPSVR_DATA * &>
  00052	83 c4 04	 add	 esp, 4
  00055	8b 55 ac	 mov	 edx, DWORD PTR $T230917[ebp]
  00058	8b 00		 mov	 eax, DWORD PTR [eax]
  0005a	89 02		 mov	 DWORD PTR [edx], eax
  0005c	8b 4d ac	 mov	 ecx, DWORD PTR $T230917[ebp]
  0005f	89 4d a4	 mov	 DWORD PTR tv73[ebp], ecx
  00062	eb 07		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00064	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN4@construct:
  0006b	8b 55 a4	 mov	 edx, DWORD PTR tv73[ebp]
  0006e	89 55 a8	 mov	 DWORD PTR $T230916[ebp], edx
  00071	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 209  : 		}

  00078	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00082	59		 pop	 ecx
  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@AAPAU_MAPSVR_DATA@@@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@AAPAU2@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 4d ac	 mov	 ecx, DWORD PTR $T230917[ebp]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$construct@AAPAU_MAPSVR_DATA@@@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@AAPAU2@@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@AAPAU_MAPSVR_DATA@@@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@AAPAU2@@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@AAPAU_MAPSVR_DATA@@@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@AAPAU2@@Z ENDP ; std::allocator<_MAPSVR_DATA *>::construct<_MAPSVR_DATA * &>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 81   :         {return (_Where); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 83   :         {return; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$forward@ABQAU_MAPSVR_DATA@@@std@@YAABQAU_MAPSVR_DATA@@ABQAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAU_MAPSVR_DATA@@@std@@YAABQAU_MAPSVR_DATA@@ABQAU1@@Z PROC ; std::forward<_MAPSVR_DATA * const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 79   : 	return ((_Ty&&)_Arg);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$forward@ABQAU_MAPSVR_DATA@@@std@@YAABQAU_MAPSVR_DATA@@ABQAU1@@Z ENDP ; std::forward<_MAPSVR_DATA * const &>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAU_MAPSVR_DATA@@PAU1@PAU1@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@00AAV?$allocator@PAU_MAPSVR_DATA@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<_MAPSVR_DATA *,_MAPSVR_DATA *,_MAPSVR_DATA *>
PUBLIC	??$_Val_type@PAPAU_MAPSVR_DATA@@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@@Z ; std::_Val_type<_MAPSVR_DATA * *>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAPAU_MAPSVR_DATA@@PAPAU1@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@00AAV?$allocator@PAU_MAPSVR_DATA@@@0@@Z
_TEXT	SEGMENT
$T230935 = -65						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAU_MAPSVR_DATA@@PAPAU1@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@00AAV?$allocator@PAU_MAPSVR_DATA@@@0@@Z PROC ; std::_Uninitialized_move<_MAPSVR_DATA * *,_MAPSVR_DATA * *,std::allocator<_MAPSVR_DATA *> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00009	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAU_MAPSVR_DATA@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAU_MAPSVR_DATA@@0@Z ; std::_Ptr_cat<_MAPSVR_DATA *,_MAPSVR_DATA *>
  00016	83 c4 08	 add	 esp, 8
  00019	88 45 bf	 mov	 BYTE PTR $T230935[ebp], al
  0001c	0f b6 55 bf	 movzx	 edx, BYTE PTR $T230935[ebp]
  00020	52		 push	 edx
  00021	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Val_type@PAPAU_MAPSVR_DATA@@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@@Z ; std::_Val_type<_MAPSVR_DATA * *>
  0002a	83 c4 04	 add	 esp, 4
  0002d	50		 push	 eax
  0002e	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00031	51		 push	 ecx
  00032	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00035	52		 push	 edx
  00036	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00039	50		 push	 eax
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ??$_Uninit_move@PAU_MAPSVR_DATA@@PAU1@PAU1@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@00AAV?$allocator@PAU_MAPSVR_DATA@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<_MAPSVR_DATA *,_MAPSVR_DATA *,_MAPSVR_DATA *>
  00043	83 c4 18	 add	 esp, 24			; 00000018H

; 472  : 	}

  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	5b		 pop	 ebx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??$_Uninitialized_move@PAPAU_MAPSVR_DATA@@PAPAU1@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@00AAV?$allocator@PAU_MAPSVR_DATA@@@0@@Z ENDP ; std::_Uninitialized_move<_MAPSVR_DATA * *,_MAPSVR_DATA * *,std::allocator<_MAPSVR_DATA *> >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAU_MAPSVR_DATA@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAU_MAPSVR_DATA@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAU_MAPSVR_DATA@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAU_MAPSVR_DATA@@0@Z PROC ; std::_Ptr_cat<_MAPSVR_DATA *,_MAPSVR_DATA *>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00009	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Ptr_cat@PAU_MAPSVR_DATA@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAU_MAPSVR_DATA@@0@Z ENDP ; std::_Ptr_cat<_MAPSVR_DATA *,_MAPSVR_DATA *>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAXPAPAU_MAPSVR_DATA@@0AAV?$allocator@PAU_MAPSVR_DATA@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAXPAPAU_MAPSVR_DATA@@0AAV?$allocator@PAU_MAPSVR_DATA@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<_MAPSVR_DATA *> >, COMDAT

; 104  : 	{	// destroy [_First, _Last), scalar type (do nothing)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 105  : 	}

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAXPAPAU_MAPSVR_DATA@@0AAV?$allocator@PAU_MAPSVR_DATA@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<_MAPSVR_DATA *> >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$_Move@AAD@std@@YA$$QADAAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAD@std@@YA$$QADAAD@Z PROC			; std::_Move<char &>, COMDAT

; 94   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 95   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 96   : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Move@AAD@std@@YA$$QADAAD@Z ENDP			; std::_Move<char &>
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &,bool>
PUBLIC	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &>
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
; Function compile flags: /Odtp /ZI
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$forward@_N@std@@YA$$QA_NAA_N@Z ; std::forward<bool>
  00015	83 c4 04	 add	 esp, 4
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &>
  00022	83 c4 04	 add	 esp, 4
  00025	50		 push	 eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &,bool>

; 248  : 		}

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &,bool>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@YAXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@YAXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@@Z PROC ; std::_Destroy<std::pair<int const ,_MAPSVR_DATA *> >, COMDAT

; 62   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??$_Destroy@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@YAXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@@Z ENDP ; std::_Destroy<std::pair<int const ,_MAPSVR_DATA *> >
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Construct@PAU_MAPSVR_DATA@@ABQAU1@@std@@YAXPAPAU_MAPSVR_DATA@@ABQAU1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@PAU_MAPSVR_DATA@@ABQAU1@@std@@YAXPAPAU_MAPSVR_DATA@@ABQAU1@@Z$0
__ehfuncinfo$??$_Construct@PAU_MAPSVR_DATA@@ABQAU1@@std@@YAXPAPAU_MAPSVR_DATA@@ABQAU1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@PAU_MAPSVR_DATA@@ABQAU1@@std@@YAXPAPAU_MAPSVR_DATA@@ABQAU1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ??$_Construct@PAU_MAPSVR_DATA@@ABQAU1@@std@@YAXPAPAU_MAPSVR_DATA@@ABQAU1@@Z
_TEXT	SEGMENT
tv73 = -92						; size = 4
$T230948 = -88						; size = 4
$T230949 = -84						; size = 4
__Vptr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_MAPSVR_DATA@@ABQAU1@@std@@YAXPAPAU_MAPSVR_DATA@@ABQAU1@@Z PROC ; std::_Construct<_MAPSVR_DATA *,_MAPSVR_DATA * const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Construct@PAU_MAPSVR_DATA@@ABQAU1@@std@@YAXPAPAU_MAPSVR_DATA@@ABQAU1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 47   : 	void _FARQ *_Vptr = _Ptr;

  00028	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0002b	89 45 f0	 mov	 DWORD PTR __Vptr$[ebp], eax

; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  0002e	8b 45 f0	 mov	 eax, DWORD PTR __Vptr$[ebp]
  00031	50		 push	 eax
  00032	6a 04		 push	 4
  00034	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00039	83 c4 08	 add	 esp, 8
  0003c	89 45 ac	 mov	 DWORD PTR $T230949[ebp], eax
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	83 7d ac 00	 cmp	 DWORD PTR $T230949[ebp], 0
  0004a	74 1b		 je	 SHORT $LN3@Construct
  0004c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0004f	51		 push	 ecx
  00050	e8 00 00 00 00	 call	 ??$forward@ABQAU_MAPSVR_DATA@@@std@@YAABQAU_MAPSVR_DATA@@ABQAU1@@Z ; std::forward<_MAPSVR_DATA * const &>
  00055	83 c4 04	 add	 esp, 4
  00058	8b 55 ac	 mov	 edx, DWORD PTR $T230949[ebp]
  0005b	8b 00		 mov	 eax, DWORD PTR [eax]
  0005d	89 02		 mov	 DWORD PTR [edx], eax
  0005f	8b 4d ac	 mov	 ecx, DWORD PTR $T230949[ebp]
  00062	89 4d a4	 mov	 DWORD PTR tv73[ebp], ecx
  00065	eb 07		 jmp	 SHORT $LN4@Construct
$LN3@Construct:
  00067	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN4@Construct:
  0006e	8b 55 a4	 mov	 edx, DWORD PTR tv73[ebp]
  00071	89 55 a8	 mov	 DWORD PTR $T230948[ebp], edx
  00074	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 49   : 	}

  0007b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00085	59		 pop	 ecx
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	5b		 pop	 ebx
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@PAU_MAPSVR_DATA@@ABQAU1@@std@@YAXPAPAU_MAPSVR_DATA@@ABQAU1@@Z$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR __Vptr$[ebp]
  00003	50		 push	 eax
  00004	8b 4d ac	 mov	 ecx, DWORD PTR $T230949[ebp]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$_Construct@PAU_MAPSVR_DATA@@ABQAU1@@std@@YAXPAPAU_MAPSVR_DATA@@ABQAU1@@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Construct@PAU_MAPSVR_DATA@@ABQAU1@@std@@YAXPAPAU_MAPSVR_DATA@@ABQAU1@@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Construct@PAU_MAPSVR_DATA@@ABQAU1@@std@@YAXPAPAU_MAPSVR_DATA@@ABQAU1@@Z ENDP ; std::_Construct<_MAPSVR_DATA *,_MAPSVR_DATA * const &>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$move@AA_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AA_N@std@@YA$$QA_NAA_N@Z PROC			; std::move<bool &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$move@AA_N@std@@YA$$QA_NAA_N@Z ENDP			; std::move<bool &>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
__Wherenode$ = -8					; size = 4
_this$ = -4						; size = 4
?_Buynode@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 559  : 		{	// allocate a node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  0000c	6a 01		 push	 1
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00014	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::allocate
  00019	89 45 f8	 mov	 DWORD PTR __Wherenode$[ebp], eax

; 561  : 
; 562  : 		this->_Left(_Wherenode) = this->_Myhead;

  0001c	8b 45 f8	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
  00025	83 c4 04	 add	 esp, 4
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002e	89 10		 mov	 DWORD PTR [eax], edx

; 563  : 		this->_Parent(_Wherenode) = this->_Myhead;

  00030	8b 45 f8	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
  00039	83 c4 04	 add	 esp, 4
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00042	89 10		 mov	 DWORD PTR [eax], edx

; 564  : 		this->_Right(_Wherenode) = this->_Myhead;

  00044	8b 45 f8	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
  0004d	83 c4 04	 add	 esp, 4
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00056	89 10		 mov	 DWORD PTR [eax], edx

; 565  : 		this->_Color(_Wherenode) = this->_Red;

  00058	8b 45 f8	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
  00061	83 c4 04	 add	 esp, 4
  00064	c6 00 00	 mov	 BYTE PTR [eax], 0

; 566  : 		this->_Isnil(_Wherenode) = false;

  00067	8b 45 f8	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
  00070	83 c4 04	 add	 esp, 4
  00073	c6 00 00	 mov	 BYTE PTR [eax], 0

; 567  : 		return (_Wherenode);

  00076	8b 45 f8	 mov	 eax, DWORD PTR __Wherenode$[ebp]

; 568  : 		}

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c3		 ret	 0
?_Buynode@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??$construct@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::construct<std::pair<int,_MAPSVR_DATA *> >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@U?$pair@$$CBHPAU_MAPSVR_DATA@@@2@U?$pair@HPAU_MAPSVR_DATA@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@0@PAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@$$QAU?$pair@HPAU_MAPSVR_DATA@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@U?$pair@$$CBHPAU_MAPSVR_DATA@@@2@U?$pair@HPAU_MAPSVR_DATA@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@0@PAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@$$QAU?$pair@HPAU_MAPSVR_DATA@@@0@@Z PROC ; std::_Cons_val<std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,std::pair<int const ,_MAPSVR_DATA *>,std::pair<int,_MAPSVR_DATA *> >, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00009	8b 45 10	 mov	 eax, DWORD PTR __Src$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??$forward@U?$pair@HPAU_MAPSVR_DATA@@@std@@@std@@YA$$QAU?$pair@HPAU_MAPSVR_DATA@@@0@AAU10@@Z ; std::forward<std::pair<int,_MAPSVR_DATA *> >
  00012	83 c4 04	 add	 esp, 4
  00015	50		 push	 eax
  00016	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]
  00019	51		 push	 ecx
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __Alval$[ebp]
  0001d	e8 00 00 00 00	 call	 ??$construct@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::construct<std::pair<int,_MAPSVR_DATA *> >

; 281  : 	}

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$_Cons_val@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@U?$pair@$$CBHPAU_MAPSVR_DATA@@@2@U?$pair@HPAU_MAPSVR_DATA@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@0@PAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@$$QAU?$pair@HPAU_MAPSVR_DATA@@@0@@Z ENDP ; std::_Cons_val<std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,std::pair<int const ,_MAPSVR_DATA *>,std::pair<int,_MAPSVR_DATA *> >
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Val_type@PAPAU_MAPSVR_DATA@@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAU_MAPSVR_DATA@@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@@Z PROC ; std::_Val_type<_MAPSVR_DATA * *>, COMDAT

; 789  : 	{	// return value type from arbitrary argument

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 790  : 	return (0);

  00009	33 c0		 xor	 eax, eax

; 791  : 	}

  0000b	5f		 pop	 edi
  0000c	5e		 pop	 esi
  0000d	5b		 pop	 ebx
  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
??$_Val_type@PAPAU_MAPSVR_DATA@@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@@Z ENDP ; std::_Val_type<_MAPSVR_DATA * *>
_TEXT	ENDS
EXTRN	_memmove:PROC
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_move@PAU_MAPSVR_DATA@@PAU1@PAU1@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@00AAV?$allocator@PAU_MAPSVR_DATA@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAU_MAPSVR_DATA@@PAU1@PAU1@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@00AAV?$allocator@PAU_MAPSVR_DATA@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<_MAPSVR_DATA *,_MAPSVR_DATA *,_MAPSVR_DATA *>, COMDAT

; 456  : 	{	// move [_First, _Last) to raw _Dest, scalar type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 457  : 	_DEBUG_RANGE(_First, _Last);
; 458  : 	_DEBUG_POINTER(_Dest);
; 459  : 	size_t _Count = (size_t)(_Last - _First);

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000c	2b 45 08	 sub	 eax, DWORD PTR __First$[ebp]
  0000f	c1 f8 02	 sar	 eax, 2
  00012	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 460  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 461  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  00015	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  00018	c1 e0 02	 shl	 eax, 2
  0001b	50		 push	 eax
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00023	52		 push	 edx
  00024	e8 00 00 00 00	 call	 _memmove
  00029	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0002f	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 462  : 	}

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
??$_Uninit_move@PAU_MAPSVR_DATA@@PAU1@PAU1@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@00AAV?$allocator@PAU_MAPSVR_DATA@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<_MAPSVR_DATA *,_MAPSVR_DATA *,_MAPSVR_DATA *>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 79   : 	return ((_Ty&&)_Arg);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 79   : 	return ((_Ty&&)_Arg);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &>
  00015	83 c4 04	 add	 esp, 4
  00018	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001d	89 0a		 mov	 DWORD PTR [edx], ecx
  0001f	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ??$forward@_N@std@@YA$$QA_NAA_N@Z ; std::forward<bool>
  00028	83 c4 04	 add	 esp, 4
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	8a 10		 mov	 dl, BYTE PTR [eax]
  00030	88 51 04	 mov	 BYTE PTR [ecx+4], dl

; 164  : 		}

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	??$?0HPAU_MAPSVR_DATA@@@?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@QAE@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z ; std::pair<int const ,_MAPSVR_DATA *>::pair<int const ,_MAPSVR_DATA *><int,_MAPSVR_DATA *>
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??$construct@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z$0
__ehfuncinfo$??$construct@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ??$construct@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z
_TEXT	SEGMENT
tv76 = -92						; size = 4
$T230979 = -88						; size = 4
$T230980 = -84						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z PROC ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::construct<std::pair<int,_MAPSVR_DATA *> >, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  0002b	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0002e	50		 push	 eax
  0002f	6a 08		 push	 8
  00031	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00036	83 c4 08	 add	 esp, 8
  00039	89 45 ac	 mov	 DWORD PTR $T230980[ebp], eax
  0003c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00043	83 7d ac 00	 cmp	 DWORD PTR $T230980[ebp], 0
  00047	74 1a		 je	 SHORT $LN3@construct@2
  00049	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0004c	51		 push	 ecx
  0004d	e8 00 00 00 00	 call	 ??$forward@U?$pair@HPAU_MAPSVR_DATA@@@std@@@std@@YA$$QAU?$pair@HPAU_MAPSVR_DATA@@@0@AAU10@@Z ; std::forward<std::pair<int,_MAPSVR_DATA *> >
  00052	83 c4 04	 add	 esp, 4
  00055	50		 push	 eax
  00056	8b 4d ac	 mov	 ecx, DWORD PTR $T230980[ebp]
  00059	e8 00 00 00 00	 call	 ??$?0HPAU_MAPSVR_DATA@@@?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@QAE@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z ; std::pair<int const ,_MAPSVR_DATA *>::pair<int const ,_MAPSVR_DATA *><int,_MAPSVR_DATA *>
  0005e	89 45 a4	 mov	 DWORD PTR tv76[ebp], eax
  00061	eb 07		 jmp	 SHORT $LN4@construct@2
$LN3@construct@2:
  00063	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN4@construct@2:
  0006a	8b 55 a4	 mov	 edx, DWORD PTR tv76[ebp]
  0006d	89 55 a8	 mov	 DWORD PTR $T230979[ebp], edx
  00070	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 209  : 		}

  00077	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00081	59		 pop	 ecx
  00082	5f		 pop	 edi
  00083	5e		 pop	 esi
  00084	5b		 pop	 ebx
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 4d ac	 mov	 ecx, DWORD PTR $T230980[ebp]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$construct@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z ENDP ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::construct<std::pair<int,_MAPSVR_DATA *> >
PUBLIC	??$?0HPAU_MAPSVR_DATA@@@?$_Pair_base@$$CBHPAU_MAPSVR_DATA@@@std@@QAE@$$QAH$$QAPAU_MAPSVR_DATA@@@Z ; std::_Pair_base<int const ,_MAPSVR_DATA *>::_Pair_base<int const ,_MAPSVR_DATA *><int,_MAPSVR_DATA *>
PUBLIC	??$forward@H@std@@YA$$QAHAAH@Z			; std::forward<int>
PUBLIC	??$forward@PAU_MAPSVR_DATA@@@std@@YA$$QAPAU_MAPSVR_DATA@@AAPAU1@@Z ; std::forward<_MAPSVR_DATA *>
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0HPAU_MAPSVR_DATA@@@?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@QAE@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??$?0HPAU_MAPSVR_DATA@@@?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@QAE@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z PROC ; std::pair<int const ,_MAPSVR_DATA *>::pair<int const ,_MAPSVR_DATA *><int,_MAPSVR_DATA *>, COMDAT
; _this$ = ecx

; 255  : 		{	// construct from moved compatible pair

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0000f	83 c0 04	 add	 eax, 4
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??$forward@PAU_MAPSVR_DATA@@@std@@YA$$QAPAU_MAPSVR_DATA@@AAPAU1@@Z ; std::forward<_MAPSVR_DATA *>
  00018	83 c4 04	 add	 esp, 4
  0001b	50		 push	 eax
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QAHAAH@Z ; std::forward<int>
  00025	83 c4 04	 add	 esp, 4
  00028	50		 push	 eax
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ??$?0HPAU_MAPSVR_DATA@@@?$_Pair_base@$$CBHPAU_MAPSVR_DATA@@@std@@QAE@$$QAH$$QAPAU_MAPSVR_DATA@@@Z ; std::_Pair_base<int const ,_MAPSVR_DATA *>::_Pair_base<int const ,_MAPSVR_DATA *><int,_MAPSVR_DATA *>

; 256  : 		}

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??$?0HPAU_MAPSVR_DATA@@@?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@QAE@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z ENDP ; std::pair<int const ,_MAPSVR_DATA *>::pair<int const ,_MAPSVR_DATA *><int,_MAPSVR_DATA *>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$forward@H@std@@YA$$QAHAAH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@H@std@@YA$$QAHAAH@Z PROC			; std::forward<int>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 79   : 	return ((_Ty&&)_Arg);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$forward@H@std@@YA$$QAHAAH@Z ENDP			; std::forward<int>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$forward@PAU_MAPSVR_DATA@@@std@@YA$$QAPAU_MAPSVR_DATA@@AAPAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAU_MAPSVR_DATA@@@std@@YA$$QAPAU_MAPSVR_DATA@@AAPAU1@@Z PROC ; std::forward<_MAPSVR_DATA *>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 79   : 	return ((_Ty&&)_Arg);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$forward@PAU_MAPSVR_DATA@@@std@@YA$$QAPAU_MAPSVR_DATA@@AAPAU1@@Z ENDP ; std::forward<_MAPSVR_DATA *>
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??$?0HPAU_MAPSVR_DATA@@@?$_Pair_base@$$CBHPAU_MAPSVR_DATA@@@std@@QAE@$$QAH$$QAPAU_MAPSVR_DATA@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0HPAU_MAPSVR_DATA@@@?$_Pair_base@$$CBHPAU_MAPSVR_DATA@@@std@@QAE@$$QAH$$QAPAU_MAPSVR_DATA@@@Z PROC ; std::_Pair_base<int const ,_MAPSVR_DATA *>::_Pair_base<int const ,_MAPSVR_DATA *><int,_MAPSVR_DATA *>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QAHAAH@Z ; std::forward<int>
  00015	83 c4 04	 add	 esp, 4
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	89 11		 mov	 DWORD PTR [ecx], edx
  0001f	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ??$forward@PAU_MAPSVR_DATA@@@std@@YA$$QAPAU_MAPSVR_DATA@@AAPAU1@@Z ; std::forward<_MAPSVR_DATA *>
  00028	83 c4 04	 add	 esp, 4
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	8b 10		 mov	 edx, DWORD PTR [eax]
  00030	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 164  : 		}

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
??$?0HPAU_MAPSVR_DATA@@@?$_Pair_base@$$CBHPAU_MAPSVR_DATA@@@std@@QAE@$$QAH$$QAPAU_MAPSVR_DATA@@@Z ENDP ; std::_Pair_base<int const ,_MAPSVR_DATA *>::_Pair_base<int const ,_MAPSVR_DATA *><int,_MAPSVR_DATA *>
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	??0exception@std@@QAE@ABQBD@Z:PROC		; std::exception::exception
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File d:\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8d 45 08	 lea	 eax, DWORD PTR __Message$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
EXTRN	??1exception@std@@UAE@XZ:PROC			; std::exception::~exception
; Function compile flags: /Odtp /ZI
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UAE@XZ ; std::bad_alloc::~bad_alloc
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar@3
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar@3:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Odtp /ZI
; File d:\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ?_Orphan_all@_Container_base0@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Orphan_all@_Container_base0@std@@QAEXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT
; _this$ = ecx

; 37   : 		{	// orphan all iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 38   : 		}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?_Orphan_all@_Container_base0@std@@QAEXXZ ENDP		; std::_Container_base0::_Orphan_all
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 48   : 		{	// adopt this iterator by parent

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 49   : 		}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABV01@@Z ; std::exception::exception
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\mapservermanager.cpp
;	COMDAT ??__Eg_MapServerManager@@YAXXZ
text$yc	SEGMENT
??__Eg_MapServerManager@@YAXXZ PROC			; `dynamic initializer for 'g_MapServerManager'', COMDAT

; 635  : CMapServerManager g_MapServerManager;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MapServerManager@@3VCMapServerManager@@A ; g_MapServerManager
  0000e	e8 00 00 00 00	 call	 ??0CMapServerManager@@QAE@XZ ; CMapServerManager::CMapServerManager
  00013	68 00 00 00 00	 push	 OFFSET ??__Fg_MapServerManager@@YAXXZ ; `dynamic atexit destructor for 'g_MapServerManager''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__Eg_MapServerManager@@YAXXZ ENDP			; `dynamic initializer for 'g_MapServerManager''
; Function compile flags: /Odtp /ZI
text$yc	ENDS
;	COMDAT ??__Fg_MapServerManager@@YAXXZ
text$yd	SEGMENT
??__Fg_MapServerManager@@YAXXZ PROC			; `dynamic atexit destructor for 'g_MapServerManager'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MapServerManager@@3VCMapServerManager@@A ; g_MapServerManager
  0000e	e8 00 00 00 00	 call	 ??1CMapServerManager@@UAE@XZ ; CMapServerManager::~CMapServerManager
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__Fg_MapServerManager@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_MapServerManager''
text$yd	ENDS
PUBLIC	?g_MapServerManager@@3VCMapServerManager@@A	; g_MapServerManager
_BSS	SEGMENT
?g_MapServerManager@@3VCMapServerManager@@A DB 014bc4H DUP (?) ; g_MapServerManager
_BSS	ENDS
CRT$XCU	SEGMENT
_g_MapServerManager$initializer$ DD FLAT:??__Eg_MapServerManager@@YAXXZ
CRT$XCU	ENDS
END
