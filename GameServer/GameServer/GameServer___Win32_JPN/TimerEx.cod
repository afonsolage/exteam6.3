; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\TimerEx.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?Init@CTimerEx@@QAEXXZ				; CTimerEx::Init
PUBLIC	??0CTimerEx@@QAE@XZ				; CTimerEx::CTimerEx
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\timerex.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CTimerEx@@QAE@XZ PROC				; CTimerEx::CTimerEx
; _this$ = ecx

; 7    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 8    : 	this->Init();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?Init@CTimerEx@@QAEXXZ	; CTimerEx::Init

; 9    : }

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0CTimerEx@@QAE@XZ ENDP				; CTimerEx::CTimerEx
_TEXT	ENDS
PUBLIC	??1CTimerEx@@QAE@XZ				; CTimerEx::~CTimerEx
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CTimerEx@@QAE@XZ PROC				; CTimerEx::~CTimerEx
; _this$ = ecx

; 12   : {

  00020	55		 push	 ebp
  00021	8b ec		 mov	 ebp, esp
  00023	83 ec 44	 sub	 esp, 68			; 00000044H
  00026	53		 push	 ebx
  00027	56		 push	 esi
  00028	57		 push	 edi
  00029	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 13   : }

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??1CTimerEx@@QAE@XZ ENDP				; CTimerEx::~CTimerEx
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?Init@CTimerEx@@QAEXXZ PROC				; CTimerEx::Init
; _this$ = ecx

; 16   : {

  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
  00043	83 ec 44	 sub	 esp, 68			; 00000044H
  00046	53		 push	 ebx
  00047	56		 push	 esi
  00048	57		 push	 edi
  00049	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 17   : 	this->m_TickSecond = 0;

  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 18   : }

  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
?Init@CTimerEx@@QAEXXZ ENDP				; CTimerEx::Init
_TEXT	ENDS
PUBLIC	?Run@CTimerEx@@QAEXXZ				; CTimerEx::Run
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Run@CTimerEx@@QAEXXZ PROC				; CTimerEx::Run
; _this$ = ecx

; 21   : {

  00060	55		 push	 ebp
  00061	8b ec		 mov	 ebp, esp
  00063	83 ec 44	 sub	 esp, 68			; 00000044H
  00066	53		 push	 ebx
  00067	56		 push	 esi
  00068	57		 push	 edi
  00069	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 22   : 	this->m_TickSecond++;

  0006c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00071	83 c1 01	 add	 ecx, 1
  00074	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00077	89 0a		 mov	 DWORD PTR [edx], ecx

; 23   : 
; 24   : 	if(this->m_TickSecond >= 60)

  00079	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	83 38 3c	 cmp	 DWORD PTR [eax], 60	; 0000003cH
  0007f	7c 09		 jl	 SHORT $LN2@Run

; 25   : 	{
; 26   : 		this->m_TickSecond = 0;

  00081	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00084	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN2@Run:

; 27   : 	}
; 28   : }

  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	5b		 pop	 ebx
  0008d	8b e5		 mov	 esp, ebp
  0008f	5d		 pop	 ebp
  00090	c3		 ret	 0
?Run@CTimerEx@@QAEXXZ ENDP				; CTimerEx::Run
_TEXT	ENDS
PUBLIC	?GetSecond@CTimerEx@@QAEHXZ			; CTimerEx::GetSecond
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSecond@CTimerEx@@QAEHXZ PROC			; CTimerEx::GetSecond
; _this$ = ecx

; 31   : {

  000a0	55		 push	 ebp
  000a1	8b ec		 mov	 ebp, esp
  000a3	83 ec 44	 sub	 esp, 68			; 00000044H
  000a6	53		 push	 ebx
  000a7	56		 push	 esi
  000a8	57		 push	 edi
  000a9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 32   : 	return this->m_TickSecond;

  000ac	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000af	8b 00		 mov	 eax, DWORD PTR [eax]

; 33   : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?GetSecond@CTimerEx@@QAEHXZ ENDP			; CTimerEx::GetSecond
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ??__Eg_TimerEx@@YAXXZ
text$yc	SEGMENT
??__Eg_TimerEx@@YAXXZ PROC				; `dynamic initializer for 'g_TimerEx'', COMDAT

; 4    : CTimerEx g_TimerEx;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_TimerEx@@3VCTimerEx@@A ; g_TimerEx
  0000e	e8 00 00 00 00	 call	 ??0CTimerEx@@QAE@XZ	; CTimerEx::CTimerEx
  00013	68 00 00 00 00	 push	 OFFSET ??__Fg_TimerEx@@YAXXZ ; `dynamic atexit destructor for 'g_TimerEx''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__Eg_TimerEx@@YAXXZ ENDP				; `dynamic initializer for 'g_TimerEx''
; Function compile flags: /Odtp /ZI
text$yc	ENDS
;	COMDAT ??__Fg_TimerEx@@YAXXZ
text$yd	SEGMENT
??__Fg_TimerEx@@YAXXZ PROC				; `dynamic atexit destructor for 'g_TimerEx'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_TimerEx@@3VCTimerEx@@A ; g_TimerEx
  0000e	e8 00 00 00 00	 call	 ??1CTimerEx@@QAE@XZ	; CTimerEx::~CTimerEx
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__Fg_TimerEx@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_TimerEx''
text$yd	ENDS
PUBLIC	?g_TimerEx@@3VCTimerEx@@A			; g_TimerEx
_BSS	SEGMENT
?g_TimerEx@@3VCTimerEx@@A DD 01H DUP (?)		; g_TimerEx
_BSS	ENDS
CRT$XCU	SEGMENT
_g_TimerEx$initializer$ DD FLAT:??__Eg_TimerEx@@YAXXZ
CRT$XCU	ENDS
END
