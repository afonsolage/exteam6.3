; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\ImperialBattleOfDestler.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_sttBLOODCASTLE_LEVEL DD 0fH
	DD	050H
	DD	0aH
	DD	03cH
	DD	051H
	DD	082H
	DD	03dH
	DD	06eH
	DD	083H
	DD	0b4H
	DD	06fH
	DD	0a0H
	DD	0b5H
	DD	0e6H
	DD	0a1H
	DD	0d2H
	DD	0e7H
	DD	0118H
	DD	0d3H
	DD	0104H
	DD	0119H
	DD	014aH
	DD	0105H
	DD	0136H
	DD	014bH
	DD	0190H
	DD	0137H
	DD	0190H
	DD	0fH
	DD	0257H
	DD	0aH
	DD	0257H
_DATA	ENDS
CONST	SEGMENT
_g_DestlerGate DD 020dH
	DD	0eaH
	DD	01dH
	DD	01H
	DD	020cH
	DD	0e9H
	DD	037H
	DD	01H
	DD	020dH
	DD	0d8H
	DD	050H
	DD	03H
	DD	020dH
	DD	0c2H
	DD	019H
	DD	03H
	DD	020cH
	DD	0a6H
	DD	019H
	DD	03H
	DD	020dH
	DD	09aH
	DD	035H
	DD	01H
	DD	020dH
	DD	0b4H
	DD	04fH
	DD	01H
	ORG $+32
_g_DestlerMapAttr DD 0e8H
	DD	01cH
	DD	0ecH
	DD	021H
	DD	0e7H
	DD	037H
	DD	0eaH
	DD	03bH
	DD	0d4H
	DD	04fH
	DD	0d8H
	DD	050H
	DD	0beH
	DD	018H
	DD	0c2H
	DD	01aH
	DD	0a2H
	DD	018H
	DD	0a8H
	DD	01aH
	DD	09aH
	DD	035H
	DD	09cH
	DD	039H
	DD	0b3H
	DD	04fH
	DD	0b5H
	DD	055H
	ORG $+32
_g_DestlerTrap DD 0e8H
	DD	03dH
	DD	0e1H
	DD	042H
	DD	0dbH
	DD	044H
	DD	0dcH
	DD	04bH
	DD	0dcH
	DD	053H
	DD	0a0H
	DD	019H
	DD	09bH
	DD	01bH
	DD	09bH
	DD	020H
	DD	09bH
	DD	025H
	DD	09bH
	DD	02cH
	DD	09bH
	DD	032H
	ORG $+8
CONST	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?ResetData@CImperialBattleOfDestler@@QAEXXZ	; CImperialBattleOfDestler::ResetData
PUBLIC	??_7CImperialBattleOfDestler@@6B@		; CImperialBattleOfDestler::`vftable'
PUBLIC	??0CImperialBattleOfDestler@@QAE@XZ		; CImperialBattleOfDestler::CImperialBattleOfDestler
PUBLIC	??_R4CImperialBattleOfDestler@@6B@		; CImperialBattleOfDestler::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCImperialBattleOfDestler@@@8		; CImperialBattleOfDestler `RTTI Type Descriptor'
PUBLIC	??_R3CImperialBattleOfDestler@@8		; CImperialBattleOfDestler::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CImperialBattleOfDestler@@8		; CImperialBattleOfDestler::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CImperialBattleOfDestler@@8	; CImperialBattleOfDestler::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECImperialBattleOfDestler@@UAEPAXI@Z:PROC	; CImperialBattleOfDestler::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CImperialBattleOfDestler@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\imperialbattleofdestler.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CImperialBattleOfDestler@@8 DD FLAT:??_R0?AVCImperialBattleOfDestler@@@8 ; CImperialBattleOfDestler::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CImperialBattleOfDestler@@8
rdata$r	ENDS
;	COMDAT ??_R2CImperialBattleOfDestler@@8
rdata$r	SEGMENT
??_R2CImperialBattleOfDestler@@8 DD FLAT:??_R1A@?0A@EA@CImperialBattleOfDestler@@8 ; CImperialBattleOfDestler::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CImperialBattleOfDestler@@8
rdata$r	SEGMENT
??_R3CImperialBattleOfDestler@@8 DD 00H			; CImperialBattleOfDestler::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CImperialBattleOfDestler@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCImperialBattleOfDestler@@@8
_DATA	SEGMENT
??_R0?AVCImperialBattleOfDestler@@@8 DD FLAT:??_7type_info@@6B@ ; CImperialBattleOfDestler `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCImperialBattleOfDestler@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CImperialBattleOfDestler@@6B@
rdata$r	SEGMENT
??_R4CImperialBattleOfDestler@@6B@ DD 00H		; CImperialBattleOfDestler::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCImperialBattleOfDestler@@@8
	DD	FLAT:??_R3CImperialBattleOfDestler@@8
rdata$r	ENDS
;	COMDAT ??_7CImperialBattleOfDestler@@6B@
CONST	SEGMENT
??_7CImperialBattleOfDestler@@6B@ DD FLAT:??_R4CImperialBattleOfDestler@@6B@ ; CImperialBattleOfDestler::`vftable'
	DD	FLAT:??_ECImperialBattleOfDestler@@UAEPAXI@Z
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CImperialBattleOfDestler@@QAE@XZ PROC		; CImperialBattleOfDestler::CImperialBattleOfDestler
; _this$ = ecx

; 13   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CImperialBattleOfDestler@@6B@

; 14   : 	this->ResetData();

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?ResetData@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::ResetData

; 15   : }

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0CImperialBattleOfDestler@@QAE@XZ ENDP		; CImperialBattleOfDestler::CImperialBattleOfDestler
_TEXT	ENDS
PUBLIC	??1CImperialBattleOfDestler@@UAE@XZ		; CImperialBattleOfDestler::~CImperialBattleOfDestler
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCImperialBattleOfDestler@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCImperialBattleOfDestler@@UAEPAXI@Z PROC		; CImperialBattleOfDestler::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CImperialBattleOfDestler@@UAE@XZ ; CImperialBattleOfDestler::~CImperialBattleOfDestler
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCImperialBattleOfDestler@@UAEPAXI@Z ENDP		; CImperialBattleOfDestler::`scalar deleting destructor'
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CImperialBattleOfDestler@@UAE@XZ PROC		; CImperialBattleOfDestler::~CImperialBattleOfDestler
; _this$ = ecx

; 18   : {

  00030	55		 push	 ebp
  00031	8b ec		 mov	 ebp, esp
  00033	83 ec 44	 sub	 esp, 68			; 00000044H
  00036	53		 push	 ebx
  00037	56		 push	 esi
  00038	57		 push	 edi
  00039	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CImperialBattleOfDestler@@6B@

; 19   : }

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??1CImperialBattleOfDestler@@UAE@XZ ENDP		; CImperialBattleOfDestler::~CImperialBattleOfDestler
_TEXT	ENDS
PUBLIC	?Reset@BATTLEOFDESTLER_DATA@@QAEXXZ		; BATTLEOFDESTLER_DATA::Reset
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ResetData@CImperialBattleOfDestler@@QAEXXZ PROC	; CImperialBattleOfDestler::ResetData
; _this$ = ecx

; 22   : {

  00050	55		 push	 ebp
  00051	8b ec		 mov	 ebp, esp
  00053	83 ec 44	 sub	 esp, 68			; 00000044H
  00056	53		 push	 ebx
  00057	56		 push	 esi
  00058	57		 push	 edi
  00059	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 23   : 	this->m_BattleData.Reset();

  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	83 c1 04	 add	 ecx, 4
  00062	e8 00 00 00 00	 call	 ?Reset@BATTLEOFDESTLER_DATA@@QAEXXZ ; BATTLEOFDESTLER_DATA::Reset

; 24   : }

  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
?ResetData@CImperialBattleOfDestler@@QAEXXZ ENDP	; CImperialBattleOfDestler::ResetData
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\imperialbattleofdestler.h
_TEXT	ENDS
;	COMDAT ?Reset@BATTLEOFDESTLER_DATA@@QAEXXZ
_TEXT	SEGMENT
_n$218884 = -12						; size = 4
_i$218880 = -8						; size = 4
_this$ = -4						; size = 4
?Reset@BATTLEOFDESTLER_DATA@@QAEXXZ PROC		; BATTLEOFDESTLER_DATA::Reset, COMDAT
; _this$ = ecx

; 18   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 19   : 		for(int i=0;i<3;++i)

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$218880[ebp], 0
  00013	eb 09		 jmp	 SHORT $LN6@Reset
$LN5@Reset:
  00015	8b 45 f8	 mov	 eax, DWORD PTR _i$218880[ebp]
  00018	83 c0 01	 add	 eax, 1
  0001b	89 45 f8	 mov	 DWORD PTR _i$218880[ebp], eax
$LN6@Reset:
  0001e	83 7d f8 03	 cmp	 DWORD PTR _i$218880[ebp], 3
  00022	7d 0f		 jge	 SHORT $LN4@Reset

; 20   : 		{
; 21   : 			this->AIGroups[i] = -1;

  00024	8b 45 f8	 mov	 eax, DWORD PTR _i$218880[ebp]
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	c7 04 81 ff ff
	ff ff		 mov	 DWORD PTR [ecx+eax*4], -1

; 22   : 		}

  00031	eb e2		 jmp	 SHORT $LN5@Reset
$LN4@Reset:

; 23   : 		for(int n=0;n<9;++n)

  00033	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _n$218884[ebp], 0
  0003a	eb 09		 jmp	 SHORT $LN3@Reset
$LN2@Reset:
  0003c	8b 45 f4	 mov	 eax, DWORD PTR _n$218884[ebp]
  0003f	83 c0 01	 add	 eax, 1
  00042	89 45 f4	 mov	 DWORD PTR _n$218884[ebp], eax
$LN3@Reset:
  00045	83 7d f4 09	 cmp	 DWORD PTR _n$218884[ebp], 9
  00049	7d 10		 jge	 SHORT $LN1@Reset

; 24   : 		{
; 25   : 			this->GateIndex[n] = -1;

  0004b	8b 45 f4	 mov	 eax, DWORD PTR _n$218884[ebp]
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	c7 44 81 10 ff
	ff ff ff	 mov	 DWORD PTR [ecx+eax*4+16], -1

; 26   : 		}

  00059	eb e1		 jmp	 SHORT $LN2@Reset
$LN1@Reset:

; 27   : 		this->CurrentLeaderIndex = -1;

  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	c7 40 0c ff ff
	ff ff		 mov	 DWORD PTR [eax+12], -1

; 28   : 		this->MonsterCount = 0;

  00065	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00068	c7 40 40 00 00
	00 00		 mov	 DWORD PTR [eax+64], 0

; 29   : 		this->TrapIndex = -1;

  0006f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00072	c7 40 48 ff ff
	ff ff		 mov	 DWORD PTR [eax+72], -1

; 30   : 		this->NotifyCount = -1;

  00079	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	c6 40 50 ff	 mov	 BYTE PTR [eax+80], 255	; 000000ffH

; 31   : 	}

  00080	5f		 pop	 edi
  00081	5e		 pop	 esi
  00082	5b		 pop	 ebx
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
?Reset@BATTLEOFDESTLER_DATA@@QAEXXZ ENDP		; BATTLEOFDESTLER_DATA::Reset
_TEXT	ENDS
PUBLIC	?SetState_END@CImperialBattleOfDestler@@QAEXXZ	; CImperialBattleOfDestler::SetState_END
PUBLIC	?SetState_PHAZE3@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SetState_PHAZE3
PUBLIC	?SetState_STANDBY3@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SetState_STANDBY3
PUBLIC	?SetState_PHAZE2@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SetState_PHAZE2
PUBLIC	?SetState_STANDBY2@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SetState_STANDBY2
PUBLIC	?SetState_PHAZE1@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SetState_PHAZE1
PUBLIC	?SetState_STANDBY1@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SetState_STANDBY1
PUBLIC	?SetState_NONE@CImperialBattleOfDestler@@QAEXXZ	; CImperialBattleOfDestler::SetState_NONE
PUBLIC	?SetState@CImperialBattleOfDestler@@QAEXH@Z	; CImperialBattleOfDestler::SetState
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\imperialbattleofdestler.cpp
_TEXT	SEGMENT
tv64 = -72						; size = 4
_this$ = -4						; size = 4
_iState$ = 8						; size = 4
?SetState@CImperialBattleOfDestler@@QAEXH@Z PROC	; CImperialBattleOfDestler::SetState
; _this$ = ecx

; 27   : {

  00070	55		 push	 ebp
  00071	8b ec		 mov	 ebp, esp
  00073	83 ec 48	 sub	 esp, 72			; 00000048H
  00076	53		 push	 ebx
  00077	56		 push	 esi
  00078	57		 push	 edi
  00079	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 28   : 	switch ( iState )

  0007c	8b 45 08	 mov	 eax, DWORD PTR _iState$[ebp]
  0007f	89 45 b8	 mov	 DWORD PTR tv64[ebp], eax
  00082	83 7d b8 07	 cmp	 DWORD PTR tv64[ebp], 7
  00086	77 58		 ja	 SHORT $LN11@SetState
  00088	8b 4d b8	 mov	 ecx, DWORD PTR tv64[ebp]
  0008b	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN13@SetState[ecx*4]
$LN8@SetState:

; 29   : 	{
; 30   : 		case 0:
; 31   : 			this->SetState_NONE();

  00092	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	e8 00 00 00 00	 call	 ?SetState_NONE@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SetState_NONE

; 32   : 			break;

  0009a	eb 44		 jmp	 SHORT $LN11@SetState
$LN7@SetState:

; 33   : 		case 1:
; 34   : 			this->SetState_STANDBY1();

  0009c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	e8 00 00 00 00	 call	 ?SetState_STANDBY1@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SetState_STANDBY1

; 35   : 			break;

  000a4	eb 3a		 jmp	 SHORT $LN11@SetState
$LN6@SetState:

; 36   : 		case 2:
; 37   : 			this->SetState_PHAZE1();

  000a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	e8 00 00 00 00	 call	 ?SetState_PHAZE1@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SetState_PHAZE1

; 38   : 			break;

  000ae	eb 30		 jmp	 SHORT $LN11@SetState
$LN5@SetState:

; 39   : 		case 3:
; 40   : 			this->SetState_STANDBY2();

  000b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	e8 00 00 00 00	 call	 ?SetState_STANDBY2@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SetState_STANDBY2

; 41   : 			break;

  000b8	eb 26		 jmp	 SHORT $LN11@SetState
$LN4@SetState:

; 42   : 		case 4:
; 43   : 			this->SetState_PHAZE2();

  000ba	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	e8 00 00 00 00	 call	 ?SetState_PHAZE2@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SetState_PHAZE2

; 44   : 			break;

  000c2	eb 1c		 jmp	 SHORT $LN11@SetState
$LN3@SetState:

; 45   : 		case 5: 
; 46   : 			this->SetState_STANDBY3();

  000c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c7	e8 00 00 00 00	 call	 ?SetState_STANDBY3@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SetState_STANDBY3

; 47   : 			break;

  000cc	eb 12		 jmp	 SHORT $LN11@SetState
$LN2@SetState:

; 48   : 		case 6:
; 49   : 			this->SetState_PHAZE3();

  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	e8 00 00 00 00	 call	 ?SetState_PHAZE3@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SetState_PHAZE3

; 50   : 			break;

  000d6	eb 08		 jmp	 SHORT $LN11@SetState
$LN1@SetState:

; 51   : 		case 7:
; 52   : 			this->SetState_END();

  000d8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	e8 00 00 00 00	 call	 ?SetState_END@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SetState_END
$LN11@SetState:

; 53   : 			break;
; 54   : 	}
; 55   : }

  000e0	5f		 pop	 edi
  000e1	5e		 pop	 esi
  000e2	5b		 pop	 ebx
  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c2 04 00	 ret	 4
  000e9	8d 49 00	 npad	 3
$LN13@SetState:
  000ec	00 00 00 00	 DD	 $LN8@SetState
  000f0	00 00 00 00	 DD	 $LN7@SetState
  000f4	00 00 00 00	 DD	 $LN6@SetState
  000f8	00 00 00 00	 DD	 $LN5@SetState
  000fc	00 00 00 00	 DD	 $LN4@SetState
  00100	00 00 00 00	 DD	 $LN3@SetState
  00104	00 00 00 00	 DD	 $LN2@SetState
  00108	00 00 00 00	 DD	 $LN1@SetState
?SetState@CImperialBattleOfDestler@@QAEXH@Z ENDP	; CImperialBattleOfDestler::SetState
_TEXT	ENDS
PUBLIC	??_C@_0DI@COHHDLG@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@ ; `string'
EXTRN	?DelGroupInstance@TMonsterAIGroup@@SAHH@Z:PROC	; TMonsterAIGroup::DelGroupInstance
EXTRN	?LogAddC@@3P6AXEPADZZA:DWORD			; LogAddC
;	COMDAT ??_C@_0DI@COHHDLG@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@
CONST	SEGMENT
??_C@_0DI@COHHDLG@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@ DB '[ I'
	DB	'MPERIAL FORT ] [ BattleOfDestler ] State(%d) -> NONE', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_NONE@CImperialBattleOfDestler@@QAEXXZ PROC	; CImperialBattleOfDestler::SetState_NONE
; _this$ = ecx

; 58   : {

  00110	55		 push	 ebp
  00111	8b ec		 mov	 ebp, esp
  00113	83 ec 44	 sub	 esp, 68			; 00000044H
  00116	53		 push	 ebx
  00117	56		 push	 esi
  00118	57		 push	 edi
  00119	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 59   : 	LogAddC(2, "[ IMPERIAL FORT ] [ BattleOfDestler ] State(%d) -> NONE", this->m_BattleData.CurrentState);

  0011c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011f	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00122	51		 push	 ecx
  00123	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@COHHDLG@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@
  00128	6a 02		 push	 2
  0012a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00130	83 c4 0c	 add	 esp, 12			; 0000000cH

; 60   : 	this->ResetData();

  00133	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00136	e8 00 00 00 00	 call	 ?ResetData@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::ResetData

; 61   : 	TMonsterAIGroup::DelGroupInstance(24);

  0013b	6a 18		 push	 24			; 00000018H
  0013d	e8 00 00 00 00	 call	 ?DelGroupInstance@TMonsterAIGroup@@SAHH@Z ; TMonsterAIGroup::DelGroupInstance
  00142	83 c4 04	 add	 esp, 4

; 62   : 	TMonsterAIGroup::DelGroupInstance(25);

  00145	6a 19		 push	 25			; 00000019H
  00147	e8 00 00 00 00	 call	 ?DelGroupInstance@TMonsterAIGroup@@SAHH@Z ; TMonsterAIGroup::DelGroupInstance
  0014c	83 c4 04	 add	 esp, 4

; 63   : 	TMonsterAIGroup::DelGroupInstance(26);

  0014f	6a 1a		 push	 26			; 0000001aH
  00151	e8 00 00 00 00	 call	 ?DelGroupInstance@TMonsterAIGroup@@SAHH@Z ; TMonsterAIGroup::DelGroupInstance
  00156	83 c4 04	 add	 esp, 4

; 64   : 	this->m_BattleData.CurrentState = BATTLEOFDESTLER_STATE_NONE;

  00159	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0015c	c7 40 40 00 00
	00 00		 mov	 DWORD PTR [eax+64], 0

; 65   : }

  00163	5f		 pop	 edi
  00164	5e		 pop	 esi
  00165	5b		 pop	 ebx
  00166	8b e5		 mov	 esp, ebp
  00168	5d		 pop	 ebp
  00169	c3		 ret	 0
?SetState_NONE@CImperialBattleOfDestler@@QAEXXZ ENDP	; CImperialBattleOfDestler::SetState_NONE
_TEXT	ENDS
PUBLIC	?SendEventState@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SendEventState
PUBLIC	??_C@_0EG@ENNGPEMC@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@ ; `string'
PUBLIC	??_C@_0DM@EIBALHIL@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@ ; `string'
EXTRN	?Init@TMonsterAIGroup@@SAXH@Z:PROC		; TMonsterAIGroup::Init
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?gObjSetMonster@@YAHHH@Z:PROC			; gObjSetMonster
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?gObjAddMonster@@YAFH@Z:PROC			; gObjAddMonster
;	COMDAT ??_C@_0EG@ENNGPEMC@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@
CONST	SEGMENT
??_C@_0EG@ENNGPEMC@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@ DB '[ '
	DB	'IMPERIAL FORT ] [ BattleOfDestler ] Create Gate Index: %d Cla'
	DB	'ss: %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@EIBALHIL@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@
CONST	SEGMENT
??_C@_0DM@EIBALHIL@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@ DB '[ '
	DB	'IMPERIAL FORT ] [ BattleOfDestler ] State(%d) -> STANDBY1', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_i$221015 = -8						; size = 4
_this$ = -4						; size = 4
?SetState_STANDBY1@CImperialBattleOfDestler@@QAEXXZ PROC ; CImperialBattleOfDestler::SetState_STANDBY1
; _this$ = ecx

; 69   : {

  00170	55		 push	 ebp
  00171	8b ec		 mov	 ebp, esp
  00173	83 ec 48	 sub	 esp, 72			; 00000048H
  00176	53		 push	 ebx
  00177	56		 push	 esi
  00178	57		 push	 edi
  00179	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 70   : 	LogAddC(2, "[ IMPERIAL FORT ] [ BattleOfDestler ] State(%d) -> STANDBY1", this->m_BattleData.CurrentState);

  0017c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0017f	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00182	51		 push	 ecx
  00183	68 00 00 00 00	 push	 OFFSET ??_C@_0DM@EIBALHIL@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@
  00188	6a 02		 push	 2
  0018a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00190	83 c4 0c	 add	 esp, 12			; 0000000cH

; 71   : 	for(int i=0;i<3;++i)

  00193	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$221015[ebp], 0
  0019a	eb 09		 jmp	 SHORT $LN4@SetState_S
$LN3@SetState_S:
  0019c	8b 45 f8	 mov	 eax, DWORD PTR _i$221015[ebp]
  0019f	83 c0 01	 add	 eax, 1
  001a2	89 45 f8	 mov	 DWORD PTR _i$221015[ebp], eax
$LN4@SetState_S:
  001a5	83 7d f8 03	 cmp	 DWORD PTR _i$221015[ebp], 3
  001a9	0f 8d 51 02 00
	00		 jge	 $LN2@SetState_S

; 72   : 	{
; 73   : 		this->m_BattleData.GateIndex[i] = gObjAddMonster(69);

  001af	6a 45		 push	 69			; 00000045H
  001b1	e8 00 00 00 00	 call	 ?gObjAddMonster@@YAFH@Z	; gObjAddMonster
  001b6	83 c4 04	 add	 esp, 4
  001b9	98		 cwde
  001ba	8b 4d f8	 mov	 ecx, DWORD PTR _i$221015[ebp]
  001bd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001c0	89 44 8a 14	 mov	 DWORD PTR [edx+ecx*4+20], eax

; 74   : 		if(this->m_BattleData.GateIndex[i] >= 0)

  001c4	8b 45 f8	 mov	 eax, DWORD PTR _i$221015[ebp]
  001c7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001ca	83 7c 81 14 00	 cmp	 DWORD PTR [ecx+eax*4+20], 0
  001cf	0f 8c 26 02 00
	00		 jl	 $LN1@SetState_S

; 75   : 		{
; 76   : 			gObj[this->m_BattleData.GateIndex[i]].MapNumber = 69;

  001d5	8b 45 f8	 mov	 eax, DWORD PTR _i$221015[ebp]
  001d8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001db	8b 54 81 14	 mov	 edx, DWORD PTR [ecx+eax*4+20]
  001df	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  001e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001ea	c6 84 10 49 01
	00 00 45	 mov	 BYTE PTR [eax+edx+329], 69 ; 00000045H

; 77   : 			gObj[this->m_BattleData.GateIndex[i]].X = g_DestlerGate[i].X;

  001f2	8b 45 f8	 mov	 eax, DWORD PTR _i$221015[ebp]
  001f5	c1 e0 04	 shl	 eax, 4
  001f8	8b 4d f8	 mov	 ecx, DWORD PTR _i$221015[ebp]
  001fb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001fe	8b 4c 8a 14	 mov	 ecx, DWORD PTR [edx+ecx*4+20]
  00202	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00208	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0020e	66 8b 80 04 00
	00 00		 mov	 ax, WORD PTR _g_DestlerGate[eax+4]
  00215	66 89 84 0a 44
	01 00 00	 mov	 WORD PTR [edx+ecx+324], ax

; 78   : 			gObj[this->m_BattleData.GateIndex[i]].Y = g_DestlerGate[i].Y;

  0021d	8b 45 f8	 mov	 eax, DWORD PTR _i$221015[ebp]
  00220	c1 e0 04	 shl	 eax, 4
  00223	8b 4d f8	 mov	 ecx, DWORD PTR _i$221015[ebp]
  00226	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00229	8b 4c 8a 14	 mov	 ecx, DWORD PTR [edx+ecx*4+20]
  0022d	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00233	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00239	66 8b 80 08 00
	00 00		 mov	 ax, WORD PTR _g_DestlerGate[eax+8]
  00240	66 89 84 0a 46
	01 00 00	 mov	 WORD PTR [edx+ecx+326], ax

; 79   : 			gObj[this->m_BattleData.GateIndex[i]].Dir = g_DestlerGate[i].Dir;

  00248	8b 45 f8	 mov	 eax, DWORD PTR _i$221015[ebp]
  0024b	c1 e0 04	 shl	 eax, 4
  0024e	8b 4d f8	 mov	 ecx, DWORD PTR _i$221015[ebp]
  00251	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00254	8b 4c 8a 14	 mov	 ecx, DWORD PTR [edx+ecx*4+20]
  00258	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0025e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00264	8a 80 0c 00 00
	00		 mov	 al, BYTE PTR _g_DestlerGate[eax+12]
  0026a	88 84 0a 48 01
	00 00		 mov	 BYTE PTR [edx+ecx+328], al

; 80   : 			gObj[this->m_BattleData.GateIndex[i]].TX = g_DestlerGate[i].X;

  00271	8b 45 f8	 mov	 eax, DWORD PTR _i$221015[ebp]
  00274	c1 e0 04	 shl	 eax, 4
  00277	8b 4d f8	 mov	 ecx, DWORD PTR _i$221015[ebp]
  0027a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0027d	8b 4c 8a 14	 mov	 ecx, DWORD PTR [edx+ecx*4+20]
  00281	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00287	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0028d	66 8b 80 04 00
	00 00		 mov	 ax, WORD PTR _g_DestlerGate[eax+4]
  00294	66 89 84 0a 7c
	01 00 00	 mov	 WORD PTR [edx+ecx+380], ax

; 81   : 			gObj[this->m_BattleData.GateIndex[i]].TY = g_DestlerGate[i].Y;

  0029c	8b 45 f8	 mov	 eax, DWORD PTR _i$221015[ebp]
  0029f	c1 e0 04	 shl	 eax, 4
  002a2	8b 4d f8	 mov	 ecx, DWORD PTR _i$221015[ebp]
  002a5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  002a8	8b 4c 8a 14	 mov	 ecx, DWORD PTR [edx+ecx*4+20]
  002ac	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  002b2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002b8	66 8b 80 08 00
	00 00		 mov	 ax, WORD PTR _g_DestlerGate[eax+8]
  002bf	66 89 84 0a 7e
	01 00 00	 mov	 WORD PTR [edx+ecx+382], ax

; 82   : 			gObj[this->m_BattleData.GateIndex[i]].StartX = g_DestlerGate[i].X;

  002c7	8b 45 f8	 mov	 eax, DWORD PTR _i$221015[ebp]
  002ca	c1 e0 04	 shl	 eax, 4
  002cd	8b 4d f8	 mov	 ecx, DWORD PTR _i$221015[ebp]
  002d0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  002d3	8b 4c 8a 14	 mov	 ecx, DWORD PTR [edx+ecx*4+20]
  002d7	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  002dd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002e3	8a 80 04 00 00
	00		 mov	 al, BYTE PTR _g_DestlerGate[eax+4]
  002e9	88 84 0a 76 01
	00 00		 mov	 BYTE PTR [edx+ecx+374], al

; 83   : 			gObj[this->m_BattleData.GateIndex[i]].StartY = g_DestlerGate[i].Y;

  002f0	8b 45 f8	 mov	 eax, DWORD PTR _i$221015[ebp]
  002f3	c1 e0 04	 shl	 eax, 4
  002f6	8b 4d f8	 mov	 ecx, DWORD PTR _i$221015[ebp]
  002f9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  002fc	8b 4c 8a 14	 mov	 ecx, DWORD PTR [edx+ecx*4+20]
  00300	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00306	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0030c	8a 80 08 00 00
	00		 mov	 al, BYTE PTR _g_DestlerGate[eax+8]
  00312	88 84 0a 77 01
	00 00		 mov	 BYTE PTR [edx+ecx+375], al

; 84   : 			gObj[this->m_BattleData.GateIndex[i]].m_OldX = g_DestlerGate[i].X;

  00319	8b 45 f8	 mov	 eax, DWORD PTR _i$221015[ebp]
  0031c	c1 e0 04	 shl	 eax, 4
  0031f	8b 4d f8	 mov	 ecx, DWORD PTR _i$221015[ebp]
  00322	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00325	8b 4c 8a 14	 mov	 ecx, DWORD PTR [edx+ecx*4+20]
  00329	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0032f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00335	66 8b 80 04 00
	00 00		 mov	 ax, WORD PTR _g_DestlerGate[eax+4]
  0033c	66 89 84 0a 78
	01 00 00	 mov	 WORD PTR [edx+ecx+376], ax

; 85   : 			gObj[this->m_BattleData.GateIndex[i]].m_OldY = g_DestlerGate[i].Y;

  00344	8b 45 f8	 mov	 eax, DWORD PTR _i$221015[ebp]
  00347	c1 e0 04	 shl	 eax, 4
  0034a	8b 4d f8	 mov	 ecx, DWORD PTR _i$221015[ebp]
  0034d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00350	8b 4c 8a 14	 mov	 ecx, DWORD PTR [edx+ecx*4+20]
  00354	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0035a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00360	66 8b 80 08 00
	00 00		 mov	 ax, WORD PTR _g_DestlerGate[eax+8]
  00367	66 89 84 0a 7a
	01 00 00	 mov	 WORD PTR [edx+ecx+378], ax

; 86   : 			gObjSetMonster(this->m_BattleData.GateIndex[i], g_DestlerGate[i].Class);

  0036f	8b 45 f8	 mov	 eax, DWORD PTR _i$221015[ebp]
  00372	c1 e0 04	 shl	 eax, 4
  00375	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR _g_DestlerGate[eax]
  0037b	51		 push	 ecx
  0037c	8b 55 f8	 mov	 edx, DWORD PTR _i$221015[ebp]
  0037f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00382	8b 4c 90 14	 mov	 ecx, DWORD PTR [eax+edx*4+20]
  00386	51		 push	 ecx
  00387	e8 00 00 00 00	 call	 ?gObjSetMonster@@YAHHH@Z ; gObjSetMonster
  0038c	83 c4 08	 add	 esp, 8

; 87   : 			gObj[this->m_BattleData.GateIndex[i]].m_ImmuneToHarmCount = 200; // IMMUNITY FOR GATES

  0038f	8b 45 f8	 mov	 eax, DWORD PTR _i$221015[ebp]
  00392	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00395	8b 54 81 14	 mov	 edx, DWORD PTR [ecx+eax*4+20]
  00399	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  0039f	b8 c8 00 00 00	 mov	 eax, 200		; 000000c8H
  003a4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  003aa	66 89 84 11 84
	22 00 00	 mov	 WORD PTR [ecx+edx+8836], ax

; 88   : 			gObj[this->m_BattleData.GateIndex[i]].m_ImmuneToMagicCount = 200; // IMMUNITY FOR GATES

  003b2	8b 45 f8	 mov	 eax, DWORD PTR _i$221015[ebp]
  003b5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003b8	8b 54 81 14	 mov	 edx, DWORD PTR [ecx+eax*4+20]
  003bc	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  003c2	b8 c8 00 00 00	 mov	 eax, 200		; 000000c8H
  003c7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  003cd	66 89 84 11 82
	22 00 00	 mov	 WORD PTR [ecx+edx+8834], ax

; 89   : 
; 90   : 			LogAddTD("[ IMPERIAL FORT ] [ BattleOfDestler ] Create Gate Index: %d Class: %d",
; 91   : 				this->m_BattleData.GateIndex[i], g_DestlerGate[i].Class);

  003d5	8b 45 f8	 mov	 eax, DWORD PTR _i$221015[ebp]
  003d8	c1 e0 04	 shl	 eax, 4
  003db	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR _g_DestlerGate[eax]
  003e1	51		 push	 ecx
  003e2	8b 55 f8	 mov	 edx, DWORD PTR _i$221015[ebp]
  003e5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003e8	8b 4c 90 14	 mov	 ecx, DWORD PTR [eax+edx*4+20]
  003ec	51		 push	 ecx
  003ed	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@ENNGPEMC@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@
  003f2	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  003f8	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@SetState_S:

; 92   : 		}
; 93   : 	}

  003fb	e9 9c fd ff ff	 jmp	 $LN3@SetState_S
$LN2@SetState_S:

; 94   : 	this->m_BattleData.Time = 60000;

  00400	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00403	c7 40 38 60 ea
	00 00		 mov	 DWORD PTR [eax+56], 60000 ; 0000ea60H

; 95   : 	this->m_BattleData.TickCount = GetTickCount();

  0040a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00410	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00413	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 96   : 	TMonsterAIGroup::Init(24);

  00416	6a 18		 push	 24			; 00000018H
  00418	e8 00 00 00 00	 call	 ?Init@TMonsterAIGroup@@SAXH@Z ; TMonsterAIGroup::Init
  0041d	83 c4 04	 add	 esp, 4

; 97   : 	this->m_BattleData.MonsterCount = 0;

  00420	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00423	c7 40 44 00 00
	00 00		 mov	 DWORD PTR [eax+68], 0

; 98   : 	this->m_BattleData.CurrentAIGroup = 24;

  0042a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0042d	c7 40 48 18 00
	00 00		 mov	 DWORD PTR [eax+72], 24	; 00000018H

; 99   : 	this->m_BattleData.CurrentState = BATTLEOFDESTLER_STATE_STANDBY1;

  00434	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00437	c7 40 40 01 00
	00 00		 mov	 DWORD PTR [eax+64], 1

; 100  : 	this->SendEventState();

  0043e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00441	e8 00 00 00 00	 call	 ?SendEventState@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SendEventState

; 101  : }

  00446	5f		 pop	 edi
  00447	5e		 pop	 esi
  00448	5b		 pop	 ebx
  00449	8b e5		 mov	 esp, ebp
  0044b	5d		 pop	 ebp
  0044c	c3		 ret	 0
?SetState_STANDBY1@CImperialBattleOfDestler@@QAEXXZ ENDP ; CImperialBattleOfDestler::SetState_STANDBY1
_TEXT	ENDS
PUBLIC	??_C@_0DM@GDDNOEEI@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@ ; `string'
;	COMDAT ??_C@_0DM@GDDNOEEI@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@
CONST	SEGMENT
??_C@_0DM@GDDNOEEI@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@ DB '[ '
	DB	'IMPERIAL FORT ] [ BattleOfDestler ] State(%d) -> STANDBY2', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_i$221025 = -8						; size = 4
_this$ = -4						; size = 4
?SetState_STANDBY2@CImperialBattleOfDestler@@QAEXXZ PROC ; CImperialBattleOfDestler::SetState_STANDBY2
; _this$ = ecx

; 104  : {

  00450	55		 push	 ebp
  00451	8b ec		 mov	 ebp, esp
  00453	83 ec 48	 sub	 esp, 72			; 00000048H
  00456	53		 push	 ebx
  00457	56		 push	 esi
  00458	57		 push	 edi
  00459	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 105  : 	LogAddC(2, "[ IMPERIAL FORT ] [ BattleOfDestler ] State(%d) -> STANDBY2", this->m_BattleData.CurrentState);

  0045c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0045f	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00462	51		 push	 ecx
  00463	68 00 00 00 00	 push	 OFFSET ??_C@_0DM@GDDNOEEI@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@
  00468	6a 02		 push	 2
  0046a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00470	83 c4 0c	 add	 esp, 12			; 0000000cH

; 106  : 	for(int i=3;i<6;++i)

  00473	c7 45 f8 03 00
	00 00		 mov	 DWORD PTR _i$221025[ebp], 3
  0047a	eb 09		 jmp	 SHORT $LN4@SetState_S@2
$LN3@SetState_S@2:
  0047c	8b 45 f8	 mov	 eax, DWORD PTR _i$221025[ebp]
  0047f	83 c0 01	 add	 eax, 1
  00482	89 45 f8	 mov	 DWORD PTR _i$221025[ebp], eax
$LN4@SetState_S@2:
  00485	83 7d f8 06	 cmp	 DWORD PTR _i$221025[ebp], 6
  00489	0f 8d 51 02 00
	00		 jge	 $LN2@SetState_S@2

; 107  : 	{
; 108  : 		this->m_BattleData.GateIndex[i] = gObjAddMonster(69);

  0048f	6a 45		 push	 69			; 00000045H
  00491	e8 00 00 00 00	 call	 ?gObjAddMonster@@YAFH@Z	; gObjAddMonster
  00496	83 c4 04	 add	 esp, 4
  00499	98		 cwde
  0049a	8b 4d f8	 mov	 ecx, DWORD PTR _i$221025[ebp]
  0049d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  004a0	89 44 8a 14	 mov	 DWORD PTR [edx+ecx*4+20], eax

; 109  : 		if(this->m_BattleData.GateIndex[i] >= 0)

  004a4	8b 45 f8	 mov	 eax, DWORD PTR _i$221025[ebp]
  004a7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004aa	83 7c 81 14 00	 cmp	 DWORD PTR [ecx+eax*4+20], 0
  004af	0f 8c 26 02 00
	00		 jl	 $LN1@SetState_S@2

; 110  : 		{
; 111  : 			gObj[this->m_BattleData.GateIndex[i]].MapNumber = 69;

  004b5	8b 45 f8	 mov	 eax, DWORD PTR _i$221025[ebp]
  004b8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004bb	8b 54 81 14	 mov	 edx, DWORD PTR [ecx+eax*4+20]
  004bf	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  004c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  004ca	c6 84 10 49 01
	00 00 45	 mov	 BYTE PTR [eax+edx+329], 69 ; 00000045H

; 112  : 			gObj[this->m_BattleData.GateIndex[i]].X = g_DestlerGate[i].X;

  004d2	8b 45 f8	 mov	 eax, DWORD PTR _i$221025[ebp]
  004d5	c1 e0 04	 shl	 eax, 4
  004d8	8b 4d f8	 mov	 ecx, DWORD PTR _i$221025[ebp]
  004db	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  004de	8b 4c 8a 14	 mov	 ecx, DWORD PTR [edx+ecx*4+20]
  004e2	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  004e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  004ee	66 8b 80 04 00
	00 00		 mov	 ax, WORD PTR _g_DestlerGate[eax+4]
  004f5	66 89 84 0a 44
	01 00 00	 mov	 WORD PTR [edx+ecx+324], ax

; 113  : 			gObj[this->m_BattleData.GateIndex[i]].Y = g_DestlerGate[i].Y;

  004fd	8b 45 f8	 mov	 eax, DWORD PTR _i$221025[ebp]
  00500	c1 e0 04	 shl	 eax, 4
  00503	8b 4d f8	 mov	 ecx, DWORD PTR _i$221025[ebp]
  00506	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00509	8b 4c 8a 14	 mov	 ecx, DWORD PTR [edx+ecx*4+20]
  0050d	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00513	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00519	66 8b 80 08 00
	00 00		 mov	 ax, WORD PTR _g_DestlerGate[eax+8]
  00520	66 89 84 0a 46
	01 00 00	 mov	 WORD PTR [edx+ecx+326], ax

; 114  : 			gObj[this->m_BattleData.GateIndex[i]].Dir = g_DestlerGate[i].Dir;

  00528	8b 45 f8	 mov	 eax, DWORD PTR _i$221025[ebp]
  0052b	c1 e0 04	 shl	 eax, 4
  0052e	8b 4d f8	 mov	 ecx, DWORD PTR _i$221025[ebp]
  00531	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00534	8b 4c 8a 14	 mov	 ecx, DWORD PTR [edx+ecx*4+20]
  00538	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0053e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00544	8a 80 0c 00 00
	00		 mov	 al, BYTE PTR _g_DestlerGate[eax+12]
  0054a	88 84 0a 48 01
	00 00		 mov	 BYTE PTR [edx+ecx+328], al

; 115  : 			gObj[this->m_BattleData.GateIndex[i]].TX = g_DestlerGate[i].X;

  00551	8b 45 f8	 mov	 eax, DWORD PTR _i$221025[ebp]
  00554	c1 e0 04	 shl	 eax, 4
  00557	8b 4d f8	 mov	 ecx, DWORD PTR _i$221025[ebp]
  0055a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0055d	8b 4c 8a 14	 mov	 ecx, DWORD PTR [edx+ecx*4+20]
  00561	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00567	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0056d	66 8b 80 04 00
	00 00		 mov	 ax, WORD PTR _g_DestlerGate[eax+4]
  00574	66 89 84 0a 7c
	01 00 00	 mov	 WORD PTR [edx+ecx+380], ax

; 116  : 			gObj[this->m_BattleData.GateIndex[i]].TY = g_DestlerGate[i].Y;

  0057c	8b 45 f8	 mov	 eax, DWORD PTR _i$221025[ebp]
  0057f	c1 e0 04	 shl	 eax, 4
  00582	8b 4d f8	 mov	 ecx, DWORD PTR _i$221025[ebp]
  00585	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00588	8b 4c 8a 14	 mov	 ecx, DWORD PTR [edx+ecx*4+20]
  0058c	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00592	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00598	66 8b 80 08 00
	00 00		 mov	 ax, WORD PTR _g_DestlerGate[eax+8]
  0059f	66 89 84 0a 7e
	01 00 00	 mov	 WORD PTR [edx+ecx+382], ax

; 117  : 			gObj[this->m_BattleData.GateIndex[i]].StartX = g_DestlerGate[i].X;

  005a7	8b 45 f8	 mov	 eax, DWORD PTR _i$221025[ebp]
  005aa	c1 e0 04	 shl	 eax, 4
  005ad	8b 4d f8	 mov	 ecx, DWORD PTR _i$221025[ebp]
  005b0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  005b3	8b 4c 8a 14	 mov	 ecx, DWORD PTR [edx+ecx*4+20]
  005b7	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  005bd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  005c3	8a 80 04 00 00
	00		 mov	 al, BYTE PTR _g_DestlerGate[eax+4]
  005c9	88 84 0a 76 01
	00 00		 mov	 BYTE PTR [edx+ecx+374], al

; 118  : 			gObj[this->m_BattleData.GateIndex[i]].StartY = g_DestlerGate[i].Y;

  005d0	8b 45 f8	 mov	 eax, DWORD PTR _i$221025[ebp]
  005d3	c1 e0 04	 shl	 eax, 4
  005d6	8b 4d f8	 mov	 ecx, DWORD PTR _i$221025[ebp]
  005d9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  005dc	8b 4c 8a 14	 mov	 ecx, DWORD PTR [edx+ecx*4+20]
  005e0	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  005e6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  005ec	8a 80 08 00 00
	00		 mov	 al, BYTE PTR _g_DestlerGate[eax+8]
  005f2	88 84 0a 77 01
	00 00		 mov	 BYTE PTR [edx+ecx+375], al

; 119  : 			gObj[this->m_BattleData.GateIndex[i]].m_OldX = g_DestlerGate[i].X;

  005f9	8b 45 f8	 mov	 eax, DWORD PTR _i$221025[ebp]
  005fc	c1 e0 04	 shl	 eax, 4
  005ff	8b 4d f8	 mov	 ecx, DWORD PTR _i$221025[ebp]
  00602	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00605	8b 4c 8a 14	 mov	 ecx, DWORD PTR [edx+ecx*4+20]
  00609	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0060f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00615	66 8b 80 04 00
	00 00		 mov	 ax, WORD PTR _g_DestlerGate[eax+4]
  0061c	66 89 84 0a 78
	01 00 00	 mov	 WORD PTR [edx+ecx+376], ax

; 120  : 			gObj[this->m_BattleData.GateIndex[i]].m_OldY = g_DestlerGate[i].Y;

  00624	8b 45 f8	 mov	 eax, DWORD PTR _i$221025[ebp]
  00627	c1 e0 04	 shl	 eax, 4
  0062a	8b 4d f8	 mov	 ecx, DWORD PTR _i$221025[ebp]
  0062d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00630	8b 4c 8a 14	 mov	 ecx, DWORD PTR [edx+ecx*4+20]
  00634	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0063a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00640	66 8b 80 08 00
	00 00		 mov	 ax, WORD PTR _g_DestlerGate[eax+8]
  00647	66 89 84 0a 7a
	01 00 00	 mov	 WORD PTR [edx+ecx+378], ax

; 121  : 			gObjSetMonster(this->m_BattleData.GateIndex[i], g_DestlerGate[i].Class);

  0064f	8b 45 f8	 mov	 eax, DWORD PTR _i$221025[ebp]
  00652	c1 e0 04	 shl	 eax, 4
  00655	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR _g_DestlerGate[eax]
  0065b	51		 push	 ecx
  0065c	8b 55 f8	 mov	 edx, DWORD PTR _i$221025[ebp]
  0065f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00662	8b 4c 90 14	 mov	 ecx, DWORD PTR [eax+edx*4+20]
  00666	51		 push	 ecx
  00667	e8 00 00 00 00	 call	 ?gObjSetMonster@@YAHHH@Z ; gObjSetMonster
  0066c	83 c4 08	 add	 esp, 8

; 122  : 			gObj[this->m_BattleData.GateIndex[i]].m_ImmuneToHarmCount = 200; // IMMUNITY FOR GATES

  0066f	8b 45 f8	 mov	 eax, DWORD PTR _i$221025[ebp]
  00672	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00675	8b 54 81 14	 mov	 edx, DWORD PTR [ecx+eax*4+20]
  00679	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  0067f	b8 c8 00 00 00	 mov	 eax, 200		; 000000c8H
  00684	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0068a	66 89 84 11 84
	22 00 00	 mov	 WORD PTR [ecx+edx+8836], ax

; 123  : 			gObj[this->m_BattleData.GateIndex[i]].m_ImmuneToMagicCount = 200; // IMMUNITY FOR GATES

  00692	8b 45 f8	 mov	 eax, DWORD PTR _i$221025[ebp]
  00695	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00698	8b 54 81 14	 mov	 edx, DWORD PTR [ecx+eax*4+20]
  0069c	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  006a2	b8 c8 00 00 00	 mov	 eax, 200		; 000000c8H
  006a7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  006ad	66 89 84 11 82
	22 00 00	 mov	 WORD PTR [ecx+edx+8834], ax

; 124  : 
; 125  : 			LogAddTD("[ IMPERIAL FORT ] [ BattleOfDestler ] Create Gate Index: %d Class: %d",
; 126  : 				this->m_BattleData.GateIndex[i], g_DestlerGate[i].Class);

  006b5	8b 45 f8	 mov	 eax, DWORD PTR _i$221025[ebp]
  006b8	c1 e0 04	 shl	 eax, 4
  006bb	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR _g_DestlerGate[eax]
  006c1	51		 push	 ecx
  006c2	8b 55 f8	 mov	 edx, DWORD PTR _i$221025[ebp]
  006c5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  006c8	8b 4c 90 14	 mov	 ecx, DWORD PTR [eax+edx*4+20]
  006cc	51		 push	 ecx
  006cd	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@ENNGPEMC@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@
  006d2	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  006d8	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@SetState_S@2:

; 127  : 		}
; 128  : 	}

  006db	e9 9c fd ff ff	 jmp	 $LN3@SetState_S@2
$LN2@SetState_S@2:

; 129  : 	this->m_BattleData.Time = 60000;

  006e0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  006e3	c7 40 38 60 ea
	00 00		 mov	 DWORD PTR [eax+56], 60000 ; 0000ea60H

; 130  : 	this->m_BattleData.TickCount = GetTickCount();

  006ea	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  006f0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006f3	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 131  : 	TMonsterAIGroup::DelGroupInstance(24);

  006f6	6a 18		 push	 24			; 00000018H
  006f8	e8 00 00 00 00	 call	 ?DelGroupInstance@TMonsterAIGroup@@SAHH@Z ; TMonsterAIGroup::DelGroupInstance
  006fd	83 c4 04	 add	 esp, 4

; 132  : 	TMonsterAIGroup::Init(25);

  00700	6a 19		 push	 25			; 00000019H
  00702	e8 00 00 00 00	 call	 ?Init@TMonsterAIGroup@@SAXH@Z ; TMonsterAIGroup::Init
  00707	83 c4 04	 add	 esp, 4

; 133  : 	this->m_BattleData.MonsterCount = 0;

  0070a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0070d	c7 40 44 00 00
	00 00		 mov	 DWORD PTR [eax+68], 0

; 134  : 	this->m_BattleData.CurrentAIGroup = 25;

  00714	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00717	c7 40 48 19 00
	00 00		 mov	 DWORD PTR [eax+72], 25	; 00000019H

; 135  : 	this->m_BattleData.CurrentState = BATTLEOFDESTLER_STATE_STANDBY2;

  0071e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00721	c7 40 40 03 00
	00 00		 mov	 DWORD PTR [eax+64], 3

; 136  : 	this->SendEventState();

  00728	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0072b	e8 00 00 00 00	 call	 ?SendEventState@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SendEventState

; 137  : }

  00730	5f		 pop	 edi
  00731	5e		 pop	 esi
  00732	5b		 pop	 ebx
  00733	8b e5		 mov	 esp, ebp
  00735	5d		 pop	 ebp
  00736	c3		 ret	 0
?SetState_STANDBY2@CImperialBattleOfDestler@@QAEXXZ ENDP ; CImperialBattleOfDestler::SetState_STANDBY2
_TEXT	ENDS
PUBLIC	??_C@_0CL@KEAFHCPG@?$FL?5IMPERIAL?5FORT?5?$FN?5Create?5BOSS?5?$CFs@ ; `string'
PUBLIC	??_C@_0DM@HKCGNFAJ@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@ ; `string'
EXTRN	?FindGroupLeader@TMonsterAIGroup@@SAHH@Z:PROC	; TMonsterAIGroup::FindGroupLeader
;	COMDAT ??_C@_0CL@KEAFHCPG@?$FL?5IMPERIAL?5FORT?5?$FN?5Create?5BOSS?5?$CFs@
CONST	SEGMENT
??_C@_0CL@KEAFHCPG@?$FL?5IMPERIAL?5FORT?5?$FN?5Create?5BOSS?5?$CFs@ DB '['
	DB	' IMPERIAL FORT ] Create BOSS %s Index: %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@HKCGNFAJ@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@
CONST	SEGMENT
??_C@_0DM@HKCGNFAJ@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@ DB '[ '
	DB	'IMPERIAL FORT ] [ BattleOfDestler ] State(%d) -> STANDBY3', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_STANDBY3@CImperialBattleOfDestler@@QAEXXZ PROC ; CImperialBattleOfDestler::SetState_STANDBY3
; _this$ = ecx

; 140  : {

  00740	55		 push	 ebp
  00741	8b ec		 mov	 ebp, esp
  00743	83 ec 44	 sub	 esp, 68			; 00000044H
  00746	53		 push	 ebx
  00747	56		 push	 esi
  00748	57		 push	 edi
  00749	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 141  : 	LogAddC(2, "[ IMPERIAL FORT ] [ BattleOfDestler ] State(%d) -> STANDBY3", this->m_BattleData.CurrentState);

  0074c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0074f	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00752	51		 push	 ecx
  00753	68 00 00 00 00	 push	 OFFSET ??_C@_0DM@HKCGNFAJ@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@
  00758	6a 02		 push	 2
  0075a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00760	83 c4 0c	 add	 esp, 12			; 0000000cH

; 142  : 	this->m_BattleData.GateIndex[6] = gObjAddMonster(69);

  00763	6a 45		 push	 69			; 00000045H
  00765	e8 00 00 00 00	 call	 ?gObjAddMonster@@YAFH@Z	; gObjAddMonster
  0076a	83 c4 04	 add	 esp, 4
  0076d	98		 cwde
  0076e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00771	89 41 2c	 mov	 DWORD PTR [ecx+44], eax

; 143  : 	gObj[this->m_BattleData.GateIndex[6]].MapNumber = 69;

  00774	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00777	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0077a	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00780	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00786	c6 84 0a 49 01
	00 00 45	 mov	 BYTE PTR [edx+ecx+329], 69 ; 00000045H

; 144  : 	gObj[this->m_BattleData.GateIndex[6]].X = g_DestlerGate[6].X;

  0078e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00791	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00794	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0079a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  007a0	66 a1 64 00 00
	00		 mov	 ax, WORD PTR _g_DestlerGate+100
  007a6	66 89 84 0a 44
	01 00 00	 mov	 WORD PTR [edx+ecx+324], ax

; 145  : 	gObj[this->m_BattleData.GateIndex[6]].Y = g_DestlerGate[6].Y;

  007ae	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  007b1	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  007b4	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  007ba	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  007c0	66 a1 68 00 00
	00		 mov	 ax, WORD PTR _g_DestlerGate+104
  007c6	66 89 84 0a 46
	01 00 00	 mov	 WORD PTR [edx+ecx+326], ax

; 146  : 	gObj[this->m_BattleData.GateIndex[6]].Dir = g_DestlerGate[6].Dir;

  007ce	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  007d1	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  007d4	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  007da	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  007e0	a0 6c 00 00 00	 mov	 al, BYTE PTR _g_DestlerGate+108
  007e5	88 84 0a 48 01
	00 00		 mov	 BYTE PTR [edx+ecx+328], al

; 147  : 	gObj[this->m_BattleData.GateIndex[6]].TX = g_DestlerGate[6].X;

  007ec	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  007ef	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  007f2	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  007f8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  007fe	66 a1 64 00 00
	00		 mov	 ax, WORD PTR _g_DestlerGate+100
  00804	66 89 84 0a 7c
	01 00 00	 mov	 WORD PTR [edx+ecx+380], ax

; 148  : 	gObj[this->m_BattleData.GateIndex[6]].TY = g_DestlerGate[6].Y;

  0080c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0080f	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00812	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00818	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0081e	66 a1 68 00 00
	00		 mov	 ax, WORD PTR _g_DestlerGate+104
  00824	66 89 84 0a 7e
	01 00 00	 mov	 WORD PTR [edx+ecx+382], ax

; 149  : 	gObj[this->m_BattleData.GateIndex[6]].StartX = g_DestlerGate[6].X;

  0082c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0082f	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00832	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00838	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0083e	a0 64 00 00 00	 mov	 al, BYTE PTR _g_DestlerGate+100
  00843	88 84 0a 76 01
	00 00		 mov	 BYTE PTR [edx+ecx+374], al

; 150  : 	gObj[this->m_BattleData.GateIndex[6]].StartY = g_DestlerGate[6].Y;

  0084a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0084d	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00850	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00856	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0085c	a0 68 00 00 00	 mov	 al, BYTE PTR _g_DestlerGate+104
  00861	88 84 0a 77 01
	00 00		 mov	 BYTE PTR [edx+ecx+375], al

; 151  : 	gObj[this->m_BattleData.GateIndex[6]].m_OldX = g_DestlerGate[6].X;

  00868	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0086b	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0086e	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00874	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0087a	66 a1 64 00 00
	00		 mov	 ax, WORD PTR _g_DestlerGate+100
  00880	66 89 84 0a 78
	01 00 00	 mov	 WORD PTR [edx+ecx+376], ax

; 152  : 	gObj[this->m_BattleData.GateIndex[6]].m_OldY = g_DestlerGate[6].Y;

  00888	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0088b	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0088e	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00894	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0089a	66 a1 68 00 00
	00		 mov	 ax, WORD PTR _g_DestlerGate+104
  008a0	66 89 84 0a 7a
	01 00 00	 mov	 WORD PTR [edx+ecx+378], ax

; 153  : 	gObjSetMonster(this->m_BattleData.GateIndex[6], g_DestlerGate[6].Class);

  008a8	a1 60 00 00 00	 mov	 eax, DWORD PTR _g_DestlerGate+96
  008ad	50		 push	 eax
  008ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008b1	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  008b4	52		 push	 edx
  008b5	e8 00 00 00 00	 call	 ?gObjSetMonster@@YAHHH@Z ; gObjSetMonster
  008ba	83 c4 08	 add	 esp, 8

; 154  : 	gObj[this->m_BattleData.GateIndex[6]].m_ImmuneToHarmCount = 200; // IMMUNITY FOR GATES

  008bd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  008c0	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  008c3	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  008c9	ba c8 00 00 00	 mov	 edx, 200		; 000000c8H
  008ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  008d3	66 89 94 08 84
	22 00 00	 mov	 WORD PTR [eax+ecx+8836], dx

; 155  : 	gObj[this->m_BattleData.GateIndex[6]].m_ImmuneToMagicCount = 200; // IMMUNITY FOR GATES

  008db	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  008de	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  008e1	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  008e7	ba c8 00 00 00	 mov	 edx, 200		; 000000c8H
  008ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  008f1	66 89 94 08 82
	22 00 00	 mov	 WORD PTR [eax+ecx+8834], dx

; 156  : 
; 157  : 	LogAddTD("[ IMPERIAL FORT ] [ BattleOfDestler ] Create Gate Index: %d Class: %d",
; 158  : 		this->m_BattleData.GateIndex[6], g_DestlerGate[6].Class);

  008f9	a1 60 00 00 00	 mov	 eax, DWORD PTR _g_DestlerGate+96
  008fe	50		 push	 eax
  008ff	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00902	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00905	52		 push	 edx
  00906	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@ENNGPEMC@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@
  0090b	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00911	83 c4 0c	 add	 esp, 12			; 0000000cH

; 159  : 
; 160  : 	this->m_BattleData.Time = 60000;

  00914	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00917	c7 40 38 60 ea
	00 00		 mov	 DWORD PTR [eax+56], 60000 ; 0000ea60H

; 161  : 	this->m_BattleData.TickCount = GetTickCount();

  0091e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00924	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00927	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 162  : 	TMonsterAIGroup::DelGroupInstance(25);

  0092a	6a 19		 push	 25			; 00000019H
  0092c	e8 00 00 00 00	 call	 ?DelGroupInstance@TMonsterAIGroup@@SAHH@Z ; TMonsterAIGroup::DelGroupInstance
  00931	83 c4 04	 add	 esp, 4

; 163  : 	TMonsterAIGroup::Init(26);

  00934	6a 1a		 push	 26			; 0000001aH
  00936	e8 00 00 00 00	 call	 ?Init@TMonsterAIGroup@@SAXH@Z ; TMonsterAIGroup::Init
  0093b	83 c4 04	 add	 esp, 4

; 164  : 	this->m_BattleData.MonsterCount = 0;

  0093e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00941	c7 40 44 00 00
	00 00		 mov	 DWORD PTR [eax+68], 0

; 165  : 	this->m_BattleData.CurrentLeaderIndex = TMonsterAIGroup::FindGroupLeader(26);

  00948	6a 1a		 push	 26			; 0000001aH
  0094a	e8 00 00 00 00	 call	 ?FindGroupLeader@TMonsterAIGroup@@SAHH@Z ; TMonsterAIGroup::FindGroupLeader
  0094f	83 c4 04	 add	 esp, 4
  00952	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00955	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 166  : 	LogAddTD("[ IMPERIAL FORT ] Create BOSS %s Index: %d", gObj[this->m_BattleData.CurrentLeaderIndex].Name, this->m_BattleData.CurrentLeaderIndex);

  00958	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0095b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0095e	51		 push	 ecx
  0095f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00962	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00965	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0096b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00971	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  00975	52		 push	 edx
  00976	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@KEAFHCPG@?$FL?5IMPERIAL?5FORT?5?$FN?5Create?5BOSS?5?$CFs@
  0097b	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00981	83 c4 0c	 add	 esp, 12			; 0000000cH

; 167  : 	this->m_BattleData.CurrentAIGroup = 26;

  00984	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00987	c7 40 48 1a 00
	00 00		 mov	 DWORD PTR [eax+72], 26	; 0000001aH

; 168  : 	this->m_BattleData.CurrentState = BATTLEOFDESTLER_STATE_STANDBY3;

  0098e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00991	c7 40 40 05 00
	00 00		 mov	 DWORD PTR [eax+64], 5

; 169  : 	this->SendEventState();

  00998	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0099b	e8 00 00 00 00	 call	 ?SendEventState@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SendEventState

; 170  : }

  009a0	5f		 pop	 edi
  009a1	5e		 pop	 esi
  009a2	5b		 pop	 ebx
  009a3	8b e5		 mov	 esp, ebp
  009a5	5d		 pop	 ebp
  009a6	c3		 ret	 0
?SetState_STANDBY3@CImperialBattleOfDestler@@QAEXXZ ENDP ; CImperialBattleOfDestler::SetState_STANDBY3
_TEXT	ENDS
PUBLIC	?SendImperialPlayers@CImperialBattleOfDestler@@QAEXPAEH@Z ; CImperialBattleOfDestler::SendImperialPlayers
PUBLIC	??_C@_0P@PLCJDIGB@Quest?5Started?$CB?$AA@	; `string'
PUBLIC	??_C@_0DK@GLFBGEPF@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z:PROC	; TNotice::MakeNoticeMsg
EXTRN	?s_iMonsterAIGroupMemberCount@TMonsterAIGroup@@2PAHA:BYTE ; TMonsterAIGroup::s_iMonsterAIGroupMemberCount
EXTRN	?ChangeAIOrder@TMonsterAIGroup@@SAXHH@Z:PROC	; TMonsterAIGroup::ChangeAIOrder
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT ??_C@_0P@PLCJDIGB@Quest?5Started?$CB?$AA@
CONST	SEGMENT
??_C@_0P@PLCJDIGB@Quest?5Started?$CB?$AA@ DB 'Quest Started!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@GLFBGEPF@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@
CONST	SEGMENT
??_C@_0DK@GLFBGEPF@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@ DB '[ '
	DB	'IMPERIAL FORT ] [ BattleOfDestler ] State(%d) -> PHAZE1', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_pNotice$ = -280					; size = 272
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?SetState_PHAZE1@CImperialBattleOfDestler@@QAEXXZ PROC	; CImperialBattleOfDestler::SetState_PHAZE1
; _this$ = ecx

; 173  : {

  009b0	55		 push	 ebp
  009b1	8b ec		 mov	 ebp, esp
  009b3	81 ec 58 01 00
	00		 sub	 esp, 344		; 00000158H
  009b9	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  009be	33 c5		 xor	 eax, ebp
  009c0	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  009c3	53		 push	 ebx
  009c4	56		 push	 esi
  009c5	57		 push	 edi
  009c6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 174  : 	LogAddC(2, "[ IMPERIAL FORT ] [ BattleOfDestler ] State(%d) -> PHAZE1", this->m_BattleData.CurrentState);

  009c9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  009cc	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  009cf	51		 push	 ecx
  009d0	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@GLFBGEPF@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@
  009d5	6a 02		 push	 2
  009d7	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  009dd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 175  : 	gObj[this->m_BattleData.GateIndex[0]].m_ImmuneToHarmCount = 0;

  009e0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  009e3	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  009e6	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  009ec	33 d2		 xor	 edx, edx
  009ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  009f3	66 89 94 08 84
	22 00 00	 mov	 WORD PTR [eax+ecx+8836], dx

; 176  : 	gObj[this->m_BattleData.GateIndex[0]].m_ImmuneToMagicCount = 0; // REMOVE IMMUNITY

  009fb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  009fe	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00a01	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00a07	33 d2		 xor	 edx, edx
  00a09	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a0e	66 89 94 08 82
	22 00 00	 mov	 WORD PTR [eax+ecx+8834], dx

; 177  : 	this->m_BattleData.Time = 600000;

  00a16	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00a19	c7 40 38 c0 27
	09 00		 mov	 DWORD PTR [eax+56], 600000 ; 000927c0H

; 178  : 	this->m_BattleData.TickCount = GetTickCount();

  00a20	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00a26	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a29	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 179  : 	TMonsterAIGroup::ChangeAIOrder(24, 1);

  00a2c	6a 01		 push	 1
  00a2e	6a 18		 push	 24			; 00000018H
  00a30	e8 00 00 00 00	 call	 ?ChangeAIOrder@TMonsterAIGroup@@SAXHH@Z ; TMonsterAIGroup::ChangeAIOrder
  00a35	83 c4 08	 add	 esp, 8

; 180  : 	this->m_BattleData.MonsterCount = TMonsterAIGroup::s_iMonsterAIGroupMemberCount[24];

  00a38	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00a3b	8b 0d 60 00 00
	00		 mov	 ecx, DWORD PTR ?s_iMonsterAIGroupMemberCount@TMonsterAIGroup@@2PAHA+96
  00a41	89 48 44	 mov	 DWORD PTR [eax+68], ecx

; 181  : 	this->m_BattleData.PhazeStep = 0;

  00a44	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00a47	c7 40 50 00 00
	00 00		 mov	 DWORD PTR [eax+80], 0

; 182  : 	this->m_BattleData.NotifyCount = -1;

  00a4e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00a51	c6 40 54 ff	 mov	 BYTE PTR [eax+84], 255	; 000000ffH

; 183  : 	PMSG_NOTICE pNotice;
; 184  : 	TNotice::MakeNoticeMsg(&pNotice, 0, "Quest Started!");

  00a55	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PLCJDIGB@Quest?5Started?$CB?$AA@
  00a5a	6a 00		 push	 0
  00a5c	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  00a62	50		 push	 eax
  00a63	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg
  00a68	83 c4 0c	 add	 esp, 12			; 0000000cH

; 185  : 	this->SendImperialPlayers((LPBYTE)&pNotice, pNotice.h.size);

  00a6b	0f b6 85 e9 fe
	ff ff		 movzx	 eax, BYTE PTR _pNotice$[ebp+1]
  00a72	50		 push	 eax
  00a73	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  00a79	51		 push	 ecx
  00a7a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a7d	e8 00 00 00 00	 call	 ?SendImperialPlayers@CImperialBattleOfDestler@@QAEXPAEH@Z ; CImperialBattleOfDestler::SendImperialPlayers

; 186  : 	this->m_BattleData.CurrentState = BATTLEOFDESTLER_STATE_PHAZE1;

  00a82	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00a85	c7 40 40 02 00
	00 00		 mov	 DWORD PTR [eax+64], 2

; 187  : }

  00a8c	5f		 pop	 edi
  00a8d	5e		 pop	 esi
  00a8e	5b		 pop	 ebx
  00a8f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00a92	33 cd		 xor	 ecx, ebp
  00a94	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00a99	8b e5		 mov	 esp, ebp
  00a9b	5d		 pop	 ebp
  00a9c	c3		 ret	 0
?SetState_PHAZE1@CImperialBattleOfDestler@@QAEXXZ ENDP	; CImperialBattleOfDestler::SetState_PHAZE1
_TEXT	ENDS
PUBLIC	??_C@_0DK@EAHMDHDG@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@ ; `string'
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_0DK@EAHMDHDG@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@
CONST	SEGMENT
??_C@_0DK@EAHMDHDG@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@ DB '[ '
	DB	'IMPERIAL FORT ] [ BattleOfDestler ] State(%d) -> PHAZE2', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_pNotice$ = -280					; size = 272
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?SetState_PHAZE2@CImperialBattleOfDestler@@QAEXXZ PROC	; CImperialBattleOfDestler::SetState_PHAZE2
; _this$ = ecx

; 190  : {

  00aa0	55		 push	 ebp
  00aa1	8b ec		 mov	 ebp, esp
  00aa3	81 ec 58 01 00
	00		 sub	 esp, 344		; 00000158H
  00aa9	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00aae	33 c5		 xor	 eax, ebp
  00ab0	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00ab3	53		 push	 ebx
  00ab4	56		 push	 esi
  00ab5	57		 push	 edi
  00ab6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 191  : 	LogAddC(2, "[ IMPERIAL FORT ] [ BattleOfDestler ] State(%d) -> PHAZE2", this->m_BattleData.CurrentState);

  00ab9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00abc	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00abf	51		 push	 ecx
  00ac0	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@EAHMDHDG@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@
  00ac5	6a 02		 push	 2
  00ac7	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00acd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 192  : 	gObj[this->m_BattleData.GateIndex[3]].m_ImmuneToHarmCount = 0;

  00ad0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00ad3	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00ad6	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00adc	33 d2		 xor	 edx, edx
  00ade	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00ae3	66 89 94 08 84
	22 00 00	 mov	 WORD PTR [eax+ecx+8836], dx

; 193  : 	gObj[this->m_BattleData.GateIndex[3]].m_ImmuneToMagicCount = 0; // REMOVE IMMUNITY

  00aeb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00aee	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00af1	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00af7	33 d2		 xor	 edx, edx
  00af9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00afe	66 89 94 08 82
	22 00 00	 mov	 WORD PTR [eax+ecx+8834], dx

; 194  : 	this->m_BattleData.Time = 600000;

  00b06	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b09	c7 40 38 c0 27
	09 00		 mov	 DWORD PTR [eax+56], 600000 ; 000927c0H

; 195  : 	this->m_BattleData.TickCount = GetTickCount();

  00b10	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00b16	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b19	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 196  : 	TMonsterAIGroup::ChangeAIOrder(25, 1);

  00b1c	6a 01		 push	 1
  00b1e	6a 19		 push	 25			; 00000019H
  00b20	e8 00 00 00 00	 call	 ?ChangeAIOrder@TMonsterAIGroup@@SAXHH@Z ; TMonsterAIGroup::ChangeAIOrder
  00b25	83 c4 08	 add	 esp, 8

; 197  : 	this->m_BattleData.MonsterCount = TMonsterAIGroup::s_iMonsterAIGroupMemberCount[25];

  00b28	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b2b	8b 0d 64 00 00
	00		 mov	 ecx, DWORD PTR ?s_iMonsterAIGroupMemberCount@TMonsterAIGroup@@2PAHA+100
  00b31	89 48 44	 mov	 DWORD PTR [eax+68], ecx

; 198  : 	this->m_BattleData.PhazeStep = 0;

  00b34	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b37	c7 40 50 00 00
	00 00		 mov	 DWORD PTR [eax+80], 0

; 199  : 	this->m_BattleData.NotifyCount = -1;

  00b3e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b41	c6 40 54 ff	 mov	 BYTE PTR [eax+84], 255	; 000000ffH

; 200  : 	PMSG_NOTICE pNotice;
; 201  : 	TNotice::MakeNoticeMsg(&pNotice, 0, "Quest Started!");

  00b45	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PLCJDIGB@Quest?5Started?$CB?$AA@
  00b4a	6a 00		 push	 0
  00b4c	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  00b52	50		 push	 eax
  00b53	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg
  00b58	83 c4 0c	 add	 esp, 12			; 0000000cH

; 202  : 	this->SendImperialPlayers((LPBYTE)&pNotice, pNotice.h.size);

  00b5b	0f b6 85 e9 fe
	ff ff		 movzx	 eax, BYTE PTR _pNotice$[ebp+1]
  00b62	50		 push	 eax
  00b63	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  00b69	51		 push	 ecx
  00b6a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b6d	e8 00 00 00 00	 call	 ?SendImperialPlayers@CImperialBattleOfDestler@@QAEXPAEH@Z ; CImperialBattleOfDestler::SendImperialPlayers

; 203  : 	this->m_BattleData.CurrentState = BATTLEOFDESTLER_STATE_PHAZE2;

  00b72	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b75	c7 40 40 04 00
	00 00		 mov	 DWORD PTR [eax+64], 4

; 204  : }

  00b7c	5f		 pop	 edi
  00b7d	5e		 pop	 esi
  00b7e	5b		 pop	 ebx
  00b7f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00b82	33 cd		 xor	 ecx, ebp
  00b84	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00b89	8b e5		 mov	 esp, ebp
  00b8b	5d		 pop	 ebp
  00b8c	c3		 ret	 0
?SetState_PHAZE2@CImperialBattleOfDestler@@QAEXXZ ENDP	; CImperialBattleOfDestler::SetState_PHAZE2
_TEXT	ENDS
PUBLIC	??_C@_0DK@FJGHAGHH@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@ ; `string'
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_0DK@FJGHAGHH@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@
CONST	SEGMENT
??_C@_0DK@FJGHAGHH@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@ DB '[ '
	DB	'IMPERIAL FORT ] [ BattleOfDestler ] State(%d) -> PHAZE3', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_pNotice$ = -280					; size = 272
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?SetState_PHAZE3@CImperialBattleOfDestler@@QAEXXZ PROC	; CImperialBattleOfDestler::SetState_PHAZE3
; _this$ = ecx

; 207  : {

  00b90	55		 push	 ebp
  00b91	8b ec		 mov	 ebp, esp
  00b93	81 ec 58 01 00
	00		 sub	 esp, 344		; 00000158H
  00b99	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00b9e	33 c5		 xor	 eax, ebp
  00ba0	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00ba3	53		 push	 ebx
  00ba4	56		 push	 esi
  00ba5	57		 push	 edi
  00ba6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 208  : 	LogAddC(2, "[ IMPERIAL FORT ] [ BattleOfDestler ] State(%d) -> PHAZE3", this->m_BattleData.CurrentState);

  00ba9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00bac	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00baf	51		 push	 ecx
  00bb0	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@FJGHAGHH@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@
  00bb5	6a 02		 push	 2
  00bb7	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00bbd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 209  : 	gObj[this->m_BattleData.GateIndex[6]].m_ImmuneToHarmCount = 0;

  00bc0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00bc3	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00bc6	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00bcc	33 d2		 xor	 edx, edx
  00bce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00bd3	66 89 94 08 84
	22 00 00	 mov	 WORD PTR [eax+ecx+8836], dx

; 210  : 	gObj[this->m_BattleData.GateIndex[6]].m_ImmuneToMagicCount = 0; // REMOVE IMMUNITY

  00bdb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00bde	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00be1	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00be7	33 d2		 xor	 edx, edx
  00be9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00bee	66 89 94 08 82
	22 00 00	 mov	 WORD PTR [eax+ecx+8834], dx

; 211  : 	this->m_BattleData.Time = 600000;

  00bf6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00bf9	c7 40 38 c0 27
	09 00		 mov	 DWORD PTR [eax+56], 600000 ; 000927c0H

; 212  : 	this->m_BattleData.TickCount = GetTickCount();

  00c00	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00c06	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00c09	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 213  : 	TMonsterAIGroup::ChangeAIOrder(26, 1);

  00c0c	6a 01		 push	 1
  00c0e	6a 1a		 push	 26			; 0000001aH
  00c10	e8 00 00 00 00	 call	 ?ChangeAIOrder@TMonsterAIGroup@@SAXHH@Z ; TMonsterAIGroup::ChangeAIOrder
  00c15	83 c4 08	 add	 esp, 8

; 214  : 	this->m_BattleData.MonsterCount = TMonsterAIGroup::s_iMonsterAIGroupMemberCount[26];

  00c18	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00c1b	8b 0d 68 00 00
	00		 mov	 ecx, DWORD PTR ?s_iMonsterAIGroupMemberCount@TMonsterAIGroup@@2PAHA+104
  00c21	89 48 44	 mov	 DWORD PTR [eax+68], ecx

; 215  : 	this->m_BattleData.PhazeStep = 0;

  00c24	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00c27	c7 40 50 00 00
	00 00		 mov	 DWORD PTR [eax+80], 0

; 216  : 	this->m_BattleData.NotifyCount = -1;

  00c2e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00c31	c6 40 54 ff	 mov	 BYTE PTR [eax+84], 255	; 000000ffH

; 217  : 	PMSG_NOTICE pNotice;
; 218  : 	TNotice::MakeNoticeMsg(&pNotice, 0, "Quest Started!");

  00c35	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PLCJDIGB@Quest?5Started?$CB?$AA@
  00c3a	6a 00		 push	 0
  00c3c	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  00c42	50		 push	 eax
  00c43	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg
  00c48	83 c4 0c	 add	 esp, 12			; 0000000cH

; 219  : 	this->SendImperialPlayers((LPBYTE)&pNotice, pNotice.h.size);

  00c4b	0f b6 85 e9 fe
	ff ff		 movzx	 eax, BYTE PTR _pNotice$[ebp+1]
  00c52	50		 push	 eax
  00c53	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  00c59	51		 push	 ecx
  00c5a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00c5d	e8 00 00 00 00	 call	 ?SendImperialPlayers@CImperialBattleOfDestler@@QAEXPAEH@Z ; CImperialBattleOfDestler::SendImperialPlayers

; 220  : 	this->m_BattleData.CurrentState = BATTLEOFDESTLER_STATE_PHAZE3;

  00c62	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00c65	c7 40 40 06 00
	00 00		 mov	 DWORD PTR [eax+64], 6

; 221  : }

  00c6c	5f		 pop	 edi
  00c6d	5e		 pop	 esi
  00c6e	5b		 pop	 ebx
  00c6f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00c72	33 cd		 xor	 ecx, ebp
  00c74	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00c79	8b e5		 mov	 esp, ebp
  00c7b	5d		 pop	 ebp
  00c7c	c3		 ret	 0
?SetState_PHAZE3@CImperialBattleOfDestler@@QAEXXZ ENDP	; CImperialBattleOfDestler::SetState_PHAZE3
_TEXT	ENDS
PUBLIC	??_C@_0DH@KAHKAMGA@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@ ; `string'
;	COMDAT ??_C@_0DH@KAHKAMGA@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@
CONST	SEGMENT
??_C@_0DH@KAHKAMGA@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@ DB '[ '
	DB	'IMPERIAL FORT ] [ BattleOfDestler ] State(%d) -> END', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_END@CImperialBattleOfDestler@@QAEXXZ PROC	; CImperialBattleOfDestler::SetState_END
; _this$ = ecx

; 224  : {

  00c80	55		 push	 ebp
  00c81	8b ec		 mov	 ebp, esp
  00c83	83 ec 44	 sub	 esp, 68			; 00000044H
  00c86	53		 push	 ebx
  00c87	56		 push	 esi
  00c88	57		 push	 edi
  00c89	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 225  : 	LogAddC(2, "[ IMPERIAL FORT ] [ BattleOfDestler ] State(%d) -> END", this->m_BattleData.CurrentState);

  00c8c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00c8f	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00c92	51		 push	 ecx
  00c93	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@KAHKAMGA@?$FL?5IMPERIAL?5FORT?5?$FN?5?$FL?5BattleOfDest@
  00c98	6a 02		 push	 2
  00c9a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00ca0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 226  : 	this->m_BattleData.CurrentState = BATTLEOFDESTLER_STATE_END;

  00ca3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00ca6	c7 40 40 07 00
	00 00		 mov	 DWORD PTR [eax+64], 7

; 227  : 
; 228  : 
; 229  : 
; 230  : 	return;
; 231  : }

  00cad	5f		 pop	 edi
  00cae	5e		 pop	 esi
  00caf	5b		 pop	 ebx
  00cb0	8b e5		 mov	 esp, ebp
  00cb2	5d		 pop	 ebp
  00cb3	c3		 ret	 0
?SetState_END@CImperialBattleOfDestler@@QAEXXZ ENDP	; CImperialBattleOfDestler::SetState_END
_TEXT	ENDS
PUBLIC	?ProcState_END@CImperialBattleOfDestler@@QAEXXZ	; CImperialBattleOfDestler::ProcState_END
PUBLIC	?ProcState_PHAZE3@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::ProcState_PHAZE3
PUBLIC	?ProcState_STANDBY3@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::ProcState_STANDBY3
PUBLIC	?ProcState_PHAZE2@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::ProcState_PHAZE2
PUBLIC	?ProcState_STANDBY2@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::ProcState_STANDBY2
PUBLIC	?ProcState_PHAZE1@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::ProcState_PHAZE1
PUBLIC	?ProcState_STANDBY1@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::ProcState_STANDBY1
PUBLIC	?Run@CImperialBattleOfDestler@@QAEXXZ		; CImperialBattleOfDestler::Run
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?Run@CImperialBattleOfDestler@@QAEXXZ PROC		; CImperialBattleOfDestler::Run
; _this$ = ecx

; 236  : {

  00cc0	55		 push	 ebp
  00cc1	8b ec		 mov	 ebp, esp
  00cc3	83 ec 48	 sub	 esp, 72			; 00000048H
  00cc6	53		 push	 ebx
  00cc7	56		 push	 esi
  00cc8	57		 push	 edi
  00cc9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 237  : 	switch ( this->m_BattleData.CurrentState )

  00ccc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00ccf	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00cd2	89 4d b8	 mov	 DWORD PTR tv66[ebp], ecx
  00cd5	83 7d b8 07	 cmp	 DWORD PTR tv66[ebp], 7
  00cd9	77 50		 ja	 SHORT $LN11@Run
  00cdb	8b 55 b8	 mov	 edx, DWORD PTR tv66[ebp]
  00cde	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN13@Run[edx*4]
$LN8@Run:

; 238  : 	{
; 239  : 		case 0:
; 240  : 			return;

  00ce5	eb 44		 jmp	 SHORT $LN11@Run
$LN7@Run:

; 241  : 		case 1:
; 242  : 			this->ProcState_STANDBY1();

  00ce7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00cea	e8 00 00 00 00	 call	 ?ProcState_STANDBY1@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::ProcState_STANDBY1

; 243  : 			break;

  00cef	eb 3a		 jmp	 SHORT $LN11@Run
$LN6@Run:

; 244  : 		case 2:
; 245  : 			this->ProcState_PHAZE1();

  00cf1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00cf4	e8 00 00 00 00	 call	 ?ProcState_PHAZE1@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::ProcState_PHAZE1

; 246  : 			break;

  00cf9	eb 30		 jmp	 SHORT $LN11@Run
$LN5@Run:

; 247  : 		case 3:
; 248  : 			this->ProcState_STANDBY2();

  00cfb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00cfe	e8 00 00 00 00	 call	 ?ProcState_STANDBY2@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::ProcState_STANDBY2

; 249  : 			break;

  00d03	eb 26		 jmp	 SHORT $LN11@Run
$LN4@Run:

; 250  : 		case 4:
; 251  : 			this->ProcState_PHAZE2();

  00d05	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d08	e8 00 00 00 00	 call	 ?ProcState_PHAZE2@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::ProcState_PHAZE2

; 252  : 			break;

  00d0d	eb 1c		 jmp	 SHORT $LN11@Run
$LN3@Run:

; 253  : 		case 5:
; 254  : 			this->ProcState_STANDBY3();

  00d0f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d12	e8 00 00 00 00	 call	 ?ProcState_STANDBY3@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::ProcState_STANDBY3

; 255  : 			break;

  00d17	eb 12		 jmp	 SHORT $LN11@Run
$LN2@Run:

; 256  : 		case 6:
; 257  : 			this->ProcState_PHAZE3();

  00d19	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d1c	e8 00 00 00 00	 call	 ?ProcState_PHAZE3@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::ProcState_PHAZE3

; 258  : 			break;

  00d21	eb 08		 jmp	 SHORT $LN11@Run
$LN1@Run:

; 259  : 		case 7:
; 260  : 			this->ProcState_END();

  00d23	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d26	e8 00 00 00 00	 call	 ?ProcState_END@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::ProcState_END
$LN11@Run:

; 261  : 			break;
; 262  : 	}
; 263  : }

  00d2b	5f		 pop	 edi
  00d2c	5e		 pop	 esi
  00d2d	5b		 pop	 ebx
  00d2e	8b e5		 mov	 esp, ebp
  00d30	5d		 pop	 ebp
  00d31	c3		 ret	 0
  00d32	8b ff		 npad	 2
$LN13@Run:
  00d34	00 00 00 00	 DD	 $LN8@Run
  00d38	00 00 00 00	 DD	 $LN7@Run
  00d3c	00 00 00 00	 DD	 $LN6@Run
  00d40	00 00 00 00	 DD	 $LN5@Run
  00d44	00 00 00 00	 DD	 $LN4@Run
  00d48	00 00 00 00	 DD	 $LN3@Run
  00d4c	00 00 00 00	 DD	 $LN2@Run
  00d50	00 00 00 00	 DD	 $LN1@Run
?Run@CImperialBattleOfDestler@@QAEXXZ ENDP		; CImperialBattleOfDestler::Run
_TEXT	ENDS
PUBLIC	?SendEventInterface@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SendEventInterface
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_Tick$ = -8						; size = 4
_this$ = -4						; size = 4
?ProcState_STANDBY1@CImperialBattleOfDestler@@QAEXXZ PROC ; CImperialBattleOfDestler::ProcState_STANDBY1
; _this$ = ecx

; 266  : {

  00d60	55		 push	 ebp
  00d61	8b ec		 mov	 ebp, esp
  00d63	83 ec 48	 sub	 esp, 72			; 00000048H
  00d66	53		 push	 ebx
  00d67	56		 push	 esi
  00d68	57		 push	 edi
  00d69	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 267  : 	int Tick = GetTickCount() - this->m_BattleData.TickCount;

  00d6c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00d72	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d75	2b 41 3c	 sub	 eax, DWORD PTR [ecx+60]
  00d78	89 45 f8	 mov	 DWORD PTR _Tick$[ebp], eax

; 268  : 	if(Tick >= 1000)

  00d7b	81 7d f8 e8 03
	00 00		 cmp	 DWORD PTR _Tick$[ebp], 1000 ; 000003e8H
  00d82	7c 36		 jl	 SHORT $LN3@ProcState_

; 269  : 	{
; 270  : 		this->m_BattleData.Time -= Tick;

  00d84	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00d87	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00d8a	2b 4d f8	 sub	 ecx, DWORD PTR _Tick$[ebp]
  00d8d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00d90	89 4a 38	 mov	 DWORD PTR [edx+56], ecx

; 271  : 		this->m_BattleData.TickCount = GetTickCount();

  00d93	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00d99	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d9c	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 272  : 
; 273  : 		this->SendEventInterface();

  00d9f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00da2	e8 00 00 00 00	 call	 ?SendEventInterface@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SendEventInterface

; 274  : 
; 275  : 		if(this->m_BattleData.Time <= 0)

  00da7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00daa	83 78 38 00	 cmp	 DWORD PTR [eax+56], 0
  00dae	7f 0a		 jg	 SHORT $LN3@ProcState_

; 276  : 		{
; 277  : 			this->SetState(BATTLEOFDESTLER_STATE_PHAZE1);

  00db0	6a 02		 push	 2
  00db2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00db5	e8 00 00 00 00	 call	 ?SetState@CImperialBattleOfDestler@@QAEXH@Z ; CImperialBattleOfDestler::SetState
$LN3@ProcState_:

; 278  : 		}
; 279  : 	}
; 280  : }

  00dba	5f		 pop	 edi
  00dbb	5e		 pop	 esi
  00dbc	5b		 pop	 ebx
  00dbd	8b e5		 mov	 esp, ebp
  00dbf	5d		 pop	 ebp
  00dc0	c3		 ret	 0
?ProcState_STANDBY1@CImperialBattleOfDestler@@QAEXXZ ENDP ; CImperialBattleOfDestler::ProcState_STANDBY1
_TEXT	ENDS
PUBLIC	?SetMapAttr@CImperialBattleOfDestler@@QAEXH@Z	; CImperialBattleOfDestler::SetMapAttr
PUBLIC	??_C@_0CH@LFMFLPDA@Portal?5will?5be?5closed?5after?5?$CFd?5m@ ; `string'
PUBLIC	?GetIndex@CImperialBattleUser@@QAEHXZ		; CImperialBattleUser::GetIndex
PUBLIC	?MonsterProc@CImperialBattleOfDestler@@QAEXXZ	; CImperialBattleOfDestler::MonsterProc
PUBLIC	__$ArrayPad$
EXTRN	?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ:PROC	; TNotice::MakeNoticeMsgEx
EXTRN	?gObjAttack@@YAHPAUOBJECTSTRUCT@@0PAVCMagicInf@@HEHHEE@Z:PROC ; gObjAttack
EXTRN	?GetUserCount@CImperialBattleUserMng@@QAEHXZ:PROC ; CImperialBattleUserMng::GetUserCount
EXTRN	?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A:BYTE ; g_ImperialBattleUserMng
;	COMDAT ??_C@_0CH@LFMFLPDA@Portal?5will?5be?5closed?5after?5?$CFd?5m@
CONST	SEGMENT
??_C@_0CH@LFMFLPDA@Portal?5will?5be?5closed?5after?5?$CFd?5m@ DB 'Portal '
	DB	'will be closed after %d minutes', 00H	; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_pNotice$221094 = -292					; size = 272
_n$221088 = -20						; size = 4
_i$221084 = -16						; size = 4
_Tick$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?ProcState_PHAZE1@CImperialBattleOfDestler@@QAEXXZ PROC	; CImperialBattleOfDestler::ProcState_PHAZE1
; _this$ = ecx

; 283  : {

  00dd0	55		 push	 ebp
  00dd1	8b ec		 mov	 ebp, esp
  00dd3	81 ec 64 01 00
	00		 sub	 esp, 356		; 00000164H
  00dd9	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00dde	33 c5		 xor	 eax, ebp
  00de0	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00de3	53		 push	 ebx
  00de4	56		 push	 esi
  00de5	57		 push	 edi
  00de6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 284  : 	int Tick = GetTickCount() - this->m_BattleData.TickCount;

  00de9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00def	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00df2	2b 41 3c	 sub	 eax, DWORD PTR [ecx+60]
  00df5	89 45 f4	 mov	 DWORD PTR _Tick$[ebp], eax

; 285  : 	if(Tick >= 1000)

  00df8	81 7d f4 e8 03
	00 00		 cmp	 DWORD PTR _Tick$[ebp], 1000 ; 000003e8H
  00dff	0f 8c 56 03 00
	00		 jl	 $LN14@ProcState_@2

; 286  : 	{
; 287  : 		this->m_BattleData.Time -= Tick;

  00e05	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00e08	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00e0b	2b 4d f4	 sub	 ecx, DWORD PTR _Tick$[ebp]
  00e0e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00e11	89 4a 38	 mov	 DWORD PTR [edx+56], ecx

; 288  : 		this->m_BattleData.TickCount = GetTickCount();

  00e14	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00e1a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00e1d	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 289  : 
; 290  : 		this->SendEventInterface();

  00e20	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00e23	e8 00 00 00 00	 call	 ?SendEventInterface@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SendEventInterface

; 291  : 		this->MonsterProc();

  00e28	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00e2b	e8 00 00 00 00	 call	 ?MonsterProc@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::MonsterProc

; 292  : 
; 293  : 		for(int i=0;i<12;++i)

  00e30	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$221084[ebp], 0
  00e37	eb 09		 jmp	 SHORT $LN12@ProcState_@2
$LN11@ProcState_@2:
  00e39	8b 45 f0	 mov	 eax, DWORD PTR _i$221084[ebp]
  00e3c	83 c0 01	 add	 eax, 1
  00e3f	89 45 f0	 mov	 DWORD PTR _i$221084[ebp], eax
$LN12@ProcState_@2:
  00e42	83 7d f0 0c	 cmp	 DWORD PTR _i$221084[ebp], 12 ; 0000000cH
  00e46	0f 8d 56 01 00
	00		 jge	 $LN10@ProcState_@2

; 294  : 		{
; 295  : 			for(int n=0;n<g_ImperialBattleUserMng.GetUserCount();++n)

  00e4c	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _n$221088[ebp], 0
  00e53	eb 09		 jmp	 SHORT $LN9@ProcState_@2
$LN8@ProcState_@2:
  00e55	8b 45 ec	 mov	 eax, DWORD PTR _n$221088[ebp]
  00e58	83 c0 01	 add	 eax, 1
  00e5b	89 45 ec	 mov	 DWORD PTR _n$221088[ebp], eax
$LN9@ProcState_@2:
  00e5e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A ; g_ImperialBattleUserMng
  00e63	e8 00 00 00 00	 call	 ?GetUserCount@CImperialBattleUserMng@@QAEHXZ ; CImperialBattleUserMng::GetUserCount
  00e68	39 45 ec	 cmp	 DWORD PTR _n$221088[ebp], eax
  00e6b	0f 8d 2c 01 00
	00		 jge	 $LN7@ProcState_@2

; 296  : 			{
; 297  : 
; 298  : 				if(gObj[g_ImperialBattleUserMng.m_BattleUser[n].GetIndex()].X >= g_DestlerTrap[i].X-5 && gObj[g_ImperialBattleUserMng.m_BattleUser[n].GetIndex()].X <= g_DestlerTrap[i].X+5
; 299  : 					&& gObj[g_ImperialBattleUserMng.m_BattleUser[n].GetIndex()].Y >= g_DestlerTrap[i].Y-5 && gObj[g_ImperialBattleUserMng.m_BattleUser[n].GetIndex()].Y <= g_DestlerTrap[i].Y+5)

  00e71	8b 4d ec	 mov	 ecx, DWORD PTR _n$221088[ebp]
  00e74	6b c9 0c	 imul	 ecx, 12			; 0000000cH
  00e77	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A+4
  00e7d	e8 00 00 00 00	 call	 ?GetIndex@CImperialBattleUser@@QAEHXZ ; CImperialBattleUser::GetIndex
  00e82	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00e88	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00e8e	0f bf 94 01 44
	01 00 00	 movsx	 edx, WORD PTR [ecx+eax+324]
  00e96	8b 45 f0	 mov	 eax, DWORD PTR _i$221084[ebp]
  00e99	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR _g_DestlerTrap[eax*8]
  00ea0	83 e9 05	 sub	 ecx, 5
  00ea3	3b d1		 cmp	 edx, ecx
  00ea5	0f 8c ed 00 00
	00		 jl	 $LN6@ProcState_@2
  00eab	8b 4d ec	 mov	 ecx, DWORD PTR _n$221088[ebp]
  00eae	6b c9 0c	 imul	 ecx, 12			; 0000000cH
  00eb1	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A+4
  00eb7	e8 00 00 00 00	 call	 ?GetIndex@CImperialBattleUser@@QAEHXZ ; CImperialBattleUser::GetIndex
  00ebc	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00ec2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00ec8	0f bf 94 01 44
	01 00 00	 movsx	 edx, WORD PTR [ecx+eax+324]
  00ed0	8b 45 f0	 mov	 eax, DWORD PTR _i$221084[ebp]
  00ed3	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR _g_DestlerTrap[eax*8]
  00eda	83 c1 05	 add	 ecx, 5
  00edd	3b d1		 cmp	 edx, ecx
  00edf	0f 8f b3 00 00
	00		 jg	 $LN6@ProcState_@2
  00ee5	8b 4d ec	 mov	 ecx, DWORD PTR _n$221088[ebp]
  00ee8	6b c9 0c	 imul	 ecx, 12			; 0000000cH
  00eeb	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A+4
  00ef1	e8 00 00 00 00	 call	 ?GetIndex@CImperialBattleUser@@QAEHXZ ; CImperialBattleUser::GetIndex
  00ef6	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00efc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00f02	0f bf 94 01 46
	01 00 00	 movsx	 edx, WORD PTR [ecx+eax+326]
  00f0a	8b 45 f0	 mov	 eax, DWORD PTR _i$221084[ebp]
  00f0d	8b 0c c5 04 00
	00 00		 mov	 ecx, DWORD PTR _g_DestlerTrap[eax*8+4]
  00f14	83 e9 05	 sub	 ecx, 5
  00f17	3b d1		 cmp	 edx, ecx
  00f19	7c 7d		 jl	 SHORT $LN6@ProcState_@2
  00f1b	8b 4d ec	 mov	 ecx, DWORD PTR _n$221088[ebp]
  00f1e	6b c9 0c	 imul	 ecx, 12			; 0000000cH
  00f21	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A+4
  00f27	e8 00 00 00 00	 call	 ?GetIndex@CImperialBattleUser@@QAEHXZ ; CImperialBattleUser::GetIndex
  00f2c	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00f32	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00f38	0f bf 94 01 46
	01 00 00	 movsx	 edx, WORD PTR [ecx+eax+326]
  00f40	8b 45 f0	 mov	 eax, DWORD PTR _i$221084[ebp]
  00f43	8b 0c c5 04 00
	00 00		 mov	 ecx, DWORD PTR _g_DestlerTrap[eax*8+4]
  00f4a	83 c1 05	 add	 ecx, 5
  00f4d	3b d1		 cmp	 edx, ecx
  00f4f	7f 47		 jg	 SHORT $LN6@ProcState_@2

; 300  : 				{
; 301  : 					gObjAttack(&gObj[this->m_BattleData.TrapIndex], &gObj[g_ImperialBattleUserMng.m_BattleUser[n].GetIndex()], NULL, 0, 0, 0, 0,0,0);

  00f51	6a 00		 push	 0
  00f53	6a 00		 push	 0
  00f55	6a 00		 push	 0
  00f57	6a 00		 push	 0
  00f59	6a 00		 push	 0
  00f5b	6a 00		 push	 0
  00f5d	6a 00		 push	 0
  00f5f	8b 4d ec	 mov	 ecx, DWORD PTR _n$221088[ebp]
  00f62	6b c9 0c	 imul	 ecx, 12			; 0000000cH
  00f65	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A+4
  00f6b	e8 00 00 00 00	 call	 ?GetIndex@CImperialBattleUser@@QAEHXZ ; CImperialBattleUser::GetIndex
  00f70	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00f76	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00f7c	50		 push	 eax
  00f7d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00f80	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00f83	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00f89	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00f8f	51		 push	 ecx
  00f90	e8 00 00 00 00	 call	 ?gObjAttack@@YAHPAUOBJECTSTRUCT@@0PAVCMagicInf@@HEHHEE@Z ; gObjAttack
  00f95	83 c4 24	 add	 esp, 36			; 00000024H
$LN6@ProcState_@2:

; 302  : 				}
; 303  : 			}

  00f98	e9 b8 fe ff ff	 jmp	 $LN8@ProcState_@2
$LN7@ProcState_@2:

; 304  : 		}

  00f9d	e9 97 fe ff ff	 jmp	 $LN11@ProcState_@2
$LN10@ProcState_@2:

; 305  : 
; 306  : 		if(this->m_BattleData.Time > 0 && (this->m_BattleData.Time/60000) !=this->m_BattleData.NotifyCount)

  00fa2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00fa5	83 78 38 00	 cmp	 DWORD PTR [eax+56], 0
  00fa9	7e 65		 jle	 SHORT $LN5@ProcState_@2
  00fab	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00fae	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  00fb1	99		 cdq
  00fb2	b9 60 ea 00 00	 mov	 ecx, 60000		; 0000ea60H
  00fb7	f7 f9		 idiv	 ecx
  00fb9	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00fbc	0f b6 4a 54	 movzx	 ecx, BYTE PTR [edx+84]
  00fc0	3b c1		 cmp	 eax, ecx
  00fc2	74 4c		 je	 SHORT $LN5@ProcState_@2

; 307  : 		{
; 308  : 			this->m_BattleData.NotifyCount = this->m_BattleData.Time / 60000;

  00fc4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00fc7	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  00fca	99		 cdq
  00fcb	b9 60 ea 00 00	 mov	 ecx, 60000		; 0000ea60H
  00fd0	f7 f9		 idiv	 ecx
  00fd2	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00fd5	88 42 54	 mov	 BYTE PTR [edx+84], al

; 309  : 			PMSG_NOTICE pNotice;
; 310  : 			TNotice::MakeNoticeMsgEx(&pNotice, 0, "Portal will be closed after %d minutes", this->m_BattleData.NotifyCount+1);

  00fd8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00fdb	0f b6 48 54	 movzx	 ecx, BYTE PTR [eax+84]
  00fdf	83 c1 01	 add	 ecx, 1
  00fe2	51		 push	 ecx
  00fe3	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@LFMFLPDA@Portal?5will?5be?5closed?5after?5?$CFd?5m@
  00fe8	6a 00		 push	 0
  00fea	8d 95 dc fe ff
	ff		 lea	 edx, DWORD PTR _pNotice$221094[ebp]
  00ff0	52		 push	 edx
  00ff1	e8 00 00 00 00	 call	 ?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ ; TNotice::MakeNoticeMsgEx
  00ff6	83 c4 10	 add	 esp, 16			; 00000010H

; 311  : 			this->SendImperialPlayers((LPBYTE)&pNotice, pNotice.h.size);

  00ff9	0f b6 85 dd fe
	ff ff		 movzx	 eax, BYTE PTR _pNotice$221094[ebp+1]
  01000	50		 push	 eax
  01001	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$221094[ebp]
  01007	51		 push	 ecx
  01008	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0100b	e8 00 00 00 00	 call	 ?SendImperialPlayers@CImperialBattleOfDestler@@QAEXPAEH@Z ; CImperialBattleOfDestler::SendImperialPlayers
$LN5@ProcState_@2:

; 312  : 		}
; 313  : 
; 314  : 		if(gObj[this->m_BattleData.GateIndex[0]].Live == false && this->m_BattleData.PhazeStep == 0)

  01010	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01013	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  01016	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0101c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01022	0f b6 44 0a 6a	 movzx	 eax, BYTE PTR [edx+ecx+106]
  01027	85 c0		 test	 eax, eax
  01029	75 22		 jne	 SHORT $LN4@ProcState_@2
  0102b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0102e	83 78 50 00	 cmp	 DWORD PTR [eax+80], 0
  01032	75 19		 jne	 SHORT $LN4@ProcState_@2

; 315  : 		{
; 316  : 			this->SetMapAttr(0);

  01034	6a 00		 push	 0
  01036	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01039	e8 00 00 00 00	 call	 ?SetMapAttr@CImperialBattleOfDestler@@QAEXH@Z ; CImperialBattleOfDestler::SetMapAttr

; 317  : 			this->m_BattleData.PhazeStep++;

  0103e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01041	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  01044	83 c1 01	 add	 ecx, 1
  01047	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0104a	89 4a 50	 mov	 DWORD PTR [edx+80], ecx
$LN4@ProcState_@2:

; 318  : 		}
; 319  : 
; 320  : 		if(this->m_BattleData.MonsterCount <= 0 && this->m_BattleData.PhazeStep == 1)

  0104d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01050	83 78 44 00	 cmp	 DWORD PTR [eax+68], 0
  01054	7f 4e		 jg	 SHORT $LN3@ProcState_@2
  01056	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01059	83 78 50 01	 cmp	 DWORD PTR [eax+80], 1
  0105d	75 45		 jne	 SHORT $LN3@ProcState_@2

; 321  : 		{
; 322  : 			gObj[this->m_BattleData.GateIndex[1]].m_ImmuneToHarmCount = 0;

  0105f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01062	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  01065	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0106b	33 d2		 xor	 edx, edx
  0106d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01072	66 89 94 08 84
	22 00 00	 mov	 WORD PTR [eax+ecx+8836], dx

; 323  : 			gObj[this->m_BattleData.GateIndex[1]].m_ImmuneToMagicCount = 0;

  0107a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0107d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  01080	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  01086	33 d2		 xor	 edx, edx
  01088	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0108d	66 89 94 08 82
	22 00 00	 mov	 WORD PTR [eax+ecx+8834], dx

; 324  : 			this->m_BattleData.PhazeStep++;

  01095	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01098	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  0109b	83 c1 01	 add	 ecx, 1
  0109e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  010a1	89 4a 50	 mov	 DWORD PTR [edx+80], ecx
$LN3@ProcState_@2:

; 325  : 		}
; 326  : 		if(gObj[this->m_BattleData.GateIndex[1]].Live == false && this->m_BattleData.PhazeStep == 2)

  010a4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  010a7	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  010aa	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  010b0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  010b6	0f b6 44 0a 6a	 movzx	 eax, BYTE PTR [edx+ecx+106]
  010bb	85 c0		 test	 eax, eax
  010bd	75 58		 jne	 SHORT $LN2@ProcState_@2
  010bf	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  010c2	83 78 50 02	 cmp	 DWORD PTR [eax+80], 2
  010c6	75 4f		 jne	 SHORT $LN2@ProcState_@2

; 327  : 		{
; 328  : 			gObj[this->m_BattleData.GateIndex[2]].m_ImmuneToHarmCount = 0;

  010c8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  010cb	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  010ce	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  010d4	33 d2		 xor	 edx, edx
  010d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  010db	66 89 94 08 84
	22 00 00	 mov	 WORD PTR [eax+ecx+8836], dx

; 329  : 			gObj[this->m_BattleData.GateIndex[2]].m_ImmuneToMagicCount = 0;

  010e3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  010e6	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  010e9	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  010ef	33 d2		 xor	 edx, edx
  010f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  010f6	66 89 94 08 82
	22 00 00	 mov	 WORD PTR [eax+ecx+8834], dx

; 330  : 			this->SetMapAttr(1);

  010fe	6a 01		 push	 1
  01100	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01103	e8 00 00 00 00	 call	 ?SetMapAttr@CImperialBattleOfDestler@@QAEXH@Z ; CImperialBattleOfDestler::SetMapAttr

; 331  : 			this->m_BattleData.PhazeStep++;

  01108	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0110b	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  0110e	83 c1 01	 add	 ecx, 1
  01111	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  01114	89 4a 50	 mov	 DWORD PTR [edx+80], ecx
$LN2@ProcState_@2:

; 332  : 		}
; 333  : 		if(gObj[this->m_BattleData.GateIndex[2]].Live == false && this->m_BattleData.PhazeStep == 3)

  01117	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0111a	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0111d	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  01123	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01129	0f b6 44 0a 6a	 movzx	 eax, BYTE PTR [edx+ecx+106]
  0112e	85 c0		 test	 eax, eax
  01130	75 29		 jne	 SHORT $LN14@ProcState_@2
  01132	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01135	83 78 50 03	 cmp	 DWORD PTR [eax+80], 3
  01139	75 20		 jne	 SHORT $LN14@ProcState_@2

; 334  : 		{
; 335  : 			this->SetMapAttr(2);

  0113b	6a 02		 push	 2
  0113d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01140	e8 00 00 00 00	 call	 ?SetMapAttr@CImperialBattleOfDestler@@QAEXH@Z ; CImperialBattleOfDestler::SetMapAttr

; 336  : 			this->PortalSetState = false;

  01145	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01148	c6 40 58 00	 mov	 BYTE PTR [eax+88], 0

; 337  : 			this->m_BattleData.PhazeStep++;

  0114c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0114f	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  01152	83 c1 01	 add	 ecx, 1
  01155	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  01158	89 4a 50	 mov	 DWORD PTR [edx+80], ecx
$LN14@ProcState_@2:

; 338  : 		}
; 339  : 	}
; 340  : }

  0115b	5f		 pop	 edi
  0115c	5e		 pop	 esi
  0115d	5b		 pop	 ebx
  0115e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01161	33 cd		 xor	 ecx, ebp
  01163	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01168	8b e5		 mov	 esp, ebp
  0116a	5d		 pop	 ebp
  0116b	c3		 ret	 0
?ProcState_PHAZE1@CImperialBattleOfDestler@@QAEXXZ ENDP	; CImperialBattleOfDestler::ProcState_PHAZE1
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\imperialbattleuser.h
_TEXT	ENDS
;	COMDAT ?GetIndex@CImperialBattleUser@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetIndex@CImperialBattleUser@@QAEHXZ PROC		; CImperialBattleUser::GetIndex, COMDAT
; _this$ = ecx

; 22   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 23   : 		return this->m_iIndex;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 24   : 	}

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetIndex@CImperialBattleUser@@QAEHXZ ENDP		; CImperialBattleUser::GetIndex
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\imperialbattleofdestler.cpp
_TEXT	ENDS
_TEXT	SEGMENT
_Tick$ = -8						; size = 4
_this$ = -4						; size = 4
?ProcState_STANDBY2@CImperialBattleOfDestler@@QAEXXZ PROC ; CImperialBattleOfDestler::ProcState_STANDBY2
; _this$ = ecx

; 343  : {

  01170	55		 push	 ebp
  01171	8b ec		 mov	 ebp, esp
  01173	83 ec 48	 sub	 esp, 72			; 00000048H
  01176	53		 push	 ebx
  01177	56		 push	 esi
  01178	57		 push	 edi
  01179	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 344  : 	int Tick = GetTickCount() - this->m_BattleData.TickCount;

  0117c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  01182	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01185	2b 41 3c	 sub	 eax, DWORD PTR [ecx+60]
  01188	89 45 f8	 mov	 DWORD PTR _Tick$[ebp], eax

; 345  : 	if(Tick >= 1000)

  0118b	81 7d f8 e8 03
	00 00		 cmp	 DWORD PTR _Tick$[ebp], 1000 ; 000003e8H
  01192	7c 36		 jl	 SHORT $LN3@ProcState_@3

; 346  : 	{
; 347  : 		this->m_BattleData.Time -= Tick;

  01194	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01197	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  0119a	2b 4d f8	 sub	 ecx, DWORD PTR _Tick$[ebp]
  0119d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  011a0	89 4a 38	 mov	 DWORD PTR [edx+56], ecx

; 348  : 		this->m_BattleData.TickCount = GetTickCount();

  011a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  011a9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  011ac	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 349  : 
; 350  : 		this->SendEventInterface();

  011af	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  011b2	e8 00 00 00 00	 call	 ?SendEventInterface@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SendEventInterface

; 351  : 
; 352  : 		if(this->m_BattleData.Time <= 0)

  011b7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  011ba	83 78 38 00	 cmp	 DWORD PTR [eax+56], 0
  011be	7f 0a		 jg	 SHORT $LN3@ProcState_@3

; 353  : 		{
; 354  : 			this->SetState(BATTLEOFDESTLER_STATE_PHAZE2);

  011c0	6a 04		 push	 4
  011c2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  011c5	e8 00 00 00 00	 call	 ?SetState@CImperialBattleOfDestler@@QAEXH@Z ; CImperialBattleOfDestler::SetState
$LN3@ProcState_@3:

; 355  : 		}
; 356  : 	}
; 357  : }

  011ca	5f		 pop	 edi
  011cb	5e		 pop	 esi
  011cc	5b		 pop	 ebx
  011cd	8b e5		 mov	 esp, ebp
  011cf	5d		 pop	 ebp
  011d0	c3		 ret	 0
?ProcState_STANDBY2@CImperialBattleOfDestler@@QAEXXZ ENDP ; CImperialBattleOfDestler::ProcState_STANDBY2
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pNotice$221122 = -292					; size = 272
_n$221116 = -20						; size = 4
_i$221112 = -16						; size = 4
_Tick$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?ProcState_PHAZE2@CImperialBattleOfDestler@@QAEXXZ PROC	; CImperialBattleOfDestler::ProcState_PHAZE2
; _this$ = ecx

; 360  : {

  011e0	55		 push	 ebp
  011e1	8b ec		 mov	 ebp, esp
  011e3	81 ec 64 01 00
	00		 sub	 esp, 356		; 00000164H
  011e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  011ee	33 c5		 xor	 eax, ebp
  011f0	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  011f3	53		 push	 ebx
  011f4	56		 push	 esi
  011f5	57		 push	 edi
  011f6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 361  : 	int Tick = GetTickCount() - this->m_BattleData.TickCount;

  011f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  011ff	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01202	2b 41 3c	 sub	 eax, DWORD PTR [ecx+60]
  01205	89 45 f4	 mov	 DWORD PTR _Tick$[ebp], eax

; 362  : 	if(Tick >= 1000)

  01208	81 7d f4 e8 03
	00 00		 cmp	 DWORD PTR _Tick$[ebp], 1000 ; 000003e8H
  0120f	0f 8c 56 03 00
	00		 jl	 $LN14@ProcState_@4

; 363  : 	{
; 364  : 		this->m_BattleData.Time -= Tick;

  01215	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01218	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  0121b	2b 4d f4	 sub	 ecx, DWORD PTR _Tick$[ebp]
  0121e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  01221	89 4a 38	 mov	 DWORD PTR [edx+56], ecx

; 365  : 		this->m_BattleData.TickCount = GetTickCount();

  01224	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0122a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0122d	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 366  : 
; 367  : 		this->SendEventInterface();

  01230	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01233	e8 00 00 00 00	 call	 ?SendEventInterface@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SendEventInterface

; 368  : 		this->MonsterProc();

  01238	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0123b	e8 00 00 00 00	 call	 ?MonsterProc@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::MonsterProc

; 369  : 
; 370  : 		for(int i=0;i<12;++i)

  01240	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$221112[ebp], 0
  01247	eb 09		 jmp	 SHORT $LN12@ProcState_@4
$LN11@ProcState_@4:
  01249	8b 45 f0	 mov	 eax, DWORD PTR _i$221112[ebp]
  0124c	83 c0 01	 add	 eax, 1
  0124f	89 45 f0	 mov	 DWORD PTR _i$221112[ebp], eax
$LN12@ProcState_@4:
  01252	83 7d f0 0c	 cmp	 DWORD PTR _i$221112[ebp], 12 ; 0000000cH
  01256	0f 8d 56 01 00
	00		 jge	 $LN10@ProcState_@4

; 371  : 		{
; 372  : 			for(int n=0;n<g_ImperialBattleUserMng.GetUserCount();++n)

  0125c	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _n$221116[ebp], 0
  01263	eb 09		 jmp	 SHORT $LN9@ProcState_@4
$LN8@ProcState_@4:
  01265	8b 45 ec	 mov	 eax, DWORD PTR _n$221116[ebp]
  01268	83 c0 01	 add	 eax, 1
  0126b	89 45 ec	 mov	 DWORD PTR _n$221116[ebp], eax
$LN9@ProcState_@4:
  0126e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A ; g_ImperialBattleUserMng
  01273	e8 00 00 00 00	 call	 ?GetUserCount@CImperialBattleUserMng@@QAEHXZ ; CImperialBattleUserMng::GetUserCount
  01278	39 45 ec	 cmp	 DWORD PTR _n$221116[ebp], eax
  0127b	0f 8d 2c 01 00
	00		 jge	 $LN7@ProcState_@4

; 373  : 			{
; 374  : 
; 375  : 				if(gObj[g_ImperialBattleUserMng.m_BattleUser[n].GetIndex()].X >= g_DestlerTrap[i].X-5 && gObj[g_ImperialBattleUserMng.m_BattleUser[n].GetIndex()].X <= g_DestlerTrap[i].X+5
; 376  : 					&& gObj[g_ImperialBattleUserMng.m_BattleUser[n].GetIndex()].Y >= g_DestlerTrap[i].Y-5 && gObj[g_ImperialBattleUserMng.m_BattleUser[n].GetIndex()].Y <= g_DestlerTrap[i].Y+5)

  01281	8b 4d ec	 mov	 ecx, DWORD PTR _n$221116[ebp]
  01284	6b c9 0c	 imul	 ecx, 12			; 0000000cH
  01287	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A+4
  0128d	e8 00 00 00 00	 call	 ?GetIndex@CImperialBattleUser@@QAEHXZ ; CImperialBattleUser::GetIndex
  01292	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01298	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0129e	0f bf 94 01 44
	01 00 00	 movsx	 edx, WORD PTR [ecx+eax+324]
  012a6	8b 45 f0	 mov	 eax, DWORD PTR _i$221112[ebp]
  012a9	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR _g_DestlerTrap[eax*8]
  012b0	83 e9 05	 sub	 ecx, 5
  012b3	3b d1		 cmp	 edx, ecx
  012b5	0f 8c ed 00 00
	00		 jl	 $LN6@ProcState_@4
  012bb	8b 4d ec	 mov	 ecx, DWORD PTR _n$221116[ebp]
  012be	6b c9 0c	 imul	 ecx, 12			; 0000000cH
  012c1	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A+4
  012c7	e8 00 00 00 00	 call	 ?GetIndex@CImperialBattleUser@@QAEHXZ ; CImperialBattleUser::GetIndex
  012cc	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  012d2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  012d8	0f bf 94 01 44
	01 00 00	 movsx	 edx, WORD PTR [ecx+eax+324]
  012e0	8b 45 f0	 mov	 eax, DWORD PTR _i$221112[ebp]
  012e3	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR _g_DestlerTrap[eax*8]
  012ea	83 c1 05	 add	 ecx, 5
  012ed	3b d1		 cmp	 edx, ecx
  012ef	0f 8f b3 00 00
	00		 jg	 $LN6@ProcState_@4
  012f5	8b 4d ec	 mov	 ecx, DWORD PTR _n$221116[ebp]
  012f8	6b c9 0c	 imul	 ecx, 12			; 0000000cH
  012fb	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A+4
  01301	e8 00 00 00 00	 call	 ?GetIndex@CImperialBattleUser@@QAEHXZ ; CImperialBattleUser::GetIndex
  01306	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0130c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01312	0f bf 94 01 46
	01 00 00	 movsx	 edx, WORD PTR [ecx+eax+326]
  0131a	8b 45 f0	 mov	 eax, DWORD PTR _i$221112[ebp]
  0131d	8b 0c c5 04 00
	00 00		 mov	 ecx, DWORD PTR _g_DestlerTrap[eax*8+4]
  01324	83 e9 05	 sub	 ecx, 5
  01327	3b d1		 cmp	 edx, ecx
  01329	7c 7d		 jl	 SHORT $LN6@ProcState_@4
  0132b	8b 4d ec	 mov	 ecx, DWORD PTR _n$221116[ebp]
  0132e	6b c9 0c	 imul	 ecx, 12			; 0000000cH
  01331	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A+4
  01337	e8 00 00 00 00	 call	 ?GetIndex@CImperialBattleUser@@QAEHXZ ; CImperialBattleUser::GetIndex
  0133c	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01342	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01348	0f bf 94 01 46
	01 00 00	 movsx	 edx, WORD PTR [ecx+eax+326]
  01350	8b 45 f0	 mov	 eax, DWORD PTR _i$221112[ebp]
  01353	8b 0c c5 04 00
	00 00		 mov	 ecx, DWORD PTR _g_DestlerTrap[eax*8+4]
  0135a	83 c1 05	 add	 ecx, 5
  0135d	3b d1		 cmp	 edx, ecx
  0135f	7f 47		 jg	 SHORT $LN6@ProcState_@4

; 377  : 				{
; 378  : 					gObjAttack(&gObj[this->m_BattleData.TrapIndex], &gObj[g_ImperialBattleUserMng.m_BattleUser[n].GetIndex()], NULL, 0, 0, 0, 0,0,0);

  01361	6a 00		 push	 0
  01363	6a 00		 push	 0
  01365	6a 00		 push	 0
  01367	6a 00		 push	 0
  01369	6a 00		 push	 0
  0136b	6a 00		 push	 0
  0136d	6a 00		 push	 0
  0136f	8b 4d ec	 mov	 ecx, DWORD PTR _n$221116[ebp]
  01372	6b c9 0c	 imul	 ecx, 12			; 0000000cH
  01375	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A+4
  0137b	e8 00 00 00 00	 call	 ?GetIndex@CImperialBattleUser@@QAEHXZ ; CImperialBattleUser::GetIndex
  01380	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01386	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0138c	50		 push	 eax
  0138d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01390	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  01393	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  01399	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0139f	51		 push	 ecx
  013a0	e8 00 00 00 00	 call	 ?gObjAttack@@YAHPAUOBJECTSTRUCT@@0PAVCMagicInf@@HEHHEE@Z ; gObjAttack
  013a5	83 c4 24	 add	 esp, 36			; 00000024H
$LN6@ProcState_@4:

; 379  : 				}
; 380  : 			}

  013a8	e9 b8 fe ff ff	 jmp	 $LN8@ProcState_@4
$LN7@ProcState_@4:

; 381  : 		}

  013ad	e9 97 fe ff ff	 jmp	 $LN11@ProcState_@4
$LN10@ProcState_@4:

; 382  : 
; 383  : 		if(this->m_BattleData.Time > 0 && (this->m_BattleData.Time/60000) !=this->m_BattleData.NotifyCount)

  013b2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  013b5	83 78 38 00	 cmp	 DWORD PTR [eax+56], 0
  013b9	7e 65		 jle	 SHORT $LN5@ProcState_@4
  013bb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  013be	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  013c1	99		 cdq
  013c2	b9 60 ea 00 00	 mov	 ecx, 60000		; 0000ea60H
  013c7	f7 f9		 idiv	 ecx
  013c9	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  013cc	0f b6 4a 54	 movzx	 ecx, BYTE PTR [edx+84]
  013d0	3b c1		 cmp	 eax, ecx
  013d2	74 4c		 je	 SHORT $LN5@ProcState_@4

; 384  : 		{
; 385  : 			this->m_BattleData.NotifyCount = this->m_BattleData.Time / 60000;

  013d4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  013d7	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  013da	99		 cdq
  013db	b9 60 ea 00 00	 mov	 ecx, 60000		; 0000ea60H
  013e0	f7 f9		 idiv	 ecx
  013e2	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  013e5	88 42 54	 mov	 BYTE PTR [edx+84], al

; 386  : 			PMSG_NOTICE pNotice;
; 387  : 			TNotice::MakeNoticeMsgEx(&pNotice, 0, "Portal will be closed after %d minutes", this->m_BattleData.NotifyCount+1);

  013e8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  013eb	0f b6 48 54	 movzx	 ecx, BYTE PTR [eax+84]
  013ef	83 c1 01	 add	 ecx, 1
  013f2	51		 push	 ecx
  013f3	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@LFMFLPDA@Portal?5will?5be?5closed?5after?5?$CFd?5m@
  013f8	6a 00		 push	 0
  013fa	8d 95 dc fe ff
	ff		 lea	 edx, DWORD PTR _pNotice$221122[ebp]
  01400	52		 push	 edx
  01401	e8 00 00 00 00	 call	 ?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ ; TNotice::MakeNoticeMsgEx
  01406	83 c4 10	 add	 esp, 16			; 00000010H

; 388  : 			this->SendImperialPlayers((LPBYTE)&pNotice, pNotice.h.size);

  01409	0f b6 85 dd fe
	ff ff		 movzx	 eax, BYTE PTR _pNotice$221122[ebp+1]
  01410	50		 push	 eax
  01411	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$221122[ebp]
  01417	51		 push	 ecx
  01418	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0141b	e8 00 00 00 00	 call	 ?SendImperialPlayers@CImperialBattleOfDestler@@QAEXPAEH@Z ; CImperialBattleOfDestler::SendImperialPlayers
$LN5@ProcState_@4:

; 389  : 		}
; 390  : 
; 391  : 		if(gObj[this->m_BattleData.GateIndex[3]].Live == false && this->m_BattleData.PhazeStep == 0)

  01420	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01423	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  01426	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0142c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01432	0f b6 44 0a 6a	 movzx	 eax, BYTE PTR [edx+ecx+106]
  01437	85 c0		 test	 eax, eax
  01439	75 22		 jne	 SHORT $LN4@ProcState_@4
  0143b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0143e	83 78 50 00	 cmp	 DWORD PTR [eax+80], 0
  01442	75 19		 jne	 SHORT $LN4@ProcState_@4

; 392  : 		{
; 393  : 			this->SetMapAttr(3);

  01444	6a 03		 push	 3
  01446	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01449	e8 00 00 00 00	 call	 ?SetMapAttr@CImperialBattleOfDestler@@QAEXH@Z ; CImperialBattleOfDestler::SetMapAttr

; 394  : 			this->m_BattleData.PhazeStep++;

  0144e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01451	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  01454	83 c1 01	 add	 ecx, 1
  01457	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0145a	89 4a 50	 mov	 DWORD PTR [edx+80], ecx
$LN4@ProcState_@4:

; 395  : 		}
; 396  : 
; 397  : 		if(this->m_BattleData.MonsterCount <= 0 && this->m_BattleData.PhazeStep == 1)

  0145d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01460	83 78 44 00	 cmp	 DWORD PTR [eax+68], 0
  01464	7f 4e		 jg	 SHORT $LN3@ProcState_@4
  01466	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01469	83 78 50 01	 cmp	 DWORD PTR [eax+80], 1
  0146d	75 45		 jne	 SHORT $LN3@ProcState_@4

; 398  : 		{
; 399  : 			gObj[this->m_BattleData.GateIndex[4]].m_ImmuneToHarmCount = 0;

  0146f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01472	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  01475	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0147b	33 d2		 xor	 edx, edx
  0147d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01482	66 89 94 08 84
	22 00 00	 mov	 WORD PTR [eax+ecx+8836], dx

; 400  : 			gObj[this->m_BattleData.GateIndex[4]].m_ImmuneToMagicCount = 0;

  0148a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0148d	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  01490	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  01496	33 d2		 xor	 edx, edx
  01498	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0149d	66 89 94 08 82
	22 00 00	 mov	 WORD PTR [eax+ecx+8834], dx

; 401  : 			this->m_BattleData.PhazeStep++;

  014a5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  014a8	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  014ab	83 c1 01	 add	 ecx, 1
  014ae	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  014b1	89 4a 50	 mov	 DWORD PTR [edx+80], ecx
$LN3@ProcState_@4:

; 402  : 		}
; 403  : 		if(gObj[this->m_BattleData.GateIndex[4]].Live == false && this->m_BattleData.PhazeStep == 2)

  014b4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  014b7	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  014ba	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  014c0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  014c6	0f b6 44 0a 6a	 movzx	 eax, BYTE PTR [edx+ecx+106]
  014cb	85 c0		 test	 eax, eax
  014cd	75 58		 jne	 SHORT $LN2@ProcState_@4
  014cf	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  014d2	83 78 50 02	 cmp	 DWORD PTR [eax+80], 2
  014d6	75 4f		 jne	 SHORT $LN2@ProcState_@4

; 404  : 		{
; 405  : 			gObj[this->m_BattleData.GateIndex[5]].m_ImmuneToHarmCount = 0;

  014d8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  014db	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  014de	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  014e4	33 d2		 xor	 edx, edx
  014e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  014eb	66 89 94 08 84
	22 00 00	 mov	 WORD PTR [eax+ecx+8836], dx

; 406  : 			gObj[this->m_BattleData.GateIndex[5]].m_ImmuneToMagicCount = 0;

  014f3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  014f6	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  014f9	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  014ff	33 d2		 xor	 edx, edx
  01501	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01506	66 89 94 08 82
	22 00 00	 mov	 WORD PTR [eax+ecx+8834], dx

; 407  : 			this->SetMapAttr(4);

  0150e	6a 04		 push	 4
  01510	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01513	e8 00 00 00 00	 call	 ?SetMapAttr@CImperialBattleOfDestler@@QAEXH@Z ; CImperialBattleOfDestler::SetMapAttr

; 408  : 			this->m_BattleData.PhazeStep++;

  01518	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0151b	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  0151e	83 c1 01	 add	 ecx, 1
  01521	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  01524	89 4a 50	 mov	 DWORD PTR [edx+80], ecx
$LN2@ProcState_@4:

; 409  : 		}
; 410  : 		if(gObj[this->m_BattleData.GateIndex[5]].Live == false && this->m_BattleData.PhazeStep == 3)

  01527	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0152a	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0152d	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  01533	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01539	0f b6 44 0a 6a	 movzx	 eax, BYTE PTR [edx+ecx+106]
  0153e	85 c0		 test	 eax, eax
  01540	75 29		 jne	 SHORT $LN14@ProcState_@4
  01542	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01545	83 78 50 03	 cmp	 DWORD PTR [eax+80], 3
  01549	75 20		 jne	 SHORT $LN14@ProcState_@4

; 411  : 		{
; 412  : 			this->SetMapAttr(5);

  0154b	6a 05		 push	 5
  0154d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01550	e8 00 00 00 00	 call	 ?SetMapAttr@CImperialBattleOfDestler@@QAEXH@Z ; CImperialBattleOfDestler::SetMapAttr

; 413  : 			this->PortalSetState = false;

  01555	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01558	c6 40 58 00	 mov	 BYTE PTR [eax+88], 0

; 414  : 			this->m_BattleData.PhazeStep++;

  0155c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0155f	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  01562	83 c1 01	 add	 ecx, 1
  01565	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  01568	89 4a 50	 mov	 DWORD PTR [edx+80], ecx
$LN14@ProcState_@4:

; 415  : 		}
; 416  : 	}
; 417  : }

  0156b	5f		 pop	 edi
  0156c	5e		 pop	 esi
  0156d	5b		 pop	 ebx
  0156e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01571	33 cd		 xor	 ecx, ebp
  01573	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01578	8b e5		 mov	 esp, ebp
  0157a	5d		 pop	 ebp
  0157b	c3		 ret	 0
?ProcState_PHAZE2@CImperialBattleOfDestler@@QAEXXZ ENDP	; CImperialBattleOfDestler::ProcState_PHAZE2
; Function compile flags: /Odtp /ZI
_Tick$ = -8						; size = 4
_this$ = -4						; size = 4
?ProcState_STANDBY3@CImperialBattleOfDestler@@QAEXXZ PROC ; CImperialBattleOfDestler::ProcState_STANDBY3
; _this$ = ecx

; 420  : {

  01580	55		 push	 ebp
  01581	8b ec		 mov	 ebp, esp
  01583	83 ec 48	 sub	 esp, 72			; 00000048H
  01586	53		 push	 ebx
  01587	56		 push	 esi
  01588	57		 push	 edi
  01589	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 421  : 	int Tick = GetTickCount() - this->m_BattleData.TickCount;

  0158c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  01592	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01595	2b 41 3c	 sub	 eax, DWORD PTR [ecx+60]
  01598	89 45 f8	 mov	 DWORD PTR _Tick$[ebp], eax

; 422  : 	if(Tick >= 1000)

  0159b	81 7d f8 e8 03
	00 00		 cmp	 DWORD PTR _Tick$[ebp], 1000 ; 000003e8H
  015a2	7c 36		 jl	 SHORT $LN3@ProcState_@5

; 423  : 	{
; 424  : 		this->m_BattleData.Time -= Tick;

  015a4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  015a7	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  015aa	2b 4d f8	 sub	 ecx, DWORD PTR _Tick$[ebp]
  015ad	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  015b0	89 4a 38	 mov	 DWORD PTR [edx+56], ecx

; 425  : 		this->m_BattleData.TickCount = GetTickCount();

  015b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  015b9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  015bc	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 426  : 
; 427  : 		this->SendEventInterface();

  015bf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  015c2	e8 00 00 00 00	 call	 ?SendEventInterface@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SendEventInterface

; 428  : 
; 429  : 		if(this->m_BattleData.Time <= 0)

  015c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  015ca	83 78 38 00	 cmp	 DWORD PTR [eax+56], 0
  015ce	7f 0a		 jg	 SHORT $LN3@ProcState_@5

; 430  : 		{
; 431  : 			this->SetState(BATTLEOFDESTLER_STATE_PHAZE3);

  015d0	6a 06		 push	 6
  015d2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  015d5	e8 00 00 00 00	 call	 ?SetState@CImperialBattleOfDestler@@QAEXH@Z ; CImperialBattleOfDestler::SetState
$LN3@ProcState_@5:

; 432  : 		}
; 433  : 	}
; 434  : }

  015da	5f		 pop	 edi
  015db	5e		 pop	 esi
  015dc	5b		 pop	 ebx
  015dd	8b e5		 mov	 esp, ebp
  015df	5d		 pop	 ebp
  015e0	c3		 ret	 0
?ProcState_STANDBY3@CImperialBattleOfDestler@@QAEXXZ ENDP ; CImperialBattleOfDestler::ProcState_STANDBY3
_TEXT	ENDS
PUBLIC	?SetSuccessValue@CImperialBattleOfDestler@@QAEX_N@Z ; CImperialBattleOfDestler::SetSuccessValue
PUBLIC	??_C@_0BJ@NGPECLFD@?$CFd?5minutes?5to?5escape?5?$CFs?$CB?$AA@ ; `string'
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_0BJ@NGPECLFD@?$CFd?5minutes?5to?5escape?5?$CFs?$CB?$AA@
CONST	SEGMENT
??_C@_0BJ@NGPECLFD@?$CFd?5minutes?5to?5escape?5?$CFs?$CB?$AA@ DB '%d minu'
	DB	'tes to escape %s!', 00H			; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_pNotice$221140 = -284					; size = 272
_Tick$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?ProcState_PHAZE3@CImperialBattleOfDestler@@QAEXXZ PROC	; CImperialBattleOfDestler::ProcState_PHAZE3
; _this$ = ecx

; 437  : {

  015f0	55		 push	 ebp
  015f1	8b ec		 mov	 ebp, esp
  015f3	81 ec 5c 01 00
	00		 sub	 esp, 348		; 0000015cH
  015f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  015fe	33 c5		 xor	 eax, ebp
  01600	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  01603	53		 push	 ebx
  01604	56		 push	 esi
  01605	57		 push	 edi
  01606	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 438  : 	int Tick = GetTickCount() - this->m_BattleData.TickCount;

  01609	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0160f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01612	2b 41 3c	 sub	 eax, DWORD PTR [ecx+60]
  01615	89 45 f4	 mov	 DWORD PTR _Tick$[ebp], eax

; 439  : 	if(Tick >= 1000)

  01618	81 7d f4 e8 03
	00 00		 cmp	 DWORD PTR _Tick$[ebp], 1000 ; 000003e8H
  0161f	0f 8c 1c 01 00
	00		 jl	 $LN5@ProcState_@6

; 440  : 	{
; 441  : 		this->m_BattleData.Time -= Tick;

  01625	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01628	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  0162b	2b 4d f4	 sub	 ecx, DWORD PTR _Tick$[ebp]
  0162e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  01631	89 4a 38	 mov	 DWORD PTR [edx+56], ecx

; 442  : 		this->m_BattleData.TickCount = GetTickCount();

  01634	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0163a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0163d	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 443  : 
; 444  : 		this->SendEventInterface();

  01640	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01643	e8 00 00 00 00	 call	 ?SendEventInterface@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SendEventInterface

; 445  : 		this->MonsterProc();

  01648	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0164b	e8 00 00 00 00	 call	 ?MonsterProc@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::MonsterProc

; 446  : 
; 447  : 		if(this->m_BattleData.Time > 0 && (this->m_BattleData.Time/60000) !=this->m_BattleData.NotifyCount)

  01650	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01653	83 78 38 00	 cmp	 DWORD PTR [eax+56], 0
  01657	7e 7c		 jle	 SHORT $LN3@ProcState_@6
  01659	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0165c	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  0165f	99		 cdq
  01660	b9 60 ea 00 00	 mov	 ecx, 60000		; 0000ea60H
  01665	f7 f9		 idiv	 ecx
  01667	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0166a	0f b6 4a 54	 movzx	 ecx, BYTE PTR [edx+84]
  0166e	3b c1		 cmp	 eax, ecx
  01670	74 63		 je	 SHORT $LN3@ProcState_@6

; 448  : 		{
; 449  : 			this->m_BattleData.NotifyCount = this->m_BattleData.Time / 60000;

  01672	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01675	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  01678	99		 cdq
  01679	b9 60 ea 00 00	 mov	 ecx, 60000		; 0000ea60H
  0167e	f7 f9		 idiv	 ecx
  01680	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  01683	88 42 54	 mov	 BYTE PTR [edx+84], al

; 450  : 			PMSG_NOTICE pNotice;
; 451  : 			TNotice::MakeNoticeMsgEx(&pNotice, 0, "%d minutes to escape %s!", this->m_BattleData.NotifyCount+1, gObj[this->m_BattleData.CurrentLeaderIndex].Name);

  01686	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01689	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0168c	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  01692	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01698	8d 44 0a 77	 lea	 eax, DWORD PTR [edx+ecx+119]
  0169c	50		 push	 eax
  0169d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  016a0	0f b6 51 54	 movzx	 edx, BYTE PTR [ecx+84]
  016a4	83 c2 01	 add	 edx, 1
  016a7	52		 push	 edx
  016a8	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@NGPECLFD@?$CFd?5minutes?5to?5escape?5?$CFs?$CB?$AA@
  016ad	6a 00		 push	 0
  016af	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$221140[ebp]
  016b5	50		 push	 eax
  016b6	e8 00 00 00 00	 call	 ?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ ; TNotice::MakeNoticeMsgEx
  016bb	83 c4 14	 add	 esp, 20			; 00000014H

; 452  : 			this->SendImperialPlayers((LPBYTE)&pNotice, pNotice.h.size);

  016be	0f b6 85 e5 fe
	ff ff		 movzx	 eax, BYTE PTR _pNotice$221140[ebp+1]
  016c5	50		 push	 eax
  016c6	8d 8d e4 fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$221140[ebp]
  016cc	51		 push	 ecx
  016cd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  016d0	e8 00 00 00 00	 call	 ?SendImperialPlayers@CImperialBattleOfDestler@@QAEXPAEH@Z ; CImperialBattleOfDestler::SendImperialPlayers
$LN3@ProcState_@6:

; 453  : 		}
; 454  : 
; 455  : 		if(gObj[this->m_BattleData.GateIndex[6]].Live == false && this->m_BattleData.PhazeStep == 0)

  016d5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  016d8	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  016db	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  016e1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  016e7	0f b6 44 0a 6a	 movzx	 eax, BYTE PTR [edx+ecx+106]
  016ec	85 c0		 test	 eax, eax
  016ee	75 22		 jne	 SHORT $LN2@ProcState_@6
  016f0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  016f3	83 78 50 00	 cmp	 DWORD PTR [eax+80], 0
  016f7	75 19		 jne	 SHORT $LN2@ProcState_@6

; 456  : 		{
; 457  : 			this->SetMapAttr(6);

  016f9	6a 06		 push	 6
  016fb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  016fe	e8 00 00 00 00	 call	 ?SetMapAttr@CImperialBattleOfDestler@@QAEXH@Z ; CImperialBattleOfDestler::SetMapAttr

; 458  : 			this->m_BattleData.PhazeStep++;

  01703	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01706	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  01709	83 c1 01	 add	 ecx, 1
  0170c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0170f	89 4a 50	 mov	 DWORD PTR [edx+80], ecx
$LN2@ProcState_@6:

; 459  : 		}
; 460  : 
; 461  : 		if(gObj[this->m_BattleData.CurrentLeaderIndex].Live == false)

  01712	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01715	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  01718	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0171e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01724	0f b6 44 0a 6a	 movzx	 eax, BYTE PTR [edx+ecx+106]
  01729	85 c0		 test	 eax, eax
  0172b	75 14		 jne	 SHORT $LN5@ProcState_@6

; 462  : 		{
; 463  : 			this->SetSuccessValue(true);

  0172d	6a 01		 push	 1
  0172f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01732	e8 00 00 00 00	 call	 ?SetSuccessValue@CImperialBattleOfDestler@@QAEX_N@Z ; CImperialBattleOfDestler::SetSuccessValue

; 464  : 			this->SetState(BATTLEOFDESTLER_STATE_END);

  01737	6a 07		 push	 7
  01739	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0173c	e8 00 00 00 00	 call	 ?SetState@CImperialBattleOfDestler@@QAEXH@Z ; CImperialBattleOfDestler::SetState
$LN5@ProcState_@6:

; 465  : 		}
; 466  : 	}
; 467  : }

  01741	5f		 pop	 edi
  01742	5e		 pop	 esi
  01743	5b		 pop	 ebx
  01744	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01747	33 cd		 xor	 ecx, ebp
  01749	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0174e	8b e5		 mov	 esp, ebp
  01750	5d		 pop	 ebp
  01751	c3		 ret	 0
?ProcState_PHAZE3@CImperialBattleOfDestler@@QAEXXZ ENDP	; CImperialBattleOfDestler::ProcState_PHAZE3
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\imperialbattleofdestler.h
_TEXT	ENDS
;	COMDAT ?SetSuccessValue@CImperialBattleOfDestler@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_SuccessValue$ = 8					; size = 1
?SetSuccessValue@CImperialBattleOfDestler@@QAEX_N@Z PROC ; CImperialBattleOfDestler::SetSuccessValue, COMDAT
; _this$ = ecx

; 81   : 	void SetSuccessValue(bool SuccessValue) { this->SuccessValue = SuccessValue; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 4d 08	 mov	 cl, BYTE PTR _SuccessValue$[ebp]
  00012	88 48 59	 mov	 BYTE PTR [eax+89], cl
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetSuccessValue@CImperialBattleOfDestler@@QAEX_N@Z ENDP ; CImperialBattleOfDestler::SetSuccessValue
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\imperialbattleofdestler.cpp
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ProcState_END@CImperialBattleOfDestler@@QAEXXZ PROC	; CImperialBattleOfDestler::ProcState_END
; _this$ = ecx

; 470  : {

  01760	55		 push	 ebp
  01761	8b ec		 mov	 ebp, esp
  01763	83 ec 44	 sub	 esp, 68			; 00000044H
  01766	53		 push	 ebx
  01767	56		 push	 esi
  01768	57		 push	 edi
  01769	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 471  : 	return;
; 472  : }

  0176c	5f		 pop	 edi
  0176d	5e		 pop	 esi
  0176e	5b		 pop	 ebx
  0176f	8b e5		 mov	 esp, ebp
  01771	5d		 pop	 ebp
  01772	c3		 ret	 0
?ProcState_END@CImperialBattleOfDestler@@QAEXXZ ENDP	; CImperialBattleOfDestler::ProcState_END
_TEXT	ENDS
PUBLIC	?GetEventTime@CImperialBattleOfDestler@@QAEHXZ	; CImperialBattleOfDestler::GetEventTime
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetEventTime@CImperialBattleOfDestler@@QAEHXZ PROC	; CImperialBattleOfDestler::GetEventTime
; _this$ = ecx

; 475  : {

  01780	55		 push	 ebp
  01781	8b ec		 mov	 ebp, esp
  01783	83 ec 44	 sub	 esp, 68			; 00000044H
  01786	53		 push	 ebx
  01787	56		 push	 esi
  01788	57		 push	 edi
  01789	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 476  : 	return this->m_BattleData.Time / 1000;

  0178c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0178f	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  01792	99		 cdq
  01793	b9 e8 03 00 00	 mov	 ecx, 1000		; 000003e8H
  01798	f7 f9		 idiv	 ecx

; 477  : }

  0179a	5f		 pop	 edi
  0179b	5e		 pop	 esi
  0179c	5b		 pop	 ebx
  0179d	8b e5		 mov	 esp, ebp
  0179f	5d		 pop	 ebp
  017a0	c3		 ret	 0
?GetEventTime@CImperialBattleOfDestler@@QAEHXZ ENDP	; CImperialBattleOfDestler::GetEventTime
_TEXT	ENDS
PUBLIC	?GetEventState@CImperialBattleOfDestler@@QAEHXZ	; CImperialBattleOfDestler::GetEventState
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_CurrState$ = -8					; size = 4
_this$ = -4						; size = 4
?GetEventState@CImperialBattleOfDestler@@QAEHXZ PROC	; CImperialBattleOfDestler::GetEventState
; _this$ = ecx

; 480  : {

  017b0	55		 push	 ebp
  017b1	8b ec		 mov	 ebp, esp
  017b3	83 ec 48	 sub	 esp, 72			; 00000048H
  017b6	53		 push	 ebx
  017b7	56		 push	 esi
  017b8	57		 push	 edi
  017b9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	int CurrState = this->m_BattleData.CurrentState;

  017bc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  017bf	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  017c2	89 4d f8	 mov	 DWORD PTR _CurrState$[ebp], ecx

; 482  : 	if(CurrState == 1 || CurrState == 3 || CurrState == 5)

  017c5	83 7d f8 01	 cmp	 DWORD PTR _CurrState$[ebp], 1
  017c9	74 0c		 je	 SHORT $LN6@GetEventSt
  017cb	83 7d f8 03	 cmp	 DWORD PTR _CurrState$[ebp], 3
  017cf	74 06		 je	 SHORT $LN6@GetEventSt
  017d1	83 7d f8 05	 cmp	 DWORD PTR _CurrState$[ebp], 5
  017d5	75 09		 jne	 SHORT $LN7@GetEventSt
$LN6@GetEventSt:

; 483  : 	{
; 484  : 		return 1;

  017d7	b8 01 00 00 00	 mov	 eax, 1
  017dc	eb 2c		 jmp	 SHORT $LN8@GetEventSt
  017de	eb 25		 jmp	 SHORT $LN5@GetEventSt
$LN7@GetEventSt:

; 485  : 	}
; 486  : 	else if(CurrState == 2 || CurrState == 4 || CurrState == 6)

  017e0	83 7d f8 02	 cmp	 DWORD PTR _CurrState$[ebp], 2
  017e4	74 0c		 je	 SHORT $LN3@GetEventSt
  017e6	83 7d f8 04	 cmp	 DWORD PTR _CurrState$[ebp], 4
  017ea	74 06		 je	 SHORT $LN3@GetEventSt
  017ec	83 7d f8 06	 cmp	 DWORD PTR _CurrState$[ebp], 6
  017f0	75 09		 jne	 SHORT $LN4@GetEventSt
$LN3@GetEventSt:

; 487  : 	{
; 488  : 		return 2;

  017f2	b8 02 00 00 00	 mov	 eax, 2
  017f7	eb 11		 jmp	 SHORT $LN8@GetEventSt
  017f9	eb 0a		 jmp	 SHORT $LN5@GetEventSt
$LN4@GetEventSt:

; 489  : 	}
; 490  : 	else if(CurrState == 7)

  017fb	83 7d f8 07	 cmp	 DWORD PTR _CurrState$[ebp], 7
  017ff	75 04		 jne	 SHORT $LN5@GetEventSt

; 491  : 	{
; 492  : 		return 0;

  01801	33 c0		 xor	 eax, eax
  01803	eb 05		 jmp	 SHORT $LN8@GetEventSt
$LN5@GetEventSt:

; 493  : 	}
; 494  : 	return 3;

  01805	b8 03 00 00 00	 mov	 eax, 3
$LN8@GetEventSt:

; 495  : }

  0180a	5f		 pop	 edi
  0180b	5e		 pop	 esi
  0180c	5b		 pop	 ebx
  0180d	8b e5		 mov	 esp, ebp
  0180f	5d		 pop	 ebp
  01810	c3		 ret	 0
?GetEventState@CImperialBattleOfDestler@@QAEHXZ ENDP	; CImperialBattleOfDestler::GetEventState
_TEXT	ENDS
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv83 = -80						; size = 4
_i$221168 = -12						; size = 4
_index$ = -8						; size = 4
_this$ = -4						; size = 4
_lpMsg$ = 8						; size = 4
_iSize$ = 12						; size = 4
?SendImperialPlayers@CImperialBattleOfDestler@@QAEXPAEH@Z PROC ; CImperialBattleOfDestler::SendImperialPlayers
; _this$ = ecx

; 498  : {

  01820	55		 push	 ebp
  01821	8b ec		 mov	 ebp, esp
  01823	83 ec 50	 sub	 esp, 80			; 00000050H
  01826	53		 push	 ebx
  01827	56		 push	 esi
  01828	57		 push	 edi
  01829	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 499  : 	int index;
; 500  : 	for(int i=0; i < g_ImperialBattleUserMng.GetUserCount();++i)

  0182c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$221168[ebp], 0
  01833	eb 09		 jmp	 SHORT $LN4@SendImperi
$LN3@SendImperi:
  01835	8b 45 f4	 mov	 eax, DWORD PTR _i$221168[ebp]
  01838	83 c0 01	 add	 eax, 1
  0183b	89 45 f4	 mov	 DWORD PTR _i$221168[ebp], eax
$LN4@SendImperi:
  0183e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A ; g_ImperialBattleUserMng
  01843	e8 00 00 00 00	 call	 ?GetUserCount@CImperialBattleUserMng@@QAEHXZ ; CImperialBattleUserMng::GetUserCount
  01848	39 45 f4	 cmp	 DWORD PTR _i$221168[ebp], eax
  0184b	7d 7a		 jge	 SHORT $LN5@SendImperi

; 501  : 	{
; 502  : 		index = g_ImperialBattleUserMng.m_BattleUser[i].GetIndex();

  0184d	8b 4d f4	 mov	 ecx, DWORD PTR _i$221168[ebp]
  01850	6b c9 0c	 imul	 ecx, 12			; 0000000cH
  01853	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A+4
  01859	e8 00 00 00 00	 call	 ?GetIndex@CImperialBattleUser@@QAEHXZ ; CImperialBattleUser::GetIndex
  0185e	89 45 f8	 mov	 DWORD PTR _index$[ebp], eax

; 503  : 
; 504  : 		if(IMPERIAL_MAP_RANGE(gObj[index].MapNumber))

  01861	8b 45 f8	 mov	 eax, DWORD PTR _index$[ebp]
  01864	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0186a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01870	0f b6 94 01 49
	01 00 00	 movzx	 edx, BYTE PTR [ecx+eax+329]
  01878	83 fa 45	 cmp	 edx, 69			; 00000045H
  0187b	7d 09		 jge	 SHORT $LN7@SendImperi
  0187d	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
  01884	eb 22		 jmp	 SHORT $LN8@SendImperi
$LN7@SendImperi:
  01886	8b 45 f8	 mov	 eax, DWORD PTR _index$[ebp]
  01889	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0188f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01895	0f b6 94 01 49
	01 00 00	 movzx	 edx, BYTE PTR [ecx+eax+329]
  0189d	33 c0		 xor	 eax, eax
  0189f	83 fa 48	 cmp	 edx, 72			; 00000048H
  018a2	0f 9e c0	 setle	 al
  018a5	89 45 b0	 mov	 DWORD PTR tv83[ebp], eax
$LN8@SendImperi:
  018a8	83 7d b0 00	 cmp	 DWORD PTR tv83[ebp], 0
  018ac	74 14		 je	 SHORT $LN1@SendImperi

; 505  : 		{
; 506  : 			DataSend(index, lpMsg, iSize);

  018ae	8b 45 0c	 mov	 eax, DWORD PTR _iSize$[ebp]
  018b1	50		 push	 eax
  018b2	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  018b5	51		 push	 ecx
  018b6	8b 55 f8	 mov	 edx, DWORD PTR _index$[ebp]
  018b9	52		 push	 edx
  018ba	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  018bf	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@SendImperi:

; 507  : 		}	
; 508  : 	}

  018c2	e9 6e ff ff ff	 jmp	 $LN3@SendImperi
$LN5@SendImperi:

; 509  : }

  018c7	5f		 pop	 edi
  018c8	5e		 pop	 esi
  018c9	5b		 pop	 ebx
  018ca	8b e5		 mov	 esp, ebp
  018cc	5d		 pop	 ebp
  018cd	c2 08 00	 ret	 8
?SendImperialPlayers@CImperialBattleOfDestler@@QAEXPAEH@Z ENDP ; CImperialBattleOfDestler::SendImperialPlayers
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?PHeadSubSetB@@YAXPAEEEH@Z:PROC			; PHeadSubSetB
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_Time$ = -28						; size = 4
_pMsg$ = -24						; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?SendEventInterface@CImperialBattleOfDestler@@QAEXXZ PROC ; CImperialBattleOfDestler::SendEventInterface
; _this$ = ecx

; 512  : {

  018d0	55		 push	 ebp
  018d1	8b ec		 mov	 ebp, esp
  018d3	83 ec 5c	 sub	 esp, 92			; 0000005cH
  018d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  018db	33 c5		 xor	 eax, ebp
  018dd	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  018e0	53		 push	 ebx
  018e1	56		 push	 esi
  018e2	57		 push	 edi
  018e3	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 513  : 	PMSG_FORT_TIMER pMsg;
; 514  : 
; 515  : 	PHeadSubSetB((LPBYTE)&pMsg,0xF7,0x04,sizeof(pMsg));

  018e6	6a 10		 push	 16			; 00000010H
  018e8	6a 04		 push	 4
  018ea	68 f7 00 00 00	 push	 247			; 000000f7H
  018ef	8d 45 e8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  018f2	50		 push	 eax
  018f3	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB
  018f8	83 c4 10	 add	 esp, 16			; 00000010H

; 516  : 
; 517  : 	int Time = this->GetEventTime() * 4;

  018fb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  018fe	e8 00 00 00 00	 call	 ?GetEventTime@CImperialBattleOfDestler@@QAEHXZ ; CImperialBattleOfDestler::GetEventTime
  01903	c1 e0 02	 shl	 eax, 2
  01906	89 45 e4	 mov	 DWORD PTR _Time$[ebp], eax

; 518  : 
; 519  : 	pMsg.Status = this->GetEventState();

  01909	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0190c	e8 00 00 00 00	 call	 ?GetEventState@CImperialBattleOfDestler@@QAEHXZ ; CImperialBattleOfDestler::GetEventState
  01911	88 45 ec	 mov	 BYTE PTR _pMsg$[ebp+4], al

; 520  : 	pMsg.Unk1 = 1;

  01914	c6 45 ed 01	 mov	 BYTE PTR _pMsg$[ebp+5], 1

; 521  : 	pMsg.Unk2 = 1;

  01918	c6 45 ee 01	 mov	 BYTE PTR _pMsg$[ebp+6], 1

; 522  : 	pMsg.Unk3 = 0;

  0191c	c6 45 ef 00	 mov	 BYTE PTR _pMsg$[ebp+7], 0

; 523  : 	pMsg.Unk5 = 0;

  01920	c6 45 f0 00	 mov	 BYTE PTR _pMsg$[ebp+8], 0

; 524  : 	pMsg.TimerH = HIBYTE(Time);

  01924	8b 45 e4	 mov	 eax, DWORD PTR _Time$[ebp]
  01927	c1 e8 08	 shr	 eax, 8
  0192a	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0192f	88 45 f2	 mov	 BYTE PTR _pMsg$[ebp+10], al

; 525  : 	pMsg.TimerL = LOBYTE(Time);

  01932	8b 45 e4	 mov	 eax, DWORD PTR _Time$[ebp]
  01935	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0193a	88 45 f1	 mov	 BYTE PTR _pMsg$[ebp+9], al

; 526  : 	pMsg.Unk4 = 0;

  0193d	c6 45 f3 00	 mov	 BYTE PTR _pMsg$[ebp+11], 0

; 527  : 	pMsg.Monster = this->m_BattleData.MonsterCount;

  01941	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01944	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  01947	89 4d f4	 mov	 DWORD PTR _pMsg$[ebp+12], ecx

; 528  : 
; 529  : 	this->SendImperialPlayers((LPBYTE)&pMsg, pMsg.h.size);

  0194a	0f b6 45 e9	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  0194e	50		 push	 eax
  0194f	8d 4d e8	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  01952	51		 push	 ecx
  01953	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01956	e8 00 00 00 00	 call	 ?SendImperialPlayers@CImperialBattleOfDestler@@QAEXPAEH@Z ; CImperialBattleOfDestler::SendImperialPlayers

; 530  : }

  0195b	5f		 pop	 edi
  0195c	5e		 pop	 esi
  0195d	5b		 pop	 ebx
  0195e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01961	33 cd		 xor	 ecx, ebp
  01963	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01968	8b e5		 mov	 esp, ebp
  0196a	5d		 pop	 ebp
  0196b	c3		 ret	 0
?SendEventInterface@CImperialBattleOfDestler@@QAEXXZ ENDP ; CImperialBattleOfDestler::SendEventInterface
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_lpMsgBody$ = -276					; size = 4
_lpMsg$ = -272						; size = 4
_PacketSize$ = -268					; size = 2
_Buff$ = -264						; size = 256
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_Gate$ = 8						; size = 4
?SetMapAttr@CImperialBattleOfDestler@@QAEXH@Z PROC	; CImperialBattleOfDestler::SetMapAttr
; _this$ = ecx

; 533  : {

  01970	55		 push	 ebp
  01971	8b ec		 mov	 ebp, esp
  01973	81 ec 54 01 00
	00		 sub	 esp, 340		; 00000154H
  01979	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0197e	33 c5		 xor	 eax, ebp
  01980	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  01983	53		 push	 ebx
  01984	56		 push	 esi
  01985	57		 push	 edi
  01986	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 534  : 	char Buff[256];
; 535  : 	short PacketSize = 0;

  01989	33 c0		 xor	 eax, eax
  0198b	66 89 85 f4 fe
	ff ff		 mov	 WORD PTR _PacketSize$[ebp], ax

; 536  : 	PMSG_SETMAPATTR_COUNT * lpMsg = (PMSG_SETMAPATTR_COUNT *)(Buff);

  01992	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _Buff$[ebp]
  01998	89 85 f0 fe ff
	ff		 mov	 DWORD PTR _lpMsg$[ebp], eax

; 537  : 	PMSG_SETMAPATTR * lpMsgBody = (PMSG_SETMAPATTR *)(Buff + sizeof(PMSG_SETMAPATTR_COUNT));

  0199e	8d 85 ff fe ff
	ff		 lea	 eax, DWORD PTR _Buff$[ebp+7]
  019a4	89 85 ec fe ff
	ff		 mov	 DWORD PTR _lpMsgBody$[ebp], eax

; 538  : 
; 539  : 	lpMsgBody[0].btX = g_DestlerMapAttr[Gate].StartX;

  019aa	8b 45 08	 mov	 eax, DWORD PTR _Gate$[ebp]
  019ad	c1 e0 04	 shl	 eax, 4
  019b0	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _lpMsgBody$[ebp]
  019b6	8a 90 00 00 00
	00		 mov	 dl, BYTE PTR _g_DestlerMapAttr[eax]
  019bc	88 11		 mov	 BYTE PTR [ecx], dl

; 540  : 	lpMsgBody[0].btY = g_DestlerMapAttr[Gate].StartY;

  019be	8b 45 08	 mov	 eax, DWORD PTR _Gate$[ebp]
  019c1	c1 e0 04	 shl	 eax, 4
  019c4	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _lpMsgBody$[ebp]
  019ca	8a 90 04 00 00
	00		 mov	 dl, BYTE PTR _g_DestlerMapAttr[eax+4]
  019d0	88 51 01	 mov	 BYTE PTR [ecx+1], dl

; 541  : 	lpMsgBody[1].btX = g_DestlerMapAttr[Gate].EndX;

  019d3	8b 45 08	 mov	 eax, DWORD PTR _Gate$[ebp]
  019d6	c1 e0 04	 shl	 eax, 4
  019d9	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _lpMsgBody$[ebp]
  019df	8a 90 08 00 00
	00		 mov	 dl, BYTE PTR _g_DestlerMapAttr[eax+8]
  019e5	88 51 02	 mov	 BYTE PTR [ecx+2], dl

; 542  : 	lpMsgBody[1].btY = g_DestlerMapAttr[Gate].EndY;

  019e8	8b 45 08	 mov	 eax, DWORD PTR _Gate$[ebp]
  019eb	c1 e0 04	 shl	 eax, 4
  019ee	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _lpMsgBody$[ebp]
  019f4	8a 90 0c 00 00
	00		 mov	 dl, BYTE PTR _g_DestlerMapAttr[eax+12]
  019fa	88 51 03	 mov	 BYTE PTR [ecx+3], dl

; 543  : 
; 544  : 	PacketSize = (sizeof(PMSG_SETMAPATTR_COUNT)+6*sizeof(PMSG_SETMAPATTR));

  019fd	b8 13 00 00 00	 mov	 eax, 19			; 00000013H
  01a02	66 89 85 f4 fe
	ff ff		 mov	 WORD PTR _PacketSize$[ebp], ax

; 545  : 
; 546  : 	lpMsg->btMapAttr = 16;

  01a09	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01a0f	c6 40 04 10	 mov	 BYTE PTR [eax+4], 16	; 00000010H

; 547  : 	lpMsg->btMapSetType = 1;

  01a13	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01a19	c6 40 05 01	 mov	 BYTE PTR [eax+5], 1

; 548  : 	lpMsg->btCount = 1;

  01a1d	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01a23	c6 40 06 01	 mov	 BYTE PTR [eax+6], 1

; 549  : 	lpMsg->btType = 0;

  01a27	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01a2d	c6 40 03 00	 mov	 BYTE PTR [eax+3], 0

; 550  : 
; 551  : 	lpMsg->h.c = 0xC1;

  01a31	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01a37	c6 00 c1	 mov	 BYTE PTR [eax], 193	; 000000c1H

; 552  : 	lpMsg->h.headcode = 0x46;

  01a3a	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01a40	c6 40 02 46	 mov	 BYTE PTR [eax+2], 70	; 00000046H

; 553  : 	lpMsg->h.size = PacketSize;

  01a44	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _lpMsg$[ebp]
  01a4a	8a 8d f4 fe ff
	ff		 mov	 cl, BYTE PTR _PacketSize$[ebp]
  01a50	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 554  : 
; 555  : 	this->SendImperialPlayers((LPBYTE)Buff, PacketSize);

  01a53	0f bf 85 f4 fe
	ff ff		 movsx	 eax, WORD PTR _PacketSize$[ebp]
  01a5a	50		 push	 eax
  01a5b	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _Buff$[ebp]
  01a61	51		 push	 ecx
  01a62	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01a65	e8 00 00 00 00	 call	 ?SendImperialPlayers@CImperialBattleOfDestler@@QAEXPAEH@Z ; CImperialBattleOfDestler::SendImperialPlayers

; 556  : }

  01a6a	5f		 pop	 edi
  01a6b	5e		 pop	 esi
  01a6c	5b		 pop	 ebx
  01a6d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01a70	33 cd		 xor	 ecx, ebp
  01a72	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01a77	8b e5		 mov	 esp, ebp
  01a79	5d		 pop	 ebp
  01a7a	c2 04 00	 ret	 4
?SetMapAttr@CImperialBattleOfDestler@@QAEXH@Z ENDP	; CImperialBattleOfDestler::SetMapAttr
_TEXT	ENDS
EXTRN	?FindGroupMemberObjectIndex@TMonsterAIGroup@@SAHHH@Z:PROC ; TMonsterAIGroup::FindGroupMemberObjectIndex
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$221202 = -12						; size = 4
_alivecount$ = -8					; size = 2
_this$ = -4						; size = 4
?MonsterProc@CImperialBattleOfDestler@@QAEXXZ PROC	; CImperialBattleOfDestler::MonsterProc
; _this$ = ecx

; 559  : {

  01a80	55		 push	 ebp
  01a81	8b ec		 mov	 ebp, esp
  01a83	83 ec 4c	 sub	 esp, 76			; 0000004cH
  01a86	53		 push	 ebx
  01a87	56		 push	 esi
  01a88	57		 push	 edi
  01a89	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 560  : 	short alivecount = 0;

  01a8c	33 c0		 xor	 eax, eax
  01a8e	66 89 45 f8	 mov	 WORD PTR _alivecount$[ebp], ax

; 561  : 	for(int i=0;i<TMonsterAIGroup::s_iMonsterAIGroupMemberCount[this->m_BattleData.CurrentAIGroup];++i)

  01a92	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$221202[ebp], 0
  01a99	eb 09		 jmp	 SHORT $LN4@MonsterPro
$LN3@MonsterPro:
  01a9b	8b 45 f4	 mov	 eax, DWORD PTR _i$221202[ebp]
  01a9e	83 c0 01	 add	 eax, 1
  01aa1	89 45 f4	 mov	 DWORD PTR _i$221202[ebp], eax
$LN4@MonsterPro:
  01aa4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01aa7	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  01aaa	8b 55 f4	 mov	 edx, DWORD PTR _i$221202[ebp]
  01aad	3b 14 8d 00 00
	00 00		 cmp	 edx, DWORD PTR ?s_iMonsterAIGroupMemberCount@TMonsterAIGroup@@2PAHA[ecx*4]
  01ab4	7d 37		 jge	 SHORT $LN2@MonsterPro

; 562  : 	{
; 563  : 		if(gObj[TMonsterAIGroup::FindGroupMemberObjectIndex(this->m_BattleData.CurrentAIGroup, i)].Live == true)

  01ab6	8b 45 f4	 mov	 eax, DWORD PTR _i$221202[ebp]
  01ab9	50		 push	 eax
  01aba	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01abd	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  01ac0	52		 push	 edx
  01ac1	e8 00 00 00 00	 call	 ?FindGroupMemberObjectIndex@TMonsterAIGroup@@SAHHH@Z ; TMonsterAIGroup::FindGroupMemberObjectIndex
  01ac6	83 c4 08	 add	 esp, 8
  01ac9	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01acf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01ad5	0f b6 54 01 6a	 movzx	 edx, BYTE PTR [ecx+eax+106]
  01ada	83 fa 01	 cmp	 edx, 1
  01add	75 0c		 jne	 SHORT $LN1@MonsterPro

; 564  : 		{
; 565  : 			++alivecount;

  01adf	66 8b 45 f8	 mov	 ax, WORD PTR _alivecount$[ebp]
  01ae3	66 83 c0 01	 add	 ax, 1
  01ae7	66 89 45 f8	 mov	 WORD PTR _alivecount$[ebp], ax
$LN1@MonsterPro:

; 566  : 		}
; 567  : 	}

  01aeb	eb ae		 jmp	 SHORT $LN3@MonsterPro
$LN2@MonsterPro:

; 568  : 	this->m_BattleData.MonsterCount = alivecount;

  01aed	0f bf 45 f8	 movsx	 eax, WORD PTR _alivecount$[ebp]
  01af1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01af4	89 41 44	 mov	 DWORD PTR [ecx+68], eax

; 569  : }

  01af7	5f		 pop	 edi
  01af8	5e		 pop	 esi
  01af9	5b		 pop	 ebx
  01afa	8b e5		 mov	 esp, ebp
  01afc	5d		 pop	 ebp
  01afd	c3		 ret	 0
?MonsterProc@CImperialBattleOfDestler@@QAEXXZ ENDP	; CImperialBattleOfDestler::MonsterProc
_TEXT	ENDS
PUBLIC	?OperatePortalGate@CImperialBattleOfDestler@@QAEX_N0H@Z ; CImperialBattleOfDestler::OperatePortalGate
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Block$ = 8						; size = 1
_ForAll$ = 12						; size = 1
_aIndex$ = 16						; size = 4
?OperatePortalGate@CImperialBattleOfDestler@@QAEX_N0H@Z PROC ; CImperialBattleOfDestler::OperatePortalGate
; _this$ = ecx

; 572  : {

  01b00	55		 push	 ebp
  01b01	8b ec		 mov	 ebp, esp
  01b03	83 ec 44	 sub	 esp, 68			; 00000044H
  01b06	53		 push	 ebx
  01b07	56		 push	 esi
  01b08	57		 push	 edi
  01b09	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 573  : 	return;
; 574  : }

  01b0c	5f		 pop	 edi
  01b0d	5e		 pop	 esi
  01b0e	5b		 pop	 ebx
  01b0f	8b e5		 mov	 esp, ebp
  01b11	5d		 pop	 ebp
  01b12	c2 0c 00	 ret	 12			; 0000000cH
?OperatePortalGate@CImperialBattleOfDestler@@QAEX_N0H@Z ENDP ; CImperialBattleOfDestler::OperatePortalGate
_TEXT	ENDS
PUBLIC	?SetNextState@CImperialBattleOfDestler@@QAEXXZ	; CImperialBattleOfDestler::SetNextState
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_iNextState$ = -8					; size = 4
_this$ = -4						; size = 4
?SetNextState@CImperialBattleOfDestler@@QAEXXZ PROC	; CImperialBattleOfDestler::SetNextState
; _this$ = ecx

; 577  : {

  01b20	55		 push	 ebp
  01b21	8b ec		 mov	 ebp, esp
  01b23	83 ec 48	 sub	 esp, 72			; 00000048H
  01b26	53		 push	 ebx
  01b27	56		 push	 esi
  01b28	57		 push	 edi
  01b29	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 578  : 	int iNextState = this->m_BattleData.CurrentState + 1;

  01b2c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01b2f	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  01b32	83 c1 01	 add	 ecx, 1
  01b35	89 4d f8	 mov	 DWORD PTR _iNextState$[ebp], ecx

; 579  : 
; 580  : 	if ( iNextState >= BATTLEOFDESTLER_STATE_END )

  01b38	83 7d f8 07	 cmp	 DWORD PTR _iNextState$[ebp], 7
  01b3c	7c 07		 jl	 SHORT $LN1@SetNextSta

; 581  : 	{
; 582  : 		iNextState = BATTLEOFDESTLER_STATE_NONE;

  01b3e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iNextState$[ebp], 0
$LN1@SetNextSta:

; 583  : 	}
; 584  : 
; 585  : 	this->SetState(iNextState);

  01b45	8b 45 f8	 mov	 eax, DWORD PTR _iNextState$[ebp]
  01b48	50		 push	 eax
  01b49	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01b4c	e8 00 00 00 00	 call	 ?SetState@CImperialBattleOfDestler@@QAEXH@Z ; CImperialBattleOfDestler::SetState

; 586  : }

  01b51	5f		 pop	 edi
  01b52	5e		 pop	 esi
  01b53	5b		 pop	 ebx
  01b54	8b e5		 mov	 esp, ebp
  01b56	5d		 pop	 ebp
  01b57	c3		 ret	 0
?SetNextState@CImperialBattleOfDestler@@QAEXXZ ENDP	; CImperialBattleOfDestler::SetNextState
_TEXT	ENDS
PUBLIC	?EnterPortal@CImperialBattleOfDestler@@QAE_NPAUOBJECTSTRUCT@@@Z ; CImperialBattleOfDestler::EnterPortal
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
?EnterPortal@CImperialBattleOfDestler@@QAE_NPAUOBJECTSTRUCT@@@Z PROC ; CImperialBattleOfDestler::EnterPortal
; _this$ = ecx

; 589  : {

  01b60	55		 push	 ebp
  01b61	8b ec		 mov	 ebp, esp
  01b63	83 ec 44	 sub	 esp, 68			; 00000044H
  01b66	53		 push	 ebx
  01b67	56		 push	 esi
  01b68	57		 push	 edi
  01b69	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 590  : 	if(this->m_BattleData.MonsterCount > 0)

  01b6c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01b6f	83 78 44 00	 cmp	 DWORD PTR [eax+68], 0
  01b73	7e 04		 jle	 SHORT $LN2@EnterPorta

; 591  : 		return false;

  01b75	32 c0		 xor	 al, al
  01b77	eb 1c		 jmp	 SHORT $LN3@EnterPorta
$LN2@EnterPorta:

; 592  : 	
; 593  : 	//if(this->m_BattleData.PhazeStep != 4)	//DeBug
; 594  : 		//return false;
; 595  : 
; 596  : 	if(!this->PortalSetState)

  01b79	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01b7c	0f b6 48 58	 movzx	 ecx, BYTE PTR [eax+88]
  01b80	85 c9		 test	 ecx, ecx
  01b82	75 0f		 jne	 SHORT $LN1@EnterPorta

; 597  : 	{
; 598  : 		this->SetNextState();

  01b84	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01b87	e8 00 00 00 00	 call	 ?SetNextState@CImperialBattleOfDestler@@QAEXXZ ; CImperialBattleOfDestler::SetNextState

; 599  : 		this->PortalSetState = true;

  01b8c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01b8f	c6 40 58 01	 mov	 BYTE PTR [eax+88], 1
$LN1@EnterPorta:

; 600  : 	}
; 601  : 
; 602  : 	return true;

  01b93	b0 01		 mov	 al, 1
$LN3@EnterPorta:

; 603  : }

  01b95	5f		 pop	 edi
  01b96	5e		 pop	 esi
  01b97	5b		 pop	 ebx
  01b98	8b e5		 mov	 esp, ebp
  01b9a	5d		 pop	 ebp
  01b9b	c2 04 00	 ret	 4
?EnterPortal@CImperialBattleOfDestler@@QAE_NPAUOBJECTSTRUCT@@@Z ENDP ; CImperialBattleOfDestler::EnterPortal
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_State$ = -24						; size = 4
_pMsg$ = -20						; size = 12
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?SendEventState@CImperialBattleOfDestler@@QAEXXZ PROC	; CImperialBattleOfDestler::SendEventState
; _this$ = ecx

; 606  : {

  01ba0	55		 push	 ebp
  01ba1	8b ec		 mov	 ebp, esp
  01ba3	83 ec 58	 sub	 esp, 88			; 00000058H
  01ba6	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  01bab	33 c5		 xor	 eax, ebp
  01bad	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  01bb0	53		 push	 ebx
  01bb1	56		 push	 esi
  01bb2	57		 push	 edi
  01bb3	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 607  : 	PMSG_FORT_ENTER_RESULT pMsg;
; 608  : 
; 609  : 	PHeadSubSetB((LPBYTE)&pMsg, 0xF7, 0x02, sizeof(pMsg));

  01bb6	6a 0c		 push	 12			; 0000000cH
  01bb8	6a 02		 push	 2
  01bba	68 f7 00 00 00	 push	 247			; 000000f7H
  01bbf	8d 45 ec	 lea	 eax, DWORD PTR _pMsg$[ebp]
  01bc2	50		 push	 eax
  01bc3	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB
  01bc8	83 c4 10	 add	 esp, 16			; 00000010H

; 610  : 
; 611  : 	pMsg.EntryTime = 0;

  01bcb	33 c0		 xor	 eax, eax
  01bcd	66 89 45 f6	 mov	 WORD PTR _pMsg$[ebp+10], ax

; 612  : 	pMsg.Day = 1;

  01bd1	c6 45 f1 01	 mov	 BYTE PTR _pMsg$[ebp+5], 1

; 613  : 	pMsg.Result = 0;

  01bd5	c6 45 f0 00	 mov	 BYTE PTR _pMsg$[ebp+4], 0

; 614  : 	
; 615  : 	int State;
; 616  : 
; 617  : 	if(this->m_BattleData.CurrentState == 1 || this->m_BattleData.CurrentState == 2)

  01bd9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01bdc	83 78 40 01	 cmp	 DWORD PTR [eax+64], 1
  01be0	74 09		 je	 SHORT $LN7@SendEventS
  01be2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01be5	83 78 40 02	 cmp	 DWORD PTR [eax+64], 2
  01be9	75 09		 jne	 SHORT $LN8@SendEventS
$LN7@SendEventS:

; 618  : 	{
; 619  : 		State = 1;

  01beb	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR _State$[ebp], 1
  01bf2	eb 34		 jmp	 SHORT $LN6@SendEventS
$LN8@SendEventS:

; 620  : 	}
; 621  : 	else if(this->m_BattleData.CurrentState == 3 || this->m_BattleData.CurrentState == 4)

  01bf4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01bf7	83 78 40 03	 cmp	 DWORD PTR [eax+64], 3
  01bfb	74 09		 je	 SHORT $LN4@SendEventS
  01bfd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01c00	83 78 40 04	 cmp	 DWORD PTR [eax+64], 4
  01c04	75 09		 jne	 SHORT $LN5@SendEventS
$LN4@SendEventS:

; 622  : 	{
; 623  : 		State = 2;

  01c06	c7 45 e8 02 00
	00 00		 mov	 DWORD PTR _State$[ebp], 2
  01c0d	eb 19		 jmp	 SHORT $LN6@SendEventS
$LN5@SendEventS:

; 624  : 	}
; 625  : 	else if(this->m_BattleData.CurrentState == 5 || this->m_BattleData.CurrentState == 6)

  01c0f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01c12	83 78 40 05	 cmp	 DWORD PTR [eax+64], 5
  01c16	74 09		 je	 SHORT $LN1@SendEventS
  01c18	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01c1b	83 78 40 06	 cmp	 DWORD PTR [eax+64], 6
  01c1f	75 07		 jne	 SHORT $LN6@SendEventS
$LN1@SendEventS:

; 626  : 	{
; 627  : 		State = 3;

  01c21	c7 45 e8 03 00
	00 00		 mov	 DWORD PTR _State$[ebp], 3
$LN6@SendEventS:

; 628  : 	}
; 629  : 
; 630  : 	pMsg.State = State;

  01c28	8a 45 e8	 mov	 al, BYTE PTR _State$[ebp]
  01c2b	88 45 f2	 mov	 BYTE PTR _pMsg$[ebp+6], al

; 631  : 	pMsg.Unk = 3;

  01c2e	c6 45 f3 03	 mov	 BYTE PTR _pMsg$[ebp+7], 3

; 632  : 
; 633  : 	this->SendImperialPlayers((LPBYTE)&pMsg, pMsg.h.size);

  01c32	0f b6 45 ed	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  01c36	50		 push	 eax
  01c37	8d 4d ec	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  01c3a	51		 push	 ecx
  01c3b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01c3e	e8 00 00 00 00	 call	 ?SendImperialPlayers@CImperialBattleOfDestler@@QAEXPAEH@Z ; CImperialBattleOfDestler::SendImperialPlayers

; 634  : }

  01c43	5f		 pop	 edi
  01c44	5e		 pop	 esi
  01c45	5b		 pop	 ebx
  01c46	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01c49	33 cd		 xor	 ecx, ebp
  01c4b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01c50	8b e5		 mov	 esp, ebp
  01c52	5d		 pop	 ebp
  01c53	c3		 ret	 0
?SendEventState@CImperialBattleOfDestler@@QAEXXZ ENDP	; CImperialBattleOfDestler::SendEventState
_TEXT	ENDS
END
