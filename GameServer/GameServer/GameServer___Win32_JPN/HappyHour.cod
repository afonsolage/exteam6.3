; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\HappyHour.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?HappyHour@@3VcHappyHour@@A			; HappyHour
_BSS	SEGMENT
?HappyHour@@3VcHappyHour@@A DB 0814H DUP (?)		; HappyHour
_BSS	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?LoadFile@cHappyHour@@QAEXXZ			; cHappyHour::LoadFile
PUBLIC	??_C@_08NPPHPMEF@PlusDrop?$AA@			; `string'
PUBLIC	??_C@_07LPGHBLLN@PlusExp?$AA@			; `string'
PUBLIC	??_C@_06POMJKEPM@Common?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
PUBLIC	??_C@_0CE@DDOPGJKO@?4?4?2Data?2ExData?2Events?2HappyHour?4@ ; `string'
PUBLIC	?LoadConfig@cHappyHour@@QAEXXZ			; cHappyHour::LoadConfig
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
;	COMDAT ??_C@_08NPPHPMEF@PlusDrop?$AA@
; File d:\projects\exteam6.3\source\gameserver\gameserver\happyhour.cpp
CONST	SEGMENT
??_C@_08NPPHPMEF@PlusDrop?$AA@ DB 'PlusDrop', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07LPGHBLLN@PlusExp?$AA@
CONST	SEGMENT
??_C@_07LPGHBLLN@PlusExp?$AA@ DB 'PlusExp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06POMJKEPM@Common?$AA@
CONST	SEGMENT
??_C@_06POMJKEPM@Common?$AA@ DB 'Common', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@DDOPGJKO@?4?4?2Data?2ExData?2Events?2HappyHour?4@
CONST	SEGMENT
??_C@_0CE@DDOPGJKO@?4?4?2Data?2ExData?2Events?2HappyHour?4@ DB '..\Data\E'
	DB	'xData\Events\HappyHour.ini', 00H		; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?LoadConfig@cHappyHour@@QAEXXZ PROC			; cHappyHour::LoadConfig
; _this$ = ecx

; 15   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 16   : 	this->Enable = GetPrivateProfileInt("Common","Enable",1,HH_DIR);

  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@DDOPGJKO@?4?4?2Data?2ExData?2Events?2HappyHour?4@
  00011	6a 01		 push	 1
  00013	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	89 01		 mov	 DWORD PTR [ecx], eax

; 17   : 	this->PlusExp = GetPrivateProfileInt("Common","PlusExp",10,HH_DIR);

  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@DDOPGJKO@?4?4?2Data?2ExData?2Events?2HappyHour?4@
  0002d	6a 0a		 push	 10			; 0000000aH
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_07LPGHBLLN@PlusExp?$AA@
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 18   : 	this->PlusDrop = GetPrivateProfileInt("Common","PlusDrop",10,HH_DIR);

  00045	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@DDOPGJKO@?4?4?2Data?2ExData?2Events?2HappyHour?4@
  0004a	6a 0a		 push	 10			; 0000000aH
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_08NPPHPMEF@PlusDrop?$AA@
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 19   : 
; 20   : 	this->LoadFile();

  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?LoadFile@cHappyHour@@QAEXXZ ; cHappyHour::LoadFile

; 21   : 
; 22   : 	this->StartHappyHour = false;

  0006a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006d	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 23   : }

  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	5b		 pop	 ebx
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c3		 ret	 0
?LoadConfig@cHappyHour@@QAEXXZ ENDP			; cHappyHour::LoadConfig
_TEXT	ENDS
PUBLIC	??_C@_0M@FMGEODLN@?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@	; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	__$ArrayPad$
EXTRN	_fclose:PROC
EXTRN	_sscanf:PROC
EXTRN	?Ex_IsBadFileLine@@YA_NPADAAH@Z:PROC		; Ex_IsBadFileLine
EXTRN	_fgets:PROC
EXTRN	_feof:PROC
EXTRN	__imp__ExitProcess@4:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	_fopen:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT ??_C@_0M@FMGEODLN@?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0M@FMGEODLN@?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@ DB '%d %d %d %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@
CONST	SEGMENT
??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@ DB 'LOAD FILE ERROR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_n$219706 = -288					; size = 16
_Flag$ = -272						; size = 4
_Buff$ = -268						; size = 256
_file$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?LoadFile@cHappyHour@@QAEXXZ PROC			; cHappyHour::LoadFile
; _this$ = ecx

; 26   : {

  00080	55		 push	 ebp
  00081	8b ec		 mov	 ebp, esp
  00083	81 ec 60 01 00
	00		 sub	 esp, 352		; 00000160H
  00089	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0008e	33 c5		 xor	 eax, ebp
  00090	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00093	53		 push	 ebx
  00094	56		 push	 esi
  00095	57		 push	 edi
  00096	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 27   : 	FILE * file = fopen(HH_DIR,"r");

  00099	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@DDOPGJKO@?4?4?2Data?2ExData?2Events?2HappyHour?4@
  000a3	e8 00 00 00 00	 call	 _fopen
  000a8	83 c4 08	 add	 esp, 8
  000ab	89 45 f4	 mov	 DWORD PTR _file$[ebp], eax

; 28   : 
; 29   : 	if(file == NULL)

  000ae	83 7d f4 00	 cmp	 DWORD PTR _file$[ebp], 0
  000b2	75 21		 jne	 SHORT $LN5@LoadFile

; 30   : 	{
; 31   : 		MessageBoxA(0,HH_DIR,"LOAD FILE ERROR",0);

  000b4	6a 00		 push	 0
  000b6	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@PIOFNAIM@LOAD?5FILE?5ERROR?$AA@
  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@DDOPGJKO@?4?4?2Data?2ExData?2Events?2HappyHour?4@
  000c0	6a 00		 push	 0
  000c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 32   : 		ExitProcess(1);

  000c8	6a 01		 push	 1
  000ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ExitProcess@4

; 33   : 		return;

  000d0	e9 85 01 00 00	 jmp	 $LN7@LoadFile
$LN5@LoadFile:

; 34   : 	}
; 35   : 
; 36   : 	char Buff[256];
; 37   : 	int Flag = 0;

  000d5	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _Flag$[ebp], 0

; 38   : 	this->Count = 0;

  000df	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000e2	c7 80 10 08 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+2064], 0
$LN4@LoadFile:

; 39   : 
; 40   : 	while(!feof(file)) // Проверяем есть ли строка в документе

  000ec	8b 45 f4	 mov	 eax, DWORD PTR _file$[ebp]
  000ef	50		 push	 eax
  000f0	e8 00 00 00 00	 call	 _feof
  000f5	83 c4 04	 add	 esp, 4
  000f8	85 c0		 test	 eax, eax
  000fa	0f 85 4e 01 00
	00		 jne	 $LN3@LoadFile

; 41   : 	{
; 42   : 		fgets(Buff,256,file);//Функция читает текущую строку

  00100	8b 45 f4	 mov	 eax, DWORD PTR _file$[ebp]
  00103	50		 push	 eax
  00104	68 00 01 00 00	 push	 256			; 00000100H
  00109	8d 8d f4 fe ff
	ff		 lea	 ecx, DWORD PTR _Buff$[ebp]
  0010f	51		 push	 ecx
  00110	e8 00 00 00 00	 call	 _fgets
  00115	83 c4 0c	 add	 esp, 12			; 0000000cH

; 43   : 		if(Ex_IsBadFileLine(Buff, Flag)) //Вспомогательная функция

  00118	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _Flag$[ebp]
  0011e	50		 push	 eax
  0011f	8d 8d f4 fe ff
	ff		 lea	 ecx, DWORD PTR _Buff$[ebp]
  00125	51		 push	 ecx
  00126	e8 00 00 00 00	 call	 ?Ex_IsBadFileLine@@YA_NPADAAH@Z ; Ex_IsBadFileLine
  0012b	83 c4 08	 add	 esp, 8
  0012e	0f b6 d0	 movzx	 edx, al
  00131	85 d2		 test	 edx, edx
  00133	74 02		 je	 SHORT $LN2@LoadFile

; 44   : 			continue;

  00135	eb b5		 jmp	 SHORT $LN4@LoadFile
$LN2@LoadFile:

; 45   : 		if(Flag == 1)

  00137	83 bd f0 fe ff
	ff 01		 cmp	 DWORD PTR _Flag$[ebp], 1
  0013e	0f 85 05 01 00
	00		 jne	 $LN1@LoadFile

; 46   : 		{
; 47   : 			this->HappyStruct[this->Count].Hour		= 0;

  00144	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00147	8b 88 10 08 00
	00		 mov	 ecx, DWORD PTR [eax+2064]
  0014d	c1 e1 04	 shl	 ecx, 4
  00150	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00153	c7 44 0a 10 00
	00 00 00	 mov	 DWORD PTR [edx+ecx+16], 0

; 48   : 			this->HappyStruct[this->Count].Min		= 0;

  0015b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0015e	8b 88 10 08 00
	00		 mov	 ecx, DWORD PTR [eax+2064]
  00164	c1 e1 04	 shl	 ecx, 4
  00167	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0016a	c7 44 0a 14 00
	00 00 00	 mov	 DWORD PTR [edx+ecx+20], 0

; 49   : 			this->HappyStruct[this->Count].EndHour	= 0;

  00172	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00175	8b 88 10 08 00
	00		 mov	 ecx, DWORD PTR [eax+2064]
  0017b	c1 e1 04	 shl	 ecx, 4
  0017e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00181	c7 44 0a 18 00
	00 00 00	 mov	 DWORD PTR [edx+ecx+24], 0

; 50   : 			this->HappyStruct[this->Count].EndMin	= 0;

  00189	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0018c	8b 88 10 08 00
	00		 mov	 ecx, DWORD PTR [eax+2064]
  00192	c1 e1 04	 shl	 ecx, 4
  00195	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00198	c7 44 0a 1c 00
	00 00 00	 mov	 DWORD PTR [edx+ecx+28], 0

; 51   : 
; 52   : 			int n[4];
; 53   : 			sscanf(Buff, "%d %d %d %d", &n[0], &n[1], &n[2], &n[3]);

  001a0	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _n$219706[ebp+12]
  001a6	50		 push	 eax
  001a7	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _n$219706[ebp+8]
  001ad	51		 push	 ecx
  001ae	8d 95 e4 fe ff
	ff		 lea	 edx, DWORD PTR _n$219706[ebp+4]
  001b4	52		 push	 edx
  001b5	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _n$219706[ebp]
  001bb	50		 push	 eax
  001bc	68 00 00 00 00	 push	 OFFSET ??_C@_0M@FMGEODLN@?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@
  001c1	8d 8d f4 fe ff
	ff		 lea	 ecx, DWORD PTR _Buff$[ebp]
  001c7	51		 push	 ecx
  001c8	e8 00 00 00 00	 call	 _sscanf
  001cd	83 c4 18	 add	 esp, 24			; 00000018H

; 54   : 			this->HappyStruct[this->Count].Hour		= n[0];

  001d0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001d3	8b 88 10 08 00
	00		 mov	 ecx, DWORD PTR [eax+2064]
  001d9	c1 e1 04	 shl	 ecx, 4
  001dc	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001df	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _n$219706[ebp]
  001e5	89 44 0a 10	 mov	 DWORD PTR [edx+ecx+16], eax

; 55   : 			this->HappyStruct[this->Count].Min		= n[1];

  001e9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001ec	8b 88 10 08 00
	00		 mov	 ecx, DWORD PTR [eax+2064]
  001f2	c1 e1 04	 shl	 ecx, 4
  001f5	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001f8	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _n$219706[ebp+4]
  001fe	89 44 0a 14	 mov	 DWORD PTR [edx+ecx+20], eax

; 56   : 			this->HappyStruct[this->Count].EndHour	= n[2];

  00202	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00205	8b 88 10 08 00
	00		 mov	 ecx, DWORD PTR [eax+2064]
  0020b	c1 e1 04	 shl	 ecx, 4
  0020e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00211	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _n$219706[ebp+8]
  00217	89 44 0a 18	 mov	 DWORD PTR [edx+ecx+24], eax

; 57   : 			this->HappyStruct[this->Count].EndMin	= n[3];

  0021b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0021e	8b 88 10 08 00
	00		 mov	 ecx, DWORD PTR [eax+2064]
  00224	c1 e1 04	 shl	 ecx, 4
  00227	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0022a	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _n$219706[ebp+12]
  00230	89 44 0a 1c	 mov	 DWORD PTR [edx+ecx+28], eax

; 58   : 			this->Count++;

  00234	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00237	8b 88 10 08 00
	00		 mov	 ecx, DWORD PTR [eax+2064]
  0023d	83 c1 01	 add	 ecx, 1
  00240	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00243	89 8a 10 08 00
	00		 mov	 DWORD PTR [edx+2064], ecx
$LN1@LoadFile:

; 59   : 		}
; 60   : 	}

  00249	e9 9e fe ff ff	 jmp	 $LN4@LoadFile
$LN3@LoadFile:

; 61   : 	fclose(file);

  0024e	8b 45 f4	 mov	 eax, DWORD PTR _file$[ebp]
  00251	50		 push	 eax
  00252	e8 00 00 00 00	 call	 _fclose
  00257	83 c4 04	 add	 esp, 4
$LN7@LoadFile:

; 62   : }

  0025a	5f		 pop	 edi
  0025b	5e		 pop	 esi
  0025c	5b		 pop	 ebx
  0025d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00260	33 cd		 xor	 ecx, ebp
  00262	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00267	8b e5		 mov	 esp, ebp
  00269	5d		 pop	 ebp
  0026a	c3		 ret	 0
?LoadFile@cHappyHour@@QAEXXZ ENDP			; cHappyHour::LoadFile
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?Timetick@cHappyHour@@QAEXXZ			; cHappyHour::Timetick
EXTRN	?GetText@CExText@@QAEPADH@Z:PROC		; CExText::GetText
EXTRN	?g_ExText@@3VCExText@@A:BYTE			; g_ExText
EXTRN	?MessaageAllGlobal@@YAXPADZZ:PROC		; MessaageAllGlobal
EXTRN	?ExConfig@@3VcExConfigs@@A:BYTE			; ExConfig
EXTRN	?GetSecond@CTimerEx@@QAEHXZ:PROC		; CTimerEx::GetSecond
EXTRN	?g_TimerEx@@3VCTimerEx@@A:DWORD			; g_TimerEx
EXTRN	__imp__GetLocalTime@4:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_j$219718 = -32						; size = 4
_i$219713 = -28						; size = 4
_time$ = -24						; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?Timetick@cHappyHour@@QAEXXZ PROC			; cHappyHour::Timetick
; _this$ = ecx

; 65   : {

  00270	55		 push	 ebp
  00271	8b ec		 mov	 ebp, esp
  00273	83 ec 60	 sub	 esp, 96			; 00000060H
  00276	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0027b	33 c5		 xor	 eax, ebp
  0027d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00280	53		 push	 ebx
  00281	56		 push	 esi
  00282	57		 push	 edi
  00283	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 66   : 	SYSTEMTIME time;
; 67   : 	GetLocalTime(&time);

  00286	8d 45 e8	 lea	 eax, DWORD PTR _time$[ebp]
  00289	50		 push	 eax
  0028a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 68   : 
; 69   : #if(NEWTIMEREX)
; 70   : 	if(g_TimerEx.GetSecond() == 00)

  00290	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_TimerEx@@3VCTimerEx@@A ; g_TimerEx
  00295	e8 00 00 00 00	 call	 ?GetSecond@CTimerEx@@QAEHXZ ; CTimerEx::GetSecond
  0029a	85 c0		 test	 eax, eax
  0029c	0f 85 31 06 00
	00		 jne	 $LN47@Timetick

; 71   : #else
; 72   : 	if(time.wSecond == 00)
; 73   : #endif
; 74   : 	{
; 75   : 		for(int i = 0; i < this->Count; i++)

  002a2	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _i$219713[ebp], 0
  002a9	eb 09		 jmp	 SHORT $LN45@Timetick
$LN44@Timetick:
  002ab	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  002ae	83 c0 01	 add	 eax, 1
  002b1	89 45 e4	 mov	 DWORD PTR _i$219713[ebp], eax
$LN45@Timetick:
  002b4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002b7	8b 4d e4	 mov	 ecx, DWORD PTR _i$219713[ebp]
  002ba	3b 88 10 08 00
	00		 cmp	 ecx, DWORD PTR [eax+2064]
  002c0	0f 8d 0d 06 00
	00		 jge	 $LN47@Timetick

; 76   : 		{
; 77   : #ifdef _MESSAGE_CONFIG_
; 78   : 			if(HappyStruct[i].Min > 5)

  002c6	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  002c9	c1 e0 04	 shl	 eax, 4
  002cc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002cf	83 7c 01 14 05	 cmp	 DWORD PTR [ecx+eax+20], 5
  002d4	7e 5b		 jle	 SHORT $LN42@Timetick

; 79   : 			{
; 80   : 				for(int j=1; j <= 5; j++)

  002d6	c7 45 e0 01 00
	00 00		 mov	 DWORD PTR _j$219718[ebp], 1
  002dd	eb 09		 jmp	 SHORT $LN41@Timetick
$LN40@Timetick:
  002df	8b 45 e0	 mov	 eax, DWORD PTR _j$219718[ebp]
  002e2	83 c0 01	 add	 eax, 1
  002e5	89 45 e0	 mov	 DWORD PTR _j$219718[ebp], eax
$LN41@Timetick:
  002e8	83 7d e0 05	 cmp	 DWORD PTR _j$219718[ebp], 5
  002ec	7f 3e		 jg	 SHORT $LN39@Timetick

; 81   : 				{
; 82   : 			
; 83   : 					if(HappyStruct[i].Hour == time.wHour && (HappyStruct[i].Min-j) == time.wMinute)

  002ee	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  002f1	c1 e0 04	 shl	 eax, 4
  002f4	0f b7 4d f0	 movzx	 ecx, WORD PTR _time$[ebp+8]
  002f8	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002fb	39 4c 02 10	 cmp	 DWORD PTR [edx+eax+16], ecx
  002ff	75 29		 jne	 SHORT $LN38@Timetick
  00301	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  00304	c1 e0 04	 shl	 eax, 4
  00307	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0030a	8b 54 01 14	 mov	 edx, DWORD PTR [ecx+eax+20]
  0030e	2b 55 e0	 sub	 edx, DWORD PTR _j$219718[ebp]
  00311	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  00315	3b d0		 cmp	 edx, eax
  00317	75 11		 jne	 SHORT $LN38@Timetick

; 84   : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, j);

  00319	8b 45 e0	 mov	 eax, DWORD PTR _j$219718[ebp]
  0031c	50		 push	 eax
  0031d	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  00322	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00327	83 c4 08	 add	 esp, 8
$LN38@Timetick:

; 85   : 				}

  0032a	eb b3		 jmp	 SHORT $LN40@Timetick
$LN39@Timetick:

; 86   : 			}
; 87   : 			else if(HappyStruct[i].Min == 4)

  0032c	e9 f2 04 00 00	 jmp	 $LN37@Timetick
$LN42@Timetick:
  00331	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  00334	c1 e0 04	 shl	 eax, 4
  00337	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0033a	83 7c 01 14 04	 cmp	 DWORD PTR [ecx+eax+20], 4
  0033f	0f 85 e0 00 00
	00		 jne	 $LN36@Timetick

; 88   : 			{
; 89   : 					if(HappyStruct[i].Hour-1 == time.wHour && 59 == time.wMinute)

  00345	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  00348	c1 e0 04	 shl	 eax, 4
  0034b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0034e	8b 54 01 10	 mov	 edx, DWORD PTR [ecx+eax+16]
  00352	83 ea 01	 sub	 edx, 1
  00355	0f b7 45 f0	 movzx	 eax, WORD PTR _time$[ebp+8]
  00359	3b d0		 cmp	 edx, eax
  0035b	75 18		 jne	 SHORT $LN35@Timetick
  0035d	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  00361	83 f8 3b	 cmp	 eax, 59			; 0000003bH
  00364	75 0f		 jne	 SHORT $LN35@Timetick

; 90   : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 5);

  00366	6a 05		 push	 5
  00368	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  0036d	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00372	83 c4 08	 add	 esp, 8
$LN35@Timetick:

; 91   : 					if(HappyStruct[i].Hour == time.wHour && 0 == time.wMinute)

  00375	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  00378	c1 e0 04	 shl	 eax, 4
  0037b	0f b7 4d f0	 movzx	 ecx, WORD PTR _time$[ebp+8]
  0037f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00382	39 4c 02 10	 cmp	 DWORD PTR [edx+eax+16], ecx
  00386	75 17		 jne	 SHORT $LN34@Timetick
  00388	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  0038c	85 c0		 test	 eax, eax
  0038e	75 0f		 jne	 SHORT $LN34@Timetick

; 92   : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 4);

  00390	6a 04		 push	 4
  00392	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  00397	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  0039c	83 c4 08	 add	 esp, 8
$LN34@Timetick:

; 93   : 					if(HappyStruct[i].Hour == time.wHour && 1 == time.wMinute)

  0039f	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  003a2	c1 e0 04	 shl	 eax, 4
  003a5	0f b7 4d f0	 movzx	 ecx, WORD PTR _time$[ebp+8]
  003a9	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003ac	39 4c 02 10	 cmp	 DWORD PTR [edx+eax+16], ecx
  003b0	75 18		 jne	 SHORT $LN33@Timetick
  003b2	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  003b6	83 f8 01	 cmp	 eax, 1
  003b9	75 0f		 jne	 SHORT $LN33@Timetick

; 94   : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 3);

  003bb	6a 03		 push	 3
  003bd	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  003c2	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  003c7	83 c4 08	 add	 esp, 8
$LN33@Timetick:

; 95   : 					if(HappyStruct[i].Hour == time.wHour && 2 == time.wMinute)

  003ca	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  003cd	c1 e0 04	 shl	 eax, 4
  003d0	0f b7 4d f0	 movzx	 ecx, WORD PTR _time$[ebp+8]
  003d4	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003d7	39 4c 02 10	 cmp	 DWORD PTR [edx+eax+16], ecx
  003db	75 18		 jne	 SHORT $LN32@Timetick
  003dd	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  003e1	83 f8 02	 cmp	 eax, 2
  003e4	75 0f		 jne	 SHORT $LN32@Timetick

; 96   : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 2);

  003e6	6a 02		 push	 2
  003e8	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  003ed	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  003f2	83 c4 08	 add	 esp, 8
$LN32@Timetick:

; 97   : 					if(HappyStruct[i].Hour == time.wHour && 3 == time.wMinute)

  003f5	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  003f8	c1 e0 04	 shl	 eax, 4
  003fb	0f b7 4d f0	 movzx	 ecx, WORD PTR _time$[ebp+8]
  003ff	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00402	39 4c 02 10	 cmp	 DWORD PTR [edx+eax+16], ecx
  00406	75 18		 jne	 SHORT $LN31@Timetick
  00408	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  0040c	83 f8 03	 cmp	 eax, 3
  0040f	75 0f		 jne	 SHORT $LN31@Timetick

; 98   : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 1);

  00411	6a 01		 push	 1
  00413	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  00418	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  0041d	83 c4 08	 add	 esp, 8
$LN31@Timetick:

; 99   : 
; 100  : 			}

  00420	e9 fe 03 00 00	 jmp	 $LN37@Timetick
$LN36@Timetick:

; 101  : 			else if(HappyStruct[i].Min == 3)

  00425	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  00428	c1 e0 04	 shl	 eax, 4
  0042b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0042e	83 7c 01 14 03	 cmp	 DWORD PTR [ecx+eax+20], 3
  00433	0f 85 e5 00 00
	00		 jne	 $LN29@Timetick

; 102  : 			{
; 103  : 					if(HappyStruct[i].Hour-1 == time.wHour && 58 == time.wMinute)

  00439	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  0043c	c1 e0 04	 shl	 eax, 4
  0043f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00442	8b 54 01 10	 mov	 edx, DWORD PTR [ecx+eax+16]
  00446	83 ea 01	 sub	 edx, 1
  00449	0f b7 45 f0	 movzx	 eax, WORD PTR _time$[ebp+8]
  0044d	3b d0		 cmp	 edx, eax
  0044f	75 18		 jne	 SHORT $LN28@Timetick
  00451	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  00455	83 f8 3a	 cmp	 eax, 58			; 0000003aH
  00458	75 0f		 jne	 SHORT $LN28@Timetick

; 104  : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 5);

  0045a	6a 05		 push	 5
  0045c	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  00461	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00466	83 c4 08	 add	 esp, 8
$LN28@Timetick:

; 105  : 					if(HappyStruct[i].Hour-1 == time.wHour && 59 == time.wMinute)

  00469	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  0046c	c1 e0 04	 shl	 eax, 4
  0046f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00472	8b 54 01 10	 mov	 edx, DWORD PTR [ecx+eax+16]
  00476	83 ea 01	 sub	 edx, 1
  00479	0f b7 45 f0	 movzx	 eax, WORD PTR _time$[ebp+8]
  0047d	3b d0		 cmp	 edx, eax
  0047f	75 18		 jne	 SHORT $LN27@Timetick
  00481	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  00485	83 f8 3b	 cmp	 eax, 59			; 0000003bH
  00488	75 0f		 jne	 SHORT $LN27@Timetick

; 106  : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 4);

  0048a	6a 04		 push	 4
  0048c	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  00491	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00496	83 c4 08	 add	 esp, 8
$LN27@Timetick:

; 107  : 					if(HappyStruct[i].Hour == time.wHour && 0 == time.wMinute)

  00499	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  0049c	c1 e0 04	 shl	 eax, 4
  0049f	0f b7 4d f0	 movzx	 ecx, WORD PTR _time$[ebp+8]
  004a3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  004a6	39 4c 02 10	 cmp	 DWORD PTR [edx+eax+16], ecx
  004aa	75 17		 jne	 SHORT $LN26@Timetick
  004ac	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  004b0	85 c0		 test	 eax, eax
  004b2	75 0f		 jne	 SHORT $LN26@Timetick

; 108  : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 3);

  004b4	6a 03		 push	 3
  004b6	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  004bb	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  004c0	83 c4 08	 add	 esp, 8
$LN26@Timetick:

; 109  : 					if(HappyStruct[i].Hour == time.wHour && 1 == time.wMinute)

  004c3	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  004c6	c1 e0 04	 shl	 eax, 4
  004c9	0f b7 4d f0	 movzx	 ecx, WORD PTR _time$[ebp+8]
  004cd	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  004d0	39 4c 02 10	 cmp	 DWORD PTR [edx+eax+16], ecx
  004d4	75 18		 jne	 SHORT $LN25@Timetick
  004d6	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  004da	83 f8 01	 cmp	 eax, 1
  004dd	75 0f		 jne	 SHORT $LN25@Timetick

; 110  : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 2);

  004df	6a 02		 push	 2
  004e1	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  004e6	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  004eb	83 c4 08	 add	 esp, 8
$LN25@Timetick:

; 111  : 					if(HappyStruct[i].Hour == time.wHour && 2 == time.wMinute)

  004ee	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  004f1	c1 e0 04	 shl	 eax, 4
  004f4	0f b7 4d f0	 movzx	 ecx, WORD PTR _time$[ebp+8]
  004f8	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  004fb	39 4c 02 10	 cmp	 DWORD PTR [edx+eax+16], ecx
  004ff	75 18		 jne	 SHORT $LN24@Timetick
  00501	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  00505	83 f8 02	 cmp	 eax, 2
  00508	75 0f		 jne	 SHORT $LN24@Timetick

; 112  : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 1);

  0050a	6a 01		 push	 1
  0050c	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  00511	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00516	83 c4 08	 add	 esp, 8
$LN24@Timetick:

; 113  : 			}

  00519	e9 05 03 00 00	 jmp	 $LN37@Timetick
$LN29@Timetick:

; 114  : 			else if(HappyStruct[i].Min == 2)

  0051e	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  00521	c1 e0 04	 shl	 eax, 4
  00524	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00527	83 7c 01 14 02	 cmp	 DWORD PTR [ecx+eax+20], 2
  0052c	0f 85 ea 00 00
	00		 jne	 $LN22@Timetick

; 115  : 			{
; 116  : 					if(HappyStruct[i].Hour-1 == time.wHour && 57 == time.wMinute)

  00532	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  00535	c1 e0 04	 shl	 eax, 4
  00538	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0053b	8b 54 01 10	 mov	 edx, DWORD PTR [ecx+eax+16]
  0053f	83 ea 01	 sub	 edx, 1
  00542	0f b7 45 f0	 movzx	 eax, WORD PTR _time$[ebp+8]
  00546	3b d0		 cmp	 edx, eax
  00548	75 18		 jne	 SHORT $LN21@Timetick
  0054a	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  0054e	83 f8 39	 cmp	 eax, 57			; 00000039H
  00551	75 0f		 jne	 SHORT $LN21@Timetick

; 117  : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 5);

  00553	6a 05		 push	 5
  00555	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  0055a	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  0055f	83 c4 08	 add	 esp, 8
$LN21@Timetick:

; 118  : 					if(HappyStruct[i].Hour-1 == time.wHour && 58 == time.wMinute)

  00562	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  00565	c1 e0 04	 shl	 eax, 4
  00568	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0056b	8b 54 01 10	 mov	 edx, DWORD PTR [ecx+eax+16]
  0056f	83 ea 01	 sub	 edx, 1
  00572	0f b7 45 f0	 movzx	 eax, WORD PTR _time$[ebp+8]
  00576	3b d0		 cmp	 edx, eax
  00578	75 18		 jne	 SHORT $LN20@Timetick
  0057a	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  0057e	83 f8 3a	 cmp	 eax, 58			; 0000003aH
  00581	75 0f		 jne	 SHORT $LN20@Timetick

; 119  : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 4);

  00583	6a 04		 push	 4
  00585	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  0058a	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  0058f	83 c4 08	 add	 esp, 8
$LN20@Timetick:

; 120  : 					if(HappyStruct[i].Hour-1 == time.wHour && 59 == time.wMinute)

  00592	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  00595	c1 e0 04	 shl	 eax, 4
  00598	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0059b	8b 54 01 10	 mov	 edx, DWORD PTR [ecx+eax+16]
  0059f	83 ea 01	 sub	 edx, 1
  005a2	0f b7 45 f0	 movzx	 eax, WORD PTR _time$[ebp+8]
  005a6	3b d0		 cmp	 edx, eax
  005a8	75 18		 jne	 SHORT $LN19@Timetick
  005aa	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  005ae	83 f8 3b	 cmp	 eax, 59			; 0000003bH
  005b1	75 0f		 jne	 SHORT $LN19@Timetick

; 121  : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 3);

  005b3	6a 03		 push	 3
  005b5	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  005ba	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  005bf	83 c4 08	 add	 esp, 8
$LN19@Timetick:

; 122  : 					if(HappyStruct[i].Hour == time.wHour && 0 == time.wMinute)

  005c2	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  005c5	c1 e0 04	 shl	 eax, 4
  005c8	0f b7 4d f0	 movzx	 ecx, WORD PTR _time$[ebp+8]
  005cc	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  005cf	39 4c 02 10	 cmp	 DWORD PTR [edx+eax+16], ecx
  005d3	75 17		 jne	 SHORT $LN18@Timetick
  005d5	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  005d9	85 c0		 test	 eax, eax
  005db	75 0f		 jne	 SHORT $LN18@Timetick

; 123  : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 2);

  005dd	6a 02		 push	 2
  005df	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  005e4	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  005e9	83 c4 08	 add	 esp, 8
$LN18@Timetick:

; 124  : 					if(HappyStruct[i].Hour == time.wHour && 1 == time.wMinute)

  005ec	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  005ef	c1 e0 04	 shl	 eax, 4
  005f2	0f b7 4d f0	 movzx	 ecx, WORD PTR _time$[ebp+8]
  005f6	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  005f9	39 4c 02 10	 cmp	 DWORD PTR [edx+eax+16], ecx
  005fd	75 18		 jne	 SHORT $LN17@Timetick
  005ff	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  00603	83 f8 01	 cmp	 eax, 1
  00606	75 0f		 jne	 SHORT $LN17@Timetick

; 125  : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 1);

  00608	6a 01		 push	 1
  0060a	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  0060f	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00614	83 c4 08	 add	 esp, 8
$LN17@Timetick:

; 126  : 			}

  00617	e9 07 02 00 00	 jmp	 $LN37@Timetick
$LN22@Timetick:

; 127  : 			else if(HappyStruct[i].Min == 1)

  0061c	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  0061f	c1 e0 04	 shl	 eax, 4
  00622	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00625	83 7c 01 14 01	 cmp	 DWORD PTR [ecx+eax+20], 1
  0062a	0f 85 ef 00 00
	00		 jne	 $LN15@Timetick

; 128  : 			{
; 129  : 					if(HappyStruct[i].Hour-1 == time.wHour && 56 == time.wMinute)

  00630	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  00633	c1 e0 04	 shl	 eax, 4
  00636	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00639	8b 54 01 10	 mov	 edx, DWORD PTR [ecx+eax+16]
  0063d	83 ea 01	 sub	 edx, 1
  00640	0f b7 45 f0	 movzx	 eax, WORD PTR _time$[ebp+8]
  00644	3b d0		 cmp	 edx, eax
  00646	75 18		 jne	 SHORT $LN14@Timetick
  00648	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  0064c	83 f8 38	 cmp	 eax, 56			; 00000038H
  0064f	75 0f		 jne	 SHORT $LN14@Timetick

; 130  : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 5);

  00651	6a 05		 push	 5
  00653	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  00658	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  0065d	83 c4 08	 add	 esp, 8
$LN14@Timetick:

; 131  : 					if(HappyStruct[i].Hour-1 == time.wHour && 57 == time.wMinute)

  00660	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  00663	c1 e0 04	 shl	 eax, 4
  00666	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00669	8b 54 01 10	 mov	 edx, DWORD PTR [ecx+eax+16]
  0066d	83 ea 01	 sub	 edx, 1
  00670	0f b7 45 f0	 movzx	 eax, WORD PTR _time$[ebp+8]
  00674	3b d0		 cmp	 edx, eax
  00676	75 18		 jne	 SHORT $LN13@Timetick
  00678	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  0067c	83 f8 39	 cmp	 eax, 57			; 00000039H
  0067f	75 0f		 jne	 SHORT $LN13@Timetick

; 132  : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 4);

  00681	6a 04		 push	 4
  00683	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  00688	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  0068d	83 c4 08	 add	 esp, 8
$LN13@Timetick:

; 133  : 					if(HappyStruct[i].Hour-1 == time.wHour && 58 == time.wMinute)

  00690	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  00693	c1 e0 04	 shl	 eax, 4
  00696	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00699	8b 54 01 10	 mov	 edx, DWORD PTR [ecx+eax+16]
  0069d	83 ea 01	 sub	 edx, 1
  006a0	0f b7 45 f0	 movzx	 eax, WORD PTR _time$[ebp+8]
  006a4	3b d0		 cmp	 edx, eax
  006a6	75 18		 jne	 SHORT $LN12@Timetick
  006a8	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  006ac	83 f8 3a	 cmp	 eax, 58			; 0000003aH
  006af	75 0f		 jne	 SHORT $LN12@Timetick

; 134  : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 3);

  006b1	6a 03		 push	 3
  006b3	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  006b8	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  006bd	83 c4 08	 add	 esp, 8
$LN12@Timetick:

; 135  : 					if(HappyStruct[i].Hour-1 == time.wHour && 59 == time.wMinute)

  006c0	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  006c3	c1 e0 04	 shl	 eax, 4
  006c6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006c9	8b 54 01 10	 mov	 edx, DWORD PTR [ecx+eax+16]
  006cd	83 ea 01	 sub	 edx, 1
  006d0	0f b7 45 f0	 movzx	 eax, WORD PTR _time$[ebp+8]
  006d4	3b d0		 cmp	 edx, eax
  006d6	75 18		 jne	 SHORT $LN11@Timetick
  006d8	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  006dc	83 f8 3b	 cmp	 eax, 59			; 0000003bH
  006df	75 0f		 jne	 SHORT $LN11@Timetick

; 136  : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 2);

  006e1	6a 02		 push	 2
  006e3	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  006e8	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  006ed	83 c4 08	 add	 esp, 8
$LN11@Timetick:

; 137  : 					if(HappyStruct[i].Hour == time.wHour && 0 == time.wMinute)

  006f0	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  006f3	c1 e0 04	 shl	 eax, 4
  006f6	0f b7 4d f0	 movzx	 ecx, WORD PTR _time$[ebp+8]
  006fa	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  006fd	39 4c 02 10	 cmp	 DWORD PTR [edx+eax+16], ecx
  00701	75 17		 jne	 SHORT $LN10@Timetick
  00703	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  00707	85 c0		 test	 eax, eax
  00709	75 0f		 jne	 SHORT $LN10@Timetick

; 138  : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 1);

  0070b	6a 01		 push	 1
  0070d	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  00712	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00717	83 c4 08	 add	 esp, 8
$LN10@Timetick:

; 139  : 			}

  0071a	e9 04 01 00 00	 jmp	 $LN37@Timetick
$LN15@Timetick:

; 140  : 			else if(HappyStruct[i].Min == 0)

  0071f	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  00722	c1 e0 04	 shl	 eax, 4
  00725	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00728	83 7c 01 14 00	 cmp	 DWORD PTR [ecx+eax+20], 0
  0072d	0f 85 f0 00 00
	00		 jne	 $LN37@Timetick

; 141  : 			{
; 142  : 					if(HappyStruct[i].Hour-1 == time.wHour && 55 == time.wMinute)

  00733	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  00736	c1 e0 04	 shl	 eax, 4
  00739	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0073c	8b 54 01 10	 mov	 edx, DWORD PTR [ecx+eax+16]
  00740	83 ea 01	 sub	 edx, 1
  00743	0f b7 45 f0	 movzx	 eax, WORD PTR _time$[ebp+8]
  00747	3b d0		 cmp	 edx, eax
  00749	75 18		 jne	 SHORT $LN7@Timetick
  0074b	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  0074f	83 f8 37	 cmp	 eax, 55			; 00000037H
  00752	75 0f		 jne	 SHORT $LN7@Timetick

; 143  : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 5);

  00754	6a 05		 push	 5
  00756	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  0075b	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00760	83 c4 08	 add	 esp, 8
$LN7@Timetick:

; 144  : 					if(HappyStruct[i].Hour-1 == time.wHour && 56 == time.wMinute)

  00763	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  00766	c1 e0 04	 shl	 eax, 4
  00769	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0076c	8b 54 01 10	 mov	 edx, DWORD PTR [ecx+eax+16]
  00770	83 ea 01	 sub	 edx, 1
  00773	0f b7 45 f0	 movzx	 eax, WORD PTR _time$[ebp+8]
  00777	3b d0		 cmp	 edx, eax
  00779	75 18		 jne	 SHORT $LN6@Timetick
  0077b	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  0077f	83 f8 38	 cmp	 eax, 56			; 00000038H
  00782	75 0f		 jne	 SHORT $LN6@Timetick

; 145  : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 4);

  00784	6a 04		 push	 4
  00786	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  0078b	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00790	83 c4 08	 add	 esp, 8
$LN6@Timetick:

; 146  : 					if(HappyStruct[i].Hour-1 == time.wHour && 57 == time.wMinute)

  00793	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  00796	c1 e0 04	 shl	 eax, 4
  00799	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0079c	8b 54 01 10	 mov	 edx, DWORD PTR [ecx+eax+16]
  007a0	83 ea 01	 sub	 edx, 1
  007a3	0f b7 45 f0	 movzx	 eax, WORD PTR _time$[ebp+8]
  007a7	3b d0		 cmp	 edx, eax
  007a9	75 18		 jne	 SHORT $LN5@Timetick
  007ab	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  007af	83 f8 39	 cmp	 eax, 57			; 00000039H
  007b2	75 0f		 jne	 SHORT $LN5@Timetick

; 147  : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 3);

  007b4	6a 03		 push	 3
  007b6	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  007bb	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  007c0	83 c4 08	 add	 esp, 8
$LN5@Timetick:

; 148  : 					if(HappyStruct[i].Hour-1 == time.wHour && 58 == time.wMinute)

  007c3	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  007c6	c1 e0 04	 shl	 eax, 4
  007c9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007cc	8b 54 01 10	 mov	 edx, DWORD PTR [ecx+eax+16]
  007d0	83 ea 01	 sub	 edx, 1
  007d3	0f b7 45 f0	 movzx	 eax, WORD PTR _time$[ebp+8]
  007d7	3b d0		 cmp	 edx, eax
  007d9	75 18		 jne	 SHORT $LN4@Timetick
  007db	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  007df	83 f8 3a	 cmp	 eax, 58			; 0000003aH
  007e2	75 0f		 jne	 SHORT $LN4@Timetick

; 149  : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 2);

  007e4	6a 02		 push	 2
  007e6	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  007eb	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  007f0	83 c4 08	 add	 esp, 8
$LN4@Timetick:

; 150  : 					if(HappyStruct[i].Hour-1 == time.wHour && 59 == time.wMinute)

  007f3	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  007f6	c1 e0 04	 shl	 eax, 4
  007f9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007fc	8b 54 01 10	 mov	 edx, DWORD PTR [ecx+eax+16]
  00800	83 ea 01	 sub	 edx, 1
  00803	0f b7 45 f0	 movzx	 eax, WORD PTR _time$[ebp+8]
  00807	3b d0		 cmp	 edx, eax
  00809	75 18		 jne	 SHORT $LN37@Timetick
  0080b	0f b7 45 f2	 movzx	 eax, WORD PTR _time$[ebp+10]
  0080f	83 f8 3b	 cmp	 eax, 59			; 0000003bH
  00812	75 0f		 jne	 SHORT $LN37@Timetick

; 151  : 						MessaageAllGlobal(ExConfig.MessageConfig.HappyHour, 1);

  00814	6a 01		 push	 1
  00816	68 04 0a 00 00	 push	 OFFSET ?ExConfig@@3VcExConfigs@@A+2564
  0081b	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00820	83 c4 08	 add	 esp, 8
$LN37@Timetick:

; 152  : 			
; 153  : 			}
; 154  : #endif
; 155  : 			if(HappyStruct[i].Hour == time.wHour && HappyStruct[i].Min == time.wMinute)

  00823	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  00826	c1 e0 04	 shl	 eax, 4
  00829	0f b7 4d f0	 movzx	 ecx, WORD PTR _time$[ebp+8]
  0082d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00830	39 4c 02 10	 cmp	 DWORD PTR [edx+eax+16], ecx
  00834	75 54		 jne	 SHORT $LN2@Timetick
  00836	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  00839	c1 e0 04	 shl	 eax, 4
  0083c	0f b7 4d f2	 movzx	 ecx, WORD PTR _time$[ebp+10]
  00840	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00843	39 4c 02 14	 cmp	 DWORD PTR [edx+eax+20], ecx
  00847	75 41		 jne	 SHORT $LN2@Timetick

; 156  : 			{
; 157  : 				this->StartHappyHour = true;

  00849	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0084c	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 158  : 				MessaageAllGlobal(g_ExText.GetText(99));

  00850	6a 63		 push	 99			; 00000063H
  00852	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExText@@3VCExText@@A ; g_ExText
  00857	e8 00 00 00 00	 call	 ?GetText@CExText@@QAEPADH@Z ; CExText::GetText
  0085c	50		 push	 eax
  0085d	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00862	83 c4 04	 add	 esp, 4

; 159  : 				MessaageAllGlobal(g_ExText.GetText(100),PlusExp,PlusDrop);

  00865	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00868	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0086b	51		 push	 ecx
  0086c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0086f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00872	50		 push	 eax
  00873	6a 64		 push	 100			; 00000064H
  00875	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExText@@3VCExText@@A ; g_ExText
  0087a	e8 00 00 00 00	 call	 ?GetText@CExText@@QAEPADH@Z ; CExText::GetText
  0087f	50		 push	 eax
  00880	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00885	83 c4 0c	 add	 esp, 12			; 0000000cH

; 160  : 				break;

  00888	eb 49		 jmp	 SHORT $LN47@Timetick
$LN2@Timetick:

; 161  : 			}
; 162  : 			if(HappyStruct[i].EndHour == time.wHour && HappyStruct[i].EndMin == time.wMinute)

  0088a	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  0088d	c1 e0 04	 shl	 eax, 4
  00890	0f b7 4d f0	 movzx	 ecx, WORD PTR _time$[ebp+8]
  00894	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00897	39 4c 02 18	 cmp	 DWORD PTR [edx+eax+24], ecx
  0089b	75 31		 jne	 SHORT $LN1@Timetick
  0089d	8b 45 e4	 mov	 eax, DWORD PTR _i$219713[ebp]
  008a0	c1 e0 04	 shl	 eax, 4
  008a3	0f b7 4d f2	 movzx	 ecx, WORD PTR _time$[ebp+10]
  008a7	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  008aa	39 4c 02 1c	 cmp	 DWORD PTR [edx+eax+28], ecx
  008ae	75 1e		 jne	 SHORT $LN1@Timetick

; 163  : 			{
; 164  : 				MessaageAllGlobal(g_ExText.GetText(101));

  008b0	6a 65		 push	 101			; 00000065H
  008b2	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExText@@3VCExText@@A ; g_ExText
  008b7	e8 00 00 00 00	 call	 ?GetText@CExText@@QAEPADH@Z ; CExText::GetText
  008bc	50		 push	 eax
  008bd	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  008c2	83 c4 04	 add	 esp, 4

; 165  : 				this->StartHappyHour = false;

  008c5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  008c8	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 166  : 				break;

  008cc	eb 05		 jmp	 SHORT $LN47@Timetick
$LN1@Timetick:

; 167  : 			}
; 168  : 		}

  008ce	e9 d8 f9 ff ff	 jmp	 $LN44@Timetick
$LN47@Timetick:

; 169  : 	}
; 170  : }

  008d3	5f		 pop	 edi
  008d4	5e		 pop	 esi
  008d5	5b		 pop	 ebx
  008d6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  008d9	33 cd		 xor	 ecx, ebp
  008db	e8 00 00 00 00	 call	 @__security_check_cookie@4
  008e0	8b e5		 mov	 esp, ebp
  008e2	5d		 pop	 ebp
  008e3	c3		 ret	 0
?Timetick@cHappyHour@@QAEXXZ ENDP			; cHappyHour::Timetick
_TEXT	ENDS
PUBLIC	?UserBonusExp@cHappyHour@@QAEXAA_J@Z		; cHappyHour::UserBonusExp
EXTRN	__alldiv:PROC
EXTRN	__allmul:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Experience$ = 8					; size = 4
?UserBonusExp@cHappyHour@@QAEXAA_J@Z PROC		; cHappyHour::UserBonusExp
; _this$ = ecx

; 173  : {

  008f0	55		 push	 ebp
  008f1	8b ec		 mov	 ebp, esp
  008f3	83 ec 44	 sub	 esp, 68			; 00000044H
  008f6	53		 push	 ebx
  008f7	56		 push	 esi
  008f8	57		 push	 edi
  008f9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 174  : 	if(!this->Enable || !this->StartHappyHour) return;

  008fc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  008ff	83 38 00	 cmp	 DWORD PTR [eax], 0
  00902	74 0b		 je	 SHORT $LN1@UserBonusE
  00904	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00907	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  0090b	85 c9		 test	 ecx, ecx
  0090d	75 02		 jne	 SHORT $LN2@UserBonusE
$LN1@UserBonusE:
  0090f	eb 33		 jmp	 SHORT $LN3@UserBonusE
$LN2@UserBonusE:

; 175  : 
; 176  : 	Experience += ( Experience * this->PlusExp ) / 100;

  00911	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00914	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00917	99		 cdq
  00918	8b 4d 08	 mov	 ecx, DWORD PTR _Experience$[ebp]
  0091b	52		 push	 edx
  0091c	50		 push	 eax
  0091d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00920	52		 push	 edx
  00921	8b 01		 mov	 eax, DWORD PTR [ecx]
  00923	50		 push	 eax
  00924	e8 00 00 00 00	 call	 __allmul
  00929	6a 00		 push	 0
  0092b	6a 64		 push	 100			; 00000064H
  0092d	52		 push	 edx
  0092e	50		 push	 eax
  0092f	e8 00 00 00 00	 call	 __alldiv
  00934	8b 4d 08	 mov	 ecx, DWORD PTR _Experience$[ebp]
  00937	03 01		 add	 eax, DWORD PTR [ecx]
  00939	13 51 04	 adc	 edx, DWORD PTR [ecx+4]
  0093c	8b 4d 08	 mov	 ecx, DWORD PTR _Experience$[ebp]
  0093f	89 01		 mov	 DWORD PTR [ecx], eax
  00941	89 51 04	 mov	 DWORD PTR [ecx+4], edx
$LN3@UserBonusE:

; 177  : }

  00944	5f		 pop	 edi
  00945	5e		 pop	 esi
  00946	5b		 pop	 ebx
  00947	8b e5		 mov	 esp, ebp
  00949	5d		 pop	 ebp
  0094a	c2 04 00	 ret	 4
?UserBonusExp@cHappyHour@@QAEXAA_J@Z ENDP		; cHappyHour::UserBonusExp
_TEXT	ENDS
PUBLIC	__real@4059000000000000
PUBLIC	?UserBonusZen@cHappyHour@@QAEXAAM@Z		; cHappyHour::UserBonusZen
EXTRN	__fltused:DWORD
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_money$ = 8						; size = 4
?UserBonusZen@cHappyHour@@QAEXAAM@Z PROC		; cHappyHour::UserBonusZen
; _this$ = ecx

; 180  : {

  00950	55		 push	 ebp
  00951	8b ec		 mov	 ebp, esp
  00953	83 ec 44	 sub	 esp, 68			; 00000044H
  00956	53		 push	 ebx
  00957	56		 push	 esi
  00958	57		 push	 edi
  00959	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 181  : 	if(!this->Enable || !this->StartHappyHour) return;

  0095c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0095f	83 38 00	 cmp	 DWORD PTR [eax], 0
  00962	74 0b		 je	 SHORT $LN1@UserBonusZ
  00964	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00967	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  0096b	85 c9		 test	 ecx, ecx
  0096d	75 02		 jne	 SHORT $LN2@UserBonusZ
$LN1@UserBonusZ:
  0096f	eb 1b		 jmp	 SHORT $LN3@UserBonusZ
$LN2@UserBonusZ:

; 182  : 
; 183  : 	money += ( money * this->PlusDrop ) / 100;

  00971	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00974	db 40 08	 fild	 DWORD PTR [eax+8]
  00977	8b 4d 08	 mov	 ecx, DWORD PTR _money$[ebp]
  0097a	d8 09		 fmul	 DWORD PTR [ecx]
  0097c	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4059000000000000
  00982	8b 55 08	 mov	 edx, DWORD PTR _money$[ebp]
  00985	d8 02		 fadd	 DWORD PTR [edx]
  00987	8b 45 08	 mov	 eax, DWORD PTR _money$[ebp]
  0098a	d9 18		 fstp	 DWORD PTR [eax]
$LN3@UserBonusZ:

; 184  : }

  0098c	5f		 pop	 edi
  0098d	5e		 pop	 esi
  0098e	5b		 pop	 ebx
  0098f	8b e5		 mov	 esp, ebp
  00991	5d		 pop	 ebp
  00992	c2 04 00	 ret	 4
?UserBonusZen@cHappyHour@@QAEXAAM@Z ENDP		; cHappyHour::UserBonusZen
_TEXT	ENDS
END
