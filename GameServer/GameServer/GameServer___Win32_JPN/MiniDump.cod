; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\MiniDump.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?PreviousExceptionFilter@@3P6GJPAU_EXCEPTION_POINTERS@@@ZA ; PreviousExceptionFilter
_BSS	SEGMENT
?PreviousExceptionFilter@@3P6GJPAU_EXCEPTION_POINTERS@@@ZA DD 01H DUP (?) ; PreviousExceptionFilter
_BSS	ENDS
PUBLIC	??_C@_0BH@IILLLNL@?$CFd?9?$CFd?9?$CFd_?$CFdh?$CFdm?$CFds?4dmp?$AA@ ; `string'
PUBLIC	??_C@_0BC@MNIKNFKD@MiniDumpWriteDump?$AA@	; `string'
PUBLIC	??_C@_0M@IBNEFJCG@DBGHELP?4DLL?$AA@		; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?UnHandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z ; UnHandledExceptionFilter
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__GetCurrentProcess@0:PROC
EXTRN	__imp__GetCurrentProcessId@0:PROC
EXTRN	__imp__GetCurrentThreadId@0:PROC
EXTRN	__imp__CreateFileA@28:PROC
EXTRN	__snprintf:PROC
EXTRN	__imp__GetLocalTime@4:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__LoadLibraryA@4:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_0BH@IILLLNL@?$CFd?9?$CFd?9?$CFd_?$CFdh?$CFdm?$CFds?4dmp?$AA@
; File d:\projects\exteam6.3\source\gameserver\gameserver\minidump.cpp
CONST	SEGMENT
??_C@_0BH@IILLLNL@?$CFd?9?$CFd?9?$CFd_?$CFdh?$CFdm?$CFds?4dmp?$AA@ DB '%d'
	DB	'-%d-%d_%dh%dm%ds.dmp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MNIKNFKD@MiniDumpWriteDump?$AA@
CONST	SEGMENT
??_C@_0BC@MNIKNFKD@MiniDumpWriteDump?$AA@ DB 'MiniDumpWriteDump', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IBNEFJCG@DBGHELP?4DLL?$AA@
CONST	SEGMENT
??_C@_0M@IBNEFJCG@DBGHELP?4DLL?$AA@ DB 'DBGHELP.DLL', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_Success$206431 = -308					; size = 4
_MiniDumpExceptionInfo$206430 = -304			; size = 12
_FileHandle$206426 = -292				; size = 4
_SystemTime$206424 = -288				; size = 16
_DumpPath$206423 = -272					; size = 260
_Dump$206419 = -12					; size = 4
_DllHandle$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
_exceptionInfo$ = 8					; size = 4
?UnHandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z PROC ; UnHandledExceptionFilter

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 74 01 00
	00		 sub	 esp, 372		; 00000174H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 19   :     HMODULE    DllHandle        = NULL;

  00016	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _DllHandle$[ebp], 0

; 20   : 
; 21   :     // Windows 2000 ???? ?? DBGHELP? ???? ??? ??? ??.
; 22   :     DllHandle                = LoadLibrary(_T("DBGHELP.DLL"));

  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IBNEFJCG@DBGHELP?4DLL?$AA@
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryA@4
  00028	89 45 f8	 mov	 DWORD PTR _DllHandle$[ebp], eax

; 23   : 
; 24   :     if (DllHandle)

  0002b	83 7d f8 00	 cmp	 DWORD PTR _DllHandle$[ebp], 0
  0002f	0f 84 31 01 00
	00		 je	 $LN4@UnHandledE

; 25   :     {
; 26   :         MINIDUMPWRITEDUMP Dump = (MINIDUMPWRITEDUMP) GetProcAddress(DllHandle, "MiniDumpWriteDump");

  00035	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MNIKNFKD@MiniDumpWriteDump?$AA@
  0003a	8b 45 f8	 mov	 eax, DWORD PTR _DllHandle$[ebp]
  0003d	50		 push	 eax
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  00044	89 45 f4	 mov	 DWORD PTR _Dump$206419[ebp], eax

; 27   : 
; 28   :         if (Dump)

  00047	83 7d f4 00	 cmp	 DWORD PTR _Dump$206419[ebp], 0
  0004b	0f 84 15 01 00
	00		 je	 $LN4@UnHandledE

; 29   :         {
; 30   :             TCHAR        DumpPath[MAX_PATH] = {0,};

  00051	c6 85 f0 fe ff
	ff 00		 mov	 BYTE PTR _DumpPath$206423[ebp], 0
  00058	68 03 01 00 00	 push	 259			; 00000103H
  0005d	6a 00		 push	 0
  0005f	8d 85 f1 fe ff
	ff		 lea	 eax, DWORD PTR _DumpPath$206423[ebp+1]
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 _memset
  0006b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 31   :             SYSTEMTIME    SystemTime;
; 32   : 
; 33   :             GetLocalTime(&SystemTime);

  0006e	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _SystemTime$206424[ebp]
  00074	50		 push	 eax
  00075	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 34   : 
; 35   :             _sntprintf(DumpPath, MAX_PATH, _T("%d-%d-%d_%dh%dm%ds.dmp"),
; 36   :                 SystemTime.wYear,
; 37   :                 SystemTime.wMonth,
; 38   :                 SystemTime.wDay,
; 39   :                 SystemTime.wHour,
; 40   :                 SystemTime.wMinute,
; 41   :                 SystemTime.wSecond);

  0007b	0f b7 85 ec fe
	ff ff		 movzx	 eax, WORD PTR _SystemTime$206424[ebp+12]
  00082	50		 push	 eax
  00083	0f b7 8d ea fe
	ff ff		 movzx	 ecx, WORD PTR _SystemTime$206424[ebp+10]
  0008a	51		 push	 ecx
  0008b	0f b7 95 e8 fe
	ff ff		 movzx	 edx, WORD PTR _SystemTime$206424[ebp+8]
  00092	52		 push	 edx
  00093	0f b7 85 e6 fe
	ff ff		 movzx	 eax, WORD PTR _SystemTime$206424[ebp+6]
  0009a	50		 push	 eax
  0009b	0f b7 8d e2 fe
	ff ff		 movzx	 ecx, WORD PTR _SystemTime$206424[ebp+2]
  000a2	51		 push	 ecx
  000a3	0f b7 95 e0 fe
	ff ff		 movzx	 edx, WORD PTR _SystemTime$206424[ebp]
  000aa	52		 push	 edx
  000ab	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@IILLLNL@?$CFd?9?$CFd?9?$CFd_?$CFdh?$CFdm?$CFds?4dmp?$AA@
  000b0	68 04 01 00 00	 push	 260			; 00000104H
  000b5	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _DumpPath$206423[ebp]
  000bb	50		 push	 eax
  000bc	e8 00 00 00 00	 call	 __snprintf
  000c1	83 c4 24	 add	 esp, 36			; 00000024H

; 42   :            
; 43   :             HANDLE FileHandle = CreateFile(
; 44   :                 DumpPath,
; 45   :                 GENERIC_WRITE,
; 46   :                 FILE_SHARE_WRITE,
; 47   :                 NULL, CREATE_ALWAYS,
; 48   :                 FILE_ATTRIBUTE_NORMAL,
; 49   :                 NULL);

  000c4	6a 00		 push	 0
  000c6	68 80 00 00 00	 push	 128			; 00000080H
  000cb	6a 02		 push	 2
  000cd	6a 00		 push	 0
  000cf	6a 02		 push	 2
  000d1	68 00 00 00 40	 push	 1073741824		; 40000000H
  000d6	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _DumpPath$206423[ebp]
  000dc	50		 push	 eax
  000dd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateFileA@28
  000e3	89 85 dc fe ff
	ff		 mov	 DWORD PTR _FileHandle$206426[ebp], eax

; 50   : 
; 51   :             if (FileHandle != INVALID_HANDLE_VALUE)

  000e9	83 bd dc fe ff
	ff ff		 cmp	 DWORD PTR _FileHandle$206426[ebp], -1
  000f0	74 67		 je	 SHORT $LN2@UnHandledE

; 52   :             {
; 53   :                 _MINIDUMP_EXCEPTION_INFORMATION MiniDumpExceptionInfo;
; 54   :                
; 55   :                 MiniDumpExceptionInfo.ThreadId            = GetCurrentThreadId();

  000f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentThreadId@0
  000f8	89 85 d0 fe ff
	ff		 mov	 DWORD PTR _MiniDumpExceptionInfo$206430[ebp], eax

; 56   :                 MiniDumpExceptionInfo.ExceptionPointers    = exceptionInfo;

  000fe	8b 45 08	 mov	 eax, DWORD PTR _exceptionInfo$[ebp]
  00101	89 85 d4 fe ff
	ff		 mov	 DWORD PTR _MiniDumpExceptionInfo$206430[ebp+4], eax

; 57   :                 MiniDumpExceptionInfo.ClientPointers    = NULL;

  00107	c7 85 d8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _MiniDumpExceptionInfo$206430[ebp+8], 0

; 58   : 
; 59   :                 BOOL Success = Dump(
; 60   :                     GetCurrentProcess(),
; 61   :                     GetCurrentProcessId(),
; 62   :                     FileHandle,
; 63   :                     (_MINIDUMP_TYPE)(MiniDumpWithUnloadedModules+
; 64   : 					MiniDumpWithHandleData+
; 65   : 					MiniDumpWithFullMemory), //webzen...
; 66   :                     &MiniDumpExceptionInfo,
; 67   :                     NULL,
; 68   :                     NULL);

  00111	6a 00		 push	 0
  00113	6a 00		 push	 0
  00115	8d 85 d0 fe ff
	ff		 lea	 eax, DWORD PTR _MiniDumpExceptionInfo$206430[ebp]
  0011b	50		 push	 eax
  0011c	6a 26		 push	 38			; 00000026H
  0011e	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR _FileHandle$206426[ebp]
  00124	51		 push	 ecx
  00125	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentProcessId@0
  0012b	50		 push	 eax
  0012c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentProcess@0
  00132	50		 push	 eax
  00133	ff 55 f4	 call	 DWORD PTR _Dump$206419[ebp]
  00136	89 85 cc fe ff
	ff		 mov	 DWORD PTR _Success$206431[ebp], eax

; 69   : 
; 70   :                 if (Success)

  0013c	83 bd cc fe ff
	ff 00		 cmp	 DWORD PTR _Success$206431[ebp], 0
  00143	74 14		 je	 SHORT $LN2@UnHandledE

; 71   :                 {
; 72   :                     CloseHandle(FileHandle);

  00145	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR _FileHandle$206426[ebp]
  0014b	50		 push	 eax
  0014c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 73   : 
; 74   :                     return EXCEPTION_EXECUTE_HANDLER;

  00152	b8 01 00 00 00	 mov	 eax, 1
  00157	eb 0f		 jmp	 SHORT $LN5@UnHandledE
$LN2@UnHandledE:

; 75   :                 }
; 76   :             }
; 77   : 
; 78   :             CloseHandle(FileHandle);

  00159	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR _FileHandle$206426[ebp]
  0015f	50		 push	 eax
  00160	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
$LN4@UnHandledE:

; 79   :         }
; 80   :     }
; 81   : 
; 82   :     return EXCEPTION_CONTINUE_SEARCH;

  00166	33 c0		 xor	 eax, eax
$LN5@UnHandledE:

; 83   : }

  00168	5f		 pop	 edi
  00169	5e		 pop	 esi
  0016a	5b		 pop	 ebx
  0016b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0016e	33 cd		 xor	 ecx, ebp
  00170	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00175	8b e5		 mov	 esp, ebp
  00177	5d		 pop	 ebp
  00178	c2 04 00	 ret	 4
?UnHandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z ENDP ; UnHandledExceptionFilter
_TEXT	ENDS
PUBLIC	?Begin@CMiniDump@@SAHXZ				; CMiniDump::Begin
EXTRN	__imp__SetUnhandledExceptionFilter@4:PROC
EXTRN	__imp__SetErrorMode@4:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
?Begin@CMiniDump@@SAHXZ PROC				; CMiniDump::Begin

; 86   : {

  00180	55		 push	 ebp
  00181	8b ec		 mov	 ebp, esp
  00183	83 ec 40	 sub	 esp, 64			; 00000040H
  00186	53		 push	 ebx
  00187	56		 push	 esi
  00188	57		 push	 edi

; 87   :     SetErrorMode(SEM_FAILCRITICALERRORS);

  00189	6a 01		 push	 1
  0018b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetErrorMode@4

; 88   : 
; 89   :     PreviousExceptionFilter = SetUnhandledExceptionFilter(UnHandledExceptionFilter);

  00191	68 00 00 00 00	 push	 OFFSET ?UnHandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z ; UnHandledExceptionFilter
  00196	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetUnhandledExceptionFilter@4
  0019c	a3 00 00 00 00	 mov	 DWORD PTR ?PreviousExceptionFilter@@3P6GJPAU_EXCEPTION_POINTERS@@@ZA, eax ; PreviousExceptionFilter

; 90   : 
; 91   :     return true;

  001a1	b8 01 00 00 00	 mov	 eax, 1

; 92   : }

  001a6	5f		 pop	 edi
  001a7	5e		 pop	 esi
  001a8	5b		 pop	 ebx
  001a9	8b e5		 mov	 esp, ebp
  001ab	5d		 pop	 ebp
  001ac	c3		 ret	 0
?Begin@CMiniDump@@SAHXZ ENDP				; CMiniDump::Begin
_TEXT	ENDS
PUBLIC	?End@CMiniDump@@SAHXZ				; CMiniDump::End
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
?End@CMiniDump@@SAHXZ PROC				; CMiniDump::End

; 95   : {

  001b0	55		 push	 ebp
  001b1	8b ec		 mov	 ebp, esp
  001b3	83 ec 40	 sub	 esp, 64			; 00000040H
  001b6	53		 push	 ebx
  001b7	56		 push	 esi
  001b8	57		 push	 edi

; 96   :     SetUnhandledExceptionFilter(PreviousExceptionFilter);

  001b9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PreviousExceptionFilter@@3P6GJPAU_EXCEPTION_POINTERS@@@ZA ; PreviousExceptionFilter
  001be	50		 push	 eax
  001bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetUnhandledExceptionFilter@4

; 97   : 
; 98   :     return true;

  001c5	b8 01 00 00 00	 mov	 eax, 1

; 99   : }

  001ca	5f		 pop	 edi
  001cb	5e		 pop	 esi
  001cc	5b		 pop	 ebx
  001cd	8b e5		 mov	 esp, ebp
  001cf	5d		 pop	 ebp
  001d0	c3		 ret	 0
?End@CMiniDump@@SAHXZ ENDP				; CMiniDump::End
_TEXT	ENDS
END
