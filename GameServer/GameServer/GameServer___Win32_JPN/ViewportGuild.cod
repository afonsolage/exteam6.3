; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\ViewportGuild.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_7CViewportGuild@@6B@				; CViewportGuild::`vftable'
PUBLIC	??0CViewportGuild@@QAE@XZ			; CViewportGuild::CViewportGuild
PUBLIC	??_R4CViewportGuild@@6B@			; CViewportGuild::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCViewportGuild@@@8			; CViewportGuild `RTTI Type Descriptor'
PUBLIC	??_R3CViewportGuild@@8				; CViewportGuild::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CViewportGuild@@8				; CViewportGuild::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CViewportGuild@@8			; CViewportGuild::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECViewportGuild@@UAEPAXI@Z:PROC		; CViewportGuild::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CViewportGuild@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\viewportguild.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CViewportGuild@@8 DD FLAT:??_R0?AVCViewportGuild@@@8 ; CViewportGuild::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CViewportGuild@@8
rdata$r	ENDS
;	COMDAT ??_R2CViewportGuild@@8
rdata$r	SEGMENT
??_R2CViewportGuild@@8 DD FLAT:??_R1A@?0A@EA@CViewportGuild@@8 ; CViewportGuild::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CViewportGuild@@8
rdata$r	SEGMENT
??_R3CViewportGuild@@8 DD 00H				; CViewportGuild::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CViewportGuild@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCViewportGuild@@@8
_DATA	SEGMENT
??_R0?AVCViewportGuild@@@8 DD FLAT:??_7type_info@@6B@	; CViewportGuild `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCViewportGuild@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CViewportGuild@@6B@
rdata$r	SEGMENT
??_R4CViewportGuild@@6B@ DD 00H				; CViewportGuild::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCViewportGuild@@@8
	DD	FLAT:??_R3CViewportGuild@@8
rdata$r	ENDS
;	COMDAT ??_7CViewportGuild@@6B@
CONST	SEGMENT
??_7CViewportGuild@@6B@ DD FLAT:??_R4CViewportGuild@@6B@ ; CViewportGuild::`vftable'
	DD	FLAT:??_ECViewportGuild@@UAEPAXI@Z
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CViewportGuild@@QAE@XZ PROC				; CViewportGuild::CViewportGuild
; _this$ = ecx

; 6    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CViewportGuild@@6B@

; 7    : 	return;
; 8    : }

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CViewportGuild@@QAE@XZ ENDP				; CViewportGuild::CViewportGuild
_TEXT	ENDS
PUBLIC	??1CViewportGuild@@UAE@XZ			; CViewportGuild::~CViewportGuild
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCViewportGuild@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCViewportGuild@@UAEPAXI@Z PROC			; CViewportGuild::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CViewportGuild@@UAE@XZ ; CViewportGuild::~CViewportGuild
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCViewportGuild@@UAEPAXI@Z ENDP			; CViewportGuild::`scalar deleting destructor'
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CViewportGuild@@UAE@XZ PROC				; CViewportGuild::~CViewportGuild
; _this$ = ecx

; 11   : {

  00020	55		 push	 ebp
  00021	8b ec		 mov	 ebp, esp
  00023	83 ec 44	 sub	 esp, 68			; 00000044H
  00026	53		 push	 ebx
  00027	56		 push	 esi
  00028	57		 push	 edi
  00029	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CViewportGuild@@6B@

; 12   : 	return;
; 13   : }

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??1CViewportGuild@@UAE@XZ ENDP				; CViewportGuild::~CViewportGuild
_TEXT	ENDS
PUBLIC	?Init@CViewportGuild@@QAEXXZ			; CViewportGuild::Init
EXTRN	_memset:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@CViewportGuild@@QAEXXZ PROC			; CViewportGuild::Init
; _this$ = ecx

; 16   : {

  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
  00043	83 ec 44	 sub	 esp, 68			; 00000044H
  00046	53		 push	 ebx
  00047	56		 push	 esi
  00048	57		 push	 edi
  00049	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 17   : 	memset(&this->m_GuildNumber , 0, sizeof(this->m_GuildNumber ) );

  0004c	68 96 00 00 00	 push	 150			; 00000096H
  00051	6a 00		 push	 0
  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	83 c0 04	 add	 eax, 4
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 _memset
  0005f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 18   : 	this->m_GuildCount =0;

  00062	33 c0		 xor	 eax, eax
  00064	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	66 89 81 9a 00
	00 00		 mov	 WORD PTR [ecx+154], ax

; 19   : }

  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
?Init@CViewportGuild@@QAEXXZ ENDP			; CViewportGuild::Init
_TEXT	ENDS
PUBLIC	?Add@CViewportGuild@@QAEHHH@Z			; CViewportGuild::Add
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_n$ = -12						; size = 4
_blank$ = -8						; size = 4
_this$ = -4						; size = 4
_number$ = 8						; size = 4
_TargetObj$ = 12					; size = 4
?Add@CViewportGuild@@QAEHHH@Z PROC			; CViewportGuild::Add
; _this$ = ecx

; 22   : {

  00080	55		 push	 ebp
  00081	8b ec		 mov	 ebp, esp
  00083	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00086	53		 push	 ebx
  00087	56		 push	 esi
  00088	57		 push	 edi
  00089	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 23   : 	int blank=-1;

  0008c	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR _blank$[ebp], -1

; 24   : 	int n;
; 25   : 
; 26   : 	if (number < 1)

  00093	83 7d 08 01	 cmp	 DWORD PTR _number$[ebp], 1
  00097	7d 07		 jge	 SHORT $LN10@Add

; 27   : 	{
; 28   : 		return 0;

  00099	33 c0		 xor	 eax, eax
  0009b	e9 94 00 00 00	 jmp	 $LN11@Add
$LN10@Add:

; 29   : 	}
; 30   : 
; 31   : 	for (n=0;n<MAX_VIEWPORT;n++)

  000a0	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _n$[ebp], 0
  000a7	eb 09		 jmp	 SHORT $LN9@Add
$LN8@Add:
  000a9	8b 45 f4	 mov	 eax, DWORD PTR _n$[ebp]
  000ac	83 c0 01	 add	 eax, 1
  000af	89 45 f4	 mov	 DWORD PTR _n$[ebp], eax
$LN9@Add:
  000b2	83 7d f4 4b	 cmp	 DWORD PTR _n$[ebp], 75	; 0000004bH
  000b6	7d 33		 jge	 SHORT $LN7@Add

; 32   : 	{
; 33   : 		if (this->m_GuildNumber[n] > 0)

  000b8	8b 45 f4	 mov	 eax, DWORD PTR _n$[ebp]
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	0f bf 54 41 04	 movsx	 edx, WORD PTR [ecx+eax*2+4]
  000c3	85 d2		 test	 edx, edx
  000c5	7e 16		 jle	 SHORT $LN6@Add

; 34   : 		{
; 35   : 			if (this->m_GuildNumber[n] == number)

  000c7	8b 45 f4	 mov	 eax, DWORD PTR _n$[ebp]
  000ca	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	0f bf 54 41 04	 movsx	 edx, WORD PTR [ecx+eax*2+4]
  000d2	3b 55 08	 cmp	 edx, DWORD PTR _number$[ebp]
  000d5	75 04		 jne	 SHORT $LN5@Add

; 36   : 			{
; 37   : 				return 0;

  000d7	33 c0		 xor	 eax, eax
  000d9	eb 59		 jmp	 SHORT $LN11@Add
$LN5@Add:

; 38   : 			}
; 39   : 		}

  000db	eb 0c		 jmp	 SHORT $LN4@Add
$LN6@Add:

; 40   : 		else if (blank < 0)

  000dd	83 7d f8 00	 cmp	 DWORD PTR _blank$[ebp], 0
  000e1	7d 06		 jge	 SHORT $LN4@Add

; 41   : 		{
; 42   : 			blank=n;

  000e3	8b 45 f4	 mov	 eax, DWORD PTR _n$[ebp]
  000e6	89 45 f8	 mov	 DWORD PTR _blank$[ebp], eax
$LN4@Add:

; 43   : 		}
; 44   : 	}

  000e9	eb be		 jmp	 SHORT $LN8@Add
$LN7@Add:

; 45   : 
; 46   : 	if (blank < 0)

  000eb	83 7d f8 00	 cmp	 DWORD PTR _blank$[ebp], 0
  000ef	7d 04		 jge	 SHORT $LN2@Add

; 47   : 	{
; 48   : 		return 0;

  000f1	33 c0		 xor	 eax, eax
  000f3	eb 3f		 jmp	 SHORT $LN11@Add
$LN2@Add:

; 49   : 	}
; 50   : 
; 51   : 	if (this->m_GuildNumber[blank] == 0)

  000f5	8b 45 f8	 mov	 eax, DWORD PTR _blank$[ebp]
  000f8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000fb	0f bf 54 41 04	 movsx	 edx, WORD PTR [ecx+eax*2+4]
  00100	85 d2		 test	 edx, edx
  00102	75 2e		 jne	 SHORT $LN1@Add

; 52   : 	{
; 53   : 		this->m_GuildNumber[blank]=number;

  00104	8b 45 f8	 mov	 eax, DWORD PTR _blank$[ebp]
  00107	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010a	66 8b 55 08	 mov	 dx, WORD PTR _number$[ebp]
  0010e	66 89 54 41 04	 mov	 WORD PTR [ecx+eax*2+4], dx

; 54   : 		this->m_GuildCount ++;

  00113	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00116	66 8b 88 9a 00
	00 00		 mov	 cx, WORD PTR [eax+154]
  0011d	66 83 c1 01	 add	 cx, 1
  00121	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00124	66 89 8a 9a 00
	00 00		 mov	 WORD PTR [edx+154], cx

; 55   : 		return 1;

  0012b	b8 01 00 00 00	 mov	 eax, 1
  00130	eb 02		 jmp	 SHORT $LN11@Add
$LN1@Add:

; 56   : 	}
; 57   : 	return 0;

  00132	33 c0		 xor	 eax, eax
$LN11@Add:

; 58   : }

  00134	5f		 pop	 edi
  00135	5e		 pop	 esi
  00136	5b		 pop	 ebx
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 08 00	 ret	 8
?Add@CViewportGuild@@QAEHHH@Z ENDP			; CViewportGuild::Add
_TEXT	ENDS
END
