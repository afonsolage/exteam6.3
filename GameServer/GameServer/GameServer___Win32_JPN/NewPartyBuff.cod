; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\NewPartyBuff.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GCDisplayBuffeffectPartyMember@@YAXH@Z		; GCDisplayBuffeffectPartyMember
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	?gParty@@3VPartyClass@@A:BYTE			; gParty
EXTRN	_memcpy:PROC
EXTRN	?PHeadSetB@@YAXPAEEH@Z:PROC			; PHeadSetB
EXTRN	_memset:PROC
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?CheckUser@CExLicense@@QAE_NH@Z:PROC		; CExLicense::CheckUser
EXTRN	?g_ExLicense@@3VCExLicense@@A:BYTE		; g_ExLicense
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\newpartybuff.cpp
_TEXT	SEGMENT
_pMsg$230395 = -72					; size = 47
_nTotalBuffCount$230394 = -24				; size = 4
_nPartyIndex$230393 = -20				; size = 4
_nBuffCnt$230392 = -16					; size = 4
_i$230391 = -12						; size = 4
_nDestUserIndex$230390 = -8				; size = 4
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?GCDisplayBuffeffectPartyMember@@YAXH@Z PROC		; GCDisplayBuffeffectPartyMember

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 22   : 	//if(g_ExLicense.CheckUser(eExUB::PrideMuLocal) || g_ExLicense.CheckUser(eExUB::drynea) || g_ExLicense.CheckUser(eExUB::PrideMu) || g_ExLicense.CheckUser(eExUB::Local3) || g_ExLicense.CheckUser(eExUB::Local) || g_ExLicense.CheckUser(eExUB::feqan))
; 23   : 	if(g_ExLicense.user.PartySystem || g_ExLicense.CheckUser(eExUB::MedoniAndrei))

  00016	0f b6 05 cf 00
	00 00		 movzx	 eax, BYTE PTR ?g_ExLicense@@3VCExLicense@@A+207
  0001d	85 c0		 test	 eax, eax
  0001f	75 17		 jne	 SHORT $LN14@GCDisplayB
  00021	6a 32		 push	 50			; 00000032H
  00023	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  00028	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  0002d	0f b6 c0	 movzx	 eax, al
  00030	85 c0		 test	 eax, eax
  00032	0f 84 9a 01 00
	00		 je	 $LN16@GCDisplayB
$LN14@GCDisplayB:

; 24   : 	{
; 25   : 			
; 26   : 	int nDestUserIndex;
; 27   : 	signed int i;
; 28   : 	signed int nBuffCnt;
; 29   : 	int nPartyIndex;
; 30   : 	signed int nTotalBuffCount;
; 31   : 	PMSG_BUFFLIST_SEND_PARTY pMsg;
; 32   : 
; 33   : 	if ( aIndex < 0 || aIndex > OBJMAX-1)

  00038	83 7d 08 00	 cmp	 DWORD PTR _aIndex$[ebp], 0
  0003c	7c 09		 jl	 SHORT $LN12@GCDisplayB
  0003e	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _aIndex$[ebp], 14999 ; 00003a97H
  00045	7e 05		 jle	 SHORT $LN13@GCDisplayB
$LN12@GCDisplayB:

; 34   : 	{
; 35   : 		return;

  00047	e9 86 01 00 00	 jmp	 $LN16@GCDisplayB
$LN13@GCDisplayB:

; 36   : 	}
; 37   : 
; 38   : 	if ( gObj[aIndex].Connected < PLAYER_PLAYING )

  0004c	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0004f	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00055	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0005b	83 7c 01 04 03	 cmp	 DWORD PTR [ecx+eax+4], 3
  00060	7d 05		 jge	 SHORT $LN11@GCDisplayB

; 39   : 	{
; 40   : 		return;

  00062	e9 6b 01 00 00	 jmp	 $LN16@GCDisplayB
$LN11@GCDisplayB:

; 41   : 	}
; 42   : 
; 43   : 	if ( gObjIsConnected(aIndex) && gObj[aIndex].PartyNumber >= 0 )

  00067	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00070	83 c4 04	 add	 esp, 4
  00073	85 c0		 test	 eax, eax
  00075	0f 84 57 01 00
	00		 je	 $LN16@GCDisplayB
  0007b	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0007e	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00084	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0008a	83 bc 01 2c 04
	00 00 00	 cmp	 DWORD PTR [ecx+eax+1068], 0
  00092	0f 8c 3a 01 00
	00		 jl	 $LN16@GCDisplayB

; 44   : 	{
; 45   : 		ZeroMemory(&pMsg,sizeof(pMsg));

  00098	6a 2f		 push	 47			; 0000002fH
  0009a	6a 00		 push	 0
  0009c	8d 45 b8	 lea	 eax, DWORD PTR _pMsg$230395[ebp]
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 _memset
  000a5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 46   : 		//PHeadSetB((LPBYTE)&pMsg, 0x2E, 175);
; 47   : 		PHeadSetB((LPBYTE)&pMsg, 0x2E, sizeof(pMsg));

  000a8	6a 2f		 push	 47			; 0000002fH
  000aa	6a 2e		 push	 46			; 0000002eH
  000ac	8d 45 b8	 lea	 eax, DWORD PTR _pMsg$230395[ebp]
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  000b5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 48   : 		//LogAddC(2, "PMSG_BUFFLIST_SEND_PARTY: %d", sizeof(pMsg));
; 49   : 		
; 50   : 		nTotalBuffCount = gObj[aIndex].m_btViewStateCount;

  000b8	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  000bb	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  000c1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000c7	0f b6 94 01 27
	02 00 00	 movzx	 edx, BYTE PTR [ecx+eax+551]
  000cf	89 55 e8	 mov	 DWORD PTR _nTotalBuffCount$230394[ebp], edx

; 51   : 		pMsg.btBuffCount = gObj[aIndex].m_btViewStateCount;

  000d2	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  000d5	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  000db	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000e1	8a 94 01 27 02
	00 00		 mov	 dl, BYTE PTR [ecx+eax+551]
  000e8	88 55 c6	 mov	 BYTE PTR _pMsg$230395[ebp+14], dl

; 52   : 
; 53   : 	    memcpy(pMsg.szName, gObj[aIndex].Name, 10);

  000eb	6a 0a		 push	 10			; 0000000aH
  000ed	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  000f0	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  000f6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000fc	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  00100	52		 push	 edx
  00101	8d 45 bb	 lea	 eax, DWORD PTR _pMsg$230395[ebp+3]
  00104	50		 push	 eax
  00105	e8 00 00 00 00	 call	 _memcpy
  0010a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 54   : 		nPartyIndex = gObj[aIndex].PartyNumber;

  0010d	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00110	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00116	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0011c	8b 94 01 2c 04
	00 00		 mov	 edx, DWORD PTR [ecx+eax+1068]
  00123	89 55 ec	 mov	 DWORD PTR _nPartyIndex$230393[ebp], edx

; 55   : 		if ( nTotalBuffCount >= 0 )

  00126	83 7d e8 00	 cmp	 DWORD PTR _nTotalBuffCount$230394[ebp], 0
  0012a	0f 8c a2 00 00
	00		 jl	 $LN16@GCDisplayB

; 56   : 		{
; 57   : 			if ( nTotalBuffCount > 32 )

  00130	83 7d e8 20	 cmp	 DWORD PTR _nTotalBuffCount$230394[ebp], 32 ; 00000020H
  00134	7e 0b		 jle	 SHORT $LN8@GCDisplayB

; 58   : 			{
; 59   : 				nTotalBuffCount = 32;

  00136	c7 45 e8 20 00
	00 00		 mov	 DWORD PTR _nTotalBuffCount$230394[ebp], 32 ; 00000020H

; 60   : 				pMsg.btBuffCount = 32;

  0013d	c6 45 c6 20	 mov	 BYTE PTR _pMsg$230395[ebp+14], 32 ; 00000020H
$LN8@GCDisplayB:

; 61   : 			}
; 62   : 			for ( nBuffCnt = 0; nBuffCnt < nTotalBuffCount; nBuffCnt++ )

  00141	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _nBuffCnt$230392[ebp], 0
  00148	eb 09		 jmp	 SHORT $LN7@GCDisplayB
$LN6@GCDisplayB:
  0014a	8b 45 f0	 mov	 eax, DWORD PTR _nBuffCnt$230392[ebp]
  0014d	83 c0 01	 add	 eax, 1
  00150	89 45 f0	 mov	 DWORD PTR _nBuffCnt$230392[ebp], eax
$LN7@GCDisplayB:
  00153	8b 45 f0	 mov	 eax, DWORD PTR _nBuffCnt$230392[ebp]
  00156	3b 45 e8	 cmp	 eax, DWORD PTR _nTotalBuffCount$230394[ebp]
  00159	7d 25		 jge	 SHORT $LN5@GCDisplayB

; 63   : 			{
; 64   : 				pMsg.iBuffList[nBuffCnt] = gObj[aIndex].m_BuffEffectState[nBuffCnt].btBuffIndex;

  0015b	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0015e	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00164	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0016a	8b 4d f0	 mov	 ecx, DWORD PTR _nBuffCnt$230392[ebp]
  0016d	6b c9 14	 imul	 ecx, 20			; 00000014H
  00170	8b 55 f0	 mov	 edx, DWORD PTR _nBuffCnt$230392[ebp]
  00173	8a 84 08 28 02
	00 00		 mov	 al, BYTE PTR [eax+ecx+552]
  0017a	88 44 15 c7	 mov	 BYTE PTR _pMsg$230395[ebp+edx+15], al

; 65   : 			}

  0017e	eb ca		 jmp	 SHORT $LN6@GCDisplayB
$LN5@GCDisplayB:

; 66   : 			for ( i = 0; i < MAX_USER_IN_PARTY; ++i )

  00180	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$230391[ebp], 0
  00187	eb 09		 jmp	 SHORT $LN4@GCDisplayB
$LN3@GCDisplayB:
  00189	8b 45 f4	 mov	 eax, DWORD PTR _i$230391[ebp]
  0018c	83 c0 01	 add	 eax, 1
  0018f	89 45 f4	 mov	 DWORD PTR _i$230391[ebp], eax
$LN4@GCDisplayB:
  00192	83 7d f4 0a	 cmp	 DWORD PTR _i$230391[ebp], 10 ; 0000000aH
  00196	7d 3a		 jge	 SHORT $LN16@GCDisplayB

; 67   : 			{
; 68   : 				nDestUserIndex = gParty.m_PartyS[nPartyIndex].Number[i];

  00198	8b 45 ec	 mov	 eax, DWORD PTR _nPartyIndex$230393[ebp]
  0019b	6b c0 6c	 imul	 eax, 108		; 0000006cH
  0019e	8b 4d f4	 mov	 ecx, DWORD PTR _i$230391[ebp]
  001a1	8b 94 88 0c 00
	00 00		 mov	 edx, DWORD PTR ?gParty@@3VPartyClass@@A[eax+ecx*4+12]
  001a8	89 55 f8	 mov	 DWORD PTR _nDestUserIndex$230390[ebp], edx

; 69   : 				if ( gObjIsConnected(nDestUserIndex) )

  001ab	8b 45 f8	 mov	 eax, DWORD PTR _nDestUserIndex$230390[ebp]
  001ae	50		 push	 eax
  001af	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  001b4	83 c4 04	 add	 esp, 4
  001b7	85 c0		 test	 eax, eax
  001b9	74 15		 je	 SHORT $LN1@GCDisplayB

; 70   : 				{
; 71   : 					DataSend(nDestUserIndex, (LPBYTE)&pMsg, pMsg.h.size);

  001bb	0f b6 45 b9	 movzx	 eax, BYTE PTR _pMsg$230395[ebp+1]
  001bf	50		 push	 eax
  001c0	8d 4d b8	 lea	 ecx, DWORD PTR _pMsg$230395[ebp]
  001c3	51		 push	 ecx
  001c4	8b 55 f8	 mov	 edx, DWORD PTR _nDestUserIndex$230390[ebp]
  001c7	52		 push	 edx
  001c8	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  001cd	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@GCDisplayB:

; 72   : 				}
; 73   : 		
; 74   : 			}

  001d0	eb b7		 jmp	 SHORT $LN3@GCDisplayB
$LN16@GCDisplayB:

; 75   : 		}
; 76   : 	}
; 77   : 	}
; 78   : }

  001d2	5f		 pop	 edi
  001d3	5e		 pop	 esi
  001d4	5b		 pop	 ebx
  001d5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001d8	33 cd		 xor	 ecx, ebp
  001da	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001df	8b e5		 mov	 esp, ebp
  001e1	5d		 pop	 ebp
  001e2	c3		 ret	 0
?GCDisplayBuffeffectPartyMember@@YAXH@Z ENDP		; GCDisplayBuffeffectPartyMember
_TEXT	ENDS
END
