; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\Marriage.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?Init@CMarriage@@QAEXXZ				; CMarriage::Init
PUBLIC	??0CMarriage@@QAE@XZ				; CMarriage::CMarriage
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\marriage.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMarriage@@QAE@XZ PROC				; CMarriage::CMarriage
; _this$ = ecx

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 19   : 	this->Init();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?Init@CMarriage@@QAEXXZ	; CMarriage::Init

; 20   : }

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0CMarriage@@QAE@XZ ENDP				; CMarriage::CMarriage
_TEXT	ENDS
PUBLIC	??1CMarriage@@QAE@XZ				; CMarriage::~CMarriage
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CMarriage@@QAE@XZ PROC				; CMarriage::~CMarriage
; _this$ = ecx

; 23   : {

  00020	55		 push	 ebp
  00021	8b ec		 mov	 ebp, esp
  00023	83 ec 44	 sub	 esp, 68			; 00000044H
  00026	53		 push	 ebx
  00027	56		 push	 esi
  00028	57		 push	 edi
  00029	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 24   : }

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??1CMarriage@@QAE@XZ ENDP				; CMarriage::~CMarriage
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?Init@CMarriage@@QAEXXZ PROC				; CMarriage::Init
; _this$ = ecx

; 27   : {

  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
  00043	83 ec 44	 sub	 esp, 68			; 00000044H
  00046	53		 push	 ebx
  00047	56		 push	 esi
  00048	57		 push	 edi
  00049	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 28   : 	this->Enable = false;

  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	c6 00 00	 mov	 BYTE PTR [eax], 0

; 29   : 	this->iNpcClass = 0;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 30   : 	this->iNpcMap = 0;

  0005c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 31   : 	this->iNpcX = 0;

  00066	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00069	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 32   : 	this->iNpcY = 0;

  00070	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00073	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 33   : 	this->iNeedHeart1 = 0;

  0007a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 34   : 	this->iNeedHeart2 = 0;

  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00087	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 35   : 	this->iRewardItemType = 0;

  0008e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00091	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0

; 36   : 	this->iRewardItemIndex = 0;

  00098	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0

; 37   : 	this->iRewardItemLevel = 0;

  000a2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	c7 40 24 00 00
	00 00		 mov	 DWORD PTR [eax+36], 0

; 38   : 	this->iRewardItemOpt = 0;

  000ac	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000af	c7 40 28 00 00
	00 00		 mov	 DWORD PTR [eax+40], 0

; 39   : 	this->iRewardItemExel = 0;

  000b6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b9	c7 40 2c 00 00
	00 00		 mov	 DWORD PTR [eax+44], 0

; 40   : 	this->iRewardDoubleDamage = 0;

  000c0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c3	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [eax+48], 0

; 41   : 	this->iRewardIgnoreDefence = 0;

  000ca	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cd	c7 40 34 00 00
	00 00		 mov	 DWORD PTR [eax+52], 0

; 42   : 	this->iKickPriceWcoin = 0;

  000d4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d7	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0

; 43   : 	this->iClassIndex1 = -1;

  000de	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e1	c7 40 3c ff ff
	ff ff		 mov	 DWORD PTR [eax+60], -1

; 44   : 	this->iClassIndex2 = -1;

  000e8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000eb	c7 40 40 ff ff
	ff ff		 mov	 DWORD PTR [eax+64], -1

; 45   : 	this->bClickOK1 = false;

  000f2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f5	c6 40 44 00	 mov	 BYTE PTR [eax+68], 0

; 46   : 	this->bClickOK2 = false;

  000f9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fc	c6 40 45 00	 mov	 BYTE PTR [eax+69], 0

; 47   : }

  00100	5f		 pop	 edi
  00101	5e		 pop	 esi
  00102	5b		 pop	 ebx
  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c3		 ret	 0
?Init@CMarriage@@QAEXXZ ENDP				; CMarriage::Init
_TEXT	ENDS
PUBLIC	?Read@CMarriage@@QAEXPAD@Z			; CMarriage::Read
PUBLIC	??_C@_0BE@OJJKDJD@ExData?2Marriage?4ini?$AA@	; `string'
PUBLIC	?Load@CMarriage@@QAEXXZ				; CMarriage::Load
EXTRN	?GetNewPath@CDirPath@@QAEPADPAD@Z:PROC		; CDirPath::GetNewPath
EXTRN	?gDirPath@@3VCDirPath@@A:BYTE			; gDirPath
EXTRN	?g_ExLicense@@3VCExLicense@@A:BYTE		; g_ExLicense
;	COMDAT ??_C@_0BE@OJJKDJD@ExData?2Marriage?4ini?$AA@
CONST	SEGMENT
??_C@_0BE@OJJKDJD@ExData?2Marriage?4ini?$AA@ DB 'ExData\Marriage.ini', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Load@CMarriage@@QAEXXZ PROC				; CMarriage::Load
; _this$ = ecx

; 50   : {

  00110	55		 push	 ebp
  00111	8b ec		 mov	 ebp, esp
  00113	83 ec 44	 sub	 esp, 68			; 00000044H
  00116	53		 push	 ebx
  00117	56		 push	 esi
  00118	57		 push	 edi
  00119	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 51   : 	this->Init();

  0011c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011f	e8 00 00 00 00	 call	 ?Init@CMarriage@@QAEXXZ	; CMarriage::Init

; 52   : 
; 53   : 	if(!g_ExLicense.user.Marriage)

  00124	0f b6 05 e3 00
	00 00		 movzx	 eax, BYTE PTR ?g_ExLicense@@3VCExLicense@@A+227
  0012b	85 c0		 test	 eax, eax
  0012d	75 02		 jne	 SHORT $LN1@Load

; 54   : 	{
; 55   : 		return;

  0012f	eb 18		 jmp	 SHORT $LN2@Load
$LN1@Load:

; 56   : 	}
; 57   : 
; 58   : 	this->Read(gDirPath.GetNewPath("ExData\\Marriage.ini"));

  00131	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@OJJKDJD@ExData?2Marriage?4ini?$AA@
  00136	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  0013b	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00140	50		 push	 eax
  00141	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00144	e8 00 00 00 00	 call	 ?Read@CMarriage@@QAEXPAD@Z ; CMarriage::Read
$LN2@Load:

; 59   : }

  00149	5f		 pop	 edi
  0014a	5e		 pop	 esi
  0014b	5b		 pop	 ebx
  0014c	8b e5		 mov	 esp, ebp
  0014e	5d		 pop	 ebp
  0014f	c3		 ret	 0
?Load@CMarriage@@QAEXXZ ENDP				; CMarriage::Load
_TEXT	ENDS
PUBLIC	??_C@_0P@BJFNDAAB@KickPriceWcoin?$AA@		; `string'
PUBLIC	??_C@_0BE@POPBPDEF@RewardIgnoreDefence?$AA@	; `string'
PUBLIC	??_C@_0BD@HPJDJJEK@RewardDoubleDamage?$AA@	; `string'
PUBLIC	??_C@_0P@ICHMHKKG@RewardItemExel?$AA@		; `string'
PUBLIC	??_C@_0O@CPNNIOJ@RewardItemOpt?$AA@		; `string'
PUBLIC	??_C@_0BA@EHNJPAJ@RewardItemLevel?$AA@		; `string'
PUBLIC	??_C@_0BA@PHNOHHOK@RewardItemIndex?$AA@		; `string'
PUBLIC	??_C@_0P@KMGPHJCD@RewardItemType?$AA@		; `string'
PUBLIC	??_C@_0L@JBOMNOIE@NeedHeart2?$AA@		; `string'
PUBLIC	??_C@_0L@LKMBINEH@NeedHeart1?$AA@		; `string'
PUBLIC	??_C@_04JEMJNNDC@NpcY?$AA@			; `string'
PUBLIC	??_C@_04INNCOMHD@NpcX?$AA@			; `string'
PUBLIC	??_C@_06KMEDHGPI@NpcMap?$AA@			; `string'
PUBLIC	??_C@_08BNJJHKPI@NpcClass?$AA@			; `string'
PUBLIC	??_C@_06POMJKEPM@Common?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
;	COMDAT ??_C@_0P@BJFNDAAB@KickPriceWcoin?$AA@
CONST	SEGMENT
??_C@_0P@BJFNDAAB@KickPriceWcoin?$AA@ DB 'KickPriceWcoin', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@POPBPDEF@RewardIgnoreDefence?$AA@
CONST	SEGMENT
??_C@_0BE@POPBPDEF@RewardIgnoreDefence?$AA@ DB 'RewardIgnoreDefence', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HPJDJJEK@RewardDoubleDamage?$AA@
CONST	SEGMENT
??_C@_0BD@HPJDJJEK@RewardDoubleDamage?$AA@ DB 'RewardDoubleDamage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ICHMHKKG@RewardItemExel?$AA@
CONST	SEGMENT
??_C@_0P@ICHMHKKG@RewardItemExel?$AA@ DB 'RewardItemExel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CPNNIOJ@RewardItemOpt?$AA@
CONST	SEGMENT
??_C@_0O@CPNNIOJ@RewardItemOpt?$AA@ DB 'RewardItemOpt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EHNJPAJ@RewardItemLevel?$AA@
CONST	SEGMENT
??_C@_0BA@EHNJPAJ@RewardItemLevel?$AA@ DB 'RewardItemLevel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PHNOHHOK@RewardItemIndex?$AA@
CONST	SEGMENT
??_C@_0BA@PHNOHHOK@RewardItemIndex?$AA@ DB 'RewardItemIndex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KMGPHJCD@RewardItemType?$AA@
CONST	SEGMENT
??_C@_0P@KMGPHJCD@RewardItemType?$AA@ DB 'RewardItemType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JBOMNOIE@NeedHeart2?$AA@
CONST	SEGMENT
??_C@_0L@JBOMNOIE@NeedHeart2?$AA@ DB 'NeedHeart2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LKMBINEH@NeedHeart1?$AA@
CONST	SEGMENT
??_C@_0L@LKMBINEH@NeedHeart1?$AA@ DB 'NeedHeart1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04JEMJNNDC@NpcY?$AA@
CONST	SEGMENT
??_C@_04JEMJNNDC@NpcY?$AA@ DB 'NpcY', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04INNCOMHD@NpcX?$AA@
CONST	SEGMENT
??_C@_04INNCOMHD@NpcX?$AA@ DB 'NpcX', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KMEDHGPI@NpcMap?$AA@
CONST	SEGMENT
??_C@_06KMEDHGPI@NpcMap?$AA@ DB 'NpcMap', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08BNJJHKPI@NpcClass?$AA@
CONST	SEGMENT
??_C@_08BNJJHKPI@NpcClass?$AA@ DB 'NpcClass', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06POMJKEPM@Common?$AA@
CONST	SEGMENT
??_C@_06POMJKEPM@Common?$AA@ DB 'Common', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_filename$ = 8						; size = 4
?Read@CMarriage@@QAEXPAD@Z PROC				; CMarriage::Read
; _this$ = ecx

; 62   : {

  00150	55		 push	 ebp
  00151	8b ec		 mov	 ebp, esp
  00153	83 ec 44	 sub	 esp, 68			; 00000044H
  00156	53		 push	 ebx
  00157	56		 push	 esi
  00158	57		 push	 edi
  00159	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 63   : 	this->Enable = GetPrivateProfileInt("Common", "Enable", 0, filename);

  0015c	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  0015f	50		 push	 eax
  00160	6a 00		 push	 0
  00162	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  00167	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0016c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00172	85 c0		 test	 eax, eax
  00174	0f 95 c1	 setne	 cl
  00177	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0017a	88 0a		 mov	 BYTE PTR [edx], cl

; 64   : 	this->iNpcClass = GetPrivateProfileInt("Common", "NpcClass", 0, filename);

  0017c	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  0017f	50		 push	 eax
  00180	6a 00		 push	 0
  00182	68 00 00 00 00	 push	 OFFSET ??_C@_08BNJJHKPI@NpcClass?$AA@
  00187	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0018c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00192	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00195	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 65   : 	this->iNpcMap = GetPrivateProfileInt("Common", "NpcMap", 0, filename);

  00198	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  0019b	50		 push	 eax
  0019c	6a 00		 push	 0
  0019e	68 00 00 00 00	 push	 OFFSET ??_C@_06KMEDHGPI@NpcMap?$AA@
  001a3	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  001a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  001ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b1	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 66   : 	this->iNpcX = GetPrivateProfileInt("Common", "NpcX", 0, filename);

  001b4	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  001b7	50		 push	 eax
  001b8	6a 00		 push	 0
  001ba	68 00 00 00 00	 push	 OFFSET ??_C@_04INNCOMHD@NpcX?$AA@
  001bf	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  001c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  001ca	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001cd	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 67   : 	this->iNpcY = GetPrivateProfileInt("Common", "NpcY", 0, filename);

  001d0	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  001d3	50		 push	 eax
  001d4	6a 00		 push	 0
  001d6	68 00 00 00 00	 push	 OFFSET ??_C@_04JEMJNNDC@NpcY?$AA@
  001db	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  001e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  001e6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001e9	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 68   : 	this->iNeedHeart1 = GetPrivateProfileInt("Common", "NeedHeart1", 0, filename);

  001ec	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  001ef	50		 push	 eax
  001f0	6a 00		 push	 0
  001f2	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LKMBINEH@NeedHeart1?$AA@
  001f7	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  001fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00202	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00205	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 69   : 	this->iNeedHeart2 = GetPrivateProfileInt("Common", "NeedHeart2", 0, filename);

  00208	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  0020b	50		 push	 eax
  0020c	6a 00		 push	 0
  0020e	68 00 00 00 00	 push	 OFFSET ??_C@_0L@JBOMNOIE@NeedHeart2?$AA@
  00213	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00218	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0021e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00221	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 70   : 	this->iRewardItemType = GetPrivateProfileInt("Common", "RewardItemType", 0, filename);

  00224	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00227	50		 push	 eax
  00228	6a 00		 push	 0
  0022a	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KMGPHJCD@RewardItemType?$AA@
  0022f	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00234	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0023a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0023d	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 71   : 	this->iRewardItemIndex = GetPrivateProfileInt("Common", "RewardItemIndex", 0, filename);

  00240	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00243	50		 push	 eax
  00244	6a 00		 push	 0
  00246	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@PHNOHHOK@RewardItemIndex?$AA@
  0024b	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00250	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00256	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00259	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 72   : 	this->iRewardItemLevel = GetPrivateProfileInt("Common", "RewardItemLevel", 0, filename);

  0025c	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  0025f	50		 push	 eax
  00260	6a 00		 push	 0
  00262	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@EHNJPAJ@RewardItemLevel?$AA@
  00267	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0026c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00272	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00275	89 41 24	 mov	 DWORD PTR [ecx+36], eax

; 73   : 	this->iRewardItemOpt = GetPrivateProfileInt("Common", "RewardItemOpt", 0, filename);

  00278	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  0027b	50		 push	 eax
  0027c	6a 00		 push	 0
  0027e	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CPNNIOJ@RewardItemOpt?$AA@
  00283	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00288	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0028e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00291	89 41 28	 mov	 DWORD PTR [ecx+40], eax

; 74   : 	this->iRewardItemExel = GetPrivateProfileInt("Common", "RewardItemExel", 0, filename);

  00294	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00297	50		 push	 eax
  00298	6a 00		 push	 0
  0029a	68 00 00 00 00	 push	 OFFSET ??_C@_0P@ICHMHKKG@RewardItemExel?$AA@
  0029f	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  002a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  002aa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002ad	89 41 2c	 mov	 DWORD PTR [ecx+44], eax

; 75   : 	this->iRewardDoubleDamage = GetPrivateProfileInt("Common", "RewardDoubleDamage", 0, filename);

  002b0	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  002b3	50		 push	 eax
  002b4	6a 00		 push	 0
  002b6	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@HPJDJJEK@RewardDoubleDamage?$AA@
  002bb	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  002c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  002c6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002c9	89 41 30	 mov	 DWORD PTR [ecx+48], eax

; 76   : 	this->iRewardIgnoreDefence = GetPrivateProfileInt("Common", "RewardIgnoreDefence", 0, filename);

  002cc	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  002cf	50		 push	 eax
  002d0	6a 00		 push	 0
  002d2	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@POPBPDEF@RewardIgnoreDefence?$AA@
  002d7	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  002dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  002e2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002e5	89 41 34	 mov	 DWORD PTR [ecx+52], eax

; 77   : 	this->iKickPriceWcoin = GetPrivateProfileInt("Common", "KickPriceWcoin", 0, filename);

  002e8	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  002eb	50		 push	 eax
  002ec	6a 00		 push	 0
  002ee	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BJFNDAAB@KickPriceWcoin?$AA@
  002f3	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  002f8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  002fe	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00301	89 41 38	 mov	 DWORD PTR [ecx+56], eax

; 78   : }

  00304	5f		 pop	 edi
  00305	5e		 pop	 esi
  00306	5b		 pop	 ebx
  00307	8b e5		 mov	 esp, ebp
  00309	5d		 pop	 ebp
  0030a	c2 04 00	 ret	 4
?Read@CMarriage@@QAEXPAD@Z ENDP				; CMarriage::Read
_TEXT	ENDS
PUBLIC	?GCInfoNames@CMarriage@@QAEXXZ			; CMarriage::GCInfoNames
PUBLIC	??_C@_0BH@LAGAPCBE@?$FLMarriage?$FN?5class2?5busy?$AA@ ; `string'
PUBLIC	??_C@_0BH@IBIIOIIJ@?$FLMarriage?$FN?5class1?5busy?$AA@ ; `string'
PUBLIC	??_C@_0BD@ILINHHOC@?$FLMarriage?$FN?5Married?$AA@ ; `string'
PUBLIC	?NpcDialog@CMarriage@@QAE_NHH@Z			; CMarriage::NpcDialog
EXTRN	?MsgOutput@@YAXHPADZZ:PROC			; MsgOutput
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
;	COMDAT ??_C@_0BH@LAGAPCBE@?$FLMarriage?$FN?5class2?5busy?$AA@
CONST	SEGMENT
??_C@_0BH@LAGAPCBE@?$FLMarriage?$FN?5class2?5busy?$AA@ DB '[Marriage] cla'
	DB	'ss2 busy', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IBIIOIIJ@?$FLMarriage?$FN?5class1?5busy?$AA@
CONST	SEGMENT
??_C@_0BH@IBIIOIIJ@?$FLMarriage?$FN?5class1?5busy?$AA@ DB '[Marriage] cla'
	DB	'ss1 busy', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@ILINHHOC@?$FLMarriage?$FN?5Married?$AA@
CONST	SEGMENT
??_C@_0BD@ILINHHOC@?$FLMarriage?$FN?5Married?$AA@ DB '[Marriage] Married', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_lpNpc$ = -12						; size = 4
_lpUser$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_aNpcIndex$ = 12					; size = 4
?NpcDialog@CMarriage@@QAE_NHH@Z PROC			; CMarriage::NpcDialog
; _this$ = ecx

; 81   : {

  00310	55		 push	 ebp
  00311	8b ec		 mov	 ebp, esp
  00313	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00316	53		 push	 ebx
  00317	56		 push	 esi
  00318	57		 push	 edi
  00319	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 82   : 	if(!this->Enable)

  0031c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0031f	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00322	85 c9		 test	 ecx, ecx
  00324	75 07		 jne	 SHORT $LN8@NpcDialog

; 83   : 	{
; 84   : 		return false;

  00326	32 c0		 xor	 al, al
  00328	e9 4a 01 00 00	 jmp	 $LN9@NpcDialog
$LN8@NpcDialog:

; 85   : 	}
; 86   : 
; 87   : 	LPOBJ lpUser = &gObj[aIndex];

  0032d	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00330	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00336	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0033c	89 45 f8	 mov	 DWORD PTR _lpUser$[ebp], eax

; 88   : 	LPOBJ lpNpc = &gObj[aNpcIndex];

  0033f	8b 45 0c	 mov	 eax, DWORD PTR _aNpcIndex$[ebp]
  00342	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00348	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0034e	89 45 f4	 mov	 DWORD PTR _lpNpc$[ebp], eax

; 89   : 
; 90   : 	if( lpNpc->Class == this->iNpcClass && 
; 91   : 		lpNpc->MapNumber == this->iNpcMap && 
; 92   : 		lpNpc->X == this->iNpcX && 
; 93   : 		lpNpc->Y == this->iNpcY )

  00351	8b 45 f4	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  00354	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  0035b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0035e	3b 4a 04	 cmp	 ecx, DWORD PTR [edx+4]
  00361	0f 85 0e 01 00
	00		 jne	 $LN7@NpcDialog
  00367	8b 45 f4	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  0036a	0f b6 88 49 01
	00 00		 movzx	 ecx, BYTE PTR [eax+329]
  00371	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00374	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  00377	0f 85 f8 00 00
	00		 jne	 $LN7@NpcDialog
  0037d	8b 45 f4	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  00380	0f bf 88 44 01
	00 00		 movsx	 ecx, WORD PTR [eax+324]
  00387	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0038a	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0038d	0f 85 e2 00 00
	00		 jne	 $LN7@NpcDialog
  00393	8b 45 f4	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  00396	0f bf 88 46 01
	00 00		 movsx	 ecx, WORD PTR [eax+326]
  0039d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  003a0	3b 4a 10	 cmp	 ecx, DWORD PTR [edx+16]
  003a3	0f 85 cc 00 00
	00		 jne	 $LN7@NpcDialog

; 94   : 	{
; 95   : 
; 96   : 		if(lpUser->bMarriage)

  003a9	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  003ac	0f b6 88 ed 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10477]
  003b3	85 c9		 test	 ecx, ecx
  003b5	74 18		 je	 SHORT $LN6@NpcDialog

; 97   : 		{
; 98   : 			MsgOutput(aIndex, "[Marriage] Married");

  003b7	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@ILINHHOC@?$FLMarriage?$FN?5Married?$AA@
  003bc	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  003bf	50		 push	 eax
  003c0	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  003c5	83 c4 08	 add	 esp, 8

; 99   : 			return true;

  003c8	b0 01		 mov	 al, 1
  003ca	e9 a8 00 00 00	 jmp	 $LN9@NpcDialog
$LN6@NpcDialog:

; 100  : 		}
; 101  : 
; 102  : 		if(lpUser->Class == CLASS_KNIGHT || lpUser->Class == CLASS_WIZARD || lpUser->Class == CLASS_MAGUMSA || lpUser->Class == CLASS_DARKLORD || lpUser->Class == CLASS_MONK)

  003cf	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  003d2	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  003d9	83 f9 01	 cmp	 ecx, 1
  003dc	74 3b		 je	 SHORT $LN4@NpcDialog
  003de	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  003e1	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  003e8	85 c9		 test	 ecx, ecx
  003ea	74 2d		 je	 SHORT $LN4@NpcDialog
  003ec	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  003ef	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  003f6	83 f9 03	 cmp	 ecx, 3
  003f9	74 1e		 je	 SHORT $LN4@NpcDialog
  003fb	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  003fe	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00405	83 f9 04	 cmp	 ecx, 4
  00408	74 0f		 je	 SHORT $LN4@NpcDialog
  0040a	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  0040d	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00414	83 f9 06	 cmp	 ecx, 6
  00417	75 29		 jne	 SHORT $LN5@NpcDialog
$LN4@NpcDialog:

; 103  : 		{
; 104  : 			if(this->iClassIndex1 != -1)

  00419	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0041c	83 78 3c ff	 cmp	 DWORD PTR [eax+60], -1
  00420	74 15		 je	 SHORT $LN3@NpcDialog

; 105  : 			{
; 106  : 				MsgOutput(aIndex, "[Marriage] class1 busy");

  00422	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@IBIIOIIJ@?$FLMarriage?$FN?5class1?5busy?$AA@
  00427	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0042a	50		 push	 eax
  0042b	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  00430	83 c4 08	 add	 esp, 8

; 107  : 				return true;

  00433	b0 01		 mov	 al, 1
  00435	eb 40		 jmp	 SHORT $LN9@NpcDialog
$LN3@NpcDialog:

; 108  : 			}
; 109  : 			this->iClassIndex1 = aIndex;

  00437	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0043a	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  0043d	89 48 3c	 mov	 DWORD PTR [eax+60], ecx

; 110  : 		}
; 111  : 		else

  00440	eb 27		 jmp	 SHORT $LN2@NpcDialog
$LN5@NpcDialog:

; 112  : 		{
; 113  : 			if(this->iClassIndex2 != -1)

  00442	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00445	83 78 40 ff	 cmp	 DWORD PTR [eax+64], -1
  00449	74 15		 je	 SHORT $LN1@NpcDialog

; 114  : 			{
; 115  : 				MsgOutput(aIndex, "[Marriage] class2 busy");

  0044b	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LAGAPCBE@?$FLMarriage?$FN?5class2?5busy?$AA@
  00450	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00453	50		 push	 eax
  00454	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  00459	83 c4 08	 add	 esp, 8

; 116  : 				return true;

  0045c	b0 01		 mov	 al, 1
  0045e	eb 17		 jmp	 SHORT $LN9@NpcDialog
$LN1@NpcDialog:

; 117  : 			}
; 118  : 			this->iClassIndex2 = aIndex;

  00460	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00463	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  00466	89 48 40	 mov	 DWORD PTR [eax+64], ecx
$LN2@NpcDialog:

; 119  : 		}
; 120  : 
; 121  : 		this->GCInfoNames();

  00469	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0046c	e8 00 00 00 00	 call	 ?GCInfoNames@CMarriage@@QAEXXZ ; CMarriage::GCInfoNames

; 122  : 
; 123  : 		return true;

  00471	b0 01		 mov	 al, 1
  00473	eb 02		 jmp	 SHORT $LN9@NpcDialog
$LN7@NpcDialog:

; 124  : 	}
; 125  : 
; 126  : 	return false;

  00475	32 c0		 xor	 al, al
$LN9@NpcDialog:

; 127  : }

  00477	5f		 pop	 edi
  00478	5e		 pop	 esi
  00479	5b		 pop	 ebx
  0047a	8b e5		 mov	 esp, ebp
  0047c	5d		 pop	 ebp
  0047d	c2 08 00	 ret	 8
?NpcDialog@CMarriage@@QAE_NHH@Z ENDP			; CMarriage::NpcDialog
_TEXT	ENDS
PUBLIC	?set@PBMSG_HEAD2@@QAEXPAEEEE@Z			; PBMSG_HEAD2::set
PUBLIC	__$ArrayPad$
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	?gObjGetItemCountInInventory@@YAHHHH@Z:PROC	; gObjGetItemCountInInventory
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv137 = -124						; size = 4
tv84 = -124						; size = 4
_pMsg$ = -56						; size = 48
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?GCInfoNames@CMarriage@@QAEXXZ PROC			; CMarriage::GCInfoNames
; _this$ = ecx

; 130  : {

  00480	55		 push	 ebp
  00481	8b ec		 mov	 ebp, esp
  00483	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00486	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0048b	33 c5		 xor	 eax, ebp
  0048d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00490	53		 push	 ebx
  00491	56		 push	 esi
  00492	57		 push	 edi
  00493	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 131  : 	if(!this->Enable)

  00496	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00499	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0049c	85 c9		 test	 ecx, ecx
  0049e	75 05		 jne	 SHORT $LN9@GCInfoName

; 132  : 	{
; 133  : 		return;

  004a0	e9 a1 01 00 00	 jmp	 $LN10@GCInfoName
$LN9@GCInfoName:

; 134  : 	}
; 135  : 
; 136  : 	PMSG_GC_MARRIAGE_NAMES pMsg;
; 137  : 	pMsg.h.set((LPBYTE)&pMsg, 0xFB, 0x31, sizeof(pMsg));

  004a5	6a 30		 push	 48			; 00000030H
  004a7	6a 31		 push	 49			; 00000031H
  004a9	68 fb 00 00 00	 push	 251			; 000000fbH
  004ae	8d 45 c8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  004b1	50		 push	 eax
  004b2	8d 4d c8	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  004b5	e8 00 00 00 00	 call	 ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ; PBMSG_HEAD2::set

; 138  : 
; 139  : 	pMsg.bResult = true;

  004ba	c6 45 cc 01	 mov	 BYTE PTR _pMsg$[ebp+4], 1

; 140  : 	pMsg.bUser1 = false;

  004be	c6 45 cd 00	 mov	 BYTE PTR _pMsg$[ebp+5], 0

; 141  : 	pMsg.bUser2 = false;

  004c2	c6 45 ce 00	 mov	 BYTE PTR _pMsg$[ebp+6], 0

; 142  : 
; 143  : 	memset(pMsg.szName1, 0, sizeof(pMsg.szName1));

  004c6	6a 0b		 push	 11			; 0000000bH
  004c8	6a 00		 push	 0
  004ca	8d 45 cf	 lea	 eax, DWORD PTR _pMsg$[ebp+7]
  004cd	50		 push	 eax
  004ce	e8 00 00 00 00	 call	 _memset
  004d3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 144  : 	memset(pMsg.szName2, 0, sizeof(pMsg.szName2));

  004d6	6a 0b		 push	 11			; 0000000bH
  004d8	6a 00		 push	 0
  004da	8d 45 da	 lea	 eax, DWORD PTR _pMsg$[ebp+18]
  004dd	50		 push	 eax
  004de	e8 00 00 00 00	 call	 _memset
  004e3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 145  : 
; 146  : 	pMsg.iCountHeart1 = 0;

  004e6	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pMsg$[ebp+32], 0

; 147  : 	pMsg.iCountHeart2 = 0;

  004ed	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _pMsg$[ebp+36], 0

; 148  : 
; 149  : 	pMsg.iNeedHeart1 = this->iNeedHeart1;

  004f4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004f7	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  004fa	89 4d f0	 mov	 DWORD PTR _pMsg$[ebp+40], ecx

; 150  : 	pMsg.iNeedHeart2 = this->iNeedHeart2;

  004fd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00500	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00503	89 4d f4	 mov	 DWORD PTR _pMsg$[ebp+44], ecx

; 151  : 
; 152  : 	if(OBJMAX_RANGE(this->iClassIndex1))

  00506	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00509	83 78 3c 00	 cmp	 DWORD PTR [eax+60], 0
  0050d	7d 09		 jge	 SHORT $LN12@GCInfoName
  0050f	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
  00516	eb 12		 jmp	 SHORT $LN13@GCInfoName
$LN12@GCInfoName:
  00518	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0051b	33 d2		 xor	 edx, edx
  0051d	81 79 3c 97 3a
	00 00		 cmp	 DWORD PTR [ecx+60], 14999 ; 00003a97H
  00524	0f 9e c2	 setle	 dl
  00527	89 55 84	 mov	 DWORD PTR tv84[ebp], edx
$LN13@GCInfoName:
  0052a	83 7d 84 00	 cmp	 DWORD PTR tv84[ebp], 0
  0052e	74 54		 je	 SHORT $LN8@GCInfoName

; 153  : 	{
; 154  : 		pMsg.bUser1 = true;

  00530	c6 45 cd 01	 mov	 BYTE PTR _pMsg$[ebp+5], 1

; 155  : 		pMsg.szName1[10] = 0;

  00534	c6 45 d9 00	 mov	 BYTE PTR _pMsg$[ebp+17], 0

; 156  : 		memcpy(pMsg.szName1, gObj[this->iClassIndex1].Name, sizeof(pMsg.szName1)-1);

  00538	6a 0a		 push	 10			; 0000000aH
  0053a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0053d	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00540	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00546	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0054c	8d 44 0a 77	 lea	 eax, DWORD PTR [edx+ecx+119]
  00550	50		 push	 eax
  00551	8d 4d cf	 lea	 ecx, DWORD PTR _pMsg$[ebp+7]
  00554	51		 push	 ecx
  00555	e8 00 00 00 00	 call	 _memcpy
  0055a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 157  : 
; 158  : 		pMsg.iCountHeart1 = gObjGetItemCountInInventory(this->iClassIndex1, ITEMGET(14,12), 1);

  0055d	6a 01		 push	 1
  0055f	68 0c 1c 00 00	 push	 7180			; 00001c0cH
  00564	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00567	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0056a	51		 push	 ecx
  0056b	e8 00 00 00 00	 call	 ?gObjGetItemCountInInventory@@YAHHHH@Z ; gObjGetItemCountInInventory
  00570	83 c4 0c	 add	 esp, 12			; 0000000cH
  00573	89 45 e8	 mov	 DWORD PTR _pMsg$[ebp+32], eax

; 159  : 
; 160  : 		if(pMsg.iNeedHeart1 > pMsg.iCountHeart1)

  00576	8b 45 f0	 mov	 eax, DWORD PTR _pMsg$[ebp+40]
  00579	3b 45 e8	 cmp	 eax, DWORD PTR _pMsg$[ebp+32]
  0057c	7e 04		 jle	 SHORT $LN7@GCInfoName

; 161  : 		{
; 162  : 			pMsg.bResult = false;

  0057e	c6 45 cc 00	 mov	 BYTE PTR _pMsg$[ebp+4], 0
$LN7@GCInfoName:

; 163  : 		}
; 164  : 	}
; 165  : 	else

  00582	eb 04		 jmp	 SHORT $LN6@GCInfoName
$LN8@GCInfoName:

; 166  : 	{
; 167  : 		pMsg.bResult = false;

  00584	c6 45 cc 00	 mov	 BYTE PTR _pMsg$[ebp+4], 0
$LN6@GCInfoName:

; 168  : 	}
; 169  : 
; 170  : 	if(OBJMAX_RANGE(this->iClassIndex2))

  00588	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0058b	83 78 40 00	 cmp	 DWORD PTR [eax+64], 0
  0058f	7d 09		 jge	 SHORT $LN14@GCInfoName
  00591	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
  00598	eb 12		 jmp	 SHORT $LN15@GCInfoName
$LN14@GCInfoName:
  0059a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0059d	33 d2		 xor	 edx, edx
  0059f	81 79 40 97 3a
	00 00		 cmp	 DWORD PTR [ecx+64], 14999 ; 00003a97H
  005a6	0f 9e c2	 setle	 dl
  005a9	89 55 84	 mov	 DWORD PTR tv137[ebp], edx
$LN15@GCInfoName:
  005ac	83 7d 84 00	 cmp	 DWORD PTR tv137[ebp], 0
  005b0	74 54		 je	 SHORT $LN5@GCInfoName

; 171  : 	{
; 172  : 		pMsg.bUser2 = true;

  005b2	c6 45 ce 01	 mov	 BYTE PTR _pMsg$[ebp+6], 1

; 173  : 		pMsg.szName2[10] = 0;

  005b6	c6 45 e4 00	 mov	 BYTE PTR _pMsg$[ebp+28], 0

; 174  : 		memcpy(pMsg.szName2, gObj[this->iClassIndex2].Name, sizeof(pMsg.szName2)-1);

  005ba	6a 0a		 push	 10			; 0000000aH
  005bc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005bf	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  005c2	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  005c8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  005ce	8d 44 0a 77	 lea	 eax, DWORD PTR [edx+ecx+119]
  005d2	50		 push	 eax
  005d3	8d 4d da	 lea	 ecx, DWORD PTR _pMsg$[ebp+18]
  005d6	51		 push	 ecx
  005d7	e8 00 00 00 00	 call	 _memcpy
  005dc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 175  : 
; 176  : 		pMsg.iCountHeart2 = gObjGetItemCountInInventory(this->iClassIndex2, ITEMGET(14,12), 1);

  005df	6a 01		 push	 1
  005e1	68 0c 1c 00 00	 push	 7180			; 00001c0cH
  005e6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005e9	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  005ec	51		 push	 ecx
  005ed	e8 00 00 00 00	 call	 ?gObjGetItemCountInInventory@@YAHHHH@Z ; gObjGetItemCountInInventory
  005f2	83 c4 0c	 add	 esp, 12			; 0000000cH
  005f5	89 45 ec	 mov	 DWORD PTR _pMsg$[ebp+36], eax

; 177  : 
; 178  : 		if(pMsg.iNeedHeart2 > pMsg.iCountHeart2)

  005f8	8b 45 f4	 mov	 eax, DWORD PTR _pMsg$[ebp+44]
  005fb	3b 45 ec	 cmp	 eax, DWORD PTR _pMsg$[ebp+36]
  005fe	7e 04		 jle	 SHORT $LN4@GCInfoName

; 179  : 		{
; 180  : 			pMsg.bResult = false;

  00600	c6 45 cc 00	 mov	 BYTE PTR _pMsg$[ebp+4], 0
$LN4@GCInfoName:

; 181  : 		}
; 182  : 	}	
; 183  : 	else

  00604	eb 04		 jmp	 SHORT $LN3@GCInfoName
$LN5@GCInfoName:

; 184  : 	{
; 185  : 		pMsg.bResult = false;

  00606	c6 45 cc 00	 mov	 BYTE PTR _pMsg$[ebp+4], 0
$LN3@GCInfoName:

; 186  : 	}
; 187  : 
; 188  : 	if(this->iClassIndex1 != -1)

  0060a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0060d	83 78 3c ff	 cmp	 DWORD PTR [eax+60], -1
  00611	74 15		 je	 SHORT $LN2@GCInfoName

; 189  : 	{
; 190  : 		DataSend(this->iClassIndex1, (LPBYTE)&pMsg, sizeof(pMsg));

  00613	6a 30		 push	 48			; 00000030H
  00615	8d 45 c8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00618	50		 push	 eax
  00619	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0061c	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  0061f	52		 push	 edx
  00620	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00625	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@GCInfoName:

; 191  : 	}
; 192  : 
; 193  : 	if(this->iClassIndex2 != -1)

  00628	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0062b	83 78 40 ff	 cmp	 DWORD PTR [eax+64], -1
  0062f	74 15		 je	 SHORT $LN10@GCInfoName

; 194  : 	{
; 195  : 		DataSend(this->iClassIndex2, (LPBYTE)&pMsg, sizeof(pMsg));

  00631	6a 30		 push	 48			; 00000030H
  00633	8d 45 c8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00636	50		 push	 eax
  00637	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0063a	8b 51 40	 mov	 edx, DWORD PTR [ecx+64]
  0063d	52		 push	 edx
  0063e	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00643	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@GCInfoName:

; 196  : 	}	
; 197  : }

  00646	5f		 pop	 edi
  00647	5e		 pop	 esi
  00648	5b		 pop	 ebx
  00649	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0064c	33 cd		 xor	 ecx, ebp
  0064e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00653	8b e5		 mov	 esp, ebp
  00655	5d		 pop	 ebp
  00656	c3		 ret	 0
?GCInfoNames@CMarriage@@QAEXXZ ENDP			; CMarriage::GCInfoNames
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\include\prodef.h
_TEXT	ENDS
;	COMDAT ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpBuf$ = 8						; size = 4
_head$ = 12						; size = 1
_sub$ = 16						; size = 1
_size$ = 20						; size = 1
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z PROC			; PBMSG_HEAD2::set, COMDAT
; _this$ = ecx

; 104  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 105  : 		lpBuf[0] = 0xC1;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  0000f	c6 00 c1	 mov	 BYTE PTR [eax], 193	; 000000c1H

; 106  : 		lpBuf[1] = size;

  00012	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  00015	8a 4d 14	 mov	 cl, BYTE PTR _size$[ebp]
  00018	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 107  : 		lpBuf[2] = head;

  0001b	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  0001e	8a 4d 0c	 mov	 cl, BYTE PTR _head$[ebp]
  00021	88 48 02	 mov	 BYTE PTR [eax+2], cl

; 108  : 		lpBuf[3] = sub;

  00024	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  00027	8a 4d 10	 mov	 cl, BYTE PTR _sub$[ebp]
  0002a	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 109  : 	};

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 10 00	 ret	 16			; 00000010H
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ENDP			; PBMSG_HEAD2::set
_TEXT	ENDS
PUBLIC	?IndexClose@CMarriage@@QAEXH@Z			; CMarriage::IndexClose
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\marriage.cpp
_TEXT	SEGMENT
tv69 = -72						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
?IndexClose@CMarriage@@QAEXH@Z PROC			; CMarriage::IndexClose
; _this$ = ecx

; 200  : {

  00660	55		 push	 ebp
  00661	8b ec		 mov	 ebp, esp
  00663	83 ec 48	 sub	 esp, 72			; 00000048H
  00666	53		 push	 ebx
  00667	56		 push	 esi
  00668	57		 push	 edi
  00669	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 201  : 	if(!this->Enable)

  0066c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0066f	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00672	85 c9		 test	 ecx, ecx
  00674	75 02		 jne	 SHORT $LN4@IndexClose

; 202  : 	{
; 203  : 		return;

  00676	eb 66		 jmp	 SHORT $LN5@IndexClose
$LN4@IndexClose:

; 204  : 	}
; 205  : 
; 206  : 	if(!OBJMAX_RANGE(aIndex))

  00678	83 7d 08 00	 cmp	 DWORD PTR _aIndex$[ebp], 0
  0067c	7d 09		 jge	 SHORT $LN7@IndexClose
  0067e	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
  00685	eb 0f		 jmp	 SHORT $LN8@IndexClose
$LN7@IndexClose:
  00687	33 c0		 xor	 eax, eax
  00689	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _aIndex$[ebp], 14999 ; 00003a97H
  00690	0f 9e c0	 setle	 al
  00693	89 45 b8	 mov	 DWORD PTR tv69[ebp], eax
$LN8@IndexClose:
  00696	83 7d b8 00	 cmp	 DWORD PTR tv69[ebp], 0
  0069a	75 02		 jne	 SHORT $LN3@IndexClose

; 207  : 	{
; 208  : 		return;

  0069c	eb 40		 jmp	 SHORT $LN5@IndexClose
$LN3@IndexClose:

; 209  : 	}
; 210  : 
; 211  : 	if(aIndex == this->iClassIndex1)

  0069e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  006a1	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  006a4	3b 48 3c	 cmp	 ecx, DWORD PTR [eax+60]
  006a7	75 11		 jne	 SHORT $LN2@IndexClose

; 212  : 	{
; 213  : 		this->iClassIndex1 = -1;

  006a9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  006ac	c7 40 3c ff ff
	ff ff		 mov	 DWORD PTR [eax+60], -1

; 214  : 		this->bClickOK1 = false;

  006b3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  006b6	c6 40 44 00	 mov	 BYTE PTR [eax+68], 0
$LN2@IndexClose:

; 215  : 	}
; 216  : 
; 217  : 	if(aIndex == this->iClassIndex2)

  006ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  006bd	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  006c0	3b 48 40	 cmp	 ecx, DWORD PTR [eax+64]
  006c3	75 11		 jne	 SHORT $LN1@IndexClose

; 218  : 	{
; 219  : 		this->iClassIndex2 = -1;

  006c5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  006c8	c7 40 40 ff ff
	ff ff		 mov	 DWORD PTR [eax+64], -1

; 220  : 		this->bClickOK2 = false;

  006cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  006d2	c6 40 45 00	 mov	 BYTE PTR [eax+69], 0
$LN1@IndexClose:

; 221  : 	}
; 222  : 
; 223  : 	this->GCInfoNames();

  006d6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006d9	e8 00 00 00 00	 call	 ?GCInfoNames@CMarriage@@QAEXXZ ; CMarriage::GCInfoNames
$LN5@IndexClose:

; 224  : }

  006de	5f		 pop	 edi
  006df	5e		 pop	 esi
  006e0	5b		 pop	 ebx
  006e1	8b e5		 mov	 esp, ebp
  006e3	5d		 pop	 ebp
  006e4	c2 04 00	 ret	 4
?IndexClose@CMarriage@@QAEXH@Z ENDP			; CMarriage::IndexClose
_TEXT	ENDS
PUBLIC	?CGWindowClose@CMarriage@@QAEXXZ		; CMarriage::CGWindowClose
PUBLIC	?GDInsert@CMarriage@@QAEXXZ			; CMarriage::GDInsert
PUBLIC	?CGClickOK@CMarriage@@QAEXH@Z			; CMarriage::CGClickOK
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv93 = -72						; size = 4
tv86 = -72						; size = 4
tv69 = -72						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
?CGClickOK@CMarriage@@QAEXH@Z PROC			; CMarriage::CGClickOK
; _this$ = ecx

; 227  : {

  006f0	55		 push	 ebp
  006f1	8b ec		 mov	 ebp, esp
  006f3	83 ec 48	 sub	 esp, 72			; 00000048H
  006f6	53		 push	 ebx
  006f7	56		 push	 esi
  006f8	57		 push	 edi
  006f9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 228  : 	if(!this->Enable)

  006fc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  006ff	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00702	85 c9		 test	 ecx, ecx
  00704	75 05		 jne	 SHORT $LN7@CGClickOK

; 229  : 	{
; 230  : 		return;

  00706	e9 e4 00 00 00	 jmp	 $LN8@CGClickOK
$LN7@CGClickOK:

; 231  : 	}
; 232  : 
; 233  : 	if(!OBJMAX_RANGE(aIndex))

  0070b	83 7d 08 00	 cmp	 DWORD PTR _aIndex$[ebp], 0
  0070f	7d 09		 jge	 SHORT $LN10@CGClickOK
  00711	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
  00718	eb 0f		 jmp	 SHORT $LN11@CGClickOK
$LN10@CGClickOK:
  0071a	33 c0		 xor	 eax, eax
  0071c	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _aIndex$[ebp], 14999 ; 00003a97H
  00723	0f 9e c0	 setle	 al
  00726	89 45 b8	 mov	 DWORD PTR tv69[ebp], eax
$LN11@CGClickOK:
  00729	83 7d b8 00	 cmp	 DWORD PTR tv69[ebp], 0
  0072d	75 05		 jne	 SHORT $LN6@CGClickOK

; 234  : 	{
; 235  : 		return;

  0072f	e9 bb 00 00 00	 jmp	 $LN8@CGClickOK
$LN6@CGClickOK:

; 236  : 	}
; 237  : 
; 238  : 	if (gObj[aIndex].Connected < PLAYER_PLAYING)

  00734	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00737	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0073d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00743	83 7c 01 04 03	 cmp	 DWORD PTR [ecx+eax+4], 3
  00748	7d 05		 jge	 SHORT $LN5@CGClickOK

; 239  : 	{
; 240  : 		return;

  0074a	e9 a0 00 00 00	 jmp	 $LN8@CGClickOK
$LN5@CGClickOK:

; 241  : 	}
; 242  : 
; 243  : 	if(aIndex == this->iClassIndex1)

  0074f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00752	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  00755	3b 48 3c	 cmp	 ecx, DWORD PTR [eax+60]
  00758	75 07		 jne	 SHORT $LN4@CGClickOK

; 244  : 	{
; 245  : 		this->bClickOK1 = true;

  0075a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0075d	c6 40 44 01	 mov	 BYTE PTR [eax+68], 1
$LN4@CGClickOK:

; 246  : 	}
; 247  : 
; 248  : 	if(aIndex == this->iClassIndex2)

  00761	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00764	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  00767	3b 48 40	 cmp	 ecx, DWORD PTR [eax+64]
  0076a	75 07		 jne	 SHORT $LN3@CGClickOK

; 249  : 	{
; 250  : 		this->bClickOK2 = true;

  0076c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0076f	c6 40 45 01	 mov	 BYTE PTR [eax+69], 1
$LN3@CGClickOK:

; 251  : 	}
; 252  : 
; 253  : 	if(OBJMAX_RANGE(this->iClassIndex1) && OBJMAX_RANGE(this->iClassIndex2))

  00773	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00776	83 78 3c 00	 cmp	 DWORD PTR [eax+60], 0
  0077a	7d 09		 jge	 SHORT $LN12@CGClickOK
  0077c	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv86[ebp], 0
  00783	eb 12		 jmp	 SHORT $LN13@CGClickOK
$LN12@CGClickOK:
  00785	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00788	33 d2		 xor	 edx, edx
  0078a	81 79 3c 97 3a
	00 00		 cmp	 DWORD PTR [ecx+60], 14999 ; 00003a97H
  00791	0f 9e c2	 setle	 dl
  00794	89 55 b8	 mov	 DWORD PTR tv86[ebp], edx
$LN13@CGClickOK:
  00797	83 7d b8 00	 cmp	 DWORD PTR tv86[ebp], 0
  0079b	74 52		 je	 SHORT $LN8@CGClickOK
  0079d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  007a0	83 78 40 00	 cmp	 DWORD PTR [eax+64], 0
  007a4	7d 09		 jge	 SHORT $LN14@CGClickOK
  007a6	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
  007ad	eb 12		 jmp	 SHORT $LN15@CGClickOK
$LN14@CGClickOK:
  007af	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  007b2	33 d2		 xor	 edx, edx
  007b4	81 79 40 97 3a
	00 00		 cmp	 DWORD PTR [ecx+64], 14999 ; 00003a97H
  007bb	0f 9e c2	 setle	 dl
  007be	89 55 b8	 mov	 DWORD PTR tv93[ebp], edx
$LN15@CGClickOK:
  007c1	83 7d b8 00	 cmp	 DWORD PTR tv93[ebp], 0
  007c5	74 28		 je	 SHORT $LN8@CGClickOK

; 254  : 	{
; 255  : 		if(this->bClickOK1 == true && this->bClickOK2 == true)

  007c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  007ca	0f b6 48 44	 movzx	 ecx, BYTE PTR [eax+68]
  007ce	83 f9 01	 cmp	 ecx, 1
  007d1	75 1c		 jne	 SHORT $LN8@CGClickOK
  007d3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  007d6	0f b6 48 45	 movzx	 ecx, BYTE PTR [eax+69]
  007da	83 f9 01	 cmp	 ecx, 1
  007dd	75 10		 jne	 SHORT $LN8@CGClickOK

; 256  : 		{
; 257  : 			this->GDInsert();

  007df	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  007e2	e8 00 00 00 00	 call	 ?GDInsert@CMarriage@@QAEXXZ ; CMarriage::GDInsert

; 258  : 			this->CGWindowClose();

  007e7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  007ea	e8 00 00 00 00	 call	 ?CGWindowClose@CMarriage@@QAEXXZ ; CMarriage::CGWindowClose
$LN8@CGClickOK:

; 259  : 		}
; 260  : 	}
; 261  : }

  007ef	5f		 pop	 edi
  007f0	5e		 pop	 esi
  007f1	5b		 pop	 ebx
  007f2	8b e5		 mov	 esp, ebp
  007f4	5d		 pop	 ebp
  007f5	c2 04 00	 ret	 4
?CGClickOK@CMarriage@@QAEXH@Z ENDP			; CMarriage::CGClickOK
; Function compile flags: /Odtp /ZI
_pMsg$ = -8						; size = 4
_this$ = -4						; size = 4
?CGWindowClose@CMarriage@@QAEXXZ PROC			; CMarriage::CGWindowClose
; _this$ = ecx

; 264  : {

  00800	55		 push	 ebp
  00801	8b ec		 mov	 ebp, esp
  00803	83 ec 48	 sub	 esp, 72			; 00000048H
  00806	53		 push	 ebx
  00807	56		 push	 esi
  00808	57		 push	 edi
  00809	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 265  : 	PMSG_GC_MARRIAGE_WIN_CLOSE pMsg;
; 266  : 	pMsg.h.set((LPBYTE)&pMsg, 0xFB, 0x32, sizeof(pMsg));

  0080c	6a 04		 push	 4
  0080e	6a 32		 push	 50			; 00000032H
  00810	68 fb 00 00 00	 push	 251			; 000000fbH
  00815	8d 45 f8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00818	50		 push	 eax
  00819	8d 4d f8	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  0081c	e8 00 00 00 00	 call	 ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ; PBMSG_HEAD2::set

; 267  : 	DataSend(this->iClassIndex1, (LPBYTE)&pMsg, sizeof(pMsg));

  00821	6a 04		 push	 4
  00823	8d 45 f8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00826	50		 push	 eax
  00827	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0082a	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  0082d	52		 push	 edx
  0082e	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00833	83 c4 0c	 add	 esp, 12			; 0000000cH

; 268  : 	DataSend(this->iClassIndex2, (LPBYTE)&pMsg, sizeof(pMsg));

  00836	6a 04		 push	 4
  00838	8d 45 f8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0083b	50		 push	 eax
  0083c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0083f	8b 51 40	 mov	 edx, DWORD PTR [ecx+64]
  00842	52		 push	 edx
  00843	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00848	83 c4 0c	 add	 esp, 12			; 0000000cH

; 269  : 
; 270  : 	this->iClassIndex1 = -1;

  0084b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0084e	c7 40 3c ff ff
	ff ff		 mov	 DWORD PTR [eax+60], -1

; 271  : 	this->bClickOK1 = false;

  00855	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00858	c6 40 44 00	 mov	 BYTE PTR [eax+68], 0

; 272  : 	this->iClassIndex2 = -1;

  0085c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0085f	c7 40 40 ff ff
	ff ff		 mov	 DWORD PTR [eax+64], -1

; 273  : 	this->bClickOK2 = false;

  00866	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00869	c6 40 45 00	 mov	 BYTE PTR [eax+69], 0

; 274  : }

  0086d	5f		 pop	 edi
  0086e	5e		 pop	 esi
  0086f	5b		 pop	 ebx
  00870	8b e5		 mov	 esp, ebp
  00872	5d		 pop	 ebp
  00873	c3		 ret	 0
?CGWindowClose@CMarriage@@QAEXXZ ENDP			; CMarriage::CGWindowClose
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GDLoad@CMarriage@@QAEXH@Z			; CMarriage::GDLoad
EXTRN	?Send@DBSockMng@@QAEHPADH@Z:PROC		; DBSockMng::Send
EXTRN	?cDBSMng@@3VDBSockMng@@A:BYTE			; cDBSMng
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv69 = -100						; size = 4
_pMsg$ = -32						; size = 20
_lpUser$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?GDLoad@CMarriage@@QAEXH@Z PROC				; CMarriage::GDLoad
; _this$ = ecx

; 277  : {

  00880	55		 push	 ebp
  00881	8b ec		 mov	 ebp, esp
  00883	83 ec 64	 sub	 esp, 100		; 00000064H
  00886	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0088b	33 c5		 xor	 eax, ebp
  0088d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00890	53		 push	 ebx
  00891	56		 push	 esi
  00892	57		 push	 edi
  00893	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 278  : 	if(!this->Enable)

  00896	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00899	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0089c	85 c9		 test	 ecx, ecx
  0089e	75 05		 jne	 SHORT $LN5@GDLoad

; 279  : 	{
; 280  : 		return;

  008a0	e9 d6 00 00 00	 jmp	 $LN6@GDLoad
$LN5@GDLoad:

; 281  : 	}
; 282  : 
; 283  : 	if(!OBJMAX_RANGE(aIndex))

  008a5	83 7d 08 00	 cmp	 DWORD PTR _aIndex$[ebp], 0
  008a9	7d 09		 jge	 SHORT $LN8@GDLoad
  008ab	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
  008b2	eb 0f		 jmp	 SHORT $LN9@GDLoad
$LN8@GDLoad:
  008b4	33 c0		 xor	 eax, eax
  008b6	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _aIndex$[ebp], 14999 ; 00003a97H
  008bd	0f 9e c0	 setle	 al
  008c0	89 45 9c	 mov	 DWORD PTR tv69[ebp], eax
$LN9@GDLoad:
  008c3	83 7d 9c 00	 cmp	 DWORD PTR tv69[ebp], 0
  008c7	75 05		 jne	 SHORT $LN4@GDLoad

; 284  : 	{
; 285  : 		return;

  008c9	e9 ad 00 00 00	 jmp	 $LN6@GDLoad
$LN4@GDLoad:

; 286  : 	}
; 287  : 
; 288  : 	LPOBJ lpUser = &gObj[aIndex];

  008ce	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  008d1	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  008d7	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  008dd	89 45 f4	 mov	 DWORD PTR _lpUser$[ebp], eax

; 289  : 
; 290  : 	PMSG_REQ_MARRIAGE_LOAD pMsg;
; 291  : 	pMsg.h.set((LPBYTE)&pMsg, 0xEB, 0x00, sizeof(pMsg));

  008e0	6a 14		 push	 20			; 00000014H
  008e2	6a 00		 push	 0
  008e4	68 eb 00 00 00	 push	 235			; 000000ebH
  008e9	8d 45 e0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  008ec	50		 push	 eax
  008ed	8d 4d e0	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  008f0	e8 00 00 00 00	 call	 ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ; PBMSG_HEAD2::set

; 292  : 
; 293  : 	pMsg.aIndex = aIndex;

  008f5	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  008f8	89 45 e4	 mov	 DWORD PTR _pMsg$[ebp+4], eax

; 294  : 
; 295  : 	if(lpUser->Class == CLASS_KNIGHT || lpUser->Class == CLASS_WIZARD || lpUser->Class == CLASS_MAGUMSA || lpUser->Class == CLASS_DARKLORD || lpUser->Class == CLASS_MONK)

  008fb	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  008fe	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00905	83 f9 01	 cmp	 ecx, 1
  00908	74 3b		 je	 SHORT $LN2@GDLoad
  0090a	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  0090d	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00914	85 c9		 test	 ecx, ecx
  00916	74 2d		 je	 SHORT $LN2@GDLoad
  00918	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  0091b	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00922	83 f9 03	 cmp	 ecx, 3
  00925	74 1e		 je	 SHORT $LN2@GDLoad
  00927	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  0092a	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00931	83 f9 04	 cmp	 ecx, 4
  00934	74 0f		 je	 SHORT $LN2@GDLoad
  00936	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00939	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00940	83 f9 06	 cmp	 ecx, 6
  00943	75 06		 jne	 SHORT $LN3@GDLoad
$LN2@GDLoad:

; 296  : 	{
; 297  : 		pMsg.bClass = 0;

  00945	c6 45 e8 00	 mov	 BYTE PTR _pMsg$[ebp+8], 0

; 298  : 	}
; 299  : 	else

  00949	eb 04		 jmp	 SHORT $LN1@GDLoad
$LN3@GDLoad:

; 300  : 	{
; 301  : 		pMsg.bClass = 1;

  0094b	c6 45 e8 01	 mov	 BYTE PTR _pMsg$[ebp+8], 1
$LN1@GDLoad:

; 302  : 	}
; 303  : 
; 304  : 	pMsg.szName[10] = 0;

  0094f	c6 45 f3 00	 mov	 BYTE PTR _pMsg$[ebp+19], 0

; 305  : 	memcpy(pMsg.szName, lpUser->Name, sizeof(pMsg.szName)-1);

  00953	6a 0a		 push	 10			; 0000000aH
  00955	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00958	83 c0 77	 add	 eax, 119		; 00000077H
  0095b	50		 push	 eax
  0095c	8d 4d e9	 lea	 ecx, DWORD PTR _pMsg$[ebp+9]
  0095f	51		 push	 ecx
  00960	e8 00 00 00 00	 call	 _memcpy
  00965	83 c4 0c	 add	 esp, 12			; 0000000cH

; 306  : 
; 307  : 	cDBSMng.Send((char*)&pMsg, pMsg.h.size);

  00968	0f b6 45 e1	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  0096c	50		 push	 eax
  0096d	8d 4d e0	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  00970	51		 push	 ecx
  00971	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  00976	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
$LN6@GDLoad:

; 308  : }

  0097b	5f		 pop	 edi
  0097c	5e		 pop	 esi
  0097d	5b		 pop	 ebx
  0097e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00981	33 cd		 xor	 ecx, ebp
  00983	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00988	8b e5		 mov	 esp, ebp
  0098a	5d		 pop	 ebp
  0098b	c2 04 00	 ret	 4
?GDLoad@CMarriage@@QAEXH@Z ENDP				; CMarriage::GDLoad
_TEXT	ENDS
PUBLIC	??_C@_0BP@GHBGENBP@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Offline?$AA@ ; `string'
PUBLIC	??_C@_0BO@IBFJODPM@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Online?$AA@ ; `string'
PUBLIC	??_C@_0CC@EAIMMKON@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Connected@ ; `string'
PUBLIC	?DGLoad@CMarriage@@QAEXPAUPMSG_ANS_MARRIAGE_LOAD@@@Z ; CMarriage::DGLoad
EXTRN	?MessageChat@@YAXHPADZZ:PROC			; MessageChat
EXTRN	_strcmp:PROC
;	COMDAT ??_C@_0BP@GHBGENBP@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Offline?$AA@
CONST	SEGMENT
??_C@_0BP@GHBGENBP@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Offline?$AA@ DB '~'
	DB	'[MARRIAGE] Player: %s Offline', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@IBFJODPM@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Online?$AA@
CONST	SEGMENT
??_C@_0BO@IBFJODPM@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Online?$AA@ DB '~'
	DB	'[MARRIAGE] Player: %s Online', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@EAIMMKON@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Connected@
CONST	SEGMENT
??_C@_0CC@EAIMMKON@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Connected@ DB '~'
	DB	'[MARRIAGE] Player: %s Connected!', 00H	; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
tv68 = -92						; size = 4
_sObj$229031 = -24					; size = 4
_n$229027 = -20						; size = 4
_bMarriageOnline$ = -13					; size = 1
_lpUser$ = -12						; size = 4
_aIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_aRecv$ = 8						; size = 4
?DGLoad@CMarriage@@QAEXPAUPMSG_ANS_MARRIAGE_LOAD@@@Z PROC ; CMarriage::DGLoad
; _this$ = ecx

; 311  : {

  00990	55		 push	 ebp
  00991	8b ec		 mov	 ebp, esp
  00993	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00996	53		 push	 ebx
  00997	56		 push	 esi
  00998	57		 push	 edi
  00999	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 312  : 	int aIndex = aRecv->aIndex;

  0099c	8b 45 08	 mov	 eax, DWORD PTR _aRecv$[ebp]
  0099f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  009a2	89 4d f8	 mov	 DWORD PTR _aIndex$[ebp], ecx

; 313  : 
; 314  : 	if(!OBJMAX_RANGE(aIndex))

  009a5	83 7d f8 00	 cmp	 DWORD PTR _aIndex$[ebp], 0
  009a9	7d 09		 jge	 SHORT $LN13@DGLoad
  009ab	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
  009b2	eb 0f		 jmp	 SHORT $LN14@DGLoad
$LN13@DGLoad:
  009b4	33 c0		 xor	 eax, eax
  009b6	81 7d f8 97 3a
	00 00		 cmp	 DWORD PTR _aIndex$[ebp], 14999 ; 00003a97H
  009bd	0f 9e c0	 setle	 al
  009c0	89 45 a4	 mov	 DWORD PTR tv68[ebp], eax
$LN14@DGLoad:
  009c3	83 7d a4 00	 cmp	 DWORD PTR tv68[ebp], 0
  009c7	75 05		 jne	 SHORT $LN10@DGLoad

; 315  : 	{
; 316  : 		return;

  009c9	e9 17 01 00 00	 jmp	 $LN11@DGLoad
$LN10@DGLoad:

; 317  : 	}
; 318  : 
; 319  : 	LPOBJ lpUser = &gObj[aIndex];

  009ce	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  009d1	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  009d7	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  009dd	89 45 f4	 mov	 DWORD PTR _lpUser$[ebp], eax

; 320  : 
; 321  : 	lpUser->bMarriage = true;

  009e0	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  009e3	c6 80 ed 28 00
	00 01		 mov	 BYTE PTR [eax+10477], 1

; 322  : 
; 323  : 	lpUser->MarriageName[10] = 0;

  009ea	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  009ed	c6 80 f8 28 00
	00 00		 mov	 BYTE PTR [eax+10488], 0

; 324  : 	memcpy(lpUser->MarriageName, aRecv->szMarriageName, sizeof(lpUser->MarriageName)-1);

  009f4	6a 0a		 push	 10			; 0000000aH
  009f6	8b 45 08	 mov	 eax, DWORD PTR _aRecv$[ebp]
  009f9	83 c0 08	 add	 eax, 8
  009fc	50		 push	 eax
  009fd	8b 4d f4	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  00a00	81 c1 ee 28 00
	00		 add	 ecx, 10478		; 000028eeH
  00a06	51		 push	 ecx
  00a07	e8 00 00 00 00	 call	 _memcpy
  00a0c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 325  : 
; 326  : 	bool bMarriageOnline = false;

  00a0f	c6 45 f3 00	 mov	 BYTE PTR _bMarriageOnline$[ebp], 0

; 327  : 
; 328  : 	for(int n = OBJ_STARTUSERINDEX; n < OBJMAX; n++)

  00a13	c7 45 ec b0 36
	00 00		 mov	 DWORD PTR _n$229027[ebp], 14000 ; 000036b0H
  00a1a	eb 09		 jmp	 SHORT $LN9@DGLoad
$LN8@DGLoad:
  00a1c	8b 45 ec	 mov	 eax, DWORD PTR _n$229027[ebp]
  00a1f	83 c0 01	 add	 eax, 1
  00a22	89 45 ec	 mov	 DWORD PTR _n$229027[ebp], eax
$LN9@DGLoad:
  00a25	81 7d ec 98 3a
	00 00		 cmp	 DWORD PTR _n$229027[ebp], 15000 ; 00003a98H
  00a2c	7d 79		 jge	 SHORT $LN7@DGLoad

; 329  : 	{
; 330  : 		LPOBJ sObj = &gObj[n];

  00a2e	8b 45 ec	 mov	 eax, DWORD PTR _n$229027[ebp]
  00a31	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00a37	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a3d	89 45 e8	 mov	 DWORD PTR _sObj$229031[ebp], eax

; 331  : 
; 332  : 		if(sObj->Connected < PLAYER_PLAYING || n == aIndex) 

  00a40	8b 45 e8	 mov	 eax, DWORD PTR _sObj$229031[ebp]
  00a43	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  00a47	7c 08		 jl	 SHORT $LN5@DGLoad
  00a49	8b 45 ec	 mov	 eax, DWORD PTR _n$229027[ebp]
  00a4c	3b 45 f8	 cmp	 eax, DWORD PTR _aIndex$[ebp]
  00a4f	75 02		 jne	 SHORT $LN6@DGLoad
$LN5@DGLoad:

; 333  : 		{
; 334  : 			continue;

  00a51	eb c9		 jmp	 SHORT $LN8@DGLoad
$LN6@DGLoad:

; 335  : 		}
; 336  : 
; 337  : 		if(sObj->Name[0] == lpUser->MarriageName[0])

  00a53	8b 45 e8	 mov	 eax, DWORD PTR _sObj$229031[ebp]
  00a56	0f be 48 77	 movsx	 ecx, BYTE PTR [eax+119]
  00a5a	8b 55 f4	 mov	 edx, DWORD PTR _lpUser$[ebp]
  00a5d	0f be 82 ee 28
	00 00		 movsx	 eax, BYTE PTR [edx+10478]
  00a64	3b c8		 cmp	 ecx, eax
  00a66	75 3a		 jne	 SHORT $LN4@DGLoad

; 338  : 		{
; 339  : 			if(strcmp(sObj->Name, lpUser->MarriageName) == 0)

  00a68	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00a6b	05 ee 28 00 00	 add	 eax, 10478		; 000028eeH
  00a70	50		 push	 eax
  00a71	8b 4d e8	 mov	 ecx, DWORD PTR _sObj$229031[ebp]
  00a74	83 c1 77	 add	 ecx, 119		; 00000077H
  00a77	51		 push	 ecx
  00a78	e8 00 00 00 00	 call	 _strcmp
  00a7d	83 c4 08	 add	 esp, 8
  00a80	85 c0		 test	 eax, eax
  00a82	75 1e		 jne	 SHORT $LN4@DGLoad

; 340  : 			{
; 341  : 				bMarriageOnline = true;

  00a84	c6 45 f3 01	 mov	 BYTE PTR _bMarriageOnline$[ebp], 1

; 342  : 				MessageChat(n, "~[MARRIAGE] Player: %s Connected!", lpUser->Name);

  00a88	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00a8b	83 c0 77	 add	 eax, 119		; 00000077H
  00a8e	50		 push	 eax
  00a8f	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@EAIMMKON@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Connected@
  00a94	8b 4d ec	 mov	 ecx, DWORD PTR _n$229027[ebp]
  00a97	51		 push	 ecx
  00a98	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat
  00a9d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 343  : 				break;

  00aa0	eb 05		 jmp	 SHORT $LN7@DGLoad
$LN4@DGLoad:

; 344  : 			}
; 345  : 		}				
; 346  : 	}

  00aa2	e9 75 ff ff ff	 jmp	 $LN8@DGLoad
$LN7@DGLoad:

; 347  : 
; 348  : 	if(bMarriageOnline)

  00aa7	0f b6 45 f3	 movzx	 eax, BYTE PTR _bMarriageOnline$[ebp]
  00aab	85 c0		 test	 eax, eax
  00aad	74 1c		 je	 SHORT $LN2@DGLoad

; 349  : 	{
; 350  : 		MessageChat(aIndex, "~[MARRIAGE] Player: %s Online", lpUser->MarriageName);

  00aaf	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00ab2	05 ee 28 00 00	 add	 eax, 10478		; 000028eeH
  00ab7	50		 push	 eax
  00ab8	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@IBFJODPM@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Online?$AA@
  00abd	8b 4d f8	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  00ac0	51		 push	 ecx
  00ac1	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat
  00ac6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 351  : 	}
; 352  : 	else

  00ac9	eb 1a		 jmp	 SHORT $LN11@DGLoad
$LN2@DGLoad:

; 353  : 	{
; 354  : 		MessageChat(aIndex, "~[MARRIAGE] Player: %s Offline", lpUser->MarriageName);

  00acb	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00ace	05 ee 28 00 00	 add	 eax, 10478		; 000028eeH
  00ad3	50		 push	 eax
  00ad4	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@GHBGENBP@?$HO?$FLMARRIAGE?$FN?5Player?3?5?$CFs?5Offline?$AA@
  00ad9	8b 4d f8	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  00adc	51		 push	 ecx
  00add	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat
  00ae2	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN11@DGLoad:

; 355  : 	}
; 356  : }

  00ae5	5f		 pop	 edi
  00ae6	5e		 pop	 esi
  00ae7	5b		 pop	 ebx
  00ae8	8b e5		 mov	 esp, ebp
  00aea	5d		 pop	 ebp
  00aeb	c2 04 00	 ret	 4
?DGLoad@CMarriage@@QAEXPAUPMSG_ANS_MARRIAGE_LOAD@@@Z ENDP ; CMarriage::DGLoad
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv78 = -120						; size = 4
tv71 = -120						; size = 4
_pMsg$ = -52						; size = 36
_lpUser2$ = -16						; size = 4
_lpUser1$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?GDInsert@CMarriage@@QAEXXZ PROC			; CMarriage::GDInsert
; _this$ = ecx

; 359  : {

  00af0	55		 push	 ebp
  00af1	8b ec		 mov	 ebp, esp
  00af3	83 ec 78	 sub	 esp, 120		; 00000078H
  00af6	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00afb	33 c5		 xor	 eax, ebp
  00afd	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00b00	53		 push	 ebx
  00b01	56		 push	 esi
  00b02	57		 push	 edi
  00b03	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 360  : 	if(!this->Enable)

  00b06	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b09	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00b0c	85 c9		 test	 ecx, ecx
  00b0e	75 05		 jne	 SHORT $LN3@GDInsert

; 361  : 	{
; 362  : 		return;

  00b10	e9 ef 00 00 00	 jmp	 $LN4@GDInsert
$LN3@GDInsert:

; 363  : 	}
; 364  : 
; 365  : 	if(!OBJMAX_RANGE(this->iClassIndex1) || !OBJMAX_RANGE(this->iClassIndex2))

  00b15	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b18	83 78 3c 00	 cmp	 DWORD PTR [eax+60], 0
  00b1c	7d 09		 jge	 SHORT $LN6@GDInsert
  00b1e	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
  00b25	eb 12		 jmp	 SHORT $LN7@GDInsert
$LN6@GDInsert:
  00b27	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b2a	33 d2		 xor	 edx, edx
  00b2c	81 79 3c 97 3a
	00 00		 cmp	 DWORD PTR [ecx+60], 14999 ; 00003a97H
  00b33	0f 9e c2	 setle	 dl
  00b36	89 55 88	 mov	 DWORD PTR tv71[ebp], edx
$LN7@GDInsert:
  00b39	83 7d 88 00	 cmp	 DWORD PTR tv71[ebp], 0
  00b3d	74 2a		 je	 SHORT $LN1@GDInsert
  00b3f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b42	83 78 40 00	 cmp	 DWORD PTR [eax+64], 0
  00b46	7d 09		 jge	 SHORT $LN8@GDInsert
  00b48	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
  00b4f	eb 12		 jmp	 SHORT $LN9@GDInsert
$LN8@GDInsert:
  00b51	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b54	33 d2		 xor	 edx, edx
  00b56	81 79 40 97 3a
	00 00		 cmp	 DWORD PTR [ecx+64], 14999 ; 00003a97H
  00b5d	0f 9e c2	 setle	 dl
  00b60	89 55 88	 mov	 DWORD PTR tv78[ebp], edx
$LN9@GDInsert:
  00b63	83 7d 88 00	 cmp	 DWORD PTR tv78[ebp], 0
  00b67	75 05		 jne	 SHORT $LN2@GDInsert
$LN1@GDInsert:

; 366  : 	{
; 367  : 		return;

  00b69	e9 96 00 00 00	 jmp	 $LN4@GDInsert
$LN2@GDInsert:

; 368  : 	}
; 369  : 
; 370  : 	LPOBJ lpUser1 = &gObj[this->iClassIndex1];

  00b6e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b71	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00b74	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00b7a	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00b80	89 4d f4	 mov	 DWORD PTR _lpUser1$[ebp], ecx

; 371  : 	LPOBJ lpUser2 = &gObj[this->iClassIndex2];

  00b83	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b86	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00b89	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00b8f	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00b95	89 4d f0	 mov	 DWORD PTR _lpUser2$[ebp], ecx

; 372  : 
; 373  : 	PMSG_REQ_MARRIAGE_INSERT pMsg;
; 374  : 	pMsg.h.set((LPBYTE)&pMsg, 0xEB, 0x01, sizeof(pMsg));

  00b98	6a 24		 push	 36			; 00000024H
  00b9a	6a 01		 push	 1
  00b9c	68 eb 00 00 00	 push	 235			; 000000ebH
  00ba1	8d 45 cc	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00ba4	50		 push	 eax
  00ba5	8d 4d cc	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  00ba8	e8 00 00 00 00	 call	 ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ; PBMSG_HEAD2::set

; 375  : 	pMsg.aIndex1 = this->iClassIndex1;

  00bad	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00bb0	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00bb3	89 4d d0	 mov	 DWORD PTR _pMsg$[ebp+4], ecx

; 376  : 	pMsg.aIndex2 = this->iClassIndex2;

  00bb6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00bb9	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00bbc	89 4d d4	 mov	 DWORD PTR _pMsg$[ebp+8], ecx

; 377  : 
; 378  : 	pMsg.szName1[10] = 0;

  00bbf	c6 45 e2 00	 mov	 BYTE PTR _pMsg$[ebp+22], 0

; 379  : 	memcpy(pMsg.szName1, lpUser1->Name, sizeof(pMsg.szName1)-1);

  00bc3	6a 0a		 push	 10			; 0000000aH
  00bc5	8b 45 f4	 mov	 eax, DWORD PTR _lpUser1$[ebp]
  00bc8	83 c0 77	 add	 eax, 119		; 00000077H
  00bcb	50		 push	 eax
  00bcc	8d 4d d8	 lea	 ecx, DWORD PTR _pMsg$[ebp+12]
  00bcf	51		 push	 ecx
  00bd0	e8 00 00 00 00	 call	 _memcpy
  00bd5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 380  : 
; 381  : 	pMsg.szName2[10] = 0;

  00bd8	c6 45 ed 00	 mov	 BYTE PTR _pMsg$[ebp+33], 0

; 382  : 	memcpy(pMsg.szName2, lpUser2->Name, sizeof(pMsg.szName2)-1);

  00bdc	6a 0a		 push	 10			; 0000000aH
  00bde	8b 45 f0	 mov	 eax, DWORD PTR _lpUser2$[ebp]
  00be1	83 c0 77	 add	 eax, 119		; 00000077H
  00be4	50		 push	 eax
  00be5	8d 4d e3	 lea	 ecx, DWORD PTR _pMsg$[ebp+23]
  00be8	51		 push	 ecx
  00be9	e8 00 00 00 00	 call	 _memcpy
  00bee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 383  : 
; 384  : 	cDBSMng.Send((char*)&pMsg, pMsg.h.size);

  00bf1	0f b6 45 cd	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  00bf5	50		 push	 eax
  00bf6	8d 4d cc	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  00bf9	51		 push	 ecx
  00bfa	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  00bff	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
$LN4@GDInsert:

; 385  : }

  00c04	5f		 pop	 edi
  00c05	5e		 pop	 esi
  00c06	5b		 pop	 ebx
  00c07	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00c0a	33 cd		 xor	 ecx, ebp
  00c0c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00c11	8b e5		 mov	 esp, ebp
  00c13	5d		 pop	 ebp
  00c14	c3		 ret	 0
?GDInsert@CMarriage@@QAEXXZ ENDP			; CMarriage::GDInsert
_TEXT	ENDS
PUBLIC	??_C@_0CL@GLGFCIBN@Congratulations?0?5?$CFs?5and?5?$CFs?5are?5n@ ; `string'
PUBLIC	?DGInsert@CMarriage@@QAEXPAUPMSG_ANS_MARRIAGE_INSERT@@@Z ; CMarriage::DGInsert
EXTRN	?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z:PROC	; ItemSerialCreateSend
EXTRN	?GenExcOpt@@YAHH@Z:PROC				; GenExcOpt
EXTRN	?ExFireCracker@@YAXHEE@Z:PROC			; ExFireCracker
EXTRN	?MessaageAllGlobal@@YAXPADZZ:PROC		; MessaageAllGlobal
EXTRN	?gObjDeleteItemsCount@@YAHHFFH@Z:PROC		; gObjDeleteItemsCount
;	COMDAT ??_C@_0CL@GLGFCIBN@Congratulations?0?5?$CFs?5and?5?$CFs?5are?5n@
CONST	SEGMENT
??_C@_0CL@GLGFCIBN@Congratulations?0?5?$CFs?5and?5?$CFs?5are?5n@ DB 'Cong'
	DB	'ratulations, %s and %s are now married', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
tv77 = -104						; size = 4
tv72 = -104						; size = 4
_iItemExl$ = -36					; size = 4
_iItemOpt$ = -32					; size = 4
_iItemLevel$ = -28					; size = 4
_iItemType$ = -24					; size = 4
_lpUser2$ = -20						; size = 4
_lpUser1$ = -16						; size = 4
_aIndex2$ = -12						; size = 4
_aIndex1$ = -8						; size = 4
_this$ = -4						; size = 4
_aRecv$ = 8						; size = 4
?DGInsert@CMarriage@@QAEXPAUPMSG_ANS_MARRIAGE_INSERT@@@Z PROC ; CMarriage::DGInsert
; _this$ = ecx

; 388  : {

  00c20	55		 push	 ebp
  00c21	8b ec		 mov	 ebp, esp
  00c23	83 ec 68	 sub	 esp, 104		; 00000068H
  00c26	53		 push	 ebx
  00c27	56		 push	 esi
  00c28	57		 push	 edi
  00c29	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 389  : 	if(!aRecv->bResult)

  00c2c	8b 45 08	 mov	 eax, DWORD PTR _aRecv$[ebp]
  00c2f	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  00c33	85 c9		 test	 ecx, ecx
  00c35	75 05		 jne	 SHORT $LN5@DGInsert

; 390  : 	{
; 391  : 		return;

  00c37	e9 47 02 00 00	 jmp	 $LN6@DGInsert
$LN5@DGInsert:

; 392  : 	}
; 393  : 
; 394  : 	int aIndex1 = aRecv->aIndex1;

  00c3c	8b 45 08	 mov	 eax, DWORD PTR _aRecv$[ebp]
  00c3f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00c42	89 4d f8	 mov	 DWORD PTR _aIndex1$[ebp], ecx

; 395  : 	int aIndex2 = aRecv->aIndex2;

  00c45	8b 45 08	 mov	 eax, DWORD PTR _aRecv$[ebp]
  00c48	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00c4b	89 4d f4	 mov	 DWORD PTR _aIndex2$[ebp], ecx

; 396  : 
; 397  : 	if(!OBJMAX_RANGE(aIndex1) || !OBJMAX_RANGE(aIndex2))

  00c4e	83 7d f8 00	 cmp	 DWORD PTR _aIndex1$[ebp], 0
  00c52	7d 09		 jge	 SHORT $LN8@DGInsert
  00c54	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
  00c5b	eb 0f		 jmp	 SHORT $LN9@DGInsert
$LN8@DGInsert:
  00c5d	33 c0		 xor	 eax, eax
  00c5f	81 7d f8 97 3a
	00 00		 cmp	 DWORD PTR _aIndex1$[ebp], 14999 ; 00003a97H
  00c66	0f 9e c0	 setle	 al
  00c69	89 45 98	 mov	 DWORD PTR tv72[ebp], eax
$LN9@DGInsert:
  00c6c	83 7d 98 00	 cmp	 DWORD PTR tv72[ebp], 0
  00c70	74 24		 je	 SHORT $LN3@DGInsert
  00c72	83 7d f4 00	 cmp	 DWORD PTR _aIndex2$[ebp], 0
  00c76	7d 09		 jge	 SHORT $LN10@DGInsert
  00c78	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
  00c7f	eb 0f		 jmp	 SHORT $LN11@DGInsert
$LN10@DGInsert:
  00c81	33 c0		 xor	 eax, eax
  00c83	81 7d f4 97 3a
	00 00		 cmp	 DWORD PTR _aIndex2$[ebp], 14999 ; 00003a97H
  00c8a	0f 9e c0	 setle	 al
  00c8d	89 45 98	 mov	 DWORD PTR tv77[ebp], eax
$LN11@DGInsert:
  00c90	83 7d 98 00	 cmp	 DWORD PTR tv77[ebp], 0
  00c94	75 05		 jne	 SHORT $LN4@DGInsert
$LN3@DGInsert:

; 398  : 	{
; 399  : 		return;

  00c96	e9 e8 01 00 00	 jmp	 $LN6@DGInsert
$LN4@DGInsert:

; 400  : 	}
; 401  : 
; 402  : 	LPOBJ lpUser1 = &gObj[aIndex1];

  00c9b	8b 45 f8	 mov	 eax, DWORD PTR _aIndex1$[ebp]
  00c9e	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00ca4	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00caa	89 45 f0	 mov	 DWORD PTR _lpUser1$[ebp], eax

; 403  : 	LPOBJ lpUser2 = &gObj[aIndex2];

  00cad	8b 45 f4	 mov	 eax, DWORD PTR _aIndex2$[ebp]
  00cb0	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00cb6	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00cbc	89 45 ec	 mov	 DWORD PTR _lpUser2$[ebp], eax

; 404  : 
; 405  : 	if(lpUser1->Connected < PLAYER_PLAYING || lpUser2->Connected < PLAYER_PLAYING)

  00cbf	8b 45 f0	 mov	 eax, DWORD PTR _lpUser1$[ebp]
  00cc2	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  00cc6	7c 09		 jl	 SHORT $LN1@DGInsert
  00cc8	8b 45 ec	 mov	 eax, DWORD PTR _lpUser2$[ebp]
  00ccb	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  00ccf	7d 05		 jge	 SHORT $LN2@DGInsert
$LN1@DGInsert:

; 406  : 	{
; 407  : 		return;

  00cd1	e9 ad 01 00 00	 jmp	 $LN6@DGInsert
$LN2@DGInsert:

; 408  : 	}
; 409  : 
; 410  : 	gObjDeleteItemsCount(aIndex1, ITEMGET(14,12), 1, this->iNeedHeart1);

  00cd6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00cd9	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00cdc	51		 push	 ecx
  00cdd	6a 01		 push	 1
  00cdf	68 0c 1c 00 00	 push	 7180			; 00001c0cH
  00ce4	8b 55 f8	 mov	 edx, DWORD PTR _aIndex1$[ebp]
  00ce7	52		 push	 edx
  00ce8	e8 00 00 00 00	 call	 ?gObjDeleteItemsCount@@YAHHFFH@Z ; gObjDeleteItemsCount
  00ced	83 c4 10	 add	 esp, 16			; 00000010H

; 411  : 	gObjDeleteItemsCount(aIndex2, ITEMGET(14,12), 1, this->iNeedHeart2);

  00cf0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00cf3	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00cf6	51		 push	 ecx
  00cf7	6a 01		 push	 1
  00cf9	68 0c 1c 00 00	 push	 7180			; 00001c0cH
  00cfe	8b 55 f4	 mov	 edx, DWORD PTR _aIndex2$[ebp]
  00d01	52		 push	 edx
  00d02	e8 00 00 00 00	 call	 ?gObjDeleteItemsCount@@YAHHFFH@Z ; gObjDeleteItemsCount
  00d07	83 c4 10	 add	 esp, 16			; 00000010H

; 412  : 
; 413  : 	MessaageAllGlobal("Congratulations, %s and %s are now married", lpUser1->Name, lpUser2->Name);

  00d0a	8b 45 ec	 mov	 eax, DWORD PTR _lpUser2$[ebp]
  00d0d	83 c0 77	 add	 eax, 119		; 00000077H
  00d10	50		 push	 eax
  00d11	8b 4d f0	 mov	 ecx, DWORD PTR _lpUser1$[ebp]
  00d14	83 c1 77	 add	 ecx, 119		; 00000077H
  00d17	51		 push	 ecx
  00d18	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@GLGFCIBN@Congratulations?0?5?$CFs?5and?5?$CFs?5are?5n@
  00d1d	e8 00 00 00 00	 call	 ?MessaageAllGlobal@@YAXPADZZ ; MessaageAllGlobal
  00d22	83 c4 0c	 add	 esp, 12			; 0000000cH

; 414  : 	
; 415  : 	ExFireCracker(aIndex1, lpUser1->X, lpUser1->Y);

  00d25	8b 45 f0	 mov	 eax, DWORD PTR _lpUser1$[ebp]
  00d28	0f b6 88 46 01
	00 00		 movzx	 ecx, BYTE PTR [eax+326]
  00d2f	51		 push	 ecx
  00d30	8b 55 f0	 mov	 edx, DWORD PTR _lpUser1$[ebp]
  00d33	0f b6 82 44 01
	00 00		 movzx	 eax, BYTE PTR [edx+324]
  00d3a	50		 push	 eax
  00d3b	8b 4d f8	 mov	 ecx, DWORD PTR _aIndex1$[ebp]
  00d3e	51		 push	 ecx
  00d3f	e8 00 00 00 00	 call	 ?ExFireCracker@@YAXHEE@Z ; ExFireCracker
  00d44	83 c4 0c	 add	 esp, 12			; 0000000cH

; 416  : 	ExFireCracker(aIndex1, lpUser2->X, lpUser2->Y);

  00d47	8b 45 ec	 mov	 eax, DWORD PTR _lpUser2$[ebp]
  00d4a	0f b6 88 46 01
	00 00		 movzx	 ecx, BYTE PTR [eax+326]
  00d51	51		 push	 ecx
  00d52	8b 55 ec	 mov	 edx, DWORD PTR _lpUser2$[ebp]
  00d55	0f b6 82 44 01
	00 00		 movzx	 eax, BYTE PTR [edx+324]
  00d5c	50		 push	 eax
  00d5d	8b 4d f8	 mov	 ecx, DWORD PTR _aIndex1$[ebp]
  00d60	51		 push	 ecx
  00d61	e8 00 00 00 00	 call	 ?ExFireCracker@@YAXHEE@Z ; ExFireCracker
  00d66	83 c4 0c	 add	 esp, 12			; 0000000cH

; 417  : 	ExFireCracker(aIndex2, lpUser1->X, lpUser1->Y);

  00d69	8b 45 f0	 mov	 eax, DWORD PTR _lpUser1$[ebp]
  00d6c	0f b6 88 46 01
	00 00		 movzx	 ecx, BYTE PTR [eax+326]
  00d73	51		 push	 ecx
  00d74	8b 55 f0	 mov	 edx, DWORD PTR _lpUser1$[ebp]
  00d77	0f b6 82 44 01
	00 00		 movzx	 eax, BYTE PTR [edx+324]
  00d7e	50		 push	 eax
  00d7f	8b 4d f4	 mov	 ecx, DWORD PTR _aIndex2$[ebp]
  00d82	51		 push	 ecx
  00d83	e8 00 00 00 00	 call	 ?ExFireCracker@@YAXHEE@Z ; ExFireCracker
  00d88	83 c4 0c	 add	 esp, 12			; 0000000cH

; 418  : 	ExFireCracker(aIndex2, lpUser2->X, lpUser2->Y);

  00d8b	8b 45 ec	 mov	 eax, DWORD PTR _lpUser2$[ebp]
  00d8e	0f b6 88 46 01
	00 00		 movzx	 ecx, BYTE PTR [eax+326]
  00d95	51		 push	 ecx
  00d96	8b 55 ec	 mov	 edx, DWORD PTR _lpUser2$[ebp]
  00d99	0f b6 82 44 01
	00 00		 movzx	 eax, BYTE PTR [edx+324]
  00da0	50		 push	 eax
  00da1	8b 4d f4	 mov	 ecx, DWORD PTR _aIndex2$[ebp]
  00da4	51		 push	 ecx
  00da5	e8 00 00 00 00	 call	 ?ExFireCracker@@YAXHEE@Z ; ExFireCracker
  00daa	83 c4 0c	 add	 esp, 12			; 0000000cH

; 419  : 
; 420  : 	lpUser1->bMarriage = true;

  00dad	8b 45 f0	 mov	 eax, DWORD PTR _lpUser1$[ebp]
  00db0	c6 80 ed 28 00
	00 01		 mov	 BYTE PTR [eax+10477], 1

; 421  : 	lpUser2->bMarriage = true;

  00db7	8b 45 ec	 mov	 eax, DWORD PTR _lpUser2$[ebp]
  00dba	c6 80 ed 28 00
	00 01		 mov	 BYTE PTR [eax+10477], 1

; 422  : 
; 423  : 	int iItemType = ITEMGET(this->iRewardItemType, this->iRewardItemIndex);

  00dc1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00dc4	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00dc7	c1 e1 09	 shl	 ecx, 9
  00dca	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00dcd	03 4a 20	 add	 ecx, DWORD PTR [edx+32]
  00dd0	89 4d e8	 mov	 DWORD PTR _iItemType$[ebp], ecx

; 424  : 	int iItemLevel = this->iRewardItemLevel;

  00dd3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00dd6	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00dd9	89 4d e4	 mov	 DWORD PTR _iItemLevel$[ebp], ecx

; 425  : 	int iItemOpt = this->iRewardItemOpt;

  00ddc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00ddf	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00de2	89 4d e0	 mov	 DWORD PTR _iItemOpt$[ebp], ecx

; 426  : 	int iItemExl = GenExcOpt(this->iRewardItemExel);

  00de5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00de8	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00deb	51		 push	 ecx
  00dec	e8 00 00 00 00	 call	 ?GenExcOpt@@YAHH@Z	; GenExcOpt
  00df1	83 c4 04	 add	 esp, 4
  00df4	89 45 dc	 mov	 DWORD PTR _iItemExl$[ebp], eax

; 427  : 
; 428  : 	ItemSerialCreateSend(aIndex1,235,lpUser1->X,lpUser2->Y,iItemType,iItemLevel,0,0,0,iItemOpt,aIndex1,iItemExl,0);

  00df7	6a 00		 push	 0
  00df9	0f b6 45 dc	 movzx	 eax, BYTE PTR _iItemExl$[ebp]
  00dfd	50		 push	 eax
  00dfe	8b 4d f8	 mov	 ecx, DWORD PTR _aIndex1$[ebp]
  00e01	51		 push	 ecx
  00e02	0f b6 55 e0	 movzx	 edx, BYTE PTR _iItemOpt$[ebp]
  00e06	52		 push	 edx
  00e07	6a 00		 push	 0
  00e09	6a 00		 push	 0
  00e0b	6a 00		 push	 0
  00e0d	0f b6 45 e4	 movzx	 eax, BYTE PTR _iItemLevel$[ebp]
  00e11	50		 push	 eax
  00e12	8b 4d e8	 mov	 ecx, DWORD PTR _iItemType$[ebp]
  00e15	51		 push	 ecx
  00e16	8b 55 ec	 mov	 edx, DWORD PTR _lpUser2$[ebp]
  00e19	0f b6 82 46 01
	00 00		 movzx	 eax, BYTE PTR [edx+326]
  00e20	50		 push	 eax
  00e21	8b 4d f0	 mov	 ecx, DWORD PTR _lpUser1$[ebp]
  00e24	0f b6 91 44 01
	00 00		 movzx	 edx, BYTE PTR [ecx+324]
  00e2b	52		 push	 edx
  00e2c	68 eb 00 00 00	 push	 235			; 000000ebH
  00e31	8b 45 f8	 mov	 eax, DWORD PTR _aIndex1$[ebp]
  00e34	50		 push	 eax
  00e35	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  00e3a	83 c4 34	 add	 esp, 52			; 00000034H

; 429  : 	ItemSerialCreateSend(aIndex2,235,lpUser1->X,lpUser2->Y,iItemType,iItemLevel,0,0,0,iItemOpt,aIndex1,iItemExl,0);

  00e3d	6a 00		 push	 0
  00e3f	0f b6 45 dc	 movzx	 eax, BYTE PTR _iItemExl$[ebp]
  00e43	50		 push	 eax
  00e44	8b 4d f8	 mov	 ecx, DWORD PTR _aIndex1$[ebp]
  00e47	51		 push	 ecx
  00e48	0f b6 55 e0	 movzx	 edx, BYTE PTR _iItemOpt$[ebp]
  00e4c	52		 push	 edx
  00e4d	6a 00		 push	 0
  00e4f	6a 00		 push	 0
  00e51	6a 00		 push	 0
  00e53	0f b6 45 e4	 movzx	 eax, BYTE PTR _iItemLevel$[ebp]
  00e57	50		 push	 eax
  00e58	8b 4d e8	 mov	 ecx, DWORD PTR _iItemType$[ebp]
  00e5b	51		 push	 ecx
  00e5c	8b 55 ec	 mov	 edx, DWORD PTR _lpUser2$[ebp]
  00e5f	0f b6 82 46 01
	00 00		 movzx	 eax, BYTE PTR [edx+326]
  00e66	50		 push	 eax
  00e67	8b 4d f0	 mov	 ecx, DWORD PTR _lpUser1$[ebp]
  00e6a	0f b6 91 44 01
	00 00		 movzx	 edx, BYTE PTR [ecx+324]
  00e71	52		 push	 edx
  00e72	68 eb 00 00 00	 push	 235			; 000000ebH
  00e77	8b 45 f4	 mov	 eax, DWORD PTR _aIndex2$[ebp]
  00e7a	50		 push	 eax
  00e7b	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  00e80	83 c4 34	 add	 esp, 52			; 00000034H
$LN6@DGInsert:

; 430  : }

  00e83	5f		 pop	 edi
  00e84	5e		 pop	 esi
  00e85	5b		 pop	 ebx
  00e86	8b e5		 mov	 esp, ebp
  00e88	5d		 pop	 ebp
  00e89	c2 04 00	 ret	 4
?DGInsert@CMarriage@@QAEXPAUPMSG_ANS_MARRIAGE_INSERT@@@Z ENDP ; CMarriage::DGInsert
_TEXT	ENDS
PUBLIC	??_C@_0CB@BHBBHNGE@?$HO?$FLMARRIAGE?$FN?5Kick?5Price?3?5?$CFd?5WCoin@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?GDDelete@CMarriage@@QAEXH@Z			; CMarriage::GDDelete
EXTRN	?ExUserDataSend@@YAXH@Z:PROC			; ExUserDataSend
EXTRN	?GDSaveUserInfo@GameShop@@QAEXH@Z:PROC		; GameShop::GDSaveUserInfo
EXTRN	?gGameShop@@3VGameShop@@A:BYTE			; gGameShop
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_0CB@BHBBHNGE@?$HO?$FLMARRIAGE?$FN?5Kick?5Price?3?5?$CFd?5WCoin@
CONST	SEGMENT
??_C@_0CB@BHBBHNGE@?$HO?$FLMARRIAGE?$FN?5Kick?5Price?3?5?$CFd?5WCoin@ DB '~'
	DB	'[MARRIAGE] Kick Price: %d WCoin', 00H	; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
tv69 = -100						; size = 4
_pMsg$ = -32						; size = 20
_lpUser$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?GDDelete@CMarriage@@QAEXH@Z PROC			; CMarriage::GDDelete
; _this$ = ecx

; 433  : {

  00e90	55		 push	 ebp
  00e91	8b ec		 mov	 ebp, esp
  00e93	83 ec 64	 sub	 esp, 100		; 00000064H
  00e96	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00e9b	33 c5		 xor	 eax, ebp
  00e9d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00ea0	53		 push	 ebx
  00ea1	56		 push	 esi
  00ea2	57		 push	 edi
  00ea3	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 434  : 	if(!this->Enable)

  00ea6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00ea9	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00eac	85 c9		 test	 ecx, ecx
  00eae	75 05		 jne	 SHORT $LN7@GDDelete

; 435  : 	{
; 436  : 		return;

  00eb0	e9 49 01 00 00	 jmp	 $LN8@GDDelete
$LN7@GDDelete:

; 437  : 	}
; 438  : 
; 439  : 	if(!OBJMAX_RANGE(aIndex))

  00eb5	83 7d 08 00	 cmp	 DWORD PTR _aIndex$[ebp], 0
  00eb9	7d 09		 jge	 SHORT $LN10@GDDelete
  00ebb	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
  00ec2	eb 0f		 jmp	 SHORT $LN11@GDDelete
$LN10@GDDelete:
  00ec4	33 c0		 xor	 eax, eax
  00ec6	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _aIndex$[ebp], 14999 ; 00003a97H
  00ecd	0f 9e c0	 setle	 al
  00ed0	89 45 9c	 mov	 DWORD PTR tv69[ebp], eax
$LN11@GDDelete:
  00ed3	83 7d 9c 00	 cmp	 DWORD PTR tv69[ebp], 0
  00ed7	75 05		 jne	 SHORT $LN6@GDDelete

; 440  : 	{
; 441  : 		return;

  00ed9	e9 20 01 00 00	 jmp	 $LN8@GDDelete
$LN6@GDDelete:

; 442  : 	}
; 443  : 
; 444  : 	LPOBJ lpUser = &gObj[aIndex];

  00ede	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00ee1	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00ee7	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00eed	89 45 f4	 mov	 DWORD PTR _lpUser$[ebp], eax

; 445  : 
; 446  : 	if(lpUser->Connected < PLAYER_PLAYING)

  00ef0	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00ef3	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  00ef7	7d 05		 jge	 SHORT $LN5@GDDelete

; 447  : 	{
; 448  : 		return;

  00ef9	e9 00 01 00 00	 jmp	 $LN8@GDDelete
$LN5@GDDelete:

; 449  : 	}
; 450  : 
; 451  : 	if(this->iKickPriceWcoin > lpUser->GameShop.WCoinC)

  00efe	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00f01	db 40 38	 fild	 DWORD PTR [eax+56]
  00f04	8b 4d f4	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  00f07	dc 99 00 23 00
	00		 fcomp	 QWORD PTR [ecx+8960]
  00f0d	df e0		 fnstsw	 ax
  00f0f	f6 c4 41	 test	 ah, 65			; 00000041H
  00f12	75 1d		 jne	 SHORT $LN4@GDDelete

; 452  : 	{
; 453  : 		MessageChat(aIndex, "~[MARRIAGE] Kick Price: %d WCoin", this->iKickPriceWcoin);

  00f14	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00f17	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00f1a	51		 push	 ecx
  00f1b	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@BHBBHNGE@?$HO?$FLMARRIAGE?$FN?5Kick?5Price?3?5?$CFd?5WCoin@
  00f20	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  00f23	52		 push	 edx
  00f24	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat
  00f29	83 c4 0c	 add	 esp, 12			; 0000000cH

; 454  : 		return;

  00f2c	e9 cd 00 00 00	 jmp	 $LN8@GDDelete
$LN4@GDDelete:

; 455  : 	}
; 456  : 
; 457  : 	lpUser->GameShop.WCoinC -= this->iKickPriceWcoin;

  00f31	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00f34	db 40 38	 fild	 DWORD PTR [eax+56]
  00f37	8b 4d f4	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  00f3a	dc a9 00 23 00
	00		 fsubr	 QWORD PTR [ecx+8960]
  00f40	8b 55 f4	 mov	 edx, DWORD PTR _lpUser$[ebp]
  00f43	dd 9a 00 23 00
	00		 fstp	 QWORD PTR [edx+8960]

; 458  : 	gGameShop.GDSaveUserInfo(aIndex);

  00f49	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00f4c	50		 push	 eax
  00f4d	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGameShop@@3VGameShop@@A ; gGameShop
  00f52	e8 00 00 00 00	 call	 ?GDSaveUserInfo@GameShop@@QAEXH@Z ; GameShop::GDSaveUserInfo

; 459  : 	ExUserDataSend(aIndex);

  00f57	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00f5a	50		 push	 eax
  00f5b	e8 00 00 00 00	 call	 ?ExUserDataSend@@YAXH@Z	; ExUserDataSend
  00f60	83 c4 04	 add	 esp, 4

; 460  : 
; 461  : 	PMSG_REQ_MARRIAGE_DELETE pMsg;
; 462  : 	pMsg.h.set((LPBYTE)&pMsg, 0xEB, 0x02, sizeof(pMsg));

  00f63	6a 14		 push	 20			; 00000014H
  00f65	6a 02		 push	 2
  00f67	68 eb 00 00 00	 push	 235			; 000000ebH
  00f6c	8d 45 e0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00f6f	50		 push	 eax
  00f70	8d 4d e0	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  00f73	e8 00 00 00 00	 call	 ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ; PBMSG_HEAD2::set

; 463  : 
; 464  : 	pMsg.aIndex = aIndex;

  00f78	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00f7b	89 45 e4	 mov	 DWORD PTR _pMsg$[ebp+4], eax

; 465  : 
; 466  : 	if(lpUser->Class == CLASS_KNIGHT || lpUser->Class == CLASS_WIZARD || lpUser->Class == CLASS_MAGUMSA || lpUser->Class == CLASS_DARKLORD || lpUser->Class == CLASS_MONK)

  00f7e	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00f81	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00f88	83 f9 01	 cmp	 ecx, 1
  00f8b	74 3b		 je	 SHORT $LN2@GDDelete
  00f8d	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00f90	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00f97	85 c9		 test	 ecx, ecx
  00f99	74 2d		 je	 SHORT $LN2@GDDelete
  00f9b	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00f9e	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00fa5	83 f9 03	 cmp	 ecx, 3
  00fa8	74 1e		 je	 SHORT $LN2@GDDelete
  00faa	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00fad	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00fb4	83 f9 04	 cmp	 ecx, 4
  00fb7	74 0f		 je	 SHORT $LN2@GDDelete
  00fb9	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00fbc	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00fc3	83 f9 06	 cmp	 ecx, 6
  00fc6	75 06		 jne	 SHORT $LN3@GDDelete
$LN2@GDDelete:

; 467  : 	{
; 468  : 		pMsg.bClass = 0;

  00fc8	c6 45 e8 00	 mov	 BYTE PTR _pMsg$[ebp+8], 0

; 469  : 	}
; 470  : 	else

  00fcc	eb 04		 jmp	 SHORT $LN1@GDDelete
$LN3@GDDelete:

; 471  : 	{
; 472  : 		pMsg.bClass = 1;

  00fce	c6 45 e8 01	 mov	 BYTE PTR _pMsg$[ebp+8], 1
$LN1@GDDelete:

; 473  : 	}
; 474  : 
; 475  : 	pMsg.szName[10] = 0;

  00fd2	c6 45 f3 00	 mov	 BYTE PTR _pMsg$[ebp+19], 0

; 476  : 	memcpy(pMsg.szName, lpUser->Name, sizeof(pMsg.szName)-1);

  00fd6	6a 0a		 push	 10			; 0000000aH
  00fd8	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00fdb	83 c0 77	 add	 eax, 119		; 00000077H
  00fde	50		 push	 eax
  00fdf	8d 4d e9	 lea	 ecx, DWORD PTR _pMsg$[ebp+9]
  00fe2	51		 push	 ecx
  00fe3	e8 00 00 00 00	 call	 _memcpy
  00fe8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 477  : 
; 478  : 	cDBSMng.Send((char*)&pMsg, pMsg.h.size);

  00feb	0f b6 45 e1	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  00fef	50		 push	 eax
  00ff0	8d 4d e0	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  00ff3	51		 push	 ecx
  00ff4	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  00ff9	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
$LN8@GDDelete:

; 479  : }

  00ffe	5f		 pop	 edi
  00fff	5e		 pop	 esi
  01000	5b		 pop	 ebx
  01001	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01004	33 cd		 xor	 ecx, ebp
  01006	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0100b	8b e5		 mov	 esp, ebp
  0100d	5d		 pop	 ebp
  0100e	c2 04 00	 ret	 4
?GDDelete@CMarriage@@QAEXH@Z ENDP			; CMarriage::GDDelete
_TEXT	ENDS
PUBLIC	??_C@_0BK@DIAPOAB@?$HO?$FLMARRIAGE?$FN?5Kick?5Players?$CB?$AA@ ; `string'
PUBLIC	??_C@_0BJ@HKHFBNNM@?$HO?$FLMARRIAGE?$FN?5Kick?5Players?$AA@ ; `string'
PUBLIC	?DGDelete@CMarriage@@QAEXPAUPMSG_ANS_MARRIAGE_DELETE@@@Z ; CMarriage::DGDelete
;	COMDAT ??_C@_0BK@DIAPOAB@?$HO?$FLMARRIAGE?$FN?5Kick?5Players?$CB?$AA@
CONST	SEGMENT
??_C@_0BK@DIAPOAB@?$HO?$FLMARRIAGE?$FN?5Kick?5Players?$CB?$AA@ DB '~[MARR'
	DB	'IAGE] Kick Players!', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HKHFBNNM@?$HO?$FLMARRIAGE?$FN?5Kick?5Players?$AA@
CONST	SEGMENT
??_C@_0BJ@HKHFBNNM@?$HO?$FLMARRIAGE?$FN?5Kick?5Players?$AA@ DB '~[MARRIAG'
	DB	'E] Kick Players', 00H			; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
tv71 = -88						; size = 4
_sObj$229099 = -20					; size = 4
_n$229095 = -16						; size = 4
_lpUser$ = -12						; size = 4
_aIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_aRecv$ = 8						; size = 4
?DGDelete@CMarriage@@QAEXPAUPMSG_ANS_MARRIAGE_DELETE@@@Z PROC ; CMarriage::DGDelete
; _this$ = ecx

; 482  : {

  01020	55		 push	 ebp
  01021	8b ec		 mov	 ebp, esp
  01023	83 ec 58	 sub	 esp, 88			; 00000058H
  01026	53		 push	 ebx
  01027	56		 push	 esi
  01028	57		 push	 edi
  01029	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 483  : 	if(!aRecv->bResult)

  0102c	8b 45 08	 mov	 eax, DWORD PTR _aRecv$[ebp]
  0102f	0f b6 48 08	 movzx	 ecx, BYTE PTR [eax+8]
  01033	85 c9		 test	 ecx, ecx
  01035	75 05		 jne	 SHORT $LN9@DGDelete

; 484  : 	{
; 485  : 		return;

  01037	e9 f9 00 00 00	 jmp	 $LN10@DGDelete
$LN9@DGDelete:

; 486  : 	}
; 487  : 
; 488  : 	int aIndex = aRecv->aIndex;

  0103c	8b 45 08	 mov	 eax, DWORD PTR _aRecv$[ebp]
  0103f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  01042	89 4d f8	 mov	 DWORD PTR _aIndex$[ebp], ecx

; 489  : 
; 490  : 	if(!OBJMAX_RANGE(aIndex))

  01045	83 7d f8 00	 cmp	 DWORD PTR _aIndex$[ebp], 0
  01049	7d 09		 jge	 SHORT $LN12@DGDelete
  0104b	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
  01052	eb 0f		 jmp	 SHORT $LN13@DGDelete
$LN12@DGDelete:
  01054	33 c0		 xor	 eax, eax
  01056	81 7d f8 97 3a
	00 00		 cmp	 DWORD PTR _aIndex$[ebp], 14999 ; 00003a97H
  0105d	0f 9e c0	 setle	 al
  01060	89 45 a8	 mov	 DWORD PTR tv71[ebp], eax
$LN13@DGDelete:
  01063	83 7d a8 00	 cmp	 DWORD PTR tv71[ebp], 0
  01067	75 05		 jne	 SHORT $LN8@DGDelete

; 491  : 	{
; 492  : 		return;

  01069	e9 c7 00 00 00	 jmp	 $LN10@DGDelete
$LN8@DGDelete:

; 493  : 	}
; 494  : 
; 495  : 	LPOBJ lpUser = &gObj[aIndex];

  0106e	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  01071	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  01077	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0107d	89 45 f4	 mov	 DWORD PTR _lpUser$[ebp], eax

; 496  : 
; 497  : 	lpUser->bMarriage = false;

  01080	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  01083	c6 80 ed 28 00
	00 00		 mov	 BYTE PTR [eax+10477], 0

; 498  : 
; 499  : 	MessageChat(aIndex, "~[MARRIAGE] Kick Players");

  0108a	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@HKHFBNNM@?$HO?$FLMARRIAGE?$FN?5Kick?5Players?$AA@
  0108f	8b 45 f8	 mov	 eax, DWORD PTR _aIndex$[ebp]
  01092	50		 push	 eax
  01093	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat
  01098	83 c4 08	 add	 esp, 8

; 500  : 
; 501  : 	for(int n = OBJ_STARTUSERINDEX; n < OBJMAX; n++)

  0109b	c7 45 f0 b0 36
	00 00		 mov	 DWORD PTR _n$229095[ebp], 14000 ; 000036b0H
  010a2	eb 09		 jmp	 SHORT $LN7@DGDelete
$LN6@DGDelete:
  010a4	8b 45 f0	 mov	 eax, DWORD PTR _n$229095[ebp]
  010a7	83 c0 01	 add	 eax, 1
  010aa	89 45 f0	 mov	 DWORD PTR _n$229095[ebp], eax
$LN7@DGDelete:
  010ad	81 7d f0 98 3a
	00 00		 cmp	 DWORD PTR _n$229095[ebp], 15000 ; 00003a98H
  010b4	7d 7f		 jge	 SHORT $LN10@DGDelete

; 502  : 	{
; 503  : 		LPOBJ sObj = &gObj[n];

  010b6	8b 45 f0	 mov	 eax, DWORD PTR _n$229095[ebp]
  010b9	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  010bf	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  010c5	89 45 ec	 mov	 DWORD PTR _sObj$229099[ebp], eax

; 504  : 
; 505  : 		if(sObj->Connected < PLAYER_PLAYING || n == aIndex) 

  010c8	8b 45 ec	 mov	 eax, DWORD PTR _sObj$229099[ebp]
  010cb	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  010cf	7c 08		 jl	 SHORT $LN3@DGDelete
  010d1	8b 45 f0	 mov	 eax, DWORD PTR _n$229095[ebp]
  010d4	3b 45 f8	 cmp	 eax, DWORD PTR _aIndex$[ebp]
  010d7	75 02		 jne	 SHORT $LN4@DGDelete
$LN3@DGDelete:

; 506  : 		{
; 507  : 			continue;

  010d9	eb c9		 jmp	 SHORT $LN6@DGDelete
$LN4@DGDelete:

; 508  : 		}
; 509  : 
; 510  : 		if(sObj->Name[0] == lpUser->MarriageName[0])

  010db	8b 45 ec	 mov	 eax, DWORD PTR _sObj$229099[ebp]
  010de	0f be 48 77	 movsx	 ecx, BYTE PTR [eax+119]
  010e2	8b 55 f4	 mov	 edx, DWORD PTR _lpUser$[ebp]
  010e5	0f be 82 ee 28
	00 00		 movsx	 eax, BYTE PTR [edx+10478]
  010ec	3b c8		 cmp	 ecx, eax
  010ee	75 40		 jne	 SHORT $LN2@DGDelete

; 511  : 		{
; 512  : 			if(strcmp(sObj->Name, lpUser->MarriageName) == 0)

  010f0	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  010f3	05 ee 28 00 00	 add	 eax, 10478		; 000028eeH
  010f8	50		 push	 eax
  010f9	8b 4d ec	 mov	 ecx, DWORD PTR _sObj$229099[ebp]
  010fc	83 c1 77	 add	 ecx, 119		; 00000077H
  010ff	51		 push	 ecx
  01100	e8 00 00 00 00	 call	 _strcmp
  01105	83 c4 08	 add	 esp, 8
  01108	85 c0		 test	 eax, eax
  0110a	75 24		 jne	 SHORT $LN2@DGDelete

; 513  : 			{
; 514  : 				sObj->bMarriage = false;

  0110c	8b 45 ec	 mov	 eax, DWORD PTR _sObj$229099[ebp]
  0110f	c6 80 ed 28 00
	00 00		 mov	 BYTE PTR [eax+10477], 0

; 515  : 				MessageChat(n, "~[MARRIAGE] Kick Players!", lpUser->Name);

  01116	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  01119	83 c0 77	 add	 eax, 119		; 00000077H
  0111c	50		 push	 eax
  0111d	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@DIAPOAB@?$HO?$FLMARRIAGE?$FN?5Kick?5Players?$CB?$AA@
  01122	8b 4d f0	 mov	 ecx, DWORD PTR _n$229095[ebp]
  01125	51		 push	 ecx
  01126	e8 00 00 00 00	 call	 ?MessageChat@@YAXHPADZZ	; MessageChat
  0112b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 516  : 				break;

  0112e	eb 05		 jmp	 SHORT $LN10@DGDelete
$LN2@DGDelete:

; 517  : 			}
; 518  : 		}				
; 519  : 	}

  01130	e9 6f ff ff ff	 jmp	 $LN6@DGDelete
$LN10@DGDelete:

; 520  : }

  01135	5f		 pop	 edi
  01136	5e		 pop	 esi
  01137	5b		 pop	 ebx
  01138	8b e5		 mov	 esp, ebp
  0113a	5d		 pop	 ebp
  0113b	c2 04 00	 ret	 4
?DGDelete@CMarriage@@QAEXPAUPMSG_ANS_MARRIAGE_DELETE@@@Z ENDP ; CMarriage::DGDelete
_TEXT	ENDS
PUBLIC	?AddedCharacter@CMarriage@@QAEXH@Z		; CMarriage::AddedCharacter
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv69 = -76						; size = 4
_lpUser$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
?AddedCharacter@CMarriage@@QAEXH@Z PROC			; CMarriage::AddedCharacter
; _this$ = ecx

; 523  : {

  01140	55		 push	 ebp
  01141	8b ec		 mov	 ebp, esp
  01143	83 ec 4c	 sub	 esp, 76			; 0000004cH
  01146	53		 push	 ebx
  01147	56		 push	 esi
  01148	57		 push	 edi
  01149	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 524  : 	if(!this->Enable)

  0114c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0114f	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  01152	85 c9		 test	 ecx, ecx
  01154	75 05		 jne	 SHORT $LN5@AddedChara

; 525  : 	{
; 526  : 		return;

  01156	e9 af 00 00 00	 jmp	 $LN6@AddedChara
$LN5@AddedChara:

; 527  : 	}
; 528  : 
; 529  : 	if(!OBJMAX_RANGE(aIndex))

  0115b	83 7d 08 00	 cmp	 DWORD PTR _aIndex$[ebp], 0
  0115f	7d 09		 jge	 SHORT $LN8@AddedChara
  01161	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
  01168	eb 0f		 jmp	 SHORT $LN9@AddedChara
$LN8@AddedChara:
  0116a	33 c0		 xor	 eax, eax
  0116c	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _aIndex$[ebp], 14999 ; 00003a97H
  01173	0f 9e c0	 setle	 al
  01176	89 45 b4	 mov	 DWORD PTR tv69[ebp], eax
$LN9@AddedChara:
  01179	83 7d b4 00	 cmp	 DWORD PTR tv69[ebp], 0
  0117d	75 05		 jne	 SHORT $LN4@AddedChara

; 530  : 	{
; 531  : 		return;

  0117f	e9 86 00 00 00	 jmp	 $LN6@AddedChara
$LN4@AddedChara:

; 532  : 	}
; 533  : 
; 534  : 	LPOBJ lpUser = &gObj[aIndex];

  01184	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  01187	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0118d	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01193	89 45 f8	 mov	 DWORD PTR _lpUser$[ebp], eax

; 535  : 
; 536  : 	if(!lpUser->bMarriage)

  01196	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  01199	0f b6 88 ed 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10477]
  011a0	85 c9		 test	 ecx, ecx
  011a2	75 02		 jne	 SHORT $LN3@AddedChara

; 537  : 	{
; 538  : 		return;

  011a4	eb 64		 jmp	 SHORT $LN6@AddedChara
$LN3@AddedChara:

; 539  : 	}
; 540  : 
; 541  : 	lpUser->SetOpIgnoreDefense += this->iRewardIgnoreDefence;

  011a6	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  011a9	0f b6 88 3e 11
	00 00		 movzx	 ecx, BYTE PTR [eax+4414]
  011b0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  011b3	03 4a 34	 add	 ecx, DWORD PTR [edx+52]
  011b6	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  011b9	88 88 3e 11 00
	00		 mov	 BYTE PTR [eax+4414], cl

; 542  : 	lpUser->SetOpDoubleDamage += this->iRewardDoubleDamage;

  011bf	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  011c2	0f b6 88 3f 11
	00 00		 movzx	 ecx, BYTE PTR [eax+4415]
  011c9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  011cc	03 4a 30	 add	 ecx, DWORD PTR [edx+48]
  011cf	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  011d2	88 88 3f 11 00
	00		 mov	 BYTE PTR [eax+4415], cl

; 543  : 
; 544  : 	if(lpUser->SetOpIgnoreDefense > 90)

  011d8	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  011db	0f b6 88 3e 11
	00 00		 movzx	 ecx, BYTE PTR [eax+4414]
  011e2	83 f9 5a	 cmp	 ecx, 90			; 0000005aH
  011e5	7e 0a		 jle	 SHORT $LN2@AddedChara

; 545  : 	{
; 546  : 		lpUser->SetOpIgnoreDefense = 90;

  011e7	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  011ea	c6 80 3e 11 00
	00 5a		 mov	 BYTE PTR [eax+4414], 90	; 0000005aH
$LN2@AddedChara:

; 547  : 	}
; 548  : 
; 549  : 	if(lpUser->SetOpDoubleDamage > 90)

  011f1	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  011f4	0f b6 88 3f 11
	00 00		 movzx	 ecx, BYTE PTR [eax+4415]
  011fb	83 f9 5a	 cmp	 ecx, 90			; 0000005aH
  011fe	7e 0a		 jle	 SHORT $LN6@AddedChara

; 550  : 	{
; 551  : 		lpUser->SetOpDoubleDamage = 90;

  01200	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  01203	c6 80 3f 11 00
	00 5a		 mov	 BYTE PTR [eax+4415], 90	; 0000005aH
$LN6@AddedChara:

; 552  : 	}
; 553  : }

  0120a	5f		 pop	 edi
  0120b	5e		 pop	 esi
  0120c	5b		 pop	 ebx
  0120d	8b e5		 mov	 esp, ebp
  0120f	5d		 pop	 ebp
  01210	c2 04 00	 ret	 4
?AddedCharacter@CMarriage@@QAEXH@Z ENDP			; CMarriage::AddedCharacter
_TEXT	ENDS
PUBLIC	?BuffAdded@CMarriage@@QAEXH@Z			; CMarriage::BuffAdded
EXTRN	?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z:PROC ; gObjApplyBuffEffectDuration
EXTRN	?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z:PROC ; gObjRemoveBuffEffect
EXTRN	?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z:PROC ; gObjSearchActiveEffect
EXTRN	?CheckUser@CExLicense@@QAE_NH@Z:PROC		; CExLicense::CheckUser
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv69 = -76						; size = 4
_lpUser$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
?BuffAdded@CMarriage@@QAEXH@Z PROC			; CMarriage::BuffAdded
; _this$ = ecx

; 556  : {

  01220	55		 push	 ebp
  01221	8b ec		 mov	 ebp, esp
  01223	83 ec 4c	 sub	 esp, 76			; 0000004cH
  01226	53		 push	 ebx
  01227	56		 push	 esi
  01228	57		 push	 edi
  01229	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 557  : 	if(!this->Enable)

  0122c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0122f	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  01232	85 c9		 test	 ecx, ecx
  01234	75 05		 jne	 SHORT $LN11@BuffAdded

; 558  : 	{
; 559  : 		return;

  01236	e9 59 01 00 00	 jmp	 $LN12@BuffAdded
$LN11@BuffAdded:

; 560  : 	}
; 561  : 
; 562  : 	if(!OBJMAX_RANGE(aIndex))

  0123b	83 7d 08 00	 cmp	 DWORD PTR _aIndex$[ebp], 0
  0123f	7d 09		 jge	 SHORT $LN14@BuffAdded
  01241	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
  01248	eb 0f		 jmp	 SHORT $LN15@BuffAdded
$LN14@BuffAdded:
  0124a	33 c0		 xor	 eax, eax
  0124c	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _aIndex$[ebp], 14999 ; 00003a97H
  01253	0f 9e c0	 setle	 al
  01256	89 45 b4	 mov	 DWORD PTR tv69[ebp], eax
$LN15@BuffAdded:
  01259	83 7d b4 00	 cmp	 DWORD PTR tv69[ebp], 0
  0125d	75 05		 jne	 SHORT $LN10@BuffAdded

; 563  : 	{
; 564  : 		return;

  0125f	e9 30 01 00 00	 jmp	 $LN12@BuffAdded
$LN10@BuffAdded:

; 565  : 	}
; 566  : 
; 567  : 	LPOBJ lpUser = &gObj[aIndex];

  01264	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  01267	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0126d	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01273	89 45 f8	 mov	 DWORD PTR _lpUser$[ebp], eax

; 568  : 
; 569  : 	if(g_ExLicense.CheckUser(eExUB::Gredy) || g_ExLicense.CheckUser(eExUB::GredyLocal) || g_ExLicense.CheckUser(eExUB::Gredy2))

  01276	6a 20		 push	 32			; 00000020H
  01278	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  0127d	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  01282	0f b6 c0	 movzx	 eax, al
  01285	85 c0		 test	 eax, eax
  01287	75 26		 jne	 SHORT $LN8@BuffAdded
  01289	6a 21		 push	 33			; 00000021H
  0128b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  01290	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  01295	0f b6 c0	 movzx	 eax, al
  01298	85 c0		 test	 eax, eax
  0129a	75 13		 jne	 SHORT $LN8@BuffAdded
  0129c	6a 22		 push	 34			; 00000022H
  0129e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ExLicense@@3VCExLicense@@A ; g_ExLicense
  012a3	e8 00 00 00 00	 call	 ?CheckUser@CExLicense@@QAE_NH@Z ; CExLicense::CheckUser
  012a8	0f b6 c0	 movzx	 eax, al
  012ab	85 c0		 test	 eax, eax
  012ad	74 75		 je	 SHORT $LN9@BuffAdded
$LN8@BuffAdded:

; 570  : 	{
; 571  : 		if(!lpUser->bMarriage)

  012af	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  012b2	0f b6 88 ed 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10477]
  012b9	85 c9		 test	 ecx, ecx
  012bb	75 2f		 jne	 SHORT $LN7@BuffAdded

; 572  : 		{
; 573  : 			if(gObjSearchActiveEffect(lpUser,AT_MARRI_BUFF2) == TRUE)

  012bd	68 c1 00 00 00	 push	 193			; 000000c1H
  012c2	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  012c5	50		 push	 eax
  012c6	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  012cb	83 c4 08	 add	 esp, 8
  012ce	0f b6 c8	 movzx	 ecx, al
  012d1	83 f9 01	 cmp	 ecx, 1
  012d4	75 11		 jne	 SHORT $LN6@BuffAdded

; 574  : 			{
; 575  : 				gObjRemoveBuffEffect(lpUser,AT_MARRI_BUFF2);

  012d6	68 c1 00 00 00	 push	 193			; 000000c1H
  012db	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  012de	50		 push	 eax
  012df	e8 00 00 00 00	 call	 ?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjRemoveBuffEffect
  012e4	83 c4 08	 add	 esp, 8
$LN6@BuffAdded:

; 576  : 			}
; 577  : 			return;

  012e7	e9 a8 00 00 00	 jmp	 $LN12@BuffAdded
$LN7@BuffAdded:

; 578  : 		}
; 579  : 
; 580  : 		if(gObjSearchActiveEffect(lpUser,AT_MARRI_BUFF2) == FALSE)

  012ec	68 c1 00 00 00	 push	 193			; 000000c1H
  012f1	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  012f4	50		 push	 eax
  012f5	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  012fa	83 c4 08	 add	 esp, 8
  012fd	0f b6 c8	 movzx	 ecx, al
  01300	85 c9		 test	 ecx, ecx
  01302	75 1e		 jne	 SHORT $LN5@BuffAdded

; 581  : 		{
; 582  : 			gObjApplyBuffEffectDuration(lpUser,AT_MARRI_BUFF2,0,0,0,0,600);

  01304	68 58 02 00 00	 push	 600			; 00000258H
  01309	6a 00		 push	 0
  0130b	6a 00		 push	 0
  0130d	6a 00		 push	 0
  0130f	6a 00		 push	 0
  01311	68 c1 00 00 00	 push	 193			; 000000c1H
  01316	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  01319	50		 push	 eax
  0131a	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration
  0131f	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN5@BuffAdded:

; 583  : 		}
; 584  : 	}
; 585  : 	else

  01322	eb 70		 jmp	 SHORT $LN12@BuffAdded
$LN9@BuffAdded:

; 586  : 	{
; 587  : 		if(!lpUser->bMarriage)

  01324	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  01327	0f b6 88 ed 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10477]
  0132e	85 c9		 test	 ecx, ecx
  01330	75 2c		 jne	 SHORT $LN3@BuffAdded

; 588  : 		{
; 589  : 			if(gObjSearchActiveEffect(lpUser,AT_MARRI_BUFF) == TRUE)

  01332	68 b9 00 00 00	 push	 185			; 000000b9H
  01337	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  0133a	50		 push	 eax
  0133b	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  01340	83 c4 08	 add	 esp, 8
  01343	0f b6 c8	 movzx	 ecx, al
  01346	83 f9 01	 cmp	 ecx, 1
  01349	75 11		 jne	 SHORT $LN2@BuffAdded

; 590  : 			{
; 591  : 				gObjRemoveBuffEffect(lpUser,AT_MARRI_BUFF);

  0134b	68 b9 00 00 00	 push	 185			; 000000b9H
  01350	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  01353	50		 push	 eax
  01354	e8 00 00 00 00	 call	 ?gObjRemoveBuffEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjRemoveBuffEffect
  01359	83 c4 08	 add	 esp, 8
$LN2@BuffAdded:

; 592  : 			}
; 593  : 			return;

  0135c	eb 36		 jmp	 SHORT $LN12@BuffAdded
$LN3@BuffAdded:

; 594  : 		}
; 595  : 
; 596  : 		if(gObjSearchActiveEffect(lpUser,AT_MARRI_BUFF) == FALSE)

  0135e	68 b9 00 00 00	 push	 185			; 000000b9H
  01363	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  01366	50		 push	 eax
  01367	e8 00 00 00 00	 call	 ?gObjSearchActiveEffect@@YAEPAUOBJECTSTRUCT@@H@Z ; gObjSearchActiveEffect
  0136c	83 c4 08	 add	 esp, 8
  0136f	0f b6 c8	 movzx	 ecx, al
  01372	85 c9		 test	 ecx, ecx
  01374	75 1e		 jne	 SHORT $LN12@BuffAdded

; 597  : 		{
; 598  : 			gObjApplyBuffEffectDuration(lpUser,AT_MARRI_BUFF,0,0,0,0,600);

  01376	68 58 02 00 00	 push	 600			; 00000258H
  0137b	6a 00		 push	 0
  0137d	6a 00		 push	 0
  0137f	6a 00		 push	 0
  01381	6a 00		 push	 0
  01383	68 b9 00 00 00	 push	 185			; 000000b9H
  01388	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  0138b	50		 push	 eax
  0138c	e8 00 00 00 00	 call	 ?gObjApplyBuffEffectDuration@@YAEPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjApplyBuffEffectDuration
  01391	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN12@BuffAdded:

; 599  : 		}
; 600  : 	}
; 601  : }

  01394	5f		 pop	 edi
  01395	5e		 pop	 esi
  01396	5b		 pop	 ebx
  01397	8b e5		 mov	 esp, ebp
  01399	5d		 pop	 ebp
  0139a	c2 04 00	 ret	 4
?BuffAdded@CMarriage@@QAEXH@Z ENDP			; CMarriage::BuffAdded
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ??__Eg_Marriage@@YAXXZ
text$yc	SEGMENT
??__Eg_Marriage@@YAXXZ PROC				; `dynamic initializer for 'g_Marriage'', COMDAT

; 15   : CMarriage g_Marriage;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Marriage@@3VCMarriage@@A ; g_Marriage
  0000e	e8 00 00 00 00	 call	 ??0CMarriage@@QAE@XZ	; CMarriage::CMarriage
  00013	68 00 00 00 00	 push	 OFFSET ??__Fg_Marriage@@YAXXZ ; `dynamic atexit destructor for 'g_Marriage''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__Eg_Marriage@@YAXXZ ENDP				; `dynamic initializer for 'g_Marriage''
; Function compile flags: /Odtp /ZI
text$yc	ENDS
;	COMDAT ??__Fg_Marriage@@YAXXZ
text$yd	SEGMENT
??__Fg_Marriage@@YAXXZ PROC				; `dynamic atexit destructor for 'g_Marriage'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Marriage@@3VCMarriage@@A ; g_Marriage
  0000e	e8 00 00 00 00	 call	 ??1CMarriage@@QAE@XZ	; CMarriage::~CMarriage
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__Fg_Marriage@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_Marriage''
text$yd	ENDS
PUBLIC	?g_Marriage@@3VCMarriage@@A			; g_Marriage
_BSS	SEGMENT
?g_Marriage@@3VCMarriage@@A DB 048H DUP (?)		; g_Marriage
_BSS	ENDS
CRT$XCU	SEGMENT
_g_Marriage$initializer$ DD FLAT:??__Eg_Marriage@@YAXXZ
CRT$XCU	ENDS
END
