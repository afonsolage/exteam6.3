; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\KanturuBattleOfNightmare.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?SetSuccessValue@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetSuccessValue
PUBLIC	?ResetAllData@CKanturuBattleOfNightmare@@QAEXXZ	; CKanturuBattleOfNightmare::ResetAllData
PUBLIC	?SetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetBattleOfNightmareState
PUBLIC	??_7CKanturuBattleOfNightmare@@6B@		; CKanturuBattleOfNightmare::`vftable'
PUBLIC	??0CKanturuBattleOfNightmare@@QAE@XZ		; CKanturuBattleOfNightmare::CKanturuBattleOfNightmare
PUBLIC	??_R4CKanturuBattleOfNightmare@@6B@		; CKanturuBattleOfNightmare::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCKanturuBattleOfNightmare@@@8		; CKanturuBattleOfNightmare `RTTI Type Descriptor'
PUBLIC	??_R3CKanturuBattleOfNightmare@@8		; CKanturuBattleOfNightmare::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CKanturuBattleOfNightmare@@8		; CKanturuBattleOfNightmare::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CKanturuBattleOfNightmare@@8	; CKanturuBattleOfNightmare::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??0CKanturuStateInfo@@QAE@XZ:PROC		; CKanturuStateInfo::CKanturuStateInfo
EXTRN	??1CKanturuStateInfo@@UAE@XZ:PROC		; CKanturuStateInfo::~CKanturuStateInfo
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECKanturuBattleOfNightmare@@UAEPAXI@Z:PROC	; CKanturuBattleOfNightmare::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CKanturuBattleOfNightmare@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturubattleofnightmare.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CKanturuBattleOfNightmare@@8 DD FLAT:??_R0?AVCKanturuBattleOfNightmare@@@8 ; CKanturuBattleOfNightmare::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CKanturuBattleOfNightmare@@8
rdata$r	ENDS
;	COMDAT ??_R2CKanturuBattleOfNightmare@@8
rdata$r	SEGMENT
??_R2CKanturuBattleOfNightmare@@8 DD FLAT:??_R1A@?0A@EA@CKanturuBattleOfNightmare@@8 ; CKanturuBattleOfNightmare::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CKanturuBattleOfNightmare@@8
rdata$r	SEGMENT
??_R3CKanturuBattleOfNightmare@@8 DD 00H		; CKanturuBattleOfNightmare::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CKanturuBattleOfNightmare@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCKanturuBattleOfNightmare@@@8
_DATA	SEGMENT
??_R0?AVCKanturuBattleOfNightmare@@@8 DD FLAT:??_7type_info@@6B@ ; CKanturuBattleOfNightmare `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCKanturuBattleOfNightmare@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CKanturuBattleOfNightmare@@6B@
rdata$r	SEGMENT
??_R4CKanturuBattleOfNightmare@@6B@ DD 00H		; CKanturuBattleOfNightmare::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCKanturuBattleOfNightmare@@@8
	DD	FLAT:??_R3CKanturuBattleOfNightmare@@8
rdata$r	ENDS
;	COMDAT ??_7CKanturuBattleOfNightmare@@6B@
CONST	SEGMENT
??_7CKanturuBattleOfNightmare@@6B@ DD FLAT:??_R4CKanturuBattleOfNightmare@@6B@ ; CKanturuBattleOfNightmare::`vftable'
	DD	FLAT:??_ECKanturuBattleOfNightmare@@UAEPAXI@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??0CKanturuBattleOfNightmare@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CKanturuBattleOfNightmare@@QAE@XZ$0
__ehfuncinfo$??0CKanturuBattleOfNightmare@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CKanturuBattleOfNightmare@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CKanturuBattleOfNightmare@@QAE@XZ PROC		; CKanturuBattleOfNightmare::CKanturuBattleOfNightmare
; _this$ = ecx

; 28   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CKanturuBattleOfNightmare@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CKanturuBattleOfNightmare@@6B@
  00034	68 00 00 00 00	 push	 OFFSET ??1CKanturuStateInfo@@UAE@XZ ; CKanturuStateInfo::~CKanturuStateInfo
  00039	68 00 00 00 00	 push	 OFFSET ??0CKanturuStateInfo@@QAE@XZ ; CKanturuStateInfo::CKanturuStateInfo
  0003e	6a 06		 push	 6
  00040	6a 14		 push	 20			; 00000014H
  00042	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00045	83 c0 10	 add	 eax, 16			; 00000010H
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??_L@YGXPAXIHP6EX0@Z1@Z
  0004e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 29   : 	this->SetBattleOfNightmareState(KANTURU_NIGHTMARE_NONE);

  00055	6a 00		 push	 0
  00057	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ?SetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetBattleOfNightmareState

; 30   : 	this->ResetAllData();

  0005f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	e8 00 00 00 00	 call	 ?ResetAllData@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ResetAllData

; 31   : 	this->m_iNightmareAIGroupNumber = 0;

  00067	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	c7 80 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+140], 0

; 32   : 	this->m_iNightmareObjIndex = -1;

  00074	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00077	c7 80 90 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [eax+144], -1

; 33   : 	this->SetSuccessValue(FALSE);

  00081	6a 00		 push	 0
  00083	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	e8 00 00 00 00	 call	 ?SetSuccessValue@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetSuccessValue

; 34   : }

  0008b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00098	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009f	59		 pop	 ecx
  000a0	5f		 pop	 edi
  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx
  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CKanturuBattleOfNightmare@@QAE@XZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ??1CKanturuStateInfo@@UAE@XZ ; CKanturuStateInfo::~CKanturuStateInfo
  00005	6a 06		 push	 6
  00007	6a 14		 push	 20			; 00000014H
  00009	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 10	 add	 eax, 16			; 00000010H
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  00015	c3		 ret	 0
__ehhandler$??0CKanturuBattleOfNightmare@@QAE@XZ:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CKanturuBattleOfNightmare@@QAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CKanturuBattleOfNightmare@@QAE@XZ ENDP		; CKanturuBattleOfNightmare::CKanturuBattleOfNightmare
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturubattleofnightmare.h
;	COMDAT ?SetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iBattleOfNightmareState$ = 8				; size = 4
?SetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEXH@Z PROC ; CKanturuBattleOfNightmare::SetBattleOfNightmareState, COMDAT
; _this$ = ecx

; 49   : 	void SetBattleOfNightmareState(int iBattleOfNightmareState){this->m_iBattleOfNightmareState = iBattleOfNightmareState;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _iBattleOfNightmareState$[ebp]
  00012	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEXH@Z ENDP ; CKanturuBattleOfNightmare::SetBattleOfNightmareState
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?SetSuccessValue@CKanturuBattleOfNightmare@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bIsSuccess$ = 8					; size = 4
?SetSuccessValue@CKanturuBattleOfNightmare@@QAEXH@Z PROC ; CKanturuBattleOfNightmare::SetSuccessValue, COMDAT
; _this$ = ecx

; 51   : 	void SetSuccessValue(BOOL bIsSuccess){this->m_bIsSucccess = bIsSuccess;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _bIsSuccess$[ebp]
  00012	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetSuccessValue@CKanturuBattleOfNightmare@@QAEXH@Z ENDP ; CKanturuBattleOfNightmare::SetSuccessValue
_TEXT	ENDS
PUBLIC	??1CKanturuBattleOfNightmare@@UAE@XZ		; CKanturuBattleOfNightmare::~CKanturuBattleOfNightmare
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCKanturuBattleOfNightmare@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCKanturuBattleOfNightmare@@UAEPAXI@Z PROC		; CKanturuBattleOfNightmare::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CKanturuBattleOfNightmare@@UAE@XZ ; CKanturuBattleOfNightmare::~CKanturuBattleOfNightmare
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCKanturuBattleOfNightmare@@UAEPAXI@Z ENDP		; CKanturuBattleOfNightmare::`scalar deleting destructor'
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturubattleofnightmare.cpp
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CKanturuBattleOfNightmare@@UAE@XZ PROC		; CKanturuBattleOfNightmare::~CKanturuBattleOfNightmare
; _this$ = ecx

; 37   : {

  000b0	55		 push	 ebp
  000b1	8b ec		 mov	 ebp, esp
  000b3	83 ec 44	 sub	 esp, 68			; 00000044H
  000b6	53		 push	 ebx
  000b7	56		 push	 esi
  000b8	57		 push	 edi
  000b9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  000bc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bf	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CKanturuBattleOfNightmare@@6B@

; 38   : 	return;
; 39   : }

  000c5	68 00 00 00 00	 push	 OFFSET ??1CKanturuStateInfo@@UAE@XZ ; CKanturuStateInfo::~CKanturuStateInfo
  000ca	6a 06		 push	 6
  000cc	6a 14		 push	 20			; 00000014H
  000ce	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	83 c0 10	 add	 eax, 16			; 00000010H
  000d4	50		 push	 eax
  000d5	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5b		 pop	 ebx
  000dd	8b e5		 mov	 esp, ebp
  000df	5d		 pop	 ebp
  000e0	c3		 ret	 0
??1CKanturuBattleOfNightmare@@UAE@XZ ENDP		; CKanturuBattleOfNightmare::~CKanturuBattleOfNightmare
_TEXT	ENDS
PUBLIC	?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ	; CKanturuStateInfo::ResetTimeInfo
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_iCount$228022 = -8					; size = 4
_this$ = -4						; size = 4
?ResetAllData@CKanturuBattleOfNightmare@@QAEXXZ PROC	; CKanturuBattleOfNightmare::ResetAllData
; _this$ = ecx

; 44   : {

  000f0	55		 push	 ebp
  000f1	8b ec		 mov	 ebp, esp
  000f3	83 ec 48	 sub	 esp, 72			; 00000048H
  000f6	53		 push	 ebx
  000f7	56		 push	 esi
  000f8	57		 push	 edi
  000f9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 45   : 	this->m_StateInfoCount = 0;

  000fc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ff	c7 80 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+136], 0

; 46   : 
; 47   : 	for ( int iCount=0;iCount<KANTURU_NIGHTMARE_STATE_INFO;iCount++)

  00109	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iCount$228022[ebp], 0
  00110	eb 09		 jmp	 SHORT $LN3@ResetAllDa
$LN2@ResetAllDa:
  00112	8b 45 f8	 mov	 eax, DWORD PTR _iCount$228022[ebp]
  00115	83 c0 01	 add	 eax, 1
  00118	89 45 f8	 mov	 DWORD PTR _iCount$228022[ebp], eax
$LN3@ResetAllDa:
  0011b	83 7d f8 06	 cmp	 DWORD PTR _iCount$228022[ebp], 6
  0011f	7d 14		 jge	 SHORT $LN4@ResetAllDa

; 48   : 	{
; 49   : 		this->m_StateInfo[iCount].ResetTimeInfo();

  00121	8b 45 f8	 mov	 eax, DWORD PTR _iCount$228022[ebp]
  00124	6b c0 14	 imul	 eax, 20			; 00000014H
  00127	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0012a	8d 4c 01 10	 lea	 ecx, DWORD PTR [ecx+eax+16]
  0012e	e8 00 00 00 00	 call	 ?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ ; CKanturuStateInfo::ResetTimeInfo

; 50   : 	}

  00133	eb dd		 jmp	 SHORT $LN2@ResetAllDa
$LN4@ResetAllDa:

; 51   : }

  00135	5f		 pop	 edi
  00136	5e		 pop	 esi
  00137	5b		 pop	 ebx
  00138	8b e5		 mov	 esp, ebp
  0013a	5d		 pop	 ebp
  0013b	c3		 ret	 0
?ResetAllData@CKanturuBattleOfNightmare@@QAEXXZ ENDP	; CKanturuBattleOfNightmare::ResetAllData
_TEXT	ENDS
PUBLIC	?SetValue@CKanturuStateInfo@@QAEXH@Z		; CKanturuStateInfo::SetValue
PUBLIC	?SetCondition@CKanturuStateInfo@@QAEXH@Z	; CKanturuStateInfo::SetCondition
PUBLIC	?SetStateInfo@CKanturuStateInfo@@QAEXH@Z	; CKanturuStateInfo::SetStateInfo
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturustateinfo.h
;	COMDAT ?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ PROC		; CKanturuStateInfo::ResetTimeInfo, COMDAT
; _this$ = ecx

; 21   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 22   : 		this->SetStateInfo(0);

  0000c	6a 00		 push	 0
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?SetStateInfo@CKanturuStateInfo@@QAEXH@Z ; CKanturuStateInfo::SetStateInfo

; 23   : 		this->SetCondition(0);

  00016	6a 00		 push	 0
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?SetCondition@CKanturuStateInfo@@QAEXH@Z ; CKanturuStateInfo::SetCondition

; 24   : 		this->SetValue(0);

  00020	6a 00		 push	 0
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?SetValue@CKanturuStateInfo@@QAEXH@Z ; CKanturuStateInfo::SetValue

; 25   : 	}

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ ENDP		; CKanturuStateInfo::ResetTimeInfo
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?SetStateInfo@CKanturuStateInfo@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iStateTimeInfo$ = 8					; size = 4
?SetStateInfo@CKanturuStateInfo@@QAEXH@Z PROC		; CKanturuStateInfo::SetStateInfo, COMDAT
; _this$ = ecx

; 29   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 30   : 		this->m_iState = iStateTimeInfo;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _iStateTimeInfo$[ebp]
  00012	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 31   : 	}

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetStateInfo@CKanturuStateInfo@@QAEXH@Z ENDP		; CKanturuStateInfo::SetStateInfo
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?SetCondition@CKanturuStateInfo@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iCondition$ = 8					; size = 4
?SetCondition@CKanturuStateInfo@@QAEXH@Z PROC		; CKanturuStateInfo::SetCondition, COMDAT
; _this$ = ecx

; 34   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 35   : 		this->m_iCondition = iCondition;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _iCondition$[ebp]
  00012	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 36   : 	}

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetCondition@CKanturuStateInfo@@QAEXH@Z ENDP		; CKanturuStateInfo::SetCondition
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?SetValue@CKanturuStateInfo@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iValue$ = 8						; size = 4
?SetValue@CKanturuStateInfo@@QAEXH@Z PROC		; CKanturuStateInfo::SetValue, COMDAT
; _this$ = ecx

; 45   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 46   : 		this->m_iValue = iValue;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _iValue$[ebp]
  00012	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 47   : 	}

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetValue@CKanturuStateInfo@@QAEXH@Z ENDP		; CKanturuStateInfo::SetValue
_TEXT	ENDS
PUBLIC	??_C@_0EH@NBCHLILD@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	??_C@_0DE@IPBGHOPP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	??_C@_0EK@IMKKLNIA@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	??_C@_0DO@LDEGEFMJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	??_C@_03JBJLGPFL@end?$AA@			; `string'
PUBLIC	??_C@_0DC@GEGBCEBI@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_0EF@DGPFJIHF@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z	; CKanturuBattleOfNightmare::LoadData
EXTRN	?LogAddC@@3P6AXEPADZZA:DWORD			; LogAddC
EXTRN	_fclose:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	_fopen:PROC
EXTRN	?MsgBox@@YAXPADZZ:PROC				; MsgBox
EXTRN	_strcmp:PROC
EXTRN	__ftol2_sse:PROC
_BSS	SEGMENT
_TokenString DB	064H DUP (?)
_TokenNumber DD	01H DUP (?)
_SMDFile DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0EH@NBCHLILD@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturubattleofnightmare.cpp
CONST	SEGMENT
??_C@_0EH@NBCHLILD@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] - Loading Exception Error (%s'
	DB	') File. ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@IPBGHOPP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0DE@IPBGHOPP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ]  %s file is Loaded', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@IMKKLNIA@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0EK@IMKKLNIA@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] - Nightmare Hand AI Group Rea'
	DB	'd Error(%d)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@LDEGEFMJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0DO@LDEGEFMJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] - Exceed Max State Time (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03JBJLGPFL@end?$AA@
CONST	SEGMENT
??_C@_03JBJLGPFL@end?$AA@ DB 'end', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@GEGBCEBI@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0DC@GEGBCEBI@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] - Can''t Open %s ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@DGPFJIHF@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0EF@DGPFJIHF@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] - File load error : File Name'
	DB	' Error', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
xdata$x	SEGMENT
__catchsym$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z$0
__unwindtable$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z$2
__ehfuncinfo$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z
	DD	01H
	DD	FLAT:__tryblocktable$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
_TEXT	SEGMENT
tv188 = -116						; size = 4
tv187 = -116						; size = 4
tv186 = -116						; size = 4
tv185 = -116						; size = 4
tv184 = -116						; size = 4
tv183 = -116						; size = 4
_iValue$228079 = -48					; size = 4
_iValue$228042 = -44					; size = 4
_iCondition$228041 = -40				; size = 4
_iState$228040 = -36					; size = 4
_iType$228039 = -32					; size = 4
_Token$228038 = -28					; size = 4
_dwLastError$228036 = -24				; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_lpszFileName$ = 8					; size = 4
?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z PROC	; CKanturuBattleOfNightmare::LoadData
; _this$ = ecx

; 56   : {

  00140	55		 push	 ebp
  00141	8b ec		 mov	 ebp, esp
  00143	6a ff		 push	 -1
  00145	68 00 00 00 00	 push	 __ehhandler$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z
  0014a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00150	50		 push	 eax
  00151	51		 push	 ecx
  00152	83 ec 64	 sub	 esp, 100		; 00000064H
  00155	53		 push	 ebx
  00156	56		 push	 esi
  00157	57		 push	 edi
  00158	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0015d	33 c5		 xor	 eax, ebp
  0015f	50		 push	 eax
  00160	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00163	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00169	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0016c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 57   : 	this->m_bFileDataLoad = FALSE;

  0016f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00172	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 58   : 
; 59   : 	if ( !lpszFileName || !strcmp(lpszFileName, ""))

  00179	83 7d 08 00	 cmp	 DWORD PTR _lpszFileName$[ebp], 0
  0017d	74 15		 je	 SHORT $LN19@LoadData
  0017f	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00184	8b 45 08	 mov	 eax, DWORD PTR _lpszFileName$[ebp]
  00187	50		 push	 eax
  00188	e8 00 00 00 00	 call	 _strcmp
  0018d	83 c4 08	 add	 esp, 8
  00190	85 c0		 test	 eax, eax
  00192	75 14		 jne	 SHORT $LN20@LoadData
$LN19@LoadData:

; 60   : 	{
; 61   : 		MsgBox("[ KANTURU ][ BattleOfNightmare ] - File load error : File Name Error");

  00194	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@DGPFJIHF@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  00199	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  0019e	83 c4 04	 add	 esp, 4

; 62   : 		return FALSE;

  001a1	33 c0		 xor	 eax, eax
  001a3	e9 e4 02 00 00	 jmp	 $LN21@LoadData
$LN20@LoadData:

; 63   : 	}
; 64   : 
; 65   : 	try
; 66   : 	{

  001a8	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 67   : 		
; 68   : 		SMDFile = fopen(lpszFileName, "r");

  001af	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  001b4	8b 45 08	 mov	 eax, DWORD PTR _lpszFileName$[ebp]
  001b7	50		 push	 eax
  001b8	e8 00 00 00 00	 call	 _fopen
  001bd	83 c4 08	 add	 esp, 8
  001c0	a3 00 00 00 00	 mov	 DWORD PTR _SMDFile, eax

; 69   : 
; 70   : 		if ( SMDFile == NULL )

  001c5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _SMDFile, 0
  001cc	75 21		 jne	 SHORT $LN17@LoadData

; 71   : 		{
; 72   : 			DWORD dwLastError = GetLastError();

  001ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  001d4	89 45 e8	 mov	 DWORD PTR _dwLastError$228036[ebp], eax

; 73   : 
; 74   : 			MsgBox("[ KANTURU ][ BattleOfNightmare ] - Can't Open %s ",
; 75   : 				lpszFileName);

  001d7	8b 45 08	 mov	 eax, DWORD PTR _lpszFileName$[ebp]
  001da	50		 push	 eax
  001db	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@GEGBCEBI@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  001e0	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  001e5	83 c4 08	 add	 esp, 8

; 76   : 
; 77   : 			return FALSE;

  001e8	33 c0		 xor	 eax, eax
  001ea	e9 9d 02 00 00	 jmp	 $LN21@LoadData
$LN17@LoadData:

; 78   : 		}
; 79   : 
; 80   : 		SMDToken Token;
; 81   : 		this->ResetAllData();

  001ef	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001f2	e8 00 00 00 00	 call	 ?ResetAllData@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ResetAllData

; 82   : 
; 83   : 		int iType = -1;

  001f7	c7 45 e0 ff ff
	ff ff		 mov	 DWORD PTR _iType$228039[ebp], -1

; 84   : 		int iState = 0;

  001fe	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _iState$228040[ebp], 0

; 85   : 		int iCondition = 0;

  00205	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _iCondition$228041[ebp], 0

; 86   : 		int iValue = 0;

  0020c	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _iValue$228042[ebp], 0
$LN16@LoadData:

; 87   : 
; 88   : 		while ( true )

  00213	b8 01 00 00 00	 mov	 eax, 1
  00218	85 c0		 test	 eax, eax
  0021a	0f 84 13 02 00
	00		 je	 $LN15@LoadData

; 89   : 		{
; 90   : 			Token = GetToken();

  00220	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00225	89 45 8c	 mov	 DWORD PTR tv183[ebp], eax
  00228	8b 45 8c	 mov	 eax, DWORD PTR tv183[ebp]
  0022b	89 45 e4	 mov	 DWORD PTR _Token$228038[ebp], eax

; 91   : 
; 92   : 			if ( Token == END )

  0022e	83 7d e4 02	 cmp	 DWORD PTR _Token$228038[ebp], 2
  00232	75 05		 jne	 SHORT $LN14@LoadData

; 93   : 			{
; 94   : 				break;

  00234	e9 fa 01 00 00	 jmp	 $LN15@LoadData
$LN14@LoadData:

; 95   : 			}
; 96   : 
; 97   : 			iType = (int)TokenNumber;

  00239	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0023f	e8 00 00 00 00	 call	 __ftol2_sse
  00244	89 45 e0	 mov	 DWORD PTR _iType$228039[ebp], eax
$LN13@LoadData:

; 98   : 
; 99   : 			while ( true )

  00247	b8 01 00 00 00	 mov	 eax, 1
  0024c	85 c0		 test	 eax, eax
  0024e	0f 84 da 01 00
	00		 je	 $LN12@LoadData

; 100  : 			{
; 101  : 				if ( iType == 7 )

  00254	83 7d e0 07	 cmp	 DWORD PTR _iType$228039[ebp], 7
  00258	0f 85 38 01 00
	00		 jne	 $LN11@LoadData

; 102  : 				{
; 103  : 					iState = 0;

  0025e	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _iState$228040[ebp], 0

; 104  : 					iCondition = 0;

  00265	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _iCondition$228041[ebp], 0

; 105  : 					iValue = 0;

  0026c	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _iValue$228042[ebp], 0

; 106  : 
; 107  : 					Token = GetToken();

  00273	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00278	89 45 8c	 mov	 DWORD PTR tv184[ebp], eax
  0027b	8b 45 8c	 mov	 eax, DWORD PTR tv184[ebp]
  0027e	89 45 e4	 mov	 DWORD PTR _Token$228038[ebp], eax

; 108  : 
; 109  : 					if ( !strcmp("end", TokenString))

  00281	68 00 00 00 00	 push	 OFFSET _TokenString
  00286	68 00 00 00 00	 push	 OFFSET ??_C@_03JBJLGPFL@end?$AA@
  0028b	e8 00 00 00 00	 call	 _strcmp
  00290	83 c4 08	 add	 esp, 8
  00293	85 c0		 test	 eax, eax
  00295	75 05		 jne	 SHORT $LN10@LoadData

; 110  : 					{
; 111  : 						break;

  00297	e9 92 01 00 00	 jmp	 $LN12@LoadData
$LN10@LoadData:

; 112  : 					}
; 113  : 
; 114  : 					iState = (int)TokenNumber;

  0029c	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  002a2	e8 00 00 00 00	 call	 __ftol2_sse
  002a7	89 45 dc	 mov	 DWORD PTR _iState$228040[ebp], eax

; 115  : 
; 116  : 					Token = GetToken();

  002aa	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  002af	89 45 8c	 mov	 DWORD PTR tv185[ebp], eax
  002b2	8b 45 8c	 mov	 eax, DWORD PTR tv185[ebp]
  002b5	89 45 e4	 mov	 DWORD PTR _Token$228038[ebp], eax

; 117  : 					iCondition = (int)TokenNumber;

  002b8	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  002be	e8 00 00 00 00	 call	 __ftol2_sse
  002c3	89 45 d8	 mov	 DWORD PTR _iCondition$228041[ebp], eax

; 118  : 
; 119  : 					Token = GetToken();

  002c6	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  002cb	89 45 8c	 mov	 DWORD PTR tv186[ebp], eax
  002ce	8b 45 8c	 mov	 eax, DWORD PTR tv186[ebp]
  002d1	89 45 e4	 mov	 DWORD PTR _Token$228038[ebp], eax

; 120  : 					iValue = (int)TokenNumber;

  002d4	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  002da	e8 00 00 00 00	 call	 __ftol2_sse
  002df	89 45 d4	 mov	 DWORD PTR _iValue$228042[ebp], eax

; 121  : 
; 122  : 					if ( this->m_StateInfoCount < 0 || this->m_StateInfoCount >= KANTURU_NIGHTMARE_STATE_INFO )

  002e2	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  002e5	83 b8 88 00 00
	00 00		 cmp	 DWORD PTR [eax+136], 0
  002ec	7c 0c		 jl	 SHORT $LN8@LoadData
  002ee	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  002f1	83 b8 88 00 00
	00 06		 cmp	 DWORD PTR [eax+136], 6
  002f8	7c 1c		 jl	 SHORT $LN9@LoadData
$LN8@LoadData:

; 123  : 					{
; 124  : 						MsgBox("[ KANTURU ][ BattleOfNightmare ] - Exceed Max State Time (%d)",
; 125  : 							this->m_StateInfoCount);

  002fa	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  002fd	8b 88 88 00 00
	00		 mov	 ecx, DWORD PTR [eax+136]
  00303	51		 push	 ecx
  00304	68 00 00 00 00	 push	 OFFSET ??_C@_0DO@LDEGEFMJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  00309	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  0030e	83 c4 08	 add	 esp, 8

; 126  : 
; 127  : 						break;

  00311	e9 18 01 00 00	 jmp	 $LN12@LoadData
$LN9@LoadData:

; 128  : 					}
; 129  : 
; 130  : 					this->m_StateInfo[this->m_StateInfoCount].SetStateInfo(iState);

  00316	8b 45 dc	 mov	 eax, DWORD PTR _iState$228040[ebp]
  00319	50		 push	 eax
  0031a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0031d	8b 91 88 00 00
	00		 mov	 edx, DWORD PTR [ecx+136]
  00323	6b d2 14	 imul	 edx, 20			; 00000014H
  00326	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00329	8d 4c 10 10	 lea	 ecx, DWORD PTR [eax+edx+16]
  0032d	e8 00 00 00 00	 call	 ?SetStateInfo@CKanturuStateInfo@@QAEXH@Z ; CKanturuStateInfo::SetStateInfo

; 131  : 					this->m_StateInfo[this->m_StateInfoCount].SetCondition(iCondition);

  00332	8b 45 d8	 mov	 eax, DWORD PTR _iCondition$228041[ebp]
  00335	50		 push	 eax
  00336	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00339	8b 91 88 00 00
	00		 mov	 edx, DWORD PTR [ecx+136]
  0033f	6b d2 14	 imul	 edx, 20			; 00000014H
  00342	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00345	8d 4c 10 10	 lea	 ecx, DWORD PTR [eax+edx+16]
  00349	e8 00 00 00 00	 call	 ?SetCondition@CKanturuStateInfo@@QAEXH@Z ; CKanturuStateInfo::SetCondition

; 132  : 
; 133  : 					if ( iCondition == 1 )

  0034e	83 7d d8 01	 cmp	 DWORD PTR _iCondition$228041[ebp], 1
  00352	75 0c		 jne	 SHORT $LN7@LoadData

; 134  : 					{
; 135  : 						iValue *= 1000;

  00354	8b 45 d4	 mov	 eax, DWORD PTR _iValue$228042[ebp]
  00357	69 c0 e8 03 00
	00		 imul	 eax, 1000		; 000003e8H
  0035d	89 45 d4	 mov	 DWORD PTR _iValue$228042[ebp], eax
$LN7@LoadData:

; 136  : 					}
; 137  : 
; 138  : 					this->m_StateInfo[this->m_StateInfoCount].SetValue(iValue);

  00360	8b 45 d4	 mov	 eax, DWORD PTR _iValue$228042[ebp]
  00363	50		 push	 eax
  00364	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00367	8b 91 88 00 00
	00		 mov	 edx, DWORD PTR [ecx+136]
  0036d	6b d2 14	 imul	 edx, 20			; 00000014H
  00370	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00373	8d 4c 10 10	 lea	 ecx, DWORD PTR [eax+edx+16]
  00377	e8 00 00 00 00	 call	 ?SetValue@CKanturuStateInfo@@QAEXH@Z ; CKanturuStateInfo::SetValue

; 139  : 					this->m_StateInfoCount++;

  0037c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0037f	8b 88 88 00 00
	00		 mov	 ecx, DWORD PTR [eax+136]
  00385	83 c1 01	 add	 ecx, 1
  00388	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0038b	89 8a 88 00 00
	00		 mov	 DWORD PTR [edx+136], ecx
  00391	e9 93 00 00 00	 jmp	 $LN1@LoadData
$LN11@LoadData:

; 140  : 				}
; 141  : 				else if ( iType == 8 )

  00396	83 7d e0 08	 cmp	 DWORD PTR _iType$228039[ebp], 8
  0039a	75 67		 jne	 SHORT $LN5@LoadData

; 142  : 				{
; 143  : 					int iValue = 0;

  0039c	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _iValue$228079[ebp], 0

; 144  : 
; 145  : 					Token = GetToken();

  003a3	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  003a8	89 45 8c	 mov	 DWORD PTR tv187[ebp], eax
  003ab	8b 45 8c	 mov	 eax, DWORD PTR tv187[ebp]
  003ae	89 45 e4	 mov	 DWORD PTR _Token$228038[ebp], eax

; 146  : 
; 147  : 					if ( !strcmp("end", TokenString))

  003b1	68 00 00 00 00	 push	 OFFSET _TokenString
  003b6	68 00 00 00 00	 push	 OFFSET ??_C@_03JBJLGPFL@end?$AA@
  003bb	e8 00 00 00 00	 call	 _strcmp
  003c0	83 c4 08	 add	 esp, 8
  003c3	85 c0		 test	 eax, eax
  003c5	75 02		 jne	 SHORT $LN4@LoadData

; 148  : 					{
; 149  : 						break;

  003c7	eb 65		 jmp	 SHORT $LN12@LoadData
$LN4@LoadData:

; 150  : 					}
; 151  : 
; 152  : 					iValue = (int)TokenNumber;

  003c9	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  003cf	e8 00 00 00 00	 call	 __ftol2_sse
  003d4	89 45 d0	 mov	 DWORD PTR _iValue$228079[ebp], eax

; 153  : 
; 154  : 					if ( iValue < 0 )

  003d7	83 7d d0 00	 cmp	 DWORD PTR _iValue$228079[ebp], 0
  003db	7d 18		 jge	 SHORT $LN3@LoadData

; 155  : 					{
; 156  : 						MsgBox("[ KANTURU ][ BattleOfNightmare ] - Nightmare Hand AI Group Read Error(%d)",
; 157  : 							iValue);

  003dd	8b 45 d0	 mov	 eax, DWORD PTR _iValue$228079[ebp]
  003e0	50		 push	 eax
  003e1	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@IMKKLNIA@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  003e6	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  003eb	83 c4 08	 add	 esp, 8

; 158  : 
; 159  : 						iValue=0;

  003ee	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _iValue$228079[ebp], 0
$LN3@LoadData:

; 160  : 					}
; 161  : 
; 162  : 					this->m_iNightmareAIGroupNumber = iValue;

  003f5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  003f8	8b 4d d0	 mov	 ecx, DWORD PTR _iValue$228079[ebp]
  003fb	89 88 8c 00 00
	00		 mov	 DWORD PTR [eax+140], ecx

; 163  : 				}
; 164  : 				else

  00401	eb 26		 jmp	 SHORT $LN1@LoadData
$LN5@LoadData:

; 165  : 				{
; 166  : 					Token = GetToken();

  00403	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00408	89 45 8c	 mov	 DWORD PTR tv188[ebp], eax
  0040b	8b 45 8c	 mov	 eax, DWORD PTR tv188[ebp]
  0040e	89 45 e4	 mov	 DWORD PTR _Token$228038[ebp], eax

; 167  : 
; 168  : 					if ( !strcmp("end", TokenString))

  00411	68 00 00 00 00	 push	 OFFSET _TokenString
  00416	68 00 00 00 00	 push	 OFFSET ??_C@_03JBJLGPFL@end?$AA@
  0041b	e8 00 00 00 00	 call	 _strcmp
  00420	83 c4 08	 add	 esp, 8
  00423	85 c0		 test	 eax, eax
  00425	75 02		 jne	 SHORT $LN1@LoadData

; 169  : 					{
; 170  : 						break;

  00427	eb 05		 jmp	 SHORT $LN12@LoadData
$LN1@LoadData:

; 171  : 					}
; 172  : 				}
; 173  : 
; 174  : 			}	// while

  00429	e9 19 fe ff ff	 jmp	 $LN13@LoadData
$LN12@LoadData:

; 175  : 		}	// while

  0042e	e9 e0 fd ff ff	 jmp	 $LN16@LoadData
$LN15@LoadData:

; 176  : 
; 177  : 		fclose(SMDFile);

  00433	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00438	50		 push	 eax
  00439	e8 00 00 00 00	 call	 _fclose
  0043e	83 c4 04	 add	 esp, 4

; 178  : 
; 179  : 		LogAddC(2, "[ KANTURU ][ BattleOfNightmare ]  %s file is Loaded",
; 180  : 			lpszFileName);

  00441	8b 45 08	 mov	 eax, DWORD PTR _lpszFileName$[ebp]
  00444	50		 push	 eax
  00445	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@IPBGHOPP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  0044a	6a 02		 push	 2
  0044c	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00452	83 c4 0c	 add	 esp, 12			; 0000000cH

; 181  : 
; 182  : 		this->m_bFileDataLoad = TRUE;

  00455	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00458	c7 40 0c 01 00
	00 00		 mov	 DWORD PTR [eax+12], 1

; 183  : 	}	// __try

  0045f	eb 1e		 jmp	 SHORT $LN23@LoadData
__catch$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z$0:

; 184  : 	catch(...)
; 185  : 	{
; 186  : 		MsgBox("[ KANTURU ][ BattleOfNightmare ] - Loading Exception Error (%s) File. ", lpszFileName);

  00461	8b 45 08	 mov	 eax, DWORD PTR _lpszFileName$[ebp]
  00464	50		 push	 eax
  00465	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@NBCHLILD@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  0046a	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  0046f	83 c4 08	 add	 esp, 8

; 187  : 	}

  00472	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00479	b8 00 00 00 00	 mov	 eax, $LN26@LoadData
  0047e	c3		 ret	 0
$LN23@LoadData:
  0047f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
$LN26@LoadData:

; 188  : 
; 189  : 	return this->m_bFileDataLoad;

  00486	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00489	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
$LN21@LoadData:

; 190  : }

  0048c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0048f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00496	59		 pop	 ecx
  00497	5f		 pop	 edi
  00498	5e		 pop	 esi
  00499	5b		 pop	 ebx
  0049a	8b e5		 mov	 esp, ebp
  0049c	5d		 pop	 ebp
  0049d	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z:
  00031	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00035	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00038	8b 4a 88	 mov	 ecx, DWORD PTR [edx-120]
  0003b	33 c8		 xor	 ecx, eax
  0003d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00042	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z
  00047	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadData@CKanturuBattleOfNightmare@@QAEHPAD@Z ENDP	; CKanturuBattleOfNightmare::LoadData
PUBLIC	__$ArrayPad$
EXTRN	_isalnum:PROC
EXTRN	_isalpha:PROC
EXTRN	_atof:PROC
EXTRN	_isdigit:PROC
EXTRN	_getc:PROC
EXTRN	_ungetc:PROC
EXTRN	_isspace:PROC
EXTRN	_fgetc:PROC
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_CurrentToken DD 01H DUP (?)
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\include\readscript.h
_BSS	ENDS
_TEXT	SEGMENT
tv90 = -180						; size = 4
_TempString$ = -112					; size = 100
_p$ = -12						; size = 4
_ch$ = -5						; size = 1
__$ArrayPad$ = -4					; size = 4
?GetToken@@YA?AW4SMDToken@@XZ PROC			; GetToken

; 24   : {

  004a0	55		 push	 ebp
  004a1	8b ec		 mov	 ebp, esp
  004a3	81 ec b4 00 00
	00		 sub	 esp, 180		; 000000b4H
  004a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  004ae	33 c5		 xor	 eax, ebp
  004b0	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  004b3	53		 push	 ebx
  004b4	56		 push	 esi
  004b5	57		 push	 edi

; 25   : 	char ch;
; 26   : 	char* p;
; 27   : 	char TempString[100];
; 28   : 
; 29   : 	TokenString[0]=0;

  004b6	c6 05 00 00 00
	00 00		 mov	 BYTE PTR _TokenString, 0
$LN31@GetToken:

; 30   : 
; 31   : 	do
; 32   : 	{
; 33   : 		if ((ch=fgetc(SMDFile)) == -1)

  004bd	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  004c2	50		 push	 eax
  004c3	e8 00 00 00 00	 call	 _fgetc
  004c8	83 c4 04	 add	 esp, 4
  004cb	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  004ce	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  004d2	83 f9 ff	 cmp	 ecx, -1
  004d5	75 0c		 jne	 SHORT $LN28@GetToken

; 34   : 		{
; 35   : 			return END;	// End of FILE (EOF)

  004d7	b8 02 00 00 00	 mov	 eax, 2
  004dc	e9 f7 02 00 00	 jmp	 $LN32@GetToken

; 36   : 		}
; 37   : 		else

  004e1	eb 5b		 jmp	 SHORT $LN22@GetToken
$LN28@GetToken:

; 38   : 		{	
; 39   : 			if (ch=='/')		// this is /

  004e3	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  004e7	83 f8 2f	 cmp	 eax, 47			; 0000002fH
  004ea	75 52		 jne	 SHORT $LN22@GetToken

; 40   : 			{
; 41   : 				if((ch=fgetc(SMDFile)) == '/')

  004ec	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  004f1	50		 push	 eax
  004f2	e8 00 00 00 00	 call	 _fgetc
  004f7	83 c4 04	 add	 esp, 4
  004fa	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  004fd	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00501	83 f9 2f	 cmp	 ecx, 47			; 0000002fH
  00504	75 38		 jne	 SHORT $LN22@GetToken
$LN24@GetToken:

; 42   : 				{
; 43   : 					while ((ch != '\n') && (ch != -1))	// End of Line (EOL)

  00506	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  0050a	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0050d	74 1c		 je	 SHORT $LN23@GetToken
  0050f	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00513	83 f8 ff	 cmp	 eax, -1
  00516	74 13		 je	 SHORT $LN23@GetToken

; 44   : 					{
; 45   : 						ch=fgetc(SMDFile);

  00518	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0051d	50		 push	 eax
  0051e	e8 00 00 00 00	 call	 _fgetc
  00523	83 c4 04	 add	 esp, 4
  00526	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al

; 46   : 					}

  00529	eb db		 jmp	 SHORT $LN24@GetToken
$LN23@GetToken:

; 47   : 	
; 48   : 					if (ch == -1)

  0052b	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  0052f	83 f8 ff	 cmp	 eax, -1
  00532	75 0a		 jne	 SHORT $LN22@GetToken

; 49   : 					{
; 50   : 						return END;	// End of FILE

  00534	b8 02 00 00 00	 mov	 eax, 2
  00539	e9 9a 02 00 00	 jmp	 $LN32@GetToken
$LN22@GetToken:

; 51   : 					}
; 52   : 				}
; 53   : 			}
; 54   : 		}
; 55   : 	}
; 56   : 	while (isspace(ch) != 0);

  0053e	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00542	50		 push	 eax
  00543	e8 00 00 00 00	 call	 _isspace
  00548	83 c4 04	 add	 esp, 4
  0054b	85 c0		 test	 eax, eax
  0054d	0f 85 6a ff ff
	ff		 jne	 $LN31@GetToken

; 57   : 
; 58   : 	
; 59   : 	switch(ch)

  00553	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00557	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv90[ebp], eax
  0055d	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR tv90[ebp]
  00563	83 e9 22	 sub	 ecx, 34			; 00000022H
  00566	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv90[ebp], ecx
  0056c	83 bd 4c ff ff
	ff 5b		 cmp	 DWORD PTR tv90[ebp], 91	; 0000005bH
  00573	0f 87 a3 01 00
	00		 ja	 $LN6@GetToken
  00579	8b 95 4c ff ff
	ff		 mov	 edx, DWORD PTR tv90[ebp]
  0057f	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN34@GetToken[edx]
  00586	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN35@GetToken[eax*4]
$LN19@GetToken:

; 60   : 	{
; 61   : 
; 62   : 	case 0x23:	// #
; 63   : 		return CurrentToken=COMMAND;

  0058d	c7 05 00 00 00
	00 23 00 00 00	 mov	 DWORD PTR _CurrentToken, 35 ; 00000023H
  00597	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  0059c	e9 37 02 00 00	 jmp	 $LN32@GetToken

; 64   : 		break;

  005a1	e9 30 02 00 00	 jmp	 $LN20@GetToken
$LN18@GetToken:

; 65   : 	
; 66   : 	case 0x3B:	// ;
; 67   : 		return CurrentToken=SEMICOLON;

  005a6	c7 05 00 00 00
	00 3b 00 00 00	 mov	 DWORD PTR _CurrentToken, 59 ; 0000003bH
  005b0	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  005b5	e9 1e 02 00 00	 jmp	 $LN32@GetToken

; 68   : 		break;

  005ba	e9 17 02 00 00	 jmp	 $LN20@GetToken
$LN17@GetToken:

; 69   : 	
; 70   : 	case 0x2C:	// ,
; 71   : 
; 72   : 		return CurrentToken=COMMA;

  005bf	c7 05 00 00 00
	00 2c 00 00 00	 mov	 DWORD PTR _CurrentToken, 44 ; 0000002cH
  005c9	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  005ce	e9 05 02 00 00	 jmp	 $LN32@GetToken

; 73   : 		break;

  005d3	e9 fe 01 00 00	 jmp	 $LN20@GetToken
$LN16@GetToken:

; 74   : 	
; 75   : 	case 0x7B:	// {
; 76   : 		return CurrentToken = LP;

  005d8	c7 05 00 00 00
	00 7b 00 00 00	 mov	 DWORD PTR _CurrentToken, 123 ; 0000007bH
  005e2	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  005e7	e9 ec 01 00 00	 jmp	 $LN32@GetToken

; 77   : 		break;

  005ec	e9 e5 01 00 00	 jmp	 $LN20@GetToken
$LN15@GetToken:

; 78   : 
; 79   : 	case 0x7D:	// }
; 80   : 		return CurrentToken = RP;

  005f1	c7 05 00 00 00
	00 7d 00 00 00	 mov	 DWORD PTR _CurrentToken, 125 ; 0000007dH
  005fb	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00600	e9 d3 01 00 00	 jmp	 $LN32@GetToken

; 81   : 		break;

  00605	e9 cc 01 00 00	 jmp	 $LN20@GetToken
$LN14@GetToken:

; 82   : 	// Nice Index Table :)	by Deathway
; 83   : 	// Numbers Case
; 84   : 	case 0x2D:	//-
; 85   : 	case 0x2E:	//.
; 86   : 	case '0':	//0
; 87   : 	case '1':	//1
; 88   : 	case '2':	//2
; 89   : 	case '3':	//3
; 90   : 	case '4':	//4		
; 91   : 	case '5':	//5
; 92   : 	case '6':	//6
; 93   : 	case '7':	//7
; 94   : 	case '8':	//8
; 95   : 	case '9':	//9
; 96   : 		ungetc(ch, SMDFile);

  0060a	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0060f	50		 push	 eax
  00610	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00614	51		 push	 ecx
  00615	e8 00 00 00 00	 call	 _ungetc
  0061a	83 c4 08	 add	 esp, 8

; 97   : 		p = TempString;

  0061d	8d 45 90	 lea	 eax, DWORD PTR _TempString$[ebp]
  00620	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax
$LN13@GetToken:

; 98   : 		
; 99   : 		while (((ch=getc(SMDFile)) != -1) && ((ch == 0x2E) || (isdigit(ch) != 0) || (ch == 0x2D)))  // 2e '.'  2D '-'

  00623	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00628	50		 push	 eax
  00629	e8 00 00 00 00	 call	 _getc
  0062e	83 c4 04	 add	 esp, 4
  00631	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  00634	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00638	83 f9 ff	 cmp	 ecx, -1
  0063b	74 36		 je	 SHORT $LN12@GetToken
  0063d	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00641	83 f8 2e	 cmp	 eax, 46			; 0000002eH
  00644	74 1a		 je	 SHORT $LN11@GetToken
  00646	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  0064a	50		 push	 eax
  0064b	e8 00 00 00 00	 call	 _isdigit
  00650	83 c4 04	 add	 esp, 4
  00653	85 c0		 test	 eax, eax
  00655	75 09		 jne	 SHORT $LN11@GetToken
  00657	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  0065b	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  0065e	75 13		 jne	 SHORT $LN12@GetToken
$LN11@GetToken:

; 100  : 		{
; 101  : 			*p = ch;	// Construct a String

  00660	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00663	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  00666	88 08		 mov	 BYTE PTR [eax], cl

; 102  : 			p++;

  00668	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  0066b	83 c0 01	 add	 eax, 1
  0066e	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 103  : 		}		

  00671	eb b0		 jmp	 SHORT $LN13@GetToken
$LN12@GetToken:

; 104  : 		*p = 0;

  00673	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00676	c6 00 00	 mov	 BYTE PTR [eax], 0

; 105  : 		TokenNumber = atof( TempString);	// Select the first Byte as Main ID

  00679	8d 45 90	 lea	 eax, DWORD PTR _TempString$[ebp]
  0067c	50		 push	 eax
  0067d	e8 00 00 00 00	 call	 _atof
  00682	83 c4 04	 add	 esp, 4
  00685	d9 1d 00 00 00
	00		 fstp	 DWORD PTR _TokenNumber

; 106  : 		return CurrentToken  = NUMBER ;

  0068b	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _CurrentToken, 1
  00695	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  0069a	e9 39 01 00 00	 jmp	 $LN32@GetToken

; 107  : 		break;

  0069f	e9 32 01 00 00	 jmp	 $LN20@GetToken
$LN10@GetToken:

; 108  : 
; 109  : 	case '\"':	// "	String Case
; 110  : 		p=&TokenString[0];

  006a4	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], OFFSET _TokenString
$LN9@GetToken:

; 111  : 		
; 112  : 		while (((ch=getc(SMDFile)) != -1 ) && (ch != 0x22))	// nice

  006ab	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  006b0	50		 push	 eax
  006b1	e8 00 00 00 00	 call	 _getc
  006b6	83 c4 04	 add	 esp, 4
  006b9	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  006bc	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  006c0	83 f9 ff	 cmp	 ecx, -1
  006c3	74 1c		 je	 SHORT $LN8@GetToken
  006c5	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  006c9	83 f8 22	 cmp	 eax, 34			; 00000022H
  006cc	74 13		 je	 SHORT $LN8@GetToken

; 113  : 		{
; 114  : 			*p = ch;

  006ce	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  006d1	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  006d4	88 08		 mov	 BYTE PTR [eax], cl

; 115  : 			p++;

  006d6	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  006d9	83 c0 01	 add	 eax, 1
  006dc	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 116  : 		}

  006df	eb ca		 jmp	 SHORT $LN9@GetToken
$LN8@GetToken:

; 117  : 		if (ch != 0x22 )

  006e1	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  006e5	83 f8 22	 cmp	 eax, 34			; 00000022H
  006e8	74 13		 je	 SHORT $LN7@GetToken

; 118  : 		{
; 119  : 			ungetc(ch, SMDFile);

  006ea	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  006ef	50		 push	 eax
  006f0	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  006f4	51		 push	 ecx
  006f5	e8 00 00 00 00	 call	 _ungetc
  006fa	83 c4 08	 add	 esp, 8
$LN7@GetToken:

; 120  : 		}
; 121  : 		*p = 0;

  006fd	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00700	c6 00 00	 mov	 BYTE PTR [eax], 0

; 122  : 		return CurrentToken = NAME;

  00703	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _CurrentToken, 0
  0070d	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00712	e9 c1 00 00 00	 jmp	 $LN32@GetToken

; 123  : 		break;

  00717	e9 ba 00 00 00	 jmp	 $LN20@GetToken
$LN6@GetToken:

; 124  : 
; 125  : 	default:	// Others
; 126  : 		if (isalpha(ch))

  0071c	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00720	50		 push	 eax
  00721	e8 00 00 00 00	 call	 _isalpha
  00726	83 c4 04	 add	 esp, 4
  00729	85 c0		 test	 eax, eax
  0072b	0f 84 94 00 00
	00		 je	 $LN5@GetToken

; 127  : 		{
; 128  : 			p=&TokenString[0];

  00731	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], OFFSET _TokenString

; 129  : 			*p=ch;

  00738	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  0073b	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  0073e	88 08		 mov	 BYTE PTR [eax], cl

; 130  : 			p++;

  00740	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00743	83 c0 01	 add	 eax, 1
  00746	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax
$LN4@GetToken:

; 131  : 
; 132  : 			while ( ((ch=getc(SMDFile)) != -1) && ( (ch == 0x2E) || (ch == 0x5F) || (isalnum(ch) != 0) ) )

  00749	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0074e	50		 push	 eax
  0074f	e8 00 00 00 00	 call	 _getc
  00754	83 c4 04	 add	 esp, 4
  00757	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  0075a	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  0075e	83 f9 ff	 cmp	 ecx, -1
  00761	74 36		 je	 SHORT $LN3@GetToken
  00763	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00767	83 f8 2e	 cmp	 eax, 46			; 0000002eH
  0076a	74 1a		 je	 SHORT $LN2@GetToken
  0076c	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00770	83 f8 5f	 cmp	 eax, 95			; 0000005fH
  00773	74 11		 je	 SHORT $LN2@GetToken
  00775	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00779	50		 push	 eax
  0077a	e8 00 00 00 00	 call	 _isalnum
  0077f	83 c4 04	 add	 esp, 4
  00782	85 c0		 test	 eax, eax
  00784	74 13		 je	 SHORT $LN3@GetToken
$LN2@GetToken:

; 133  : 			{
; 134  : 				*p=ch;

  00786	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00789	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  0078c	88 08		 mov	 BYTE PTR [eax], cl

; 135  : 				p++;

  0078e	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00791	83 c0 01	 add	 eax, 1
  00794	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 136  : 				
; 137  : 			}

  00797	eb b0		 jmp	 SHORT $LN4@GetToken
$LN3@GetToken:

; 138  : 
; 139  : 			ungetc(ch, SMDFile);

  00799	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0079e	50		 push	 eax
  0079f	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  007a3	51		 push	 ecx
  007a4	e8 00 00 00 00	 call	 _ungetc
  007a9	83 c4 08	 add	 esp, 8

; 140  : 			*p=0;

  007ac	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  007af	c6 00 00	 mov	 BYTE PTR [eax], 0

; 141  : 			CurrentToken=NAME;

  007b2	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _CurrentToken, 0

; 142  : 			return CurrentToken;

  007bc	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  007c1	eb 15		 jmp	 SHORT $LN32@GetToken

; 143  : 		}
; 144  : 		else

  007c3	eb 11		 jmp	 SHORT $LN1@GetToken
$LN5@GetToken:

; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'

  007c5	c7 05 00 00 00
	00 3c 00 00 00	 mov	 DWORD PTR _CurrentToken, 60 ; 0000003cH
  007cf	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  007d4	eb 02		 jmp	 SHORT $LN32@GetToken
$LN1@GetToken:
$LN20@GetToken:

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;

  007d6	33 c0		 xor	 eax, eax
$LN32@GetToken:

; 153  : }

  007d8	5f		 pop	 edi
  007d9	5e		 pop	 esi
  007da	5b		 pop	 ebx
  007db	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  007de	33 cd		 xor	 ecx, ebp
  007e0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  007e5	8b e5		 mov	 esp, ebp
  007e7	5d		 pop	 ebp
  007e8	c3		 ret	 0
  007e9	8d 49 00	 npad	 3
$LN35@GetToken:
  007ec	00 00 00 00	 DD	 $LN10@GetToken
  007f0	00 00 00 00	 DD	 $LN19@GetToken
  007f4	00 00 00 00	 DD	 $LN17@GetToken
  007f8	00 00 00 00	 DD	 $LN14@GetToken
  007fc	00 00 00 00	 DD	 $LN18@GetToken
  00800	00 00 00 00	 DD	 $LN16@GetToken
  00804	00 00 00 00	 DD	 $LN15@GetToken
  00808	00 00 00 00	 DD	 $LN6@GetToken
$LN34@GetToken:
  0080c	00		 DB	 0
  0080d	01		 DB	 1
  0080e	07		 DB	 7
  0080f	07		 DB	 7
  00810	07		 DB	 7
  00811	07		 DB	 7
  00812	07		 DB	 7
  00813	07		 DB	 7
  00814	07		 DB	 7
  00815	07		 DB	 7
  00816	02		 DB	 2
  00817	03		 DB	 3
  00818	03		 DB	 3
  00819	07		 DB	 7
  0081a	03		 DB	 3
  0081b	03		 DB	 3
  0081c	03		 DB	 3
  0081d	03		 DB	 3
  0081e	03		 DB	 3
  0081f	03		 DB	 3
  00820	03		 DB	 3
  00821	03		 DB	 3
  00822	03		 DB	 3
  00823	03		 DB	 3
  00824	07		 DB	 7
  00825	04		 DB	 4
  00826	07		 DB	 7
  00827	07		 DB	 7
  00828	07		 DB	 7
  00829	07		 DB	 7
  0082a	07		 DB	 7
  0082b	07		 DB	 7
  0082c	07		 DB	 7
  0082d	07		 DB	 7
  0082e	07		 DB	 7
  0082f	07		 DB	 7
  00830	07		 DB	 7
  00831	07		 DB	 7
  00832	07		 DB	 7
  00833	07		 DB	 7
  00834	07		 DB	 7
  00835	07		 DB	 7
  00836	07		 DB	 7
  00837	07		 DB	 7
  00838	07		 DB	 7
  00839	07		 DB	 7
  0083a	07		 DB	 7
  0083b	07		 DB	 7
  0083c	07		 DB	 7
  0083d	07		 DB	 7
  0083e	07		 DB	 7
  0083f	07		 DB	 7
  00840	07		 DB	 7
  00841	07		 DB	 7
  00842	07		 DB	 7
  00843	07		 DB	 7
  00844	07		 DB	 7
  00845	07		 DB	 7
  00846	07		 DB	 7
  00847	07		 DB	 7
  00848	07		 DB	 7
  00849	07		 DB	 7
  0084a	07		 DB	 7
  0084b	07		 DB	 7
  0084c	07		 DB	 7
  0084d	07		 DB	 7
  0084e	07		 DB	 7
  0084f	07		 DB	 7
  00850	07		 DB	 7
  00851	07		 DB	 7
  00852	07		 DB	 7
  00853	07		 DB	 7
  00854	07		 DB	 7
  00855	07		 DB	 7
  00856	07		 DB	 7
  00857	07		 DB	 7
  00858	07		 DB	 7
  00859	07		 DB	 7
  0085a	07		 DB	 7
  0085b	07		 DB	 7
  0085c	07		 DB	 7
  0085d	07		 DB	 7
  0085e	07		 DB	 7
  0085f	07		 DB	 7
  00860	07		 DB	 7
  00861	07		 DB	 7
  00862	07		 DB	 7
  00863	07		 DB	 7
  00864	07		 DB	 7
  00865	05		 DB	 5
  00866	07		 DB	 7
  00867	06		 DB	 6
?GetToken@@YA?AW4SMDToken@@XZ ENDP			; GetToken
_TEXT	ENDS
PUBLIC	?ProcState_ENDCYCLE@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ProcState_ENDCYCLE
PUBLIC	?ProcState_END@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ProcState_END
PUBLIC	?ProcState_START@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ProcState_START
PUBLIC	?ProcState_NOTIFY@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ProcState_NOTIFY
PUBLIC	?ProcState_IDLE@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ProcState_IDLE
PUBLIC	?ProcState_NONE@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ProcState_NONE
PUBLIC	?CheckNightmareBattleUser@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::CheckNightmareBattleUser
PUBLIC	?CheckStateTime@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::CheckStateTime
PUBLIC	?Run@CKanturuBattleOfNightmare@@QAEXXZ		; CKanturuBattleOfNightmare::Run
EXTRN	?CheckUserState@CKanturuBattleUserMng@@QAEXXZ:PROC ; CKanturuBattleUserMng::CheckUserState
EXTRN	?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A:BYTE ; g_KanturuBattleUserMng
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturubattleofnightmare.cpp
_TEXT	SEGMENT
tv68 = -72						; size = 4
_this$ = -4						; size = 4
?Run@CKanturuBattleOfNightmare@@QAEXXZ PROC		; CKanturuBattleOfNightmare::Run
; _this$ = ecx

; 195  : {

  00870	55		 push	 ebp
  00871	8b ec		 mov	 ebp, esp
  00873	83 ec 48	 sub	 esp, 72			; 00000048H
  00876	53		 push	 ebx
  00877	56		 push	 esi
  00878	57		 push	 edi
  00879	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 196  : 	this->CheckStateTime();

  0087c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0087f	e8 00 00 00 00	 call	 ?CheckStateTime@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::CheckStateTime

; 197  : 	this->CheckNightmareBattleUser();

  00884	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00887	e8 00 00 00 00	 call	 ?CheckNightmareBattleUser@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::CheckNightmareBattleUser

; 198  : 	g_KanturuBattleUserMng.CheckUserState();

  0088c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  00891	e8 00 00 00 00	 call	 ?CheckUserState@CKanturuBattleUserMng@@QAEXXZ ; CKanturuBattleUserMng::CheckUserState

; 199  : 
; 200  : 	switch ( this->m_iBattleOfNightmareState )

  00896	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00899	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0089c	89 4d b8	 mov	 DWORD PTR tv68[ebp], ecx
  0089f	83 7d b8 05	 cmp	 DWORD PTR tv68[ebp], 5
  008a3	77 44		 ja	 SHORT $LN9@Run
  008a5	8b 55 b8	 mov	 edx, DWORD PTR tv68[ebp]
  008a8	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN11@Run[edx*4]
$LN6@Run:

; 201  : 	{
; 202  : 		case KANTURU_NIGHTMARE_NONE:
; 203  : 			this->ProcState_NONE();

  008af	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008b2	e8 00 00 00 00	 call	 ?ProcState_NONE@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ProcState_NONE

; 204  : 			break;

  008b7	eb 30		 jmp	 SHORT $LN9@Run
$LN5@Run:

; 205  : 		case KANTURU_NIGHTMARE_IDLE:
; 206  : 			this->ProcState_IDLE();

  008b9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008bc	e8 00 00 00 00	 call	 ?ProcState_IDLE@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ProcState_IDLE

; 207  : 			break;

  008c1	eb 26		 jmp	 SHORT $LN9@Run
$LN4@Run:

; 208  : 		case KANTURU_NIGHTMARE_NOTIFY:
; 209  : 			this->ProcState_NOTIFY();

  008c3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008c6	e8 00 00 00 00	 call	 ?ProcState_NOTIFY@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ProcState_NOTIFY

; 210  : 			break;

  008cb	eb 1c		 jmp	 SHORT $LN9@Run
$LN3@Run:

; 211  : 		case KANTURU_NIGHTMARE_START:
; 212  : 			this->ProcState_START();

  008cd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008d0	e8 00 00 00 00	 call	 ?ProcState_START@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ProcState_START

; 213  : 			break;

  008d5	eb 12		 jmp	 SHORT $LN9@Run
$LN2@Run:

; 214  : 		case KANTURU_NIGHTMARE_END:
; 215  : 			this->ProcState_END();

  008d7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008da	e8 00 00 00 00	 call	 ?ProcState_END@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ProcState_END

; 216  : 			break;

  008df	eb 08		 jmp	 SHORT $LN9@Run
$LN1@Run:

; 217  : 		case KANTURU_NIGHTMARE_ENDCYCLE:
; 218  : 			this->ProcState_ENDCYCLE();

  008e1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008e4	e8 00 00 00 00	 call	 ?ProcState_ENDCYCLE@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::ProcState_ENDCYCLE
$LN9@Run:

; 219  : 			break;
; 220  : 	}
; 221  : }

  008e9	5f		 pop	 edi
  008ea	5e		 pop	 esi
  008eb	5b		 pop	 ebx
  008ec	8b e5		 mov	 esp, ebp
  008ee	5d		 pop	 ebp
  008ef	c3		 ret	 0
$LN11@Run:
  008f0	00 00 00 00	 DD	 $LN6@Run
  008f4	00 00 00 00	 DD	 $LN5@Run
  008f8	00 00 00 00	 DD	 $LN4@Run
  008fc	00 00 00 00	 DD	 $LN3@Run
  00900	00 00 00 00	 DD	 $LN2@Run
  00904	00 00 00 00	 DD	 $LN1@Run
?Run@CKanturuBattleOfNightmare@@QAEXXZ ENDP		; CKanturuBattleOfNightmare::Run
_TEXT	ENDS
PUBLIC	?SetState_ENDCYCLE@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::SetState_ENDCYCLE
PUBLIC	?SetState_END@CKanturuBattleOfNightmare@@QAEXXZ	; CKanturuBattleOfNightmare::SetState_END
PUBLIC	?SetState_START@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::SetState_START
PUBLIC	?SetState_NOTIFY@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::SetState_NOTIFY
PUBLIC	?SetState_IDLE@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::SetState_IDLE
PUBLIC	?SetState_NONE@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::SetState_NONE
PUBLIC	??_C@_0GD@KPDPDGMO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	?SetAppliedTime@CKanturuStateInfo@@QAEXXZ	; CKanturuStateInfo::SetAppliedTime
PUBLIC	?GetCondition@CKanturuStateInfo@@QAEHXZ		; CKanturuStateInfo::GetCondition
PUBLIC	?SetState@CKanturuBattleOfNightmare@@QAEXH@Z	; CKanturuBattleOfNightmare::SetState
EXTRN	?NotifyKanturuChangeState@CKanturuUtil@@QAEXHH@Z:PROC ; CKanturuUtil::NotifyKanturuChangeState
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?ResetRegenMonsterObjData@CKanturuMonsterMng@@QAEXXZ:PROC ; CKanturuMonsterMng::ResetRegenMonsterObjData
EXTRN	?g_KanturuMonsterMng@@3VCKanturuMonsterMng@@A:BYTE ; g_KanturuMonsterMng
;	COMDAT ??_C@_0GD@KPDPDGMO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0GD@KPDPDGMO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] CKanturuBattleOfNightmare::Se'
	DB	'tState(...)  m_iNightmareObjIndex %d', 00H	; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
tv79 = -72						; size = 4
_this$ = -4						; size = 4
_iBattleOfNightmareState$ = 8				; size = 4
?SetState@CKanturuBattleOfNightmare@@QAEXH@Z PROC	; CKanturuBattleOfNightmare::SetState
; _this$ = ecx

; 226  : {

  00910	55		 push	 ebp
  00911	8b ec		 mov	 ebp, esp
  00913	83 ec 48	 sub	 esp, 72			; 00000048H
  00916	53		 push	 ebx
  00917	56		 push	 esi
  00918	57		 push	 edi
  00919	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 227  : 	if ( this->m_StateInfo[iBattleOfNightmareState].GetCondition() > 0 )

  0091c	8b 45 08	 mov	 eax, DWORD PTR _iBattleOfNightmareState$[ebp]
  0091f	6b c0 14	 imul	 eax, 20			; 00000014H
  00922	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00925	8d 4c 01 10	 lea	 ecx, DWORD PTR [ecx+eax+16]
  00929	e8 00 00 00 00	 call	 ?GetCondition@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetCondition
  0092e	85 c0		 test	 eax, eax
  00930	7e 12		 jle	 SHORT $LN9@SetState

; 228  : 	{
; 229  : 		this->m_StateInfo[iBattleOfNightmareState].SetAppliedTime();

  00932	8b 45 08	 mov	 eax, DWORD PTR _iBattleOfNightmareState$[ebp]
  00935	6b c0 14	 imul	 eax, 20			; 00000014H
  00938	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0093b	8d 4c 01 10	 lea	 ecx, DWORD PTR [ecx+eax+16]
  0093f	e8 00 00 00 00	 call	 ?SetAppliedTime@CKanturuStateInfo@@QAEXXZ ; CKanturuStateInfo::SetAppliedTime
$LN9@SetState:

; 230  : 	}
; 231  : 
; 232  : 	g_KanturuMonsterMng.ResetRegenMonsterObjData();

  00944	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuMonsterMng@@3VCKanturuMonsterMng@@A ; g_KanturuMonsterMng
  00949	e8 00 00 00 00	 call	 ?ResetRegenMonsterObjData@CKanturuMonsterMng@@QAEXXZ ; CKanturuMonsterMng::ResetRegenMonsterObjData

; 233  : 	this->m_iNightmareObjIndex = -1;

  0094e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00951	c7 80 90 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [eax+144], -1

; 234  : 
; 235  : 	LogAddTD("[ KANTURU ][ BattleOfNightmare ] CKanturuBattleOfNightmare::SetState(...)  m_iNightmareObjIndex %d",
; 236  : 		this->m_iNightmareObjIndex);

  0095b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0095e	8b 88 90 00 00
	00		 mov	 ecx, DWORD PTR [eax+144]
  00964	51		 push	 ecx
  00965	68 00 00 00 00	 push	 OFFSET ??_C@_0GD@KPDPDGMO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  0096a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00970	83 c4 08	 add	 esp, 8

; 237  : 
; 238  : 	switch ( iBattleOfNightmareState )

  00973	8b 45 08	 mov	 eax, DWORD PTR _iBattleOfNightmareState$[ebp]
  00976	89 45 b8	 mov	 DWORD PTR tv79[ebp], eax
  00979	83 7d b8 05	 cmp	 DWORD PTR tv79[ebp], 5
  0097d	77 44		 ja	 SHORT $LN7@SetState
  0097f	8b 4d b8	 mov	 ecx, DWORD PTR tv79[ebp]
  00982	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN12@SetState[ecx*4]
$LN6@SetState:

; 239  : 	{
; 240  : 		case KANTURU_NIGHTMARE_NONE:
; 241  : 			this->SetState_NONE();

  00989	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0098c	e8 00 00 00 00	 call	 ?SetState_NONE@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::SetState_NONE

; 242  : 			break;

  00991	eb 30		 jmp	 SHORT $LN7@SetState
$LN5@SetState:

; 243  : 		case KANTURU_NIGHTMARE_IDLE:
; 244  : 			this->SetState_IDLE();

  00993	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00996	e8 00 00 00 00	 call	 ?SetState_IDLE@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::SetState_IDLE

; 245  : 			break;

  0099b	eb 26		 jmp	 SHORT $LN7@SetState
$LN4@SetState:

; 246  : 		case KANTURU_NIGHTMARE_NOTIFY:
; 247  : 			this->SetState_NOTIFY();

  0099d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009a0	e8 00 00 00 00	 call	 ?SetState_NOTIFY@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::SetState_NOTIFY

; 248  : 			break;

  009a5	eb 1c		 jmp	 SHORT $LN7@SetState
$LN3@SetState:

; 249  : 		case KANTURU_NIGHTMARE_START:
; 250  : 			this->SetState_START();

  009a7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009aa	e8 00 00 00 00	 call	 ?SetState_START@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::SetState_START

; 251  : 			break;

  009af	eb 12		 jmp	 SHORT $LN7@SetState
$LN2@SetState:

; 252  : 		case KANTURU_NIGHTMARE_END:
; 253  : 			this->SetState_END();

  009b1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009b4	e8 00 00 00 00	 call	 ?SetState_END@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::SetState_END

; 254  : 			break;

  009b9	eb 08		 jmp	 SHORT $LN7@SetState
$LN1@SetState:

; 255  : 		case KANTURU_NIGHTMARE_ENDCYCLE:
; 256  : 			this->SetState_ENDCYCLE();

  009bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009be	e8 00 00 00 00	 call	 ?SetState_ENDCYCLE@CKanturuBattleOfNightmare@@QAEXXZ ; CKanturuBattleOfNightmare::SetState_ENDCYCLE
$LN7@SetState:

; 257  : 			break;
; 258  : 	}
; 259  : 
; 260  : 	KANTURU_UTIL.NotifyKanturuChangeState(KANTURU_STATE_BATTLE_OF_NIGHTMARE, this->m_iBattleOfNightmareState);

  009c3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  009c6	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  009c9	51		 push	 ecx
  009ca	6a 03		 push	 3
  009cc	b9 00 00 00 00	 mov	 ecx, OFFSET _KANTURU_UTIL
  009d1	e8 00 00 00 00	 call	 ?NotifyKanturuChangeState@CKanturuUtil@@QAEXHH@Z ; CKanturuUtil::NotifyKanturuChangeState

; 261  : }

  009d6	5f		 pop	 edi
  009d7	5e		 pop	 esi
  009d8	5b		 pop	 ebx
  009d9	8b e5		 mov	 esp, ebp
  009db	5d		 pop	 ebp
  009dc	c2 04 00	 ret	 4
  009df	90		 npad	 1
$LN12@SetState:
  009e0	00 00 00 00	 DD	 $LN6@SetState
  009e4	00 00 00 00	 DD	 $LN5@SetState
  009e8	00 00 00 00	 DD	 $LN4@SetState
  009ec	00 00 00 00	 DD	 $LN3@SetState
  009f0	00 00 00 00	 DD	 $LN2@SetState
  009f4	00 00 00 00	 DD	 $LN1@SetState
?SetState@CKanturuBattleOfNightmare@@QAEXH@Z ENDP	; CKanturuBattleOfNightmare::SetState
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturustateinfo.h
_TEXT	ENDS
;	COMDAT ?GetCondition@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCondition@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetCondition, COMDAT
; _this$ = ecx

; 40   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 41   : 		return this->m_iCondition;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 42   : 	}

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCondition@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetCondition
_TEXT	ENDS
EXTRN	__imp__GetTickCount@0:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ?SetAppliedTime@CKanturuStateInfo@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetAppliedTime@CKanturuStateInfo@@QAEXXZ PROC		; CKanturuStateInfo::SetAppliedTime, COMDAT
; _this$ = ecx

; 54   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 55   : 		this->m_dwAppliedTickCount = GetTickCount();

  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 56   : 	}

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
?SetAppliedTime@CKanturuStateInfo@@QAEXXZ ENDP		; CKanturuStateInfo::SetAppliedTime
_TEXT	ENDS
PUBLIC	?SetNextState@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetNextState
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturubattleofnightmare.cpp
_TEXT	SEGMENT
_iNextState$ = -8					; size = 4
_this$ = -4						; size = 4
_iCurrentState$ = 8					; size = 4
?SetNextState@CKanturuBattleOfNightmare@@QAEXH@Z PROC	; CKanturuBattleOfNightmare::SetNextState
; _this$ = ecx

; 266  : {

  00a00	55		 push	 ebp
  00a01	8b ec		 mov	 ebp, esp
  00a03	83 ec 48	 sub	 esp, 72			; 00000048H
  00a06	53		 push	 ebx
  00a07	56		 push	 esi
  00a08	57		 push	 edi
  00a09	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 267  : 	int iNextState = iCurrentState + 1;

  00a0c	8b 45 08	 mov	 eax, DWORD PTR _iCurrentState$[ebp]
  00a0f	83 c0 01	 add	 eax, 1
  00a12	89 45 f8	 mov	 DWORD PTR _iNextState$[ebp], eax

; 268  : 
; 269  : 	if ( iNextState >= KANTURU_NIGHTMARE_STATE_INFO )

  00a15	83 7d f8 06	 cmp	 DWORD PTR _iNextState$[ebp], 6
  00a19	7c 07		 jl	 SHORT $LN1@SetNextSta

; 270  : 	{
; 271  : 		iNextState = KANTURU_NIGHTMARE_NONE;

  00a1b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iNextState$[ebp], 0
$LN1@SetNextSta:

; 272  : 	}
; 273  : 
; 274  : 	this->SetState(iNextState);

  00a22	8b 45 f8	 mov	 eax, DWORD PTR _iNextState$[ebp]
  00a25	50		 push	 eax
  00a26	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a29	e8 00 00 00 00	 call	 ?SetState@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetState

; 275  : }

  00a2e	5f		 pop	 edi
  00a2f	5e		 pop	 esi
  00a30	5b		 pop	 ebx
  00a31	8b e5		 mov	 esp, ebp
  00a33	5d		 pop	 ebp
  00a34	c2 04 00	 ret	 4
?SetNextState@CKanturuBattleOfNightmare@@QAEXH@Z ENDP	; CKanturuBattleOfNightmare::SetNextState
_TEXT	ENDS
PUBLIC	??_C@_0EA@IOPBJPNO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	??_C@_0DD@FIHBBAHI@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
EXTRN	?DelGroupInstance@TMonsterAIGroup@@SAHH@Z:PROC	; TMonsterAIGroup::DelGroupInstance
;	COMDAT ??_C@_0EA@IOPBJPNO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0EA@IOPBJPNO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] DelGroupInstance SetState_NON'
	DB	'E', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@FIHBBAHI@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0DD@FIHBBAHI@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] State(%d) -> NONE', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_NONE@CKanturuBattleOfNightmare@@QAEXXZ PROC	; CKanturuBattleOfNightmare::SetState_NONE
; _this$ = ecx

; 280  : {

  00a40	55		 push	 ebp
  00a41	8b ec		 mov	 ebp, esp
  00a43	83 ec 44	 sub	 esp, 68			; 00000044H
  00a46	53		 push	 ebx
  00a47	56		 push	 esi
  00a48	57		 push	 edi
  00a49	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 281  : 	LogAddC(5, "[ KANTURU ][ BattleOfNightmare ] State(%d) -> NONE",
; 282  : 		this->m_iBattleOfNightmareState);

  00a4c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a4f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00a52	51		 push	 ecx
  00a53	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@FIHBBAHI@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  00a58	6a 05		 push	 5
  00a5a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00a60	83 c4 0c	 add	 esp, 12			; 0000000cH

; 283  : 
; 284  : 	this->SetBattleOfNightmareState(KANTURU_NIGHTMARE_NONE);

  00a63	6a 00		 push	 0
  00a65	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a68	e8 00 00 00 00	 call	 ?SetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetBattleOfNightmareState

; 285  : 	TMonsterAIGroup::DelGroupInstance(this->m_iNightmareAIGroupNumber);

  00a6d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a70	8b 88 8c 00 00
	00		 mov	 ecx, DWORD PTR [eax+140]
  00a76	51		 push	 ecx
  00a77	e8 00 00 00 00	 call	 ?DelGroupInstance@TMonsterAIGroup@@SAHH@Z ; TMonsterAIGroup::DelGroupInstance
  00a7c	83 c4 04	 add	 esp, 4

; 286  : 
; 287  : 	LogAddTD("[ KANTURU ][ BattleOfNightmare ] DelGroupInstance SetState_NONE");

  00a7f	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IOPBJPNO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  00a84	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00a8a	83 c4 04	 add	 esp, 4

; 288  : }

  00a8d	5f		 pop	 edi
  00a8e	5e		 pop	 esi
  00a8f	5b		 pop	 ebx
  00a90	8b e5		 mov	 esp, ebp
  00a92	5d		 pop	 ebp
  00a93	c3		 ret	 0
?SetState_NONE@CKanturuBattleOfNightmare@@QAEXXZ ENDP	; CKanturuBattleOfNightmare::SetState_NONE
_TEXT	ENDS
PUBLIC	??_C@_0EA@OIFEBAKB@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	??_C@_0DD@DONEJPAH@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
EXTRN	?MoveAllUser@CKanturuBattleUserMng@@QAEHH@Z:PROC ; CKanturuBattleUserMng::MoveAllUser
;	COMDAT ??_C@_0EA@OIFEBAKB@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0EA@OIFEBAKB@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] DelGroupInstance SetState_IDL'
	DB	'E', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@DONEJPAH@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0DD@DONEJPAH@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] State(%d) -> IDLE', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_IDLE@CKanturuBattleOfNightmare@@QAEXXZ PROC	; CKanturuBattleOfNightmare::SetState_IDLE
; _this$ = ecx

; 292  : {

  00aa0	55		 push	 ebp
  00aa1	8b ec		 mov	 ebp, esp
  00aa3	83 ec 44	 sub	 esp, 68			; 00000044H
  00aa6	53		 push	 ebx
  00aa7	56		 push	 esi
  00aa8	57		 push	 edi
  00aa9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 293  : 	LogAddC(5, "[ KANTURU ][ BattleOfNightmare ] State(%d) -> IDLE",
; 294  : 		this->m_iBattleOfNightmareState);

  00aac	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00aaf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00ab2	51		 push	 ecx
  00ab3	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@DONEJPAH@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  00ab8	6a 05		 push	 5
  00aba	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00ac0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 295  : 
; 296  : 	LogAddTD("[ KANTURU ][ BattleOfNightmare ] State(%d) -> IDLE",
; 297  : 		this->m_iBattleOfNightmareState);

  00ac3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00ac6	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00ac9	51		 push	 ecx
  00aca	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@DONEJPAH@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  00acf	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00ad5	83 c4 08	 add	 esp, 8

; 298  : 
; 299  : 	this->SetBattleOfNightmareState(KANTURU_NIGHTMARE_IDLE);

  00ad8	6a 01		 push	 1
  00ada	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00add	e8 00 00 00 00	 call	 ?SetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetBattleOfNightmareState

; 300  : 	this->SetSuccessValue(FALSE);

  00ae2	6a 00		 push	 0
  00ae4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00ae7	e8 00 00 00 00	 call	 ?SetSuccessValue@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetSuccessValue

; 301  : 	TMonsterAIGroup::DelGroupInstance(this->m_iNightmareAIGroupNumber);

  00aec	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00aef	8b 88 8c 00 00
	00		 mov	 ecx, DWORD PTR [eax+140]
  00af5	51		 push	 ecx
  00af6	e8 00 00 00 00	 call	 ?DelGroupInstance@TMonsterAIGroup@@SAHH@Z ; TMonsterAIGroup::DelGroupInstance
  00afb	83 c4 04	 add	 esp, 4

; 302  : 
; 303  : 	LogAddTD("[ KANTURU ][ BattleOfNightmare ] DelGroupInstance SetState_IDLE");

  00afe	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@OIFEBAKB@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  00b03	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00b09	83 c4 04	 add	 esp, 4

; 304  : 	g_KanturuBattleUserMng.MoveAllUser(134);

  00b0c	68 86 00 00 00	 push	 134			; 00000086H
  00b11	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  00b16	e8 00 00 00 00	 call	 ?MoveAllUser@CKanturuBattleUserMng@@QAEHH@Z ; CKanturuBattleUserMng::MoveAllUser

; 305  : }

  00b1b	5f		 pop	 edi
  00b1c	5e		 pop	 esi
  00b1d	5b		 pop	 ebx
  00b1e	8b e5		 mov	 esp, ebp
  00b20	5d		 pop	 ebp
  00b21	c3		 ret	 0
?SetState_IDLE@CKanturuBattleOfNightmare@@QAEXXZ ENDP	; CKanturuBattleOfNightmare::SetState_IDLE
_TEXT	ENDS
PUBLIC	??_C@_0DF@IFLJJMBP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
;	COMDAT ??_C@_0DF@IFLJJMBP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0DF@IFLJJMBP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] State(%d) -> NOTIFY', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_NOTIFY@CKanturuBattleOfNightmare@@QAEXXZ PROC	; CKanturuBattleOfNightmare::SetState_NOTIFY
; _this$ = ecx

; 309  : {

  00b30	55		 push	 ebp
  00b31	8b ec		 mov	 ebp, esp
  00b33	83 ec 44	 sub	 esp, 68			; 00000044H
  00b36	53		 push	 ebx
  00b37	56		 push	 esi
  00b38	57		 push	 edi
  00b39	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 310  : 	LogAddC(5, "[ KANTURU ][ BattleOfNightmare ] State(%d) -> NOTIFY",
; 311  : 		this->m_iBattleOfNightmareState);

  00b3c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b3f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00b42	51		 push	 ecx
  00b43	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@IFLJJMBP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  00b48	6a 05		 push	 5
  00b4a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00b50	83 c4 0c	 add	 esp, 12			; 0000000cH

; 312  : 
; 313  : 	this->SetBattleOfNightmareState(KANTURU_NIGHTMARE_NOTIFY);

  00b53	6a 02		 push	 2
  00b55	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b58	e8 00 00 00 00	 call	 ?SetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetBattleOfNightmareState

; 314  : }

  00b5d	5f		 pop	 edi
  00b5e	5e		 pop	 esi
  00b5f	5b		 pop	 ebx
  00b60	8b e5		 mov	 esp, ebp
  00b62	5d		 pop	 ebp
  00b63	c3		 ret	 0
?SetState_NOTIFY@CKanturuBattleOfNightmare@@QAEXXZ ENDP	; CKanturuBattleOfNightmare::SetState_NOTIFY
_TEXT	ENDS
PUBLIC	??_C@_0EP@DHGKIACJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	?GetValue@CKanturuStateInfo@@QAEHXZ		; CKanturuStateInfo::GetValue
PUBLIC	??_C@_0DE@GJCDACDL@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
EXTRN	?FindGroupLeader@TMonsterAIGroup@@SAHH@Z:PROC	; TMonsterAIGroup::FindGroupLeader
EXTRN	?ChangeAIOrder@TMonsterAIGroup@@SAXHH@Z:PROC	; TMonsterAIGroup::ChangeAIOrder
EXTRN	?Init@TMonsterAIGroup@@SAXH@Z:PROC		; TMonsterAIGroup::Init
EXTRN	?SetKanturuMonster@CKanturuMonsterMng@@QAEHH@Z:PROC ; CKanturuMonsterMng::SetKanturuMonster
EXTRN	?NotifyKanturuBattleTime@CKanturuUtil@@QAEXH@Z:PROC ; CKanturuUtil::NotifyKanturuBattleTime
;	COMDAT ??_C@_0EP@DHGKIACJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0EP@DHGKIACJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] CKanturuNightmare Set m_iNigh'
	DB	'tmareObjIndex %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@GJCDACDL@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0DE@GJCDACDL@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] State(%d) -> START', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_iIndex$ = -8						; size = 4
_this$ = -4						; size = 4
?SetState_START@CKanturuBattleOfNightmare@@QAEXXZ PROC	; CKanturuBattleOfNightmare::SetState_START
; _this$ = ecx

; 318  : {

  00b70	55		 push	 ebp
  00b71	8b ec		 mov	 ebp, esp
  00b73	83 ec 48	 sub	 esp, 72			; 00000048H
  00b76	53		 push	 ebx
  00b77	56		 push	 esi
  00b78	57		 push	 edi
  00b79	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 319  : 	LogAddC(5, "[ KANTURU ][ BattleOfNightmare ] State(%d) -> START",
; 320  : 		this->m_iBattleOfNightmareState);

  00b7c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00b7f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00b82	51		 push	 ecx
  00b83	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@GJCDACDL@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  00b88	6a 05		 push	 5
  00b8a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00b90	83 c4 0c	 add	 esp, 12			; 0000000cH

; 321  : 
; 322  : 	this->SetBattleOfNightmareState(KANTURU_NIGHTMARE_START);

  00b93	6a 03		 push	 3
  00b95	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b98	e8 00 00 00 00	 call	 ?SetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetBattleOfNightmareState

; 323  : 
; 324  : 	if ( this->m_StateInfo[this->m_iBattleOfNightmareState].GetCondition() == 1 )

  00b9d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00ba0	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00ba3	6b c9 14	 imul	 ecx, 20			; 00000014H
  00ba6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00ba9	8d 4c 0a 10	 lea	 ecx, DWORD PTR [edx+ecx+16]
  00bad	e8 00 00 00 00	 call	 ?GetCondition@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetCondition
  00bb2	83 f8 01	 cmp	 eax, 1
  00bb5	75 20		 jne	 SHORT $LN1@SetState_S

; 325  : 	{
; 326  : 		KANTURU_UTIL.NotifyKanturuBattleTime(this->m_StateInfo[this->m_iBattleOfNightmareState].GetValue());

  00bb7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00bba	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00bbd	6b c9 14	 imul	 ecx, 20			; 00000014H
  00bc0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00bc3	8d 4c 0a 10	 lea	 ecx, DWORD PTR [edx+ecx+16]
  00bc7	e8 00 00 00 00	 call	 ?GetValue@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetValue
  00bcc	50		 push	 eax
  00bcd	b9 00 00 00 00	 mov	 ecx, OFFSET _KANTURU_UTIL
  00bd2	e8 00 00 00 00	 call	 ?NotifyKanturuBattleTime@CKanturuUtil@@QAEXH@Z ; CKanturuUtil::NotifyKanturuBattleTime
$LN1@SetState_S:

; 327  : 	}
; 328  : 
; 329  : 	g_KanturuMonsterMng.SetKanturuMonster(2);

  00bd7	6a 02		 push	 2
  00bd9	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuMonsterMng@@3VCKanturuMonsterMng@@A ; g_KanturuMonsterMng
  00bde	e8 00 00 00 00	 call	 ?SetKanturuMonster@CKanturuMonsterMng@@QAEHH@Z ; CKanturuMonsterMng::SetKanturuMonster

; 330  : 
; 331  : 	TMonsterAIGroup::Init(this->m_iNightmareAIGroupNumber);

  00be3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00be6	8b 88 8c 00 00
	00		 mov	 ecx, DWORD PTR [eax+140]
  00bec	51		 push	 ecx
  00bed	e8 00 00 00 00	 call	 ?Init@TMonsterAIGroup@@SAXH@Z ; TMonsterAIGroup::Init
  00bf2	83 c4 04	 add	 esp, 4

; 332  : 	TMonsterAIGroup::ChangeAIOrder(this->m_iNightmareAIGroupNumber, 0);

  00bf5	6a 00		 push	 0
  00bf7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00bfa	8b 88 8c 00 00
	00		 mov	 ecx, DWORD PTR [eax+140]
  00c00	51		 push	 ecx
  00c01	e8 00 00 00 00	 call	 ?ChangeAIOrder@TMonsterAIGroup@@SAXHH@Z ; TMonsterAIGroup::ChangeAIOrder
  00c06	83 c4 08	 add	 esp, 8

; 333  : 
; 334  : 	int iIndex = TMonsterAIGroup::FindGroupLeader(this->m_iNightmareAIGroupNumber);

  00c09	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00c0c	8b 88 8c 00 00
	00		 mov	 ecx, DWORD PTR [eax+140]
  00c12	51		 push	 ecx
  00c13	e8 00 00 00 00	 call	 ?FindGroupLeader@TMonsterAIGroup@@SAHH@Z ; TMonsterAIGroup::FindGroupLeader
  00c18	83 c4 04	 add	 esp, 4
  00c1b	89 45 f8	 mov	 DWORD PTR _iIndex$[ebp], eax

; 335  : 	this->m_iNightmareObjIndex = iIndex;

  00c1e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00c21	8b 4d f8	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00c24	89 88 90 00 00
	00		 mov	 DWORD PTR [eax+144], ecx

; 336  : 
; 337  : 	LogAddTD("[ KANTURU ][ BattleOfNightmare ] CKanturuNightmare Set m_iNightmareObjIndex %d",
; 338  : 		this->m_iNightmareObjIndex);

  00c2a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00c2d	8b 88 90 00 00
	00		 mov	 ecx, DWORD PTR [eax+144]
  00c33	51		 push	 ecx
  00c34	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DHGKIACJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  00c39	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00c3f	83 c4 08	 add	 esp, 8

; 339  : }

  00c42	5f		 pop	 edi
  00c43	5e		 pop	 esi
  00c44	5b		 pop	 ebx
  00c45	8b e5		 mov	 esp, ebp
  00c47	5d		 pop	 ebp
  00c48	c3		 ret	 0
?SetState_START@CKanturuBattleOfNightmare@@QAEXXZ ENDP	; CKanturuBattleOfNightmare::SetState_START
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturustateinfo.h
_TEXT	ENDS
;	COMDAT ?GetValue@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetValue@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetValue, COMDAT
; _this$ = ecx

; 50   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 51   : 		return this->m_iValue;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]

; 52   : 	}

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetValue@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetValue
_TEXT	ENDS
PUBLIC	??_C@_0DA@JPPOIAAH@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	?GetSuccessValue@CKanturuBattleOfNightmare@@QAEHXZ ; CKanturuBattleOfNightmare::GetSuccessValue
PUBLIC	??_C@_0DC@DDMGNJJO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
EXTRN	?SendMsgKanturuBattleUser@CKanturuUtil@@QAAXPADZZ:PROC ; CKanturuUtil::SendMsgKanturuBattleUser
EXTRN	?Get@CMsg@@QAEPADH@Z:PROC			; CMsg::Get
EXTRN	?lMsg@@3VCMsg@@A:BYTE				; lMsg
EXTRN	?NotifyKanturuSuccessValue@CKanturuUtil@@QAEXH@Z:PROC ; CKanturuUtil::NotifyKanturuSuccessValue
;	COMDAT ??_C@_0DA@JPPOIAAH@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturubattleofnightmare.cpp
CONST	SEGMENT
??_C@_0DA@JPPOIAAH@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] Fail!! TimeOut', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@DDMGNJJO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0DC@DDMGNJJO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] State(%d) -> END', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_END@CKanturuBattleOfNightmare@@QAEXXZ PROC	; CKanturuBattleOfNightmare::SetState_END
; _this$ = ecx

; 344  : {

  00c50	55		 push	 ebp
  00c51	8b ec		 mov	 ebp, esp
  00c53	83 ec 44	 sub	 esp, 68			; 00000044H
  00c56	53		 push	 ebx
  00c57	56		 push	 esi
  00c58	57		 push	 edi
  00c59	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 345  : 	LogAddC(5, "[ KANTURU ][ BattleOfNightmare ] State(%d) -> END",
; 346  : 		this->m_iBattleOfNightmareState);

  00c5c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00c5f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00c62	51		 push	 ecx
  00c63	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@DDMGNJJO@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  00c68	6a 05		 push	 5
  00c6a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00c70	83 c4 0c	 add	 esp, 12			; 0000000cH

; 347  : 
; 348  : 	this->SetBattleOfNightmareState(KANTURU_NIGHTMARE_END);

  00c73	6a 04		 push	 4
  00c75	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c78	e8 00 00 00 00	 call	 ?SetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetBattleOfNightmareState

; 349  : 	KANTURU_UTIL.NotifyKanturuSuccessValue(this->GetSuccessValue());

  00c7d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c80	e8 00 00 00 00	 call	 ?GetSuccessValue@CKanturuBattleOfNightmare@@QAEHXZ ; CKanturuBattleOfNightmare::GetSuccessValue
  00c85	50		 push	 eax
  00c86	b9 00 00 00 00	 mov	 ecx, OFFSET _KANTURU_UTIL
  00c8b	e8 00 00 00 00	 call	 ?NotifyKanturuSuccessValue@CKanturuUtil@@QAEXH@Z ; CKanturuUtil::NotifyKanturuSuccessValue

; 350  : 
; 351  : 	if ( this->GetSuccessValue() == FALSE )

  00c90	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c93	e8 00 00 00 00	 call	 ?GetSuccessValue@CKanturuBattleOfNightmare@@QAEHXZ ; CKanturuBattleOfNightmare::GetSuccessValue
  00c98	85 c0		 test	 eax, eax
  00c9a	75 2b		 jne	 SHORT $LN2@SetState_E

; 352  : 	{
; 353  : 		KANTURU_UTIL.SendMsgKanturuBattleUser(lMsg.Get(MSGGET(13, 36)));

  00c9c	68 24 0d 00 00	 push	 3364			; 00000d24H
  00ca1	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00ca6	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00cab	50		 push	 eax
  00cac	68 00 00 00 00	 push	 OFFSET _KANTURU_UTIL
  00cb1	e8 00 00 00 00	 call	 ?SendMsgKanturuBattleUser@CKanturuUtil@@QAAXPADZZ ; CKanturuUtil::SendMsgKanturuBattleUser
  00cb6	83 c4 08	 add	 esp, 8

; 354  : 		LogAddTD("[ KANTURU ][ BattleOfNightmare ] Fail!! TimeOut");

  00cb9	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@JPPOIAAH@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  00cbe	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00cc4	83 c4 04	 add	 esp, 4
$LN2@SetState_E:

; 355  : 	}
; 356  : }

  00cc7	5f		 pop	 edi
  00cc8	5e		 pop	 esi
  00cc9	5b		 pop	 ebx
  00cca	8b e5		 mov	 esp, ebp
  00ccc	5d		 pop	 ebp
  00ccd	c3		 ret	 0
?SetState_END@CKanturuBattleOfNightmare@@QAEXXZ ENDP	; CKanturuBattleOfNightmare::SetState_END
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturubattleofnightmare.h
_TEXT	ENDS
;	COMDAT ?GetSuccessValue@CKanturuBattleOfNightmare@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSuccessValue@CKanturuBattleOfNightmare@@QAEHXZ PROC	; CKanturuBattleOfNightmare::GetSuccessValue, COMDAT
; _this$ = ecx

; 52   : 	BOOL GetSuccessValue(){return this->m_bIsSucccess;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetSuccessValue@CKanturuBattleOfNightmare@@QAEHXZ ENDP	; CKanturuBattleOfNightmare::GetSuccessValue
_TEXT	ENDS
PUBLIC	??_C@_0DH@JFMDANOP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
EXTRN	?ResetAllData@CKanturuBattleUserMng@@QAEXXZ:PROC ; CKanturuBattleUserMng::ResetAllData
;	COMDAT ??_C@_0DH@JFMDANOP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturubattleofnightmare.cpp
CONST	SEGMENT
??_C@_0DH@JFMDANOP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] State(%d) -> ENDCYCLE', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetState_ENDCYCLE@CKanturuBattleOfNightmare@@QAEXXZ PROC ; CKanturuBattleOfNightmare::SetState_ENDCYCLE
; _this$ = ecx

; 360  : {

  00cd0	55		 push	 ebp
  00cd1	8b ec		 mov	 ebp, esp
  00cd3	83 ec 44	 sub	 esp, 68			; 00000044H
  00cd6	53		 push	 ebx
  00cd7	56		 push	 esi
  00cd8	57		 push	 edi
  00cd9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 361  : 	LogAddC(5, "[ KANTURU ][ BattleOfNightmare ] State(%d) -> ENDCYCLE",
; 362  : 		this->m_iBattleOfNightmareState);

  00cdc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00cdf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00ce2	51		 push	 ecx
  00ce3	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@JFMDANOP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  00ce8	6a 05		 push	 5
  00cea	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00cf0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 363  : 
; 364  : 	LogAddTD("[ KANTURU ][ BattleOfNightmare ] State(%d) -> ENDCYCLE",
; 365  : 		this->m_iBattleOfNightmareState);

  00cf3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00cf6	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00cf9	51		 push	 ecx
  00cfa	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@JFMDANOP@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  00cff	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00d05	83 c4 08	 add	 esp, 8

; 366  : 
; 367  : 	this->SetBattleOfNightmareState(KANTURU_NIGHTMARE_ENDCYCLE);

  00d08	6a 05		 push	 5
  00d0a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d0d	e8 00 00 00 00	 call	 ?SetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetBattleOfNightmareState

; 368  : 
; 369  : 	if ( this->GetSuccessValue() == TRUE )

  00d12	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d15	e8 00 00 00 00	 call	 ?GetSuccessValue@CKanturuBattleOfNightmare@@QAEHXZ ; CKanturuBattleOfNightmare::GetSuccessValue
  00d1a	83 f8 01	 cmp	 eax, 1
  00d1d	75 1f		 jne	 SHORT $LN2@SetState_E@2

; 370  : 	{
; 371  : 		KANTURU_UTIL.SendMsgKanturuBattleUser(lMsg.Get(MSGGET(13, 35)));

  00d1f	68 23 0d 00 00	 push	 3363			; 00000d23H
  00d24	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00d29	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00d2e	50		 push	 eax
  00d2f	68 00 00 00 00	 push	 OFFSET _KANTURU_UTIL
  00d34	e8 00 00 00 00	 call	 ?SendMsgKanturuBattleUser@CKanturuUtil@@QAAXPADZZ ; CKanturuUtil::SendMsgKanturuBattleUser
  00d39	83 c4 08	 add	 esp, 8

; 372  : 	}
; 373  : 	else

  00d3c	eb 19		 jmp	 SHORT $LN3@SetState_E@2
$LN2@SetState_E@2:

; 374  : 	{
; 375  : 		g_KanturuBattleUserMng.MoveAllUser(137);

  00d3e	68 89 00 00 00	 push	 137			; 00000089H
  00d43	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  00d48	e8 00 00 00 00	 call	 ?MoveAllUser@CKanturuBattleUserMng@@QAEHH@Z ; CKanturuBattleUserMng::MoveAllUser

; 376  : 		g_KanturuBattleUserMng.ResetAllData();

  00d4d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  00d52	e8 00 00 00 00	 call	 ?ResetAllData@CKanturuBattleUserMng@@QAEXXZ ; CKanturuBattleUserMng::ResetAllData
$LN3@SetState_E@2:

; 377  : 	}
; 378  : }

  00d57	5f		 pop	 edi
  00d58	5e		 pop	 esi
  00d59	5b		 pop	 ebx
  00d5a	8b e5		 mov	 esp, ebp
  00d5c	5d		 pop	 ebp
  00d5d	c3		 ret	 0
?SetState_ENDCYCLE@CKanturuBattleOfNightmare@@QAEXXZ ENDP ; CKanturuBattleOfNightmare::SetState_ENDCYCLE
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?ProcState_NONE@CKanturuBattleOfNightmare@@QAEXXZ PROC	; CKanturuBattleOfNightmare::ProcState_NONE
; _this$ = ecx

; 383  : {

  00d60	55		 push	 ebp
  00d61	8b ec		 mov	 ebp, esp
  00d63	83 ec 44	 sub	 esp, 68			; 00000044H
  00d66	53		 push	 ebx
  00d67	56		 push	 esi
  00d68	57		 push	 edi
  00d69	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 384  : 	return;
; 385  : }

  00d6c	5f		 pop	 edi
  00d6d	5e		 pop	 esi
  00d6e	5b		 pop	 ebx
  00d6f	8b e5		 mov	 esp, ebp
  00d71	5d		 pop	 ebp
  00d72	c3		 ret	 0
?ProcState_NONE@CKanturuBattleOfNightmare@@QAEXXZ ENDP	; CKanturuBattleOfNightmare::ProcState_NONE
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?ProcState_IDLE@CKanturuBattleOfNightmare@@QAEXXZ PROC	; CKanturuBattleOfNightmare::ProcState_IDLE
; _this$ = ecx

; 389  : {

  00d80	55		 push	 ebp
  00d81	8b ec		 mov	 ebp, esp
  00d83	83 ec 44	 sub	 esp, 68			; 00000044H
  00d86	53		 push	 ebx
  00d87	56		 push	 esi
  00d88	57		 push	 edi
  00d89	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 390  : 	return;
; 391  : }

  00d8c	5f		 pop	 edi
  00d8d	5e		 pop	 esi
  00d8e	5b		 pop	 ebx
  00d8f	8b e5		 mov	 esp, ebp
  00d91	5d		 pop	 ebp
  00d92	c3		 ret	 0
?ProcState_IDLE@CKanturuBattleOfNightmare@@QAEXXZ ENDP	; CKanturuBattleOfNightmare::ProcState_IDLE
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
?ProcState_NOTIFY@CKanturuBattleOfNightmare@@QAEXXZ PROC ; CKanturuBattleOfNightmare::ProcState_NOTIFY
; _this$ = ecx

; 395  : {

  00da0	55		 push	 ebp
  00da1	8b ec		 mov	 ebp, esp
  00da3	83 ec 44	 sub	 esp, 68			; 00000044H
  00da6	53		 push	 ebx
  00da7	56		 push	 esi
  00da8	57		 push	 edi
  00da9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 396  : 	return;
; 397  : }

  00dac	5f		 pop	 edi
  00dad	5e		 pop	 esi
  00dae	5b		 pop	 ebx
  00daf	8b e5		 mov	 esp, ebp
  00db1	5d		 pop	 ebp
  00db2	c3		 ret	 0
?ProcState_NOTIFY@CKanturuBattleOfNightmare@@QAEXXZ ENDP ; CKanturuBattleOfNightmare::ProcState_NOTIFY
_TEXT	ENDS
PUBLIC	?GetElapsedTime@CKanturuStateInfo@@QAEHXZ	; CKanturuStateInfo::GetElapsedTime
PUBLIC	??_C@_0DJ@EELICGAG@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
PUBLIC	?GetAliveMonsterCount@CKanturuMonsterMng@@QAEHXZ ; CKanturuMonsterMng::GetAliveMonsterCount
EXTRN	?LogBattleWinnerUserInfo@CKanturuBattleUserMng@@QAEXEH@Z:PROC ; CKanturuBattleUserMng::LogBattleWinnerUserInfo
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?NotifyKanturuUserMonsterCount@CKanturuUtil@@QAEXHH@Z:PROC ; CKanturuUtil::NotifyKanturuUserMonsterCount
EXTRN	?GetUserCount@CKanturuBattleUserMng@@QAEHXZ:PROC ; CKanturuBattleUserMng::GetUserCount
;	COMDAT ??_C@_0DJ@EELICGAG@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0DJ@EELICGAG@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] Success!! Nightmare Die', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_iIndex$ = -8						; size = 4
_this$ = -4						; size = 4
?ProcState_START@CKanturuBattleOfNightmare@@QAEXXZ PROC	; CKanturuBattleOfNightmare::ProcState_START
; _this$ = ecx

; 401  : {

  00dc0	55		 push	 ebp
  00dc1	8b ec		 mov	 ebp, esp
  00dc3	83 ec 48	 sub	 esp, 72			; 00000048H
  00dc6	53		 push	 ebx
  00dc7	56		 push	 esi
  00dc8	57		 push	 edi
  00dc9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 402  : 	KANTURU_UTIL.NotifyKanturuUserMonsterCount(g_KanturuMonsterMng.GetAliveMonsterCount(),
; 403  : 		g_KanturuBattleUserMng.GetUserCount());

  00dcc	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  00dd1	e8 00 00 00 00	 call	 ?GetUserCount@CKanturuBattleUserMng@@QAEHXZ ; CKanturuBattleUserMng::GetUserCount
  00dd6	50		 push	 eax
  00dd7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuMonsterMng@@3VCKanturuMonsterMng@@A ; g_KanturuMonsterMng
  00ddc	e8 00 00 00 00	 call	 ?GetAliveMonsterCount@CKanturuMonsterMng@@QAEHXZ ; CKanturuMonsterMng::GetAliveMonsterCount
  00de1	50		 push	 eax
  00de2	b9 00 00 00 00	 mov	 ecx, OFFSET _KANTURU_UTIL
  00de7	e8 00 00 00 00	 call	 ?NotifyKanturuUserMonsterCount@CKanturuUtil@@QAEXHH@Z ; CKanturuUtil::NotifyKanturuUserMonsterCount

; 404  : 
; 405  : 	int iIndex = this->m_iNightmareObjIndex;

  00dec	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00def	8b 88 90 00 00
	00		 mov	 ecx, DWORD PTR [eax+144]
  00df5	89 4d f8	 mov	 DWORD PTR _iIndex$[ebp], ecx

; 406  : 
; 407  : 	if ( gObj[iIndex].Live == FALSE )

  00df8	8b 45 f8	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00dfb	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00e01	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00e07	0f b6 54 01 6a	 movzx	 edx, BYTE PTR [ecx+eax+106]
  00e0c	85 d2		 test	 edx, edx
  00e0e	75 49		 jne	 SHORT $LN2@ProcState_

; 408  : 	{
; 409  : 		this->SetSuccessValue(TRUE);

  00e10	6a 01		 push	 1
  00e12	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e15	e8 00 00 00 00	 call	 ?SetSuccessValue@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetSuccessValue

; 410  : 
; 411  : 		LogAddTD("[ KANTURU ][ BattleOfNightmare ] Success!! Nightmare Die");

  00e1a	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@EELICGAG@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  00e1f	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00e25	83 c4 04	 add	 esp, 4

; 412  : 		g_KanturuBattleUserMng.LogBattleWinnerUserInfo(3, this->m_StateInfo[this->m_iBattleOfNightmareState].GetElapsedTime());

  00e28	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00e2b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00e2e	6b c9 14	 imul	 ecx, 20			; 00000014H
  00e31	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00e34	8d 4c 0a 10	 lea	 ecx, DWORD PTR [edx+ecx+16]
  00e38	e8 00 00 00 00	 call	 ?GetElapsedTime@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetElapsedTime
  00e3d	50		 push	 eax
  00e3e	6a 03		 push	 3
  00e40	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  00e45	e8 00 00 00 00	 call	 ?LogBattleWinnerUserInfo@CKanturuBattleUserMng@@QAEXEH@Z ; CKanturuBattleUserMng::LogBattleWinnerUserInfo

; 413  : 
; 414  : 		this->SetNextState(this->m_iBattleOfNightmareState);

  00e4a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00e4d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00e50	51		 push	 ecx
  00e51	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e54	e8 00 00 00 00	 call	 ?SetNextState@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetNextState
$LN2@ProcState_:

; 415  : 	}
; 416  : }

  00e59	5f		 pop	 edi
  00e5a	5e		 pop	 esi
  00e5b	5b		 pop	 ebx
  00e5c	8b e5		 mov	 esp, ebp
  00e5e	5d		 pop	 ebp
  00e5f	c3		 ret	 0
?ProcState_START@CKanturuBattleOfNightmare@@QAEXXZ ENDP	; CKanturuBattleOfNightmare::ProcState_START
_TEXT	ENDS
PUBLIC	?GetAppliedTime@CKanturuStateInfo@@QAEHXZ	; CKanturuStateInfo::GetAppliedTime
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturustateinfo.h
;	COMDAT ?GetElapsedTime@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
_iElapsedTime$ = -8					; size = 4
_this$ = -4						; size = 4
?GetElapsedTime@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetElapsedTime, COMDAT
; _this$ = ecx

; 64   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 65   : 		int iElapsedTime = GetTickCount() - this->GetAppliedTime();

  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00012	8b f0		 mov	 esi, eax
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?GetAppliedTime@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetAppliedTime
  0001c	2b f0		 sub	 esi, eax
  0001e	89 75 f8	 mov	 DWORD PTR _iElapsedTime$[ebp], esi

; 66   : 		return iElapsedTime;

  00021	8b 45 f8	 mov	 eax, DWORD PTR _iElapsedTime$[ebp]

; 67   : 	}

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?GetElapsedTime@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetElapsedTime
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?GetAppliedTime@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAppliedTime@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetAppliedTime, COMDAT
; _this$ = ecx

; 59   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 60   : 		return this->m_dwAppliedTickCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 61   : 	}

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetAppliedTime@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetAppliedTime
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturumonstermng.h
_TEXT	ENDS
;	COMDAT ?GetAliveMonsterCount@CKanturuMonsterMng@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAliveMonsterCount@CKanturuMonsterMng@@QAEHXZ PROC	; CKanturuMonsterMng::GetAliveMonsterCount, COMDAT
; _this$ = ecx

; 48   : 	int GetAliveMonsterCount(){return this->m_iAliveMonsterCount;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 6c 14 00
	00		 mov	 eax, DWORD PTR [eax+5228]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetAliveMonsterCount@CKanturuMonsterMng@@QAEHXZ ENDP	; CKanturuMonsterMng::GetAliveMonsterCount
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturubattleofnightmare.cpp
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ProcState_END@CKanturuBattleOfNightmare@@QAEXXZ PROC	; CKanturuBattleOfNightmare::ProcState_END
; _this$ = ecx

; 421  : {

  00e60	55		 push	 ebp
  00e61	8b ec		 mov	 ebp, esp
  00e63	83 ec 44	 sub	 esp, 68			; 00000044H
  00e66	53		 push	 ebx
  00e67	56		 push	 esi
  00e68	57		 push	 edi
  00e69	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 422  : 	return;
; 423  : }

  00e6c	5f		 pop	 edi
  00e6d	5e		 pop	 esi
  00e6e	5b		 pop	 ebx
  00e6f	8b e5		 mov	 esp, ebp
  00e71	5d		 pop	 ebp
  00e72	c3		 ret	 0
?ProcState_END@CKanturuBattleOfNightmare@@QAEXXZ ENDP	; CKanturuBattleOfNightmare::ProcState_END
_TEXT	ENDS
PUBLIC	??_C@_0EF@MCKIMGEN@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
;	COMDAT ??_C@_0EF@MCKIMGEN@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0EF@MCKIMGEN@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] DelGroupInstance ProcState_EN'
	DB	'DCYCLE', 00H				; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ProcState_ENDCYCLE@CKanturuBattleOfNightmare@@QAEXXZ PROC ; CKanturuBattleOfNightmare::ProcState_ENDCYCLE
; _this$ = ecx

; 428  : {

  00e80	55		 push	 ebp
  00e81	8b ec		 mov	 ebp, esp
  00e83	83 ec 44	 sub	 esp, 68			; 00000044H
  00e86	53		 push	 ebx
  00e87	56		 push	 esi
  00e88	57		 push	 edi
  00e89	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 429  : 	TMonsterAIGroup::DelGroupInstance(this->m_iNightmareAIGroupNumber);

  00e8c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00e8f	8b 88 8c 00 00
	00		 mov	 ecx, DWORD PTR [eax+140]
  00e95	51		 push	 ecx
  00e96	e8 00 00 00 00	 call	 ?DelGroupInstance@TMonsterAIGroup@@SAHH@Z ; TMonsterAIGroup::DelGroupInstance
  00e9b	83 c4 04	 add	 esp, 4

; 430  : 
; 431  : 	LogAddTD("[ KANTURU ][ BattleOfNightmare ] DelGroupInstance ProcState_ENDCYCLE");

  00e9e	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@MCKIMGEN@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  00ea3	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00ea9	83 c4 04	 add	 esp, 4

; 432  : }

  00eac	5f		 pop	 edi
  00ead	5e		 pop	 esi
  00eae	5b		 pop	 ebx
  00eaf	8b e5		 mov	 esp, ebp
  00eb1	5d		 pop	 ebp
  00eb2	c3		 ret	 0
?ProcState_ENDCYCLE@CKanturuBattleOfNightmare@@QAEXXZ ENDP ; CKanturuBattleOfNightmare::ProcState_ENDCYCLE
_TEXT	ENDS
PUBLIC	?IsTimeOut@CKanturuStateInfo@@QAEHXZ		; CKanturuStateInfo::IsTimeOut
PUBLIC	?GetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEHXZ ; CKanturuBattleOfNightmare::GetBattleOfNightmareState
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_iCurrentState$ = -8					; size = 4
_this$ = -4						; size = 4
?CheckStateTime@CKanturuBattleOfNightmare@@QAEXXZ PROC	; CKanturuBattleOfNightmare::CheckStateTime
; _this$ = ecx

; 436  : {

  00ec0	55		 push	 ebp
  00ec1	8b ec		 mov	 ebp, esp
  00ec3	83 ec 48	 sub	 esp, 72			; 00000048H
  00ec6	53		 push	 ebx
  00ec7	56		 push	 esi
  00ec8	57		 push	 edi
  00ec9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 437  : 	int iCurrentState = this->GetBattleOfNightmareState();

  00ecc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00ecf	e8 00 00 00 00	 call	 ?GetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEHXZ ; CKanturuBattleOfNightmare::GetBattleOfNightmareState
  00ed4	89 45 f8	 mov	 DWORD PTR _iCurrentState$[ebp], eax

; 438  : 
; 439  : 	if ( iCurrentState )

  00ed7	83 7d f8 00	 cmp	 DWORD PTR _iCurrentState$[ebp], 0
  00edb	74 3a		 je	 SHORT $LN4@CheckState

; 440  : 	{
; 441  : 		if ( this->m_StateInfo[iCurrentState].GetCondition() == 1 )

  00edd	8b 45 f8	 mov	 eax, DWORD PTR _iCurrentState$[ebp]
  00ee0	6b c0 14	 imul	 eax, 20			; 00000014H
  00ee3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00ee6	8d 4c 01 10	 lea	 ecx, DWORD PTR [ecx+eax+16]
  00eea	e8 00 00 00 00	 call	 ?GetCondition@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetCondition
  00eef	83 f8 01	 cmp	 eax, 1
  00ef2	75 23		 jne	 SHORT $LN4@CheckState

; 442  : 		{
; 443  : 			if ( this->m_StateInfo[iCurrentState].IsTimeOut() == TRUE )

  00ef4	8b 45 f8	 mov	 eax, DWORD PTR _iCurrentState$[ebp]
  00ef7	6b c0 14	 imul	 eax, 20			; 00000014H
  00efa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00efd	8d 4c 01 10	 lea	 ecx, DWORD PTR [ecx+eax+16]
  00f01	e8 00 00 00 00	 call	 ?IsTimeOut@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::IsTimeOut
  00f06	83 f8 01	 cmp	 eax, 1
  00f09	75 0c		 jne	 SHORT $LN4@CheckState

; 444  : 			{
; 445  : 				this->SetNextState(iCurrentState);

  00f0b	8b 45 f8	 mov	 eax, DWORD PTR _iCurrentState$[ebp]
  00f0e	50		 push	 eax
  00f0f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f12	e8 00 00 00 00	 call	 ?SetNextState@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetNextState
$LN4@CheckState:

; 446  : 			}
; 447  : 		}
; 448  : 	}
; 449  : }

  00f17	5f		 pop	 edi
  00f18	5e		 pop	 esi
  00f19	5b		 pop	 ebx
  00f1a	8b e5		 mov	 esp, ebp
  00f1c	5d		 pop	 ebp
  00f1d	c3		 ret	 0
?CheckStateTime@CKanturuBattleOfNightmare@@QAEXXZ ENDP	; CKanturuBattleOfNightmare::CheckStateTime
_TEXT	ENDS
PUBLIC	?GetRemainTime@CKanturuStateInfo@@QAEHXZ	; CKanturuStateInfo::GetRemainTime
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturustateinfo.h
;	COMDAT ?IsTimeOut@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsTimeOut@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::IsTimeOut, COMDAT
; _this$ = ecx

; 89   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 90   : 		if ( this->GetRemainTime() <= 0 )

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetRemainTime@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetRemainTime
  00014	85 c0		 test	 eax, eax
  00016	7f 07		 jg	 SHORT $LN1@IsTimeOut

; 91   : 		{
; 92   : 			return TRUE;

  00018	b8 01 00 00 00	 mov	 eax, 1
  0001d	eb 02		 jmp	 SHORT $LN2@IsTimeOut
$LN1@IsTimeOut:

; 93   : 		}
; 94   : 
; 95   : 		return FALSE;

  0001f	33 c0		 xor	 eax, eax
$LN2@IsTimeOut:

; 96   : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?IsTimeOut@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::IsTimeOut
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?GetRemainTime@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
_iRemainTime$ = -8					; size = 4
_this$ = -4						; size = 4
?GetRemainTime@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetRemainTime, COMDAT
; _this$ = ecx

; 70   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 71   : 		int iRemainTime = 0;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iRemainTime$[ebp], 0

; 72   : 
; 73   : 		if ( this->GetCondition() == 1 )

  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	e8 00 00 00 00	 call	 ?GetCondition@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetCondition
  0001b	83 f8 01	 cmp	 eax, 1
  0001e	75 2b		 jne	 SHORT $LN2@GetRemainT

; 74   : 		{
; 75   : 			iRemainTime = this->m_iValue - this->GetElapsedTime();

  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ?GetElapsedTime@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetElapsedTime
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0002e	2b d0		 sub	 edx, eax
  00030	89 55 f8	 mov	 DWORD PTR _iRemainTime$[ebp], edx

; 76   : 
; 77   : 			if ( iRemainTime <= 0 )

  00033	83 7d f8 00	 cmp	 DWORD PTR _iRemainTime$[ebp], 0
  00037	7f 04		 jg	 SHORT $LN1@GetRemainT

; 78   : 			{
; 79   : 				return 0;

  00039	33 c0		 xor	 eax, eax
  0003b	eb 11		 jmp	 SHORT $LN3@GetRemainT
$LN1@GetRemainT:

; 80   : 			}
; 81   : 
; 82   : 			iRemainTime /= 1000;

  0003d	8b 45 f8	 mov	 eax, DWORD PTR _iRemainTime$[ebp]
  00040	99		 cdq
  00041	b9 e8 03 00 00	 mov	 ecx, 1000		; 000003e8H
  00046	f7 f9		 idiv	 ecx
  00048	89 45 f8	 mov	 DWORD PTR _iRemainTime$[ebp], eax
$LN2@GetRemainT:

; 83   : 		}
; 84   : 
; 85   : 		return iRemainTime;

  0004b	8b 45 f8	 mov	 eax, DWORD PTR _iRemainTime$[ebp]
$LN3@GetRemainT:

; 86   : 	}

  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	5b		 pop	 ebx
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
?GetRemainTime@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetRemainTime
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturubattleofnightmare.h
_TEXT	ENDS
;	COMDAT ?GetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEHXZ PROC ; CKanturuBattleOfNightmare::GetBattleOfNightmareState, COMDAT
; _this$ = ecx

; 50   : 	int GetBattleOfNightmareState(){return this->m_iBattleOfNightmareState;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEHXZ ENDP ; CKanturuBattleOfNightmare::GetBattleOfNightmareState
_TEXT	ENDS
PUBLIC	?GetRemainTime@CKanturuBattleOfNightmare@@QAEHXZ ; CKanturuBattleOfNightmare::GetRemainTime
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\kanturubattleofnightmare.cpp
_TEXT	SEGMENT
_iCurrentState$ = -8					; size = 4
_this$ = -4						; size = 4
?GetRemainTime@CKanturuBattleOfNightmare@@QAEHXZ PROC	; CKanturuBattleOfNightmare::GetRemainTime
; _this$ = ecx

; 454  : {

  00f20	55		 push	 ebp
  00f21	8b ec		 mov	 ebp, esp
  00f23	83 ec 48	 sub	 esp, 72			; 00000048H
  00f26	53		 push	 ebx
  00f27	56		 push	 esi
  00f28	57		 push	 edi
  00f29	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 455  : 	int iCurrentState = this->GetBattleOfNightmareState();

  00f2c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f2f	e8 00 00 00 00	 call	 ?GetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEHXZ ; CKanturuBattleOfNightmare::GetBattleOfNightmareState
  00f34	89 45 f8	 mov	 DWORD PTR _iCurrentState$[ebp], eax

; 456  : 	return this->m_StateInfo[iCurrentState].GetRemainTime();

  00f37	8b 45 f8	 mov	 eax, DWORD PTR _iCurrentState$[ebp]
  00f3a	6b c0 14	 imul	 eax, 20			; 00000014H
  00f3d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f40	8d 4c 01 10	 lea	 ecx, DWORD PTR [ecx+eax+16]
  00f44	e8 00 00 00 00	 call	 ?GetRemainTime@CKanturuStateInfo@@QAEHXZ ; CKanturuStateInfo::GetRemainTime

; 457  : }

  00f49	5f		 pop	 edi
  00f4a	5e		 pop	 esi
  00f4b	5b		 pop	 ebx
  00f4c	8b e5		 mov	 esp, ebp
  00f4e	5d		 pop	 ebp
  00f4f	c3		 ret	 0
?GetRemainTime@CKanturuBattleOfNightmare@@QAEHXZ ENDP	; CKanturuBattleOfNightmare::GetRemainTime
_TEXT	ENDS
PUBLIC	??_C@_0DM@FKHGEAGJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ ; `string'
EXTRN	?IsEmpty@CKanturuBattleUserMng@@QAEHXZ:PROC	; CKanturuBattleUserMng::IsEmpty
;	COMDAT ??_C@_0DM@FKHGEAGJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
CONST	SEGMENT
??_C@_0DM@FKHGEAGJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@ DB '['
	DB	' KANTURU ][ BattleOfNightmare ] Fail!! All Battle User Die', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CheckNightmareBattleUser@CKanturuBattleOfNightmare@@QAEXXZ PROC ; CKanturuBattleOfNightmare::CheckNightmareBattleUser
; _this$ = ecx

; 462  : {

  00f50	55		 push	 ebp
  00f51	8b ec		 mov	 ebp, esp
  00f53	83 ec 44	 sub	 esp, 68			; 00000044H
  00f56	53		 push	 ebx
  00f57	56		 push	 esi
  00f58	57		 push	 edi
  00f59	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 463  : 	if ( this->GetBattleOfNightmareState() == KANTURU_NIGHTMARE_NOTIFY ||
; 464  : 		 this->GetBattleOfNightmareState() == KANTURU_NIGHTMARE_START )

  00f5c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f5f	e8 00 00 00 00	 call	 ?GetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEHXZ ; CKanturuBattleOfNightmare::GetBattleOfNightmareState
  00f64	83 f8 02	 cmp	 eax, 2
  00f67	74 0d		 je	 SHORT $LN2@CheckNight
  00f69	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f6c	e8 00 00 00 00	 call	 ?GetBattleOfNightmareState@CKanturuBattleOfNightmare@@QAEHXZ ; CKanturuBattleOfNightmare::GetBattleOfNightmareState
  00f71	83 f8 03	 cmp	 eax, 3
  00f74	75 3b		 jne	 SHORT $LN4@CheckNight
$LN2@CheckNight:

; 465  : 	{
; 466  : 		if ( g_KanturuBattleUserMng.IsEmpty() == TRUE )

  00f76	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  00f7b	e8 00 00 00 00	 call	 ?IsEmpty@CKanturuBattleUserMng@@QAEHXZ ; CKanturuBattleUserMng::IsEmpty
  00f80	83 f8 01	 cmp	 eax, 1
  00f83	75 2c		 jne	 SHORT $LN4@CheckNight

; 467  : 		{
; 468  : 			g_KanturuBattleUserMng.ResetAllData();

  00f85	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  00f8a	e8 00 00 00 00	 call	 ?ResetAllData@CKanturuBattleUserMng@@QAEXXZ ; CKanturuBattleUserMng::ResetAllData

; 469  : 			this->SetSuccessValue(FALSE);

  00f8f	6a 00		 push	 0
  00f91	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f94	e8 00 00 00 00	 call	 ?SetSuccessValue@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetSuccessValue

; 470  : 
; 471  : 			LogAddTD("[ KANTURU ][ BattleOfNightmare ] Fail!! All Battle User Die");

  00f99	68 00 00 00 00	 push	 OFFSET ??_C@_0DM@FKHGEAGJ@?$FL?5KANTURU?5?$FN?$FL?5BattleOfNightmare?5?$FN@
  00f9e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00fa4	83 c4 04	 add	 esp, 4

; 472  : 
; 473  : 			this->SetState(KANTURU_NIGHTMARE_END);

  00fa7	6a 04		 push	 4
  00fa9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00fac	e8 00 00 00 00	 call	 ?SetState@CKanturuBattleOfNightmare@@QAEXH@Z ; CKanturuBattleOfNightmare::SetState
$LN4@CheckNight:

; 474  : 		}
; 475  : 	}
; 476  : }

  00fb1	5f		 pop	 edi
  00fb2	5e		 pop	 esi
  00fb3	5b		 pop	 ebx
  00fb4	8b e5		 mov	 esp, ebp
  00fb6	5d		 pop	 ebp
  00fb7	c3		 ret	 0
?CheckNightmareBattleUser@CKanturuBattleOfNightmare@@QAEXXZ ENDP ; CKanturuBattleOfNightmare::CheckNightmareBattleUser
_TEXT	ENDS
EXTRN	_atexit:PROC
EXTRN	??0CKanturuUtil@@QAE@XZ:PROC			; CKanturuUtil::CKanturuUtil
; Function compile flags: /Odtp /ZI
;	COMDAT ??__EKANTURU_UTIL@@YAXXZ
text$yc	SEGMENT
??__EKANTURU_UTIL@@YAXXZ PROC				; `dynamic initializer for 'KANTURU_UTIL'', COMDAT

; 21   : static CKanturuUtil KANTURU_UTIL;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET _KANTURU_UTIL
  0000e	e8 00 00 00 00	 call	 ??0CKanturuUtil@@QAE@XZ	; CKanturuUtil::CKanturuUtil
  00013	68 00 00 00 00	 push	 OFFSET ??__FKANTURU_UTIL@@YAXXZ ; `dynamic atexit destructor for 'KANTURU_UTIL''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__EKANTURU_UTIL@@YAXXZ ENDP				; `dynamic initializer for 'KANTURU_UTIL''
text$yc	ENDS
EXTRN	??1CKanturuUtil@@UAE@XZ:PROC			; CKanturuUtil::~CKanturuUtil
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FKANTURU_UTIL@@YAXXZ
text$yd	SEGMENT
??__FKANTURU_UTIL@@YAXXZ PROC				; `dynamic atexit destructor for 'KANTURU_UTIL'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET _KANTURU_UTIL
  0000e	e8 00 00 00 00	 call	 ??1CKanturuUtil@@UAE@XZ	; CKanturuUtil::~CKanturuUtil
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__FKANTURU_UTIL@@YAXXZ ENDP				; `dynamic atexit destructor for 'KANTURU_UTIL''
text$yd	ENDS
_BSS	SEGMENT
_KANTURU_UTIL DD 01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_KANTURU_UTIL$initializer$ DD FLAT:??__EKANTURU_UTIL@@YAXXZ
CRT$XCU	ENDS
END
