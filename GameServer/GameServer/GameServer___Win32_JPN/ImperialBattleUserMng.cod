; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\ImperialBattleUserMng.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?ResetAllData@CImperialBattleUserMng@@QAEXXZ	; CImperialBattleUserMng::ResetAllData
PUBLIC	??0CImperialBattleUser@@QAE@XZ			; CImperialBattleUser::CImperialBattleUser
PUBLIC	??1CImperialBattleUser@@UAE@XZ			; CImperialBattleUser::~CImperialBattleUser
PUBLIC	??_7CImperialBattleUserMng@@6B@			; CImperialBattleUserMng::`vftable'
PUBLIC	??0CImperialBattleUserMng@@QAE@XZ		; CImperialBattleUserMng::CImperialBattleUserMng
PUBLIC	??_R4CImperialBattleUserMng@@6B@		; CImperialBattleUserMng::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCImperialBattleUserMng@@@8		; CImperialBattleUserMng `RTTI Type Descriptor'
PUBLIC	??_R3CImperialBattleUserMng@@8			; CImperialBattleUserMng::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CImperialBattleUserMng@@8			; CImperialBattleUserMng::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CImperialBattleUserMng@@8		; CImperialBattleUserMng::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECImperialBattleUserMng@@UAEPAXI@Z:PROC	; CImperialBattleUserMng::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CImperialBattleUserMng@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\imperialbattleusermng.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CImperialBattleUserMng@@8 DD FLAT:??_R0?AVCImperialBattleUserMng@@@8 ; CImperialBattleUserMng::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CImperialBattleUserMng@@8
rdata$r	ENDS
;	COMDAT ??_R2CImperialBattleUserMng@@8
rdata$r	SEGMENT
??_R2CImperialBattleUserMng@@8 DD FLAT:??_R1A@?0A@EA@CImperialBattleUserMng@@8 ; CImperialBattleUserMng::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CImperialBattleUserMng@@8
rdata$r	SEGMENT
??_R3CImperialBattleUserMng@@8 DD 00H			; CImperialBattleUserMng::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CImperialBattleUserMng@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCImperialBattleUserMng@@@8
_DATA	SEGMENT
??_R0?AVCImperialBattleUserMng@@@8 DD FLAT:??_7type_info@@6B@ ; CImperialBattleUserMng `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCImperialBattleUserMng@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CImperialBattleUserMng@@6B@
rdata$r	SEGMENT
??_R4CImperialBattleUserMng@@6B@ DD 00H			; CImperialBattleUserMng::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCImperialBattleUserMng@@@8
	DD	FLAT:??_R3CImperialBattleUserMng@@8
rdata$r	ENDS
;	COMDAT ??_7CImperialBattleUserMng@@6B@
CONST	SEGMENT
??_7CImperialBattleUserMng@@6B@ DD FLAT:??_R4CImperialBattleUserMng@@6B@ ; CImperialBattleUserMng::`vftable'
	DD	FLAT:??_ECImperialBattleUserMng@@UAEPAXI@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??0CImperialBattleUserMng@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CImperialBattleUserMng@@QAE@XZ$0
__ehfuncinfo$??0CImperialBattleUserMng@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CImperialBattleUserMng@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CImperialBattleUserMng@@QAE@XZ PROC			; CImperialBattleUserMng::CImperialBattleUserMng
; _this$ = ecx

; 17   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CImperialBattleUserMng@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CImperialBattleUserMng@@6B@
  00034	68 00 00 00 00	 push	 OFFSET ??1CImperialBattleUser@@UAE@XZ ; CImperialBattleUser::~CImperialBattleUser
  00039	68 00 00 00 00	 push	 OFFSET ??0CImperialBattleUser@@QAE@XZ ; CImperialBattleUser::CImperialBattleUser
  0003e	6a 05		 push	 5
  00040	6a 0c		 push	 12			; 0000000cH
  00042	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00045	83 c0 04	 add	 eax, 4
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??_L@YGXPAXIHP6EX0@Z1@Z
  0004e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 18   : 	this->ResetAllData();

  00055	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?ResetAllData@CImperialBattleUserMng@@QAEXXZ ; CImperialBattleUserMng::ResetAllData

; 19   : }

  0005d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00064	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00071	59		 pop	 ecx
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	5b		 pop	 ebx
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CImperialBattleUserMng@@QAE@XZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ??1CImperialBattleUser@@UAE@XZ ; CImperialBattleUser::~CImperialBattleUser
  00005	6a 05		 push	 5
  00007	6a 0c		 push	 12			; 0000000cH
  00009	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 04	 add	 eax, 4
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  00015	c3		 ret	 0
__ehhandler$??0CImperialBattleUserMng@@QAE@XZ:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CImperialBattleUserMng@@QAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CImperialBattleUserMng@@QAE@XZ ENDP			; CImperialBattleUserMng::CImperialBattleUserMng
PUBLIC	?ResetData@CImperialBattleUser@@QAEXXZ		; CImperialBattleUser::ResetData
PUBLIC	??_7CImperialBattleUser@@6B@			; CImperialBattleUser::`vftable'
PUBLIC	??_R4CImperialBattleUser@@6B@			; CImperialBattleUser::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCImperialBattleUser@@@8			; CImperialBattleUser `RTTI Type Descriptor'
PUBLIC	??_R3CImperialBattleUser@@8			; CImperialBattleUser::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CImperialBattleUser@@8			; CImperialBattleUser::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CImperialBattleUser@@8		; CImperialBattleUser::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_ECImperialBattleUser@@UAEPAXI@Z:PROC		; CImperialBattleUser::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CImperialBattleUser@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\imperialbattleuser.h
rdata$r	SEGMENT
??_R1A@?0A@EA@CImperialBattleUser@@8 DD FLAT:??_R0?AVCImperialBattleUser@@@8 ; CImperialBattleUser::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CImperialBattleUser@@8
rdata$r	ENDS
;	COMDAT ??_R2CImperialBattleUser@@8
rdata$r	SEGMENT
??_R2CImperialBattleUser@@8 DD FLAT:??_R1A@?0A@EA@CImperialBattleUser@@8 ; CImperialBattleUser::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CImperialBattleUser@@8
rdata$r	SEGMENT
??_R3CImperialBattleUser@@8 DD 00H			; CImperialBattleUser::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CImperialBattleUser@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCImperialBattleUser@@@8
_DATA	SEGMENT
??_R0?AVCImperialBattleUser@@@8 DD FLAT:??_7type_info@@6B@ ; CImperialBattleUser `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCImperialBattleUser@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CImperialBattleUser@@6B@
rdata$r	SEGMENT
??_R4CImperialBattleUser@@6B@ DD 00H			; CImperialBattleUser::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCImperialBattleUser@@@8
	DD	FLAT:??_R3CImperialBattleUser@@8
rdata$r	ENDS
;	COMDAT ??_7CImperialBattleUser@@6B@
CONST	SEGMENT
??_7CImperialBattleUser@@6B@ DD FLAT:??_R4CImperialBattleUser@@6B@ ; CImperialBattleUser::`vftable'
	DD	FLAT:??_ECImperialBattleUser@@UAEPAXI@Z
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ??0CImperialBattleUser@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CImperialBattleUser@@QAE@XZ PROC			; CImperialBattleUser::CImperialBattleUser, COMDAT
; _this$ = ecx

; 8    : 	CImperialBattleUser()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CImperialBattleUser@@6B@

; 9    : 	{
; 10   : 		this->ResetData();

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?ResetData@CImperialBattleUser@@QAEXXZ ; CImperialBattleUser::ResetData

; 11   : 	}

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0CImperialBattleUser@@QAE@XZ ENDP			; CImperialBattleUser::CImperialBattleUser
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ??1CImperialBattleUser@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CImperialBattleUser@@UAE@XZ PROC			; CImperialBattleUser::~CImperialBattleUser, COMDAT
; _this$ = ecx

; 13   : 	virtual ~CImperialBattleUser(){return;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CImperialBattleUser@@6B@
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CImperialBattleUser@@UAE@XZ ENDP			; CImperialBattleUser::~CImperialBattleUser
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?ResetData@CImperialBattleUser@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ResetData@CImperialBattleUser@@QAEXXZ PROC		; CImperialBattleUser::ResetData, COMDAT
; _this$ = ecx

; 16   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 17   : 		this->m_iIndex = -1;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 40 04 ff ff
	ff ff		 mov	 DWORD PTR [eax+4], -1

; 18   : 		this->m_bIsUse = FALSE;

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 19   : 	}

  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?ResetData@CImperialBattleUser@@QAEXXZ ENDP		; CImperialBattleUser::ResetData
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCImperialBattleUser@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCImperialBattleUser@@UAEPAXI@Z PROC			; CImperialBattleUser::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CImperialBattleUser@@UAE@XZ ; CImperialBattleUser::~CImperialBattleUser
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCImperialBattleUser@@UAEPAXI@Z ENDP			; CImperialBattleUser::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CImperialBattleUserMng@@UAE@XZ		; CImperialBattleUserMng::~CImperialBattleUserMng
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCImperialBattleUserMng@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCImperialBattleUserMng@@UAEPAXI@Z PROC		; CImperialBattleUserMng::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CImperialBattleUserMng@@UAE@XZ ; CImperialBattleUserMng::~CImperialBattleUserMng
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar@2
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar@2:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCImperialBattleUserMng@@UAEPAXI@Z ENDP		; CImperialBattleUserMng::`scalar deleting destructor'
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\imperialbattleusermng.cpp
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CImperialBattleUserMng@@UAE@XZ PROC			; CImperialBattleUserMng::~CImperialBattleUserMng
; _this$ = ecx

; 22   : {

  00080	55		 push	 ebp
  00081	8b ec		 mov	 ebp, esp
  00083	83 ec 44	 sub	 esp, 68			; 00000044H
  00086	53		 push	 ebx
  00087	56		 push	 esi
  00088	57		 push	 edi
  00089	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0008c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CImperialBattleUserMng@@6B@

; 23   : 	return;
; 24   : }

  00095	68 00 00 00 00	 push	 OFFSET ??1CImperialBattleUser@@UAE@XZ ; CImperialBattleUser::~CImperialBattleUser
  0009a	6a 05		 push	 5
  0009c	6a 0c		 push	 12			; 0000000cH
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	83 c0 04	 add	 eax, 4
  000a4	50		 push	 eax
  000a5	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  000aa	5f		 pop	 edi
  000ab	5e		 pop	 esi
  000ac	5b		 pop	 ebx
  000ad	8b e5		 mov	 esp, ebp
  000af	5d		 pop	 ebp
  000b0	c3		 ret	 0
??1CImperialBattleUserMng@@UAE@XZ ENDP			; CImperialBattleUserMng::~CImperialBattleUserMng
_TEXT	ENDS
PUBLIC	?SetMaxUser@CImperialBattleUserMng@@QAEXH@Z	; CImperialBattleUserMng::SetMaxUser
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_iCount$220082 = -8					; size = 4
_this$ = -4						; size = 4
?ResetAllData@CImperialBattleUserMng@@QAEXXZ PROC	; CImperialBattleUserMng::ResetAllData
; _this$ = ecx

; 29   : {

  000c0	55		 push	 ebp
  000c1	8b ec		 mov	 ebp, esp
  000c3	83 ec 48	 sub	 esp, 72			; 00000048H
  000c6	53		 push	 ebx
  000c7	56		 push	 esi
  000c8	57		 push	 edi
  000c9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 30   : 	this->m_iBattleUserCount = 0;

  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	c7 40 40 00 00
	00 00		 mov	 DWORD PTR [eax+64], 0

; 31   : 	this->SetMaxUser(MAX_IMPERIAL_BATTLE_USER);

  000d6	6a 05		 push	 5
  000d8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	e8 00 00 00 00	 call	 ?SetMaxUser@CImperialBattleUserMng@@QAEXH@Z ; CImperialBattleUserMng::SetMaxUser

; 32   : 
; 33   : 	for ( int iCount=0;iCount<MAX_IMPERIAL_BATTLE_USER;iCount++)

  000e0	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iCount$220082[ebp], 0
  000e7	eb 09		 jmp	 SHORT $LN3@ResetAllDa
$LN2@ResetAllDa:
  000e9	8b 45 f8	 mov	 eax, DWORD PTR _iCount$220082[ebp]
  000ec	83 c0 01	 add	 eax, 1
  000ef	89 45 f8	 mov	 DWORD PTR _iCount$220082[ebp], eax
$LN3@ResetAllDa:
  000f2	83 7d f8 05	 cmp	 DWORD PTR _iCount$220082[ebp], 5
  000f6	7d 14		 jge	 SHORT $LN4@ResetAllDa

; 34   : 	{
; 35   : 		this->m_BattleUser[iCount].ResetData();

  000f8	8b 45 f8	 mov	 eax, DWORD PTR _iCount$220082[ebp]
  000fb	6b c0 0c	 imul	 eax, 12			; 0000000cH
  000fe	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00101	8d 4c 01 04	 lea	 ecx, DWORD PTR [ecx+eax+4]
  00105	e8 00 00 00 00	 call	 ?ResetData@CImperialBattleUser@@QAEXXZ ; CImperialBattleUser::ResetData

; 36   : 	}

  0010a	eb dd		 jmp	 SHORT $LN2@ResetAllDa
$LN4@ResetAllDa:

; 37   : }

  0010c	5f		 pop	 edi
  0010d	5e		 pop	 esi
  0010e	5b		 pop	 ebx
  0010f	8b e5		 mov	 esp, ebp
  00111	5d		 pop	 ebp
  00112	c3		 ret	 0
?ResetAllData@CImperialBattleUserMng@@QAEXXZ ENDP	; CImperialBattleUserMng::ResetAllData
_TEXT	ENDS
PUBLIC	?SetIndex@CImperialBattleUser@@QAEXH@Z		; CImperialBattleUser::SetIndex
PUBLIC	?IsUseData@CImperialBattleUser@@QAEHXZ		; CImperialBattleUser::IsUseData
PUBLIC	??_C@_0DO@LMOPOGM@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Add?5User?5Fa@ ; `string'
PUBLIC	?AddUserData@CImperialBattleUserMng@@QAEHH@Z	; CImperialBattleUserMng::AddUserData
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
;	COMDAT ??_C@_0DO@LMOPOGM@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Add?5User?5Fa@
CONST	SEGMENT
??_C@_0DO@LMOPOGM@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Add?5User?5Fa@ DB '['
	DB	'Imperial][User Mng] Add User Fail - Disconnect User [%s][%s]', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_iCount$220092 = -8					; size = 4
_this$ = -4						; size = 4
_iIndex$ = 8						; size = 4
?AddUserData@CImperialBattleUserMng@@QAEHH@Z PROC	; CImperialBattleUserMng::AddUserData
; _this$ = ecx

; 42   : {

  00120	55		 push	 ebp
  00121	8b ec		 mov	 ebp, esp
  00123	83 ec 48	 sub	 esp, 72			; 00000048H
  00126	53		 push	 ebx
  00127	56		 push	 esi
  00128	57		 push	 edi
  00129	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 43   : 	if ( !gObjIsConnected(iIndex))

  0012c	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0012f	50		 push	 eax
  00130	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00135	83 c4 04	 add	 esp, 4
  00138	85 c0		 test	 eax, eax
  0013a	75 3a		 jne	 SHORT $LN5@AddUserDat

; 44   : 	{
; 45   : 		LogAddTD("[Imperial][User Mng] Add User Fail - Disconnect User [%s][%s]",
; 46   : 			gObj[iIndex].AccountID, gObj[iIndex].Name);

  0013c	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0013f	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00145	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0014b	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  0014f	52		 push	 edx
  00150	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00153	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00159	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0015f	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  00163	52		 push	 edx
  00164	68 00 00 00 00	 push	 OFFSET ??_C@_0DO@LMOPOGM@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Add?5User?5Fa@
  00169	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0016f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 47   : 
; 48   : 		return FALSE;

  00172	33 c0		 xor	 eax, eax
  00174	eb 5e		 jmp	 SHORT $LN6@AddUserDat
$LN5@AddUserDat:

; 49   : 	}
; 50   : 
; 51   : 	for ( int iCount=0;iCount<MAX_IMPERIAL_BATTLE_USER;iCount++)

  00176	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iCount$220092[ebp], 0
  0017d	eb 09		 jmp	 SHORT $LN4@AddUserDat
$LN3@AddUserDat:
  0017f	8b 45 f8	 mov	 eax, DWORD PTR _iCount$220092[ebp]
  00182	83 c0 01	 add	 eax, 1
  00185	89 45 f8	 mov	 DWORD PTR _iCount$220092[ebp], eax
$LN4@AddUserDat:
  00188	83 7d f8 05	 cmp	 DWORD PTR _iCount$220092[ebp], 5
  0018c	7d 44		 jge	 SHORT $LN2@AddUserDat

; 52   : 	{
; 53   : 		if ( this->m_BattleUser[iCount].IsUseData() == FALSE )

  0018e	8b 45 f8	 mov	 eax, DWORD PTR _iCount$220092[ebp]
  00191	6b c0 0c	 imul	 eax, 12			; 0000000cH
  00194	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00197	8d 4c 01 04	 lea	 ecx, DWORD PTR [ecx+eax+4]
  0019b	e8 00 00 00 00	 call	 ?IsUseData@CImperialBattleUser@@QAEHXZ ; CImperialBattleUser::IsUseData
  001a0	85 c0		 test	 eax, eax
  001a2	75 2c		 jne	 SHORT $LN1@AddUserDat

; 54   : 		{
; 55   : 			this->m_BattleUser[iCount].SetIndex(iIndex);

  001a4	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  001a7	50		 push	 eax
  001a8	8b 4d f8	 mov	 ecx, DWORD PTR _iCount$220092[ebp]
  001ab	6b c9 0c	 imul	 ecx, 12			; 0000000cH
  001ae	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001b1	8d 4c 0a 04	 lea	 ecx, DWORD PTR [edx+ecx+4]
  001b5	e8 00 00 00 00	 call	 ?SetIndex@CImperialBattleUser@@QAEXH@Z ; CImperialBattleUser::SetIndex

; 56   : 			this->m_iBattleUserCount++;

  001ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001bd	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  001c0	83 c1 01	 add	 ecx, 1
  001c3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001c6	89 4a 40	 mov	 DWORD PTR [edx+64], ecx

; 57   : 			
; 58   : 			return TRUE;

  001c9	b8 01 00 00 00	 mov	 eax, 1
  001ce	eb 04		 jmp	 SHORT $LN6@AddUserDat
$LN1@AddUserDat:

; 59   : 		}
; 60   : 	}

  001d0	eb ad		 jmp	 SHORT $LN3@AddUserDat
$LN2@AddUserDat:

; 61   : 
; 62   : 	return FALSE;

  001d2	33 c0		 xor	 eax, eax
$LN6@AddUserDat:

; 63   : }

  001d4	5f		 pop	 edi
  001d5	5e		 pop	 esi
  001d6	5b		 pop	 ebx
  001d7	8b e5		 mov	 esp, ebp
  001d9	5d		 pop	 ebp
  001da	c2 04 00	 ret	 4
?AddUserData@CImperialBattleUserMng@@QAEHH@Z ENDP	; CImperialBattleUserMng::AddUserData
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\imperialbattleuser.h
_TEXT	ENDS
;	COMDAT ?SetIndex@CImperialBattleUser@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iIndex$ = 8						; size = 4
?SetIndex@CImperialBattleUser@@QAEXH@Z PROC		; CImperialBattleUser::SetIndex, COMDAT
; _this$ = ecx

; 27   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 28   : 		this->m_iIndex = iIndex;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00012	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 29   : 		this->m_bIsUse = TRUE;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 08 01 00
	00 00		 mov	 DWORD PTR [eax+8], 1

; 30   : 	}

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?SetIndex@CImperialBattleUser@@QAEXH@Z ENDP		; CImperialBattleUser::SetIndex
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?IsUseData@CImperialBattleUser@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsUseData@CImperialBattleUser@@QAEHXZ PROC		; CImperialBattleUser::IsUseData, COMDAT
; _this$ = ecx

; 33   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 34   : 		return this->m_bIsUse;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 35   : 	}

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?IsUseData@CImperialBattleUser@@QAEHXZ ENDP		; CImperialBattleUser::IsUseData
_TEXT	ENDS
PUBLIC	??_C@_0ED@ECPFNPJC@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@ ; `string'
PUBLIC	?GetIndex@CImperialBattleUser@@QAEHXZ		; CImperialBattleUser::GetIndex
PUBLIC	??_C@_0DJ@NNFCIDLF@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@ ; `string'
PUBLIC	?DeleteUserData@CImperialBattleUserMng@@QAEHH@Z	; CImperialBattleUserMng::DeleteUserData
;	COMDAT ??_C@_0ED@ECPFNPJC@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@
; File d:\projects\exteam6.3\source\gameserver\gameserver\imperialbattleusermng.cpp
CONST	SEGMENT
??_C@_0ED@ECPFNPJC@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@ DB '['
	DB	'Imperial][User Mng] Delete User - [%s][%s] Current Battle Use'
	DB	'r:%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@NNFCIDLF@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@
CONST	SEGMENT
??_C@_0DJ@NNFCIDLF@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@ DB '['
	DB	'Imperial][User Mng] Delete User Fail - Unvalid Index:%d', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_iCount$220104 = -8					; size = 4
_this$ = -4						; size = 4
_iIndex$ = 8						; size = 4
?DeleteUserData@CImperialBattleUserMng@@QAEHH@Z PROC	; CImperialBattleUserMng::DeleteUserData
; _this$ = ecx

; 67   : {

  001e0	55		 push	 ebp
  001e1	8b ec		 mov	 ebp, esp
  001e3	83 ec 48	 sub	 esp, 72			; 00000048H
  001e6	53		 push	 ebx
  001e7	56		 push	 esi
  001e8	57		 push	 edi
  001e9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 68   : 	if ( iIndex < 0 || iIndex > OBJMAX-1)

  001ec	83 7d 08 00	 cmp	 DWORD PTR _iIndex$[ebp], 0
  001f0	7c 09		 jl	 SHORT $LN6@DeleteUser
  001f2	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _iIndex$[ebp], 14999 ; 00003a97H
  001f9	7e 19		 jle	 SHORT $LN7@DeleteUser
$LN6@DeleteUser:

; 69   : 	{
; 70   : 		LogAddTD("[Imperial][User Mng] Delete User Fail - Unvalid Index:%d",
; 71   : 			iIndex);

  001fb	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  001fe	50		 push	 eax
  001ff	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@NNFCIDLF@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@
  00204	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0020a	83 c4 08	 add	 esp, 8

; 72   : 
; 73   : 		return FALSE;

  0020d	33 c0		 xor	 eax, eax
  0020f	e9 b4 00 00 00	 jmp	 $LN8@DeleteUser
$LN7@DeleteUser:

; 74   : 	}
; 75   : 
; 76   : 	for ( int iCount=0;iCount<MAX_IMPERIAL_BATTLE_USER;iCount++)

  00214	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iCount$220104[ebp], 0
  0021b	eb 09		 jmp	 SHORT $LN5@DeleteUser
$LN4@DeleteUser:
  0021d	8b 45 f8	 mov	 eax, DWORD PTR _iCount$220104[ebp]
  00220	83 c0 01	 add	 eax, 1
  00223	89 45 f8	 mov	 DWORD PTR _iCount$220104[ebp], eax
$LN5@DeleteUser:
  00226	83 7d f8 05	 cmp	 DWORD PTR _iCount$220104[ebp], 5
  0022a	0f 8d 96 00 00
	00		 jge	 $LN3@DeleteUser

; 77   : 	{
; 78   : 		if ( this->m_BattleUser[iCount].IsUseData() == TRUE )

  00230	8b 45 f8	 mov	 eax, DWORD PTR _iCount$220104[ebp]
  00233	6b c0 0c	 imul	 eax, 12			; 0000000cH
  00236	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00239	8d 4c 01 04	 lea	 ecx, DWORD PTR [ecx+eax+4]
  0023d	e8 00 00 00 00	 call	 ?IsUseData@CImperialBattleUser@@QAEHXZ ; CImperialBattleUser::IsUseData
  00242	83 f8 01	 cmp	 eax, 1
  00245	75 7a		 jne	 SHORT $LN2@DeleteUser

; 79   : 		{
; 80   : 			if ( this->m_BattleUser[iCount].GetIndex() == iIndex )

  00247	8b 45 f8	 mov	 eax, DWORD PTR _iCount$220104[ebp]
  0024a	6b c0 0c	 imul	 eax, 12			; 0000000cH
  0024d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00250	8d 4c 01 04	 lea	 ecx, DWORD PTR [ecx+eax+4]
  00254	e8 00 00 00 00	 call	 ?GetIndex@CImperialBattleUser@@QAEHXZ ; CImperialBattleUser::GetIndex
  00259	3b 45 08	 cmp	 eax, DWORD PTR _iIndex$[ebp]
  0025c	75 63		 jne	 SHORT $LN2@DeleteUser

; 81   : 			{
; 82   : 				this->m_BattleUser[iCount].ResetData();

  0025e	8b 45 f8	 mov	 eax, DWORD PTR _iCount$220104[ebp]
  00261	6b c0 0c	 imul	 eax, 12			; 0000000cH
  00264	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00267	8d 4c 01 04	 lea	 ecx, DWORD PTR [ecx+eax+4]
  0026b	e8 00 00 00 00	 call	 ?ResetData@CImperialBattleUser@@QAEXXZ ; CImperialBattleUser::ResetData

; 83   : 				this->m_iBattleUserCount--;

  00270	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00273	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00276	83 e9 01	 sub	 ecx, 1
  00279	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0027c	89 4a 40	 mov	 DWORD PTR [edx+64], ecx

; 84   : 				LogAddTD("[Imperial][User Mng] Delete User - [%s][%s] Current Battle User:%d",
; 85   : 					gObj[iIndex].AccountID, gObj[iIndex].Name, this->m_iBattleUserCount);

  0027f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00282	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00285	51		 push	 ecx
  00286	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  00289	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  0028f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00294	8d 4c 10 77	 lea	 ecx, DWORD PTR [eax+edx+119]
  00298	51		 push	 ecx
  00299	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  0029c	69 d2 38 2b 00
	00		 imul	 edx, 11064		; 00002b38H
  002a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002a7	8d 4c 10 6c	 lea	 ecx, DWORD PTR [eax+edx+108]
  002ab	51		 push	 ecx
  002ac	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@ECPFNPJC@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@
  002b1	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  002b7	83 c4 10	 add	 esp, 16			; 00000010H

; 86   : 
; 87   : 				return TRUE;

  002ba	b8 01 00 00 00	 mov	 eax, 1
  002bf	eb 07		 jmp	 SHORT $LN8@DeleteUser
$LN2@DeleteUser:

; 88   : 			}
; 89   : 		}
; 90   : 	}

  002c1	e9 57 ff ff ff	 jmp	 $LN4@DeleteUser
$LN3@DeleteUser:

; 91   : 
; 92   : 	return FALSE;

  002c6	33 c0		 xor	 eax, eax
$LN8@DeleteUser:

; 93   : }

  002c8	5f		 pop	 edi
  002c9	5e		 pop	 esi
  002ca	5b		 pop	 ebx
  002cb	8b e5		 mov	 esp, ebp
  002cd	5d		 pop	 ebp
  002ce	c2 04 00	 ret	 4
?DeleteUserData@CImperialBattleUserMng@@QAEHH@Z ENDP	; CImperialBattleUserMng::DeleteUserData
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\imperialbattleuser.h
_TEXT	ENDS
;	COMDAT ?GetIndex@CImperialBattleUser@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetIndex@CImperialBattleUser@@QAEHXZ PROC		; CImperialBattleUser::GetIndex, COMDAT
; _this$ = ecx

; 22   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 23   : 		return this->m_iIndex;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 24   : 	}

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetIndex@CImperialBattleUser@@QAEHXZ ENDP		; CImperialBattleUser::GetIndex
_TEXT	ENDS
PUBLIC	??_C@_0DF@BECKCDCJ@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@ ; `string'
PUBLIC	??_C@_0DH@GAHONAEG@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@ ; `string'
PUBLIC	?CheckUserState@CImperialBattleUserMng@@QAEXXZ	; CImperialBattleUserMng::CheckUserState
;	COMDAT ??_C@_0DF@BECKCDCJ@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@
; File d:\projects\exteam6.3\source\gameserver\gameserver\imperialbattleusermng.cpp
CONST	SEGMENT
??_C@_0DF@BECKCDCJ@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@ DB '['
	DB	'Imperial][User Mng] Delete User - Map Move [%s][%s]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@GAHONAEG@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@
CONST	SEGMENT
??_C@_0DH@GAHONAEG@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@ DB '['
	DB	'Imperial][User Mng] Delete User - Disconnect [%s][%s]', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
tv134 = -80						; size = 4
_iCount$220115 = -12					; size = 4
_iIndex$ = -8						; size = 4
_this$ = -4						; size = 4
?CheckUserState@CImperialBattleUserMng@@QAEXXZ PROC	; CImperialBattleUserMng::CheckUserState
; _this$ = ecx

; 98   : {

  002e0	55		 push	 ebp
  002e1	8b ec		 mov	 ebp, esp
  002e3	83 ec 50	 sub	 esp, 80			; 00000050H
  002e6	53		 push	 ebx
  002e7	56		 push	 esi
  002e8	57		 push	 edi
  002e9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	int iIndex;
; 100  : 
; 101  : 	for ( int iCount=0;iCount<MAX_IMPERIAL_BATTLE_USER;iCount++)

  002ec	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _iCount$220115[ebp], 0
  002f3	eb 09		 jmp	 SHORT $LN6@CheckUserS
$LN5@CheckUserS:
  002f5	8b 45 f4	 mov	 eax, DWORD PTR _iCount$220115[ebp]
  002f8	83 c0 01	 add	 eax, 1
  002fb	89 45 f4	 mov	 DWORD PTR _iCount$220115[ebp], eax
$LN6@CheckUserS:
  002fe	83 7d f4 05	 cmp	 DWORD PTR _iCount$220115[ebp], 5
  00302	0f 8d 48 01 00
	00		 jge	 $LN7@CheckUserS

; 102  : 	{
; 103  : 		if ( this->m_BattleUser[iCount].IsUseData() == TRUE )

  00308	8b 45 f4	 mov	 eax, DWORD PTR _iCount$220115[ebp]
  0030b	6b c0 0c	 imul	 eax, 12			; 0000000cH
  0030e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00311	8d 4c 01 04	 lea	 ecx, DWORD PTR [ecx+eax+4]
  00315	e8 00 00 00 00	 call	 ?IsUseData@CImperialBattleUser@@QAEHXZ ; CImperialBattleUser::IsUseData
  0031a	83 f8 01	 cmp	 eax, 1
  0031d	0f 85 28 01 00
	00		 jne	 $LN3@CheckUserS

; 104  : 		{
; 105  : 			iIndex = this->m_BattleUser[iCount].GetIndex();

  00323	8b 45 f4	 mov	 eax, DWORD PTR _iCount$220115[ebp]
  00326	6b c0 0c	 imul	 eax, 12			; 0000000cH
  00329	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0032c	8d 4c 01 04	 lea	 ecx, DWORD PTR [ecx+eax+4]
  00330	e8 00 00 00 00	 call	 ?GetIndex@CImperialBattleUser@@QAEHXZ ; CImperialBattleUser::GetIndex
  00335	89 45 f8	 mov	 DWORD PTR _iIndex$[ebp], eax

; 106  : 
; 107  : 			if ( !gObjIsConnected(iIndex))

  00338	8b 45 f8	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0033b	50		 push	 eax
  0033c	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00341	83 c4 04	 add	 esp, 4
  00344	85 c0		 test	 eax, eax
  00346	75 42		 jne	 SHORT $LN2@CheckUserS

; 108  : 			{
; 109  : 				this->DeleteUserData(iIndex);

  00348	8b 45 f8	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0034b	50		 push	 eax
  0034c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0034f	e8 00 00 00 00	 call	 ?DeleteUserData@CImperialBattleUserMng@@QAEHH@Z ; CImperialBattleUserMng::DeleteUserData

; 110  : 
; 111  : 				LogAddTD("[Imperial][User Mng] Delete User - Disconnect [%s][%s]",
; 112  : 					gObj[iIndex].AccountID, gObj[iIndex].Name);

  00354	8b 45 f8	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00357	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0035d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00363	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  00367	52		 push	 edx
  00368	8b 45 f8	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0036b	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00371	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00377	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  0037b	52		 push	 edx
  0037c	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@GAHONAEG@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@
  00381	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00387	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@CheckUserS:

; 113  : 			}
; 114  : 
; 115  : 			if ( !IMPERIAL_MAP_RANGE(gObj[iIndex].MapNumber) &&
; 116  : 				 gObj[iIndex].m_State == 2 &&
; 117  : 				 gObj[iIndex].Live == 1 )

  0038a	8b 45 f8	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0038d	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00393	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00399	0f b6 94 01 49
	01 00 00	 movzx	 edx, BYTE PTR [ecx+eax+329]
  003a1	83 fa 45	 cmp	 edx, 69			; 00000045H
  003a4	7d 09		 jge	 SHORT $LN9@CheckUserS
  003a6	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv134[ebp], 0
  003ad	eb 22		 jmp	 SHORT $LN10@CheckUserS
$LN9@CheckUserS:
  003af	8b 45 f8	 mov	 eax, DWORD PTR _iIndex$[ebp]
  003b2	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  003b8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  003be	0f b6 94 01 49
	01 00 00	 movzx	 edx, BYTE PTR [ecx+eax+329]
  003c6	33 c0		 xor	 eax, eax
  003c8	83 fa 48	 cmp	 edx, 72			; 00000048H
  003cb	0f 9e c0	 setle	 al
  003ce	89 45 b0	 mov	 DWORD PTR tv134[ebp], eax
$LN10@CheckUserS:
  003d1	83 7d b0 00	 cmp	 DWORD PTR tv134[ebp], 0
  003d5	75 74		 jne	 SHORT $LN3@CheckUserS
  003d7	8b 45 f8	 mov	 eax, DWORD PTR _iIndex$[ebp]
  003da	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  003e0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  003e6	83 bc 01 20 02
	00 00 02	 cmp	 DWORD PTR [ecx+eax+544], 2
  003ee	75 5b		 jne	 SHORT $LN3@CheckUserS
  003f0	8b 45 f8	 mov	 eax, DWORD PTR _iIndex$[ebp]
  003f3	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  003f9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  003ff	0f b6 54 01 6a	 movzx	 edx, BYTE PTR [ecx+eax+106]
  00404	83 fa 01	 cmp	 edx, 1
  00407	75 42		 jne	 SHORT $LN3@CheckUserS

; 118  : 			{
; 119  : 				this->DeleteUserData(iIndex);

  00409	8b 45 f8	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0040c	50		 push	 eax
  0040d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00410	e8 00 00 00 00	 call	 ?DeleteUserData@CImperialBattleUserMng@@QAEHH@Z ; CImperialBattleUserMng::DeleteUserData

; 120  : 
; 121  : 				LogAddTD("[Imperial][User Mng] Delete User - Map Move [%s][%s]",
; 122  : 					gObj[iIndex].AccountID, gObj[iIndex].Name);

  00415	8b 45 f8	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00418	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0041e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00424	8d 54 01 77	 lea	 edx, DWORD PTR [ecx+eax+119]
  00428	52		 push	 edx
  00429	8b 45 f8	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0042c	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00432	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00438	8d 54 01 6c	 lea	 edx, DWORD PTR [ecx+eax+108]
  0043c	52		 push	 edx
  0043d	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@BECKCDCJ@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Delete?5User@
  00442	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00448	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@CheckUserS:

; 123  : 			}
; 124  : 		}
; 125  : 	}

  0044b	e9 a5 fe ff ff	 jmp	 $LN5@CheckUserS
$LN7@CheckUserS:

; 126  : }

  00450	5f		 pop	 edi
  00451	5e		 pop	 esi
  00452	5b		 pop	 ebx
  00453	8b e5		 mov	 esp, ebp
  00455	5d		 pop	 ebp
  00456	c3		 ret	 0
?CheckUserState@CImperialBattleUserMng@@QAEXXZ ENDP	; CImperialBattleUserMng::CheckUserState
_TEXT	ENDS
PUBLIC	?CheckUserIsInEvent@CImperialBattleUserMng@@QAEHH@Z ; CImperialBattleUserMng::CheckUserIsInEvent
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_i$220128 = -8						; size = 4
_this$ = -4						; size = 4
_iIndex$ = 8						; size = 4
?CheckUserIsInEvent@CImperialBattleUserMng@@QAEHH@Z PROC ; CImperialBattleUserMng::CheckUserIsInEvent
; _this$ = ecx

; 129  : {

  00460	55		 push	 ebp
  00461	8b ec		 mov	 ebp, esp
  00463	83 ec 48	 sub	 esp, 72			; 00000048H
  00466	53		 push	 ebx
  00467	56		 push	 esi
  00468	57		 push	 edi
  00469	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 130  : 	for ( int i = 0; i < MAX_IMPERIAL_BATTLE_USER ; ++i )

  0046c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$220128[ebp], 0
  00473	eb 09		 jmp	 SHORT $LN4@CheckUserI
$LN3@CheckUserI:
  00475	8b 45 f8	 mov	 eax, DWORD PTR _i$220128[ebp]
  00478	83 c0 01	 add	 eax, 1
  0047b	89 45 f8	 mov	 DWORD PTR _i$220128[ebp], eax
$LN4@CheckUserI:
  0047e	83 7d f8 05	 cmp	 DWORD PTR _i$220128[ebp], 5
  00482	7d 20		 jge	 SHORT $LN2@CheckUserI

; 131  : 	{
; 132  : 		if ( iIndex == this->m_BattleUser[i].GetIndex() )

  00484	8b 45 f8	 mov	 eax, DWORD PTR _i$220128[ebp]
  00487	6b c0 0c	 imul	 eax, 12			; 0000000cH
  0048a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0048d	8d 4c 01 04	 lea	 ecx, DWORD PTR [ecx+eax+4]
  00491	e8 00 00 00 00	 call	 ?GetIndex@CImperialBattleUser@@QAEHXZ ; CImperialBattleUser::GetIndex
  00496	39 45 08	 cmp	 DWORD PTR _iIndex$[ebp], eax
  00499	75 07		 jne	 SHORT $LN1@CheckUserI

; 133  : 		{
; 134  : 			return TRUE;

  0049b	b8 01 00 00 00	 mov	 eax, 1
  004a0	eb 04		 jmp	 SHORT $LN5@CheckUserI
$LN1@CheckUserI:

; 135  : 		}
; 136  : 	}

  004a2	eb d1		 jmp	 SHORT $LN3@CheckUserI
$LN2@CheckUserI:

; 137  : 	return FALSE;

  004a4	33 c0		 xor	 eax, eax
$LN5@CheckUserI:

; 138  : }

  004a6	5f		 pop	 edi
  004a7	5e		 pop	 esi
  004a8	5b		 pop	 ebx
  004a9	8b e5		 mov	 esp, ebp
  004ab	5d		 pop	 ebp
  004ac	c2 04 00	 ret	 4
?CheckUserIsInEvent@CImperialBattleUserMng@@QAEHH@Z ENDP ; CImperialBattleUserMng::CheckUserIsInEvent
_TEXT	ENDS
PUBLIC	??_C@_0DB@EKIDJLKG@?$FLImperial?$FN?$FLUser?5Mng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mo@ ; `string'
PUBLIC	??_C@_0CL@IAFOBIPA@?$FLImperial?$FN?$FLUser?5Mng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mo@ ; `string'
PUBLIC	?MoveAllUser@CImperialBattleUserMng@@QAEHH@Z	; CImperialBattleUserMng::MoveAllUser
EXTRN	?gObjMoveGate@@YAHHH@Z:PROC			; gObjMoveGate
;	COMDAT ??_C@_0DB@EKIDJLKG@?$FLImperial?$FN?$FLUser?5Mng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mo@
CONST	SEGMENT
??_C@_0DB@EKIDJLKG@?$FLImperial?$FN?$FLUser?5Mng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mo@ DB '['
	DB	'Imperial][User Mng] [%s][%s] MoveGate Fail (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@IAFOBIPA@?$FLImperial?$FN?$FLUser?5Mng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mo@
CONST	SEGMENT
??_C@_0CL@IAFOBIPA@?$FLImperial?$FN?$FLUser?5Mng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mo@ DB '['
	DB	'Imperial][User Mng] [%s][%s] MoveGate(%d)', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_iCount$220139 = -16					; size = 4
_bMoveGateSuccess$ = -12				; size = 4
_iIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_iGateNumber$ = 8					; size = 4
?MoveAllUser@CImperialBattleUserMng@@QAEHH@Z PROC	; CImperialBattleUserMng::MoveAllUser
; _this$ = ecx

; 141  : {

  004b0	55		 push	 ebp
  004b1	8b ec		 mov	 ebp, esp
  004b3	83 ec 50	 sub	 esp, 80			; 00000050H
  004b6	53		 push	 ebx
  004b7	56		 push	 esi
  004b8	57		 push	 edi
  004b9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 142  : 	int iIndex;
; 143  : 	BOOL bMoveGateSuccess = FALSE;

  004bc	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _bMoveGateSuccess$[ebp], 0

; 144  : 
; 145  : 	for ( int iCount=0;iCount<MAX_IMPERIAL_BATTLE_USER;iCount++)

  004c3	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _iCount$220139[ebp], 0
  004ca	eb 09		 jmp	 SHORT $LN6@MoveAllUse
$LN5@MoveAllUse:
  004cc	8b 45 f0	 mov	 eax, DWORD PTR _iCount$220139[ebp]
  004cf	83 c0 01	 add	 eax, 1
  004d2	89 45 f0	 mov	 DWORD PTR _iCount$220139[ebp], eax
$LN6@MoveAllUse:
  004d5	83 7d f0 05	 cmp	 DWORD PTR _iCount$220139[ebp], 5
  004d9	0f 8d e0 00 00
	00		 jge	 $LN4@MoveAllUse

; 146  : 	{
; 147  : 		iIndex = this->m_BattleUser[iCount].GetIndex();

  004df	8b 45 f0	 mov	 eax, DWORD PTR _iCount$220139[ebp]
  004e2	6b c0 0c	 imul	 eax, 12			; 0000000cH
  004e5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004e8	8d 4c 01 04	 lea	 ecx, DWORD PTR [ecx+eax+4]
  004ec	e8 00 00 00 00	 call	 ?GetIndex@CImperialBattleUser@@QAEHXZ ; CImperialBattleUser::GetIndex
  004f1	89 45 f8	 mov	 DWORD PTR _iIndex$[ebp], eax

; 148  : 
; 149  : 		if ( this->m_BattleUser[iCount].IsUseData()  )

  004f4	8b 45 f0	 mov	 eax, DWORD PTR _iCount$220139[ebp]
  004f7	6b c0 0c	 imul	 eax, 12			; 0000000cH
  004fa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004fd	8d 4c 01 04	 lea	 ecx, DWORD PTR [ecx+eax+4]
  00501	e8 00 00 00 00	 call	 ?IsUseData@CImperialBattleUser@@QAEHXZ ; CImperialBattleUser::IsUseData
  00506	85 c0		 test	 eax, eax
  00508	0f 84 ac 00 00
	00		 je	 $LN3@MoveAllUse

; 150  : 		{
; 151  : 			bMoveGateSuccess = gObjMoveGate(iIndex, iGateNumber);

  0050e	8b 45 08	 mov	 eax, DWORD PTR _iGateNumber$[ebp]
  00511	50		 push	 eax
  00512	8b 4d f8	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00515	51		 push	 ecx
  00516	e8 00 00 00 00	 call	 ?gObjMoveGate@@YAHHH@Z	; gObjMoveGate
  0051b	83 c4 08	 add	 esp, 8
  0051e	89 45 f4	 mov	 DWORD PTR _bMoveGateSuccess$[ebp], eax

; 152  : 
; 153  : 			if ( bMoveGateSuccess == TRUE )

  00521	83 7d f4 01	 cmp	 DWORD PTR _bMoveGateSuccess$[ebp], 1
  00525	75 3c		 jne	 SHORT $LN2@MoveAllUse

; 154  : 			{
; 155  : 				LogAddTD("[Imperial][User Mng] [%s][%s] MoveGate(%d)",
; 156  : 					gObj[iIndex].AccountID, gObj[iIndex].Name, iGateNumber);

  00527	8b 45 08	 mov	 eax, DWORD PTR _iGateNumber$[ebp]
  0052a	50		 push	 eax
  0052b	8b 4d f8	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  0052e	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00534	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0053a	8d 44 0a 77	 lea	 eax, DWORD PTR [edx+ecx+119]
  0053e	50		 push	 eax
  0053f	8b 4d f8	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00542	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00548	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0054e	8d 44 0a 6c	 lea	 eax, DWORD PTR [edx+ecx+108]
  00552	50		 push	 eax
  00553	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@IAFOBIPA@?$FLImperial?$FN?$FLUser?5Mng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mo@
  00558	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0055e	83 c4 10	 add	 esp, 16			; 00000010H

; 157  : 			}
; 158  : 			else

  00561	eb 57		 jmp	 SHORT $LN3@MoveAllUse
$LN2@MoveAllUse:

; 159  : 			{
; 160  : 				this->DeleteUserData(iIndex);

  00563	8b 45 f8	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00566	50		 push	 eax
  00567	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0056a	e8 00 00 00 00	 call	 ?DeleteUserData@CImperialBattleUserMng@@QAEHH@Z ; CImperialBattleUserMng::DeleteUserData

; 161  : 
; 162  : 				LogAddTD( "[Imperial][User Mng] [%s][%s] MoveGate Fail (%d)",
; 163  : 					gObj[iIndex].AccountID, gObj[iIndex].Name, iGateNumber);

  0056f	8b 45 08	 mov	 eax, DWORD PTR _iGateNumber$[ebp]
  00572	50		 push	 eax
  00573	8b 4d f8	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00576	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0057c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00582	8d 44 0a 77	 lea	 eax, DWORD PTR [edx+ecx+119]
  00586	50		 push	 eax
  00587	8b 4d f8	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  0058a	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00590	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00596	8d 44 0a 6c	 lea	 eax, DWORD PTR [edx+ecx+108]
  0059a	50		 push	 eax
  0059b	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@EKIDJLKG@?$FLImperial?$FN?$FLUser?5Mng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mo@
  005a0	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  005a6	83 c4 10	 add	 esp, 16			; 00000010H

; 164  : 
; 165  : 				gObjMoveGate(iIndex, 137);

  005a9	68 89 00 00 00	 push	 137			; 00000089H
  005ae	8b 45 f8	 mov	 eax, DWORD PTR _iIndex$[ebp]
  005b1	50		 push	 eax
  005b2	e8 00 00 00 00	 call	 ?gObjMoveGate@@YAHHH@Z	; gObjMoveGate
  005b7	83 c4 08	 add	 esp, 8
$LN3@MoveAllUse:

; 166  : 			}
; 167  : 		}
; 168  : 	}

  005ba	e9 0d ff ff ff	 jmp	 $LN5@MoveAllUse
$LN4@MoveAllUse:

; 169  : 
; 170  : 	return TRUE;

  005bf	b8 01 00 00 00	 mov	 eax, 1

; 171  : }

  005c4	5f		 pop	 edi
  005c5	5e		 pop	 esi
  005c6	5b		 pop	 ebx
  005c7	8b e5		 mov	 esp, ebp
  005c9	5d		 pop	 ebp
  005ca	c2 04 00	 ret	 4
?MoveAllUser@CImperialBattleUserMng@@QAEHH@Z ENDP	; CImperialBattleUserMng::MoveAllUser
_TEXT	ENDS
PUBLIC	??_C@_0CF@DBLAGKFN@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Set?5Max?5Use@ ; `string'
;	COMDAT ??_C@_0CF@DBLAGKFN@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Set?5Max?5Use@
CONST	SEGMENT
??_C@_0CF@DBLAGKFN@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Set?5Max?5Use@ DB '['
	DB	'Imperial][User Mng] Set Max User:%d', 00H	; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iMaxUser$ = 8						; size = 4
?SetMaxUser@CImperialBattleUserMng@@QAEXH@Z PROC	; CImperialBattleUserMng::SetMaxUser
; _this$ = ecx

; 176  : {

  005d0	55		 push	 ebp
  005d1	8b ec		 mov	 ebp, esp
  005d3	83 ec 44	 sub	 esp, 68			; 00000044H
  005d6	53		 push	 ebx
  005d7	56		 push	 esi
  005d8	57		 push	 edi
  005d9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 177  : 	this->m_iBattleMaxUser = iMaxUser;

  005dc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  005df	8b 4d 08	 mov	 ecx, DWORD PTR _iMaxUser$[ebp]
  005e2	89 48 44	 mov	 DWORD PTR [eax+68], ecx

; 178  : 
; 179  : 	if ( iMaxUser > MAX_IMPERIAL_BATTLE_USER )

  005e5	83 7d 08 05	 cmp	 DWORD PTR _iMaxUser$[ebp], 5
  005e9	7e 1c		 jle	 SHORT $LN2@SetMaxUser

; 180  : 	{
; 181  : 		this->m_iBattleMaxUser = MAX_IMPERIAL_BATTLE_USER;

  005eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  005ee	c7 40 44 05 00
	00 00		 mov	 DWORD PTR [eax+68], 5

; 182  : 
; 183  : 		LogAddTD("[Imperial][User Mng] Set Max User:%d",
; 184  : 			iMaxUser);

  005f5	8b 45 08	 mov	 eax, DWORD PTR _iMaxUser$[ebp]
  005f8	50		 push	 eax
  005f9	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@DBLAGKFN@?$FLImperial?$FN?$FLUser?5Mng?$FN?5Set?5Max?5Use@
  005fe	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00604	83 c4 08	 add	 esp, 8
$LN2@SetMaxUser:

; 185  : 	}
; 186  : }

  00607	5f		 pop	 edi
  00608	5e		 pop	 esi
  00609	5b		 pop	 ebx
  0060a	8b e5		 mov	 esp, ebp
  0060c	5d		 pop	 ebp
  0060d	c2 04 00	 ret	 4
?SetMaxUser@CImperialBattleUserMng@@QAEXH@Z ENDP	; CImperialBattleUserMng::SetMaxUser
_TEXT	ENDS
PUBLIC	?GetMaxUser@CImperialBattleUserMng@@QAEHXZ	; CImperialBattleUserMng::GetMaxUser
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMaxUser@CImperialBattleUserMng@@QAEHXZ PROC		; CImperialBattleUserMng::GetMaxUser
; _this$ = ecx

; 191  : {

  00610	55		 push	 ebp
  00611	8b ec		 mov	 ebp, esp
  00613	83 ec 44	 sub	 esp, 68			; 00000044H
  00616	53		 push	 ebx
  00617	56		 push	 esi
  00618	57		 push	 edi
  00619	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 192  : 	return this->m_iBattleMaxUser;

  0061c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0061f	8b 40 44	 mov	 eax, DWORD PTR [eax+68]

; 193  : }

  00622	5f		 pop	 edi
  00623	5e		 pop	 esi
  00624	5b		 pop	 ebx
  00625	8b e5		 mov	 esp, ebp
  00627	5d		 pop	 ebp
  00628	c3		 ret	 0
?GetMaxUser@CImperialBattleUserMng@@QAEHXZ ENDP		; CImperialBattleUserMng::GetMaxUser
_TEXT	ENDS
PUBLIC	?GetUserCount@CImperialBattleUserMng@@QAEHXZ	; CImperialBattleUserMng::GetUserCount
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUserCount@CImperialBattleUserMng@@QAEHXZ PROC	; CImperialBattleUserMng::GetUserCount
; _this$ = ecx

; 197  : {

  00630	55		 push	 ebp
  00631	8b ec		 mov	 ebp, esp
  00633	83 ec 44	 sub	 esp, 68			; 00000044H
  00636	53		 push	 ebx
  00637	56		 push	 esi
  00638	57		 push	 edi
  00639	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 198  : 	return this->m_iBattleUserCount;

  0063c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0063f	8b 40 40	 mov	 eax, DWORD PTR [eax+64]

; 199  : }

  00642	5f		 pop	 edi
  00643	5e		 pop	 esi
  00644	5b		 pop	 ebx
  00645	8b e5		 mov	 esp, ebp
  00647	5d		 pop	 ebp
  00648	c3		 ret	 0
?GetUserCount@CImperialBattleUserMng@@QAEHXZ ENDP	; CImperialBattleUserMng::GetUserCount
_TEXT	ENDS
PUBLIC	?IsEmpty@CImperialBattleUserMng@@QAEHXZ		; CImperialBattleUserMng::IsEmpty
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@CImperialBattleUserMng@@QAEHXZ PROC		; CImperialBattleUserMng::IsEmpty
; _this$ = ecx

; 203  : {

  00650	55		 push	 ebp
  00651	8b ec		 mov	 ebp, esp
  00653	83 ec 44	 sub	 esp, 68			; 00000044H
  00656	53		 push	 ebx
  00657	56		 push	 esi
  00658	57		 push	 edi
  00659	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  : 	if ( this->m_iBattleUserCount <= 0 )

  0065c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0065f	83 78 40 00	 cmp	 DWORD PTR [eax+64], 0
  00663	7f 07		 jg	 SHORT $LN1@IsEmpty

; 205  : 	{
; 206  : 		return TRUE;

  00665	b8 01 00 00 00	 mov	 eax, 1
  0066a	eb 02		 jmp	 SHORT $LN2@IsEmpty
$LN1@IsEmpty:

; 207  : 	}
; 208  : 
; 209  : 	return FALSE;

  0066c	33 c0		 xor	 eax, eax
$LN2@IsEmpty:

; 210  : }

  0066e	5f		 pop	 edi
  0066f	5e		 pop	 esi
  00670	5b		 pop	 ebx
  00671	8b e5		 mov	 esp, ebp
  00673	5d		 pop	 ebp
  00674	c3		 ret	 0
?IsEmpty@CImperialBattleUserMng@@QAEHXZ ENDP		; CImperialBattleUserMng::IsEmpty
_TEXT	ENDS
PUBLIC	?IsOverMaxUser@CImperialBattleUserMng@@QAEHXZ	; CImperialBattleUserMng::IsOverMaxUser
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsOverMaxUser@CImperialBattleUserMng@@QAEHXZ PROC	; CImperialBattleUserMng::IsOverMaxUser
; _this$ = ecx

; 214  : {

  00680	55		 push	 ebp
  00681	8b ec		 mov	 ebp, esp
  00683	83 ec 44	 sub	 esp, 68			; 00000044H
  00686	53		 push	 ebx
  00687	56		 push	 esi
  00688	57		 push	 edi
  00689	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 215  : 	if ( this->m_iBattleUserCount >=  MAX_IMPERIAL_BATTLE_USER )

  0068c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0068f	83 78 40 05	 cmp	 DWORD PTR [eax+64], 5
  00693	7c 07		 jl	 SHORT $LN1@IsOverMaxU

; 216  : 	{
; 217  : 		return TRUE;

  00695	b8 01 00 00 00	 mov	 eax, 1
  0069a	eb 02		 jmp	 SHORT $LN2@IsOverMaxU
$LN1@IsOverMaxU:

; 218  : 	}
; 219  : 
; 220  : 	return FALSE;

  0069c	33 c0		 xor	 eax, eax
$LN2@IsOverMaxU:

; 221  : }

  0069e	5f		 pop	 edi
  0069f	5e		 pop	 esi
  006a0	5b		 pop	 ebx
  006a1	8b e5		 mov	 esp, ebp
  006a3	5d		 pop	 ebp
  006a4	c3		 ret	 0
?IsOverMaxUser@CImperialBattleUserMng@@QAEHXZ ENDP	; CImperialBattleUserMng::IsOverMaxUser
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ??__Eg_ImperialBattleUserMng@@YAXXZ
text$yc	SEGMENT
??__Eg_ImperialBattleUserMng@@YAXXZ PROC		; `dynamic initializer for 'g_ImperialBattleUserMng'', COMDAT

; 11   : CImperialBattleUserMng g_ImperialBattleUserMng;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A ; g_ImperialBattleUserMng
  0000e	e8 00 00 00 00	 call	 ??0CImperialBattleUserMng@@QAE@XZ ; CImperialBattleUserMng::CImperialBattleUserMng
  00013	68 00 00 00 00	 push	 OFFSET ??__Fg_ImperialBattleUserMng@@YAXXZ ; `dynamic atexit destructor for 'g_ImperialBattleUserMng''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__Eg_ImperialBattleUserMng@@YAXXZ ENDP		; `dynamic initializer for 'g_ImperialBattleUserMng''
; Function compile flags: /Odtp /ZI
text$yc	ENDS
;	COMDAT ??__Fg_ImperialBattleUserMng@@YAXXZ
text$yd	SEGMENT
??__Fg_ImperialBattleUserMng@@YAXXZ PROC		; `dynamic atexit destructor for 'g_ImperialBattleUserMng'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A ; g_ImperialBattleUserMng
  0000e	e8 00 00 00 00	 call	 ??1CImperialBattleUserMng@@UAE@XZ ; CImperialBattleUserMng::~CImperialBattleUserMng
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__Fg_ImperialBattleUserMng@@YAXXZ ENDP		; `dynamic atexit destructor for 'g_ImperialBattleUserMng''
text$yd	ENDS
PUBLIC	?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A ; g_ImperialBattleUserMng
_BSS	SEGMENT
?g_ImperialBattleUserMng@@3VCImperialBattleUserMng@@A DB 048H DUP (?) ; g_ImperialBattleUserMng
_BSS	ENDS
CRT$XCU	SEGMENT
_g_ImperialBattleUserMng$initializer$ DD FLAT:??__Eg_ImperialBattleUserMng@@YAXXZ
CRT$XCU	ENDS
END
