; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\DirPath.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7CDirPath@@6B@				; CDirPath::`vftable'
PUBLIC	??0CDirPath@@QAE@XZ				; CDirPath::CDirPath
PUBLIC	??_R4CDirPath@@6B@				; CDirPath::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDirPath@@@8				; CDirPath `RTTI Type Descriptor'
PUBLIC	??_R3CDirPath@@8				; CDirPath::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDirPath@@8				; CDirPath::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDirPath@@8			; CDirPath::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECDirPath@@UAEPAXI@Z:PROC			; CDirPath::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CDirPath@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\dirpath.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CDirPath@@8 DD FLAT:??_R0?AVCDirPath@@@8	; CDirPath::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDirPath@@8
rdata$r	ENDS
;	COMDAT ??_R2CDirPath@@8
rdata$r	SEGMENT
??_R2CDirPath@@8 DD FLAT:??_R1A@?0A@EA@CDirPath@@8	; CDirPath::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CDirPath@@8
rdata$r	SEGMENT
??_R3CDirPath@@8 DD 00H					; CDirPath::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CDirPath@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDirPath@@@8
_DATA	SEGMENT
??_R0?AVCDirPath@@@8 DD FLAT:??_7type_info@@6B@		; CDirPath `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDirPath@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CDirPath@@6B@
rdata$r	SEGMENT
??_R4CDirPath@@6B@ DD 00H				; CDirPath::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDirPath@@@8
	DD	FLAT:??_R3CDirPath@@8
rdata$r	ENDS
;	COMDAT ??_7CDirPath@@6B@
CONST	SEGMENT
??_7CDirPath@@6B@ DD FLAT:??_R4CDirPath@@6B@		; CDirPath::`vftable'
	DD	FLAT:??_ECDirPath@@UAEPAXI@Z
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDirPath@@QAE@XZ PROC				; CDirPath::CDirPath
; _this$ = ecx

; 6    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDirPath@@6B@

; 7    : 
; 8    : }

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CDirPath@@QAE@XZ ENDP				; CDirPath::CDirPath
_TEXT	ENDS
PUBLIC	??1CDirPath@@UAE@XZ				; CDirPath::~CDirPath
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDirPath@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDirPath@@UAEPAXI@Z PROC				; CDirPath::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDirPath@@UAE@XZ	; CDirPath::~CDirPath
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCDirPath@@UAEPAXI@Z ENDP				; CDirPath::`scalar deleting destructor'
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDirPath@@UAE@XZ PROC				; CDirPath::~CDirPath
; _this$ = ecx

; 11   : {

  00020	55		 push	 ebp
  00021	8b ec		 mov	 ebp, esp
  00023	83 ec 44	 sub	 esp, 68			; 00000044H
  00026	53		 push	 ebx
  00027	56		 push	 esi
  00028	57		 push	 edi
  00029	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDirPath@@6B@

; 12   : 
; 13   : }

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??1CDirPath@@UAE@XZ ENDP				; CDirPath::~CDirPath
_TEXT	ENDS
PUBLIC	?SetFirstPath@CDirPath@@QAEXPAD@Z		; CDirPath::SetFirstPath
EXTRN	_strcpy:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dir_path$ = 8						; size = 4
?SetFirstPath@CDirPath@@QAEXPAD@Z PROC			; CDirPath::SetFirstPath
; _this$ = ecx

; 16   : {

  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
  00043	83 ec 44	 sub	 esp, 68			; 00000044H
  00046	53		 push	 ebx
  00047	56		 push	 esi
  00048	57		 push	 edi
  00049	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 17   : 	strcpy(this->m_path ,dir_path);

  0004c	8b 45 08	 mov	 eax, DWORD PTR _dir_path$[ebp]
  0004f	50		 push	 eax
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	83 c1 04	 add	 ecx, 4
  00056	51		 push	 ecx
  00057	e8 00 00 00 00	 call	 _strcpy
  0005c	83 c4 08	 add	 esp, 8

; 18   : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 04 00	 ret	 4
?SetFirstPath@CDirPath@@QAEXPAD@Z ENDP			; CDirPath::SetFirstPath
_TEXT	ENDS
PUBLIC	?GetNewPath@CDirPath@@QAEPADPAD@Z		; CDirPath::GetNewPath
EXTRN	_strcat:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_npath$ = 8						; size = 4
?GetNewPath@CDirPath@@QAEPADPAD@Z PROC			; CDirPath::GetNewPath
; _this$ = ecx

; 21   : {

  00070	55		 push	 ebp
  00071	8b ec		 mov	 ebp, esp
  00073	83 ec 44	 sub	 esp, 68			; 00000044H
  00076	53		 push	 ebx
  00077	56		 push	 esi
  00078	57		 push	 edi
  00079	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 22   : 	strcpy(this->m_newpath ,this->m_path);

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	83 c0 04	 add	 eax, 4
  00082	50		 push	 eax
  00083	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	81 c1 08 01 00
	00		 add	 ecx, 264		; 00000108H
  0008c	51		 push	 ecx
  0008d	e8 00 00 00 00	 call	 _strcpy
  00092	83 c4 08	 add	 esp, 8

; 23   : 	strcat(this->m_newpath,npath);

  00095	8b 45 08	 mov	 eax, DWORD PTR _npath$[ebp]
  00098	50		 push	 eax
  00099	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	81 c1 08 01 00
	00		 add	 ecx, 264		; 00000108H
  000a2	51		 push	 ecx
  000a3	e8 00 00 00 00	 call	 _strcat
  000a8	83 c4 08	 add	 esp, 8

; 24   : 
; 25   : 	return this->m_newpath;

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	05 08 01 00 00	 add	 eax, 264		; 00000108H

; 26   : }

  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 04 00	 ret	 4
?GetNewPath@CDirPath@@QAEPADPAD@Z ENDP			; CDirPath::GetNewPath
_TEXT	ENDS
END
