; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\BossRewardItem.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?gBossRewardItem@@3VcBossRewardItem@@A		; gBossRewardItem
_BSS	SEGMENT
?gBossRewardItem@@3VcBossRewardItem@@A DB 0128ecH DUP (?) ; gBossRewardItem
_BSS	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_C@_0DD@FCJECPLA@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd@ ; `string'
PUBLIC	??_C@_0L@DBBEOKP@LOAD?5ERROR?$AA@		; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_06MLPMCPDE@ExTeam?$AA@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable?$AA@			; `string'
PUBLIC	??_C@_0CC@MAGAKIKB@?4?4?2Data?2ExData?2BossRewardItem?4in@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?Init@cBossRewardItem@@QAEXXZ			; cBossRewardItem::Init
EXTRN	_fclose:PROC
EXTRN	_sscanf:PROC
EXTRN	?Ex_IsBadFileLine@@YA_NPADAAH@Z:PROC		; Ex_IsBadFileLine
EXTRN	_fgets:PROC
EXTRN	_feof:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	_fopen:PROC
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT ??_C@_0DD@FCJECPLA@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd@
; File d:\projects\exteam6.3\source\gameserver\gameserver\bossrewarditem.cpp
CONST	SEGMENT
??_C@_0DD@FCJECPLA@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd@ DB '%'
	DB	'd %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DBBEOKP@LOAD?5ERROR?$AA@
CONST	SEGMENT
??_C@_0L@DBBEOKP@LOAD?5ERROR?$AA@ DB 'LOAD ERROR', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06MLPMCPDE@ExTeam?$AA@
CONST	SEGMENT
??_C@_06MLPMCPDE@ExTeam?$AA@ DB 'ExTeam', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable?$AA@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable?$AA@ DB 'Enable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@MAGAKIKB@?4?4?2Data?2ExData?2BossRewardItem?4in@
CONST	SEGMENT
??_C@_0CC@MAGAKIKB@?4?4?2Data?2ExData?2BossRewardItem?4in@ DB '..\Data\Ex'
	DB	'Data\BossRewardItem.ini', 00H		; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_n$220058 = -340					; size = 68
_Flag$ = -272						; size = 4
_Buff$ = -268						; size = 256
_file$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?Init@cBossRewardItem@@QAEXXZ PROC			; cBossRewardItem::Init
; _this$ = ecx

; 15   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 94 01 00
	00		 sub	 esp, 404		; 00000194H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 16   : 	ZeroMemory(&this->Drop,sizeof(this->Drop));

  00019	68 a0 09 01 00	 push	 68000			; 000109a0H
  0001e	6a 00		 push	 0
  00020	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00023	83 c0 08	 add	 eax, 8
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 _memset
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 17   : 
; 18   : 	this->Enable = GetPrivateProfileInt("ExTeam","Enable",0,BOSS_REWARD_DIR);

  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@MAGAKIKB@?4?4?2Data?2ExData?2BossRewardItem?4in@
  00034	6a 00		 push	 0
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable?$AA@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_06MLPMCPDE@ExTeam?$AA@
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00046	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	89 01		 mov	 DWORD PTR [ecx], eax

; 19   : 	
; 20   : 
; 21   : 	FILE *file = fopen(BOSS_REWARD_DIR,"r");

  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@MAGAKIKB@?4?4?2Data?2ExData?2BossRewardItem?4in@
  00055	e8 00 00 00 00	 call	 _fopen
  0005a	83 c4 08	 add	 esp, 8
  0005d	89 45 f4	 mov	 DWORD PTR _file$[ebp], eax

; 22   : 	if (file == NULL)

  00060	83 7d f4 00	 cmp	 DWORD PTR _file$[ebp], 0
  00064	75 22		 jne	 SHORT $LN5@Init

; 23   : 	{
; 24   : 		this->Enable = 0;

  00066	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00069	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 25   : 		MessageBoxA(0,BOSS_REWARD_DIR,"LOAD ERROR",0);

  0006f	6a 00		 push	 0
  00071	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DBBEOKP@LOAD?5ERROR?$AA@
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@MAGAKIKB@?4?4?2Data?2ExData?2BossRewardItem?4in@
  0007b	6a 00		 push	 0
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 26   : 		return;

  00083	e9 9a 02 00 00	 jmp	 $LN6@Init
$LN5@Init:

; 27   : 	}
; 28   : 
; 29   : 	this->DropCount = 0;

  00088	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 30   : 	this->BlockCount = 0;

  00092	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00095	c7 80 a8 09 01
	00 00 00 00 00	 mov	 DWORD PTR [eax+68008], 0

; 31   : 
; 32   : 	char Buff[256];
; 33   : 	int Flag = 0;

  0009f	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _Flag$[ebp], 0
$LN4@Init:

; 34   : 	while (!feof(file))

  000a9	8b 45 f4	 mov	 eax, DWORD PTR _file$[ebp]
  000ac	50		 push	 eax
  000ad	e8 00 00 00 00	 call	 _feof
  000b2	83 c4 04	 add	 esp, 4
  000b5	85 c0		 test	 eax, eax
  000b7	0f 85 59 02 00
	00		 jne	 $LN3@Init

; 35   : 	{
; 36   : 		fgets(Buff,256,file);

  000bd	8b 45 f4	 mov	 eax, DWORD PTR _file$[ebp]
  000c0	50		 push	 eax
  000c1	68 00 01 00 00	 push	 256			; 00000100H
  000c6	8d 8d f4 fe ff
	ff		 lea	 ecx, DWORD PTR _Buff$[ebp]
  000cc	51		 push	 ecx
  000cd	e8 00 00 00 00	 call	 _fgets
  000d2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 37   : 
; 38   : 		if(Ex_IsBadFileLine(Buff, Flag))

  000d5	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _Flag$[ebp]
  000db	50		 push	 eax
  000dc	8d 8d f4 fe ff
	ff		 lea	 ecx, DWORD PTR _Buff$[ebp]
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 ?Ex_IsBadFileLine@@YA_NPADAAH@Z ; Ex_IsBadFileLine
  000e8	83 c4 08	 add	 esp, 8
  000eb	0f b6 d0	 movzx	 edx, al
  000ee	85 d2		 test	 edx, edx
  000f0	74 02		 je	 SHORT $LN2@Init

; 39   : 			continue;

  000f2	eb b5		 jmp	 SHORT $LN4@Init
$LN2@Init:

; 40   : 
; 41   : 		if (Flag == 1)

  000f4	83 bd f0 fe ff
	ff 01		 cmp	 DWORD PTR _Flag$[ebp], 1
  000fb	0f 85 10 02 00
	00		 jne	 $LN1@Init

; 42   : 		{
; 43   : 			int n[17];
; 44   : 			sscanf(Buff,"%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d", &n[0],&n[1],&n[2],&n[3],&n[4],&n[5],&n[6],&n[7],&n[8],&n[9],&n[10],&n[11],&n[12],&n[13],&n[14],&n[15],&n[16]);

  00101	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _n$220058[ebp+64]
  00107	50		 push	 eax
  00108	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _n$220058[ebp+60]
  0010e	51		 push	 ecx
  0010f	8d 95 e4 fe ff
	ff		 lea	 edx, DWORD PTR _n$220058[ebp+56]
  00115	52		 push	 edx
  00116	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _n$220058[ebp+52]
  0011c	50		 push	 eax
  0011d	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _n$220058[ebp+48]
  00123	51		 push	 ecx
  00124	8d 95 d8 fe ff
	ff		 lea	 edx, DWORD PTR _n$220058[ebp+44]
  0012a	52		 push	 edx
  0012b	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _n$220058[ebp+40]
  00131	50		 push	 eax
  00132	8d 8d d0 fe ff
	ff		 lea	 ecx, DWORD PTR _n$220058[ebp+36]
  00138	51		 push	 ecx
  00139	8d 95 cc fe ff
	ff		 lea	 edx, DWORD PTR _n$220058[ebp+32]
  0013f	52		 push	 edx
  00140	8d 85 c8 fe ff
	ff		 lea	 eax, DWORD PTR _n$220058[ebp+28]
  00146	50		 push	 eax
  00147	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR _n$220058[ebp+24]
  0014d	51		 push	 ecx
  0014e	8d 95 c0 fe ff
	ff		 lea	 edx, DWORD PTR _n$220058[ebp+20]
  00154	52		 push	 edx
  00155	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _n$220058[ebp+16]
  0015b	50		 push	 eax
  0015c	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR _n$220058[ebp+12]
  00162	51		 push	 ecx
  00163	8d 95 b4 fe ff
	ff		 lea	 edx, DWORD PTR _n$220058[ebp+8]
  00169	52		 push	 edx
  0016a	8d 85 b0 fe ff
	ff		 lea	 eax, DWORD PTR _n$220058[ebp+4]
  00170	50		 push	 eax
  00171	8d 8d ac fe ff
	ff		 lea	 ecx, DWORD PTR _n$220058[ebp]
  00177	51		 push	 ecx
  00178	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@FCJECPLA@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd@
  0017d	8d 95 f4 fe ff
	ff		 lea	 edx, DWORD PTR _Buff$[ebp]
  00183	52		 push	 edx
  00184	e8 00 00 00 00	 call	 _sscanf
  00189	83 c4 4c	 add	 esp, 76			; 0000004cH

; 45   : 			this->Drop[this->DropCount].MonsterID		= n[0];

  0018c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0018f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00192	6b c9 44	 imul	 ecx, 68			; 00000044H
  00195	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00198	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _n$220058[ebp]
  0019e	89 44 0a 08	 mov	 DWORD PTR [edx+ecx+8], eax

; 46   : 			this->Drop[this->DropCount].Type			= n[1];

  001a2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001a5	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001a8	6b c9 44	 imul	 ecx, 68			; 00000044H
  001ab	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001ae	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR _n$220058[ebp+4]
  001b4	89 44 0a 0c	 mov	 DWORD PTR [edx+ecx+12], eax

; 47   : 			this->Drop[this->DropCount].Index			= n[2];

  001b8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001bb	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001be	6b c9 44	 imul	 ecx, 68			; 00000044H
  001c1	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001c4	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR _n$220058[ebp+8]
  001ca	89 44 0a 10	 mov	 DWORD PTR [edx+ecx+16], eax

; 48   : 			this->Drop[this->DropCount].MinLevel		= n[3];

  001ce	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001d1	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001d4	6b c9 44	 imul	 ecx, 68			; 00000044H
  001d7	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001da	8b 85 b8 fe ff
	ff		 mov	 eax, DWORD PTR _n$220058[ebp+12]
  001e0	89 44 0a 14	 mov	 DWORD PTR [edx+ecx+20], eax

; 49   : 			this->Drop[this->DropCount].MaxLevel		= n[4];

  001e4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001e7	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001ea	6b c9 44	 imul	 ecx, 68			; 00000044H
  001ed	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001f0	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR _n$220058[ebp+16]
  001f6	89 44 0a 18	 mov	 DWORD PTR [edx+ecx+24], eax

; 50   : 			this->Drop[this->DropCount].Dur				= n[5];

  001fa	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001fd	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00200	6b c9 44	 imul	 ecx, 68			; 00000044H
  00203	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00206	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR _n$220058[ebp+20]
  0020c	89 44 0a 1c	 mov	 DWORD PTR [edx+ecx+28], eax

; 51   : 			this->Drop[this->DropCount].OptionRate		= n[6];

  00210	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00213	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00216	6b c9 44	 imul	 ecx, 68			; 00000044H
  00219	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0021c	8b 85 c4 fe ff
	ff		 mov	 eax, DWORD PTR _n$220058[ebp+24]
  00222	89 44 0a 20	 mov	 DWORD PTR [edx+ecx+32], eax

; 52   : 			this->Drop[this->DropCount].MaxOption		= n[7];

  00226	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00229	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0022c	6b c9 44	 imul	 ecx, 68			; 00000044H
  0022f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00232	8b 85 c8 fe ff
	ff		 mov	 eax, DWORD PTR _n$220058[ebp+28]
  00238	89 44 0a 24	 mov	 DWORD PTR [edx+ecx+36], eax

; 53   : 			this->Drop[this->DropCount].LuckRate		= n[8];

  0023c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0023f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00242	6b c9 44	 imul	 ecx, 68			; 00000044H
  00245	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00248	8b 85 cc fe ff
	ff		 mov	 eax, DWORD PTR _n$220058[ebp+32]
  0024e	89 44 0a 28	 mov	 DWORD PTR [edx+ecx+40], eax

; 54   : 			this->Drop[this->DropCount].LuckOption		= n[9];

  00252	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00255	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00258	6b c9 44	 imul	 ecx, 68			; 00000044H
  0025b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0025e	8b 85 d0 fe ff
	ff		 mov	 eax, DWORD PTR _n$220058[ebp+36]
  00264	89 44 0a 2c	 mov	 DWORD PTR [edx+ecx+44], eax

; 55   : 			this->Drop[this->DropCount].SkillRate		= n[10];

  00268	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0026b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0026e	6b c9 44	 imul	 ecx, 68			; 00000044H
  00271	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00274	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR _n$220058[ebp+40]
  0027a	89 44 0a 30	 mov	 DWORD PTR [edx+ecx+48], eax

; 56   : 			this->Drop[this->DropCount].SkillOption		= n[11];

  0027e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00281	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00284	6b c9 44	 imul	 ecx, 68			; 00000044H
  00287	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0028a	8b 85 d8 fe ff
	ff		 mov	 eax, DWORD PTR _n$220058[ebp+44]
  00290	89 44 0a 34	 mov	 DWORD PTR [edx+ecx+52], eax

; 57   : 			this->Drop[this->DropCount].ExlRate			= n[12];

  00294	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00297	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0029a	6b c9 44	 imul	 ecx, 68			; 00000044H
  0029d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002a0	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR _n$220058[ebp+48]
  002a6	89 44 0a 38	 mov	 DWORD PTR [edx+ecx+56], eax

; 58   : 			this->Drop[this->DropCount].ExlOption		= n[13];

  002aa	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002ad	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  002b0	6b c9 44	 imul	 ecx, 68			; 00000044H
  002b3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002b6	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _n$220058[ebp+52]
  002bc	89 44 0a 3c	 mov	 DWORD PTR [edx+ecx+60], eax

; 59   : 			this->Drop[this->DropCount].AncRate			= n[14];

  002c0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002c3	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  002c6	6b c9 44	 imul	 ecx, 68			; 00000044H
  002c9	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002cc	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _n$220058[ebp+56]
  002d2	89 44 0a 40	 mov	 DWORD PTR [edx+ecx+64], eax

; 60   : 			this->Drop[this->DropCount].AncOption		= n[15];

  002d6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002d9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  002dc	6b c9 44	 imul	 ecx, 68			; 00000044H
  002df	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002e2	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _n$220058[ebp+60]
  002e8	89 44 0a 44	 mov	 DWORD PTR [edx+ecx+68], eax

; 61   : 			this->Drop[this->DropCount].ItemDropRate	= n[16];

  002ec	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002ef	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  002f2	6b c9 44	 imul	 ecx, 68			; 00000044H
  002f5	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002f8	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _n$220058[ebp+64]
  002fe	89 44 0a 48	 mov	 DWORD PTR [edx+ecx+72], eax

; 62   : 			this->DropCount++;

  00302	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00305	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00308	83 c1 01	 add	 ecx, 1
  0030b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0030e	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$LN1@Init:

; 63   : 		}
; 64   : 	}

  00311	e9 93 fd ff ff	 jmp	 $LN4@Init
$LN3@Init:

; 65   : 	fclose(file);

  00316	8b 45 f4	 mov	 eax, DWORD PTR _file$[ebp]
  00319	50		 push	 eax
  0031a	e8 00 00 00 00	 call	 _fclose
  0031f	83 c4 04	 add	 esp, 4
$LN6@Init:

; 66   : }

  00322	5f		 pop	 edi
  00323	5e		 pop	 esi
  00324	5b		 pop	 ebx
  00325	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00328	33 cd		 xor	 ecx, ebp
  0032a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0032f	8b e5		 mov	 esp, ebp
  00331	5d		 pop	 ebp
  00332	c3		 ret	 0
?Init@cBossRewardItem@@QAEXXZ ENDP			; cBossRewardItem::Init
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ProccessItemDrop@cBossRewardItem@@QAE_NPAUOBJECTSTRUCT@@@Z ; cBossRewardItem::ProccessItemDrop
EXTRN	?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z:PROC	; ItemSerialCreateSend
EXTRN	?gObjMonsterTopHitDamageUser@@YAHPAUOBJECTSTRUCT@@@Z:PROC ; gObjMonsterTopHitDamageUser
EXTRN	?GenExcOpt@@YAHH@Z:PROC				; GenExcOpt
EXTRN	_rand:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_iAncOpt$220081 = -444					; size = 4
_iExlOpt$220080 = -440					; size = 4
_iSkill$220079 = -436					; size = 4
_iLuck$220078 = -432					; size = 4
_iOption$220077 = -428					; size = 4
_iLevel$220076 = -424					; size = 4
_ItemIndex$ = -420					; size = 4
_i$220067 = -416					; size = 4
_CountItem$ = -412					; size = 4
_ArrayDropItem$ = -408					; size = 400
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpMobObj$ = 8						; size = 4
?ProccessItemDrop@cBossRewardItem@@QAE_NPAUOBJECTSTRUCT@@@Z PROC ; cBossRewardItem::ProccessItemDrop
; _this$ = ecx

; 69   : {

  00340	55		 push	 ebp
  00341	8b ec		 mov	 ebp, esp
  00343	81 ec fc 01 00
	00		 sub	 esp, 508		; 000001fcH
  00349	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0034e	33 c5		 xor	 eax, ebp
  00350	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00353	53		 push	 ebx
  00354	56		 push	 esi
  00355	57		 push	 edi
  00356	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 70   : 	if (!this->Enable)	

  00359	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0035c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0035f	75 07		 jne	 SHORT $LN21@ProccessIt

; 71   : 	{
; 72   : 		return false;

  00361	32 c0		 xor	 al, al
  00363	e9 9e 03 00 00	 jmp	 $LN22@ProccessIt
$LN21@ProccessIt:

; 73   : 	}
; 74   : 	int ArrayDropItem[100];
; 75   : 	int CountItem = 0;

  00368	c7 85 64 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _CountItem$[ebp], 0

; 76   : 	for (int i=0; i < this->DropCount; i++)

  00372	c7 85 60 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$220067[ebp], 0
  0037c	eb 0f		 jmp	 SHORT $LN20@ProccessIt
$LN19@ProccessIt:
  0037e	8b 85 60 fe ff
	ff		 mov	 eax, DWORD PTR _i$220067[ebp]
  00384	83 c0 01	 add	 eax, 1
  00387	89 85 60 fe ff
	ff		 mov	 DWORD PTR _i$220067[ebp], eax
$LN20@ProccessIt:
  0038d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00390	8b 8d 60 fe ff
	ff		 mov	 ecx, DWORD PTR _i$220067[ebp]
  00396	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00399	7d 4b		 jge	 SHORT $LN18@ProccessIt

; 77   : 	{
; 78   : 		if(CountItem >= 100)

  0039b	83 bd 64 fe ff
	ff 64		 cmp	 DWORD PTR _CountItem$[ebp], 100 ; 00000064H
  003a2	7c 02		 jl	 SHORT $LN17@ProccessIt

; 79   : 		{
; 80   : 			break;

  003a4	eb 40		 jmp	 SHORT $LN18@ProccessIt
$LN17@ProccessIt:

; 81   : 		}
; 82   : 		if( lpMobObj->Class == this->Drop[i].MonsterID )

  003a6	8b 45 08	 mov	 eax, DWORD PTR _lpMobObj$[ebp]
  003a9	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  003b0	8b 95 60 fe ff
	ff		 mov	 edx, DWORD PTR _i$220067[ebp]
  003b6	6b d2 44	 imul	 edx, 68			; 00000044H
  003b9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003bc	3b 4c 10 08	 cmp	 ecx, DWORD PTR [eax+edx+8]
  003c0	75 22		 jne	 SHORT $LN16@ProccessIt

; 83   : 		{
; 84   : 			ArrayDropItem[CountItem] = i;

  003c2	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR _CountItem$[ebp]
  003c8	8b 8d 60 fe ff
	ff		 mov	 ecx, DWORD PTR _i$220067[ebp]
  003ce	89 8c 85 68 fe
	ff ff		 mov	 DWORD PTR _ArrayDropItem$[ebp+eax*4], ecx

; 85   : 			CountItem++;

  003d5	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR _CountItem$[ebp]
  003db	83 c0 01	 add	 eax, 1
  003de	89 85 64 fe ff
	ff		 mov	 DWORD PTR _CountItem$[ebp], eax
$LN16@ProccessIt:

; 86   : 		}
; 87   : 	}

  003e4	eb 98		 jmp	 SHORT $LN19@ProccessIt
$LN18@ProccessIt:

; 88   : 	
; 89   : 	if (CountItem == 0)

  003e6	83 bd 64 fe ff
	ff 00		 cmp	 DWORD PTR _CountItem$[ebp], 0
  003ed	75 07		 jne	 SHORT $LN15@ProccessIt

; 90   : 	{
; 91   : 		return false;

  003ef	32 c0		 xor	 al, al
  003f1	e9 10 03 00 00	 jmp	 $LN22@ProccessIt
$LN15@ProccessIt:

; 92   : 	}
; 93   : 	//srand(time(NULL));
; 94   : 	int ItemIndex = ArrayDropItem[rand()%CountItem];

  003f6	e8 00 00 00 00	 call	 _rand
  003fb	99		 cdq
  003fc	f7 bd 64 fe ff
	ff		 idiv	 DWORD PTR _CountItem$[ebp]
  00402	8b 84 95 68 fe
	ff ff		 mov	 eax, DWORD PTR _ArrayDropItem$[ebp+edx*4]
  00409	89 85 5c fe ff
	ff		 mov	 DWORD PTR _ItemIndex$[ebp], eax

; 95   : 	//srand(time(NULL));
; 96   : 	if ( (rand()%10000) < this->Drop[ItemIndex].ItemDropRate )

  0040f	e8 00 00 00 00	 call	 _rand
  00414	99		 cdq
  00415	b9 10 27 00 00	 mov	 ecx, 10000		; 00002710H
  0041a	f7 f9		 idiv	 ecx
  0041c	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR _ItemIndex$[ebp]
  00422	6b c0 44	 imul	 eax, 68			; 00000044H
  00425	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00428	3b 54 01 48	 cmp	 edx, DWORD PTR [ecx+eax+72]
  0042c	0f 8d d2 02 00
	00		 jge	 $LN14@ProccessIt

; 97   : 	{
; 98   : 		int iLevel	= 0;

  00432	c7 85 58 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _iLevel$220076[ebp], 0

; 99   : 		int iOption	= 0;

  0043c	c7 85 54 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _iOption$220077[ebp], 0

; 100  : 		int iLuck	= 0;

  00446	c7 85 50 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _iLuck$220078[ebp], 0

; 101  : 		int iSkill	= 0;

  00450	c7 85 4c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _iSkill$220079[ebp], 0

; 102  : 		int iExlOpt	= 0;

  0045a	c7 85 48 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _iExlOpt$220080[ebp], 0

; 103  : 		int iAncOpt	= 0;

  00464	c7 85 44 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _iAncOpt$220081[ebp], 0

; 104  : 
; 105  : 		if( this->Drop[ItemIndex].MaxLevel == this->Drop[ItemIndex].MinLevel )

  0046e	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR _ItemIndex$[ebp]
  00474	6b c0 44	 imul	 eax, 68			; 00000044H
  00477	8b 8d 5c fe ff
	ff		 mov	 ecx, DWORD PTR _ItemIndex$[ebp]
  0047d	6b c9 44	 imul	 ecx, 68			; 00000044H
  00480	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00483	8b 75 f8	 mov	 esi, DWORD PTR _this$[ebp]
  00486	8b 44 02 18	 mov	 eax, DWORD PTR [edx+eax+24]
  0048a	3b 44 0e 14	 cmp	 eax, DWORD PTR [esi+ecx+20]
  0048e	75 18		 jne	 SHORT $LN13@ProccessIt

; 106  : 		{
; 107  : 			iLevel = this->Drop[ItemIndex].MinLevel;

  00490	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR _ItemIndex$[ebp]
  00496	6b c0 44	 imul	 eax, 68			; 00000044H
  00499	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0049c	8b 54 01 14	 mov	 edx, DWORD PTR [ecx+eax+20]
  004a0	89 95 58 fe ff
	ff		 mov	 DWORD PTR _iLevel$220076[ebp], edx

; 108  : 		}
; 109  : 		else

  004a6	eb 41		 jmp	 SHORT $LN12@ProccessIt
$LN13@ProccessIt:

; 110  : 		{
; 111  : 			iLevel = this->Drop[ItemIndex].MinLevel + (rand() % (this->Drop[ItemIndex].MaxLevel - this->Drop[ItemIndex].MinLevel + 1));

  004a8	8b b5 5c fe ff
	ff		 mov	 esi, DWORD PTR _ItemIndex$[ebp]
  004ae	6b f6 44	 imul	 esi, 68			; 00000044H
  004b1	e8 00 00 00 00	 call	 _rand
  004b6	8b 8d 5c fe ff
	ff		 mov	 ecx, DWORD PTR _ItemIndex$[ebp]
  004bc	6b c9 44	 imul	 ecx, 68			; 00000044H
  004bf	8b 95 5c fe ff
	ff		 mov	 edx, DWORD PTR _ItemIndex$[ebp]
  004c5	6b d2 44	 imul	 edx, 68			; 00000044H
  004c8	8b 7d f8	 mov	 edi, DWORD PTR _this$[ebp]
  004cb	8b 5d f8	 mov	 ebx, DWORD PTR _this$[ebp]
  004ce	8b 4c 0f 18	 mov	 ecx, DWORD PTR [edi+ecx+24]
  004d2	2b 4c 13 14	 sub	 ecx, DWORD PTR [ebx+edx+20]
  004d6	83 c1 01	 add	 ecx, 1
  004d9	99		 cdq
  004da	f7 f9		 idiv	 ecx
  004dc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004df	03 54 30 14	 add	 edx, DWORD PTR [eax+esi+20]
  004e3	89 95 58 fe ff
	ff		 mov	 DWORD PTR _iLevel$220076[ebp], edx
$LN12@ProccessIt:

; 112  : 		}	
; 113  : 
; 114  : 		if( this->Drop[ItemIndex].MaxOption != 0 )

  004e9	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR _ItemIndex$[ebp]
  004ef	6b c0 44	 imul	 eax, 68			; 00000044H
  004f2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004f5	83 7c 01 24 00	 cmp	 DWORD PTR [ecx+eax+36], 0
  004fa	74 3e		 je	 SHORT $LN11@ProccessIt

; 115  : 		{
; 116  : 			if( rand() % 100 < this->Drop[ItemIndex].OptionRate )

  004fc	e8 00 00 00 00	 call	 _rand
  00501	99		 cdq
  00502	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  00507	f7 f9		 idiv	 ecx
  00509	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR _ItemIndex$[ebp]
  0050f	6b c0 44	 imul	 eax, 68			; 00000044H
  00512	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00515	3b 54 01 20	 cmp	 edx, DWORD PTR [ecx+eax+32]
  00519	7d 1f		 jge	 SHORT $LN11@ProccessIt

; 117  : 			{
; 118  : 				iOption = rand() % this->Drop[ItemIndex].MaxOption + 1;

  0051b	e8 00 00 00 00	 call	 _rand
  00520	8b 8d 5c fe ff
	ff		 mov	 ecx, DWORD PTR _ItemIndex$[ebp]
  00526	6b c9 44	 imul	 ecx, 68			; 00000044H
  00529	8b 75 f8	 mov	 esi, DWORD PTR _this$[ebp]
  0052c	99		 cdq
  0052d	f7 7c 0e 24	 idiv	 DWORD PTR [esi+ecx+36]
  00531	83 c2 01	 add	 edx, 1
  00534	89 95 54 fe ff
	ff		 mov	 DWORD PTR _iOption$220077[ebp], edx
$LN11@ProccessIt:

; 119  : 			}
; 120  : 		}
; 121  : 
; 122  : 		if( this->Drop[ItemIndex].LuckOption == 1 )

  0053a	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR _ItemIndex$[ebp]
  00540	6b c0 44	 imul	 eax, 68			; 00000044H
  00543	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00546	83 7c 01 2c 01	 cmp	 DWORD PTR [ecx+eax+44], 1
  0054b	75 29		 jne	 SHORT $LN9@ProccessIt

; 123  : 		{
; 124  : 			if( rand() % 100 < this->Drop[ItemIndex].LuckRate )

  0054d	e8 00 00 00 00	 call	 _rand
  00552	99		 cdq
  00553	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  00558	f7 f9		 idiv	 ecx
  0055a	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR _ItemIndex$[ebp]
  00560	6b c0 44	 imul	 eax, 68			; 00000044H
  00563	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00566	3b 54 01 28	 cmp	 edx, DWORD PTR [ecx+eax+40]
  0056a	7d 0a		 jge	 SHORT $LN9@ProccessIt

; 125  : 			{
; 126  : 				iLuck = 1;

  0056c	c7 85 50 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _iLuck$220078[ebp], 1
$LN9@ProccessIt:

; 127  : 			}
; 128  : 		}
; 129  : 
; 130  : 		if( this->Drop[ItemIndex].SkillOption == 1 )

  00576	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR _ItemIndex$[ebp]
  0057c	6b c0 44	 imul	 eax, 68			; 00000044H
  0057f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00582	83 7c 01 34 01	 cmp	 DWORD PTR [ecx+eax+52], 1
  00587	75 29		 jne	 SHORT $LN7@ProccessIt

; 131  : 		{
; 132  : 			if( rand() % 100 < this->Drop[ItemIndex].SkillRate )

  00589	e8 00 00 00 00	 call	 _rand
  0058e	99		 cdq
  0058f	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  00594	f7 f9		 idiv	 ecx
  00596	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR _ItemIndex$[ebp]
  0059c	6b c0 44	 imul	 eax, 68			; 00000044H
  0059f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005a2	3b 54 01 30	 cmp	 edx, DWORD PTR [ecx+eax+48]
  005a6	7d 0a		 jge	 SHORT $LN7@ProccessIt

; 133  : 			{
; 134  : 				iLuck = 1;

  005a8	c7 85 50 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _iLuck$220078[ebp], 1
$LN7@ProccessIt:

; 135  : 			}
; 136  : 		}
; 137  : 
; 138  : 		if(this->Drop[ItemIndex].ExlOption)

  005b2	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR _ItemIndex$[ebp]
  005b8	6b c0 44	 imul	 eax, 68			; 00000044H
  005bb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005be	83 7c 01 3c 00	 cmp	 DWORD PTR [ecx+eax+60], 0
  005c3	74 3e		 je	 SHORT $LN5@ProccessIt

; 139  : 		{
; 140  : 			if( rand() % 100 < this->Drop[ItemIndex].ExlRate )

  005c5	e8 00 00 00 00	 call	 _rand
  005ca	99		 cdq
  005cb	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  005d0	f7 f9		 idiv	 ecx
  005d2	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR _ItemIndex$[ebp]
  005d8	6b c0 44	 imul	 eax, 68			; 00000044H
  005db	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005de	3b 54 01 38	 cmp	 edx, DWORD PTR [ecx+eax+56]
  005e2	7d 1f		 jge	 SHORT $LN5@ProccessIt

; 141  : 			{
; 142  : 				iExlOpt = GenExcOpt(this->Drop[ItemIndex].ExlOption);

  005e4	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR _ItemIndex$[ebp]
  005ea	6b c0 44	 imul	 eax, 68			; 00000044H
  005ed	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005f0	8b 54 01 3c	 mov	 edx, DWORD PTR [ecx+eax+60]
  005f4	52		 push	 edx
  005f5	e8 00 00 00 00	 call	 ?GenExcOpt@@YAHH@Z	; GenExcOpt
  005fa	83 c4 04	 add	 esp, 4
  005fd	89 85 48 fe ff
	ff		 mov	 DWORD PTR _iExlOpt$220080[ebp], eax
$LN5@ProccessIt:

; 143  : 			}
; 144  : 		}
; 145  : 
; 146  : 		if(this->Drop[ItemIndex].AncOption == 5 || this->Drop[ItemIndex].AncOption == 10)

  00603	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR _ItemIndex$[ebp]
  00609	6b c0 44	 imul	 eax, 68			; 00000044H
  0060c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0060f	83 7c 01 44 05	 cmp	 DWORD PTR [ecx+eax+68], 5
  00614	74 13		 je	 SHORT $LN2@ProccessIt
  00616	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR _ItemIndex$[ebp]
  0061c	6b c0 44	 imul	 eax, 68			; 00000044H
  0061f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00622	83 7c 01 44 0a	 cmp	 DWORD PTR [ecx+eax+68], 10 ; 0000000aH
  00627	75 35		 jne	 SHORT $LN3@ProccessIt
$LN2@ProccessIt:

; 147  : 		{
; 148  : 			if( rand() % 100 < this->Drop[ItemIndex].AncRate )

  00629	e8 00 00 00 00	 call	 _rand
  0062e	99		 cdq
  0062f	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  00634	f7 f9		 idiv	 ecx
  00636	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR _ItemIndex$[ebp]
  0063c	6b c0 44	 imul	 eax, 68			; 00000044H
  0063f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00642	3b 54 01 40	 cmp	 edx, DWORD PTR [ecx+eax+64]
  00646	7d 16		 jge	 SHORT $LN3@ProccessIt

; 149  : 			{
; 150  : 				iAncOpt = this->Drop[ItemIndex].AncOption;

  00648	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR _ItemIndex$[ebp]
  0064e	6b c0 44	 imul	 eax, 68			; 00000044H
  00651	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00654	8b 54 01 44	 mov	 edx, DWORD PTR [ecx+eax+68]
  00658	89 95 44 fe ff
	ff		 mov	 DWORD PTR _iAncOpt$220081[ebp], edx
$LN3@ProccessIt:

; 151  : 			}
; 152  : 		}
; 153  : 
; 154  : 		ItemSerialCreateSend(lpMobObj->m_Index,lpMobObj->MapNumber,lpMobObj->X,lpMobObj->Y,ITEMGET(this->Drop[ItemIndex].Type,this->Drop[ItemIndex].Index),iLevel,this->Drop[ItemIndex].Dur,iSkill,iLuck,iOption,gObjMonsterTopHitDamageUser(lpMobObj),iExlOpt,iAncOpt);

  0065e	0f b6 85 44 fe
	ff ff		 movzx	 eax, BYTE PTR _iAncOpt$220081[ebp]
  00665	50		 push	 eax
  00666	0f b6 8d 48 fe
	ff ff		 movzx	 ecx, BYTE PTR _iExlOpt$220080[ebp]
  0066d	51		 push	 ecx
  0066e	8b 55 08	 mov	 edx, DWORD PTR _lpMobObj$[ebp]
  00671	52		 push	 edx
  00672	e8 00 00 00 00	 call	 ?gObjMonsterTopHitDamageUser@@YAHPAUOBJECTSTRUCT@@@Z ; gObjMonsterTopHitDamageUser
  00677	83 c4 04	 add	 esp, 4
  0067a	50		 push	 eax
  0067b	0f b6 85 54 fe
	ff ff		 movzx	 eax, BYTE PTR _iOption$220077[ebp]
  00682	50		 push	 eax
  00683	0f b6 8d 50 fe
	ff ff		 movzx	 ecx, BYTE PTR _iLuck$220078[ebp]
  0068a	51		 push	 ecx
  0068b	0f b6 95 4c fe
	ff ff		 movzx	 edx, BYTE PTR _iSkill$220079[ebp]
  00692	52		 push	 edx
  00693	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR _ItemIndex$[ebp]
  00699	6b c0 44	 imul	 eax, 68			; 00000044H
  0069c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0069f	0f b6 54 01 1c	 movzx	 edx, BYTE PTR [ecx+eax+28]
  006a4	52		 push	 edx
  006a5	0f b6 85 58 fe
	ff ff		 movzx	 eax, BYTE PTR _iLevel$220076[ebp]
  006ac	50		 push	 eax
  006ad	8b 8d 5c fe ff
	ff		 mov	 ecx, DWORD PTR _ItemIndex$[ebp]
  006b3	6b c9 44	 imul	 ecx, 68			; 00000044H
  006b6	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  006b9	8b 44 0a 0c	 mov	 eax, DWORD PTR [edx+ecx+12]
  006bd	c1 e0 09	 shl	 eax, 9
  006c0	8b 8d 5c fe ff
	ff		 mov	 ecx, DWORD PTR _ItemIndex$[ebp]
  006c6	6b c9 44	 imul	 ecx, 68			; 00000044H
  006c9	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  006cc	03 44 0a 10	 add	 eax, DWORD PTR [edx+ecx+16]
  006d0	50		 push	 eax
  006d1	8b 45 08	 mov	 eax, DWORD PTR _lpMobObj$[ebp]
  006d4	0f b6 88 46 01
	00 00		 movzx	 ecx, BYTE PTR [eax+326]
  006db	51		 push	 ecx
  006dc	8b 55 08	 mov	 edx, DWORD PTR _lpMobObj$[ebp]
  006df	0f b6 82 44 01
	00 00		 movzx	 eax, BYTE PTR [edx+324]
  006e6	50		 push	 eax
  006e7	8b 4d 08	 mov	 ecx, DWORD PTR _lpMobObj$[ebp]
  006ea	0f b6 91 49 01
	00 00		 movzx	 edx, BYTE PTR [ecx+329]
  006f1	52		 push	 edx
  006f2	8b 45 08	 mov	 eax, DWORD PTR _lpMobObj$[ebp]
  006f5	8b 08		 mov	 ecx, DWORD PTR [eax]
  006f7	51		 push	 ecx
  006f8	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  006fd	83 c4 34	 add	 esp, 52			; 00000034H

; 155  : 		return true;

  00700	b0 01		 mov	 al, 1
  00702	eb 02		 jmp	 SHORT $LN22@ProccessIt
$LN14@ProccessIt:

; 156  : 	}
; 157  : 
; 158  : 	return false;

  00704	32 c0		 xor	 al, al
$LN22@ProccessIt:

; 159  : }

  00706	5f		 pop	 edi
  00707	5e		 pop	 esi
  00708	5b		 pop	 ebx
  00709	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0070c	33 cd		 xor	 ecx, ebp
  0070e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00713	8b e5		 mov	 esp, ebp
  00715	5d		 pop	 ebp
  00716	c2 04 00	 ret	 4
?ProccessItemDrop@cBossRewardItem@@QAE_NPAUOBJECTSTRUCT@@@Z ENDP ; cBossRewardItem::ProccessItemDrop
_TEXT	ENDS
END
