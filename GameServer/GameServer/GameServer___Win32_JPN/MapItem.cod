; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\MapItem.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?Init@CMapItem@@QAEXXZ				; CMapItem::Init
PUBLIC	??_7CMapItem@@6B@				; CMapItem::`vftable'
PUBLIC	??0CMapItem@@QAE@XZ				; CMapItem::CMapItem
PUBLIC	??_R4CMapItem@@6B@				; CMapItem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMapItem@@@8				; CMapItem `RTTI Type Descriptor'
PUBLIC	??_R3CMapItem@@8				; CMapItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMapItem@@8				; CMapItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMapItem@@8			; CMapItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@CItem@@8				; CItem::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVCItem@@@8				; CItem `RTTI Type Descriptor'
PUBLIC	??_R3CItem@@8					; CItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CItem@@8					; CItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CItem@@8				; CItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??0CItem@@QAE@XZ:PROC				; CItem::CItem
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECMapItem@@UAEPAXI@Z:PROC			; CMapItem::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CItem@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\mapitem.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CItem@@8 DD FLAT:??_R0?AVCItem@@@8	; CItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CItem@@8
rdata$r	ENDS
;	COMDAT ??_R2CItem@@8
rdata$r	SEGMENT
??_R2CItem@@8 DD FLAT:??_R1A@?0A@EA@CItem@@8		; CItem::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CItem@@8
rdata$r	SEGMENT
??_R3CItem@@8 DD 00H					; CItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCItem@@@8
_DATA	SEGMENT
??_R0?AVCItem@@@8 DD FLAT:??_7type_info@@6B@		; CItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCItem@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@CItem@@8
rdata$r	SEGMENT
??_R13?0A@EA@CItem@@8 DD FLAT:??_R0?AVCItem@@@8		; CItem::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CItem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMapItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMapItem@@8 DD FLAT:??_R0?AVCMapItem@@@8	; CMapItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMapItem@@8
rdata$r	ENDS
;	COMDAT ??_R2CMapItem@@8
rdata$r	SEGMENT
??_R2CMapItem@@8 DD FLAT:??_R1A@?0A@EA@CMapItem@@8	; CMapItem::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@CItem@@8
rdata$r	ENDS
;	COMDAT ??_R3CMapItem@@8
rdata$r	SEGMENT
??_R3CMapItem@@8 DD 00H					; CMapItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CMapItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMapItem@@@8
_DATA	SEGMENT
??_R0?AVCMapItem@@@8 DD FLAT:??_7type_info@@6B@		; CMapItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMapItem@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CMapItem@@6B@
rdata$r	SEGMENT
??_R4CMapItem@@6B@ DD 00H				; CMapItem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMapItem@@@8
	DD	FLAT:??_R3CMapItem@@8
rdata$r	ENDS
;	COMDAT ??_7CMapItem@@6B@
CONST	SEGMENT
??_7CMapItem@@6B@ DD FLAT:??_R4CMapItem@@6B@		; CMapItem::`vftable'
	DD	FLAT:??_ECMapItem@@UAEPAXI@Z
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMapItem@@QAE@XZ PROC				; CMapItem::CMapItem
; _this$ = ecx

; 9    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 04	 add	 ecx, 4
  00012	e8 00 00 00 00	 call	 ??0CItem@@QAE@XZ	; CItem::CItem
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CMapItem@@6B@

; 10   : 	this->Init();

  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ?Init@CMapItem@@QAEXXZ	; CMapItem::Init

; 11   : }

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??0CMapItem@@QAE@XZ ENDP				; CMapItem::CMapItem
_TEXT	ENDS
PUBLIC	??1CMapItem@@UAE@XZ				; CMapItem::~CMapItem
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCMapItem@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCMapItem@@UAEPAXI@Z PROC				; CMapItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CMapItem@@UAE@XZ	; CMapItem::~CMapItem
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCMapItem@@UAEPAXI@Z ENDP				; CMapItem::`scalar deleting destructor'
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CMapItem@@UAE@XZ PROC				; CMapItem::~CMapItem
; _this$ = ecx

; 14   : {

  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
  00043	83 ec 44	 sub	 esp, 68			; 00000044H
  00046	53		 push	 ebx
  00047	56		 push	 esi
  00048	57		 push	 edi
  00049	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CMapItem@@6B@

; 15   : 	return;
; 16   : 
; 17   : }

  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
??1CMapItem@@UAE@XZ ENDP				; CMapItem::~CMapItem
_TEXT	ENDS
EXTRN	_memset:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_n$227621 = -8						; size = 4
_this$ = -4						; size = 4
?Init@CMapItem@@QAEXXZ PROC				; CMapItem::Init
; _this$ = ecx

; 20   : {

  00060	55		 push	 ebp
  00061	8b ec		 mov	 ebp, esp
  00063	83 ec 48	 sub	 esp, 72			; 00000048H
  00066	53		 push	 ebx
  00067	56		 push	 esi
  00068	57		 push	 edi
  00069	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 21   : 	this->VPCount = 0;

  0006c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	c7 80 70 04 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+1136], 0

; 22   : 	this->m_State = 0;

  00079	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	c7 80 dc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+220], 0

; 23   : 
; 24   : 	for ( int n=0;n<MAX_VIEWPORT;n++ )

  00086	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _n$227621[ebp], 0
  0008d	eb 09		 jmp	 SHORT $LN3@Init
$LN2@Init:
  0008f	8b 45 f8	 mov	 eax, DWORD PTR _n$227621[ebp]
  00092	83 c0 01	 add	 eax, 1
  00095	89 45 f8	 mov	 DWORD PTR _n$227621[ebp], eax
$LN3@Init:
  00098	83 7d f8 4b	 cmp	 DWORD PTR _n$227621[ebp], 75 ; 0000004bH
  0009c	7d 1f		 jge	 SHORT $LN4@Init

; 25   : 	{
; 26   : 		memset(&this->VpPlayer[n], 0, sizeof(VIEWPORT_PLAYER_STRUCT));

  0009e	6a 0c		 push	 12			; 0000000cH
  000a0	6a 00		 push	 0
  000a2	8b 45 f8	 mov	 eax, DWORD PTR _n$227621[ebp]
  000a5	6b c0 0c	 imul	 eax, 12			; 0000000cH
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	8d 94 01 ec 00
	00 00		 lea	 edx, DWORD PTR [ecx+eax+236]
  000b2	52		 push	 edx
  000b3	e8 00 00 00 00	 call	 _memset
  000b8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 27   : 	}

  000bb	eb d2		 jmp	 SHORT $LN2@Init
$LN4@Init:

; 28   : }

  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c3		 ret	 0
?Init@CMapItem@@QAEXXZ ENDP				; CMapItem::Init
_TEXT	ENDS
PUBLIC	?CreateItem@CMapItem@@QAEXHHHHMEEEEEKEQAEE@Z	; CMapItem::CreateItem
EXTRN	?gLootingTime@@3HA:DWORD			; gLootingTime
EXTRN	?Ex_ItemsDurationTime@@3HA:DWORD		; Ex_ItemsDurationTime
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	?Convert@CItem@@QAEXHEEEEEEPAEEEE@Z:PROC	; CItem::Convert
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_Ex_Duration$227645 = -8				; size = 4
_this$ = -4						; size = 4
_type$ = 8						; size = 4
_level$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_dur$ = 24						; size = 4
_Option1$ = 28						; size = 1
_Option2$ = 32						; size = 1
_Option3$ = 36						; size = 1
_NOption$ = 40						; size = 1
_SOption$ = 44						; size = 1
_number$ = 48						; size = 4
_ItemEffectEx$ = 52					; size = 1
_SocketOption$ = 56					; size = 4
_SocketIndex$ = 60					; size = 1
?CreateItem@CMapItem@@QAEXHHHHMEEEEEKEQAEE@Z PROC	; CMapItem::CreateItem
; _this$ = ecx

; 31   : {

  000d0	55		 push	 ebp
  000d1	8b ec		 mov	 ebp, esp
  000d3	83 ec 48	 sub	 esp, 72			; 00000048H
  000d6	53		 push	 ebx
  000d7	56		 push	 esi
  000d8	57		 push	 edi
  000d9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 32   : 	this->Init();

  000dc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000df	e8 00 00 00 00	 call	 ?Init@CMapItem@@QAEXXZ	; CMapItem::Init

; 33   : 
; 34   : 	this->m_Level = level;

  000e4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e7	66 8b 4d 0c	 mov	 cx, WORD PTR _level$[ebp]
  000eb	66 89 48 0c	 mov	 WORD PTR [eax+12], cx

; 35   : 	this->m_Durability = dur;

  000ef	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f2	d9 45 18	 fld	 DWORD PTR _dur$[ebp]
  000f5	d9 58 28	 fstp	 DWORD PTR [eax+40]

; 36   : 	this->Convert(type, Option1, Option2, Option3, NOption, SOption, ItemEffectEx, SocketOption, SocketIndex, 0, CURRENT_DB_VERSION);

  000f8	6a 03		 push	 3
  000fa	6a 00		 push	 0
  000fc	0f b6 45 3c	 movzx	 eax, BYTE PTR _SocketIndex$[ebp]
  00100	50		 push	 eax
  00101	8b 4d 38	 mov	 ecx, DWORD PTR _SocketOption$[ebp]
  00104	51		 push	 ecx
  00105	0f b6 55 34	 movzx	 edx, BYTE PTR _ItemEffectEx$[ebp]
  00109	52		 push	 edx
  0010a	0f b6 45 2c	 movzx	 eax, BYTE PTR _SOption$[ebp]
  0010e	50		 push	 eax
  0010f	0f b6 4d 28	 movzx	 ecx, BYTE PTR _NOption$[ebp]
  00113	51		 push	 ecx
  00114	0f b6 55 24	 movzx	 edx, BYTE PTR _Option3$[ebp]
  00118	52		 push	 edx
  00119	0f b6 45 20	 movzx	 eax, BYTE PTR _Option2$[ebp]
  0011d	50		 push	 eax
  0011e	0f b6 4d 1c	 movzx	 ecx, BYTE PTR _Option1$[ebp]
  00122	51		 push	 ecx
  00123	8b 55 08	 mov	 edx, DWORD PTR _type$[ebp]
  00126	52		 push	 edx
  00127	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0012a	83 c1 04	 add	 ecx, 4
  0012d	e8 00 00 00 00	 call	 ?Convert@CItem@@QAEXHEEEEEEPAEEEE@Z ; CItem::Convert

; 37   : 	this->px = x;

  00132	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00135	8a 4d 10	 mov	 cl, BYTE PTR _x$[ebp]
  00138	88 88 d8 00 00
	00		 mov	 BYTE PTR [eax+216], cl

; 38   : 	this->py= y;

  0013e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00141	8a 4d 14	 mov	 cl, BYTE PTR _y$[ebp]
  00144	88 88 d9 00 00
	00		 mov	 BYTE PTR [eax+217], cl

; 39   : 	this->live = true;

  0014a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0014d	c6 80 da 00 00
	00 01		 mov	 BYTE PTR [eax+218], 1

; 40   : 	this->Give = false;

  00154	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00157	c6 80 db 00 00
	00 00		 mov	 BYTE PTR [eax+219], 0

; 41   : 	this->m_State = 1;

  0015e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00161	c7 80 dc 00 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+220], 1

; 42   : 
; 43   : 	if ( this->m_QuestItem != false )

  0016b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0016e	0f b6 88 b1 00
	00 00		 movzx	 ecx, BYTE PTR [eax+177]
  00175	85 c9		 test	 ecx, ecx
  00177	74 33		 je	 SHORT $LN2@CreateItem

; 44   : 	{
; 45   : 		this->m_Time = GetTickCount() + 60000;

  00179	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0017f	05 60 ea 00 00	 add	 eax, 60000		; 0000ea60H
  00184	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00187	89 81 e0 00 00
	00		 mov	 DWORD PTR [ecx+224], eax

; 46   : 		this->m_LootTime = GetTickCount() + 600000;

  0018d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00193	05 c0 27 09 00	 add	 eax, 600000		; 000927c0H
  00198	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0019b	89 81 e8 00 00
	00		 mov	 DWORD PTR [ecx+232], eax

; 47   : 		this->m_Number = number;

  001a1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001a4	8b 4d 30	 mov	 ecx, DWORD PTR _number$[ebp]
  001a7	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 48   : 	}
; 49   : 	else

  001aa	eb 46		 jmp	 SHORT $LN1@CreateItem
$LN2@CreateItem:

; 50   : 	{
; 51   : 		//int Ex_ItemsDurationTime = GetPrivateProfileInt("Items","ItemsDurationTime",120,"..\\Data\\ExData\\CommonServer.ini");
; 52   : 		int Ex_Duration	= Ex_ItemsDurationTime * 1000;

  001ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?Ex_ItemsDurationTime@@3HA ; Ex_ItemsDurationTime
  001b1	69 c0 e8 03 00
	00		 imul	 eax, 1000		; 000003e8H
  001b7	89 45 f8	 mov	 DWORD PTR _Ex_Duration$227645[ebp], eax

; 53   : 		this->m_Time = GetTickCount() + Ex_Duration;

  001ba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  001c0	03 45 f8	 add	 eax, DWORD PTR _Ex_Duration$227645[ebp]
  001c3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001c6	89 81 e0 00 00
	00		 mov	 DWORD PTR [ecx+224], eax

; 54   : 		this->m_LootTime = GetTickCount() + gLootingTime*1000;

  001cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  001d2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gLootingTime@@3HA ; gLootingTime
  001d8	69 c9 e8 03 00
	00		 imul	 ecx, 1000		; 000003e8H
  001de	03 c1		 add	 eax, ecx
  001e0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001e3	89 82 e8 00 00
	00		 mov	 DWORD PTR [edx+232], eax

; 55   : 		this->m_Number = number;

  001e9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001ec	8b 4d 30	 mov	 ecx, DWORD PTR _number$[ebp]
  001ef	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN1@CreateItem:

; 56   : 	}
; 57   : 
; 58   : }

  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
  001f5	8b e5		 mov	 esp, ebp
  001f7	5d		 pop	 ebp
  001f8	c2 38 00	 ret	 56			; 00000038H
?CreateItem@CMapItem@@QAEXHHHHMEEEEEKEQAEE@Z ENDP	; CMapItem::CreateItem
_TEXT	ENDS
PUBLIC	?DropCreateItem@CMapItem@@QAEXHHHHMEEEEEKHHEQAEE@Z ; CMapItem::DropCreateItem
EXTRN	?SetPetItemInfo@CItem@@QAEXHH@Z:PROC		; CItem::SetPetItemInfo
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv178 = -76						; size = 4
_Ex_Duration$227671 = -8				; size = 4
_this$ = -4						; size = 4
_type$ = 8						; size = 4
_level$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_dur$ = 24						; size = 4
_Option1$ = 28						; size = 1
_Option2$ = 32						; size = 1
_Option3$ = 36						; size = 1
_NOption$ = 40						; size = 1
_SOption$ = 44						; size = 1
_number$ = 48						; size = 4
_PetLevel$ = 52						; size = 4
_PetExp$ = 56						; size = 4
_ItemEffectEx$ = 60					; size = 1
_SocketOption$ = 64					; size = 4
_SocketIndex$ = 68					; size = 1
?DropCreateItem@CMapItem@@QAEXHHHHMEEEEEKHHEQAEE@Z PROC	; CMapItem::DropCreateItem
; _this$ = ecx

; 61   : {

  00200	55		 push	 ebp
  00201	8b ec		 mov	 ebp, esp
  00203	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00206	53		 push	 ebx
  00207	56		 push	 esi
  00208	57		 push	 edi
  00209	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 62   : 	this->Init();

  0020c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0020f	e8 00 00 00 00	 call	 ?Init@CMapItem@@QAEXXZ	; CMapItem::Init

; 63   : 
; 64   : 	this->m_Level = level;

  00214	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00217	66 8b 4d 0c	 mov	 cx, WORD PTR _level$[ebp]
  0021b	66 89 48 0c	 mov	 WORD PTR [eax+12], cx

; 65   : 	this->m_Durability = dur;

  0021f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00222	d9 45 18	 fld	 DWORD PTR _dur$[ebp]
  00225	d9 58 28	 fstp	 DWORD PTR [eax+40]

; 66   : 	this->Convert(type, Option1, Option2, Option3, NOption, SOption, ItemEffectEx, SocketOption, SocketIndex, 0, CURRENT_DB_VERSION);

  00228	6a 03		 push	 3
  0022a	6a 00		 push	 0
  0022c	0f b6 45 44	 movzx	 eax, BYTE PTR _SocketIndex$[ebp]
  00230	50		 push	 eax
  00231	8b 4d 40	 mov	 ecx, DWORD PTR _SocketOption$[ebp]
  00234	51		 push	 ecx
  00235	0f b6 55 3c	 movzx	 edx, BYTE PTR _ItemEffectEx$[ebp]
  00239	52		 push	 edx
  0023a	0f b6 45 2c	 movzx	 eax, BYTE PTR _SOption$[ebp]
  0023e	50		 push	 eax
  0023f	0f b6 4d 28	 movzx	 ecx, BYTE PTR _NOption$[ebp]
  00243	51		 push	 ecx
  00244	0f b6 55 24	 movzx	 edx, BYTE PTR _Option3$[ebp]
  00248	52		 push	 edx
  00249	0f b6 45 20	 movzx	 eax, BYTE PTR _Option2$[ebp]
  0024d	50		 push	 eax
  0024e	0f b6 4d 1c	 movzx	 ecx, BYTE PTR _Option1$[ebp]
  00252	51		 push	 ecx
  00253	8b 55 08	 mov	 edx, DWORD PTR _type$[ebp]
  00256	52		 push	 edx
  00257	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0025a	83 c1 04	 add	 ecx, 4
  0025d	e8 00 00 00 00	 call	 ?Convert@CItem@@QAEXHEEEEEEPAEEEE@Z ; CItem::Convert

; 67   : 	this->SetPetItemInfo(PetLevel, PetExp);

  00262	8b 45 38	 mov	 eax, DWORD PTR _PetExp$[ebp]
  00265	50		 push	 eax
  00266	8b 4d 34	 mov	 ecx, DWORD PTR _PetLevel$[ebp]
  00269	51		 push	 ecx
  0026a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0026d	83 c1 04	 add	 ecx, 4
  00270	e8 00 00 00 00	 call	 ?SetPetItemInfo@CItem@@QAEXHH@Z ; CItem::SetPetItemInfo

; 68   : 	this->px = x;

  00275	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00278	8a 4d 10	 mov	 cl, BYTE PTR _x$[ebp]
  0027b	88 88 d8 00 00
	00		 mov	 BYTE PTR [eax+216], cl

; 69   : 	this->py= y;

  00281	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00284	8a 4d 14	 mov	 cl, BYTE PTR _y$[ebp]
  00287	88 88 d9 00 00
	00		 mov	 BYTE PTR [eax+217], cl

; 70   : 	this->live = true;

  0028d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00290	c6 80 da 00 00
	00 01		 mov	 BYTE PTR [eax+218], 1

; 71   : 	this->Give = false;

  00297	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0029a	c6 80 db 00 00
	00 00		 mov	 BYTE PTR [eax+219], 0

; 72   : 	this->m_State = 1;

  002a1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002a4	c7 80 dc 00 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+220], 1

; 73   : 
; 74   : 	if ( this->m_QuestItem != false )

  002ae	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002b1	0f b6 88 b1 00
	00 00		 movzx	 ecx, BYTE PTR [eax+177]
  002b8	85 c9		 test	 ecx, ecx
  002ba	74 52		 je	 SHORT $LN9@DropCreate

; 75   : 	{
; 76   : 		if ( type == ITEMGET(14,11) )

  002bc	81 7d 08 0b 1c
	00 00		 cmp	 DWORD PTR _type$[ebp], 7179 ; 00001c0bH
  002c3	75 16		 jne	 SHORT $LN8@DropCreate

; 77   : 		{
; 78   : 			this->m_Time = GetTickCount() + 1000;

  002c5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  002cb	05 e8 03 00 00	 add	 eax, 1000		; 000003e8H
  002d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002d3	89 81 e0 00 00
	00		 mov	 DWORD PTR [ecx+224], eax

; 79   : 		}
; 80   : 		else

  002d9	eb 14		 jmp	 SHORT $LN7@DropCreate
$LN8@DropCreate:

; 81   : 		{
; 82   : 			this->m_Time = GetTickCount() + 60000;

  002db	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  002e1	05 60 ea 00 00	 add	 eax, 60000		; 0000ea60H
  002e6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002e9	89 81 e0 00 00
	00		 mov	 DWORD PTR [ecx+224], eax
$LN7@DropCreate:

; 83   : 		}
; 84   : 
; 85   : 		this->m_LootTime = GetTickCount() + 600000;

  002ef	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  002f5	05 c0 27 09 00	 add	 eax, 600000		; 000927c0H
  002fa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002fd	89 81 e8 00 00
	00		 mov	 DWORD PTR [ecx+232], eax

; 86   : 		this->m_Number = number;

  00303	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00306	8b 4d 30	 mov	 ecx, DWORD PTR _number$[ebp]
  00309	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 87   : 	}
; 88   : 	else 

  0030c	eb 65		 jmp	 SHORT $LN6@DropCreate
$LN9@DropCreate:

; 89   : 	{
; 90   : 		if ( type == ITEMGET(14,11) )

  0030e	81 7d 08 0b 1c
	00 00		 cmp	 DWORD PTR _type$[ebp], 7179 ; 00001c0bH
  00315	75 16		 jne	 SHORT $LN5@DropCreate

; 91   : 		{
; 92   : 			this->m_Time = GetTickCount() + 1000;

  00317	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0031d	05 e8 03 00 00	 add	 eax, 1000		; 000003e8H
  00322	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00325	89 81 e0 00 00
	00		 mov	 DWORD PTR [ecx+224], eax

; 93   : 		}
; 94   : 		else

  0032b	eb 20		 jmp	 SHORT $LN4@DropCreate
$LN5@DropCreate:

; 95   : 		{
; 96   : 			int Ex_Duration	= Ex_ItemsDurationTime * 1000;

  0032d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?Ex_ItemsDurationTime@@3HA ; Ex_ItemsDurationTime
  00332	69 c0 e8 03 00
	00		 imul	 eax, 1000		; 000003e8H
  00338	89 45 f8	 mov	 DWORD PTR _Ex_Duration$227671[ebp], eax

; 97   : 			this->m_Time = GetTickCount() + Ex_Duration;

  0033b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00341	03 45 f8	 add	 eax, DWORD PTR _Ex_Duration$227671[ebp]
  00344	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00347	89 81 e0 00 00
	00		 mov	 DWORD PTR [ecx+224], eax
$LN4@DropCreate:

; 98   : 		}
; 99   : 
; 100  : 		this->m_LootTime = GetTickCount() + gLootingTime*1000;

  0034d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00353	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gLootingTime@@3HA ; gLootingTime
  00359	69 c9 e8 03 00
	00		 imul	 ecx, 1000		; 000003e8H
  0035f	03 c1		 add	 eax, ecx
  00361	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00364	89 82 e8 00 00
	00		 mov	 DWORD PTR [edx+232], eax

; 101  : 		this->m_Number = number;

  0036a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0036d	8b 4d 30	 mov	 ecx, DWORD PTR _number$[ebp]
  00370	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN6@DropCreate:

; 102  : 	}
; 103  : 
; 104  : 	if ( type == ITEMGET(13,19) )

  00373	81 7d 08 13 1a
	00 00		 cmp	 DWORD PTR _type$[ebp], 6675 ; 00001a13H
  0037a	75 44		 jne	 SHORT $LN2@DropCreate

; 105  : 	{
; 106  : 		if ( ( level  < 0)?FALSE:(level>2)?FALSE:TRUE)

  0037c	83 7d 0c 00	 cmp	 DWORD PTR _level$[ebp], 0
  00380	7d 09		 jge	 SHORT $LN12@DropCreate
  00382	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv178[ebp], 0
  00389	eb 0c		 jmp	 SHORT $LN13@DropCreate
$LN12@DropCreate:
  0038b	33 c0		 xor	 eax, eax
  0038d	83 7d 0c 02	 cmp	 DWORD PTR _level$[ebp], 2
  00391	0f 9e c0	 setle	 al
  00394	89 45 b4	 mov	 DWORD PTR tv178[ebp], eax
$LN13@DropCreate:
  00397	83 7d b4 00	 cmp	 DWORD PTR tv178[ebp], 0
  0039b	74 23		 je	 SHORT $LN2@DropCreate

; 107  : 		{
; 108  : 			this->m_Time = GetTickCount() + 900000;

  0039d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  003a3	05 a0 bb 0d 00	 add	 eax, 900000		; 000dbba0H
  003a8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003ab	89 81 e0 00 00
	00		 mov	 DWORD PTR [ecx+224], eax

; 109  : 			this->m_LootTime = GetTickCount();

  003b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  003b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003ba	89 81 e8 00 00
	00		 mov	 DWORD PTR [ecx+232], eax
$LN2@DropCreate:

; 110  : 		}
; 111  : 	}
; 112  : 
; 113  : 	if ( type == ITEMGET(14,64) )

  003c0	81 7d 08 40 1c
	00 00		 cmp	 DWORD PTR _type$[ebp], 7232 ; 00001c40H
  003c7	75 14		 jne	 SHORT $LN1@DropCreate

; 114  : 	{
; 115  : 		this->m_Time = GetTickCount() + 20000;

  003c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  003cf	05 20 4e 00 00	 add	 eax, 20000		; 00004e20H
  003d4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003d7	89 81 e0 00 00
	00		 mov	 DWORD PTR [ecx+224], eax
$LN1@DropCreate:

; 116  : 	}
; 117  : }

  003dd	5f		 pop	 edi
  003de	5e		 pop	 esi
  003df	5b		 pop	 ebx
  003e0	8b e5		 mov	 esp, ebp
  003e2	5d		 pop	 ebp
  003e3	c2 40 00	 ret	 64			; 00000040H
?DropCreateItem@CMapItem@@QAEXHHHHMEEEEEKHHEQAEE@Z ENDP	; CMapItem::DropCreateItem
_TEXT	ENDS
END
