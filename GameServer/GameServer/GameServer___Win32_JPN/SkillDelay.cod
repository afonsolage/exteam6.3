; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\SkillDelay.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?Init@CSkillDelay@@QAEXXZ			; CSkillDelay::Init
PUBLIC	??_7CSkillDelay@@6B@				; CSkillDelay::`vftable'
PUBLIC	??0CSkillDelay@@QAE@XZ				; CSkillDelay::CSkillDelay
PUBLIC	??_R4CSkillDelay@@6B@				; CSkillDelay::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSkillDelay@@@8				; CSkillDelay `RTTI Type Descriptor'
PUBLIC	??_R3CSkillDelay@@8				; CSkillDelay::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSkillDelay@@8				; CSkillDelay::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSkillDelay@@8			; CSkillDelay::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECSkillDelay@@UAEPAXI@Z:PROC			; CSkillDelay::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CSkillDelay@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\skilldelay.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CSkillDelay@@8 DD FLAT:??_R0?AVCSkillDelay@@@8 ; CSkillDelay::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSkillDelay@@8
rdata$r	ENDS
;	COMDAT ??_R2CSkillDelay@@8
rdata$r	SEGMENT
??_R2CSkillDelay@@8 DD FLAT:??_R1A@?0A@EA@CSkillDelay@@8 ; CSkillDelay::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CSkillDelay@@8
rdata$r	SEGMENT
??_R3CSkillDelay@@8 DD 00H				; CSkillDelay::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CSkillDelay@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSkillDelay@@@8
_DATA	SEGMENT
??_R0?AVCSkillDelay@@@8 DD FLAT:??_7type_info@@6B@	; CSkillDelay `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSkillDelay@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CSkillDelay@@6B@
rdata$r	SEGMENT
??_R4CSkillDelay@@6B@ DD 00H				; CSkillDelay::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSkillDelay@@@8
	DD	FLAT:??_R3CSkillDelay@@8
rdata$r	ENDS
;	COMDAT ??_7CSkillDelay@@6B@
CONST	SEGMENT
??_7CSkillDelay@@6B@ DD FLAT:??_R4CSkillDelay@@6B@	; CSkillDelay::`vftable'
	DD	FLAT:??_ECSkillDelay@@UAEPAXI@Z
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CSkillDelay@@QAE@XZ PROC				; CSkillDelay::CSkillDelay
; _this$ = ecx

; 5    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CSkillDelay@@6B@

; 6    : 	this->Init();

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?Init@CSkillDelay@@QAEXXZ ; CSkillDelay::Init

; 7    : }

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0CSkillDelay@@QAE@XZ ENDP				; CSkillDelay::CSkillDelay
_TEXT	ENDS
PUBLIC	??1CSkillDelay@@UAE@XZ				; CSkillDelay::~CSkillDelay
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCSkillDelay@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCSkillDelay@@UAEPAXI@Z PROC				; CSkillDelay::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCSkillDelay@@UAEPAXI@Z ENDP				; CSkillDelay::`scalar deleting destructor'
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CSkillDelay@@UAE@XZ PROC				; CSkillDelay::~CSkillDelay
; _this$ = ecx

; 11   : {

  00030	55		 push	 ebp
  00031	8b ec		 mov	 ebp, esp
  00033	83 ec 44	 sub	 esp, 68			; 00000044H
  00036	53		 push	 ebx
  00037	56		 push	 esi
  00038	57		 push	 edi
  00039	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CSkillDelay@@6B@

; 12   : 	return;
; 13   : }

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??1CSkillDelay@@UAE@XZ ENDP				; CSkillDelay::~CSkillDelay
_TEXT	ENDS
EXTRN	_memset:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@CSkillDelay@@QAEXXZ PROC				; CSkillDelay::Init
; _this$ = ecx

; 17   : {

  00050	55		 push	 ebp
  00051	8b ec		 mov	 ebp, esp
  00053	83 ec 44	 sub	 esp, 68			; 00000044H
  00056	53		 push	 ebx
  00057	56		 push	 esi
  00058	57		 push	 edi
  00059	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 18   : 	memset(this->LastSkillUseTime, 0, sizeof(this->LastSkillUseTime) );

  0005c	68 60 09 00 00	 push	 2400			; 00000960H
  00061	6a 00		 push	 0
  00063	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00066	83 c0 04	 add	 eax, 4
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 _memset
  0006f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 19   : }

  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	5b		 pop	 ebx
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
?Init@CSkillDelay@@QAEXXZ ENDP				; CSkillDelay::Init
_TEXT	ENDS
PUBLIC	?Check@CSkillDelay@@QAEHE@Z			; CSkillDelay::Check
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_skill$ = 8						; size = 1
?Check@CSkillDelay@@QAEHE@Z PROC			; CSkillDelay::Check
; _this$ = ecx

; 24   : {

  00080	55		 push	 ebp
  00081	8b ec		 mov	 ebp, esp
  00083	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00086	53		 push	 ebx
  00087	56		 push	 esi
  00088	57		 push	 edi
  00089	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 25   : 	int skilldelaytime;
; 26   : 	DWORD dwtime;
; 27   : 	return 1;

  0008c	b8 01 00 00 00	 mov	 eax, 1

; 28   : }

  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx
  00094	8b e5		 mov	 esp, ebp
  00096	5d		 pop	 ebp
  00097	c2 04 00	 ret	 4
?Check@CSkillDelay@@QAEHE@Z ENDP			; CSkillDelay::Check
_TEXT	ENDS
END
