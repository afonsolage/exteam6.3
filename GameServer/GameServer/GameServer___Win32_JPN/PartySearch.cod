; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\PartySearch.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_PartySearch@@3VPartySearch@@A		; g_PartySearch
_BSS	SEGMENT
?g_PartySearch@@3VPartySearch@@A DB 015f4H DUP (?)	; g_PartySearch
_BSS	ENDS
_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?Init@PartySearch@@QAEXXZ			; PartySearch::Init
EXTRN	_memset:PROC
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\partysearch.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@PartySearch@@QAEXXZ PROC				; PartySearch::Init
; _this$ = ecx

; 16   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 17   : 	this->ActiveSystem = false;	//Active System

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c6 00 00	 mov	 BYTE PTR [eax], 0

; 18   : 	ZeroMemory(&this->Party,sizeof(this->Party));

  00012	68 e0 15 00 00	 push	 5600			; 000015e0H
  00017	6a 00		 push	 0
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	83 c0 14	 add	 eax, 20			; 00000014H
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 _memset
  00025	83 c4 0c	 add	 esp, 12			; 0000000cH

; 19   : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?Init@PartySearch@@QAEXXZ ENDP				; PartySearch::Init
_TEXT	ENDS
PUBLIC	?Read@PartySearch@@QAEXPAD@Z			; PartySearch::Read
PUBLIC	??_C@_0BH@PGLMJDDF@ExData?2PartySearch?4txt?$AA@ ; `string'
PUBLIC	?Load@PartySearch@@QAEXXZ			; PartySearch::Load
EXTRN	?GetNewPath@CDirPath@@QAEPADPAD@Z:PROC		; CDirPath::GetNewPath
EXTRN	?gDirPath@@3VCDirPath@@A:BYTE			; gDirPath
EXTRN	?g_ExLicense@@3VCExLicense@@A:BYTE		; g_ExLicense
;	COMDAT ??_C@_0BH@PGLMJDDF@ExData?2PartySearch?4txt?$AA@
CONST	SEGMENT
??_C@_0BH@PGLMJDDF@ExData?2PartySearch?4txt?$AA@ DB 'ExData\PartySearch.t'
	DB	'xt', 00H					; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Load@PartySearch@@QAEXXZ PROC				; PartySearch::Load
; _this$ = ecx

; 23   : {

  00030	55		 push	 ebp
  00031	8b ec		 mov	 ebp, esp
  00033	83 ec 44	 sub	 esp, 68			; 00000044H
  00036	53		 push	 ebx
  00037	56		 push	 esi
  00038	57		 push	 edi
  00039	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 24   : 	if(g_ExLicense.user.PartySearch == false)

  0003c	0f b6 05 d1 00
	00 00		 movzx	 eax, BYTE PTR ?g_ExLicense@@3VCExLicense@@A+209
  00043	85 c0		 test	 eax, eax
  00045	75 02		 jne	 SHORT $LN1@Load

; 25   : 	{
; 26   : 		return;

  00047	eb 20		 jmp	 SHORT $LN2@Load
$LN1@Load:

; 27   : 	}
; 28   : 	this->Init();

  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?Init@PartySearch@@QAEXXZ ; PartySearch::Init

; 29   : 
; 30   : 	this->Read(gDirPath.GetNewPath("ExData\\PartySearch.txt"));

  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@PGLMJDDF@ExData?2PartySearch?4txt?$AA@
  00056	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  0005b	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00060	50		 push	 eax
  00061	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?Read@PartySearch@@QAEXPAD@Z ; PartySearch::Read
$LN2@Load:

; 31   : }

  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi
  0006b	5b		 pop	 ebx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c3		 ret	 0
?Load@PartySearch@@QAEXXZ ENDP				; PartySearch::Load
_TEXT	ENDS
PUBLIC	??_C@_05MGEEICMI@NPC_Y?$AA@			; `string'
PUBLIC	??_C@_05NPFPLDIJ@NPC_X?$AA@			; `string'
PUBLIC	??_C@_07BEANADGF@NPC_MAP?$AA@			; `string'
PUBLIC	??_C@_09FENANBBA@NPC_CLASS?$AA@			; `string'
PUBLIC	??_C@_06POMJKEPM@Common?$AA@			; `string'
PUBLIC	??_C@_0N@ENJHELDG@ActiveSystem?$AA@		; `string'
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
EXTRN	?CheckFile@@YA_NPAD@Z:PROC			; CheckFile
;	COMDAT ??_C@_05MGEEICMI@NPC_Y?$AA@
CONST	SEGMENT
??_C@_05MGEEICMI@NPC_Y?$AA@ DB 'NPC_Y', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05NPFPLDIJ@NPC_X?$AA@
CONST	SEGMENT
??_C@_05NPFPLDIJ@NPC_X?$AA@ DB 'NPC_X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07BEANADGF@NPC_MAP?$AA@
CONST	SEGMENT
??_C@_07BEANADGF@NPC_MAP?$AA@ DB 'NPC_MAP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09FENANBBA@NPC_CLASS?$AA@
CONST	SEGMENT
??_C@_09FENANBBA@NPC_CLASS?$AA@ DB 'NPC_CLASS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06POMJKEPM@Common?$AA@
CONST	SEGMENT
??_C@_06POMJKEPM@Common?$AA@ DB 'Common', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ENJHELDG@ActiveSystem?$AA@
CONST	SEGMENT
??_C@_0N@ENJHELDG@ActiveSystem?$AA@ DB 'ActiveSystem', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_File$ = 8						; size = 4
?Read@PartySearch@@QAEXPAD@Z PROC			; PartySearch::Read
; _this$ = ecx

; 35   : {

  00070	55		 push	 ebp
  00071	8b ec		 mov	 ebp, esp
  00073	83 ec 44	 sub	 esp, 68			; 00000044H
  00076	53		 push	 ebx
  00077	56		 push	 esi
  00078	57		 push	 edi
  00079	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 36   : 	CheckFile(File);

  0007c	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ?CheckFile@@YA_NPAD@Z	; CheckFile
  00085	83 c4 04	 add	 esp, 4

; 37   : 
; 38   : 	this->ActiveSystem = GetPrivateProfileInt("Common", "ActiveSystem", 0, File);

  00088	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  0008b	50		 push	 eax
  0008c	6a 00		 push	 0
  0008e	68 00 00 00 00	 push	 OFFSET ??_C@_0N@ENJHELDG@ActiveSystem?$AA@
  00093	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  00098	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0009e	85 c0		 test	 eax, eax
  000a0	0f 95 c1	 setne	 cl
  000a3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a6	88 0a		 mov	 BYTE PTR [edx], cl

; 39   : 
; 40   : 	this->NPC_CLASS = GetPrivateProfileInt("Common", "NPC_CLASS", 0, File);

  000a8	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  000ab	50		 push	 eax
  000ac	6a 00		 push	 0
  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_09FENANBBA@NPC_CLASS?$AA@
  000b3	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  000b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  000be	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 41   : 	this->NPC_MAP = GetPrivateProfileInt("Common", "NPC_MAP", 0, File);

  000c4	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  000c7	50		 push	 eax
  000c8	6a 00		 push	 0
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_07BEANADGF@NPC_MAP?$AA@
  000cf	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  000d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  000da	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000dd	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 42   : 	this->NPC_X = GetPrivateProfileInt("Common", "NPC_X", 0, File);

  000e0	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  000e3	50		 push	 eax
  000e4	6a 00		 push	 0
  000e6	68 00 00 00 00	 push	 OFFSET ??_C@_05NPFPLDIJ@NPC_X?$AA@
  000eb	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  000f0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  000f6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f9	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 43   : 	this->NPC_Y = GetPrivateProfileInt("Common", "NPC_Y", 0, File);

  000fc	8b 45 08	 mov	 eax, DWORD PTR _File$[ebp]
  000ff	50		 push	 eax
  00100	6a 00		 push	 0
  00102	68 00 00 00 00	 push	 OFFSET ??_C@_05MGEEICMI@NPC_Y?$AA@
  00107	68 00 00 00 00	 push	 OFFSET ??_C@_06POMJKEPM@Common?$AA@
  0010c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00112	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00115	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 44   : }

  00118	5f		 pop	 edi
  00119	5e		 pop	 esi
  0011a	5b		 pop	 ebx
  0011b	8b e5		 mov	 esp, ebp
  0011d	5d		 pop	 ebp
  0011e	c2 04 00	 ret	 4
?Read@PartySearch@@QAEXPAD@Z ENDP			; PartySearch::Read
_TEXT	ENDS
PUBLIC	?NPC_Dialod@PartySearch@@QAE_NHH@Z		; PartySearch::NPC_Dialod
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_aNpcIndex$ = 12					; size = 4
?NPC_Dialod@PartySearch@@QAE_NHH@Z PROC			; PartySearch::NPC_Dialod
; _this$ = ecx

; 48   : {

  00130	55		 push	 ebp
  00131	8b ec		 mov	 ebp, esp
  00133	83 ec 44	 sub	 esp, 68			; 00000044H
  00136	53		 push	 ebx
  00137	56		 push	 esi
  00138	57		 push	 edi
  00139	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 49   : 	return false;

  0013c	32 c0		 xor	 al, al

; 50   : 	/*
; 51   : 	if(!this->ActiveSystem)
; 52   : 	{
; 53   :  		return false;
; 54   : 	}
; 55   : 
; 56   : 	if(!gObjIsConnectedEx(aIndex))
; 57   : 	{
; 58   : 		return false;
; 59   : 	}
; 60   : 
; 61   : 	LPOBJ lpUser = &gObj[aIndex];
; 62   : 	LPOBJ lpNpc = &gObj[aNpcIndex];
; 63   : 
; 64   : 	if(		lpNpc->Class		== this->NPC_CLASS 
; 65   : 		&&	lpNpc->MapNumber	== this->NPC_MAP
; 66   : 		&&	lpNpc->X			== this->NPC_X
; 67   : 		&&	lpNpc->Y			== this->NPC_Y )
; 68   : 	{
; 69   : 		this->Search(lpUser->m_Index);
; 70   : 		return true;
; 71   : 	}
; 72   : 	// ----
; 73   : 	return false;
; 74   : 	*/
; 75   : }

  0013e	5f		 pop	 edi
  0013f	5e		 pop	 esi
  00140	5b		 pop	 ebx
  00141	8b e5		 mov	 esp, ebp
  00143	5d		 pop	 ebp
  00144	c2 08 00	 ret	 8
?NPC_Dialod@PartySearch@@QAE_NHH@Z ENDP			; PartySearch::NPC_Dialod
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?Search@PartySearch@@QAEXH@Z			; PartySearch::Search
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	_memcpy:PROC
EXTRN	?GetCount@PartyClass@@QAEHH@Z:PROC		; PartyClass::GetCount
EXTRN	_strncpy:PROC
EXTRN	?Isleader@PartyClass@@QAEHHHH@Z:PROC		; PartyClass::Isleader
EXTRN	?gParty@@3VPartyClass@@A:BYTE			; gParty
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?gObjIsConnectedEx@@YA_NH@Z:PROC		; gObjIsConnectedEx
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_lpPartyObj$227462 = -5072				; size = 4
_number$227460 = -5068					; size = 4
_p$227456 = -5064					; size = 4
_ap$227453 = -5060					; size = 28
_partynum$227450 = -5032				; size = 4
_lpSearch$227447 = -5028				; size = 4
_n$227443 = -5024					; size = 4
_icount$ = -5017					; size = 1
_datasize$ = -5016					; size = 4
_SendBuff$ = -5012					; size = 5000
_lpUser$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?Search@PartySearch@@QAEXH@Z PROC			; PartySearch::Search
; _this$ = ecx

; 79   : {

  00150	55		 push	 ebp
  00151	8b ec		 mov	 ebp, esp
  00153	b8 10 14 00 00	 mov	 eax, 5136		; 00001410H
  00158	e8 00 00 00 00	 call	 __chkstk
  0015d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00162	33 c5		 xor	 eax, ebp
  00164	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00167	53		 push	 ebx
  00168	56		 push	 esi
  00169	57		 push	 edi
  0016a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 80   : 	if(!this->ActiveSystem)

  0016d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00170	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00173	85 c9		 test	 ecx, ecx
  00175	75 05		 jne	 SHORT $LN46@Search

; 81   : 	{
; 82   : 		return;

  00177	e9 1c 05 00 00	 jmp	 $LN47@Search
$LN46@Search:

; 83   : 	}
; 84   : 
; 85   : 	if(!gObjIsConnectedEx(aIndex))

  0017c	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0017f	50		 push	 eax
  00180	e8 00 00 00 00	 call	 ?gObjIsConnectedEx@@YA_NH@Z ; gObjIsConnectedEx
  00185	83 c4 04	 add	 esp, 4
  00188	0f b6 c8	 movzx	 ecx, al
  0018b	85 c9		 test	 ecx, ecx
  0018d	75 05		 jne	 SHORT $LN45@Search

; 86   : 	{
; 87   : 		return;

  0018f	e9 04 05 00 00	 jmp	 $LN47@Search
$LN45@Search:

; 88   : 	}
; 89   : 
; 90   : 	LPOBJ lpUser = &gObj[aIndex];

  00194	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00197	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0019d	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001a3	89 45 f4	 mov	 DWORD PTR _lpUser$[ebp], eax

; 91   : 
; 92   : 	if(lpUser->OffTrade != 0 || lpUser->OffExp!=0)

  001a6	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  001a9	83 b8 ac 22 00
	00 00		 cmp	 DWORD PTR [eax+8876], 0
  001b0	75 0c		 jne	 SHORT $LN43@Search
  001b2	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  001b5	83 b8 98 22 00
	00 00		 cmp	 DWORD PTR [eax+8856], 0
  001bc	74 05		 je	 SHORT $LN44@Search
$LN43@Search:

; 93   : 	{
; 94   : 		return;

  001be	e9 d5 04 00 00	 jmp	 $LN47@Search
$LN44@Search:

; 95   : 	}
; 96   : 
; 97   : 	BYTE SendBuff[5000];
; 98   : 	int datasize = 6;

  001c3	c7 85 68 ec ff
	ff 06 00 00 00	 mov	 DWORD PTR _datasize$[ebp], 6

; 99   : 	BYTE icount = 0;

  001cd	c6 85 67 ec ff
	ff 00		 mov	 BYTE PTR _icount$[ebp], 0

; 100  : 
; 101  : 	for(int n=OBJ_STARTUSERINDEX;n<OBJMAX;n++)

  001d4	c7 85 60 ec ff
	ff b0 36 00 00	 mov	 DWORD PTR _n$227443[ebp], 14000 ; 000036b0H
  001de	eb 0f		 jmp	 SHORT $LN42@Search
$LN41@Search:
  001e0	8b 85 60 ec ff
	ff		 mov	 eax, DWORD PTR _n$227443[ebp]
  001e6	83 c0 01	 add	 eax, 1
  001e9	89 85 60 ec ff
	ff		 mov	 DWORD PTR _n$227443[ebp], eax
$LN42@Search:
  001ef	81 bd 60 ec ff
	ff 98 3a 00 00	 cmp	 DWORD PTR _n$227443[ebp], 15000 ; 00003a98H
  001f9	0f 8d 3e 04 00
	00		 jge	 $LN40@Search

; 102  : 	{
; 103  : 		LPOBJ lpSearch = &gObj[n];

  001ff	8b 85 60 ec ff
	ff		 mov	 eax, DWORD PTR _n$227443[ebp]
  00205	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0020b	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00211	89 85 5c ec ff
	ff		 mov	 DWORD PTR _lpSearch$227447[ebp], eax

; 104  : 		if(lpSearch->Connected < PLAYER_PLAYING || !lpSearch->pt_Active) 

  00217	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227447[ebp]
  0021d	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  00221	7c 11		 jl	 SHORT $LN38@Search
  00223	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227447[ebp]
  00229	0f b6 88 74 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10356]
  00230	85 c9		 test	 ecx, ecx
  00232	75 02		 jne	 SHORT $LN39@Search
$LN38@Search:

; 105  : 		{
; 106  : 			continue;

  00234	eb aa		 jmp	 SHORT $LN41@Search
$LN39@Search:

; 107  : 		}
; 108  : 
; 109  : 		int partynum = lpSearch->PartyNumber;

  00236	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227447[ebp]
  0023c	8b 88 2c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1068]
  00242	89 8d 58 ec ff
	ff		 mov	 DWORD PTR _partynum$227450[ebp], ecx

; 110  : 		if(partynum >= 0)

  00248	83 bd 58 ec ff
	ff 00		 cmp	 DWORD PTR _partynum$227450[ebp], 0
  0024f	7c 4b		 jl	 SHORT $LN37@Search

; 111  : 		{
; 112  : 			if( !gParty.Isleader(gObj[n].PartyNumber, n, gObj[n].DBNumber) )

  00251	8b 85 60 ec ff
	ff		 mov	 eax, DWORD PTR _n$227443[ebp]
  00257	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0025d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00263	8b 54 01 2c	 mov	 edx, DWORD PTR [ecx+eax+44]
  00267	52		 push	 edx
  00268	8b 85 60 ec ff
	ff		 mov	 eax, DWORD PTR _n$227443[ebp]
  0026e	50		 push	 eax
  0026f	8b 8d 60 ec ff
	ff		 mov	 ecx, DWORD PTR _n$227443[ebp]
  00275	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  0027b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00281	8b 84 0a 2c 04
	00 00		 mov	 eax, DWORD PTR [edx+ecx+1068]
  00288	50		 push	 eax
  00289	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  0028e	e8 00 00 00 00	 call	 ?Isleader@PartyClass@@QAEHHHH@Z ; PartyClass::Isleader
  00293	85 c0		 test	 eax, eax
  00295	75 05		 jne	 SHORT $LN37@Search

; 113  : 			{
; 114  : 				continue;

  00297	e9 44 ff ff ff	 jmp	 $LN41@Search
$LN37@Search:

; 115  : 			}
; 116  : 		}
; 117  : 		
; 118  : 
; 119  : 		AutoParty_DATA ap;
; 120  : 		ap.Index = n;

  0029c	66 8b 85 60 ec
	ff ff		 mov	 ax, WORD PTR _n$227443[ebp]
  002a3	66 89 85 3c ec
	ff ff		 mov	 WORD PTR _ap$227453[ebp], ax

; 121  : 		strncpy(ap.Name, lpSearch->Name, 10);

  002aa	6a 0a		 push	 10			; 0000000aH
  002ac	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227447[ebp]
  002b2	83 c0 77	 add	 eax, 119		; 00000077H
  002b5	50		 push	 eax
  002b6	8d 8d 3e ec ff
	ff		 lea	 ecx, DWORD PTR _ap$227453[ebp+2]
  002bc	51		 push	 ecx
  002bd	e8 00 00 00 00	 call	 _strncpy
  002c2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 122  : 		ap.Level = lpSearch->pt_MaxLevel;

  002c5	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227447[ebp]
  002cb	66 8b 88 76 28
	00 00		 mov	 cx, WORD PTR [eax+10358]
  002d2	66 89 8d 4a ec
	ff ff		 mov	 WORD PTR _ap$227453[ebp+14], cx

; 123  : 		ap.X = lpSearch->X;

  002d9	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227447[ebp]
  002df	8a 88 44 01 00
	00		 mov	 cl, BYTE PTR [eax+324]
  002e5	88 8d 4d ec ff
	ff		 mov	 BYTE PTR _ap$227453[ebp+17], cl

; 124  : 		ap.Y = lpSearch->Y;

  002eb	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227447[ebp]
  002f1	8a 88 46 01 00
	00		 mov	 cl, BYTE PTR [eax+326]
  002f7	88 8d 4e ec ff
	ff		 mov	 BYTE PTR _ap$227453[ebp+18], cl

; 125  : 		ap.Map = lpSearch->MapNumber;

  002fd	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227447[ebp]
  00303	8a 88 49 01 00
	00		 mov	 cl, BYTE PTR [eax+329]
  00309	88 8d 4c ec ff
	ff		 mov	 BYTE PTR _ap$227453[ebp+16], cl

; 126  : 		//int partynum = lpSearch->PartyNumber;
; 127  : 		ap.Count = gParty.GetCount(partynum);

  0030f	8b 85 58 ec ff
	ff		 mov	 eax, DWORD PTR _partynum$227450[ebp]
  00315	50		 push	 eax
  00316	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  0031b	e8 00 00 00 00	 call	 ?GetCount@PartyClass@@QAEHH@Z ; PartyClass::GetCount
  00320	88 85 56 ec ff
	ff		 mov	 BYTE PTR _ap$227453[ebp+26], al

; 128  : 
; 129  : 		/*if(lpSearch->pt_bAllClass)
; 130  : 		{
; 131  : 			// -> All Class
; 132  : 			ap.dw = true;
; 133  : 			ap.dk = true;
; 134  : 			ap.ee = true;
; 135  : 			ap.mg = true;
; 136  : 			ap.dl = true;
; 137  : 			ap.su = true;
; 138  : 		}
; 139  : 		else*/ if(lpSearch->pt_bOnlyOneClass)

  00326	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227447[ebp]
  0032c	0f b6 88 79 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10361]
  00333	85 c9		 test	 ecx, ecx
  00335	0f 84 33 02 00
	00		 je	 $LN35@Search

; 140  : 		{
; 141  : 			// -> Gold Party
; 142  : 			ap.dw = true;

  0033b	c6 85 4f ec ff
	ff 01		 mov	 BYTE PTR _ap$227453[ebp+19], 1

; 143  : 			ap.dk = true;

  00342	c6 85 50 ec ff
	ff 01		 mov	 BYTE PTR _ap$227453[ebp+20], 1

; 144  : 			ap.ee = true;

  00349	c6 85 51 ec ff
	ff 01		 mov	 BYTE PTR _ap$227453[ebp+21], 1

; 145  : 			ap.mg = true;

  00350	c6 85 52 ec ff
	ff 01		 mov	 BYTE PTR _ap$227453[ebp+22], 1

; 146  : 			ap.dl = true;

  00357	c6 85 53 ec ff
	ff 01		 mov	 BYTE PTR _ap$227453[ebp+23], 1

; 147  : 			ap.su = true;

  0035e	c6 85 54 ec ff
	ff 01		 mov	 BYTE PTR _ap$227453[ebp+24], 1

; 148  : 			ap.rf = true;

  00365	c6 85 55 ec ff
	ff 01		 mov	 BYTE PTR _ap$227453[ebp+25], 1

; 149  : 
; 150  : 			if(partynum >= 0)

  0036c	83 bd 58 ec ff
	ff 00		 cmp	 DWORD PTR _partynum$227450[ebp], 0
  00373	0f 8c 33 01 00
	00		 jl	 $LN34@Search

; 151  : 			{
; 152  : 				
; 153  : 				for(int p = 0; p < MAX_USER_IN_PARTY; p++)

  00379	c7 85 38 ec ff
	ff 00 00 00 00	 mov	 DWORD PTR _p$227456[ebp], 0
  00383	eb 0f		 jmp	 SHORT $LN33@Search
$LN32@Search:
  00385	8b 85 38 ec ff
	ff		 mov	 eax, DWORD PTR _p$227456[ebp]
  0038b	83 c0 01	 add	 eax, 1
  0038e	89 85 38 ec ff
	ff		 mov	 DWORD PTR _p$227456[ebp], eax
$LN33@Search:
  00394	83 bd 38 ec ff
	ff 0a		 cmp	 DWORD PTR _p$227456[ebp], 10 ; 0000000aH
  0039b	0f 8d 06 01 00
	00		 jge	 $LN31@Search

; 154  : 				{
; 155  : 					int number = gParty.m_PartyS[partynum].Number[p];

  003a1	8b 85 58 ec ff
	ff		 mov	 eax, DWORD PTR _partynum$227450[ebp]
  003a7	6b c0 6c	 imul	 eax, 108		; 0000006cH
  003aa	8b 8d 38 ec ff
	ff		 mov	 ecx, DWORD PTR _p$227456[ebp]
  003b0	8b 94 88 0c 00
	00 00		 mov	 edx, DWORD PTR ?gParty@@3VPartyClass@@A[eax+ecx*4+12]
  003b7	89 95 34 ec ff
	ff		 mov	 DWORD PTR _number$227460[ebp], edx

; 156  : 
; 157  : 					if(number >= 0)

  003bd	83 bd 34 ec ff
	ff 00		 cmp	 DWORD PTR _number$227460[ebp], 0
  003c4	0f 8c d8 00 00
	00		 jl	 $LN30@Search

; 158  : 					{
; 159  : 						LPOBJ lpPartyObj = &gObj[number];

  003ca	8b 85 34 ec ff
	ff		 mov	 eax, DWORD PTR _number$227460[ebp]
  003d0	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  003d6	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  003dc	89 85 30 ec ff
	ff		 mov	 DWORD PTR _lpPartyObj$227462[ebp], eax

; 160  : 
; 161  : 						if(lpPartyObj->Class == 0)

  003e2	8b 85 30 ec ff
	ff		 mov	 eax, DWORD PTR _lpPartyObj$227462[ebp]
  003e8	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  003ef	85 c9		 test	 ecx, ecx
  003f1	75 0c		 jne	 SHORT $LN29@Search

; 162  : 						{
; 163  : 							ap.dw = false;

  003f3	c6 85 4f ec ff
	ff 00		 mov	 BYTE PTR _ap$227453[ebp+19], 0
  003fa	e9 a3 00 00 00	 jmp	 $LN30@Search
$LN29@Search:

; 164  : 						}
; 165  : 						else if(lpPartyObj->Class == 1)

  003ff	8b 85 30 ec ff
	ff		 mov	 eax, DWORD PTR _lpPartyObj$227462[ebp]
  00405	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  0040c	83 f9 01	 cmp	 ecx, 1
  0040f	75 0c		 jne	 SHORT $LN27@Search

; 166  : 						{
; 167  : 							ap.dk = false;

  00411	c6 85 50 ec ff
	ff 00		 mov	 BYTE PTR _ap$227453[ebp+20], 0
  00418	e9 85 00 00 00	 jmp	 $LN30@Search
$LN27@Search:

; 168  : 						}
; 169  : 						else if(lpPartyObj->Class == 2)

  0041d	8b 85 30 ec ff
	ff		 mov	 eax, DWORD PTR _lpPartyObj$227462[ebp]
  00423	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  0042a	83 f9 02	 cmp	 ecx, 2
  0042d	75 09		 jne	 SHORT $LN25@Search

; 170  : 						{
; 171  : 							ap.ee = false;

  0042f	c6 85 51 ec ff
	ff 00		 mov	 BYTE PTR _ap$227453[ebp+21], 0
  00436	eb 6a		 jmp	 SHORT $LN30@Search
$LN25@Search:

; 172  : 						}
; 173  : 						else if(lpPartyObj->Class == 3)

  00438	8b 85 30 ec ff
	ff		 mov	 eax, DWORD PTR _lpPartyObj$227462[ebp]
  0043e	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00445	83 f9 03	 cmp	 ecx, 3
  00448	75 09		 jne	 SHORT $LN23@Search

; 174  : 						{
; 175  : 							ap.mg = false;

  0044a	c6 85 52 ec ff
	ff 00		 mov	 BYTE PTR _ap$227453[ebp+22], 0
  00451	eb 4f		 jmp	 SHORT $LN30@Search
$LN23@Search:

; 176  : 						}
; 177  : 						else if(lpPartyObj->Class == 4)

  00453	8b 85 30 ec ff
	ff		 mov	 eax, DWORD PTR _lpPartyObj$227462[ebp]
  00459	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00460	83 f9 04	 cmp	 ecx, 4
  00463	75 09		 jne	 SHORT $LN21@Search

; 178  : 						{
; 179  : 							ap.dl = false;

  00465	c6 85 53 ec ff
	ff 00		 mov	 BYTE PTR _ap$227453[ebp+23], 0
  0046c	eb 34		 jmp	 SHORT $LN30@Search
$LN21@Search:

; 180  : 						}
; 181  : 						else if(lpPartyObj->Class == 5)

  0046e	8b 85 30 ec ff
	ff		 mov	 eax, DWORD PTR _lpPartyObj$227462[ebp]
  00474	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  0047b	83 f9 05	 cmp	 ecx, 5
  0047e	75 09		 jne	 SHORT $LN19@Search

; 182  : 						{
; 183  : 							ap.su = false;

  00480	c6 85 54 ec ff
	ff 00		 mov	 BYTE PTR _ap$227453[ebp+24], 0
  00487	eb 19		 jmp	 SHORT $LN30@Search
$LN19@Search:

; 184  : 						}
; 185  : 						else if(lpPartyObj->Class == 6)

  00489	8b 85 30 ec ff
	ff		 mov	 eax, DWORD PTR _lpPartyObj$227462[ebp]
  0048f	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00496	83 f9 06	 cmp	 ecx, 6
  00499	75 07		 jne	 SHORT $LN30@Search

; 186  : 						{
; 187  : 							ap.rf = false;

  0049b	c6 85 55 ec ff
	ff 00		 mov	 BYTE PTR _ap$227453[ebp+25], 0
$LN30@Search:

; 188  : 						}
; 189  : 					}
; 190  : 				}

  004a2	e9 de fe ff ff	 jmp	 $LN32@Search
$LN31@Search:

; 191  : 			}
; 192  : 			else 

  004a7	e9 c0 00 00 00	 jmp	 $LN16@Search
$LN34@Search:

; 193  : 			{
; 194  : 				if(lpSearch->Class == 0)

  004ac	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227447[ebp]
  004b2	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  004b9	85 c9		 test	 ecx, ecx
  004bb	75 0c		 jne	 SHORT $LN15@Search

; 195  : 				{
; 196  : 					ap.dw = false;

  004bd	c6 85 4f ec ff
	ff 00		 mov	 BYTE PTR _ap$227453[ebp+19], 0
  004c4	e9 a3 00 00 00	 jmp	 $LN16@Search
$LN15@Search:

; 197  : 				}
; 198  : 				else if(lpSearch->Class == 1)

  004c9	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227447[ebp]
  004cf	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  004d6	83 f9 01	 cmp	 ecx, 1
  004d9	75 0c		 jne	 SHORT $LN13@Search

; 199  : 				{
; 200  : 					ap.dk = false;

  004db	c6 85 50 ec ff
	ff 00		 mov	 BYTE PTR _ap$227453[ebp+20], 0
  004e2	e9 85 00 00 00	 jmp	 $LN16@Search
$LN13@Search:

; 201  : 				}
; 202  : 				else if(lpSearch->Class == 2)

  004e7	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227447[ebp]
  004ed	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  004f4	83 f9 02	 cmp	 ecx, 2
  004f7	75 09		 jne	 SHORT $LN11@Search

; 203  : 				{
; 204  : 					ap.ee = false;

  004f9	c6 85 51 ec ff
	ff 00		 mov	 BYTE PTR _ap$227453[ebp+21], 0
  00500	eb 6a		 jmp	 SHORT $LN16@Search
$LN11@Search:

; 205  : 				}
; 206  : 				else if(lpSearch->Class == 3)

  00502	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227447[ebp]
  00508	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  0050f	83 f9 03	 cmp	 ecx, 3
  00512	75 09		 jne	 SHORT $LN9@Search

; 207  : 				{
; 208  : 					ap.mg = false;

  00514	c6 85 52 ec ff
	ff 00		 mov	 BYTE PTR _ap$227453[ebp+22], 0
  0051b	eb 4f		 jmp	 SHORT $LN16@Search
$LN9@Search:

; 209  : 				}
; 210  : 				else if(lpSearch->Class == 4)

  0051d	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227447[ebp]
  00523	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  0052a	83 f9 04	 cmp	 ecx, 4
  0052d	75 09		 jne	 SHORT $LN7@Search

; 211  : 				{
; 212  : 					ap.dl = false;

  0052f	c6 85 53 ec ff
	ff 00		 mov	 BYTE PTR _ap$227453[ebp+23], 0
  00536	eb 34		 jmp	 SHORT $LN16@Search
$LN7@Search:

; 213  : 				}
; 214  : 				else if(lpSearch->Class == 5)

  00538	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227447[ebp]
  0053e	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00545	83 f9 05	 cmp	 ecx, 5
  00548	75 09		 jne	 SHORT $LN5@Search

; 215  : 				{
; 216  : 					ap.su = false;

  0054a	c6 85 54 ec ff
	ff 00		 mov	 BYTE PTR _ap$227453[ebp+24], 0
  00551	eb 19		 jmp	 SHORT $LN16@Search
$LN5@Search:

; 217  : 				}
; 218  : 				else if(lpSearch->Class == 6)

  00553	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227447[ebp]
  00559	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00560	83 f9 06	 cmp	 ecx, 6
  00563	75 07		 jne	 SHORT $LN16@Search

; 219  : 				{
; 220  : 					ap.rf = false;

  00565	c6 85 55 ec ff
	ff 00		 mov	 BYTE PTR _ap$227453[ebp+25], 0
$LN16@Search:

; 221  : 				}
; 222  : 			}
; 223  : 		}
; 224  : 		else

  0056c	eb 7e		 jmp	 SHORT $LN2@Search
$LN35@Search:

; 225  : 		{
; 226  : 			// -> Other Char
; 227  : 			ap.dw = lpSearch->pt_bDarkWizard;

  0056e	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227447[ebp]
  00574	8a 88 7a 28 00
	00		 mov	 cl, BYTE PTR [eax+10362]
  0057a	88 8d 4f ec ff
	ff		 mov	 BYTE PTR _ap$227453[ebp+19], cl

; 228  : 			ap.dk = lpSearch->pt_bDarkKnight;

  00580	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227447[ebp]
  00586	8a 88 7b 28 00
	00		 mov	 cl, BYTE PTR [eax+10363]
  0058c	88 8d 50 ec ff
	ff		 mov	 BYTE PTR _ap$227453[ebp+20], cl

; 229  : 			ap.ee = lpSearch->pt_bElf;

  00592	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227447[ebp]
  00598	8a 88 7c 28 00
	00		 mov	 cl, BYTE PTR [eax+10364]
  0059e	88 8d 51 ec ff
	ff		 mov	 BYTE PTR _ap$227453[ebp+21], cl

; 230  : 			ap.mg = lpSearch->pt_bMagicGladiator;

  005a4	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227447[ebp]
  005aa	8a 88 7d 28 00
	00		 mov	 cl, BYTE PTR [eax+10365]
  005b0	88 8d 52 ec ff
	ff		 mov	 BYTE PTR _ap$227453[ebp+22], cl

; 231  : 			ap.dl = lpSearch->pt_bDarkLord;

  005b6	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227447[ebp]
  005bc	8a 88 7e 28 00
	00		 mov	 cl, BYTE PTR [eax+10366]
  005c2	88 8d 53 ec ff
	ff		 mov	 BYTE PTR _ap$227453[ebp+23], cl

; 232  : 			ap.su = lpSearch->pt_bSummoner;

  005c8	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227447[ebp]
  005ce	8a 88 7f 28 00
	00		 mov	 cl, BYTE PTR [eax+10367]
  005d4	88 8d 54 ec ff
	ff		 mov	 BYTE PTR _ap$227453[ebp+24], cl

; 233  : 			ap.rf = lpSearch->pt_bAllClass;

  005da	8b 85 5c ec ff
	ff		 mov	 eax, DWORD PTR _lpSearch$227447[ebp]
  005e0	8a 88 78 28 00
	00		 mov	 cl, BYTE PTR [eax+10360]
  005e6	88 8d 55 ec ff
	ff		 mov	 BYTE PTR _ap$227453[ebp+25], cl
$LN2@Search:

; 234  : 		}
; 235  : 
; 236  : 		memcpy(&SendBuff[datasize],&ap,sizeof(ap));

  005ec	6a 1c		 push	 28			; 0000001cH
  005ee	8d 85 3c ec ff
	ff		 lea	 eax, DWORD PTR _ap$227453[ebp]
  005f4	50		 push	 eax
  005f5	8b 8d 68 ec ff
	ff		 mov	 ecx, DWORD PTR _datasize$[ebp]
  005fb	8d 94 0d 6c ec
	ff ff		 lea	 edx, DWORD PTR _SendBuff$[ebp+ecx]
  00602	52		 push	 edx
  00603	e8 00 00 00 00	 call	 _memcpy
  00608	83 c4 0c	 add	 esp, 12			; 0000000cH

; 237  : 		datasize += sizeof(ap);

  0060b	8b 85 68 ec ff
	ff		 mov	 eax, DWORD PTR _datasize$[ebp]
  00611	83 c0 1c	 add	 eax, 28			; 0000001cH
  00614	89 85 68 ec ff
	ff		 mov	 DWORD PTR _datasize$[ebp], eax

; 238  : 
; 239  : 		icount++;

  0061a	8a 85 67 ec ff
	ff		 mov	 al, BYTE PTR _icount$[ebp]
  00620	04 01		 add	 al, 1
  00622	88 85 67 ec ff
	ff		 mov	 BYTE PTR _icount$[ebp], al

; 240  : 
; 241  : 		if(icount >= 200)

  00628	0f b6 85 67 ec
	ff ff		 movzx	 eax, BYTE PTR _icount$[ebp]
  0062f	3d c8 00 00 00	 cmp	 eax, 200		; 000000c8H
  00634	7c 02		 jl	 SHORT $LN1@Search

; 242  : 		{
; 243  : 			break;		

  00636	eb 05		 jmp	 SHORT $LN40@Search
$LN1@Search:

; 244  : 		}
; 245  : 	}

  00638	e9 a3 fb ff ff	 jmp	 $LN41@Search
$LN40@Search:

; 246  : 
; 247  : 	//if(icount > 0)
; 248  : 	{
; 249  : 		SendBuff[0]=0xC2;	// packet header

  0063d	c6 85 6c ec ff
	ff c2		 mov	 BYTE PTR _SendBuff$[ebp], 194 ; 000000c2H

; 250  : 		SendBuff[1]=SET_NUMBERH(datasize);

  00644	8b 85 68 ec ff
	ff		 mov	 eax, DWORD PTR _datasize$[ebp]
  0064a	c1 e8 08	 shr	 eax, 8
  0064d	88 85 6d ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+1], al

; 251  : 		SendBuff[2]=SET_NUMBERL(datasize);

  00653	8b 85 68 ec ff
	ff		 mov	 eax, DWORD PTR _datasize$[ebp]
  00659	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0065e	88 85 6e ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+2], al

; 252  : 		SendBuff[3]=0xFA;

  00664	c6 85 6f ec ff
	ff fa		 mov	 BYTE PTR _SendBuff$[ebp+3], 250 ; 000000faH

; 253  : 		SendBuff[4]=0x08;

  0066b	c6 85 70 ec ff
	ff 08		 mov	 BYTE PTR _SendBuff$[ebp+4], 8

; 254  : 		SendBuff[5]=icount;

  00672	8a 85 67 ec ff
	ff		 mov	 al, BYTE PTR _icount$[ebp]
  00678	88 85 71 ec ff
	ff		 mov	 BYTE PTR _SendBuff$[ebp+5], al

; 255  : 		DataSend(aIndex,SendBuff,datasize);

  0067e	8b 85 68 ec ff
	ff		 mov	 eax, DWORD PTR _datasize$[ebp]
  00684	50		 push	 eax
  00685	8d 8d 6c ec ff
	ff		 lea	 ecx, DWORD PTR _SendBuff$[ebp]
  0068b	51		 push	 ecx
  0068c	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  0068f	52		 push	 edx
  00690	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00695	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN47@Search:

; 256  : 	}
; 257  : }

  00698	5f		 pop	 edi
  00699	5e		 pop	 esi
  0069a	5b		 pop	 ebx
  0069b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0069e	33 cd		 xor	 ecx, ebp
  006a0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  006a5	8b e5		 mov	 esp, ebp
  006a7	5d		 pop	 ebp
  006a8	c2 04 00	 ret	 4
?Search@PartySearch@@QAEXH@Z ENDP			; PartySearch::Search
_TEXT	ENDS
PUBLIC	?CG_RecvInfo@PartySearch@@QAEXHPAUCG_AutoPartyInfo@@@Z ; PartySearch::CG_RecvInfo
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_lpUser$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_Recv$ = 12						; size = 4
?CG_RecvInfo@PartySearch@@QAEXHPAUCG_AutoPartyInfo@@@Z PROC ; PartySearch::CG_RecvInfo
; _this$ = ecx

; 261  : {

  006b0	55		 push	 ebp
  006b1	8b ec		 mov	 ebp, esp
  006b3	83 ec 48	 sub	 esp, 72			; 00000048H
  006b6	53		 push	 ebx
  006b7	56		 push	 esi
  006b8	57		 push	 edi
  006b9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 262  : 	if(!this->ActiveSystem)

  006bc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  006bf	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  006c2	85 c9		 test	 ecx, ecx
  006c4	75 05		 jne	 SHORT $LN2@CG_RecvInf

; 263  : 	{
; 264  : 		return;

  006c6	e9 e6 00 00 00	 jmp	 $LN3@CG_RecvInf
$LN2@CG_RecvInf:

; 265  : 	}
; 266  : 
; 267  : 	if(!gObjIsConnectedEx(aIndex))

  006cb	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  006ce	50		 push	 eax
  006cf	e8 00 00 00 00	 call	 ?gObjIsConnectedEx@@YA_NH@Z ; gObjIsConnectedEx
  006d4	83 c4 04	 add	 esp, 4
  006d7	0f b6 c8	 movzx	 ecx, al
  006da	85 c9		 test	 ecx, ecx
  006dc	75 05		 jne	 SHORT $LN1@CG_RecvInf

; 268  : 	{
; 269  : 		return;

  006de	e9 ce 00 00 00	 jmp	 $LN3@CG_RecvInf
$LN1@CG_RecvInf:

; 270  : 	}
; 271  : 
; 272  : 	LPOBJ lpUser = &gObj[aIndex];

  006e3	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  006e6	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  006ec	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  006f2	89 45 f8	 mov	 DWORD PTR _lpUser$[ebp], eax

; 273  : 
; 274  : 	lpUser->pt_Active = Recv->ActiveSystem;

  006f5	8b 45 0c	 mov	 eax, DWORD PTR _Recv$[ebp]
  006f8	80 78 04 00	 cmp	 BYTE PTR [eax+4], 0
  006fc	0f 95 c1	 setne	 cl
  006ff	8b 55 f8	 mov	 edx, DWORD PTR _lpUser$[ebp]
  00702	88 8a 74 28 00
	00		 mov	 BYTE PTR [edx+10356], cl

; 275  : 	lpUser->pt_MaxLevel = Recv->MaxLevel;

  00708	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  0070b	8b 4d 0c	 mov	 ecx, DWORD PTR _Recv$[ebp]
  0070e	66 8b 51 06	 mov	 dx, WORD PTR [ecx+6]
  00712	66 89 90 76 28
	00 00		 mov	 WORD PTR [eax+10358], dx

; 276  : 	lpUser->pt_bAllClass = Recv->bAllClass;

  00719	8b 45 0c	 mov	 eax, DWORD PTR _Recv$[ebp]
  0071c	80 78 08 00	 cmp	 BYTE PTR [eax+8], 0
  00720	0f 95 c1	 setne	 cl
  00723	8b 55 f8	 mov	 edx, DWORD PTR _lpUser$[ebp]
  00726	88 8a 78 28 00
	00		 mov	 BYTE PTR [edx+10360], cl

; 277  : 	lpUser->pt_bOnlyOneClass = Recv->bOnlyOneClass;

  0072c	8b 45 0c	 mov	 eax, DWORD PTR _Recv$[ebp]
  0072f	80 78 09 00	 cmp	 BYTE PTR [eax+9], 0
  00733	0f 95 c1	 setne	 cl
  00736	8b 55 f8	 mov	 edx, DWORD PTR _lpUser$[ebp]
  00739	88 8a 79 28 00
	00		 mov	 BYTE PTR [edx+10361], cl

; 278  : 	lpUser->pt_bDarkWizard = Recv->bDarkWizard;

  0073f	8b 45 0c	 mov	 eax, DWORD PTR _Recv$[ebp]
  00742	80 78 0a 00	 cmp	 BYTE PTR [eax+10], 0
  00746	0f 95 c1	 setne	 cl
  00749	8b 55 f8	 mov	 edx, DWORD PTR _lpUser$[ebp]
  0074c	88 8a 7a 28 00
	00		 mov	 BYTE PTR [edx+10362], cl

; 279  : 	lpUser->pt_bDarkKnight = Recv->bDarkKnight;

  00752	8b 45 0c	 mov	 eax, DWORD PTR _Recv$[ebp]
  00755	80 78 0b 00	 cmp	 BYTE PTR [eax+11], 0
  00759	0f 95 c1	 setne	 cl
  0075c	8b 55 f8	 mov	 edx, DWORD PTR _lpUser$[ebp]
  0075f	88 8a 7b 28 00
	00		 mov	 BYTE PTR [edx+10363], cl

; 280  : 	lpUser->pt_bElf = Recv->bElf;

  00765	8b 45 0c	 mov	 eax, DWORD PTR _Recv$[ebp]
  00768	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0076c	0f 95 c1	 setne	 cl
  0076f	8b 55 f8	 mov	 edx, DWORD PTR _lpUser$[ebp]
  00772	88 8a 7c 28 00
	00		 mov	 BYTE PTR [edx+10364], cl

; 281  : 	lpUser->pt_bMagicGladiator = Recv->bMagicGladiator;

  00778	8b 45 0c	 mov	 eax, DWORD PTR _Recv$[ebp]
  0077b	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0077f	0f 95 c1	 setne	 cl
  00782	8b 55 f8	 mov	 edx, DWORD PTR _lpUser$[ebp]
  00785	88 8a 7d 28 00
	00		 mov	 BYTE PTR [edx+10365], cl

; 282  : 	lpUser->pt_bDarkLord = Recv->bDarkLord;

  0078b	8b 45 0c	 mov	 eax, DWORD PTR _Recv$[ebp]
  0078e	80 78 0e 00	 cmp	 BYTE PTR [eax+14], 0
  00792	0f 95 c1	 setne	 cl
  00795	8b 55 f8	 mov	 edx, DWORD PTR _lpUser$[ebp]
  00798	88 8a 7e 28 00
	00		 mov	 BYTE PTR [edx+10366], cl

; 283  : 	lpUser->pt_bSummoner = Recv->bSummoner;

  0079e	8b 45 0c	 mov	 eax, DWORD PTR _Recv$[ebp]
  007a1	80 78 0f 00	 cmp	 BYTE PTR [eax+15], 0
  007a5	0f 95 c1	 setne	 cl
  007a8	8b 55 f8	 mov	 edx, DWORD PTR _lpUser$[ebp]
  007ab	88 8a 7f 28 00
	00		 mov	 BYTE PTR [edx+10367], cl
$LN3@CG_RecvInf:

; 284  : }

  007b1	5f		 pop	 edi
  007b2	5e		 pop	 esi
  007b3	5b		 pop	 ebx
  007b4	8b e5		 mov	 esp, ebp
  007b6	5d		 pop	 ebp
  007b7	c2 08 00	 ret	 8
?CG_RecvInfo@PartySearch@@QAEXHPAUCG_AutoPartyInfo@@@Z ENDP ; PartySearch::CG_RecvInfo
_TEXT	ENDS
PUBLIC	?CG_RecvPartyUser@PartySearch@@QAEXHPAUCG_PartyRecv@@@Z ; PartySearch::CG_RecvPartyUser
EXTRN	?CGPartyListAll@@YAXH@Z:PROC			; CGPartyListAll
EXTRN	?Paint@PartyClass@@QAEXH@Z:PROC			; PartyClass::Paint
EXTRN	?Add@PartyClass@@QAEHHHHH@Z:PROC		; PartyClass::Add
EXTRN	?Create@PartyClass@@QAEHHHH@Z:PROC		; PartyClass::Create
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_iPartyPos$227565 = -44					; size = 4
_pnumber$ = -40						; size = 4
_lpPartyObj$227555 = -36				; size = 4
_number$227553 = -32					; size = 4
_p$227549 = -28						; size = 4
_AtributeON$ = -21					; size = 1
_partynum$ = -20					; size = 4
_lpTarget$ = -16					; size = 4
_lpUser$ = -12						; size = 4
_TargetIndex$ = -8					; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_Recv$ = 12						; size = 4
?CG_RecvPartyUser@PartySearch@@QAEXHPAUCG_PartyRecv@@@Z PROC ; PartySearch::CG_RecvPartyUser
; _this$ = ecx

; 288  : {

  007c0	55		 push	 ebp
  007c1	8b ec		 mov	 ebp, esp
  007c3	83 ec 6c	 sub	 esp, 108		; 0000006cH
  007c6	53		 push	 ebx
  007c7	56		 push	 esi
  007c8	57		 push	 edi
  007c9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 289  : 	if(!this->ActiveSystem)

  007cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  007cf	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  007d2	85 c9		 test	 ecx, ecx
  007d4	75 05		 jne	 SHORT $LN36@CG_RecvPar

; 290  : 	{
; 291  : 		return;

  007d6	e9 58 04 00 00	 jmp	 $LN37@CG_RecvPar
$LN36@CG_RecvPar:

; 292  : 	}
; 293  : 
; 294  : 	if(!gObjIsConnectedEx(aIndex))

  007db	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  007de	50		 push	 eax
  007df	e8 00 00 00 00	 call	 ?gObjIsConnectedEx@@YA_NH@Z ; gObjIsConnectedEx
  007e4	83 c4 04	 add	 esp, 4
  007e7	0f b6 c8	 movzx	 ecx, al
  007ea	85 c9		 test	 ecx, ecx
  007ec	75 05		 jne	 SHORT $LN35@CG_RecvPar

; 295  : 	{
; 296  : 		return;

  007ee	e9 40 04 00 00	 jmp	 $LN37@CG_RecvPar
$LN35@CG_RecvPar:

; 297  : 	}
; 298  : 
; 299  : 	int TargetIndex = Recv->UserIndex;

  007f3	8b 45 0c	 mov	 eax, DWORD PTR _Recv$[ebp]
  007f6	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  007fa	89 4d f8	 mov	 DWORD PTR _TargetIndex$[ebp], ecx

; 300  : 
; 301  : 	if(!gObjIsConnectedEx(TargetIndex))

  007fd	8b 45 f8	 mov	 eax, DWORD PTR _TargetIndex$[ebp]
  00800	50		 push	 eax
  00801	e8 00 00 00 00	 call	 ?gObjIsConnectedEx@@YA_NH@Z ; gObjIsConnectedEx
  00806	83 c4 04	 add	 esp, 4
  00809	0f b6 c8	 movzx	 ecx, al
  0080c	85 c9		 test	 ecx, ecx
  0080e	75 05		 jne	 SHORT $LN34@CG_RecvPar

; 302  : 	{
; 303  : 		return;

  00810	e9 1e 04 00 00	 jmp	 $LN37@CG_RecvPar
$LN34@CG_RecvPar:

; 304  : 	}
; 305  : 
; 306  : 	if(aIndex == TargetIndex)

  00815	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00818	3b 45 f8	 cmp	 eax, DWORD PTR _TargetIndex$[ebp]
  0081b	75 05		 jne	 SHORT $LN33@CG_RecvPar

; 307  : 	{
; 308  : 		return;

  0081d	e9 11 04 00 00	 jmp	 $LN37@CG_RecvPar
$LN33@CG_RecvPar:

; 309  : 	}
; 310  : 
; 311  : 	LPOBJ lpUser = &gObj[aIndex];

  00822	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00825	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0082b	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00831	89 45 f4	 mov	 DWORD PTR _lpUser$[ebp], eax

; 312  : 	LPOBJ lpTarget = &gObj[TargetIndex];

  00834	8b 45 f8	 mov	 eax, DWORD PTR _TargetIndex$[ebp]
  00837	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  0083d	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00843	89 45 f0	 mov	 DWORD PTR _lpTarget$[ebp], eax

; 313  : 
; 314  : 	if(!lpTarget->pt_Active)

  00846	8b 45 f0	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  00849	0f b6 88 74 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10356]
  00850	85 c9		 test	 ecx, ecx
  00852	75 05		 jne	 SHORT $LN32@CG_RecvPar

; 315  : 	{
; 316  : 		return;

  00854	e9 da 03 00 00	 jmp	 $LN37@CG_RecvPar
$LN32@CG_RecvPar:

; 317  : 	}
; 318  : 
; 319  : 	int partynum = lpTarget->PartyNumber;

  00859	8b 45 f0	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  0085c	8b 88 2c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1068]
  00862	89 4d ec	 mov	 DWORD PTR _partynum$[ebp], ecx

; 320  : 
; 321  : 	BYTE AtributeON = true;

  00865	c6 45 eb 01	 mov	 BYTE PTR _AtributeON$[ebp], 1

; 322  : 
; 323  : 	if(aIndex == TargetIndex)

  00869	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0086c	3b 45 f8	 cmp	 eax, DWORD PTR _TargetIndex$[ebp]
  0086f	75 04		 jne	 SHORT $LN31@CG_RecvPar

; 324  : 	{
; 325  : 		AtributeON = false;

  00871	c6 45 eb 00	 mov	 BYTE PTR _AtributeON$[ebp], 0
$LN31@CG_RecvPar:

; 326  : 	}
; 327  : 	if(lpUser->PartyNumber > 0)

  00875	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00878	83 b8 2c 04 00
	00 00		 cmp	 DWORD PTR [eax+1068], 0
  0087f	7e 04		 jle	 SHORT $LN30@CG_RecvPar

; 328  : 	{
; 329  : 		AtributeON = false;

  00881	c6 45 eb 00	 mov	 BYTE PTR _AtributeON$[ebp], 0
$LN30@CG_RecvPar:

; 330  : 	}
; 331  : 	if(lpUser->Level > lpTarget->pt_MaxLevel)

  00885	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00888	0f bf 88 be 00
	00 00		 movsx	 ecx, WORD PTR [eax+190]
  0088f	8b 55 f0	 mov	 edx, DWORD PTR _lpTarget$[ebp]
  00892	0f bf 82 76 28
	00 00		 movsx	 eax, WORD PTR [edx+10358]
  00899	3b c8		 cmp	 ecx, eax
  0089b	7e 04		 jle	 SHORT $LN29@CG_RecvPar

; 332  : 	{
; 333  : 		AtributeON = false;

  0089d	c6 45 eb 00	 mov	 BYTE PTR _AtributeON$[ebp], 0
$LN29@CG_RecvPar:

; 334  : 	}
; 335  : 	
; 336  : 	if(/*!lpTarget->pt_bAllClass &&*/ !lpTarget->pt_bOnlyOneClass)

  008a1	8b 45 f0	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  008a4	0f b6 88 79 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10361]
  008ab	85 c9		 test	 ecx, ecx
  008ad	0f 85 e6 00 00
	00		 jne	 $LN28@CG_RecvPar

; 337  : 	{
; 338  : 		if(lpUser->Class == CLASS_WIZARD && lpTarget->pt_bDarkWizard == false)

  008b3	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  008b6	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  008bd	85 c9		 test	 ecx, ecx
  008bf	75 12		 jne	 SHORT $LN27@CG_RecvPar
  008c1	8b 45 f0	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  008c4	0f b6 88 7a 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10362]
  008cb	85 c9		 test	 ecx, ecx
  008cd	75 04		 jne	 SHORT $LN27@CG_RecvPar

; 339  : 		{
; 340  : 			AtributeON = false;

  008cf	c6 45 eb 00	 mov	 BYTE PTR _AtributeON$[ebp], 0
$LN27@CG_RecvPar:

; 341  : 		}
; 342  : 		if(lpUser->Class == CLASS_KNIGHT && lpTarget->pt_bDarkKnight == false)

  008d3	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  008d6	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  008dd	83 f9 01	 cmp	 ecx, 1
  008e0	75 12		 jne	 SHORT $LN26@CG_RecvPar
  008e2	8b 45 f0	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  008e5	0f b6 88 7b 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10363]
  008ec	85 c9		 test	 ecx, ecx
  008ee	75 04		 jne	 SHORT $LN26@CG_RecvPar

; 343  : 		{
; 344  : 			AtributeON = false;

  008f0	c6 45 eb 00	 mov	 BYTE PTR _AtributeON$[ebp], 0
$LN26@CG_RecvPar:

; 345  : 		}
; 346  : 		if(lpUser->Class == CLASS_ELF && lpTarget->pt_bElf == false)

  008f4	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  008f7	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  008fe	83 f9 02	 cmp	 ecx, 2
  00901	75 12		 jne	 SHORT $LN25@CG_RecvPar
  00903	8b 45 f0	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  00906	0f b6 88 7c 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10364]
  0090d	85 c9		 test	 ecx, ecx
  0090f	75 04		 jne	 SHORT $LN25@CG_RecvPar

; 347  : 		{
; 348  : 			AtributeON = false;

  00911	c6 45 eb 00	 mov	 BYTE PTR _AtributeON$[ebp], 0
$LN25@CG_RecvPar:

; 349  : 		}
; 350  : 		if(lpUser->Class == CLASS_MAGUMSA && lpTarget->pt_bMagicGladiator == false)

  00915	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00918	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  0091f	83 f9 03	 cmp	 ecx, 3
  00922	75 12		 jne	 SHORT $LN24@CG_RecvPar
  00924	8b 45 f0	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  00927	0f b6 88 7d 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10365]
  0092e	85 c9		 test	 ecx, ecx
  00930	75 04		 jne	 SHORT $LN24@CG_RecvPar

; 351  : 		{
; 352  : 			AtributeON = false;

  00932	c6 45 eb 00	 mov	 BYTE PTR _AtributeON$[ebp], 0
$LN24@CG_RecvPar:

; 353  : 		}
; 354  : 		if(lpUser->Class == CLASS_DARKLORD && lpTarget->pt_bDarkLord == false)

  00936	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00939	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00940	83 f9 04	 cmp	 ecx, 4
  00943	75 12		 jne	 SHORT $LN23@CG_RecvPar
  00945	8b 45 f0	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  00948	0f b6 88 7e 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10366]
  0094f	85 c9		 test	 ecx, ecx
  00951	75 04		 jne	 SHORT $LN23@CG_RecvPar

; 355  : 		{
; 356  : 			AtributeON = false;

  00953	c6 45 eb 00	 mov	 BYTE PTR _AtributeON$[ebp], 0
$LN23@CG_RecvPar:

; 357  : 		}
; 358  : 		if(lpUser->Class == CLASS_SUMMONER && lpTarget->pt_bSummoner == false)

  00957	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  0095a	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00961	83 f9 05	 cmp	 ecx, 5
  00964	75 12		 jne	 SHORT $LN22@CG_RecvPar
  00966	8b 45 f0	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  00969	0f b6 88 7f 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10367]
  00970	85 c9		 test	 ecx, ecx
  00972	75 04		 jne	 SHORT $LN22@CG_RecvPar

; 359  : 		{
; 360  : 			AtributeON = false;

  00974	c6 45 eb 00	 mov	 BYTE PTR _AtributeON$[ebp], 0
$LN22@CG_RecvPar:

; 361  : 		}
; 362  : 		if(lpUser->Class == CLASS_MONK && lpTarget->pt_bAllClass == false)

  00978	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  0097b	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00982	83 f9 06	 cmp	 ecx, 6
  00985	75 12		 jne	 SHORT $LN28@CG_RecvPar
  00987	8b 45 f0	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  0098a	0f b6 88 78 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10360]
  00991	85 c9		 test	 ecx, ecx
  00993	75 04		 jne	 SHORT $LN28@CG_RecvPar

; 363  : 		{
; 364  : 			AtributeON = false;

  00995	c6 45 eb 00	 mov	 BYTE PTR _AtributeON$[ebp], 0
$LN28@CG_RecvPar:

; 365  : 		}
; 366  : 	}
; 367  : 
; 368  : 	// -> Gold Party
; 369  : 	if(lpTarget->pt_bOnlyOneClass)

  00999	8b 45 f0	 mov	 eax, DWORD PTR _lpTarget$[ebp]
  0099c	0f b6 88 79 28
	00 00		 movzx	 ecx, BYTE PTR [eax+10361]
  009a3	85 c9		 test	 ecx, ecx
  009a5	0f 84 85 00 00
	00		 je	 $LN20@CG_RecvPar

; 370  : 	{
; 371  : 		if(partynum >= 0)

  009ab	83 7d ec 00	 cmp	 DWORD PTR _partynum$[ebp], 0
  009af	7c 63		 jl	 SHORT $LN19@CG_RecvPar

; 372  : 		{
; 373  : 			for(int p = 0; p < MAX_USER_IN_PARTY; p++)

  009b1	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _p$227549[ebp], 0
  009b8	eb 09		 jmp	 SHORT $LN18@CG_RecvPar
$LN17@CG_RecvPar:
  009ba	8b 45 e4	 mov	 eax, DWORD PTR _p$227549[ebp]
  009bd	83 c0 01	 add	 eax, 1
  009c0	89 45 e4	 mov	 DWORD PTR _p$227549[ebp], eax
$LN18@CG_RecvPar:
  009c3	83 7d e4 0a	 cmp	 DWORD PTR _p$227549[ebp], 10 ; 0000000aH
  009c7	7d 49		 jge	 SHORT $LN16@CG_RecvPar

; 374  : 			{
; 375  : 				int number = gParty.m_PartyS[partynum].Number[p];

  009c9	8b 45 ec	 mov	 eax, DWORD PTR _partynum$[ebp]
  009cc	6b c0 6c	 imul	 eax, 108		; 0000006cH
  009cf	8b 4d e4	 mov	 ecx, DWORD PTR _p$227549[ebp]
  009d2	8b 94 88 0c 00
	00 00		 mov	 edx, DWORD PTR ?gParty@@3VPartyClass@@A[eax+ecx*4+12]
  009d9	89 55 e0	 mov	 DWORD PTR _number$227553[ebp], edx

; 376  : 
; 377  : 				if(number >= 0)

  009dc	83 7d e0 00	 cmp	 DWORD PTR _number$227553[ebp], 0
  009e0	7c 2e		 jl	 SHORT $LN15@CG_RecvPar

; 378  : 				{
; 379  : 					LPOBJ lpPartyObj = &gObj[number];

  009e2	8b 45 e0	 mov	 eax, DWORD PTR _number$227553[ebp]
  009e5	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  009eb	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  009f1	89 45 dc	 mov	 DWORD PTR _lpPartyObj$227555[ebp], eax

; 380  : 
; 381  : 					if(lpPartyObj->Class == lpUser->Class)

  009f4	8b 45 dc	 mov	 eax, DWORD PTR _lpPartyObj$227555[ebp]
  009f7	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  009fe	8b 55 f4	 mov	 edx, DWORD PTR _lpUser$[ebp]
  00a01	0f b7 82 b8 00
	00 00		 movzx	 eax, WORD PTR [edx+184]
  00a08	3b c8		 cmp	 ecx, eax
  00a0a	75 04		 jne	 SHORT $LN15@CG_RecvPar

; 382  : 					{
; 383  : 						AtributeON = false;

  00a0c	c6 45 eb 00	 mov	 BYTE PTR _AtributeON$[ebp], 0
$LN15@CG_RecvPar:

; 384  : 					}
; 385  : 				}
; 386  : 			}

  00a10	eb a8		 jmp	 SHORT $LN17@CG_RecvPar
$LN16@CG_RecvPar:

; 387  : 		}
; 388  : 		else

  00a12	eb 1c		 jmp	 SHORT $LN20@CG_RecvPar
$LN19@CG_RecvPar:

; 389  : 		{
; 390  : 			if(lpUser->Class == lpTarget->Class)

  00a14	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00a17	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00a1e	8b 55 f0	 mov	 edx, DWORD PTR _lpTarget$[ebp]
  00a21	0f b7 82 b8 00
	00 00		 movzx	 eax, WORD PTR [edx+184]
  00a28	3b c8		 cmp	 ecx, eax
  00a2a	75 04		 jne	 SHORT $LN20@CG_RecvPar

; 391  : 			{
; 392  : 				AtributeON = false;

  00a2c	c6 45 eb 00	 mov	 BYTE PTR _AtributeON$[ebp], 0
$LN20@CG_RecvPar:

; 393  : 			}
; 394  : 		}
; 395  : 	}
; 396  : 				
; 397  : 
; 398  : 	if(!AtributeON)

  00a30	0f b6 45 eb	 movzx	 eax, BYTE PTR _AtributeON$[ebp]
  00a34	85 c0		 test	 eax, eax
  00a36	75 05		 jne	 SHORT $LN11@CG_RecvPar

; 399  : 	{
; 400  : 		return;

  00a38	e9 f6 01 00 00	 jmp	 $LN37@CG_RecvPar
$LN11@CG_RecvPar:

; 401  : 	}
; 402  : 
; 403  : 	int pnumber = -1;

  00a3d	c7 45 d8 ff ff
	ff ff		 mov	 DWORD PTR _pnumber$[ebp], -1

; 404  : 
; 405  : 	if ( gObj[TargetIndex].PartyNumber < 0 )

  00a44	8b 45 f8	 mov	 eax, DWORD PTR _TargetIndex$[ebp]
  00a47	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00a4d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a53	83 bc 01 2c 04
	00 00 00	 cmp	 DWORD PTR [ecx+eax+1068], 0
  00a5b	7d 50		 jge	 SHORT $LN10@CG_RecvPar

; 406  : 	{
; 407  : 		gObj[TargetIndex].PartyNumber = gParty.Create(TargetIndex, gObj[TargetIndex].DBNumber, gObj[TargetIndex].Level);

  00a5d	8b 45 f8	 mov	 eax, DWORD PTR _TargetIndex$[ebp]
  00a60	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00a66	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a6c	0f bf 94 01 be
	00 00 00	 movsx	 edx, WORD PTR [ecx+eax+190]
  00a74	52		 push	 edx
  00a75	8b 45 f8	 mov	 eax, DWORD PTR _TargetIndex$[ebp]
  00a78	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00a7e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00a84	8b 54 01 2c	 mov	 edx, DWORD PTR [ecx+eax+44]
  00a88	52		 push	 edx
  00a89	8b 45 f8	 mov	 eax, DWORD PTR _TargetIndex$[ebp]
  00a8c	50		 push	 eax
  00a8d	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  00a92	e8 00 00 00 00	 call	 ?Create@PartyClass@@QAEHHHH@Z ; PartyClass::Create
  00a97	8b 4d f8	 mov	 ecx, DWORD PTR _TargetIndex$[ebp]
  00a9a	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00aa0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00aa6	89 84 0a 2c 04
	00 00		 mov	 DWORD PTR [edx+ecx+1068], eax
$LN10@CG_RecvPar:

; 408  : 	}
; 409  : 
; 410  : 	if ( gObj[TargetIndex].PartyNumber >= 0  && gObj[aIndex].PartyNumber == -1)

  00aad	8b 45 f8	 mov	 eax, DWORD PTR _TargetIndex$[ebp]
  00ab0	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00ab6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00abc	83 bc 01 2c 04
	00 00 00	 cmp	 DWORD PTR [ecx+eax+1068], 0
  00ac4	0f 8c 4b 01 00
	00		 jl	 $LN9@CG_RecvPar
  00aca	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00acd	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00ad3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00ad9	83 bc 01 2c 04
	00 00 ff	 cmp	 DWORD PTR [ecx+eax+1068], -1
  00ae1	0f 85 2e 01 00
	00		 jne	 $LN9@CG_RecvPar

; 411  : 	{
; 412  : 		if( !gParty.Isleader(gObj[TargetIndex].PartyNumber, TargetIndex, gObj[TargetIndex].DBNumber) )

  00ae7	8b 45 f8	 mov	 eax, DWORD PTR _TargetIndex$[ebp]
  00aea	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00af0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00af6	8b 54 01 2c	 mov	 edx, DWORD PTR [ecx+eax+44]
  00afa	52		 push	 edx
  00afb	8b 45 f8	 mov	 eax, DWORD PTR _TargetIndex$[ebp]
  00afe	50		 push	 eax
  00aff	8b 4d f8	 mov	 ecx, DWORD PTR _TargetIndex$[ebp]
  00b02	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00b08	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00b0e	8b 84 0a 2c 04
	00 00		 mov	 eax, DWORD PTR [edx+ecx+1068]
  00b15	50		 push	 eax
  00b16	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  00b1b	e8 00 00 00 00	 call	 ?Isleader@PartyClass@@QAEHHHH@Z ; PartyClass::Isleader
  00b20	85 c0		 test	 eax, eax
  00b22	75 05		 jne	 SHORT $LN8@CG_RecvPar

; 413  : 		{
; 414  : 			return;

  00b24	e9 0a 01 00 00	 jmp	 $LN37@CG_RecvPar
$LN8@CG_RecvPar:

; 415  : 		}
; 416  : 
; 417  : 		if( gParty.GetCount(gObj[TargetIndex].PartyNumber) >= MAX_USER_IN_PARTY )

  00b29	8b 45 f8	 mov	 eax, DWORD PTR _TargetIndex$[ebp]
  00b2c	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00b32	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00b38	8b 94 01 2c 04
	00 00		 mov	 edx, DWORD PTR [ecx+eax+1068]
  00b3f	52		 push	 edx
  00b40	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  00b45	e8 00 00 00 00	 call	 ?GetCount@PartyClass@@QAEHH@Z ; PartyClass::GetCount
  00b4a	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00b4d	7c 05		 jl	 SHORT $LN7@CG_RecvPar

; 418  : 		{
; 419  : 			return;

  00b4f	e9 df 00 00 00	 jmp	 $LN37@CG_RecvPar
$LN7@CG_RecvPar:

; 420  : 		}
; 421  : 
; 422  : 		pnumber = gObj[TargetIndex].PartyNumber;

  00b54	8b 45 f8	 mov	 eax, DWORD PTR _TargetIndex$[ebp]
  00b57	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00b5d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00b63	8b 94 01 2c 04
	00 00		 mov	 edx, DWORD PTR [ecx+eax+1068]
  00b6a	89 55 d8	 mov	 DWORD PTR _pnumber$[ebp], edx

; 423  : 
; 424  : 		int iPartyPos = gParty.Add(gObj[TargetIndex].PartyNumber, aIndex, gObj[aIndex].DBNumber, gObj[aIndex].Level);

  00b6d	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00b70	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00b76	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00b7c	0f bf 94 01 be
	00 00 00	 movsx	 edx, WORD PTR [ecx+eax+190]
  00b84	52		 push	 edx
  00b85	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00b88	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00b8e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00b94	8b 54 01 2c	 mov	 edx, DWORD PTR [ecx+eax+44]
  00b98	52		 push	 edx
  00b99	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00b9c	50		 push	 eax
  00b9d	8b 4d f8	 mov	 ecx, DWORD PTR _TargetIndex$[ebp]
  00ba0	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00ba6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00bac	8b 84 0a 2c 04
	00 00		 mov	 eax, DWORD PTR [edx+ecx+1068]
  00bb3	50		 push	 eax
  00bb4	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  00bb9	e8 00 00 00 00	 call	 ?Add@PartyClass@@QAEHHHHH@Z ; PartyClass::Add
  00bbe	89 45 d4	 mov	 DWORD PTR _iPartyPos$227565[ebp], eax

; 425  : 
; 426  : 		if ( iPartyPos >= 0 )

  00bc1	83 7d d4 00	 cmp	 DWORD PTR _iPartyPos$227565[ebp], 0
  00bc5	7c 3c		 jl	 SHORT $LN6@CG_RecvPar

; 427  : 		{
; 428  : 			gObj[aIndex].PartyNumber = gObj[TargetIndex].PartyNumber;

  00bc7	8b 45 f8	 mov	 eax, DWORD PTR _TargetIndex$[ebp]
  00bca	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00bd0	8b 4d 08	 mov	 ecx, DWORD PTR _aIndex$[ebp]
  00bd3	69 c9 38 2b 00
	00		 imul	 ecx, 11064		; 00002b38H
  00bd9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00bdf	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00be5	8b 84 06 2c 04
	00 00		 mov	 eax, DWORD PTR [esi+eax+1068]
  00bec	89 84 0a 2c 04
	00 00		 mov	 DWORD PTR [edx+ecx+1068], eax

; 429  : 
; 430  : 			gParty.Paint(pnumber);

  00bf3	8b 45 d8	 mov	 eax, DWORD PTR _pnumber$[ebp]
  00bf6	50		 push	 eax
  00bf7	b9 00 00 00 00	 mov	 ecx, OFFSET ?gParty@@3VPartyClass@@A ; gParty
  00bfc	e8 00 00 00 00	 call	 ?Paint@PartyClass@@QAEXH@Z ; PartyClass::Paint
  00c01	eb 12		 jmp	 SHORT $LN9@CG_RecvPar
$LN6@CG_RecvPar:

; 431  : 		}
; 432  : 		else if ( iPartyPos == -1 )

  00c03	83 7d d4 ff	 cmp	 DWORD PTR _iPartyPos$227565[ebp], -1
  00c07	75 04		 jne	 SHORT $LN4@CG_RecvPar

; 433  : 		{
; 434  : 			return;

  00c09	eb 28		 jmp	 SHORT $LN37@CG_RecvPar
  00c0b	eb 08		 jmp	 SHORT $LN9@CG_RecvPar
$LN4@CG_RecvPar:

; 435  : 		}
; 436  : 		else if ( iPartyPos == -2 )

  00c0d	83 7d d4 fe	 cmp	 DWORD PTR _iPartyPos$227565[ebp], -2 ; fffffffeH
  00c11	75 02		 jne	 SHORT $LN9@CG_RecvPar

; 437  : 		{
; 438  : 			return;

  00c13	eb 1e		 jmp	 SHORT $LN37@CG_RecvPar
$LN9@CG_RecvPar:

; 439  : 		}
; 440  : 	}
; 441  : 
; 442  : 	if ( pnumber >= 0 )

  00c15	83 7d d8 00	 cmp	 DWORD PTR _pnumber$[ebp], 0
  00c19	7c 18		 jl	 SHORT $LN37@CG_RecvPar

; 443  : 	{
; 444  : 		CGPartyListAll(pnumber);

  00c1b	8b 45 d8	 mov	 eax, DWORD PTR _pnumber$[ebp]
  00c1e	50		 push	 eax
  00c1f	e8 00 00 00 00	 call	 ?CGPartyListAll@@YAXH@Z	; CGPartyListAll
  00c24	83 c4 04	 add	 esp, 4

; 445  : 		this->Search(aIndex);

  00c27	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00c2a	50		 push	 eax
  00c2b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c2e	e8 00 00 00 00	 call	 ?Search@PartySearch@@QAEXH@Z ; PartySearch::Search
$LN37@CG_RecvPar:

; 446  : 	}
; 447  : }

  00c33	5f		 pop	 edi
  00c34	5e		 pop	 esi
  00c35	5b		 pop	 ebx
  00c36	8b e5		 mov	 esp, ebp
  00c38	5d		 pop	 ebp
  00c39	c2 08 00	 ret	 8
?CG_RecvPartyUser@PartySearch@@QAEXHPAUCG_PartyRecv@@@Z ENDP ; PartySearch::CG_RecvPartyUser
_TEXT	ENDS
PUBLIC	?SaveBinary@PartySearch@@QAEXHPAE@Z		; PartySearch::SaveBinary
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_Level$ = -12						; size = 2
_lpUser$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_buf$ = 12						; size = 4
?SaveBinary@PartySearch@@QAEXHPAE@Z PROC		; PartySearch::SaveBinary
; _this$ = ecx

; 451  : {

  00c40	55		 push	 ebp
  00c41	8b ec		 mov	 ebp, esp
  00c43	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00c46	53		 push	 ebx
  00c47	56		 push	 esi
  00c48	57		 push	 edi
  00c49	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 452  : 	if(!this->ActiveSystem)

  00c4c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00c4f	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00c52	85 c9		 test	 ecx, ecx
  00c54	75 05		 jne	 SHORT $LN2@SaveBinary

; 453  : 	{
; 454  : 		return;

  00c56	e9 da 00 00 00	 jmp	 $LN3@SaveBinary
$LN2@SaveBinary:

; 455  : 	}
; 456  : 
; 457  : 	if(!gObjIsConnectedEx(aIndex))

  00c5b	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00c5e	50		 push	 eax
  00c5f	e8 00 00 00 00	 call	 ?gObjIsConnectedEx@@YA_NH@Z ; gObjIsConnectedEx
  00c64	83 c4 04	 add	 esp, 4
  00c67	0f b6 c8	 movzx	 ecx, al
  00c6a	85 c9		 test	 ecx, ecx
  00c6c	75 05		 jne	 SHORT $LN1@SaveBinary

; 458  : 	{
; 459  : 		return;

  00c6e	e9 c2 00 00 00	 jmp	 $LN3@SaveBinary
$LN1@SaveBinary:

; 460  : 	}
; 461  : 
; 462  : 	LPOBJ lpUser = &gObj[aIndex];

  00c73	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00c76	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00c7c	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00c82	89 45 f8	 mov	 DWORD PTR _lpUser$[ebp], eax

; 463  : 	WORD Level = lpUser->pt_MaxLevel;

  00c85	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00c88	66 8b 88 76 28
	00 00		 mov	 cx, WORD PTR [eax+10358]
  00c8f	66 89 4d f4	 mov	 WORD PTR _Level$[ebp], cx

; 464  : 
; 465  : 	//Active
; 466  : 	buf[0] =  lpUser->pt_Active;

  00c93	8b 45 0c	 mov	 eax, DWORD PTR _buf$[ebp]
  00c96	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  00c99	8a 91 74 28 00
	00		 mov	 dl, BYTE PTR [ecx+10356]
  00c9f	88 10		 mov	 BYTE PTR [eax], dl

; 467  : 	
; 468  : 	// level
; 469  : 	buf[1] = SET_NUMBERH(Level);

  00ca1	0f b7 45 f4	 movzx	 eax, WORD PTR _Level$[ebp]
  00ca5	c1 e8 08	 shr	 eax, 8
  00ca8	8b 4d 0c	 mov	 ecx, DWORD PTR _buf$[ebp]
  00cab	88 41 01	 mov	 BYTE PTR [ecx+1], al

; 470  : 	buf[2] = SET_NUMBERL(Level);

  00cae	0f b7 45 f4	 movzx	 eax, WORD PTR _Level$[ebp]
  00cb2	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00cb7	8b 4d 0c	 mov	 ecx, DWORD PTR _buf$[ebp]
  00cba	88 41 02	 mov	 BYTE PTR [ecx+2], al

; 471  : 
; 472  : 	buf[3] = lpUser->pt_bAllClass;

  00cbd	8b 45 0c	 mov	 eax, DWORD PTR _buf$[ebp]
  00cc0	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  00cc3	8a 91 78 28 00
	00		 mov	 dl, BYTE PTR [ecx+10360]
  00cc9	88 50 03	 mov	 BYTE PTR [eax+3], dl

; 473  : 	buf[4] = lpUser->pt_bOnlyOneClass;

  00ccc	8b 45 0c	 mov	 eax, DWORD PTR _buf$[ebp]
  00ccf	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  00cd2	8a 91 79 28 00
	00		 mov	 dl, BYTE PTR [ecx+10361]
  00cd8	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 474  : 
; 475  : 	buf[5] = lpUser->pt_bDarkWizard;

  00cdb	8b 45 0c	 mov	 eax, DWORD PTR _buf$[ebp]
  00cde	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  00ce1	8a 91 7a 28 00
	00		 mov	 dl, BYTE PTR [ecx+10362]
  00ce7	88 50 05	 mov	 BYTE PTR [eax+5], dl

; 476  : 	buf[6] = lpUser->pt_bDarkKnight;

  00cea	8b 45 0c	 mov	 eax, DWORD PTR _buf$[ebp]
  00ced	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  00cf0	8a 91 7b 28 00
	00		 mov	 dl, BYTE PTR [ecx+10363]
  00cf6	88 50 06	 mov	 BYTE PTR [eax+6], dl

; 477  : 	buf[7] = lpUser->pt_bElf;

  00cf9	8b 45 0c	 mov	 eax, DWORD PTR _buf$[ebp]
  00cfc	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  00cff	8a 91 7c 28 00
	00		 mov	 dl, BYTE PTR [ecx+10364]
  00d05	88 50 07	 mov	 BYTE PTR [eax+7], dl

; 478  : 	buf[8] = lpUser->pt_bMagicGladiator;

  00d08	8b 45 0c	 mov	 eax, DWORD PTR _buf$[ebp]
  00d0b	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  00d0e	8a 91 7d 28 00
	00		 mov	 dl, BYTE PTR [ecx+10365]
  00d14	88 50 08	 mov	 BYTE PTR [eax+8], dl

; 479  : 	buf[9] = lpUser->pt_bDarkLord;

  00d17	8b 45 0c	 mov	 eax, DWORD PTR _buf$[ebp]
  00d1a	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  00d1d	8a 91 7e 28 00
	00		 mov	 dl, BYTE PTR [ecx+10366]
  00d23	88 50 09	 mov	 BYTE PTR [eax+9], dl

; 480  : 	buf[10] = lpUser->pt_bSummoner;

  00d26	8b 45 0c	 mov	 eax, DWORD PTR _buf$[ebp]
  00d29	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  00d2c	8a 91 7f 28 00
	00		 mov	 dl, BYTE PTR [ecx+10367]
  00d32	88 50 0a	 mov	 BYTE PTR [eax+10], dl
$LN3@SaveBinary:

; 481  : 
; 482  : }

  00d35	5f		 pop	 edi
  00d36	5e		 pop	 esi
  00d37	5b		 pop	 ebx
  00d38	8b e5		 mov	 esp, ebp
  00d3a	5d		 pop	 ebp
  00d3b	c2 08 00	 ret	 8
?SaveBinary@PartySearch@@QAEXHPAE@Z ENDP		; PartySearch::SaveBinary
_TEXT	ENDS
PUBLIC	?GC_InfoSend@PartySearch@@QAEXH@Z		; PartySearch::GC_InfoSend
PUBLIC	??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0ED@NMENBPKP@d?3?2projects?2exteam6?43?2source?2gam@ ; `string'
PUBLIC	?__LINE__Var@?1??LoadBinary@PartySearch@@QAEXHPAE@Z@4JA ; `PartySearch::LoadBinary'::`2'::__LINE__Var
PUBLIC	?LoadBinary@PartySearch@@QAEXHPAE@Z		; PartySearch::LoadBinary
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
;	COMDAT ??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@ DB 'error : %s %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@NMENBPKP@d?3?2projects?2exteam6?43?2source?2gam@
CONST	SEGMENT
??_C@_0ED@NMENBPKP@d?3?2projects?2exteam6?43?2source?2gam@ DB 'd:\project'
	DB	's\exteam6.3\source\gameserver\gameserver\partysearch.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??LoadBinary@PartySearch@@QAEXHPAE@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??LoadBinary@PartySearch@@QAEXHPAE@Z@4JA DD 01e6H ; `PartySearch::LoadBinary'::`2'::__LINE__Var
; Function compile flags: /Odtp /ZI
_DATA	ENDS
_TEXT	SEGMENT
tv69 = -80						; size = 4
_lpUser$ = -12						; size = 4
_lpObj$ = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_buf$ = 12						; size = 4
?LoadBinary@PartySearch@@QAEXHPAE@Z PROC		; PartySearch::LoadBinary
; _this$ = ecx

; 486  : {

  00d40	55		 push	 ebp
  00d41	8b ec		 mov	 ebp, esp
  00d43	83 ec 50	 sub	 esp, 80			; 00000050H
  00d46	53		 push	 ebx
  00d47	56		 push	 esi
  00d48	57		 push	 edi
  00d49	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 487  : 	if(!this->ActiveSystem)

  00d4c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00d4f	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00d52	85 c9		 test	 ecx, ecx
  00d54	75 05		 jne	 SHORT $LN3@LoadBinary

; 488  : 	{
; 489  : 		return;

  00d56	e9 5c 01 00 00	 jmp	 $LN4@LoadBinary
$LN3@LoadBinary:

; 490  : 	}
; 491  : 	if ( OBJMAX_RANGE(aIndex) == FALSE )

  00d5b	83 7d 08 00	 cmp	 DWORD PTR _aIndex$[ebp], 0
  00d5f	7d 09		 jge	 SHORT $LN6@LoadBinary
  00d61	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
  00d68	eb 0f		 jmp	 SHORT $LN7@LoadBinary
$LN6@LoadBinary:
  00d6a	33 c0		 xor	 eax, eax
  00d6c	81 7d 08 97 3a
	00 00		 cmp	 DWORD PTR _aIndex$[ebp], 14999 ; 00003a97H
  00d73	0f 9e c0	 setle	 al
  00d76	89 45 b0	 mov	 DWORD PTR tv69[ebp], eax
$LN7@LoadBinary:
  00d79	83 7d b0 00	 cmp	 DWORD PTR tv69[ebp], 0
  00d7d	75 21		 jne	 SHORT $LN2@LoadBinary

; 492  : 	{
; 493  : 		LogAdd("error : %s %d", __FILE__, __LINE__);

  00d7f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?1??LoadBinary@PartySearch@@QAEXHPAE@Z@4JA
  00d84	83 c0 07	 add	 eax, 7
  00d87	50		 push	 eax
  00d88	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@NMENBPKP@d?3?2projects?2exteam6?43?2source?2gam@
  00d8d	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CKAEPJAF@error?5?3?5?$CFs?5?$CFd?$AA@
  00d92	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00d98	83 c4 0c	 add	 esp, 12			; 0000000cH

; 494  : 		return;

  00d9b	e9 17 01 00 00	 jmp	 $LN4@LoadBinary
$LN2@LoadBinary:

; 495  : 	}
; 496  : 
; 497  : 	LPOBJ lpObj = &gObj[aIndex];

  00da0	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00da3	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00da9	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00daf	89 45 f8	 mov	 DWORD PTR _lpObj$[ebp], eax

; 498  : 
; 499  : 	if ( lpObj->Connected < PLAYER_LOGGED )

  00db2	8b 45 f8	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00db5	83 78 04 02	 cmp	 DWORD PTR [eax+4], 2
  00db9	7d 05		 jge	 SHORT $LN1@LoadBinary

; 500  : 	{
; 501  : 		return;

  00dbb	e9 f7 00 00 00	 jmp	 $LN4@LoadBinary
$LN1@LoadBinary:

; 502  : 	}
; 503  : 	LPOBJ lpUser = &gObj[aIndex];

  00dc0	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00dc3	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00dc9	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00dcf	89 45 f4	 mov	 DWORD PTR _lpUser$[ebp], eax

; 504  : 
; 505  : 	lpUser->pt_Active = buf[0];

  00dd2	8b 45 0c	 mov	 eax, DWORD PTR _buf$[ebp]
  00dd5	80 38 00	 cmp	 BYTE PTR [eax], 0
  00dd8	0f 95 c1	 setne	 cl
  00ddb	8b 55 f4	 mov	 edx, DWORD PTR _lpUser$[ebp]
  00dde	88 8a 74 28 00
	00		 mov	 BYTE PTR [edx+10356], cl

; 506  : 
; 507  : 	lpUser->pt_MaxLevel = MAKE_NUMBERW(buf[1], buf[2]);

  00de4	8b 45 0c	 mov	 eax, DWORD PTR _buf$[ebp]
  00de7	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  00deb	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  00df1	0f b6 d1	 movzx	 edx, cl
  00df4	8b 45 0c	 mov	 eax, DWORD PTR _buf$[ebp]
  00df7	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  00dfb	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  00e01	0f b6 c1	 movzx	 eax, cl
  00e04	c1 e0 08	 shl	 eax, 8
  00e07	0b d0		 or	 edx, eax
  00e09	8b 4d f4	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  00e0c	66 89 91 76 28
	00 00		 mov	 WORD PTR [ecx+10358], dx

; 508  : 
; 509  : 	lpUser->pt_bAllClass = buf[3];

  00e13	8b 45 0c	 mov	 eax, DWORD PTR _buf$[ebp]
  00e16	80 78 03 00	 cmp	 BYTE PTR [eax+3], 0
  00e1a	0f 95 c1	 setne	 cl
  00e1d	8b 55 f4	 mov	 edx, DWORD PTR _lpUser$[ebp]
  00e20	88 8a 78 28 00
	00		 mov	 BYTE PTR [edx+10360], cl

; 510  : 	lpUser->pt_bOnlyOneClass = buf[4];

  00e26	8b 45 0c	 mov	 eax, DWORD PTR _buf$[ebp]
  00e29	80 78 04 00	 cmp	 BYTE PTR [eax+4], 0
  00e2d	0f 95 c1	 setne	 cl
  00e30	8b 55 f4	 mov	 edx, DWORD PTR _lpUser$[ebp]
  00e33	88 8a 79 28 00
	00		 mov	 BYTE PTR [edx+10361], cl

; 511  : 
; 512  : 	lpUser->pt_bDarkWizard = buf[5];

  00e39	8b 45 0c	 mov	 eax, DWORD PTR _buf$[ebp]
  00e3c	80 78 05 00	 cmp	 BYTE PTR [eax+5], 0
  00e40	0f 95 c1	 setne	 cl
  00e43	8b 55 f4	 mov	 edx, DWORD PTR _lpUser$[ebp]
  00e46	88 8a 7a 28 00
	00		 mov	 BYTE PTR [edx+10362], cl

; 513  : 	lpUser->pt_bDarkKnight = buf[6];

  00e4c	8b 45 0c	 mov	 eax, DWORD PTR _buf$[ebp]
  00e4f	80 78 06 00	 cmp	 BYTE PTR [eax+6], 0
  00e53	0f 95 c1	 setne	 cl
  00e56	8b 55 f4	 mov	 edx, DWORD PTR _lpUser$[ebp]
  00e59	88 8a 7b 28 00
	00		 mov	 BYTE PTR [edx+10363], cl

; 514  : 	lpUser->pt_bElf = buf[7];

  00e5f	8b 45 0c	 mov	 eax, DWORD PTR _buf$[ebp]
  00e62	80 78 07 00	 cmp	 BYTE PTR [eax+7], 0
  00e66	0f 95 c1	 setne	 cl
  00e69	8b 55 f4	 mov	 edx, DWORD PTR _lpUser$[ebp]
  00e6c	88 8a 7c 28 00
	00		 mov	 BYTE PTR [edx+10364], cl

; 515  : 	lpUser->pt_bMagicGladiator = buf[8];

  00e72	8b 45 0c	 mov	 eax, DWORD PTR _buf$[ebp]
  00e75	80 78 08 00	 cmp	 BYTE PTR [eax+8], 0
  00e79	0f 95 c1	 setne	 cl
  00e7c	8b 55 f4	 mov	 edx, DWORD PTR _lpUser$[ebp]
  00e7f	88 8a 7d 28 00
	00		 mov	 BYTE PTR [edx+10365], cl

; 516  : 	lpUser->pt_bDarkLord = buf[9];

  00e85	8b 45 0c	 mov	 eax, DWORD PTR _buf$[ebp]
  00e88	80 78 09 00	 cmp	 BYTE PTR [eax+9], 0
  00e8c	0f 95 c1	 setne	 cl
  00e8f	8b 55 f4	 mov	 edx, DWORD PTR _lpUser$[ebp]
  00e92	88 8a 7e 28 00
	00		 mov	 BYTE PTR [edx+10366], cl

; 517  : 	lpUser->pt_bSummoner = buf[10];

  00e98	8b 45 0c	 mov	 eax, DWORD PTR _buf$[ebp]
  00e9b	80 78 0a 00	 cmp	 BYTE PTR [eax+10], 0
  00e9f	0f 95 c1	 setne	 cl
  00ea2	8b 55 f4	 mov	 edx, DWORD PTR _lpUser$[ebp]
  00ea5	88 8a 7f 28 00
	00		 mov	 BYTE PTR [edx+10367], cl

; 518  : 
; 519  : 
; 520  : 	this->GC_InfoSend(aIndex);

  00eab	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00eae	50		 push	 eax
  00eaf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00eb2	e8 00 00 00 00	 call	 ?GC_InfoSend@PartySearch@@QAEXH@Z ; PartySearch::GC_InfoSend
$LN4@LoadBinary:

; 521  : }

  00eb7	5f		 pop	 edi
  00eb8	5e		 pop	 esi
  00eb9	5b		 pop	 ebx
  00eba	8b e5		 mov	 esp, ebp
  00ebc	5d		 pop	 ebp
  00ebd	c2 08 00	 ret	 8
?LoadBinary@PartySearch@@QAEXHPAE@Z ENDP		; PartySearch::LoadBinary
_TEXT	ENDS
PUBLIC	?set@PBMSG_HEAD2@@QAEXPAEEEE@Z			; PBMSG_HEAD2::set
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_pSend$ = -28						; size = 16
_lpUser$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?GC_InfoSend@PartySearch@@QAEXH@Z PROC			; PartySearch::GC_InfoSend
; _this$ = ecx

; 525  : {

  00ec0	55		 push	 ebp
  00ec1	8b ec		 mov	 ebp, esp
  00ec3	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00ec6	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00ecb	33 c5		 xor	 eax, ebp
  00ecd	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00ed0	53		 push	 ebx
  00ed1	56		 push	 esi
  00ed2	57		 push	 edi
  00ed3	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 526  : 	if(!this->ActiveSystem)

  00ed6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00ed9	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00edc	85 c9		 test	 ecx, ecx
  00ede	75 05		 jne	 SHORT $LN1@GC_InfoSen

; 527  : 	{
; 528  : 		return;

  00ee0	e9 b6 00 00 00	 jmp	 $LN2@GC_InfoSen
$LN1@GC_InfoSen:

; 529  : 	}
; 530  : 
; 531  : 	LPOBJ lpUser = &gObj[aIndex];

  00ee5	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00ee8	69 c0 38 2b 00
	00		 imul	 eax, 11064		; 00002b38H
  00eee	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00ef4	89 45 f4	 mov	 DWORD PTR _lpUser$[ebp], eax

; 532  : 
; 533  : 	CG_AutoPartyInfo pSend;
; 534  : 
; 535  : 	pSend.h.set((LPBYTE)&pSend, 0xFB, 0x1B, sizeof(pSend));

  00ef7	6a 10		 push	 16			; 00000010H
  00ef9	6a 1b		 push	 27			; 0000001bH
  00efb	68 fb 00 00 00	 push	 251			; 000000fbH
  00f00	8d 45 e4	 lea	 eax, DWORD PTR _pSend$[ebp]
  00f03	50		 push	 eax
  00f04	8d 4d e4	 lea	 ecx, DWORD PTR _pSend$[ebp]
  00f07	e8 00 00 00 00	 call	 ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ; PBMSG_HEAD2::set

; 536  : 	pSend.ActiveSystem = lpUser->pt_Active;

  00f0c	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00f0f	8a 88 74 28 00
	00		 mov	 cl, BYTE PTR [eax+10356]
  00f15	88 4d e8	 mov	 BYTE PTR _pSend$[ebp+4], cl

; 537  : 	pSend.MaxLevel = lpUser->pt_MaxLevel;

  00f18	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00f1b	66 8b 88 76 28
	00 00		 mov	 cx, WORD PTR [eax+10358]
  00f22	66 89 4d ea	 mov	 WORD PTR _pSend$[ebp+6], cx

; 538  : 	pSend.bAllClass = lpUser->pt_bAllClass;

  00f26	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00f29	8a 88 78 28 00
	00		 mov	 cl, BYTE PTR [eax+10360]
  00f2f	88 4d ec	 mov	 BYTE PTR _pSend$[ebp+8], cl

; 539  : 	pSend.bOnlyOneClass = lpUser->pt_bOnlyOneClass;

  00f32	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00f35	8a 88 79 28 00
	00		 mov	 cl, BYTE PTR [eax+10361]
  00f3b	88 4d ed	 mov	 BYTE PTR _pSend$[ebp+9], cl

; 540  : 	pSend.bDarkWizard = lpUser->pt_bDarkWizard;

  00f3e	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00f41	8a 88 7a 28 00
	00		 mov	 cl, BYTE PTR [eax+10362]
  00f47	88 4d ee	 mov	 BYTE PTR _pSend$[ebp+10], cl

; 541  : 	pSend.bDarkKnight = lpUser->pt_bDarkKnight;

  00f4a	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00f4d	8a 88 7b 28 00
	00		 mov	 cl, BYTE PTR [eax+10363]
  00f53	88 4d ef	 mov	 BYTE PTR _pSend$[ebp+11], cl

; 542  : 	pSend.bElf = lpUser->pt_bElf;

  00f56	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00f59	8a 88 7c 28 00
	00		 mov	 cl, BYTE PTR [eax+10364]
  00f5f	88 4d f0	 mov	 BYTE PTR _pSend$[ebp+12], cl

; 543  : 	pSend.bMagicGladiator = lpUser->pt_bMagicGladiator;

  00f62	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00f65	8a 88 7d 28 00
	00		 mov	 cl, BYTE PTR [eax+10365]
  00f6b	88 4d f1	 mov	 BYTE PTR _pSend$[ebp+13], cl

; 544  : 	pSend.bDarkLord = lpUser->pt_bDarkLord;

  00f6e	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00f71	8a 88 7e 28 00
	00		 mov	 cl, BYTE PTR [eax+10366]
  00f77	88 4d f2	 mov	 BYTE PTR _pSend$[ebp+14], cl

; 545  : 	pSend.bSummoner = lpUser->pt_bSummoner;

  00f7a	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$[ebp]
  00f7d	8a 88 7f 28 00
	00		 mov	 cl, BYTE PTR [eax+10367]
  00f83	88 4d f3	 mov	 BYTE PTR _pSend$[ebp+15], cl

; 546  : 	DataSend(aIndex, (LPBYTE)&pSend, pSend.h.size);

  00f86	0f b6 45 e5	 movzx	 eax, BYTE PTR _pSend$[ebp+1]
  00f8a	50		 push	 eax
  00f8b	8d 4d e4	 lea	 ecx, DWORD PTR _pSend$[ebp]
  00f8e	51		 push	 ecx
  00f8f	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  00f92	52		 push	 edx
  00f93	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00f98	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@GC_InfoSen:

; 547  : }

  00f9b	5f		 pop	 edi
  00f9c	5e		 pop	 esi
  00f9d	5b		 pop	 ebx
  00f9e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00fa1	33 cd		 xor	 ecx, ebp
  00fa3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00fa8	8b e5		 mov	 esp, ebp
  00faa	5d		 pop	 ebp
  00fab	c2 04 00	 ret	 4
?GC_InfoSend@PartySearch@@QAEXH@Z ENDP			; PartySearch::GC_InfoSend
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\include\prodef.h
_TEXT	ENDS
;	COMDAT ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpBuf$ = 8						; size = 4
_head$ = 12						; size = 1
_sub$ = 16						; size = 1
_size$ = 20						; size = 1
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z PROC			; PBMSG_HEAD2::set, COMDAT
; _this$ = ecx

; 104  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 105  : 		lpBuf[0] = 0xC1;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  0000f	c6 00 c1	 mov	 BYTE PTR [eax], 193	; 000000c1H

; 106  : 		lpBuf[1] = size;

  00012	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  00015	8a 4d 14	 mov	 cl, BYTE PTR _size$[ebp]
  00018	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 107  : 		lpBuf[2] = head;

  0001b	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  0001e	8a 4d 0c	 mov	 cl, BYTE PTR _head$[ebp]
  00021	88 48 02	 mov	 BYTE PTR [eax+2], cl

; 108  : 		lpBuf[3] = sub;

  00024	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]
  00027	8a 4d 10	 mov	 cl, BYTE PTR _sub$[ebp]
  0002a	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 109  : 	};

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 10 00	 ret	 16			; 00000010H
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ENDP			; PBMSG_HEAD2::set
_TEXT	ENDS
END
