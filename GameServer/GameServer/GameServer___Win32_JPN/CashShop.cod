; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\CashShop.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_iNpcUpDfLevel_CGATE DD 01H
	DD	02H
	DD	02dc6c0H
	DD	02H
	DD	03H
	DD	02dc6c0H
	DD	03H
	DD	04H
	DD	02dc6c0H
_g_iNpcUpDfLevel_CSTATUE DD 01H
	DD	03H
	DD	02dc6c0H
	DD	02H
	DD	05H
	DD	02dc6c0H
	DD	03H
	DD	07H
	DD	02dc6c0H
_g_iNpcUpMaxHP_CGATE DD 02625a0H
	DD	02H
	DD	0f4240H
	DD	03567e0H
	DD	03H
	DD	0f4240H
	DD	04f5880H
	DD	04H
	DD	0f4240H
_g_iNpcUpMaxHP_CSTATUE DD 02191c0H
	DD	03H
	DD	0f4240H
	DD	033e140H
	DD	05H
	DD	0f4240H
	DD	04c4b40H
	DD	07H
	DD	0f4240H
_g_iNpcUpRgLevel_CSTATUE DD 01H
	DD	03H
	DD	04c4b40H
	DD	02H
	DD	05H
	DD	04c4b40H
	DD	03H
	DD	07H
	DD	04c4b40H
_g_iCsUserReSpawnArea DD 023H
	DD	011H
	DD	090H
	DD	030H
	DD	04aH
	DD	090H
	DD	073H
	DD	09aH
	DD	023H
	DD	011H
	DD	090H
	DD	030H
_g_iNpcDefense_CGATE DD 064H
	DD	0b4H
	DD	012cH
	DD	0208H
_g_iNpcDefense_CSTATUE DD 050H
	DD	0b4H
	DD	0154H
	DD	0226H
_g_iCastleWallStepAxisY DD 071H
	DD	0a0H
	DD	0cbH
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?IsCashItem@@YAHH@Z				; IsCashItem
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\cashshop.cpp
_TEXT	SEGMENT
tv64 = -68						; size = 4
_iItemCode$ = 8						; size = 4
?IsCashItem@@YAHH@Z PROC				; IsCashItem

; 1530 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1531 : 	switch ( iItemCode )

  00009	8b 45 08	 mov	 eax, DWORD PTR _iItemCode$[ebp]
  0000c	89 45 bc	 mov	 DWORD PTR tv64[ebp], eax
  0000f	81 7d bc 35 1c
	00 00		 cmp	 DWORD PTR tv64[ebp], 7221 ; 00001c35H
  00016	7f 30		 jg	 SHORT $LN20@IsCashItem
  00018	81 7d bc 35 1c
	00 00		 cmp	 DWORD PTR tv64[ebp], 7221 ; 00001c35H
  0001f	74 74		 je	 SHORT $LN9@IsCashItem
  00021	8b 4d bc	 mov	 ecx, DWORD PTR tv64[ebp]
  00024	81 e9 2b 1a 00
	00		 sub	 ecx, 6699		; 00001a2bH
  0002a	89 4d bc	 mov	 DWORD PTR tv64[ebp], ecx
  0002d	83 7d bc 50	 cmp	 DWORD PTR tv64[ebp], 80	; 00000050H
  00031	0f 87 9d 00 00
	00		 ja	 $LN16@IsCashItem
  00037	8b 55 bc	 mov	 edx, DWORD PTR tv64[ebp]
  0003a	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN21@IsCashItem[edx]
  00041	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN23@IsCashItem[eax*4]
$LN20@IsCashItem:
  00048	8b 4d bc	 mov	 ecx, DWORD PTR tv64[ebp]
  0004b	81 e9 36 1c 00
	00		 sub	 ecx, 7222		; 00001c36H
  00051	89 4d bc	 mov	 DWORD PTR tv64[ebp], ecx
  00054	83 7d bc 2c	 cmp	 DWORD PTR tv64[ebp], 44	; 0000002cH
  00058	77 7a		 ja	 SHORT $LN16@IsCashItem
  0005a	8b 55 bc	 mov	 edx, DWORD PTR tv64[ebp]
  0005d	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN22@IsCashItem[edx]
  00064	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN24@IsCashItem[eax*4]
$LN15@IsCashItem:

; 1532 : 	{
; 1533 : 		case ITEMGET(13,43): return TRUE;

  0006b	b8 01 00 00 00	 mov	 eax, 1
  00070	eb 64		 jmp	 SHORT $LN18@IsCashItem
$LN14@IsCashItem:

; 1534 : 		case ITEMGET(13,44): return TRUE;

  00072	b8 01 00 00 00	 mov	 eax, 1
  00077	eb 5d		 jmp	 SHORT $LN18@IsCashItem
$LN13@IsCashItem:

; 1535 : 		case ITEMGET(13,45): return TRUE;

  00079	b8 01 00 00 00	 mov	 eax, 1
  0007e	eb 56		 jmp	 SHORT $LN18@IsCashItem
$LN12@IsCashItem:

; 1536 : 
; 1537 : 		case ITEMGET(13,46): return TRUE;

  00080	b8 01 00 00 00	 mov	 eax, 1
  00085	eb 4f		 jmp	 SHORT $LN18@IsCashItem
$LN11@IsCashItem:

; 1538 : 		case ITEMGET(13,47): return TRUE;

  00087	b8 01 00 00 00	 mov	 eax, 1
  0008c	eb 48		 jmp	 SHORT $LN18@IsCashItem
$LN10@IsCashItem:

; 1539 : 		case ITEMGET(13,48): return TRUE;

  0008e	b8 01 00 00 00	 mov	 eax, 1
  00093	eb 41		 jmp	 SHORT $LN18@IsCashItem
$LN9@IsCashItem:

; 1540 : 
; 1541 : 		case ITEMGET(14,53): return TRUE;

  00095	b8 01 00 00 00	 mov	 eax, 1
  0009a	eb 3a		 jmp	 SHORT $LN18@IsCashItem
$LN8@IsCashItem:

; 1542 : 		case ITEMGET(14,54): return TRUE;

  0009c	b8 01 00 00 00	 mov	 eax, 1
  000a1	eb 33		 jmp	 SHORT $LN18@IsCashItem
$LN7@IsCashItem:

; 1543 : 
; 1544 : 		case ITEMGET(14,58): return TRUE;

  000a3	b8 01 00 00 00	 mov	 eax, 1
  000a8	eb 2c		 jmp	 SHORT $LN18@IsCashItem
$LN6@IsCashItem:

; 1545 : 		case ITEMGET(14,59): return TRUE;

  000aa	b8 01 00 00 00	 mov	 eax, 1
  000af	eb 25		 jmp	 SHORT $LN18@IsCashItem
$LN5@IsCashItem:

; 1546 : 		case ITEMGET(14,60): return TRUE;

  000b1	b8 01 00 00 00	 mov	 eax, 1
  000b6	eb 1e		 jmp	 SHORT $LN18@IsCashItem
$LN4@IsCashItem:

; 1547 : 		case ITEMGET(14,61): return TRUE;

  000b8	b8 01 00 00 00	 mov	 eax, 1
  000bd	eb 17		 jmp	 SHORT $LN18@IsCashItem
$LN3@IsCashItem:

; 1548 : 		case ITEMGET(14,62): return TRUE;

  000bf	b8 01 00 00 00	 mov	 eax, 1
  000c4	eb 10		 jmp	 SHORT $LN18@IsCashItem
$LN2@IsCashItem:

; 1549 : 
; 1550 : 		case ITEMGET(13,54):
; 1551 : 		case ITEMGET(13,55):
; 1552 : 		case ITEMGET(13,56):
; 1553 : 		case ITEMGET(13,57):
; 1554 : 		case ITEMGET(13,58):
; 1555 : 		case ITEMGET(13,59): //Seal of Mobility
; 1556 : 		case ITEMGET(13,60): //Indulgence
; 1557 : 		case ITEMGET(13,61): //Illusion Temple Ticket
; 1558 : 
; 1559 : 		case ITEMGET(14,70):
; 1560 : 		case ITEMGET(14,71):
; 1561 : 			
; 1562 : 		case ITEMGET(14,72):
; 1563 : 		case ITEMGET(14,73):
; 1564 : 		case ITEMGET(14,74):
; 1565 : 		case ITEMGET(14,75):
; 1566 : 		case ITEMGET(14,76):
; 1567 : 		case ITEMGET(14,77):
; 1568 : 		case ITEMGET(14,78):
; 1569 : 		case ITEMGET(14,79):
; 1570 : 		case ITEMGET(14,80):
; 1571 : 		case ITEMGET(14,81):
; 1572 : 		case ITEMGET(14,82):
; 1573 : 		case ITEMGET(14,83):
; 1574 : 
; 1575 : 		case ITEMGET(14,94): //Medium Elite Potion
; 1576 : 			return TRUE;

  000c6	b8 01 00 00 00	 mov	 eax, 1
  000cb	eb 09		 jmp	 SHORT $LN18@IsCashItem
$LN1@IsCashItem:

; 1577 : 
; 1578 : 		//Missing Other Chaos Card
; 1579 : 
; 1580 : 		//Missing 2 Items from Season 4.0
; 1581 : 		
; 1582 : 		//Season4.5 add-on
; 1583 : 		case ITEMGET(13,81): //Talisman of Guardian
; 1584 : 		case ITEMGET(13,82): //Talisman of Protection
; 1585 : 		case ITEMGET(13,83): //Talisman of Satan Wing
; 1586 : 		case ITEMGET(13,84): //Talisman of Heaven Wing
; 1587 : 		case ITEMGET(13,85): //Talisman of Elf Wing
; 1588 : 		case ITEMGET(13,86): //Talisman of Curse Wing
; 1589 : 		case ITEMGET(13,87): //Talisman of Lord Cape
; 1590 : 		case ITEMGET(13,88): //Talisman of Dragon Wing
; 1591 : 		case ITEMGET(13,89): //Talisman of Soul Wing
; 1592 : 		case ITEMGET(13,90): //Talisman of Spirit Wing
; 1593 : 		case ITEMGET(13,91): //Talisman of Despair Wing
; 1594 : 		case ITEMGET(13,92): //Talisman of Darkness Wing
; 1595 : 		case ITEMGET(13,93): //Seal of Master Ascension
; 1596 : 		case ITEMGET(13,94): //Seal of Master Wealth
; 1597 : 		
; 1598 : 		//Season3 add-on
; 1599 : 		case ITEMGET(13,62): //Seal of Healing
; 1600 : 		case ITEMGET(13,63): //Seal of Divinity
; 1601 : 		case ITEMGET(13,64): //Demon Pet
; 1602 : 		case ITEMGET(13,65): //Spirit Guardian Pet
; 1603 : 		case ITEMGET(14,96): //Talisman of Chaos Assembly
; 1604 : 		case ITEMGET(14,97): //Scroll of Battle
; 1605 : 		case ITEMGET(14,98): //Scroll of Strenghthener
; 1606 : 			//Season 4.6 addon
; 1607 : 		case ITEMGET(13,76)://Panda Ring
; 1608 : 		case ITEMGET(13,80)://Panda Pet
; 1609 : 		case ITEMGET(13, 106): // Unicorn Pet Season 5 Episode 2 JPN
; 1610 : 		case ITEMGET(13, 122): // Skeleton Ring Season 5 Episode 2 JPN 
; 1611 : 		case ITEMGET(13, 123): // Skeleton Pet Season 5 Episode 2 JPN
; 1612 : 			return TRUE;

  000cd	b8 01 00 00 00	 mov	 eax, 1
  000d2	eb 02		 jmp	 SHORT $LN18@IsCashItem
$LN16@IsCashItem:

; 1613 : 	}
; 1614 : 	return FALSE;

  000d4	33 c0		 xor	 eax, eax
$LN18@IsCashItem:

; 1615 : }

  000d6	5f		 pop	 edi
  000d7	5e		 pop	 esi
  000d8	5b		 pop	 ebx
  000d9	8b e5		 mov	 esp, ebp
  000db	5d		 pop	 ebp
  000dc	c3		 ret	 0
  000dd	8d 49 00	 npad	 3
$LN23@IsCashItem:
  000e0	00 00 00 00	 DD	 $LN15@IsCashItem
  000e4	00 00 00 00	 DD	 $LN14@IsCashItem
  000e8	00 00 00 00	 DD	 $LN13@IsCashItem
  000ec	00 00 00 00	 DD	 $LN12@IsCashItem
  000f0	00 00 00 00	 DD	 $LN11@IsCashItem
  000f4	00 00 00 00	 DD	 $LN10@IsCashItem
  000f8	00 00 00 00	 DD	 $LN2@IsCashItem
  000fc	00 00 00 00	 DD	 $LN1@IsCashItem
  00100	00 00 00 00	 DD	 $LN16@IsCashItem
$LN21@IsCashItem:
  00104	00		 DB	 0
  00105	01		 DB	 1
  00106	02		 DB	 2
  00107	03		 DB	 3
  00108	04		 DB	 4
  00109	05		 DB	 5
  0010a	08		 DB	 8
  0010b	08		 DB	 8
  0010c	08		 DB	 8
  0010d	08		 DB	 8
  0010e	08		 DB	 8
  0010f	06		 DB	 6
  00110	06		 DB	 6
  00111	06		 DB	 6
  00112	06		 DB	 6
  00113	06		 DB	 6
  00114	06		 DB	 6
  00115	06		 DB	 6
  00116	06		 DB	 6
  00117	07		 DB	 7
  00118	07		 DB	 7
  00119	07		 DB	 7
  0011a	07		 DB	 7
  0011b	08		 DB	 8
  0011c	08		 DB	 8
  0011d	08		 DB	 8
  0011e	08		 DB	 8
  0011f	08		 DB	 8
  00120	08		 DB	 8
  00121	08		 DB	 8
  00122	08		 DB	 8
  00123	08		 DB	 8
  00124	08		 DB	 8
  00125	07		 DB	 7
  00126	08		 DB	 8
  00127	08		 DB	 8
  00128	08		 DB	 8
  00129	07		 DB	 7
  0012a	07		 DB	 7
  0012b	07		 DB	 7
  0012c	07		 DB	 7
  0012d	07		 DB	 7
  0012e	07		 DB	 7
  0012f	07		 DB	 7
  00130	07		 DB	 7
  00131	07		 DB	 7
  00132	07		 DB	 7
  00133	07		 DB	 7
  00134	07		 DB	 7
  00135	07		 DB	 7
  00136	07		 DB	 7
  00137	07		 DB	 7
  00138	08		 DB	 8
  00139	08		 DB	 8
  0013a	08		 DB	 8
  0013b	08		 DB	 8
  0013c	08		 DB	 8
  0013d	08		 DB	 8
  0013e	08		 DB	 8
  0013f	08		 DB	 8
  00140	08		 DB	 8
  00141	08		 DB	 8
  00142	08		 DB	 8
  00143	07		 DB	 7
  00144	08		 DB	 8
  00145	08		 DB	 8
  00146	08		 DB	 8
  00147	08		 DB	 8
  00148	08		 DB	 8
  00149	08		 DB	 8
  0014a	08		 DB	 8
  0014b	08		 DB	 8
  0014c	08		 DB	 8
  0014d	08		 DB	 8
  0014e	08		 DB	 8
  0014f	08		 DB	 8
  00150	08		 DB	 8
  00151	08		 DB	 8
  00152	08		 DB	 8
  00153	07		 DB	 7
  00154	07		 DB	 7
  00155	8d 49 00	 npad	 3
$LN24@IsCashItem:
  00158	00 00 00 00	 DD	 $LN8@IsCashItem
  0015c	00 00 00 00	 DD	 $LN7@IsCashItem
  00160	00 00 00 00	 DD	 $LN6@IsCashItem
  00164	00 00 00 00	 DD	 $LN5@IsCashItem
  00168	00 00 00 00	 DD	 $LN4@IsCashItem
  0016c	00 00 00 00	 DD	 $LN3@IsCashItem
  00170	00 00 00 00	 DD	 $LN2@IsCashItem
  00174	00 00 00 00	 DD	 $LN1@IsCashItem
  00178	00 00 00 00	 DD	 $LN16@IsCashItem
$LN22@IsCashItem:
  0017c	00		 DB	 0
  0017d	08		 DB	 8
  0017e	08		 DB	 8
  0017f	08		 DB	 8
  00180	01		 DB	 1
  00181	02		 DB	 2
  00182	03		 DB	 3
  00183	04		 DB	 4
  00184	05		 DB	 5
  00185	08		 DB	 8
  00186	08		 DB	 8
  00187	08		 DB	 8
  00188	08		 DB	 8
  00189	08		 DB	 8
  0018a	08		 DB	 8
  0018b	08		 DB	 8
  0018c	06		 DB	 6
  0018d	06		 DB	 6
  0018e	06		 DB	 6
  0018f	06		 DB	 6
  00190	06		 DB	 6
  00191	06		 DB	 6
  00192	06		 DB	 6
  00193	06		 DB	 6
  00194	06		 DB	 6
  00195	06		 DB	 6
  00196	06		 DB	 6
  00197	06		 DB	 6
  00198	06		 DB	 6
  00199	06		 DB	 6
  0019a	08		 DB	 8
  0019b	08		 DB	 8
  0019c	08		 DB	 8
  0019d	08		 DB	 8
  0019e	08		 DB	 8
  0019f	08		 DB	 8
  001a0	08		 DB	 8
  001a1	08		 DB	 8
  001a2	08		 DB	 8
  001a3	08		 DB	 8
  001a4	06		 DB	 6
  001a5	08		 DB	 8
  001a6	07		 DB	 7
  001a7	07		 DB	 7
  001a8	07		 DB	 7
?IsCashItem@@YAHH@Z ENDP				; IsCashItem
_TEXT	ENDS
PUBLIC	?CanItemTouchCash@@YAHH@Z			; CanItemTouchCash
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv64 = -68						; size = 4
_iItemCode$ = 8						; size = 4
?CanItemTouchCash@@YAHH@Z PROC				; CanItemTouchCash

; 1618 : {

  001b0	55		 push	 ebp
  001b1	8b ec		 mov	 ebp, esp
  001b3	83 ec 44	 sub	 esp, 68			; 00000044H
  001b6	53		 push	 ebx
  001b7	56		 push	 esi
  001b8	57		 push	 edi

; 1619 : 	switch ( iItemCode )

  001b9	8b 45 08	 mov	 eax, DWORD PTR _iItemCode$[ebp]
  001bc	89 45 bc	 mov	 DWORD PTR tv64[ebp], eax
  001bf	81 7d bc 6a 1a
	00 00		 cmp	 DWORD PTR tv64[ebp], 6762 ; 00001a6aH
  001c6	7f 2c		 jg	 SHORT $LN6@CanItemTou
  001c8	81 7d bc 6a 1a
	00 00		 cmp	 DWORD PTR tv64[ebp], 6762 ; 00001a6aH
  001cf	74 54		 je	 SHORT $LN1@CanItemTou
  001d1	8b 4d bc	 mov	 ecx, DWORD PTR tv64[ebp]
  001d4	81 e9 40 1a 00
	00		 sub	 ecx, 6720		; 00001a40H
  001da	89 4d bc	 mov	 DWORD PTR tv64[ebp], ecx
  001dd	83 7d bc 10	 cmp	 DWORD PTR tv64[ebp], 16	; 00000010H
  001e1	77 49		 ja	 SHORT $LN2@CanItemTou
  001e3	8b 55 bc	 mov	 edx, DWORD PTR tv64[ebp]
  001e6	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN8@CanItemTou[edx]
  001ed	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN9@CanItemTou[eax*4]
$LN6@CanItemTou:
  001f4	81 7d bc 36 1c
	00 00		 cmp	 DWORD PTR tv64[ebp], 7222 ; 00001c36H
  001fb	7f 1d		 jg	 SHORT $LN7@CanItemTou
  001fd	81 7d bc 36 1c
	00 00		 cmp	 DWORD PTR tv64[ebp], 7222 ; 00001c36H
  00204	74 1f		 je	 SHORT $LN1@CanItemTou
  00206	81 7d bc 7a 1a
	00 00		 cmp	 DWORD PTR tv64[ebp], 6778 ; 00001a7aH
  0020d	7c 1d		 jl	 SHORT $LN2@CanItemTou
  0020f	81 7d bc 7b 1a
	00 00		 cmp	 DWORD PTR tv64[ebp], 6779 ; 00001a7bH
  00216	7e 0d		 jle	 SHORT $LN1@CanItemTou
  00218	eb 12		 jmp	 SHORT $LN2@CanItemTou
$LN7@CanItemTou:
  0021a	81 7d bc 60 1c
	00 00		 cmp	 DWORD PTR tv64[ebp], 7264 ; 00001c60H
  00221	74 02		 je	 SHORT $LN1@CanItemTou
  00223	eb 07		 jmp	 SHORT $LN2@CanItemTou
$LN1@CanItemTou:

; 1620 : 	{
; 1621 : 		case ITEMGET(14,54):
; 1622 : 		case ITEMGET(13,64)://Demon Pet
; 1623 : 		case ITEMGET(13,65)://Spirit Guardian Pet
; 1624 : 		case ITEMGET(14,96):
; 1625 : 		case ITEMGET(13,76)://Panda Ring
; 1626 : 		case ITEMGET(13,80)://Panda Pet
; 1627 : 		case ITEMGET(13, 106): // Season 5 Episode 2 JPN
; 1628 : 		case ITEMGET(13, 122): // Skeleton Ring Season 5 Episode 2 JPN 
; 1629 : 		case ITEMGET(13, 123): // Skeleton Pet Season 5 Episode 2 JPN
; 1630 : 			return TRUE;

  00225	b8 01 00 00 00	 mov	 eax, 1
  0022a	eb 02		 jmp	 SHORT $LN4@CanItemTou
$LN2@CanItemTou:

; 1631 : 	}
; 1632 : 	return FALSE;

  0022c	33 c0		 xor	 eax, eax
$LN4@CanItemTou:

; 1633 : }

  0022e	5f		 pop	 edi
  0022f	5e		 pop	 esi
  00230	5b		 pop	 ebx
  00231	8b e5		 mov	 esp, ebp
  00233	5d		 pop	 ebp
  00234	c3		 ret	 0
  00235	8d 49 00	 npad	 3
$LN9@CanItemTou:
  00238	00 00 00 00	 DD	 $LN1@CanItemTou
  0023c	00 00 00 00	 DD	 $LN2@CanItemTou
$LN8@CanItemTou:
  00240	00		 DB	 0
  00241	00		 DB	 0
  00242	01		 DB	 1
  00243	01		 DB	 1
  00244	01		 DB	 1
  00245	01		 DB	 1
  00246	01		 DB	 1
  00247	01		 DB	 1
  00248	01		 DB	 1
  00249	01		 DB	 1
  0024a	01		 DB	 1
  0024b	01		 DB	 1
  0024c	00		 DB	 0
  0024d	01		 DB	 1
  0024e	01		 DB	 1
  0024f	01		 DB	 1
  00250	00		 DB	 0
?CanItemTouchCash@@YAHH@Z ENDP				; CanItemTouchCash
_TEXT	ENDS
END
