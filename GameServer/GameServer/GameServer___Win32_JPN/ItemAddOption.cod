; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\ExTeam6.3\Source\GameServer\GameServer\ItemAddOption.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00012	78 11		 js	 SHORT $LN3@vector
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00017	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0001d	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00020	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00023	eb e4		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?Initialize@CItemAddOption@@QAEXXZ		; CItemAddOption::Initialize
PUBLIC	??_7CItemAddOption@@6B@				; CItemAddOption::`vftable'
PUBLIC	??0CItemAddOption@@QAE@XZ			; CItemAddOption::CItemAddOption
PUBLIC	??_R4CItemAddOption@@6B@			; CItemAddOption::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCItemAddOption@@@8			; CItemAddOption `RTTI Type Descriptor'
PUBLIC	??_R3CItemAddOption@@8				; CItemAddOption::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CItemAddOption@@8				; CItemAddOption::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CItemAddOption@@8			; CItemAddOption::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECItemAddOption@@UAEPAXI@Z:PROC		; CItemAddOption::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CItemAddOption@@8
; File d:\projects\exteam6.3\source\gameserver\gameserver\itemaddoption.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CItemAddOption@@8 DD FLAT:??_R0?AVCItemAddOption@@@8 ; CItemAddOption::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CItemAddOption@@8
rdata$r	ENDS
;	COMDAT ??_R2CItemAddOption@@8
rdata$r	SEGMENT
??_R2CItemAddOption@@8 DD FLAT:??_R1A@?0A@EA@CItemAddOption@@8 ; CItemAddOption::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CItemAddOption@@8
rdata$r	SEGMENT
??_R3CItemAddOption@@8 DD 00H				; CItemAddOption::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CItemAddOption@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCItemAddOption@@@8
_DATA	SEGMENT
??_R0?AVCItemAddOption@@@8 DD FLAT:??_7type_info@@6B@	; CItemAddOption `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCItemAddOption@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CItemAddOption@@6B@
rdata$r	SEGMENT
??_R4CItemAddOption@@6B@ DD 00H				; CItemAddOption::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCItemAddOption@@@8
	DD	FLAT:??_R3CItemAddOption@@8
rdata$r	ENDS
;	COMDAT ??_7CItemAddOption@@6B@
CONST	SEGMENT
??_7CItemAddOption@@6B@ DD FLAT:??_R4CItemAddOption@@6B@ ; CItemAddOption::`vftable'
	DD	FLAT:??_ECItemAddOption@@UAEPAXI@Z
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CItemAddOption@@QAE@XZ PROC				; CItemAddOption::CItemAddOption
; _this$ = ecx

; 12   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CItemAddOption@@6B@

; 13   : 	this->Initialize();

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?Initialize@CItemAddOption@@QAEXXZ ; CItemAddOption::Initialize

; 14   : }

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0CItemAddOption@@QAE@XZ ENDP				; CItemAddOption::CItemAddOption
_TEXT	ENDS
PUBLIC	??1CItemAddOption@@UAE@XZ			; CItemAddOption::~CItemAddOption
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCItemAddOption@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCItemAddOption@@UAEPAXI@Z PROC			; CItemAddOption::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CItemAddOption@@UAE@XZ ; CItemAddOption::~CItemAddOption
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0c		 je	 SHORT $LN1@scalar
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCItemAddOption@@UAEPAXI@Z ENDP			; CItemAddOption::`scalar deleting destructor'
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CItemAddOption@@UAE@XZ PROC				; CItemAddOption::~CItemAddOption
; _this$ = ecx

; 17   : {

  00030	55		 push	 ebp
  00031	8b ec		 mov	 ebp, esp
  00033	83 ec 44	 sub	 esp, 68			; 00000044H
  00036	53		 push	 ebx
  00037	56		 push	 esi
  00038	57		 push	 edi
  00039	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CItemAddOption@@6B@

; 18   : 	return;
; 19   : }

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??1CItemAddOption@@UAE@XZ ENDP				; CItemAddOption::~CItemAddOption
_TEXT	ENDS
PUBLIC	??_C@_0DD@FOAHMPMA@?$FLItemAddOption?$FN?5Overflow?5ItemAdd@ ; `string'
PUBLIC	??_C@_03JBJLGPFL@end?$AA@			; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	?Load@CItemAddOption@@QAEXPAD@Z			; CItemAddOption::Load
EXTRN	_fclose:PROC
EXTRN	?MsgBox@@YAXPADZZ:PROC				; MsgBox
EXTRN	_strcmp:PROC
EXTRN	_fopen:PROC
EXTRN	__ftol2_sse:PROC
_BSS	SEGMENT
_TokenString DB	064H DUP (?)
_TokenNumber DD	01H DUP (?)
_SMDFile DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0DD@FOAHMPMA@?$FLItemAddOption?$FN?5Overflow?5ItemAdd@
CONST	SEGMENT
??_C@_0DD@FOAHMPMA@?$FLItemAddOption?$FN?5Overflow?5ItemAdd@ DB '[ItemAdd'
	DB	'Option] Overflow ItemAddOption Table Index', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03JBJLGPFL@end?$AA@
CONST	SEGMENT
??_C@_03JBJLGPFL@end?$AA@ DB 'end', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
_iItemValidTime$219486 = -80				; size = 4
_iItemValue2$219485 = -76				; size = 4
_iItemOption2$219484 = -72				; size = 4
_iItemValue1$219483 = -68				; size = 4
_iItemOption1$219482 = -64				; size = 4
_iItemIndex$219481 = -60				; size = 4
_iItemType$219480 = -56					; size = 4
_iItemNumber$219479 = -52				; size = 4
_iItemValidTime$219459 = -48				; size = 4
_iItemValue2$219458 = -44				; size = 4
_iItemOption2$219457 = -40				; size = 4
_iItemValue1$219456 = -36				; size = 4
_iItemOption1$219455 = -32				; size = 4
_iItemIndex$219454 = -28				; size = 4
_iItemType$219453 = -24					; size = 4
_iItemNumber$219452 = -20				; size = 4
_iType$219442 = -16					; size = 4
_iItemAddOptionIndex$ = -12				; size = 4
_Token$ = -8						; size = 4
_this$ = -4						; size = 4
_chFileName$ = 8					; size = 4
?Load@CItemAddOption@@QAEXPAD@Z PROC			; CItemAddOption::Load
; _this$ = ecx

; 22   : {

  00050	55		 push	 ebp
  00051	8b ec		 mov	 ebp, esp
  00053	81 ec 90 00 00
	00		 sub	 esp, 144		; 00000090H
  00059	53		 push	 ebx
  0005a	56		 push	 esi
  0005b	57		 push	 edi
  0005c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 23   : 	SMDToken Token;
; 24   : 
; 25   : 	this->Initialize();

  0005f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	e8 00 00 00 00	 call	 ?Initialize@CItemAddOption@@QAEXXZ ; CItemAddOption::Initialize

; 26   : 
; 27   : 	SMDFile = fopen(chFileName, "r");

  00067	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  0006c	8b 45 08	 mov	 eax, DWORD PTR _chFileName$[ebp]
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 _fopen
  00075	83 c4 08	 add	 esp, 8
  00078	a3 00 00 00 00	 mov	 DWORD PTR _SMDFile, eax

; 28   : 
; 29   : 	if ( SMDFile == NULL )

  0007d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _SMDFile, 0
  00084	75 05		 jne	 SHORT $LN16@Load

; 30   : 	{
; 31   : 		return;

  00086	e9 fc 03 00 00	 jmp	 $LN17@Load
$LN16@Load:

; 32   : 	}
; 33   : 
; 34   : 	int iItemAddOptionIndex = 0;

  0008b	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _iItemAddOptionIndex$[ebp], 0
$LN15@Load:

; 35   : 
; 36   : 	while ( true )

  00092	b8 01 00 00 00	 mov	 eax, 1
  00097	85 c0		 test	 eax, eax
  00099	0f 84 da 03 00
	00		 je	 $LN14@Load

; 37   : 	{
; 38   : 		Token = (SMDToken)GetToken();

  0009f	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  000a4	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 39   : 
; 40   : 		if ( Token == END )

  000a7	83 7d f8 02	 cmp	 DWORD PTR _Token$[ebp], 2
  000ab	75 05		 jne	 SHORT $LN13@Load

; 41   : 		{
; 42   : 			break;

  000ad	e9 c7 03 00 00	 jmp	 $LN14@Load
$LN13@Load:

; 43   : 		}
; 44   : 
; 45   : 		if ( Token == NUMBER )

  000b2	83 7d f8 01	 cmp	 DWORD PTR _Token$[ebp], 1
  000b6	0f 85 b8 03 00
	00		 jne	 $LN10@Load

; 46   : 		{
; 47   : 			int iType = (int)TokenNumber;

  000bc	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  000c2	e8 00 00 00 00	 call	 __ftol2_sse
  000c7	89 45 f0	 mov	 DWORD PTR _iType$219442[ebp], eax
$LN11@Load:

; 48   : 
; 49   : 			while ( true )

  000ca	b8 01 00 00 00	 mov	 eax, 1
  000cf	85 c0		 test	 eax, eax
  000d1	0f 84 9d 03 00
	00		 je	 $LN10@Load

; 50   : 			{
; 51   : 				if ( iType == 0 )

  000d7	83 7d f0 00	 cmp	 DWORD PTR _iType$219442[ebp], 0
  000db	75 23		 jne	 SHORT $LN8@Load

; 52   : 				{
; 53   : 					Token = (SMDToken)GetToken();

  000dd	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  000e2	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 54   : 
; 55   : 					if ( strcmp("end", TokenString) == 0 )

  000e5	68 00 00 00 00	 push	 OFFSET _TokenString
  000ea	68 00 00 00 00	 push	 OFFSET ??_C@_03JBJLGPFL@end?$AA@
  000ef	e8 00 00 00 00	 call	 _strcmp
  000f4	83 c4 08	 add	 esp, 8
  000f7	85 c0		 test	 eax, eax
  000f9	75 05		 jne	 SHORT $LN8@Load

; 56   : 					{
; 57   : 						break;

  000fb	e9 74 03 00 00	 jmp	 $LN10@Load
$LN8@Load:

; 58   : 					}
; 59   : 				}
; 60   : 
; 61   : 				if ( iType == 1 )

  00100	83 7d f0 01	 cmp	 DWORD PTR _iType$219442[ebp], 1
  00104	0f 85 b0 01 00
	00		 jne	 $LN7@Load

; 62   : 				{
; 63   : 					int iItemNumber = 0;

  0010a	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _iItemNumber$219452[ebp], 0

; 64   : 					int iItemType = 0;

  00111	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _iItemType$219453[ebp], 0

; 65   : 					int iItemIndex = 0;

  00118	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _iItemIndex$219454[ebp], 0

; 66   : 					int iItemOption1 = 0;

  0011f	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _iItemOption1$219455[ebp], 0

; 67   : 					int iItemValue1 = 0;

  00126	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _iItemValue1$219456[ebp], 0

; 68   : 					int iItemOption2 = 0;

  0012d	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _iItemOption2$219457[ebp], 0

; 69   : 					int iItemValue2 = 0;

  00134	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _iItemValue2$219458[ebp], 0

; 70   : 					int iItemValidTime = 0;

  0013b	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _iItemValidTime$219459[ebp], 0

; 71   : 
; 72   : 					Token = (SMDToken)GetToken();

  00142	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00147	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 73   : 
; 74   : 					if ( !strcmp("end", TokenString))

  0014a	68 00 00 00 00	 push	 OFFSET _TokenString
  0014f	68 00 00 00 00	 push	 OFFSET ??_C@_03JBJLGPFL@end?$AA@
  00154	e8 00 00 00 00	 call	 _strcmp
  00159	83 c4 08	 add	 esp, 8
  0015c	85 c0		 test	 eax, eax
  0015e	75 05		 jne	 SHORT $LN6@Load

; 75   : 						break;

  00160	e9 0f 03 00 00	 jmp	 $LN10@Load
$LN6@Load:

; 76   : 
; 77   : 					iItemType = (int)TokenNumber;

  00165	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0016b	e8 00 00 00 00	 call	 __ftol2_sse
  00170	89 45 e8	 mov	 DWORD PTR _iItemType$219453[ebp], eax

; 78   : 
; 79   : 					Token = (SMDToken)GetToken();

  00173	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00178	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 80   : 					iItemIndex = (int)TokenNumber;

  0017b	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00181	e8 00 00 00 00	 call	 __ftol2_sse
  00186	89 45 e4	 mov	 DWORD PTR _iItemIndex$219454[ebp], eax

; 81   : 
; 82   : 					Token = (SMDToken)GetToken();

  00189	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  0018e	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 83   : 					iItemOption1 = (int)TokenNumber;					

  00191	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00197	e8 00 00 00 00	 call	 __ftol2_sse
  0019c	89 45 e0	 mov	 DWORD PTR _iItemOption1$219455[ebp], eax

; 84   : 
; 85   : 					Token = (SMDToken)GetToken();

  0019f	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  001a4	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 86   : 					iItemValue1 = (int)TokenNumber;

  001a7	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  001ad	e8 00 00 00 00	 call	 __ftol2_sse
  001b2	89 45 dc	 mov	 DWORD PTR _iItemValue1$219456[ebp], eax

; 87   : 
; 88   : 					Token = (SMDToken)GetToken();

  001b5	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  001ba	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 89   : 					iItemOption2 = (int)TokenNumber;

  001bd	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  001c3	e8 00 00 00 00	 call	 __ftol2_sse
  001c8	89 45 d8	 mov	 DWORD PTR _iItemOption2$219457[ebp], eax

; 90   : 
; 91   : 					Token = (SMDToken)GetToken();

  001cb	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  001d0	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 92   : 					iItemValue2 = (int)TokenNumber;

  001d3	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  001d9	e8 00 00 00 00	 call	 __ftol2_sse
  001de	89 45 d4	 mov	 DWORD PTR _iItemValue2$219458[ebp], eax

; 93   : 
; 94   : 					Token = (SMDToken)GetToken();

  001e1	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  001e6	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 95   : 					iItemValidTime = (int)TokenNumber;

  001e9	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  001ef	e8 00 00 00 00	 call	 __ftol2_sse
  001f4	89 45 d0	 mov	 DWORD PTR _iItemValidTime$219459[ebp], eax

; 96   : 
; 97   : 					iItemNumber = ITEMGET(iItemType, iItemIndex);

  001f7	8b 45 e8	 mov	 eax, DWORD PTR _iItemType$219453[ebp]
  001fa	c1 e0 09	 shl	 eax, 9
  001fd	03 45 e4	 add	 eax, DWORD PTR _iItemIndex$219454[ebp]
  00200	89 45 ec	 mov	 DWORD PTR _iItemNumber$219452[ebp], eax

; 98   : 					this->m_ItemAddOption[iItemAddOptionIndex].wOptionType = iType;

  00203	8b 45 f4	 mov	 eax, DWORD PTR _iItemAddOptionIndex$[ebp]
  00206	c1 e0 05	 shl	 eax, 5
  00209	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0020c	66 8b 55 f0	 mov	 dx, WORD PTR _iType$219442[ebp]
  00210	66 89 54 01 04	 mov	 WORD PTR [ecx+eax+4], dx

; 99   : 					this->m_ItemAddOption[iItemAddOptionIndex].iItemNumber = iItemNumber;

  00215	8b 45 f4	 mov	 eax, DWORD PTR _iItemAddOptionIndex$[ebp]
  00218	c1 e0 05	 shl	 eax, 5
  0021b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0021e	8b 55 ec	 mov	 edx, DWORD PTR _iItemNumber$219452[ebp]
  00221	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 100  : 					this->m_ItemAddOption[iItemAddOptionIndex].iItemType = iItemType;

  00225	8b 45 f4	 mov	 eax, DWORD PTR _iItemAddOptionIndex$[ebp]
  00228	c1 e0 05	 shl	 eax, 5
  0022b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0022e	8b 55 e8	 mov	 edx, DWORD PTR _iItemType$219453[ebp]
  00231	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 101  : 					this->m_ItemAddOption[iItemAddOptionIndex].iItemIndex = iItemIndex;

  00235	8b 45 f4	 mov	 eax, DWORD PTR _iItemAddOptionIndex$[ebp]
  00238	c1 e0 05	 shl	 eax, 5
  0023b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0023e	8b 55 e4	 mov	 edx, DWORD PTR _iItemIndex$219454[ebp]
  00241	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 102  : 					this->m_ItemAddOption[iItemAddOptionIndex].wEffectType1 = iItemOption1;

  00245	8b 45 f4	 mov	 eax, DWORD PTR _iItemAddOptionIndex$[ebp]
  00248	c1 e0 05	 shl	 eax, 5
  0024b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0024e	66 8b 55 e0	 mov	 dx, WORD PTR _iItemOption1$219455[ebp]
  00252	66 89 54 01 06	 mov	 WORD PTR [ecx+eax+6], dx

; 103  : 					this->m_ItemAddOption[iItemAddOptionIndex].iEffectValue1 = iItemValue1;

  00257	8b 45 f4	 mov	 eax, DWORD PTR _iItemAddOptionIndex$[ebp]
  0025a	c1 e0 05	 shl	 eax, 5
  0025d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00260	8b 55 dc	 mov	 edx, DWORD PTR _iItemValue1$219456[ebp]
  00263	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 104  : 					this->m_ItemAddOption[iItemAddOptionIndex].wEffectType2 = iItemOption2;

  00267	8b 45 f4	 mov	 eax, DWORD PTR _iItemAddOptionIndex$[ebp]
  0026a	c1 e0 05	 shl	 eax, 5
  0026d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00270	66 8b 55 d8	 mov	 dx, WORD PTR _iItemOption2$219457[ebp]
  00274	66 89 54 01 08	 mov	 WORD PTR [ecx+eax+8], dx

; 105  : 					this->m_ItemAddOption[iItemAddOptionIndex].iEffectValue2 = iItemValue2;

  00279	8b 45 f4	 mov	 eax, DWORD PTR _iItemAddOptionIndex$[ebp]
  0027c	c1 e0 05	 shl	 eax, 5
  0027f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00282	8b 55 d4	 mov	 edx, DWORD PTR _iItemValue2$219458[ebp]
  00285	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 106  : 					this->m_ItemAddOption[iItemAddOptionIndex].iEffectValidTime = iItemValidTime;

  00289	8b 45 f4	 mov	 eax, DWORD PTR _iItemAddOptionIndex$[ebp]
  0028c	c1 e0 05	 shl	 eax, 5
  0028f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00292	8b 55 d0	 mov	 edx, DWORD PTR _iItemValidTime$219459[ebp]
  00295	89 54 01 20	 mov	 DWORD PTR [ecx+eax+32], edx

; 107  : 
; 108  : 					iItemAddOptionIndex++;

  00299	8b 45 f4	 mov	 eax, DWORD PTR _iItemAddOptionIndex$[ebp]
  0029c	83 c0 01	 add	 eax, 1
  0029f	89 45 f4	 mov	 DWORD PTR _iItemAddOptionIndex$[ebp], eax

; 109  : 
; 110  : 					if (iItemAddOptionIndex > MAX_ITEM_ADD_OPTION )

  002a2	83 7d f4 64	 cmp	 DWORD PTR _iItemAddOptionIndex$[ebp], 100 ; 00000064H
  002a6	7e 0d		 jle	 SHORT $LN5@Load

; 111  : 					{
; 112  : 						MsgBox("[ItemAddOption] Overflow ItemAddOption Table Index");

  002a8	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@FOAHMPMA@?$FLItemAddOption?$FN?5Overflow?5ItemAdd@
  002ad	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  002b2	83 c4 04	 add	 esp, 4
$LN5@Load:

; 113  : 					}
; 114  : 				}

  002b5	e9 b5 01 00 00	 jmp	 $LN1@Load
$LN7@Load:

; 115  : 				else if ( iType >= 2 )

  002ba	83 7d f0 02	 cmp	 DWORD PTR _iType$219442[ebp], 2
  002be	0f 8c ab 01 00
	00		 jl	 $LN1@Load

; 116  : 				{
; 117  : 					int iItemNumber = 0;

  002c4	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _iItemNumber$219479[ebp], 0

; 118  : 					int iItemType = 0;

  002cb	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _iItemType$219480[ebp], 0

; 119  : 					int iItemIndex = 0;

  002d2	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _iItemIndex$219481[ebp], 0

; 120  : 					int iItemOption1 = 0;

  002d9	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _iItemOption1$219482[ebp], 0

; 121  : 					int iItemValue1 = 0;

  002e0	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _iItemValue1$219483[ebp], 0

; 122  : 					int iItemOption2 = 0;

  002e7	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _iItemOption2$219484[ebp], 0

; 123  : 					int iItemValue2 = 0;

  002ee	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _iItemValue2$219485[ebp], 0

; 124  : 					int iItemValidTime = 0;

  002f5	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR _iItemValidTime$219486[ebp], 0

; 125  : 
; 126  : 					Token = (SMDToken)GetToken();

  002fc	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00301	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 127  : 
; 128  : 					if ( !strcmp("end", TokenString))

  00304	68 00 00 00 00	 push	 OFFSET _TokenString
  00309	68 00 00 00 00	 push	 OFFSET ??_C@_03JBJLGPFL@end?$AA@
  0030e	e8 00 00 00 00	 call	 _strcmp
  00313	83 c4 08	 add	 esp, 8
  00316	85 c0		 test	 eax, eax
  00318	75 05		 jne	 SHORT $LN2@Load

; 129  : 						break;

  0031a	e9 55 01 00 00	 jmp	 $LN10@Load
$LN2@Load:

; 130  : 
; 131  : 					iItemType = (int)TokenNumber;

  0031f	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00325	e8 00 00 00 00	 call	 __ftol2_sse
  0032a	89 45 c8	 mov	 DWORD PTR _iItemType$219480[ebp], eax

; 132  : 
; 133  : 					Token = (SMDToken)GetToken();

  0032d	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00332	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 134  : 					iItemIndex = (int)TokenNumber;

  00335	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0033b	e8 00 00 00 00	 call	 __ftol2_sse
  00340	89 45 c4	 mov	 DWORD PTR _iItemIndex$219481[ebp], eax

; 135  : 
; 136  : 					Token = (SMDToken)GetToken();

  00343	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00348	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 137  : 					iItemOption1 = (int)TokenNumber;					

  0034b	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00351	e8 00 00 00 00	 call	 __ftol2_sse
  00356	89 45 c0	 mov	 DWORD PTR _iItemOption1$219482[ebp], eax

; 138  : 
; 139  : 					Token = (SMDToken)GetToken();

  00359	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  0035e	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 140  : 					iItemValue1 = (int)TokenNumber;

  00361	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00367	e8 00 00 00 00	 call	 __ftol2_sse
  0036c	89 45 bc	 mov	 DWORD PTR _iItemValue1$219483[ebp], eax

; 141  : 
; 142  : 					Token = (SMDToken)GetToken();

  0036f	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  00374	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 143  : 					iItemOption2 = (int)TokenNumber;

  00377	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0037d	e8 00 00 00 00	 call	 __ftol2_sse
  00382	89 45 b8	 mov	 DWORD PTR _iItemOption2$219484[ebp], eax

; 144  : 
; 145  : 					Token = (SMDToken)GetToken();

  00385	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  0038a	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 146  : 					iItemValue2 = (int)TokenNumber;

  0038d	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00393	e8 00 00 00 00	 call	 __ftol2_sse
  00398	89 45 b4	 mov	 DWORD PTR _iItemValue2$219485[ebp], eax

; 147  : 
; 148  : 					Token = (SMDToken)GetToken();

  0039b	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken
  003a0	89 45 f8	 mov	 DWORD PTR _Token$[ebp], eax

; 149  : 					iItemValidTime = (int)TokenNumber;

  003a3	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  003a9	e8 00 00 00 00	 call	 __ftol2_sse
  003ae	89 45 b0	 mov	 DWORD PTR _iItemValidTime$219486[ebp], eax

; 150  : 
; 151  : 					iItemNumber = ITEMGET(iItemType, iItemIndex);

  003b1	8b 45 c8	 mov	 eax, DWORD PTR _iItemType$219480[ebp]
  003b4	c1 e0 09	 shl	 eax, 9
  003b7	03 45 c4	 add	 eax, DWORD PTR _iItemIndex$219481[ebp]
  003ba	89 45 cc	 mov	 DWORD PTR _iItemNumber$219479[ebp], eax

; 152  : 					this->m_ItemAddOption[iItemAddOptionIndex].wOptionType = iType;

  003bd	8b 45 f4	 mov	 eax, DWORD PTR _iItemAddOptionIndex$[ebp]
  003c0	c1 e0 05	 shl	 eax, 5
  003c3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003c6	66 8b 55 f0	 mov	 dx, WORD PTR _iType$219442[ebp]
  003ca	66 89 54 01 04	 mov	 WORD PTR [ecx+eax+4], dx

; 153  : 					this->m_ItemAddOption[iItemAddOptionIndex].iItemNumber = iItemNumber;

  003cf	8b 45 f4	 mov	 eax, DWORD PTR _iItemAddOptionIndex$[ebp]
  003d2	c1 e0 05	 shl	 eax, 5
  003d5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003d8	8b 55 cc	 mov	 edx, DWORD PTR _iItemNumber$219479[ebp]
  003db	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 154  : 					this->m_ItemAddOption[iItemAddOptionIndex].iItemType = iItemType;

  003df	8b 45 f4	 mov	 eax, DWORD PTR _iItemAddOptionIndex$[ebp]
  003e2	c1 e0 05	 shl	 eax, 5
  003e5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003e8	8b 55 c8	 mov	 edx, DWORD PTR _iItemType$219480[ebp]
  003eb	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 155  : 					this->m_ItemAddOption[iItemAddOptionIndex].iItemIndex = iItemIndex;

  003ef	8b 45 f4	 mov	 eax, DWORD PTR _iItemAddOptionIndex$[ebp]
  003f2	c1 e0 05	 shl	 eax, 5
  003f5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003f8	8b 55 c4	 mov	 edx, DWORD PTR _iItemIndex$219481[ebp]
  003fb	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 156  : 					this->m_ItemAddOption[iItemAddOptionIndex].wEffectType1 = iItemOption1;

  003ff	8b 45 f4	 mov	 eax, DWORD PTR _iItemAddOptionIndex$[ebp]
  00402	c1 e0 05	 shl	 eax, 5
  00405	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00408	66 8b 55 c0	 mov	 dx, WORD PTR _iItemOption1$219482[ebp]
  0040c	66 89 54 01 06	 mov	 WORD PTR [ecx+eax+6], dx

; 157  : 					this->m_ItemAddOption[iItemAddOptionIndex].iEffectValue1 = iItemValue1;

  00411	8b 45 f4	 mov	 eax, DWORD PTR _iItemAddOptionIndex$[ebp]
  00414	c1 e0 05	 shl	 eax, 5
  00417	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0041a	8b 55 bc	 mov	 edx, DWORD PTR _iItemValue1$219483[ebp]
  0041d	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 158  : 					this->m_ItemAddOption[iItemAddOptionIndex].wEffectType2 = iItemOption2;

  00421	8b 45 f4	 mov	 eax, DWORD PTR _iItemAddOptionIndex$[ebp]
  00424	c1 e0 05	 shl	 eax, 5
  00427	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0042a	66 8b 55 b8	 mov	 dx, WORD PTR _iItemOption2$219484[ebp]
  0042e	66 89 54 01 08	 mov	 WORD PTR [ecx+eax+8], dx

; 159  : 					this->m_ItemAddOption[iItemAddOptionIndex].iEffectValue2 = iItemValue2;

  00433	8b 45 f4	 mov	 eax, DWORD PTR _iItemAddOptionIndex$[ebp]
  00436	c1 e0 05	 shl	 eax, 5
  00439	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0043c	8b 55 b4	 mov	 edx, DWORD PTR _iItemValue2$219485[ebp]
  0043f	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 160  : 					this->m_ItemAddOption[iItemAddOptionIndex].iEffectValidTime = iItemValidTime;

  00443	8b 45 f4	 mov	 eax, DWORD PTR _iItemAddOptionIndex$[ebp]
  00446	c1 e0 05	 shl	 eax, 5
  00449	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0044c	8b 55 b0	 mov	 edx, DWORD PTR _iItemValidTime$219486[ebp]
  0044f	89 54 01 20	 mov	 DWORD PTR [ecx+eax+32], edx

; 161  : 
; 162  : 					iItemAddOptionIndex++;

  00453	8b 45 f4	 mov	 eax, DWORD PTR _iItemAddOptionIndex$[ebp]
  00456	83 c0 01	 add	 eax, 1
  00459	89 45 f4	 mov	 DWORD PTR _iItemAddOptionIndex$[ebp], eax

; 163  : 
; 164  : 					if (iItemAddOptionIndex > MAX_ITEM_ADD_OPTION )

  0045c	83 7d f4 64	 cmp	 DWORD PTR _iItemAddOptionIndex$[ebp], 100 ; 00000064H
  00460	7e 0d		 jle	 SHORT $LN1@Load

; 165  : 					{
; 166  : 						MsgBox("[ItemAddOption] Overflow ItemAddOption Table Index");

  00462	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@FOAHMPMA@?$FLItemAddOption?$FN?5Overflow?5ItemAdd@
  00467	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  0046c	83 c4 04	 add	 esp, 4
$LN1@Load:

; 167  : 					}
; 168  : 				}
; 169  : 			}

  0046f	e9 56 fc ff ff	 jmp	 $LN11@Load
$LN10@Load:

; 170  : 		}
; 171  : 	}

  00474	e9 19 fc ff ff	 jmp	 $LN15@Load
$LN14@Load:

; 172  : 
; 173  : 	fclose(SMDFile);

  00479	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0047e	50		 push	 eax
  0047f	e8 00 00 00 00	 call	 _fclose
  00484	83 c4 04	 add	 esp, 4
$LN17@Load:

; 174  : }

  00487	5f		 pop	 edi
  00488	5e		 pop	 esi
  00489	5b		 pop	 ebx
  0048a	8b e5		 mov	 esp, ebp
  0048c	5d		 pop	 ebp
  0048d	c2 04 00	 ret	 4
?Load@CItemAddOption@@QAEXPAD@Z ENDP			; CItemAddOption::Load
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_isalnum:PROC
EXTRN	_isalpha:PROC
EXTRN	_atof:PROC
EXTRN	_isdigit:PROC
EXTRN	_getc:PROC
EXTRN	_ungetc:PROC
EXTRN	_isspace:PROC
EXTRN	_fgetc:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	@__security_check_cookie@4:PROC
_BSS	SEGMENT
_CurrentToken DD 01H DUP (?)
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\include\readscript.h
_BSS	ENDS
_TEXT	SEGMENT
tv90 = -180						; size = 4
_TempString$ = -112					; size = 100
_p$ = -12						; size = 4
_ch$ = -5						; size = 1
__$ArrayPad$ = -4					; size = 4
?GetToken@@YA?AW4SMDToken@@XZ PROC			; GetToken

; 24   : {

  00490	55		 push	 ebp
  00491	8b ec		 mov	 ebp, esp
  00493	81 ec b4 00 00
	00		 sub	 esp, 180		; 000000b4H
  00499	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0049e	33 c5		 xor	 eax, ebp
  004a0	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  004a3	53		 push	 ebx
  004a4	56		 push	 esi
  004a5	57		 push	 edi

; 25   : 	char ch;
; 26   : 	char* p;
; 27   : 	char TempString[100];
; 28   : 
; 29   : 	TokenString[0]=0;

  004a6	c6 05 00 00 00
	00 00		 mov	 BYTE PTR _TokenString, 0
$LN31@GetToken:

; 30   : 
; 31   : 	do
; 32   : 	{
; 33   : 		if ((ch=fgetc(SMDFile)) == -1)

  004ad	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  004b2	50		 push	 eax
  004b3	e8 00 00 00 00	 call	 _fgetc
  004b8	83 c4 04	 add	 esp, 4
  004bb	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  004be	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  004c2	83 f9 ff	 cmp	 ecx, -1
  004c5	75 0c		 jne	 SHORT $LN28@GetToken

; 34   : 		{
; 35   : 			return END;	// End of FILE (EOF)

  004c7	b8 02 00 00 00	 mov	 eax, 2
  004cc	e9 f7 02 00 00	 jmp	 $LN32@GetToken

; 36   : 		}
; 37   : 		else

  004d1	eb 5b		 jmp	 SHORT $LN22@GetToken
$LN28@GetToken:

; 38   : 		{	
; 39   : 			if (ch=='/')		// this is /

  004d3	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  004d7	83 f8 2f	 cmp	 eax, 47			; 0000002fH
  004da	75 52		 jne	 SHORT $LN22@GetToken

; 40   : 			{
; 41   : 				if((ch=fgetc(SMDFile)) == '/')

  004dc	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  004e1	50		 push	 eax
  004e2	e8 00 00 00 00	 call	 _fgetc
  004e7	83 c4 04	 add	 esp, 4
  004ea	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  004ed	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  004f1	83 f9 2f	 cmp	 ecx, 47			; 0000002fH
  004f4	75 38		 jne	 SHORT $LN22@GetToken
$LN24@GetToken:

; 42   : 				{
; 43   : 					while ((ch != '\n') && (ch != -1))	// End of Line (EOL)

  004f6	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  004fa	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  004fd	74 1c		 je	 SHORT $LN23@GetToken
  004ff	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00503	83 f8 ff	 cmp	 eax, -1
  00506	74 13		 je	 SHORT $LN23@GetToken

; 44   : 					{
; 45   : 						ch=fgetc(SMDFile);

  00508	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0050d	50		 push	 eax
  0050e	e8 00 00 00 00	 call	 _fgetc
  00513	83 c4 04	 add	 esp, 4
  00516	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al

; 46   : 					}

  00519	eb db		 jmp	 SHORT $LN24@GetToken
$LN23@GetToken:

; 47   : 	
; 48   : 					if (ch == -1)

  0051b	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  0051f	83 f8 ff	 cmp	 eax, -1
  00522	75 0a		 jne	 SHORT $LN22@GetToken

; 49   : 					{
; 50   : 						return END;	// End of FILE

  00524	b8 02 00 00 00	 mov	 eax, 2
  00529	e9 9a 02 00 00	 jmp	 $LN32@GetToken
$LN22@GetToken:

; 51   : 					}
; 52   : 				}
; 53   : 			}
; 54   : 		}
; 55   : 	}
; 56   : 	while (isspace(ch) != 0);

  0052e	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00532	50		 push	 eax
  00533	e8 00 00 00 00	 call	 _isspace
  00538	83 c4 04	 add	 esp, 4
  0053b	85 c0		 test	 eax, eax
  0053d	0f 85 6a ff ff
	ff		 jne	 $LN31@GetToken

; 57   : 
; 58   : 	
; 59   : 	switch(ch)

  00543	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00547	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv90[ebp], eax
  0054d	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR tv90[ebp]
  00553	83 e9 22	 sub	 ecx, 34			; 00000022H
  00556	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv90[ebp], ecx
  0055c	83 bd 4c ff ff
	ff 5b		 cmp	 DWORD PTR tv90[ebp], 91	; 0000005bH
  00563	0f 87 a3 01 00
	00		 ja	 $LN6@GetToken
  00569	8b 95 4c ff ff
	ff		 mov	 edx, DWORD PTR tv90[ebp]
  0056f	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN34@GetToken[edx]
  00576	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN35@GetToken[eax*4]
$LN19@GetToken:

; 60   : 	{
; 61   : 
; 62   : 	case 0x23:	// #
; 63   : 		return CurrentToken=COMMAND;

  0057d	c7 05 00 00 00
	00 23 00 00 00	 mov	 DWORD PTR _CurrentToken, 35 ; 00000023H
  00587	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  0058c	e9 37 02 00 00	 jmp	 $LN32@GetToken

; 64   : 		break;

  00591	e9 30 02 00 00	 jmp	 $LN20@GetToken
$LN18@GetToken:

; 65   : 	
; 66   : 	case 0x3B:	// ;
; 67   : 		return CurrentToken=SEMICOLON;

  00596	c7 05 00 00 00
	00 3b 00 00 00	 mov	 DWORD PTR _CurrentToken, 59 ; 0000003bH
  005a0	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  005a5	e9 1e 02 00 00	 jmp	 $LN32@GetToken

; 68   : 		break;

  005aa	e9 17 02 00 00	 jmp	 $LN20@GetToken
$LN17@GetToken:

; 69   : 	
; 70   : 	case 0x2C:	// ,
; 71   : 
; 72   : 		return CurrentToken=COMMA;

  005af	c7 05 00 00 00
	00 2c 00 00 00	 mov	 DWORD PTR _CurrentToken, 44 ; 0000002cH
  005b9	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  005be	e9 05 02 00 00	 jmp	 $LN32@GetToken

; 73   : 		break;

  005c3	e9 fe 01 00 00	 jmp	 $LN20@GetToken
$LN16@GetToken:

; 74   : 	
; 75   : 	case 0x7B:	// {
; 76   : 		return CurrentToken = LP;

  005c8	c7 05 00 00 00
	00 7b 00 00 00	 mov	 DWORD PTR _CurrentToken, 123 ; 0000007bH
  005d2	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  005d7	e9 ec 01 00 00	 jmp	 $LN32@GetToken

; 77   : 		break;

  005dc	e9 e5 01 00 00	 jmp	 $LN20@GetToken
$LN15@GetToken:

; 78   : 
; 79   : 	case 0x7D:	// }
; 80   : 		return CurrentToken = RP;

  005e1	c7 05 00 00 00
	00 7d 00 00 00	 mov	 DWORD PTR _CurrentToken, 125 ; 0000007dH
  005eb	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  005f0	e9 d3 01 00 00	 jmp	 $LN32@GetToken

; 81   : 		break;

  005f5	e9 cc 01 00 00	 jmp	 $LN20@GetToken
$LN14@GetToken:

; 82   : 	// Nice Index Table :)	by Deathway
; 83   : 	// Numbers Case
; 84   : 	case 0x2D:	//-
; 85   : 	case 0x2E:	//.
; 86   : 	case '0':	//0
; 87   : 	case '1':	//1
; 88   : 	case '2':	//2
; 89   : 	case '3':	//3
; 90   : 	case '4':	//4		
; 91   : 	case '5':	//5
; 92   : 	case '6':	//6
; 93   : 	case '7':	//7
; 94   : 	case '8':	//8
; 95   : 	case '9':	//9
; 96   : 		ungetc(ch, SMDFile);

  005fa	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  005ff	50		 push	 eax
  00600	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00604	51		 push	 ecx
  00605	e8 00 00 00 00	 call	 _ungetc
  0060a	83 c4 08	 add	 esp, 8

; 97   : 		p = TempString;

  0060d	8d 45 90	 lea	 eax, DWORD PTR _TempString$[ebp]
  00610	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax
$LN13@GetToken:

; 98   : 		
; 99   : 		while (((ch=getc(SMDFile)) != -1) && ((ch == 0x2E) || (isdigit(ch) != 0) || (ch == 0x2D)))  // 2e '.'  2D '-'

  00613	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00618	50		 push	 eax
  00619	e8 00 00 00 00	 call	 _getc
  0061e	83 c4 04	 add	 esp, 4
  00621	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  00624	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00628	83 f9 ff	 cmp	 ecx, -1
  0062b	74 36		 je	 SHORT $LN12@GetToken
  0062d	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00631	83 f8 2e	 cmp	 eax, 46			; 0000002eH
  00634	74 1a		 je	 SHORT $LN11@GetToken
  00636	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  0063a	50		 push	 eax
  0063b	e8 00 00 00 00	 call	 _isdigit
  00640	83 c4 04	 add	 esp, 4
  00643	85 c0		 test	 eax, eax
  00645	75 09		 jne	 SHORT $LN11@GetToken
  00647	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  0064b	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  0064e	75 13		 jne	 SHORT $LN12@GetToken
$LN11@GetToken:

; 100  : 		{
; 101  : 			*p = ch;	// Construct a String

  00650	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00653	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  00656	88 08		 mov	 BYTE PTR [eax], cl

; 102  : 			p++;

  00658	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  0065b	83 c0 01	 add	 eax, 1
  0065e	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 103  : 		}		

  00661	eb b0		 jmp	 SHORT $LN13@GetToken
$LN12@GetToken:

; 104  : 		*p = 0;

  00663	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00666	c6 00 00	 mov	 BYTE PTR [eax], 0

; 105  : 		TokenNumber = atof( TempString);	// Select the first Byte as Main ID

  00669	8d 45 90	 lea	 eax, DWORD PTR _TempString$[ebp]
  0066c	50		 push	 eax
  0066d	e8 00 00 00 00	 call	 _atof
  00672	83 c4 04	 add	 esp, 4
  00675	d9 1d 00 00 00
	00		 fstp	 DWORD PTR _TokenNumber

; 106  : 		return CurrentToken  = NUMBER ;

  0067b	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _CurrentToken, 1
  00685	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  0068a	e9 39 01 00 00	 jmp	 $LN32@GetToken

; 107  : 		break;

  0068f	e9 32 01 00 00	 jmp	 $LN20@GetToken
$LN10@GetToken:

; 108  : 
; 109  : 	case '\"':	// "	String Case
; 110  : 		p=&TokenString[0];

  00694	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], OFFSET _TokenString
$LN9@GetToken:

; 111  : 		
; 112  : 		while (((ch=getc(SMDFile)) != -1 ) && (ch != 0x22))	// nice

  0069b	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  006a0	50		 push	 eax
  006a1	e8 00 00 00 00	 call	 _getc
  006a6	83 c4 04	 add	 esp, 4
  006a9	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  006ac	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  006b0	83 f9 ff	 cmp	 ecx, -1
  006b3	74 1c		 je	 SHORT $LN8@GetToken
  006b5	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  006b9	83 f8 22	 cmp	 eax, 34			; 00000022H
  006bc	74 13		 je	 SHORT $LN8@GetToken

; 113  : 		{
; 114  : 			*p = ch;

  006be	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  006c1	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  006c4	88 08		 mov	 BYTE PTR [eax], cl

; 115  : 			p++;

  006c6	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  006c9	83 c0 01	 add	 eax, 1
  006cc	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 116  : 		}

  006cf	eb ca		 jmp	 SHORT $LN9@GetToken
$LN8@GetToken:

; 117  : 		if (ch != 0x22 )

  006d1	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  006d5	83 f8 22	 cmp	 eax, 34			; 00000022H
  006d8	74 13		 je	 SHORT $LN7@GetToken

; 118  : 		{
; 119  : 			ungetc(ch, SMDFile);

  006da	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  006df	50		 push	 eax
  006e0	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  006e4	51		 push	 ecx
  006e5	e8 00 00 00 00	 call	 _ungetc
  006ea	83 c4 08	 add	 esp, 8
$LN7@GetToken:

; 120  : 		}
; 121  : 		*p = 0;

  006ed	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  006f0	c6 00 00	 mov	 BYTE PTR [eax], 0

; 122  : 		return CurrentToken = NAME;

  006f3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _CurrentToken, 0
  006fd	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  00702	e9 c1 00 00 00	 jmp	 $LN32@GetToken

; 123  : 		break;

  00707	e9 ba 00 00 00	 jmp	 $LN20@GetToken
$LN6@GetToken:

; 124  : 
; 125  : 	default:	// Others
; 126  : 		if (isalpha(ch))

  0070c	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00710	50		 push	 eax
  00711	e8 00 00 00 00	 call	 _isalpha
  00716	83 c4 04	 add	 esp, 4
  00719	85 c0		 test	 eax, eax
  0071b	0f 84 94 00 00
	00		 je	 $LN5@GetToken

; 127  : 		{
; 128  : 			p=&TokenString[0];

  00721	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], OFFSET _TokenString

; 129  : 			*p=ch;

  00728	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  0072b	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  0072e	88 08		 mov	 BYTE PTR [eax], cl

; 130  : 			p++;

  00730	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00733	83 c0 01	 add	 eax, 1
  00736	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax
$LN4@GetToken:

; 131  : 
; 132  : 			while ( ((ch=getc(SMDFile)) != -1) && ( (ch == 0x2E) || (ch == 0x5F) || (isalnum(ch) != 0) ) )

  00739	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0073e	50		 push	 eax
  0073f	e8 00 00 00 00	 call	 _getc
  00744	83 c4 04	 add	 esp, 4
  00747	88 45 fb	 mov	 BYTE PTR _ch$[ebp], al
  0074a	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  0074e	83 f9 ff	 cmp	 ecx, -1
  00751	74 36		 je	 SHORT $LN3@GetToken
  00753	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00757	83 f8 2e	 cmp	 eax, 46			; 0000002eH
  0075a	74 1a		 je	 SHORT $LN2@GetToken
  0075c	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00760	83 f8 5f	 cmp	 eax, 95			; 0000005fH
  00763	74 11		 je	 SHORT $LN2@GetToken
  00765	0f be 45 fb	 movsx	 eax, BYTE PTR _ch$[ebp]
  00769	50		 push	 eax
  0076a	e8 00 00 00 00	 call	 _isalnum
  0076f	83 c4 04	 add	 esp, 4
  00772	85 c0		 test	 eax, eax
  00774	74 13		 je	 SHORT $LN3@GetToken
$LN2@GetToken:

; 133  : 			{
; 134  : 				*p=ch;

  00776	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00779	8a 4d fb	 mov	 cl, BYTE PTR _ch$[ebp]
  0077c	88 08		 mov	 BYTE PTR [eax], cl

; 135  : 				p++;

  0077e	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  00781	83 c0 01	 add	 eax, 1
  00784	89 45 f4	 mov	 DWORD PTR _p$[ebp], eax

; 136  : 				
; 137  : 			}

  00787	eb b0		 jmp	 SHORT $LN4@GetToken
$LN3@GetToken:

; 138  : 
; 139  : 			ungetc(ch, SMDFile);

  00789	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0078e	50		 push	 eax
  0078f	0f be 4d fb	 movsx	 ecx, BYTE PTR _ch$[ebp]
  00793	51		 push	 ecx
  00794	e8 00 00 00 00	 call	 _ungetc
  00799	83 c4 08	 add	 esp, 8

; 140  : 			*p=0;

  0079c	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp]
  0079f	c6 00 00	 mov	 BYTE PTR [eax], 0

; 141  : 			CurrentToken=NAME;

  007a2	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _CurrentToken, 0

; 142  : 			return CurrentToken;

  007ac	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  007b1	eb 15		 jmp	 SHORT $LN32@GetToken

; 143  : 		}
; 144  : 		else

  007b3	eb 11		 jmp	 SHORT $LN1@GetToken
$LN5@GetToken:

; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'

  007b5	c7 05 00 00 00
	00 3c 00 00 00	 mov	 DWORD PTR _CurrentToken, 60 ; 0000003cH
  007bf	a1 00 00 00 00	 mov	 eax, DWORD PTR _CurrentToken
  007c4	eb 02		 jmp	 SHORT $LN32@GetToken
$LN1@GetToken:
$LN20@GetToken:

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;

  007c6	33 c0		 xor	 eax, eax
$LN32@GetToken:

; 153  : }

  007c8	5f		 pop	 edi
  007c9	5e		 pop	 esi
  007ca	5b		 pop	 ebx
  007cb	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  007ce	33 cd		 xor	 ecx, ebp
  007d0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  007d5	8b e5		 mov	 esp, ebp
  007d7	5d		 pop	 ebp
  007d8	c3		 ret	 0
  007d9	8d 49 00	 npad	 3
$LN35@GetToken:
  007dc	00 00 00 00	 DD	 $LN10@GetToken
  007e0	00 00 00 00	 DD	 $LN19@GetToken
  007e4	00 00 00 00	 DD	 $LN17@GetToken
  007e8	00 00 00 00	 DD	 $LN14@GetToken
  007ec	00 00 00 00	 DD	 $LN18@GetToken
  007f0	00 00 00 00	 DD	 $LN16@GetToken
  007f4	00 00 00 00	 DD	 $LN15@GetToken
  007f8	00 00 00 00	 DD	 $LN6@GetToken
$LN34@GetToken:
  007fc	00		 DB	 0
  007fd	01		 DB	 1
  007fe	07		 DB	 7
  007ff	07		 DB	 7
  00800	07		 DB	 7
  00801	07		 DB	 7
  00802	07		 DB	 7
  00803	07		 DB	 7
  00804	07		 DB	 7
  00805	07		 DB	 7
  00806	02		 DB	 2
  00807	03		 DB	 3
  00808	03		 DB	 3
  00809	07		 DB	 7
  0080a	03		 DB	 3
  0080b	03		 DB	 3
  0080c	03		 DB	 3
  0080d	03		 DB	 3
  0080e	03		 DB	 3
  0080f	03		 DB	 3
  00810	03		 DB	 3
  00811	03		 DB	 3
  00812	03		 DB	 3
  00813	03		 DB	 3
  00814	07		 DB	 7
  00815	04		 DB	 4
  00816	07		 DB	 7
  00817	07		 DB	 7
  00818	07		 DB	 7
  00819	07		 DB	 7
  0081a	07		 DB	 7
  0081b	07		 DB	 7
  0081c	07		 DB	 7
  0081d	07		 DB	 7
  0081e	07		 DB	 7
  0081f	07		 DB	 7
  00820	07		 DB	 7
  00821	07		 DB	 7
  00822	07		 DB	 7
  00823	07		 DB	 7
  00824	07		 DB	 7
  00825	07		 DB	 7
  00826	07		 DB	 7
  00827	07		 DB	 7
  00828	07		 DB	 7
  00829	07		 DB	 7
  0082a	07		 DB	 7
  0082b	07		 DB	 7
  0082c	07		 DB	 7
  0082d	07		 DB	 7
  0082e	07		 DB	 7
  0082f	07		 DB	 7
  00830	07		 DB	 7
  00831	07		 DB	 7
  00832	07		 DB	 7
  00833	07		 DB	 7
  00834	07		 DB	 7
  00835	07		 DB	 7
  00836	07		 DB	 7
  00837	07		 DB	 7
  00838	07		 DB	 7
  00839	07		 DB	 7
  0083a	07		 DB	 7
  0083b	07		 DB	 7
  0083c	07		 DB	 7
  0083d	07		 DB	 7
  0083e	07		 DB	 7
  0083f	07		 DB	 7
  00840	07		 DB	 7
  00841	07		 DB	 7
  00842	07		 DB	 7
  00843	07		 DB	 7
  00844	07		 DB	 7
  00845	07		 DB	 7
  00846	07		 DB	 7
  00847	07		 DB	 7
  00848	07		 DB	 7
  00849	07		 DB	 7
  0084a	07		 DB	 7
  0084b	07		 DB	 7
  0084c	07		 DB	 7
  0084d	07		 DB	 7
  0084e	07		 DB	 7
  0084f	07		 DB	 7
  00850	07		 DB	 7
  00851	07		 DB	 7
  00852	07		 DB	 7
  00853	07		 DB	 7
  00854	07		 DB	 7
  00855	05		 DB	 5
  00856	07		 DB	 7
  00857	06		 DB	 6
?GetToken@@YA?AW4SMDToken@@XZ ENDP			; GetToken
; Function compile flags: /Odtp /ZI
; File d:\projects\exteam6.3\source\gameserver\gameserver\itemaddoption.cpp
_i$219506 = -8						; size = 4
_this$ = -4						; size = 4
?Initialize@CItemAddOption@@QAEXXZ PROC			; CItemAddOption::Initialize
; _this$ = ecx

; 177  : {

  00860	55		 push	 ebp
  00861	8b ec		 mov	 ebp, esp
  00863	83 ec 48	 sub	 esp, 72			; 00000048H
  00866	53		 push	 ebx
  00867	56		 push	 esi
  00868	57		 push	 edi
  00869	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 178  : 	for ( int i=0;i<MAX_ITEM_ADD_OPTION;i++)

  0086c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$219506[ebp], 0
  00873	eb 09		 jmp	 SHORT $LN3@Initialize
$LN2@Initialize:
  00875	8b 45 f8	 mov	 eax, DWORD PTR _i$219506[ebp]
  00878	83 c0 01	 add	 eax, 1
  0087b	89 45 f8	 mov	 DWORD PTR _i$219506[ebp], eax
$LN3@Initialize:
  0087e	83 7d f8 64	 cmp	 DWORD PTR _i$219506[ebp], 100 ; 00000064H
  00882	0f 8d 8b 00 00
	00		 jge	 $LN4@Initialize

; 179  : 	{
; 180  : 		this->m_ItemAddOption[i].iItemNumber = 0;

  00888	8b 45 f8	 mov	 eax, DWORD PTR _i$219506[ebp]
  0088b	c1 e0 05	 shl	 eax, 5
  0088e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00891	c7 44 01 0c 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+12], 0

; 181  : 		this->m_ItemAddOption[i].iItemType = 0;

  00899	8b 45 f8	 mov	 eax, DWORD PTR _i$219506[ebp]
  0089c	c1 e0 05	 shl	 eax, 5
  0089f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008a2	c7 44 01 10 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+16], 0

; 182  : 		this->m_ItemAddOption[i].iItemIndex = 0;

  008aa	8b 45 f8	 mov	 eax, DWORD PTR _i$219506[ebp]
  008ad	c1 e0 05	 shl	 eax, 5
  008b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008b3	c7 44 01 14 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+20], 0

; 183  : 		this->m_ItemAddOption[i].wEffectType1 = 0;

  008bb	8b 45 f8	 mov	 eax, DWORD PTR _i$219506[ebp]
  008be	c1 e0 05	 shl	 eax, 5
  008c1	33 c9		 xor	 ecx, ecx
  008c3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  008c6	66 89 4c 02 06	 mov	 WORD PTR [edx+eax+6], cx

; 184  : 		this->m_ItemAddOption[i].iEffectValue1 = 0;

  008cb	8b 45 f8	 mov	 eax, DWORD PTR _i$219506[ebp]
  008ce	c1 e0 05	 shl	 eax, 5
  008d1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008d4	c7 44 01 18 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+24], 0

; 185  : 		this->m_ItemAddOption[i].wEffectType2 = 0;

  008dc	8b 45 f8	 mov	 eax, DWORD PTR _i$219506[ebp]
  008df	c1 e0 05	 shl	 eax, 5
  008e2	33 c9		 xor	 ecx, ecx
  008e4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  008e7	66 89 4c 02 08	 mov	 WORD PTR [edx+eax+8], cx

; 186  : 		this->m_ItemAddOption[i].iEffectValue2 = 0;

  008ec	8b 45 f8	 mov	 eax, DWORD PTR _i$219506[ebp]
  008ef	c1 e0 05	 shl	 eax, 5
  008f2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008f5	c7 44 01 1c 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+28], 0

; 187  : 		this->m_ItemAddOption[i].iEffectValidTime = 0;

  008fd	8b 45 f8	 mov	 eax, DWORD PTR _i$219506[ebp]
  00900	c1 e0 05	 shl	 eax, 5
  00903	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00906	c7 44 01 20 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+32], 0

; 188  : 	}

  0090e	e9 62 ff ff ff	 jmp	 $LN2@Initialize
$LN4@Initialize:

; 189  : }

  00913	5f		 pop	 edi
  00914	5e		 pop	 esi
  00915	5b		 pop	 ebx
  00916	8b e5		 mov	 esp, ebp
  00918	5d		 pop	 ebp
  00919	c3		 ret	 0
?Initialize@CItemAddOption@@QAEXXZ ENDP			; CItemAddOption::Initialize
_TEXT	ENDS
PUBLIC	?_ClearItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HHHH@Z ; CItemAddOption::_ClearItemEffect
PUBLIC	?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect
PUBLIC	?ClearItemEffect2@CItemAddOption@@QAEEPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::ClearItemEffect2
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_lpItemEffect$ = -8					; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_iItemNumber$ = 12					; size = 4
_iEffectOption$ = 16					; size = 4
?ClearItemEffect2@CItemAddOption@@QAEEPAUOBJECTSTRUCT@@HH@Z PROC ; CItemAddOption::ClearItemEffect2
; _this$ = ecx

; 192  : {

  00920	55		 push	 ebp
  00921	8b ec		 mov	 ebp, esp
  00923	83 ec 48	 sub	 esp, 72			; 00000048H
  00926	53		 push	 ebx
  00927	56		 push	 esi
  00928	57		 push	 edi
  00929	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 193  : 	LPITEMEFFECT lpItemEffect = NULL;

  0092c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _lpItemEffect$[ebp], 0

; 194  : 
; 195  : 	lpItemEffect = this->_SearchItemEffect(iItemNumber);

  00933	8b 45 0c	 mov	 eax, DWORD PTR _iItemNumber$[ebp]
  00936	50		 push	 eax
  00937	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0093a	e8 00 00 00 00	 call	 ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect
  0093f	89 45 f8	 mov	 DWORD PTR _lpItemEffect$[ebp], eax

; 196  : 
; 197  : 	if(lpItemEffect == NULL)

  00942	83 7d f8 00	 cmp	 DWORD PTR _lpItemEffect$[ebp], 0
  00946	75 04		 jne	 SHORT $LN1@ClearItemE

; 198  : 	{
; 199  : 		return 0;

  00948	32 c0		 xor	 al, al
  0094a	eb 4e		 jmp	 SHORT $LN2@ClearItemE
$LN1@ClearItemE:

; 200  : 	}
; 201  : 
; 202  : 	this->_ClearItemEffect(lpObj, iEffectOption, lpItemEffect->wOptionType, lpItemEffect->wEffectType1, lpItemEffect->iEffectValue1);

  0094c	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  0094f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00952	51		 push	 ecx
  00953	8b 55 f8	 mov	 edx, DWORD PTR _lpItemEffect$[ebp]
  00956	0f b7 42 02	 movzx	 eax, WORD PTR [edx+2]
  0095a	50		 push	 eax
  0095b	8b 4d f8	 mov	 ecx, DWORD PTR _lpItemEffect$[ebp]
  0095e	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00961	52		 push	 edx
  00962	8b 45 10	 mov	 eax, DWORD PTR _iEffectOption$[ebp]
  00965	50		 push	 eax
  00966	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00969	51		 push	 ecx
  0096a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0096d	e8 00 00 00 00	 call	 ?_ClearItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HHHH@Z ; CItemAddOption::_ClearItemEffect

; 203  : 	this->_ClearItemEffect(lpObj, iEffectOption, lpItemEffect->wOptionType, lpItemEffect->wEffectType2, lpItemEffect->iEffectValue2);

  00972	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00975	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00978	51		 push	 ecx
  00979	8b 55 f8	 mov	 edx, DWORD PTR _lpItemEffect$[ebp]
  0097c	0f b7 42 04	 movzx	 eax, WORD PTR [edx+4]
  00980	50		 push	 eax
  00981	8b 4d f8	 mov	 ecx, DWORD PTR _lpItemEffect$[ebp]
  00984	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00987	52		 push	 edx
  00988	8b 45 10	 mov	 eax, DWORD PTR _iEffectOption$[ebp]
  0098b	50		 push	 eax
  0098c	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0098f	51		 push	 ecx
  00990	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00993	e8 00 00 00 00	 call	 ?_ClearItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HHHH@Z ; CItemAddOption::_ClearItemEffect

; 204  : 
; 205  : 	return 1;

  00998	b0 01		 mov	 al, 1
$LN2@ClearItemE:

; 206  : }

  0099a	5f		 pop	 edi
  0099b	5e		 pop	 esi
  0099c	5b		 pop	 ebx
  0099d	8b e5		 mov	 esp, ebp
  0099f	5d		 pop	 ebp
  009a0	c2 0c 00	 ret	 12			; 0000000cH
?ClearItemEffect2@CItemAddOption@@QAEEPAUOBJECTSTRUCT@@HH@Z ENDP ; CItemAddOption::ClearItemEffect2
_TEXT	ENDS
PUBLIC	?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::_SetItemEffect
PUBLIC	?PrevSetItemLastEffectForCashShop@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@@Z ; CItemAddOption::PrevSetItemLastEffectForCashShop
EXTRN	?GetItemPeriodInfo@CCashItemPeriodSystem@@QAEPAUITEMPERIOD_INFO@@PAUOBJECTSTRUCT@@@Z:PROC ; CCashItemPeriodSystem::GetItemPeriodInfo
EXTRN	?g_CashItemPeriodSystem@@3VCCashItemPeriodSystem@@A:BYTE ; g_CashItemPeriodSystem
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv129 = -84						; size = 4
tv85 = -84						; size = 4
_i$219525 = -16						; size = 4
_lpItemEffect$ = -12					; size = 4
_lpItemPeriodInfo$ = -8					; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
?PrevSetItemLastEffectForCashShop@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@@Z PROC ; CItemAddOption::PrevSetItemLastEffectForCashShop
; _this$ = ecx

; 209  : {

  009b0	55		 push	 ebp
  009b1	8b ec		 mov	 ebp, esp
  009b3	83 ec 54	 sub	 esp, 84			; 00000054H
  009b6	53		 push	 ebx
  009b7	56		 push	 esi
  009b8	57		 push	 edi
  009b9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 210  : 	ITEMPERIOD_INFO* lpItemPeriodInfo = NULL;

  009bc	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _lpItemPeriodInfo$[ebp], 0

; 211  : 	LPITEMEFFECT lpItemEffect = NULL;

  009c3	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _lpItemEffect$[ebp], 0

; 212  : 
; 213  : 	lpItemPeriodInfo = ::g_CashItemPeriodSystem.GetItemPeriodInfo(lpObj);

  009ca	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  009cd	50		 push	 eax
  009ce	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CashItemPeriodSystem@@3VCCashItemPeriodSystem@@A ; g_CashItemPeriodSystem
  009d3	e8 00 00 00 00	 call	 ?GetItemPeriodInfo@CCashItemPeriodSystem@@QAEPAUITEMPERIOD_INFO@@PAUOBJECTSTRUCT@@@Z ; CCashItemPeriodSystem::GetItemPeriodInfo
  009d8	89 45 f8	 mov	 DWORD PTR _lpItemPeriodInfo$[ebp], eax

; 214  : 
; 215  : 	if( lpItemPeriodInfo == NULL )

  009db	83 7d f8 00	 cmp	 DWORD PTR _lpItemPeriodInfo$[ebp], 0
  009df	75 07		 jne	 SHORT $LN14@PrevSetIte

; 216  : 	{
; 217  : 		return false;

  009e1	32 c0		 xor	 al, al
  009e3	e9 e7 00 00 00	 jmp	 $LN15@PrevSetIte
$LN14@PrevSetIte:

; 218  : 	}
; 219  : 
; 220  : 	for( int i = 0; i < MAX_ITEM_PERIOD_EFFECT; i++ )

  009e8	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$219525[ebp], 0
  009ef	eb 09		 jmp	 SHORT $LN13@PrevSetIte
$LN12@PrevSetIte:
  009f1	8b 45 f0	 mov	 eax, DWORD PTR _i$219525[ebp]
  009f4	83 c0 01	 add	 eax, 1
  009f7	89 45 f0	 mov	 DWORD PTR _i$219525[ebp], eax
$LN13@PrevSetIte:
  009fa	83 7d f0 0a	 cmp	 DWORD PTR _i$219525[ebp], 10 ; 0000000aH
  009fe	0f 8d c9 00 00
	00		 jge	 $LN11@PrevSetIte

; 221  : 	{
; 222  : 		if( lpItemPeriodInfo->vItemEffect[i].bInUse == true )

  00a04	8b 45 f0	 mov	 eax, DWORD PTR _i$219525[ebp]
  00a07	c1 e0 04	 shl	 eax, 4
  00a0a	8b 4d f8	 mov	 ecx, DWORD PTR _lpItemPeriodInfo$[ebp]
  00a0d	0f b6 54 01 18	 movzx	 edx, BYTE PTR [ecx+eax+24]
  00a12	83 fa 01	 cmp	 edx, 1
  00a15	0f 85 ad 00 00
	00		 jne	 $LN10@PrevSetIte

; 223  : 		{
; 224  : 			lpItemEffect = this->_SearchItemEffect(lpItemPeriodInfo->vItemEffect[i].iItemCode);

  00a1b	8b 45 f0	 mov	 eax, DWORD PTR _i$219525[ebp]
  00a1e	c1 e0 04	 shl	 eax, 4
  00a21	8b 4d f8	 mov	 ecx, DWORD PTR _lpItemPeriodInfo$[ebp]
  00a24	8b 54 01 1c	 mov	 edx, DWORD PTR [ecx+eax+28]
  00a28	52		 push	 edx
  00a29	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a2c	e8 00 00 00 00	 call	 ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect
  00a31	89 45 f4	 mov	 DWORD PTR _lpItemEffect$[ebp], eax

; 225  : 			
; 226  : 			if( lpItemEffect != NULL )

  00a34	83 7d f4 00	 cmp	 DWORD PTR _lpItemEffect$[ebp], 0
  00a38	0f 84 8a 00 00
	00		 je	 $LN10@PrevSetIte

; 227  : 			{
; 228  : #ifdef DEBUG_CODE
; 229  : 				LogAddC(1,"lpItemEffect->wEffectType1: %d",lpItemEffect->wEffectType1);
; 230  : #endif
; 231  : 
; 232  : 				switch( lpItemEffect->wEffectType1 )

  00a3e	8b 45 f4	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00a41	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00a45	89 4d ac	 mov	 DWORD PTR tv85[ebp], ecx
  00a48	8b 55 ac	 mov	 edx, DWORD PTR tv85[ebp]
  00a4b	83 ea 04	 sub	 edx, 4
  00a4e	89 55 ac	 mov	 DWORD PTR tv85[ebp], edx
  00a51	83 7d ac 09	 cmp	 DWORD PTR tv85[ebp], 9
  00a55	77 2c		 ja	 SHORT $LN7@PrevSetIte
  00a57	8b 45 ac	 mov	 eax, DWORD PTR tv85[ebp]
  00a5a	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN17@PrevSetIte[eax]
  00a61	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN19@PrevSetIte[ecx*4]
$LN6@PrevSetIte:

; 233  : 				{
; 234  : 					case ADD_OPTION_LIFE: //4
; 235  : 					case ADD_OPTION_MANA: //5
; 236  : 					case ADD_OPTION_STRENGTH: //9
; 237  : 					case ADD_OPTION_DEXTERITY: //10
; 238  : 					case ADD_OPTION_VITALITY: //11
; 239  : 					case ADD_OPTION_ENERGY: //12
; 240  : 					case ADD_OPTION_LEADERSHIP: //13
; 241  : 						this->_SetItemEffect(lpObj,lpItemEffect->wEffectType1,lpItemEffect->iEffectValue1);

  00a68	8b 45 f4	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00a6b	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00a6e	51		 push	 ecx
  00a6f	8b 55 f4	 mov	 edx, DWORD PTR _lpItemEffect$[ebp]
  00a72	0f b7 42 02	 movzx	 eax, WORD PTR [edx+2]
  00a76	50		 push	 eax
  00a77	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00a7a	51		 push	 ecx
  00a7b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a7e	e8 00 00 00 00	 call	 ?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::_SetItemEffect
$LN7@PrevSetIte:

; 242  : 						break;
; 243  : 
; 244  : 					default :
; 245  : 						break;
; 246  : 				}
; 247  : 
; 248  : 				switch( lpItemEffect->wEffectType2 )

  00a83	8b 45 f4	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00a86	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  00a8a	89 4d ac	 mov	 DWORD PTR tv129[ebp], ecx
  00a8d	8b 55 ac	 mov	 edx, DWORD PTR tv129[ebp]
  00a90	83 ea 04	 sub	 edx, 4
  00a93	89 55 ac	 mov	 DWORD PTR tv129[ebp], edx
  00a96	83 7d ac 09	 cmp	 DWORD PTR tv129[ebp], 9
  00a9a	77 2c		 ja	 SHORT $LN10@PrevSetIte
  00a9c	8b 45 ac	 mov	 eax, DWORD PTR tv129[ebp]
  00a9f	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN18@PrevSetIte[eax]
  00aa6	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN20@PrevSetIte[ecx*4]
$LN2@PrevSetIte:

; 249  : 				{
; 250  : 					case ADD_OPTION_LIFE: //4
; 251  : 					case ADD_OPTION_MANA: //5
; 252  : 					case ADD_OPTION_STRENGTH: //9
; 253  : 					case ADD_OPTION_DEXTERITY: //10
; 254  : 					case ADD_OPTION_VITALITY: //11
; 255  : 					case ADD_OPTION_ENERGY: //12
; 256  : 					case ADD_OPTION_LEADERSHIP: //13
; 257  : 						this->_SetItemEffect(lpObj,lpItemEffect->wEffectType2,lpItemEffect->iEffectValue2);

  00aad	8b 45 f4	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00ab0	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00ab3	51		 push	 ecx
  00ab4	8b 55 f4	 mov	 edx, DWORD PTR _lpItemEffect$[ebp]
  00ab7	0f b7 42 04	 movzx	 eax, WORD PTR [edx+4]
  00abb	50		 push	 eax
  00abc	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00abf	51		 push	 ecx
  00ac0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00ac3	e8 00 00 00 00	 call	 ?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::_SetItemEffect
$LN10@PrevSetIte:

; 258  : 						break;
; 259  : 					
; 260  : 					default :
; 261  : 						break;
; 262  : 				}
; 263  : 			}
; 264  : 		}	
; 265  : 	}

  00ac8	e9 24 ff ff ff	 jmp	 $LN12@PrevSetIte
$LN11@PrevSetIte:

; 266  : 	return true;

  00acd	b0 01		 mov	 al, 1
$LN15@PrevSetIte:

; 267  : }

  00acf	5f		 pop	 edi
  00ad0	5e		 pop	 esi
  00ad1	5b		 pop	 ebx
  00ad2	8b e5		 mov	 esp, ebp
  00ad4	5d		 pop	 ebp
  00ad5	c2 04 00	 ret	 4
$LN19@PrevSetIte:
  00ad8	00 00 00 00	 DD	 $LN6@PrevSetIte
  00adc	00 00 00 00	 DD	 $LN7@PrevSetIte
$LN17@PrevSetIte:
  00ae0	00		 DB	 0
  00ae1	00		 DB	 0
  00ae2	01		 DB	 1
  00ae3	01		 DB	 1
  00ae4	01		 DB	 1
  00ae5	00		 DB	 0
  00ae6	00		 DB	 0
  00ae7	00		 DB	 0
  00ae8	00		 DB	 0
  00ae9	00		 DB	 0
  00aea	8b ff		 npad	 2
$LN20@PrevSetIte:
  00aec	00 00 00 00	 DD	 $LN2@PrevSetIte
  00af0	00 00 00 00	 DD	 $LN10@PrevSetIte
$LN18@PrevSetIte:
  00af4	00		 DB	 0
  00af5	00		 DB	 0
  00af6	01		 DB	 1
  00af7	01		 DB	 1
  00af8	01		 DB	 1
  00af9	00		 DB	 0
  00afa	00		 DB	 0
  00afb	00		 DB	 0
  00afc	00		 DB	 0
  00afd	00		 DB	 0
?PrevSetItemLastEffectForCashShop@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@@Z ENDP ; CItemAddOption::PrevSetItemLastEffectForCashShop
_TEXT	ENDS
PUBLIC	?NextSetItemLastEffectForCashShop@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@@Z ; CItemAddOption::NextSetItemLastEffectForCashShop
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv129 = -84						; size = 4
tv85 = -84						; size = 4
_i$219550 = -16						; size = 4
_lpItemEffect$ = -12					; size = 4
_lpItemPeriodInfo$ = -8					; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
?NextSetItemLastEffectForCashShop@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@@Z PROC ; CItemAddOption::NextSetItemLastEffectForCashShop
; _this$ = ecx

; 271  : {

  00b00	55		 push	 ebp
  00b01	8b ec		 mov	 ebp, esp
  00b03	83 ec 54	 sub	 esp, 84			; 00000054H
  00b06	53		 push	 ebx
  00b07	56		 push	 esi
  00b08	57		 push	 edi
  00b09	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 272  : 	ITEMPERIOD_INFO* lpItemPeriodInfo = NULL;

  00b0c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _lpItemPeriodInfo$[ebp], 0

; 273  : 	LPITEMEFFECT lpItemEffect = NULL;

  00b13	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _lpItemEffect$[ebp], 0

; 274  : 
; 275  : 	lpItemPeriodInfo = ::g_CashItemPeriodSystem.GetItemPeriodInfo(lpObj);

  00b1a	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00b1d	50		 push	 eax
  00b1e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CashItemPeriodSystem@@3VCCashItemPeriodSystem@@A ; g_CashItemPeriodSystem
  00b23	e8 00 00 00 00	 call	 ?GetItemPeriodInfo@CCashItemPeriodSystem@@QAEPAUITEMPERIOD_INFO@@PAUOBJECTSTRUCT@@@Z ; CCashItemPeriodSystem::GetItemPeriodInfo
  00b28	89 45 f8	 mov	 DWORD PTR _lpItemPeriodInfo$[ebp], eax

; 276  : 
; 277  : 	if( lpItemPeriodInfo == NULL )

  00b2b	83 7d f8 00	 cmp	 DWORD PTR _lpItemPeriodInfo$[ebp], 0
  00b2f	75 07		 jne	 SHORT $LN14@NextSetIte

; 278  : 	{
; 279  : 		return false;

  00b31	32 c0		 xor	 al, al
  00b33	e9 eb 00 00 00	 jmp	 $LN15@NextSetIte
$LN14@NextSetIte:

; 280  : 	}
; 281  : 
; 282  : 	for( int i = 0; i < MAX_ITEM_PERIOD_EFFECT; i++ )

  00b38	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$219550[ebp], 0
  00b3f	eb 09		 jmp	 SHORT $LN13@NextSetIte
$LN12@NextSetIte:
  00b41	8b 45 f0	 mov	 eax, DWORD PTR _i$219550[ebp]
  00b44	83 c0 01	 add	 eax, 1
  00b47	89 45 f0	 mov	 DWORD PTR _i$219550[ebp], eax
$LN13@NextSetIte:
  00b4a	83 7d f0 0a	 cmp	 DWORD PTR _i$219550[ebp], 10 ; 0000000aH
  00b4e	0f 8d cd 00 00
	00		 jge	 $LN11@NextSetIte

; 283  : 	{
; 284  : 		if( lpItemPeriodInfo->vItemEffect[i].bInUse == true )

  00b54	8b 45 f0	 mov	 eax, DWORD PTR _i$219550[ebp]
  00b57	c1 e0 04	 shl	 eax, 4
  00b5a	8b 4d f8	 mov	 ecx, DWORD PTR _lpItemPeriodInfo$[ebp]
  00b5d	0f b6 54 01 18	 movzx	 edx, BYTE PTR [ecx+eax+24]
  00b62	83 fa 01	 cmp	 edx, 1
  00b65	0f 85 b1 00 00
	00		 jne	 $LN10@NextSetIte

; 285  : 		{
; 286  : 			lpItemEffect = this->_SearchItemEffect(lpItemPeriodInfo->vItemEffect[i].iItemCode);

  00b6b	8b 45 f0	 mov	 eax, DWORD PTR _i$219550[ebp]
  00b6e	c1 e0 04	 shl	 eax, 4
  00b71	8b 4d f8	 mov	 ecx, DWORD PTR _lpItemPeriodInfo$[ebp]
  00b74	8b 54 01 1c	 mov	 edx, DWORD PTR [ecx+eax+28]
  00b78	52		 push	 edx
  00b79	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b7c	e8 00 00 00 00	 call	 ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect
  00b81	89 45 f4	 mov	 DWORD PTR _lpItemEffect$[ebp], eax

; 287  : 			
; 288  : 			if( lpItemEffect != NULL )

  00b84	83 7d f4 00	 cmp	 DWORD PTR _lpItemEffect$[ebp], 0
  00b88	0f 84 8e 00 00
	00		 je	 $LN10@NextSetIte

; 289  : 			{
; 290  : 				switch( lpItemEffect->wEffectType1 )

  00b8e	8b 45 f4	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00b91	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00b95	89 4d ac	 mov	 DWORD PTR tv85[ebp], ecx
  00b98	8b 55 ac	 mov	 edx, DWORD PTR tv85[ebp]
  00b9b	83 ea 01	 sub	 edx, 1
  00b9e	89 55 ac	 mov	 DWORD PTR tv85[ebp], edx
  00ba1	83 7d ac 0c	 cmp	 DWORD PTR tv85[ebp], 12	; 0000000cH
  00ba5	77 13		 ja	 SHORT $LN5@NextSetIte
  00ba7	8b 45 ac	 mov	 eax, DWORD PTR tv85[ebp]
  00baa	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN17@NextSetIte[eax]
  00bb1	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN19@NextSetIte[ecx*4]
$LN6@NextSetIte:

; 291  : 				{
; 292  : 					case ADD_OPTION_SPEED: //1 -> Season3.5 add-on
; 293  : 					case ADD_OPTION_LIFE: //4
; 294  : 					case ADD_OPTION_MANA: //5
; 295  : 					case ADD_OPTION_STRENGTH: //9
; 296  : 					case ADD_OPTION_DEXTERITY: //10
; 297  : 					case ADD_OPTION_VITALITY: //11
; 298  : 					case ADD_OPTION_ENERGY: //12
; 299  : 					case ADD_OPTION_LEADERSHIP: //13
; 300  : 						break;

  00bb8	eb 1b		 jmp	 SHORT $LN7@NextSetIte
$LN5@NextSetIte:

; 301  : 
; 302  : 					default :
; 303  : 						this->_SetItemEffect(lpObj,lpItemEffect->wEffectType1,lpItemEffect->iEffectValue1);

  00bba	8b 45 f4	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00bbd	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00bc0	51		 push	 ecx
  00bc1	8b 55 f4	 mov	 edx, DWORD PTR _lpItemEffect$[ebp]
  00bc4	0f b7 42 02	 movzx	 eax, WORD PTR [edx+2]
  00bc8	50		 push	 eax
  00bc9	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00bcc	51		 push	 ecx
  00bcd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00bd0	e8 00 00 00 00	 call	 ?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::_SetItemEffect
$LN7@NextSetIte:

; 304  : 						break;
; 305  : 				}
; 306  : 
; 307  : 				switch( lpItemEffect->wEffectType2 )

  00bd5	8b 45 f4	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00bd8	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  00bdc	89 4d ac	 mov	 DWORD PTR tv129[ebp], ecx
  00bdf	8b 55 ac	 mov	 edx, DWORD PTR tv129[ebp]
  00be2	83 ea 01	 sub	 edx, 1
  00be5	89 55 ac	 mov	 DWORD PTR tv129[ebp], edx
  00be8	83 7d ac 0c	 cmp	 DWORD PTR tv129[ebp], 12 ; 0000000cH
  00bec	77 13		 ja	 SHORT $LN1@NextSetIte
  00bee	8b 45 ac	 mov	 eax, DWORD PTR tv129[ebp]
  00bf1	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN18@NextSetIte[eax]
  00bf8	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN20@NextSetIte[ecx*4]
$LN2@NextSetIte:

; 308  : 				{
; 309  : 					case ADD_OPTION_SPEED: //1 -> Season3.5 add-on
; 310  : 					case ADD_OPTION_LIFE: //4
; 311  : 					case ADD_OPTION_MANA: //5
; 312  : 					case ADD_OPTION_STRENGTH: //9
; 313  : 					case ADD_OPTION_DEXTERITY: //10
; 314  : 					case ADD_OPTION_VITALITY: //11
; 315  : 					case ADD_OPTION_ENERGY: //12
; 316  : 					case ADD_OPTION_LEADERSHIP: //13
; 317  : 						break;

  00bff	eb 1b		 jmp	 SHORT $LN10@NextSetIte
$LN1@NextSetIte:

; 318  : 					
; 319  : 					default :
; 320  : 						this->_SetItemEffect(lpObj,lpItemEffect->wEffectType2,lpItemEffect->iEffectValue2);

  00c01	8b 45 f4	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00c04	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00c07	51		 push	 ecx
  00c08	8b 55 f4	 mov	 edx, DWORD PTR _lpItemEffect$[ebp]
  00c0b	0f b7 42 04	 movzx	 eax, WORD PTR [edx+4]
  00c0f	50		 push	 eax
  00c10	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00c13	51		 push	 ecx
  00c14	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c17	e8 00 00 00 00	 call	 ?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::_SetItemEffect
$LN10@NextSetIte:

; 321  : 						break;
; 322  : 				}
; 323  : 			}
; 324  : 		}	
; 325  : 	}

  00c1c	e9 20 ff ff ff	 jmp	 $LN12@NextSetIte
$LN11@NextSetIte:

; 326  : 	return true;

  00c21	b0 01		 mov	 al, 1
$LN15@NextSetIte:

; 327  : }

  00c23	5f		 pop	 edi
  00c24	5e		 pop	 esi
  00c25	5b		 pop	 ebx
  00c26	8b e5		 mov	 esp, ebp
  00c28	5d		 pop	 ebp
  00c29	c2 04 00	 ret	 4
$LN19@NextSetIte:
  00c2c	00 00 00 00	 DD	 $LN6@NextSetIte
  00c30	00 00 00 00	 DD	 $LN5@NextSetIte
$LN17@NextSetIte:
  00c34	00		 DB	 0
  00c35	01		 DB	 1
  00c36	01		 DB	 1
  00c37	00		 DB	 0
  00c38	00		 DB	 0
  00c39	01		 DB	 1
  00c3a	01		 DB	 1
  00c3b	01		 DB	 1
  00c3c	00		 DB	 0
  00c3d	00		 DB	 0
  00c3e	00		 DB	 0
  00c3f	00		 DB	 0
  00c40	00		 DB	 0
  00c41	8d 49 00	 npad	 3
$LN20@NextSetIte:
  00c44	00 00 00 00	 DD	 $LN2@NextSetIte
  00c48	00 00 00 00	 DD	 $LN1@NextSetIte
$LN18@NextSetIte:
  00c4c	00		 DB	 0
  00c4d	01		 DB	 1
  00c4e	01		 DB	 1
  00c4f	00		 DB	 0
  00c50	00		 DB	 0
  00c51	01		 DB	 1
  00c52	01		 DB	 1
  00c53	01		 DB	 1
  00c54	00		 DB	 0
  00c55	00		 DB	 0
  00c56	00		 DB	 0
  00c57	00		 DB	 0
  00c58	00		 DB	 0
?NextSetItemLastEffectForCashShop@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@@Z ENDP ; CItemAddOption::NextSetItemLastEffectForCashShop
_TEXT	ENDS
PUBLIC	?PrevSetItemLastEffectForHallowin@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@@Z ; CItemAddOption::PrevSetItemLastEffectForHallowin
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_iItemEffectType$ = -12					; size = 4
_lpItemEffect$ = -8					; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
?PrevSetItemLastEffectForHallowin@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@@Z PROC ; CItemAddOption::PrevSetItemLastEffectForHallowin
; _this$ = ecx

; 330  : {

  00c60	55		 push	 ebp
  00c61	8b ec		 mov	 ebp, esp
  00c63	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00c66	53		 push	 ebx
  00c67	56		 push	 esi
  00c68	57		 push	 edi
  00c69	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 331  : 	LPITEMEFFECT lpItemEffect = NULL;

  00c6c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _lpItemEffect$[ebp], 0

; 332  : 	int iItemEffectType = lpObj->m_wItemEffectType;

  00c73	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00c76	0f b7 88 14 20
	00 00		 movzx	 ecx, WORD PTR [eax+8212]
  00c7d	89 4d f4	 mov	 DWORD PTR _iItemEffectType$[ebp], ecx

; 333  : 
; 334  : 	lpItemEffect = this->_SearchItemEffect(iItemEffectType);

  00c80	8b 45 f4	 mov	 eax, DWORD PTR _iItemEffectType$[ebp]
  00c83	50		 push	 eax
  00c84	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c87	e8 00 00 00 00	 call	 ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect
  00c8c	89 45 f8	 mov	 DWORD PTR _lpItemEffect$[ebp], eax

; 335  : 
; 336  : 	if ( lpItemEffect == NULL )

  00c8f	83 7d f8 00	 cmp	 DWORD PTR _lpItemEffect$[ebp], 0
  00c93	75 04		 jne	 SHORT $LN3@PrevSetIte@2

; 337  : 	{
; 338  : 		return false;

  00c95	32 c0		 xor	 al, al
  00c97	eb 35		 jmp	 SHORT $LN4@PrevSetIte@2
$LN3@PrevSetIte@2:

; 339  : 	}
; 340  : 
; 341  : 	if ( lpItemEffect->wEffectType1 == ADD_OPTION_LIFE || lpItemEffect->wEffectType1 == ADD_OPTION_MANA )

  00c99	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00c9c	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00ca0	83 f9 04	 cmp	 ecx, 4
  00ca3	74 0c		 je	 SHORT $LN1@PrevSetIte@2
  00ca5	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00ca8	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00cac	83 f9 05	 cmp	 ecx, 5
  00caf	75 1b		 jne	 SHORT $LN2@PrevSetIte@2
$LN1@PrevSetIte@2:

; 342  : 	{
; 343  : 		this->_SetItemEffect(lpObj, lpItemEffect->wEffectType1, lpItemEffect->iEffectValue1);

  00cb1	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00cb4	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00cb7	51		 push	 ecx
  00cb8	8b 55 f8	 mov	 edx, DWORD PTR _lpItemEffect$[ebp]
  00cbb	0f b7 42 02	 movzx	 eax, WORD PTR [edx+2]
  00cbf	50		 push	 eax
  00cc0	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00cc3	51		 push	 ecx
  00cc4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00cc7	e8 00 00 00 00	 call	 ?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::_SetItemEffect
$LN2@PrevSetIte@2:

; 344  : 	}
; 345  : 
; 346  : 	return true;

  00ccc	b0 01		 mov	 al, 1
$LN4@PrevSetIte@2:

; 347  : }

  00cce	5f		 pop	 edi
  00ccf	5e		 pop	 esi
  00cd0	5b		 pop	 ebx
  00cd1	8b e5		 mov	 esp, ebp
  00cd3	5d		 pop	 ebp
  00cd4	c2 04 00	 ret	 4
?PrevSetItemLastEffectForHallowin@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@@Z ENDP ; CItemAddOption::PrevSetItemLastEffectForHallowin
_TEXT	ENDS
PUBLIC	?NextSetItemLastEffectForHallowin@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@@Z ; CItemAddOption::NextSetItemLastEffectForHallowin
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_iItemEffectType$ = -12					; size = 4
_lpItemEffect$ = -8					; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
?NextSetItemLastEffectForHallowin@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@@Z PROC ; CItemAddOption::NextSetItemLastEffectForHallowin
; _this$ = ecx

; 350  : {

  00ce0	55		 push	 ebp
  00ce1	8b ec		 mov	 ebp, esp
  00ce3	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00ce6	53		 push	 ebx
  00ce7	56		 push	 esi
  00ce8	57		 push	 edi
  00ce9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 351  : 	LPITEMEFFECT lpItemEffect = NULL;

  00cec	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _lpItemEffect$[ebp], 0

; 352  : 	int iItemEffectType = lpObj->m_wItemEffectType;

  00cf3	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00cf6	0f b7 88 14 20
	00 00		 movzx	 ecx, WORD PTR [eax+8212]
  00cfd	89 4d f4	 mov	 DWORD PTR _iItemEffectType$[ebp], ecx

; 353  : 
; 354  : 	lpItemEffect = this->_SearchItemEffect(iItemEffectType);

  00d00	8b 45 f4	 mov	 eax, DWORD PTR _iItemEffectType$[ebp]
  00d03	50		 push	 eax
  00d04	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d07	e8 00 00 00 00	 call	 ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect
  00d0c	89 45 f8	 mov	 DWORD PTR _lpItemEffect$[ebp], eax

; 355  : 
; 356  : 	if ( lpItemEffect == NULL )

  00d0f	83 7d f8 00	 cmp	 DWORD PTR _lpItemEffect$[ebp], 0
  00d13	75 04		 jne	 SHORT $LN2@NextSetIte@2

; 357  : 	{
; 358  : 		return false;

  00d15	32 c0		 xor	 al, al
  00d17	eb 35		 jmp	 SHORT $LN3@NextSetIte@2
$LN2@NextSetIte@2:

; 359  : 	}
; 360  : 
; 361  : 	if ( lpItemEffect->wEffectType1 != ADD_OPTION_LIFE && lpItemEffect->wEffectType1 != ADD_OPTION_MANA )

  00d19	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00d1c	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00d20	83 f9 04	 cmp	 ecx, 4
  00d23	74 27		 je	 SHORT $LN1@NextSetIte@2
  00d25	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00d28	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00d2c	83 f9 05	 cmp	 ecx, 5
  00d2f	74 1b		 je	 SHORT $LN1@NextSetIte@2

; 362  : 	{
; 363  : 		this->_SetItemEffect(lpObj, lpItemEffect->wEffectType1, lpItemEffect->iEffectValue1);

  00d31	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00d34	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00d37	51		 push	 ecx
  00d38	8b 55 f8	 mov	 edx, DWORD PTR _lpItemEffect$[ebp]
  00d3b	0f b7 42 02	 movzx	 eax, WORD PTR [edx+2]
  00d3f	50		 push	 eax
  00d40	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00d43	51		 push	 ecx
  00d44	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d47	e8 00 00 00 00	 call	 ?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::_SetItemEffect
$LN1@NextSetIte@2:

; 364  : 	}
; 365  : 
; 366  : 	return true;

  00d4c	b0 01		 mov	 al, 1
$LN3@NextSetIte@2:

; 367  : }

  00d4e	5f		 pop	 edi
  00d4f	5e		 pop	 esi
  00d50	5b		 pop	 ebx
  00d51	8b e5		 mov	 esp, ebp
  00d53	5d		 pop	 ebp
  00d54	c2 04 00	 ret	 4
?NextSetItemLastEffectForHallowin@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@@Z ENDP ; CItemAddOption::NextSetItemLastEffectForHallowin
_TEXT	ENDS
PUBLIC	?SendItemUse@CItemAddOption@@QAEXPAUOBJECTSTRUCT@@HHHHH@Z ; CItemAddOption::SendItemUse
EXTRN	?GCUseEffectItem@@YAXPAUOBJECTSTRUCT@@HHHH@Z:PROC ; GCUseEffectItem
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_iItemNumber$ = 12					; size = 4
_iOptionType$ = 16					; size = 4
_iEffectType$ = 20					; size = 4
_iEffectValue$ = 24					; size = 4
_iValidTime$ = 28					; size = 4
?SendItemUse@CItemAddOption@@QAEXPAUOBJECTSTRUCT@@HHHHH@Z PROC ; CItemAddOption::SendItemUse
; _this$ = ecx

; 370  : {

  00d60	55		 push	 ebp
  00d61	8b ec		 mov	 ebp, esp
  00d63	83 ec 44	 sub	 esp, 68			; 00000044H
  00d66	53		 push	 ebx
  00d67	56		 push	 esi
  00d68	57		 push	 edi
  00d69	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 371  : 	if ( lpObj == NULL )

  00d6c	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  00d70	75 02		 jne	 SHORT $LN3@SendItemUs

; 372  : 	{
; 373  : 		return;

  00d72	eb 28		 jmp	 SHORT $LN4@SendItemUs
$LN3@SendItemUs:

; 374  : 	}
; 375  : 	
; 376  : 	if ( iItemNumber== 0 || iEffectType == 0 )

  00d74	83 7d 0c 00	 cmp	 DWORD PTR _iItemNumber$[ebp], 0
  00d78	74 06		 je	 SHORT $LN1@SendItemUs
  00d7a	83 7d 14 00	 cmp	 DWORD PTR _iEffectType$[ebp], 0
  00d7e	75 02		 jne	 SHORT $LN2@SendItemUs
$LN1@SendItemUs:

; 377  : 	{
; 378  : 		return;

  00d80	eb 1a		 jmp	 SHORT $LN4@SendItemUs
$LN2@SendItemUs:

; 379  : 	}
; 380  : 
; 381  : 	GCUseEffectItem(lpObj, 0, iOptionType, iEffectType, iValidTime);

  00d82	8b 45 1c	 mov	 eax, DWORD PTR _iValidTime$[ebp]
  00d85	50		 push	 eax
  00d86	8b 4d 14	 mov	 ecx, DWORD PTR _iEffectType$[ebp]
  00d89	51		 push	 ecx
  00d8a	8b 55 10	 mov	 edx, DWORD PTR _iOptionType$[ebp]
  00d8d	52		 push	 edx
  00d8e	6a 00		 push	 0
  00d90	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00d93	50		 push	 eax
  00d94	e8 00 00 00 00	 call	 ?GCUseEffectItem@@YAXPAUOBJECTSTRUCT@@HHHH@Z ; GCUseEffectItem
  00d99	83 c4 14	 add	 esp, 20			; 00000014H
$LN4@SendItemUs:

; 382  : }

  00d9c	5f		 pop	 edi
  00d9d	5e		 pop	 esi
  00d9e	5b		 pop	 ebx
  00d9f	8b e5		 mov	 esp, ebp
  00da1	5d		 pop	 ebp
  00da2	c2 18 00	 ret	 24			; 00000018H
?SendItemUse@CItemAddOption@@QAEXPAUOBJECTSTRUCT@@HHHHH@Z ENDP ; CItemAddOption::SendItemUse
_TEXT	ENDS
PUBLIC	?ClearItemEffect@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@H@Z ; CItemAddOption::ClearItemEffect
PUBLIC	?GetCurrentEffectType@CItemAddOption@@QAEPAUITEMEFFECT@@PAUOBJECTSTRUCT@@@Z ; CItemAddOption::GetCurrentEffectType
PUBLIC	?SetItemEffect@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::SetItemEffect
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_lpItemEffect$ = -12					; size = 4
_lpItemEffectBefore$ = -8				; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_iItemNumber$ = 12					; size = 4
_iItemUseTime$ = 16					; size = 4
?SetItemEffect@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@HH@Z PROC ; CItemAddOption::SetItemEffect
; _this$ = ecx

; 385  : {

  00db0	55		 push	 ebp
  00db1	8b ec		 mov	 ebp, esp
  00db3	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00db6	53		 push	 ebx
  00db7	56		 push	 esi
  00db8	57		 push	 edi
  00db9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 386  : 	LPITEMEFFECT lpItemEffectBefore = NULL;

  00dbc	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _lpItemEffectBefore$[ebp], 0

; 387  : 	LPITEMEFFECT lpItemEffect = NULL;

  00dc3	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _lpItemEffect$[ebp], 0

; 388  : 
; 389  : 	if ( lpObj == NULL )

  00dca	83 7d 08 00	 cmp	 DWORD PTR _lpObj$[ebp], 0
  00dce	75 07		 jne	 SHORT $LN10@SetItemEff

; 390  : 	{
; 391  : 		return false;

  00dd0	32 c0		 xor	 al, al
  00dd2	e9 e6 01 00 00	 jmp	 $LN11@SetItemEff
$LN10@SetItemEff:

; 392  : 	}
; 393  : 
; 394  : 	if ( lpObj->Type != OBJ_USER )

  00dd7	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00dda	0f b7 48 68	 movzx	 ecx, WORD PTR [eax+104]
  00dde	83 f9 01	 cmp	 ecx, 1
  00de1	74 07		 je	 SHORT $LN9@SetItemEff

; 395  : 	{
; 396  : 		return false;

  00de3	32 c0		 xor	 al, al
  00de5	e9 d3 01 00 00	 jmp	 $LN11@SetItemEff
$LN9@SetItemEff:

; 397  : 	}
; 398  : 
; 399  : 	lpItemEffect = this->_SearchItemEffect(iItemNumber);

  00dea	8b 45 0c	 mov	 eax, DWORD PTR _iItemNumber$[ebp]
  00ded	50		 push	 eax
  00dee	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00df1	e8 00 00 00 00	 call	 ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect
  00df6	89 45 f4	 mov	 DWORD PTR _lpItemEffect$[ebp], eax

; 400  : 
; 401  : 	if ( lpItemEffect == NULL )

  00df9	83 7d f4 00	 cmp	 DWORD PTR _lpItemEffect$[ebp], 0
  00dfd	75 07		 jne	 SHORT $LN8@SetItemEff

; 402  : 	{
; 403  : 		return false;

  00dff	32 c0		 xor	 al, al
  00e01	e9 b7 01 00 00	 jmp	 $LN11@SetItemEff
$LN8@SetItemEff:

; 404  : 	}
; 405  : 
; 406  : 	lpItemEffectBefore = this->GetCurrentEffectType(lpObj);

  00e06	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00e09	50		 push	 eax
  00e0a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e0d	e8 00 00 00 00	 call	 ?GetCurrentEffectType@CItemAddOption@@QAEPAUITEMEFFECT@@PAUOBJECTSTRUCT@@@Z ; CItemAddOption::GetCurrentEffectType
  00e12	89 45 f8	 mov	 DWORD PTR _lpItemEffectBefore$[ebp], eax

; 407  : 
; 408  : 	if ( lpItemEffectBefore != NULL )

  00e15	83 7d f8 00	 cmp	 DWORD PTR _lpItemEffectBefore$[ebp], 0
  00e19	74 1e		 je	 SHORT $LN7@SetItemEff

; 409  : 	{
; 410  : 		if ( lpItemEffectBefore->wOptionType == lpItemEffect->wOptionType )

  00e1b	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffectBefore$[ebp]
  00e1e	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00e21	8b 55 f4	 mov	 edx, DWORD PTR _lpItemEffect$[ebp]
  00e24	0f b7 02	 movzx	 eax, WORD PTR [edx]
  00e27	3b c8		 cmp	 ecx, eax
  00e29	75 0e		 jne	 SHORT $LN7@SetItemEff

; 411  : 		{
; 412  : 			this->ClearItemEffect(lpObj, 2);

  00e2b	6a 02		 push	 2
  00e2d	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00e30	50		 push	 eax
  00e31	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e34	e8 00 00 00 00	 call	 ?ClearItemEffect@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@H@Z ; CItemAddOption::ClearItemEffect
$LN7@SetItemEff:

; 413  : 		}
; 414  : 	}
; 415  : 
; 416  : 	if ( iItemUseTime > 0 )

  00e39	83 7d 10 00	 cmp	 DWORD PTR _iItemUseTime$[ebp], 0
  00e3d	0f 8e 95 00 00
	00		 jle	 $LN5@SetItemEff

; 417  : 	{
; 418  : 		this->_SetItemEffect(lpObj, lpItemEffect->wEffectType1, lpItemEffect->iEffectValue1);

  00e43	8b 45 f4	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00e46	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00e49	51		 push	 ecx
  00e4a	8b 55 f4	 mov	 edx, DWORD PTR _lpItemEffect$[ebp]
  00e4d	0f b7 42 02	 movzx	 eax, WORD PTR [edx+2]
  00e51	50		 push	 eax
  00e52	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00e55	51		 push	 ecx
  00e56	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e59	e8 00 00 00 00	 call	 ?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::_SetItemEffect

; 419  : 		this->SendItemUse(lpObj, iItemNumber, lpItemEffect->wOptionType, lpItemEffect->wEffectType1, lpItemEffect->iEffectValue1, iItemUseTime * 60);

  00e5e	8b 45 10	 mov	 eax, DWORD PTR _iItemUseTime$[ebp]
  00e61	6b c0 3c	 imul	 eax, 60			; 0000003cH
  00e64	50		 push	 eax
  00e65	8b 4d f4	 mov	 ecx, DWORD PTR _lpItemEffect$[ebp]
  00e68	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00e6b	52		 push	 edx
  00e6c	8b 45 f4	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00e6f	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00e73	51		 push	 ecx
  00e74	8b 55 f4	 mov	 edx, DWORD PTR _lpItemEffect$[ebp]
  00e77	0f b7 02	 movzx	 eax, WORD PTR [edx]
  00e7a	50		 push	 eax
  00e7b	8b 4d 0c	 mov	 ecx, DWORD PTR _iItemNumber$[ebp]
  00e7e	51		 push	 ecx
  00e7f	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00e82	52		 push	 edx
  00e83	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e86	e8 00 00 00 00	 call	 ?SendItemUse@CItemAddOption@@QAEXPAUOBJECTSTRUCT@@HHHHH@Z ; CItemAddOption::SendItemUse

; 420  : 
; 421  : 		this->_SetItemEffect(lpObj, lpItemEffect->wEffectType2, lpItemEffect->iEffectValue2);

  00e8b	8b 45 f4	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00e8e	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00e91	51		 push	 ecx
  00e92	8b 55 f4	 mov	 edx, DWORD PTR _lpItemEffect$[ebp]
  00e95	0f b7 42 04	 movzx	 eax, WORD PTR [edx+4]
  00e99	50		 push	 eax
  00e9a	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00e9d	51		 push	 ecx
  00e9e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00ea1	e8 00 00 00 00	 call	 ?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::_SetItemEffect

; 422  : 		this->SendItemUse(lpObj, iItemNumber, lpItemEffect->wOptionType, lpItemEffect->wEffectType2, lpItemEffect->iEffectValue2, iItemUseTime * 60);

  00ea6	8b 45 10	 mov	 eax, DWORD PTR _iItemUseTime$[ebp]
  00ea9	6b c0 3c	 imul	 eax, 60			; 0000003cH
  00eac	50		 push	 eax
  00ead	8b 4d f4	 mov	 ecx, DWORD PTR _lpItemEffect$[ebp]
  00eb0	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00eb3	52		 push	 edx
  00eb4	8b 45 f4	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00eb7	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  00ebb	51		 push	 ecx
  00ebc	8b 55 f4	 mov	 edx, DWORD PTR _lpItemEffect$[ebp]
  00ebf	0f b7 02	 movzx	 eax, WORD PTR [edx]
  00ec2	50		 push	 eax
  00ec3	8b 4d 0c	 mov	 ecx, DWORD PTR _iItemNumber$[ebp]
  00ec6	51		 push	 ecx
  00ec7	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00eca	52		 push	 edx
  00ecb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00ece	e8 00 00 00 00	 call	 ?SendItemUse@CItemAddOption@@QAEXPAUOBJECTSTRUCT@@HHHHH@Z ; CItemAddOption::SendItemUse

; 423  : 	}
; 424  : 	else

  00ed3	e9 90 00 00 00	 jmp	 $LN4@SetItemEff
$LN5@SetItemEff:

; 425  : 	{
; 426  : 		this->_SetItemEffect(lpObj, lpItemEffect->wEffectType1, lpItemEffect->iEffectValue1);

  00ed8	8b 45 f4	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00edb	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00ede	51		 push	 ecx
  00edf	8b 55 f4	 mov	 edx, DWORD PTR _lpItemEffect$[ebp]
  00ee2	0f b7 42 02	 movzx	 eax, WORD PTR [edx+2]
  00ee6	50		 push	 eax
  00ee7	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00eea	51		 push	 ecx
  00eeb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00eee	e8 00 00 00 00	 call	 ?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::_SetItemEffect

; 427  : 		this->SendItemUse(lpObj, iItemNumber, lpItemEffect->wOptionType, lpItemEffect->wEffectType1, lpItemEffect->iEffectValue1, lpItemEffect->iEffectValidTime);

  00ef3	8b 45 f4	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00ef6	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00ef9	51		 push	 ecx
  00efa	8b 55 f4	 mov	 edx, DWORD PTR _lpItemEffect$[ebp]
  00efd	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00f00	50		 push	 eax
  00f01	8b 4d f4	 mov	 ecx, DWORD PTR _lpItemEffect$[ebp]
  00f04	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00f08	52		 push	 edx
  00f09	8b 45 f4	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00f0c	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00f0f	51		 push	 ecx
  00f10	8b 55 0c	 mov	 edx, DWORD PTR _iItemNumber$[ebp]
  00f13	52		 push	 edx
  00f14	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00f17	50		 push	 eax
  00f18	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f1b	e8 00 00 00 00	 call	 ?SendItemUse@CItemAddOption@@QAEXPAUOBJECTSTRUCT@@HHHHH@Z ; CItemAddOption::SendItemUse

; 428  : 
; 429  : 		this->_SetItemEffect(lpObj, lpItemEffect->wEffectType2, lpItemEffect->iEffectValue2);

  00f20	8b 45 f4	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00f23	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00f26	51		 push	 ecx
  00f27	8b 55 f4	 mov	 edx, DWORD PTR _lpItemEffect$[ebp]
  00f2a	0f b7 42 04	 movzx	 eax, WORD PTR [edx+4]
  00f2e	50		 push	 eax
  00f2f	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00f32	51		 push	 ecx
  00f33	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f36	e8 00 00 00 00	 call	 ?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::_SetItemEffect

; 430  : 		this->SendItemUse(lpObj, iItemNumber, lpItemEffect->wOptionType, lpItemEffect->wEffectType2, lpItemEffect->iEffectValue2, lpItemEffect->iEffectValidTime);

  00f3b	8b 45 f4	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00f3e	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00f41	51		 push	 ecx
  00f42	8b 55 f4	 mov	 edx, DWORD PTR _lpItemEffect$[ebp]
  00f45	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00f48	50		 push	 eax
  00f49	8b 4d f4	 mov	 ecx, DWORD PTR _lpItemEffect$[ebp]
  00f4c	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  00f50	52		 push	 edx
  00f51	8b 45 f4	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00f54	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00f57	51		 push	 ecx
  00f58	8b 55 0c	 mov	 edx, DWORD PTR _iItemNumber$[ebp]
  00f5b	52		 push	 edx
  00f5c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00f5f	50		 push	 eax
  00f60	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f63	e8 00 00 00 00	 call	 ?SendItemUse@CItemAddOption@@QAEXPAUOBJECTSTRUCT@@HHHHH@Z ; CItemAddOption::SendItemUse
$LN4@SetItemEff:

; 431  : 	}
; 432  : 	
; 433  : 	if( lpItemEffect->wOptionType == 1 )

  00f68	8b 45 f4	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  00f6b	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00f6e	83 f9 01	 cmp	 ecx, 1
  00f71	75 48		 jne	 SHORT $LN3@SetItemEff

; 434  : 	{
; 435  : 		if ( iItemUseTime > 0 )

  00f73	83 7d 10 00	 cmp	 DWORD PTR _iItemUseTime$[ebp], 0
  00f77	7e 22		 jle	 SHORT $LN2@SetItemEff

; 436  : 		{
; 437  : 			lpObj->m_wItemEffectType = lpItemEffect->iItemNumber;

  00f79	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00f7c	8b 4d f4	 mov	 ecx, DWORD PTR _lpItemEffect$[ebp]
  00f7f	66 8b 51 08	 mov	 dx, WORD PTR [ecx+8]
  00f83	66 89 90 14 20
	00 00		 mov	 WORD PTR [eax+8212], dx

; 438  : 			lpObj->m_iItemEffectValidTime = iItemUseTime * 60;

  00f8a	8b 45 10	 mov	 eax, DWORD PTR _iItemUseTime$[ebp]
  00f8d	6b c0 3c	 imul	 eax, 60			; 0000003cH
  00f90	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00f93	89 81 18 20 00
	00		 mov	 DWORD PTR [ecx+8216], eax

; 439  : 		}
; 440  : 		else

  00f99	eb 20		 jmp	 SHORT $LN3@SetItemEff
$LN2@SetItemEff:

; 441  : 		{
; 442  : 			lpObj->m_wItemEffectType = lpItemEffect->iItemNumber;

  00f9b	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00f9e	8b 4d f4	 mov	 ecx, DWORD PTR _lpItemEffect$[ebp]
  00fa1	66 8b 51 08	 mov	 dx, WORD PTR [ecx+8]
  00fa5	66 89 90 14 20
	00 00		 mov	 WORD PTR [eax+8212], dx

; 443  : 			lpObj->m_iItemEffectValidTime = lpItemEffect->iEffectValidTime;

  00fac	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00faf	8b 4d f4	 mov	 ecx, DWORD PTR _lpItemEffect$[ebp]
  00fb2	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00fb5	89 90 18 20 00
	00		 mov	 DWORD PTR [eax+8216], edx
$LN3@SetItemEff:

; 444  : 		}
; 445  : 	}
; 446  : 
; 447  : 	return true;

  00fbb	b0 01		 mov	 al, 1
$LN11@SetItemEff:

; 448  : }

  00fbd	5f		 pop	 edi
  00fbe	5e		 pop	 esi
  00fbf	5b		 pop	 ebx
  00fc0	8b e5		 mov	 esp, ebp
  00fc2	5d		 pop	 ebp
  00fc3	c2 0c 00	 ret	 12			; 0000000cH
?SetItemEffect@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@HH@Z ENDP ; CItemAddOption::SetItemEffect
_TEXT	ENDS
PUBLIC	?SetManualItemEffect@CItemAddOption@@QAEEPAUOBJECTSTRUCT@@HHH@Z ; CItemAddOption::SetManualItemEffect
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_iEffectType$ = 12					; size = 4
_iEffectValue$ = 16					; size = 4
_iLeftTime$ = 20					; size = 4
?SetManualItemEffect@CItemAddOption@@QAEEPAUOBJECTSTRUCT@@HHH@Z PROC ; CItemAddOption::SetManualItemEffect
; _this$ = ecx

; 452  : {

  00fd0	55		 push	 ebp
  00fd1	8b ec		 mov	 ebp, esp
  00fd3	83 ec 44	 sub	 esp, 68			; 00000044H
  00fd6	53		 push	 ebx
  00fd7	56		 push	 esi
  00fd8	57		 push	 edi
  00fd9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 453  : 	if(iEffectType <= 0)

  00fdc	83 7d 0c 00	 cmp	 DWORD PTR _iEffectType$[ebp], 0
  00fe0	7f 04		 jg	 SHORT $LN2@SetManualI

; 454  : 	{
; 455  : 		return FALSE;

  00fe2	32 c0		 xor	 al, al
  00fe4	eb 59		 jmp	 SHORT $LN3@SetManualI
$LN2@SetManualI:

; 456  : 	}
; 457  : 
; 458  : 	if(iLeftTime <= 0)

  00fe6	83 7d 14 00	 cmp	 DWORD PTR _iLeftTime$[ebp], 0
  00fea	7f 07		 jg	 SHORT $LN1@SetManualI

; 459  : 	{
; 460  : 		iLeftTime = 60;

  00fec	c7 45 14 3c 00
	00 00		 mov	 DWORD PTR _iLeftTime$[ebp], 60 ; 0000003cH
$LN1@SetManualI:

; 461  : 	}
; 462  : 
; 463  : 	this->_SetItemEffect(lpObj,iEffectType,iEffectValue);

  00ff3	8b 45 10	 mov	 eax, DWORD PTR _iEffectValue$[ebp]
  00ff6	50		 push	 eax
  00ff7	8b 4d 0c	 mov	 ecx, DWORD PTR _iEffectType$[ebp]
  00ffa	51		 push	 ecx
  00ffb	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  00ffe	52		 push	 edx
  00fff	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01002	e8 00 00 00 00	 call	 ?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::_SetItemEffect

; 464  : 
; 465  : 	GCUseEffectItem(lpObj,0,1,iEffectType,iLeftTime);

  01007	8b 45 14	 mov	 eax, DWORD PTR _iLeftTime$[ebp]
  0100a	50		 push	 eax
  0100b	8b 4d 0c	 mov	 ecx, DWORD PTR _iEffectType$[ebp]
  0100e	51		 push	 ecx
  0100f	6a 01		 push	 1
  01011	6a 00		 push	 0
  01013	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01016	52		 push	 edx
  01017	e8 00 00 00 00	 call	 ?GCUseEffectItem@@YAXPAUOBJECTSTRUCT@@HHHH@Z ; GCUseEffectItem
  0101c	83 c4 14	 add	 esp, 20			; 00000014H

; 466  :     this->SendItemUse(lpObj,iEffectType,1,iEffectType,iEffectValue,iLeftTime);

  0101f	8b 45 14	 mov	 eax, DWORD PTR _iLeftTime$[ebp]
  01022	50		 push	 eax
  01023	8b 4d 10	 mov	 ecx, DWORD PTR _iEffectValue$[ebp]
  01026	51		 push	 ecx
  01027	8b 55 0c	 mov	 edx, DWORD PTR _iEffectType$[ebp]
  0102a	52		 push	 edx
  0102b	6a 01		 push	 1
  0102d	8b 45 0c	 mov	 eax, DWORD PTR _iEffectType$[ebp]
  01030	50		 push	 eax
  01031	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01034	51		 push	 ecx
  01035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01038	e8 00 00 00 00	 call	 ?SendItemUse@CItemAddOption@@QAEXPAUOBJECTSTRUCT@@HHHHH@Z ; CItemAddOption::SendItemUse

; 467  : 
; 468  : 	return TRUE;

  0103d	b0 01		 mov	 al, 1
$LN3@SetManualI:

; 469  : 
; 470  : }

  0103f	5f		 pop	 edi
  01040	5e		 pop	 esi
  01041	5b		 pop	 ebx
  01042	8b e5		 mov	 esp, ebp
  01044	5d		 pop	 ebp
  01045	c2 10 00	 ret	 16			; 00000010H
?SetManualItemEffect@CItemAddOption@@QAEEPAUOBJECTSTRUCT@@HHH@Z ENDP ; CItemAddOption::SetManualItemEffect
_TEXT	ENDS
EXTRN	?GCManaSend@@YAXHHEEH@Z:PROC			; GCManaSend
EXTRN	?GCReFillSend@@YAXHHEEH@Z:PROC			; GCReFillSend
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
tv65 = -72						; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_iEffectType$ = 12					; size = 4
_iEffectValue$ = 16					; size = 4
?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z PROC ; CItemAddOption::_SetItemEffect
; _this$ = ecx

; 474  : {

  01050	55		 push	 ebp
  01051	8b ec		 mov	 ebp, esp
  01053	83 ec 48	 sub	 esp, 72			; 00000048H
  01056	53		 push	 ebx
  01057	56		 push	 esi
  01058	57		 push	 edi
  01059	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 475  : 	if ( iEffectType <= 0 )

  0105c	83 7d 0c 00	 cmp	 DWORD PTR _iEffectType$[ebp], 0
  01060	7f 07		 jg	 SHORT $LN16@SetItemEff@2

; 476  : 		return false;

  01062	32 c0		 xor	 al, al
  01064	e9 f1 02 00 00	 jmp	 $LN17@SetItemEff@2
$LN16@SetItemEff@2:

; 477  : 
; 478  : 	switch ( iEffectType )

  01069	8b 45 0c	 mov	 eax, DWORD PTR _iEffectType$[ebp]
  0106c	89 45 b8	 mov	 DWORD PTR tv65[ebp], eax
  0106f	8b 4d b8	 mov	 ecx, DWORD PTR tv65[ebp]
  01072	83 e9 02	 sub	 ecx, 2
  01075	89 4d b8	 mov	 DWORD PTR tv65[ebp], ecx
  01078	83 7d b8 0e	 cmp	 DWORD PTR tv65[ebp], 14	; 0000000eH
  0107c	0f 87 d2 02 00
	00		 ja	 $LN1@SetItemEff@2
  01082	8b 55 b8	 mov	 edx, DWORD PTR tv65[ebp]
  01085	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN19@SetItemEff@2[edx*4]
$LN13@SetItemEff@2:

; 479  : 	{
; 480  : 		case ADD_OPTION_LIFE:
; 481  : 			lpObj->AddLife += iEffectValue;

  0108c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0108f	8b 88 4c 01 00
	00		 mov	 ecx, DWORD PTR [eax+332]
  01095	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01098	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0109b	89 8a 4c 01 00
	00		 mov	 DWORD PTR [edx+332], ecx

; 482  : 			GCReFillSend(lpObj->m_Index, (lpObj->MaxLife + lpObj->AddLife), -2, 0, (lpObj->iMaxShield + lpObj->iAddShield));

  010a1	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  010a4	8b 88 58 01 00
	00		 mov	 ecx, DWORD PTR [eax+344]
  010aa	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  010ad	03 8a 5c 01 00
	00		 add	 ecx, DWORD PTR [edx+348]
  010b3	51		 push	 ecx
  010b4	6a 00		 push	 0
  010b6	68 fe 00 00 00	 push	 254			; 000000feH
  010bb	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  010be	db 80 4c 01 00
	00		 fild	 DWORD PTR [eax+332]
  010c4	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  010c7	d8 81 00 01 00
	00		 fadd	 DWORD PTR [ecx+256]
  010cd	e8 00 00 00 00	 call	 __ftol2_sse
  010d2	50		 push	 eax
  010d3	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  010d6	8b 02		 mov	 eax, DWORD PTR [edx]
  010d8	50		 push	 eax
  010d9	e8 00 00 00 00	 call	 ?GCReFillSend@@YAXHHEEH@Z ; GCReFillSend
  010de	83 c4 14	 add	 esp, 20			; 00000014H

; 483  : 			GCReFillSend(lpObj->m_Index, (lpObj->Life), -1, 0, (lpObj->iShield));

  010e1	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  010e4	8b 88 54 01 00
	00		 mov	 ecx, DWORD PTR [eax+340]
  010ea	51		 push	 ecx
  010eb	6a 00		 push	 0
  010ed	68 ff 00 00 00	 push	 255			; 000000ffH
  010f2	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  010f5	d9 82 fc 00 00
	00		 fld	 DWORD PTR [edx+252]
  010fb	e8 00 00 00 00	 call	 __ftol2_sse
  01100	50		 push	 eax
  01101	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01104	8b 08		 mov	 ecx, DWORD PTR [eax]
  01106	51		 push	 ecx
  01107	e8 00 00 00 00	 call	 ?GCReFillSend@@YAXHHEEH@Z ; GCReFillSend
  0110c	83 c4 14	 add	 esp, 20			; 00000014H

; 484  : 			break;

  0110f	e9 44 02 00 00	 jmp	 $LN14@SetItemEff@2
$LN12@SetItemEff@2:

; 485  : 
; 486  : 		case ADD_OPTION_MANA:
; 487  : 			lpObj->AddMana += iEffectValue;

  01114	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01117	8b 88 50 01 00
	00		 mov	 ecx, DWORD PTR [eax+336]
  0111d	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01120	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01123	89 8a 50 01 00
	00		 mov	 DWORD PTR [edx+336], ecx

; 488  : 			GCManaSend(lpObj->m_Index, (lpObj->AddMana + lpObj->MaxMana), -2, 0, (lpObj->MaxBP + lpObj->AddBP));

  01129	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0112c	8b 88 2c 01 00
	00		 mov	 ecx, DWORD PTR [eax+300]
  01132	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01135	03 8a 30 01 00
	00		 add	 ecx, DWORD PTR [edx+304]
  0113b	51		 push	 ecx
  0113c	6a 00		 push	 0
  0113e	68 fe 00 00 00	 push	 254			; 000000feH
  01143	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01146	db 80 50 01 00
	00		 fild	 DWORD PTR [eax+336]
  0114c	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0114f	d8 81 14 01 00
	00		 fadd	 DWORD PTR [ecx+276]
  01155	e8 00 00 00 00	 call	 __ftol2_sse
  0115a	50		 push	 eax
  0115b	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0115e	8b 02		 mov	 eax, DWORD PTR [edx]
  01160	50		 push	 eax
  01161	e8 00 00 00 00	 call	 ?GCManaSend@@YAXHHEEH@Z	; GCManaSend
  01166	83 c4 14	 add	 esp, 20			; 00000014H

; 489  : 			GCManaSend(lpObj->m_Index, lpObj->Mana, -1, 0, lpObj->BP);

  01169	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0116c	8b 88 28 01 00
	00		 mov	 ecx, DWORD PTR [eax+296]
  01172	51		 push	 ecx
  01173	6a 00		 push	 0
  01175	68 ff 00 00 00	 push	 255			; 000000ffH
  0117a	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0117d	d9 82 10 01 00
	00		 fld	 DWORD PTR [edx+272]
  01183	e8 00 00 00 00	 call	 __ftol2_sse
  01188	50		 push	 eax
  01189	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0118c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0118e	51		 push	 ecx
  0118f	e8 00 00 00 00	 call	 ?GCManaSend@@YAXHHEEH@Z	; GCManaSend
  01194	83 c4 14	 add	 esp, 20			; 00000014H

; 490  : 			break;

  01197	e9 bc 01 00 00	 jmp	 $LN14@SetItemEff@2
$LN11@SetItemEff@2:

; 491  : 
; 492  : 		case ADD_OPTION_ATTACK_DAMAGE:
; 493  : 			lpObj->m_AttackDamageMaxLeft += iEffectValue;

  0119c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0119f	8b 88 78 04 00
	00		 mov	 ecx, DWORD PTR [eax+1144]
  011a5	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  011a8	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  011ab	89 8a 78 04 00
	00		 mov	 DWORD PTR [edx+1144], ecx

; 494  : 			lpObj->m_AttackDamageMinLeft += iEffectValue;

  011b1	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  011b4	8b 88 7c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1148]
  011ba	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  011bd	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  011c0	89 8a 7c 04 00
	00		 mov	 DWORD PTR [edx+1148], ecx

; 495  : 			lpObj->m_AttackDamageMaxRight += iEffectValue;

  011c6	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  011c9	8b 88 80 04 00
	00		 mov	 ecx, DWORD PTR [eax+1152]
  011cf	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  011d2	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  011d5	89 8a 80 04 00
	00		 mov	 DWORD PTR [edx+1152], ecx

; 496  : 			lpObj->m_AttackDamageMinRight += iEffectValue;

  011db	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  011de	8b 88 84 04 00
	00		 mov	 ecx, DWORD PTR [eax+1156]
  011e4	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  011e7	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  011ea	89 8a 84 04 00
	00		 mov	 DWORD PTR [edx+1156], ecx

; 497  : 			lpObj->m_MagicDamageMin += iEffectValue;

  011f0	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  011f3	8b 88 68 04 00
	00		 mov	 ecx, DWORD PTR [eax+1128]
  011f9	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  011fc	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  011ff	89 8a 68 04 00
	00		 mov	 DWORD PTR [edx+1128], ecx

; 498  : 			lpObj->m_MagicDamageMax += iEffectValue;

  01205	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01208	8b 88 6c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1132]
  0120e	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01211	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01214	89 8a 6c 04 00
	00		 mov	 DWORD PTR [edx+1132], ecx

; 499  : 			break;

  0121a	e9 39 01 00 00	 jmp	 $LN14@SetItemEff@2
$LN10@SetItemEff@2:

; 500  : 
; 501  : 		/*case ADD_OPTION_SPEED:
; 502  : 			lpObj->m_AttackSpeed += iEffectValue;
; 503  : 			lpObj->m_MagicSpeed += iEffectValue;
; 504  : 			break;*/
; 505  : 
; 506  : 		case ADD_OPTION_DEFENSE:
; 507  : 			lpObj->m_Defense += iEffectValue * 10 / 20;

  0121f	8b 45 10	 mov	 eax, DWORD PTR _iEffectValue$[ebp]
  01222	6b c0 0a	 imul	 eax, 10			; 0000000aH
  01225	99		 cdq
  01226	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  0122b	f7 f9		 idiv	 ecx
  0122d	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01230	03 82 94 04 00
	00		 add	 eax, DWORD PTR [edx+1172]
  01236	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01239	89 81 94 04 00
	00		 mov	 DWORD PTR [ecx+1172], eax

; 508  : 			break;

  0123f	e9 14 01 00 00	 jmp	 $LN14@SetItemEff@2
$LN9@SetItemEff@2:

; 509  : 
; 510  : 		case ADD_OPTION_STRENGTH:
; 511  : 			lpObj->AddStrength += iEffectValue;

  01244	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01247	0f bf 88 20 01
	00 00		 movsx	 ecx, WORD PTR [eax+288]
  0124e	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01251	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01254	66 89 8a 20 01
	00 00		 mov	 WORD PTR [edx+288], cx

; 512  : 			break;

  0125b	e9 f8 00 00 00	 jmp	 $LN14@SetItemEff@2
$LN8@SetItemEff@2:

; 513  : 
; 514  : 		case ADD_OPTION_DEXTERITY:
; 515  : 			lpObj->AddDexterity += iEffectValue;

  01260	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01263	0f bf 88 22 01
	00 00		 movsx	 ecx, WORD PTR [eax+290]
  0126a	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  0126d	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01270	66 89 8a 22 01
	00 00		 mov	 WORD PTR [edx+290], cx

; 516  : 			break;

  01277	e9 dc 00 00 00	 jmp	 $LN14@SetItemEff@2
$LN7@SetItemEff@2:

; 517  : 
; 518  : 		case ADD_OPTION_VITALITY:
; 519  : 			lpObj->AddVitality += iEffectValue;

  0127c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0127f	0f bf 88 24 01
	00 00		 movsx	 ecx, WORD PTR [eax+292]
  01286	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01289	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0128c	66 89 8a 24 01
	00 00		 mov	 WORD PTR [edx+292], cx

; 520  : 			break;

  01293	e9 c0 00 00 00	 jmp	 $LN14@SetItemEff@2
$LN6@SetItemEff@2:

; 521  : 
; 522  : 		case ADD_OPTION_ENERGY:
; 523  : 			lpObj->AddEnergy += iEffectValue;

  01298	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0129b	0f bf 88 26 01
	00 00		 movsx	 ecx, WORD PTR [eax+294]
  012a2	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  012a5	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  012a8	66 89 8a 26 01
	00 00		 mov	 WORD PTR [edx+294], cx

; 524  : 			break;

  012af	e9 a4 00 00 00	 jmp	 $LN14@SetItemEff@2
$LN5@SetItemEff@2:

; 525  : 
; 526  : 		case ADD_OPTION_LEADERSHIP:
; 527  : 			lpObj->AddLeadership += iEffectValue;

  012b4	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  012b7	0f b7 88 1a 01
	00 00		 movzx	 ecx, WORD PTR [eax+282]
  012be	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  012c1	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  012c4	66 89 8a 1a 01
	00 00		 mov	 WORD PTR [edx+282], cx

; 528  : 			break;

  012cb	e9 88 00 00 00	 jmp	 $LN14@SetItemEff@2
$LN4@SetItemEff@2:

; 529  : 
; 530  : 		case ADD_OPTION_WRATH:
; 531  : 			lpObj->m_AttackDamageMaxLeft += iEffectValue;

  012d0	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  012d3	8b 88 78 04 00
	00		 mov	 ecx, DWORD PTR [eax+1144]
  012d9	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  012dc	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  012df	89 8a 78 04 00
	00		 mov	 DWORD PTR [edx+1144], ecx

; 532  : 			lpObj->m_AttackDamageMinLeft += iEffectValue;

  012e5	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  012e8	8b 88 7c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1148]
  012ee	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  012f1	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  012f4	89 8a 7c 04 00
	00		 mov	 DWORD PTR [edx+1148], ecx

; 533  : 			lpObj->m_AttackDamageMaxRight += iEffectValue;

  012fa	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  012fd	8b 88 80 04 00
	00		 mov	 ecx, DWORD PTR [eax+1152]
  01303	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01306	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01309	89 8a 80 04 00
	00		 mov	 DWORD PTR [edx+1152], ecx

; 534  : 			lpObj->m_AttackDamageMinRight += iEffectValue;

  0130f	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01312	8b 88 84 04 00
	00		 mov	 ecx, DWORD PTR [eax+1156]
  01318	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  0131b	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0131e	89 8a 84 04 00
	00		 mov	 DWORD PTR [edx+1156], ecx

; 535  : 			break;

  01324	eb 32		 jmp	 SHORT $LN14@SetItemEff@2
$LN3@SetItemEff@2:

; 536  : 
; 537  : 		case ADD_OPTION_WIZARDRY:
; 538  : 			lpObj->m_MagicDamageMin += iEffectValue;

  01326	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01329	8b 88 68 04 00
	00		 mov	 ecx, DWORD PTR [eax+1128]
  0132f	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01332	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01335	89 8a 68 04 00
	00		 mov	 DWORD PTR [edx+1128], ecx

; 539  : 			lpObj->m_MagicDamageMax += iEffectValue;

  0133b	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0133e	8b 88 6c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1132]
  01344	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01347	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0134a	89 8a 6c 04 00
	00		 mov	 DWORD PTR [edx+1132], ecx

; 540  : 			break;

  01350	eb 06		 jmp	 SHORT $LN14@SetItemEff@2
$LN2@SetItemEff@2:

; 541  : 
; 542  : 		case ADD_OPTION_MOBILITY:
; 543  : 			break;

  01352	eb 04		 jmp	 SHORT $LN14@SetItemEff@2
$LN1@SetItemEff@2:

; 544  : 
; 545  : 		default:
; 546  : 			return false;

  01354	32 c0		 xor	 al, al
  01356	eb 02		 jmp	 SHORT $LN17@SetItemEff@2
$LN14@SetItemEff@2:

; 547  : 	}
; 548  : 
; 549  : 	return true;

  01358	b0 01		 mov	 al, 1
$LN17@SetItemEff@2:

; 550  : }

  0135a	5f		 pop	 edi
  0135b	5e		 pop	 esi
  0135c	5b		 pop	 ebx
  0135d	8b e5		 mov	 esp, ebp
  0135f	5d		 pop	 ebp
  01360	c2 0c 00	 ret	 12			; 0000000cH
  01363	90		 npad	 1
$LN19@SetItemEff@2:
  01364	00 00 00 00	 DD	 $LN11@SetItemEff@2
  01368	00 00 00 00	 DD	 $LN10@SetItemEff@2
  0136c	00 00 00 00	 DD	 $LN13@SetItemEff@2
  01370	00 00 00 00	 DD	 $LN12@SetItemEff@2
  01374	00 00 00 00	 DD	 $LN1@SetItemEff@2
  01378	00 00 00 00	 DD	 $LN1@SetItemEff@2
  0137c	00 00 00 00	 DD	 $LN1@SetItemEff@2
  01380	00 00 00 00	 DD	 $LN9@SetItemEff@2
  01384	00 00 00 00	 DD	 $LN8@SetItemEff@2
  01388	00 00 00 00	 DD	 $LN7@SetItemEff@2
  0138c	00 00 00 00	 DD	 $LN6@SetItemEff@2
  01390	00 00 00 00	 DD	 $LN5@SetItemEff@2
  01394	00 00 00 00	 DD	 $LN4@SetItemEff@2
  01398	00 00 00 00	 DD	 $LN3@SetItemEff@2
  0139c	00 00 00 00	 DD	 $LN2@SetItemEff@2
?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ENDP ; CItemAddOption::_SetItemEffect
; Function compile flags: /Odtp /ZI
tv65 = -72						; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_iEffectOption$ = 12					; size = 4
_iOptionType$ = 16					; size = 4
_iEffectType$ = 20					; size = 4
_iEffectValue$ = 24					; size = 4
?_ClearItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HHHH@Z PROC ; CItemAddOption::_ClearItemEffect
; _this$ = ecx

; 553  : {

  013a0	55		 push	 ebp
  013a1	8b ec		 mov	 ebp, esp
  013a3	83 ec 48	 sub	 esp, 72			; 00000048H
  013a6	53		 push	 ebx
  013a7	56		 push	 esi
  013a8	57		 push	 edi
  013a9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 554  : 	if ( iEffectType <= 0 )

  013ac	83 7d 14 00	 cmp	 DWORD PTR _iEffectType$[ebp], 0
  013b0	7f 07		 jg	 SHORT $LN18@ClearItemE@2

; 555  : 		return false;

  013b2	32 c0		 xor	 al, al
  013b4	e9 8b 03 00 00	 jmp	 $LN19@ClearItemE@2
$LN18@ClearItemE@2:

; 556  : 
; 557  : 	switch ( iEffectType )

  013b9	8b 45 14	 mov	 eax, DWORD PTR _iEffectType$[ebp]
  013bc	89 45 b8	 mov	 DWORD PTR tv65[ebp], eax
  013bf	8b 4d b8	 mov	 ecx, DWORD PTR tv65[ebp]
  013c2	83 e9 02	 sub	 ecx, 2
  013c5	89 4d b8	 mov	 DWORD PTR tv65[ebp], ecx
  013c8	83 7d b8 0e	 cmp	 DWORD PTR tv65[ebp], 14	; 0000000eH
  013cc	0f 87 52 03 00
	00		 ja	 $LN1@ClearItemE@2
  013d2	8b 55 b8	 mov	 edx, DWORD PTR tv65[ebp]
  013d5	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN21@ClearItemE@2[edx*4]
$LN15@ClearItemE@2:

; 558  : 	{
; 559  : 		case ADD_OPTION_LIFE:
; 560  : 			lpObj->AddLife -= iEffectValue;

  013dc	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  013df	8b 88 4c 01 00
	00		 mov	 ecx, DWORD PTR [eax+332]
  013e5	2b 4d 18	 sub	 ecx, DWORD PTR _iEffectValue$[ebp]
  013e8	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  013eb	89 8a 4c 01 00
	00		 mov	 DWORD PTR [edx+332], ecx

; 561  : 
; 562  : 			if ( (lpObj->AddLife + lpObj->MaxLife ) < lpObj->Life )

  013f1	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  013f4	db 80 4c 01 00
	00		 fild	 DWORD PTR [eax+332]
  013fa	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  013fd	d8 81 00 01 00
	00		 fadd	 DWORD PTR [ecx+256]
  01403	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01406	d9 82 fc 00 00
	00		 fld	 DWORD PTR [edx+252]
  0140c	de d9		 fcompp
  0140e	df e0		 fnstsw	 ax
  01410	f6 c4 41	 test	 ah, 65			; 00000041H
  01413	75 1b		 jne	 SHORT $LN14@ClearItemE@2

; 563  : 			{
; 564  : 				lpObj->Life = lpObj->AddLife + lpObj->MaxLife;

  01415	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01418	db 80 4c 01 00
	00		 fild	 DWORD PTR [eax+332]
  0141e	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01421	d8 81 00 01 00
	00		 fadd	 DWORD PTR [ecx+256]
  01427	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0142a	d9 9a fc 00 00
	00		 fstp	 DWORD PTR [edx+252]
$LN14@ClearItemE@2:

; 565  : 			}
; 566  : 
; 567  : 			GCReFillSend(lpObj->m_Index, (lpObj->Life), 0xFF, 0, (lpObj->iShield));

  01430	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01433	8b 88 54 01 00
	00		 mov	 ecx, DWORD PTR [eax+340]
  01439	51		 push	 ecx
  0143a	6a 00		 push	 0
  0143c	68 ff 00 00 00	 push	 255			; 000000ffH
  01441	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01444	d9 82 fc 00 00
	00		 fld	 DWORD PTR [edx+252]
  0144a	e8 00 00 00 00	 call	 __ftol2_sse
  0144f	50		 push	 eax
  01450	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01453	8b 08		 mov	 ecx, DWORD PTR [eax]
  01455	51		 push	 ecx
  01456	e8 00 00 00 00	 call	 ?GCReFillSend@@YAXHHEEH@Z ; GCReFillSend
  0145b	83 c4 14	 add	 esp, 20			; 00000014H

; 568  : 			GCReFillSend(lpObj->m_Index, (lpObj->MaxLife + lpObj->AddLife), 0xFE, 0, (lpObj->iMaxShield + lpObj->iAddShield));

  0145e	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01461	8b 88 58 01 00
	00		 mov	 ecx, DWORD PTR [eax+344]
  01467	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0146a	03 8a 5c 01 00
	00		 add	 ecx, DWORD PTR [edx+348]
  01470	51		 push	 ecx
  01471	6a 00		 push	 0
  01473	68 fe 00 00 00	 push	 254			; 000000feH
  01478	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0147b	db 80 4c 01 00
	00		 fild	 DWORD PTR [eax+332]
  01481	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01484	d8 81 00 01 00
	00		 fadd	 DWORD PTR [ecx+256]
  0148a	e8 00 00 00 00	 call	 __ftol2_sse
  0148f	50		 push	 eax
  01490	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01493	8b 02		 mov	 eax, DWORD PTR [edx]
  01495	50		 push	 eax
  01496	e8 00 00 00 00	 call	 ?GCReFillSend@@YAXHHEEH@Z ; GCReFillSend
  0149b	83 c4 14	 add	 esp, 20			; 00000014H

; 569  : 			break;

  0149e	e9 85 02 00 00	 jmp	 $LN16@ClearItemE@2
$LN13@ClearItemE@2:

; 570  : 
; 571  : 		case ADD_OPTION_MANA:
; 572  : 			lpObj->AddMana -= iEffectValue;

  014a3	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  014a6	8b 88 50 01 00
	00		 mov	 ecx, DWORD PTR [eax+336]
  014ac	2b 4d 18	 sub	 ecx, DWORD PTR _iEffectValue$[ebp]
  014af	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  014b2	89 8a 50 01 00
	00		 mov	 DWORD PTR [edx+336], ecx

; 573  : 
; 574  : 			if ( (lpObj->AddMana + lpObj->MaxMana ) < lpObj->Mana )

  014b8	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  014bb	db 80 50 01 00
	00		 fild	 DWORD PTR [eax+336]
  014c1	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  014c4	d8 81 14 01 00
	00		 fadd	 DWORD PTR [ecx+276]
  014ca	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  014cd	d9 82 10 01 00
	00		 fld	 DWORD PTR [edx+272]
  014d3	de d9		 fcompp
  014d5	df e0		 fnstsw	 ax
  014d7	f6 c4 41	 test	 ah, 65			; 00000041H
  014da	75 1b		 jne	 SHORT $LN12@ClearItemE@2

; 575  : 			{
; 576  : 				lpObj->Mana = lpObj->AddMana + lpObj->MaxMana;

  014dc	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  014df	db 80 50 01 00
	00		 fild	 DWORD PTR [eax+336]
  014e5	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  014e8	d8 81 14 01 00
	00		 fadd	 DWORD PTR [ecx+276]
  014ee	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  014f1	d9 9a 10 01 00
	00		 fstp	 DWORD PTR [edx+272]
$LN12@ClearItemE@2:

; 577  : 			}
; 578  : 
; 579  : 			GCManaSend(lpObj->m_Index, lpObj->Mana, -1, 0, lpObj->BP);

  014f7	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  014fa	8b 88 28 01 00
	00		 mov	 ecx, DWORD PTR [eax+296]
  01500	51		 push	 ecx
  01501	6a 00		 push	 0
  01503	68 ff 00 00 00	 push	 255			; 000000ffH
  01508	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0150b	d9 82 10 01 00
	00		 fld	 DWORD PTR [edx+272]
  01511	e8 00 00 00 00	 call	 __ftol2_sse
  01516	50		 push	 eax
  01517	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0151a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0151c	51		 push	 ecx
  0151d	e8 00 00 00 00	 call	 ?GCManaSend@@YAXHHEEH@Z	; GCManaSend
  01522	83 c4 14	 add	 esp, 20			; 00000014H

; 580  : 			GCManaSend(lpObj->m_Index, (lpObj->AddMana + lpObj->MaxMana), 0xFE, 0, (lpObj->MaxBP + lpObj->AddBP));

  01525	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01528	8b 88 2c 01 00
	00		 mov	 ecx, DWORD PTR [eax+300]
  0152e	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01531	03 8a 30 01 00
	00		 add	 ecx, DWORD PTR [edx+304]
  01537	51		 push	 ecx
  01538	6a 00		 push	 0
  0153a	68 fe 00 00 00	 push	 254			; 000000feH
  0153f	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01542	db 80 50 01 00
	00		 fild	 DWORD PTR [eax+336]
  01548	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0154b	d8 81 14 01 00
	00		 fadd	 DWORD PTR [ecx+276]
  01551	e8 00 00 00 00	 call	 __ftol2_sse
  01556	50		 push	 eax
  01557	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0155a	8b 02		 mov	 eax, DWORD PTR [edx]
  0155c	50		 push	 eax
  0155d	e8 00 00 00 00	 call	 ?GCManaSend@@YAXHHEEH@Z	; GCManaSend
  01562	83 c4 14	 add	 esp, 20			; 00000014H

; 581  : 			break;

  01565	e9 be 01 00 00	 jmp	 $LN16@ClearItemE@2
$LN11@ClearItemE@2:

; 582  : 
; 583  : 		case ADD_OPTION_ATTACK_DAMAGE:
; 584  : 			lpObj->m_AttackDamageMaxLeft -= iEffectValue;

  0156a	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0156d	8b 88 78 04 00
	00		 mov	 ecx, DWORD PTR [eax+1144]
  01573	2b 4d 18	 sub	 ecx, DWORD PTR _iEffectValue$[ebp]
  01576	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01579	89 8a 78 04 00
	00		 mov	 DWORD PTR [edx+1144], ecx

; 585  : 			lpObj->m_AttackDamageMinLeft -= iEffectValue;

  0157f	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01582	8b 88 7c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1148]
  01588	2b 4d 18	 sub	 ecx, DWORD PTR _iEffectValue$[ebp]
  0158b	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0158e	89 8a 7c 04 00
	00		 mov	 DWORD PTR [edx+1148], ecx

; 586  : 			lpObj->m_AttackDamageMaxRight -= iEffectValue;

  01594	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01597	8b 88 80 04 00
	00		 mov	 ecx, DWORD PTR [eax+1152]
  0159d	2b 4d 18	 sub	 ecx, DWORD PTR _iEffectValue$[ebp]
  015a0	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  015a3	89 8a 80 04 00
	00		 mov	 DWORD PTR [edx+1152], ecx

; 587  : 			lpObj->m_AttackDamageMinRight -= iEffectValue;

  015a9	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  015ac	8b 88 84 04 00
	00		 mov	 ecx, DWORD PTR [eax+1156]
  015b2	2b 4d 18	 sub	 ecx, DWORD PTR _iEffectValue$[ebp]
  015b5	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  015b8	89 8a 84 04 00
	00		 mov	 DWORD PTR [edx+1156], ecx

; 588  : 			lpObj->m_MagicDamageMin -= iEffectValue;

  015be	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  015c1	8b 88 68 04 00
	00		 mov	 ecx, DWORD PTR [eax+1128]
  015c7	2b 4d 18	 sub	 ecx, DWORD PTR _iEffectValue$[ebp]
  015ca	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  015cd	89 8a 68 04 00
	00		 mov	 DWORD PTR [edx+1128], ecx

; 589  : 			lpObj->m_MagicDamageMax -= iEffectValue;

  015d3	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  015d6	8b 88 6c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1132]
  015dc	2b 4d 18	 sub	 ecx, DWORD PTR _iEffectValue$[ebp]
  015df	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  015e2	89 8a 6c 04 00
	00		 mov	 DWORD PTR [edx+1132], ecx

; 590  : 			break;

  015e8	e9 3b 01 00 00	 jmp	 $LN16@ClearItemE@2
$LN10@ClearItemE@2:

; 591  : 
; 592  : 		/*case ADD_OPTION_SPEED:
; 593  : 			lpObj->m_AttackSpeed -= iEffectValue;
; 594  : 			lpObj->m_MagicSpeed -= iEffectValue;
; 595  : 			break;*/
; 596  : 
; 597  : 		case ADD_OPTION_DEFENSE:
; 598  : 			lpObj->m_Defense -= iEffectValue * 10 / 20;

  015ed	8b 45 18	 mov	 eax, DWORD PTR _iEffectValue$[ebp]
  015f0	6b c0 0a	 imul	 eax, 10			; 0000000aH
  015f3	99		 cdq
  015f4	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  015f9	f7 f9		 idiv	 ecx
  015fb	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  015fe	8b 8a 94 04 00
	00		 mov	 ecx, DWORD PTR [edx+1172]
  01604	2b c8		 sub	 ecx, eax
  01606	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01609	89 8a 94 04 00
	00		 mov	 DWORD PTR [edx+1172], ecx

; 599  : 			break;

  0160f	e9 14 01 00 00	 jmp	 $LN16@ClearItemE@2
$LN9@ClearItemE@2:

; 600  : 
; 601  : 		case ADD_OPTION_STRENGTH:
; 602  : 			lpObj->AddStrength -= iEffectValue;

  01614	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01617	0f bf 88 20 01
	00 00		 movsx	 ecx, WORD PTR [eax+288]
  0161e	2b 4d 18	 sub	 ecx, DWORD PTR _iEffectValue$[ebp]
  01621	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01624	66 89 8a 20 01
	00 00		 mov	 WORD PTR [edx+288], cx

; 603  : 			break;

  0162b	e9 f8 00 00 00	 jmp	 $LN16@ClearItemE@2
$LN8@ClearItemE@2:

; 604  : 
; 605  : 		case ADD_OPTION_DEXTERITY:
; 606  : 			lpObj->AddDexterity -= iEffectValue;

  01630	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01633	0f bf 88 22 01
	00 00		 movsx	 ecx, WORD PTR [eax+290]
  0163a	2b 4d 18	 sub	 ecx, DWORD PTR _iEffectValue$[ebp]
  0163d	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01640	66 89 8a 22 01
	00 00		 mov	 WORD PTR [edx+290], cx

; 607  : 			break;

  01647	e9 dc 00 00 00	 jmp	 $LN16@ClearItemE@2
$LN7@ClearItemE@2:

; 608  : 
; 609  : 		case ADD_OPTION_VITALITY:
; 610  : 			lpObj->AddVitality -= iEffectValue;

  0164c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0164f	0f bf 88 24 01
	00 00		 movsx	 ecx, WORD PTR [eax+292]
  01656	2b 4d 18	 sub	 ecx, DWORD PTR _iEffectValue$[ebp]
  01659	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0165c	66 89 8a 24 01
	00 00		 mov	 WORD PTR [edx+292], cx

; 611  : 			break;

  01663	e9 c0 00 00 00	 jmp	 $LN16@ClearItemE@2
$LN6@ClearItemE@2:

; 612  : 
; 613  : 		case ADD_OPTION_ENERGY:
; 614  : 			lpObj->AddEnergy -= iEffectValue;

  01668	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0166b	0f bf 88 26 01
	00 00		 movsx	 ecx, WORD PTR [eax+294]
  01672	2b 4d 18	 sub	 ecx, DWORD PTR _iEffectValue$[ebp]
  01675	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01678	66 89 8a 26 01
	00 00		 mov	 WORD PTR [edx+294], cx

; 615  : 			break;

  0167f	e9 a4 00 00 00	 jmp	 $LN16@ClearItemE@2
$LN5@ClearItemE@2:

; 616  : 
; 617  : 		case ADD_OPTION_LEADERSHIP:
; 618  : 			lpObj->AddLeadership -= iEffectValue;

  01684	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01687	0f b7 88 1a 01
	00 00		 movzx	 ecx, WORD PTR [eax+282]
  0168e	2b 4d 18	 sub	 ecx, DWORD PTR _iEffectValue$[ebp]
  01691	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01694	66 89 8a 1a 01
	00 00		 mov	 WORD PTR [edx+282], cx

; 619  : 			break;

  0169b	e9 88 00 00 00	 jmp	 $LN16@ClearItemE@2
$LN4@ClearItemE@2:

; 620  : 
; 621  : 		case ADD_OPTION_WRATH:
; 622  : 
; 623  : 			lpObj->m_AttackDamageMaxLeft -= iEffectValue;

  016a0	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  016a3	8b 88 78 04 00
	00		 mov	 ecx, DWORD PTR [eax+1144]
  016a9	2b 4d 18	 sub	 ecx, DWORD PTR _iEffectValue$[ebp]
  016ac	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  016af	89 8a 78 04 00
	00		 mov	 DWORD PTR [edx+1144], ecx

; 624  : 			lpObj->m_AttackDamageMinLeft -= iEffectValue;

  016b5	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  016b8	8b 88 7c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1148]
  016be	2b 4d 18	 sub	 ecx, DWORD PTR _iEffectValue$[ebp]
  016c1	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  016c4	89 8a 7c 04 00
	00		 mov	 DWORD PTR [edx+1148], ecx

; 625  : 			lpObj->m_AttackDamageMaxRight -= iEffectValue;

  016ca	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  016cd	8b 88 80 04 00
	00		 mov	 ecx, DWORD PTR [eax+1152]
  016d3	2b 4d 18	 sub	 ecx, DWORD PTR _iEffectValue$[ebp]
  016d6	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  016d9	89 8a 80 04 00
	00		 mov	 DWORD PTR [edx+1152], ecx

; 626  : 			lpObj->m_AttackDamageMinRight -= iEffectValue;

  016df	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  016e2	8b 88 84 04 00
	00		 mov	 ecx, DWORD PTR [eax+1156]
  016e8	2b 4d 18	 sub	 ecx, DWORD PTR _iEffectValue$[ebp]
  016eb	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  016ee	89 8a 84 04 00
	00		 mov	 DWORD PTR [edx+1156], ecx

; 627  : 			break;

  016f4	eb 32		 jmp	 SHORT $LN16@ClearItemE@2
$LN3@ClearItemE@2:

; 628  : 
; 629  : 		case ADD_OPTION_WIZARDRY:
; 630  : 			lpObj->m_MagicDamageMin -= iEffectValue;

  016f6	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  016f9	8b 88 68 04 00
	00		 mov	 ecx, DWORD PTR [eax+1128]
  016ff	2b 4d 18	 sub	 ecx, DWORD PTR _iEffectValue$[ebp]
  01702	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01705	89 8a 68 04 00
	00		 mov	 DWORD PTR [edx+1128], ecx

; 631  : 			lpObj->m_MagicDamageMax -= iEffectValue;

  0170b	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0170e	8b 88 6c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1132]
  01714	2b 4d 18	 sub	 ecx, DWORD PTR _iEffectValue$[ebp]
  01717	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  0171a	89 8a 6c 04 00
	00		 mov	 DWORD PTR [edx+1132], ecx

; 632  : 			break;

  01720	eb 06		 jmp	 SHORT $LN16@ClearItemE@2
$LN2@ClearItemE@2:

; 633  : 
; 634  : 		case ADD_OPTION_MOBILITY:
; 635  : 			break;

  01722	eb 04		 jmp	 SHORT $LN16@ClearItemE@2
$LN1@ClearItemE@2:

; 636  : 
; 637  : 		default:
; 638  : 			return false;

  01724	32 c0		 xor	 al, al
  01726	eb 1c		 jmp	 SHORT $LN19@ClearItemE@2
$LN16@ClearItemE@2:

; 639  : 	}
; 640  : 
; 641  : 	GCUseEffectItem(lpObj, iEffectOption, iOptionType, iEffectType, 0);

  01728	6a 00		 push	 0
  0172a	8b 45 14	 mov	 eax, DWORD PTR _iEffectType$[ebp]
  0172d	50		 push	 eax
  0172e	8b 4d 10	 mov	 ecx, DWORD PTR _iOptionType$[ebp]
  01731	51		 push	 ecx
  01732	8b 55 0c	 mov	 edx, DWORD PTR _iEffectOption$[ebp]
  01735	52		 push	 edx
  01736	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01739	50		 push	 eax
  0173a	e8 00 00 00 00	 call	 ?GCUseEffectItem@@YAXPAUOBJECTSTRUCT@@HHHH@Z ; GCUseEffectItem
  0173f	83 c4 14	 add	 esp, 20			; 00000014H

; 642  : 
; 643  : 	return true;

  01742	b0 01		 mov	 al, 1
$LN19@ClearItemE@2:

; 644  : }

  01744	5f		 pop	 edi
  01745	5e		 pop	 esi
  01746	5b		 pop	 ebx
  01747	8b e5		 mov	 esp, ebp
  01749	5d		 pop	 ebp
  0174a	c2 14 00	 ret	 20			; 00000014H
  0174d	8d 49 00	 npad	 3
$LN21@ClearItemE@2:
  01750	00 00 00 00	 DD	 $LN11@ClearItemE@2
  01754	00 00 00 00	 DD	 $LN10@ClearItemE@2
  01758	00 00 00 00	 DD	 $LN15@ClearItemE@2
  0175c	00 00 00 00	 DD	 $LN13@ClearItemE@2
  01760	00 00 00 00	 DD	 $LN1@ClearItemE@2
  01764	00 00 00 00	 DD	 $LN1@ClearItemE@2
  01768	00 00 00 00	 DD	 $LN1@ClearItemE@2
  0176c	00 00 00 00	 DD	 $LN9@ClearItemE@2
  01770	00 00 00 00	 DD	 $LN8@ClearItemE@2
  01774	00 00 00 00	 DD	 $LN7@ClearItemE@2
  01778	00 00 00 00	 DD	 $LN6@ClearItemE@2
  0177c	00 00 00 00	 DD	 $LN5@ClearItemE@2
  01780	00 00 00 00	 DD	 $LN4@ClearItemE@2
  01784	00 00 00 00	 DD	 $LN3@ClearItemE@2
  01788	00 00 00 00	 DD	 $LN2@ClearItemE@2
?_ClearItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HHHH@Z ENDP ; CItemAddOption::_ClearItemEffect
; Function compile flags: /Odtp /ZI
_lpItemEffect$ = -8					; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_iEffectOption$ = 12					; size = 4
?ClearItemEffect@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@H@Z PROC ; CItemAddOption::ClearItemEffect
; _this$ = ecx

; 647  : {

  01790	55		 push	 ebp
  01791	8b ec		 mov	 ebp, esp
  01793	83 ec 48	 sub	 esp, 72			; 00000048H
  01796	53		 push	 ebx
  01797	56		 push	 esi
  01798	57		 push	 edi
  01799	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 648  : 	LPITEMEFFECT lpItemEffect = NULL;

  0179c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _lpItemEffect$[ebp], 0

; 649  : 	
; 650  : 	lpItemEffect = this->GetCurrentEffectType(lpObj);

  017a3	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  017a6	50		 push	 eax
  017a7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  017aa	e8 00 00 00 00	 call	 ?GetCurrentEffectType@CItemAddOption@@QAEPAUITEMEFFECT@@PAUOBJECTSTRUCT@@@Z ; CItemAddOption::GetCurrentEffectType
  017af	89 45 f8	 mov	 DWORD PTR _lpItemEffect$[ebp], eax

; 651  : 
; 652  : 	if ( lpItemEffect == NULL )

  017b2	83 7d f8 00	 cmp	 DWORD PTR _lpItemEffect$[ebp], 0
  017b6	75 04		 jne	 SHORT $LN1@ClearItemE@3

; 653  : 	{
; 654  : 		return false;

  017b8	32 c0		 xor	 al, al
  017ba	eb 67		 jmp	 SHORT $LN2@ClearItemE@3
$LN1@ClearItemE@3:

; 655  : 	}
; 656  : 
; 657  : 	this->_ClearItemEffect(lpObj, iEffectOption, lpItemEffect->wOptionType,	lpItemEffect->wEffectType1, lpItemEffect->iEffectValue1);

  017bc	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  017bf	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  017c2	51		 push	 ecx
  017c3	8b 55 f8	 mov	 edx, DWORD PTR _lpItemEffect$[ebp]
  017c6	0f b7 42 02	 movzx	 eax, WORD PTR [edx+2]
  017ca	50		 push	 eax
  017cb	8b 4d f8	 mov	 ecx, DWORD PTR _lpItemEffect$[ebp]
  017ce	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  017d1	52		 push	 edx
  017d2	8b 45 0c	 mov	 eax, DWORD PTR _iEffectOption$[ebp]
  017d5	50		 push	 eax
  017d6	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  017d9	51		 push	 ecx
  017da	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  017dd	e8 00 00 00 00	 call	 ?_ClearItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HHHH@Z ; CItemAddOption::_ClearItemEffect

; 658  : 	this->_ClearItemEffect(lpObj, iEffectOption, lpItemEffect->wOptionType,	lpItemEffect->wEffectType2, lpItemEffect->iEffectValue2);

  017e2	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  017e5	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  017e8	51		 push	 ecx
  017e9	8b 55 f8	 mov	 edx, DWORD PTR _lpItemEffect$[ebp]
  017ec	0f b7 42 04	 movzx	 eax, WORD PTR [edx+4]
  017f0	50		 push	 eax
  017f1	8b 4d f8	 mov	 ecx, DWORD PTR _lpItemEffect$[ebp]
  017f4	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  017f7	52		 push	 edx
  017f8	8b 45 0c	 mov	 eax, DWORD PTR _iEffectOption$[ebp]
  017fb	50		 push	 eax
  017fc	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  017ff	51		 push	 ecx
  01800	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01803	e8 00 00 00 00	 call	 ?_ClearItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HHHH@Z ; CItemAddOption::_ClearItemEffect

; 659  : 
; 660  : 	lpObj->m_wItemEffectType = 0; //Season3 add-on

  01808	33 c0		 xor	 eax, eax
  0180a	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0180d	66 89 81 14 20
	00 00		 mov	 WORD PTR [ecx+8212], ax

; 661  : 	lpObj->m_iItemEffectValidTime = 0; //Season3 add-on

  01814	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01817	c7 80 18 20 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+8216], 0

; 662  : 
; 663  : 	return true;

  01821	b0 01		 mov	 al, 1
$LN2@ClearItemE@3:

; 664  : }

  01823	5f		 pop	 edi
  01824	5e		 pop	 esi
  01825	5b		 pop	 ebx
  01826	8b e5		 mov	 esp, ebp
  01828	5d		 pop	 ebp
  01829	c2 08 00	 ret	 8
?ClearItemEffect@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@H@Z ENDP ; CItemAddOption::ClearItemEffect
; Function compile flags: /Odtp /ZI
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
?GetCurrentEffectType@CItemAddOption@@QAEPAUITEMEFFECT@@PAUOBJECTSTRUCT@@@Z PROC ; CItemAddOption::GetCurrentEffectType
; _this$ = ecx

; 667  : {

  01830	55		 push	 ebp
  01831	8b ec		 mov	 ebp, esp
  01833	83 ec 44	 sub	 esp, 68			; 00000044H
  01836	53		 push	 ebx
  01837	56		 push	 esi
  01838	57		 push	 edi
  01839	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 668  : 	if ( lpObj->m_wItemEffectType <= 0 )

  0183c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0183f	0f b7 88 14 20
	00 00		 movzx	 ecx, WORD PTR [eax+8212]
  01846	85 c9		 test	 ecx, ecx
  01848	7f 04		 jg	 SHORT $LN1@GetCurrent

; 669  : 	{
; 670  : 		return NULL;

  0184a	33 c0		 xor	 eax, eax
  0184c	eb 13		 jmp	 SHORT $LN2@GetCurrent
$LN1@GetCurrent:

; 671  : 	}
; 672  : 
; 673  : 	return this->_SearchItemEffect(lpObj->m_wItemEffectType);

  0184e	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01851	0f b7 88 14 20
	00 00		 movzx	 ecx, WORD PTR [eax+8212]
  01858	51		 push	 ecx
  01859	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0185c	e8 00 00 00 00	 call	 ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect
$LN2@GetCurrent:

; 674  : }

  01861	5f		 pop	 edi
  01862	5e		 pop	 esi
  01863	5b		 pop	 ebx
  01864	8b e5		 mov	 esp, ebp
  01866	5d		 pop	 ebp
  01867	c2 04 00	 ret	 4
?GetCurrentEffectType@CItemAddOption@@QAEPAUITEMEFFECT@@PAUOBJECTSTRUCT@@@Z ENDP ; CItemAddOption::GetCurrentEffectType
; Function compile flags: /Odtp /ZI
_i$219692 = -8						; size = 4
_this$ = -4						; size = 4
_iItemNumber$ = 8					; size = 4
?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z PROC ; CItemAddOption::_SearchItemEffect
; _this$ = ecx

; 677  : {

  01870	55		 push	 ebp
  01871	8b ec		 mov	 ebp, esp
  01873	83 ec 48	 sub	 esp, 72			; 00000048H
  01876	53		 push	 ebx
  01877	56		 push	 esi
  01878	57		 push	 edi
  01879	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 678  : 	for ( int i=0;i<MAX_ITEM_ADD_OPTION;i++)

  0187c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$219692[ebp], 0
  01883	eb 09		 jmp	 SHORT $LN4@SearchItem
$LN3@SearchItem:
  01885	8b 45 f8	 mov	 eax, DWORD PTR _i$219692[ebp]
  01888	83 c0 01	 add	 eax, 1
  0188b	89 45 f8	 mov	 DWORD PTR _i$219692[ebp], eax
$LN4@SearchItem:
  0188e	83 7d f8 64	 cmp	 DWORD PTR _i$219692[ebp], 100 ; 00000064H
  01892	7d 23		 jge	 SHORT $LN2@SearchItem

; 679  : 	{
; 680  : 		if ( this->m_ItemAddOption[i].iItemNumber == iItemNumber )

  01894	8b 45 f8	 mov	 eax, DWORD PTR _i$219692[ebp]
  01897	c1 e0 05	 shl	 eax, 5
  0189a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0189d	8b 54 01 0c	 mov	 edx, DWORD PTR [ecx+eax+12]
  018a1	3b 55 08	 cmp	 edx, DWORD PTR _iItemNumber$[ebp]
  018a4	75 0f		 jne	 SHORT $LN1@SearchItem

; 681  : 		{
; 682  : 			return &this->m_ItemAddOption[i];

  018a6	8b 45 f8	 mov	 eax, DWORD PTR _i$219692[ebp]
  018a9	c1 e0 05	 shl	 eax, 5
  018ac	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  018af	8d 44 01 04	 lea	 eax, DWORD PTR [ecx+eax+4]
  018b3	eb 04		 jmp	 SHORT $LN5@SearchItem
$LN1@SearchItem:

; 683  : 		}
; 684  : 	}

  018b5	eb ce		 jmp	 SHORT $LN3@SearchItem
$LN2@SearchItem:

; 685  : 
; 686  : 	return NULL;

  018b7	33 c0		 xor	 eax, eax
$LN5@SearchItem:

; 687  : }

  018b9	5f		 pop	 edi
  018ba	5e		 pop	 esi
  018bb	5b		 pop	 ebx
  018bc	8b e5		 mov	 esp, ebp
  018be	5d		 pop	 ebp
  018bf	c2 04 00	 ret	 4
?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ENDP ; CItemAddOption::_SearchItemEffect
_TEXT	ENDS
PUBLIC	?SearchItemEffectType@CItemAddOption@@QAE_NHPAH00@Z ; CItemAddOption::SearchItemEffectType
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_lpItemEffect$ = -8					; size = 4
_this$ = -4						; size = 4
_iItemNumber$ = 8					; size = 4
_iEffectType1$ = 12					; size = 4
_iEffectType2$ = 16					; size = 4
_iEffectValidTime$ = 20					; size = 4
?SearchItemEffectType@CItemAddOption@@QAE_NHPAH00@Z PROC ; CItemAddOption::SearchItemEffectType
; _this$ = ecx

; 690  : {

  018d0	55		 push	 ebp
  018d1	8b ec		 mov	 ebp, esp
  018d3	83 ec 48	 sub	 esp, 72			; 00000048H
  018d6	53		 push	 ebx
  018d7	56		 push	 esi
  018d8	57		 push	 edi
  018d9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 691  : 	LPITEMEFFECT lpItemEffect = NULL;

  018dc	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _lpItemEffect$[ebp], 0

; 692  : 
; 693  : 	lpItemEffect = this->_SearchItemEffect(iItemNumber);

  018e3	8b 45 08	 mov	 eax, DWORD PTR _iItemNumber$[ebp]
  018e6	50		 push	 eax
  018e7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  018ea	e8 00 00 00 00	 call	 ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect
  018ef	89 45 f8	 mov	 DWORD PTR _lpItemEffect$[ebp], eax

; 694  : 
; 695  : 	if ( lpItemEffect == NULL )

  018f2	83 7d f8 00	 cmp	 DWORD PTR _lpItemEffect$[ebp], 0
  018f6	75 04		 jne	 SHORT $LN1@SearchItem@2

; 696  : 	{
; 697  : 		return false;

  018f8	32 c0		 xor	 al, al
  018fa	eb 25		 jmp	 SHORT $LN2@SearchItem@2
$LN1@SearchItem@2:

; 698  : 	}
; 699  : 
; 700  : 	*iEffectType1 = lpItemEffect->wEffectType1;

  018fc	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  018ff	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  01903	8b 55 0c	 mov	 edx, DWORD PTR _iEffectType1$[ebp]
  01906	89 0a		 mov	 DWORD PTR [edx], ecx

; 701  : 	*iEffectType2 = lpItemEffect->wEffectType2;

  01908	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  0190b	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  0190f	8b 55 10	 mov	 edx, DWORD PTR _iEffectType2$[ebp]
  01912	89 0a		 mov	 DWORD PTR [edx], ecx

; 702  : 	*iEffectValidTime = lpItemEffect->iEffectValidTime;

  01914	8b 45 14	 mov	 eax, DWORD PTR _iEffectValidTime$[ebp]
  01917	8b 4d f8	 mov	 ecx, DWORD PTR _lpItemEffect$[ebp]
  0191a	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  0191d	89 10		 mov	 DWORD PTR [eax], edx

; 703  : 
; 704  : 	return true;

  0191f	b0 01		 mov	 al, 1
$LN2@SearchItem@2:

; 705  : }

  01921	5f		 pop	 edi
  01922	5e		 pop	 esi
  01923	5b		 pop	 ebx
  01924	8b e5		 mov	 esp, ebp
  01926	5d		 pop	 ebp
  01927	c2 10 00	 ret	 16			; 00000010H
?SearchItemEffectType@CItemAddOption@@QAE_NHPAH00@Z ENDP ; CItemAddOption::SearchItemEffectType
_TEXT	ENDS
PUBLIC	?SearchItemOptionType@CItemAddOption@@QAEHH@Z	; CItemAddOption::SearchItemOptionType
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_iOptionType$ = -12					; size = 4
_lpItemEffect$ = -8					; size = 4
_this$ = -4						; size = 4
_iItemNumber$ = 8					; size = 4
?SearchItemOptionType@CItemAddOption@@QAEHH@Z PROC	; CItemAddOption::SearchItemOptionType
; _this$ = ecx

; 708  : {

  01930	55		 push	 ebp
  01931	8b ec		 mov	 ebp, esp
  01933	83 ec 4c	 sub	 esp, 76			; 0000004cH
  01936	53		 push	 ebx
  01937	56		 push	 esi
  01938	57		 push	 edi
  01939	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 709  : 	LPITEMEFFECT lpItemEffect = NULL;

  0193c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _lpItemEffect$[ebp], 0

; 710  : 	int iOptionType = -1;

  01943	c7 45 f4 ff ff
	ff ff		 mov	 DWORD PTR _iOptionType$[ebp], -1

; 711  : 
; 712  : 	lpItemEffect = this->_SearchItemEffect(iItemNumber);

  0194a	8b 45 08	 mov	 eax, DWORD PTR _iItemNumber$[ebp]
  0194d	50		 push	 eax
  0194e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01951	e8 00 00 00 00	 call	 ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect
  01956	89 45 f8	 mov	 DWORD PTR _lpItemEffect$[ebp], eax

; 713  : 
; 714  : 	if ( lpItemEffect == NULL )

  01959	83 7d f8 00	 cmp	 DWORD PTR _lpItemEffect$[ebp], 0
  0195d	75 05		 jne	 SHORT $LN1@SearchItem@3

; 715  : 	{
; 716  : 		return iOptionType;

  0195f	8b 45 f4	 mov	 eax, DWORD PTR _iOptionType$[ebp]
  01962	eb 0c		 jmp	 SHORT $LN2@SearchItem@3
$LN1@SearchItem@3:

; 717  : 	}
; 718  : 
; 719  : 	iOptionType = lpItemEffect->wOptionType;

  01964	8b 45 f8	 mov	 eax, DWORD PTR _lpItemEffect$[ebp]
  01967	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0196a	89 4d f4	 mov	 DWORD PTR _iOptionType$[ebp], ecx

; 720  : 
; 721  : 	return iOptionType;

  0196d	8b 45 f4	 mov	 eax, DWORD PTR _iOptionType$[ebp]
$LN2@SearchItem@3:

; 722  : }

  01970	5f		 pop	 edi
  01971	5e		 pop	 esi
  01972	5b		 pop	 ebx
  01973	8b e5		 mov	 esp, ebp
  01975	5d		 pop	 ebp
  01976	c2 04 00	 ret	 4
?SearchItemOptionType@CItemAddOption@@QAEHH@Z ENDP	; CItemAddOption::SearchItemOptionType
_TEXT	ENDS
PUBLIC	?SearchForClearItemEffect@CItemAddOption@@QAEEH@Z ; CItemAddOption::SearchForClearItemEffect
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iItemNumber$ = 8					; size = 4
?SearchForClearItemEffect@CItemAddOption@@QAEEH@Z PROC	; CItemAddOption::SearchForClearItemEffect
; _this$ = ecx

; 725  : {

  01980	55		 push	 ebp
  01981	8b ec		 mov	 ebp, esp
  01983	83 ec 44	 sub	 esp, 68			; 00000044H
  01986	53		 push	 ebx
  01987	56		 push	 esi
  01988	57		 push	 edi
  01989	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 726  : 	if ( this->_SearchItemEffect(iItemNumber) == NULL )

  0198c	8b 45 08	 mov	 eax, DWORD PTR _iItemNumber$[ebp]
  0198f	50		 push	 eax
  01990	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01993	e8 00 00 00 00	 call	 ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect
  01998	85 c0		 test	 eax, eax
  0199a	75 04		 jne	 SHORT $LN1@SearchForC

; 727  : 	{
; 728  : 		return 0;

  0199c	32 c0		 xor	 al, al
  0199e	eb 02		 jmp	 SHORT $LN2@SearchForC
$LN1@SearchForC:

; 729  : 	}
; 730  : 
; 731  : 	return 1;

  019a0	b0 01		 mov	 al, 1
$LN2@SearchForC:

; 732  : }

  019a2	5f		 pop	 edi
  019a3	5e		 pop	 esi
  019a4	5b		 pop	 ebx
  019a5	8b e5		 mov	 esp, ebp
  019a7	5d		 pop	 ebp
  019a8	c2 04 00	 ret	 4
?SearchForClearItemEffect@CItemAddOption@@QAEEH@Z ENDP	; CItemAddOption::SearchForClearItemEffect
_TEXT	ENDS
PUBLIC	?SearchItemEffectType1@CItemAddOption@@QAEPAUITEMEFFECT@@H@Z ; CItemAddOption::SearchItemEffectType1
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iItemNumber$ = 8					; size = 4
?SearchItemEffectType1@CItemAddOption@@QAEPAUITEMEFFECT@@H@Z PROC ; CItemAddOption::SearchItemEffectType1
; _this$ = ecx

; 735  : {

  019b0	55		 push	 ebp
  019b1	8b ec		 mov	 ebp, esp
  019b3	83 ec 44	 sub	 esp, 68			; 00000044H
  019b6	53		 push	 ebx
  019b7	56		 push	 esi
  019b8	57		 push	 edi
  019b9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 736  : 	return this->_SearchItemEffect(iItemNumber);

  019bc	8b 45 08	 mov	 eax, DWORD PTR _iItemNumber$[ebp]
  019bf	50		 push	 eax
  019c0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  019c3	e8 00 00 00 00	 call	 ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect

; 737  : }

  019c8	5f		 pop	 edi
  019c9	5e		 pop	 esi
  019ca	5b		 pop	 ebx
  019cb	8b e5		 mov	 esp, ebp
  019cd	5d		 pop	 ebp
  019ce	c2 04 00	 ret	 4
?SearchItemEffectType1@CItemAddOption@@QAEPAUITEMEFFECT@@H@Z ENDP ; CItemAddOption::SearchItemEffectType1
_TEXT	ENDS
PUBLIC	?SetItemEquipment@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::SetItemEquipment
PUBLIC	?ApplyForEquipment@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@@Z ; CItemAddOption::ApplyForEquipment
EXTRN	?IsItem@CItem@@QAEHXZ:PROC			; CItem::IsItem
; Function compile flags: /Odtp /ZI
_TEXT	SEGMENT
_lpItemEffect$219732 = -16				; size = 4
_pItem$219730 = -12					; size = 4
_iItemIndex$ = -8					; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
?ApplyForEquipment@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@@Z PROC ; CItemAddOption::ApplyForEquipment
; _this$ = ecx

; 740  : {

  019e0	55		 push	 ebp
  019e1	8b ec		 mov	 ebp, esp
  019e3	83 ec 50	 sub	 esp, 80			; 00000050H
  019e6	53		 push	 ebx
  019e7	56		 push	 esi
  019e8	57		 push	 edi
  019e9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 741  : 	//ITEMOPTION_FOR380ITEM_EFFECT * pItemEffect = &lpObj->m_ItemOptionExFor380;
; 742  : 	//this->InitEffectValue(pItemEffect);
; 743  : 	int iItemIndex = 0;

  019ec	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iItemIndex$[ebp], 0

; 744  : 
; 745  : 	for ( iItemIndex = 0; iItemIndex < INVETORY_WEAR_SIZE ; iItemIndex++)

  019f3	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iItemIndex$[ebp], 0
  019fa	eb 09		 jmp	 SHORT $LN6@ApplyForEq
$LN5@ApplyForEq:
  019fc	8b 45 f8	 mov	 eax, DWORD PTR _iItemIndex$[ebp]
  019ff	83 c0 01	 add	 eax, 1
  01a02	89 45 f8	 mov	 DWORD PTR _iItemIndex$[ebp], eax
$LN6@ApplyForEq:
  01a05	83 7d f8 0c	 cmp	 DWORD PTR _iItemIndex$[ebp], 12 ; 0000000cH
  01a09	0f 8d 87 00 00
	00		 jge	 $LN4@ApplyForEq

; 746  : 	{
; 747  : 		CItem * pItem = &lpObj->pInventory[iItemIndex];

  01a0f	8b 45 f8	 mov	 eax, DWORD PTR _iItemIndex$[ebp]
  01a12	69 c0 d4 00 00
	00		 imul	 eax, 212		; 000000d4H
  01a18	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01a1b	03 81 24 0e 00
	00		 add	 eax, DWORD PTR [ecx+3620]
  01a21	89 45 f4	 mov	 DWORD PTR _pItem$219730[ebp], eax

; 748  : 
; 749  : 		if ( pItem->IsItem()
; 750  : 			/* pItem->m_IsValidItem &&*/
; 751  : 			 )

  01a24	8b 4d f4	 mov	 ecx, DWORD PTR _pItem$219730[ebp]
  01a27	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  01a2c	85 c0		 test	 eax, eax
  01a2e	74 61		 je	 SHORT $LN3@ApplyForEq

; 752  : 		{
; 753  : 			LPITEMEFFECT lpItemEffect = NULL;

  01a30	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _lpItemEffect$219732[ebp], 0

; 754  : 			lpItemEffect = this->_SearchItemEffect(pItem->m_Type); 

  01a37	8b 45 f4	 mov	 eax, DWORD PTR _pItem$219730[ebp]
  01a3a	0f bf 48 06	 movsx	 ecx, WORD PTR [eax+6]
  01a3e	51		 push	 ecx
  01a3f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01a42	e8 00 00 00 00	 call	 ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect
  01a47	89 45 f0	 mov	 DWORD PTR _lpItemEffect$219732[ebp], eax

; 755  : 
; 756  : 			if ( lpItemEffect == NULL )

  01a4a	83 7d f0 00	 cmp	 DWORD PTR _lpItemEffect$219732[ebp], 0
  01a4e	75 02		 jne	 SHORT $LN2@ApplyForEq

; 757  : 			{
; 758  : 				continue;

  01a50	eb aa		 jmp	 SHORT $LN5@ApplyForEq
$LN2@ApplyForEq:

; 759  : 			}
; 760  : 
; 761  : 			if(lpItemEffect->iEffectValidTime == 0)

  01a52	8b 45 f0	 mov	 eax, DWORD PTR _lpItemEffect$219732[ebp]
  01a55	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  01a59	75 36		 jne	 SHORT $LN3@ApplyForEq

; 762  : 			{
; 763  : 				this->SetItemEquipment(lpObj,lpItemEffect->wEffectType1,lpItemEffect->iEffectValue1);

  01a5b	8b 45 f0	 mov	 eax, DWORD PTR _lpItemEffect$219732[ebp]
  01a5e	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  01a61	51		 push	 ecx
  01a62	8b 55 f0	 mov	 edx, DWORD PTR _lpItemEffect$219732[ebp]
  01a65	0f b7 42 02	 movzx	 eax, WORD PTR [edx+2]
  01a69	50		 push	 eax
  01a6a	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01a6d	51		 push	 ecx
  01a6e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01a71	e8 00 00 00 00	 call	 ?SetItemEquipment@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::SetItemEquipment

; 764  : 				this->SetItemEquipment(lpObj,lpItemEffect->wEffectType2,lpItemEffect->iEffectValue2);

  01a76	8b 45 f0	 mov	 eax, DWORD PTR _lpItemEffect$219732[ebp]
  01a79	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  01a7c	51		 push	 ecx
  01a7d	8b 55 f0	 mov	 edx, DWORD PTR _lpItemEffect$219732[ebp]
  01a80	0f b7 42 04	 movzx	 eax, WORD PTR [edx+4]
  01a84	50		 push	 eax
  01a85	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01a88	51		 push	 ecx
  01a89	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01a8c	e8 00 00 00 00	 call	 ?SetItemEquipment@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::SetItemEquipment
$LN3@ApplyForEq:

; 765  : 			}
; 766  : 		}
; 767  : 	}

  01a91	e9 66 ff ff ff	 jmp	 $LN5@ApplyForEq
$LN4@ApplyForEq:

; 768  : 
; 769  : 	return TRUE;

  01a96	b0 01		 mov	 al, 1

; 770  : }

  01a98	5f		 pop	 edi
  01a99	5e		 pop	 esi
  01a9a	5b		 pop	 ebx
  01a9b	8b e5		 mov	 esp, ebp
  01a9d	5d		 pop	 ebp
  01a9e	c2 04 00	 ret	 4
?ApplyForEquipment@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@@Z ENDP ; CItemAddOption::ApplyForEquipment
_TEXT	ENDS
PUBLIC	__real@4059000000000000
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
; Function compile flags: /Odtp /ZI
CONST	ENDS
_TEXT	SEGMENT
tv65 = -72						; size = 4
_this$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_iEffectType$ = 12					; size = 4
_iEffectValue$ = 16					; size = 4
?SetItemEquipment@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z PROC ; CItemAddOption::SetItemEquipment
; _this$ = ecx

; 773  : {

  01ab0	55		 push	 ebp
  01ab1	8b ec		 mov	 ebp, esp
  01ab3	83 ec 48	 sub	 esp, 72			; 00000048H
  01ab6	53		 push	 ebx
  01ab7	56		 push	 esi
  01ab8	57		 push	 edi
  01ab9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 774  : 	if ( iEffectType <= 0 )

  01abc	83 7d 0c 00	 cmp	 DWORD PTR _iEffectType$[ebp], 0
  01ac0	7f 07		 jg	 SHORT $LN21@SetItemEqu

; 775  : 		return false;

  01ac2	32 c0		 xor	 al, al
  01ac4	e9 23 05 00 00	 jmp	 $LN22@SetItemEqu
$LN21@SetItemEqu:

; 776  : 
; 777  : // 1) Increase Speed
; 778  : // 2) Increase Attack Damage
; 779  : // 3) Increase Defence
; 780  : // 4) Increase MaxLife
; 781  : // 5) Increase MaxMana
; 782  : // 6) Increase Experience Percent
; 783  : // 7) Increase Drop Rate Percent
; 784  : // 8) +%d Remove Extra Experience
; 785  : // 9) Increase Strength
; 786  : //10) Increase Agility
; 787  : //11) Increase Vitality
; 788  : //12) Increase Energy
; 789  : //13) Increase Leadership
; 790  : //51) Increase Attack Power Percent
; 791  : //52) Increase Dmg Absorbtion Percent
; 792  : //60) Increase Experience Rate (20 = +20x in %)
; 793  : //61) Increase Drop Rate (1 = 1000*1/100 = 10)
; 794  : //64) Increase Increase Damage Percentage
; 795  : 
; 796  : 	switch ( iEffectType )

  01ac9	8b 45 0c	 mov	 eax, DWORD PTR _iEffectType$[ebp]
  01acc	89 45 b8	 mov	 DWORD PTR tv65[ebp], eax
  01acf	8b 4d b8	 mov	 ecx, DWORD PTR tv65[ebp]
  01ad2	83 e9 02	 sub	 ecx, 2
  01ad5	89 4d b8	 mov	 DWORD PTR tv65[ebp], ecx
  01ad8	83 7d b8 3e	 cmp	 DWORD PTR tv65[ebp], 62	; 0000003eH
  01adc	0f 87 08 05 00
	00		 ja	 $LN19@SetItemEqu
  01ae2	8b 55 b8	 mov	 edx, DWORD PTR tv65[ebp]
  01ae5	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN24@SetItemEqu[edx]
  01aec	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN25@SetItemEqu[eax*4]
$LN18@SetItemEqu:

; 797  : 	{
; 798  : 		case ADD_OPTION_LIFE_AUTO_RECOVERY: 
; 799  : 			lpObj->RecoveryHp += iEffectValue; 

  01af3	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01af6	8b 88 c0 27 00
	00		 mov	 ecx, DWORD PTR [eax+10176]
  01afc	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01aff	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01b02	89 8a c0 27 00
	00		 mov	 DWORD PTR [edx+10176], ecx

; 800  : 			break;

  01b08	e9 dd 04 00 00	 jmp	 $LN19@SetItemEqu
$LN17@SetItemEqu:

; 801  : 
; 802  : 		case ADD_OPTION_MANA_AUTO_RECOVERY:
; 803  : 			lpObj->RecoveryMp += iEffectValue;

  01b0d	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01b10	8b 88 c8 27 00
	00		 mov	 ecx, DWORD PTR [eax+10184]
  01b16	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01b19	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01b1c	89 8a c8 27 00
	00		 mov	 DWORD PTR [edx+10184], ecx

; 804  : 			break;

  01b22	e9 c3 04 00 00	 jmp	 $LN19@SetItemEqu
$LN16@SetItemEqu:

; 805  : 
; 806  : 		case ADD_OPTION_ATTACK_NORMAL_DAMAGE:
; 807  : 			lpObj->m_AttackDamageMaxLeft += iEffectValue;

  01b27	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01b2a	8b 88 78 04 00
	00		 mov	 ecx, DWORD PTR [eax+1144]
  01b30	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01b33	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01b36	89 8a 78 04 00
	00		 mov	 DWORD PTR [edx+1144], ecx

; 808  : 			lpObj->m_AttackDamageMinLeft += iEffectValue;

  01b3c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01b3f	8b 88 7c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1148]
  01b45	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01b48	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01b4b	89 8a 7c 04 00
	00		 mov	 DWORD PTR [edx+1148], ecx

; 809  : 			lpObj->m_AttackDamageMaxRight += iEffectValue;

  01b51	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01b54	8b 88 80 04 00
	00		 mov	 ecx, DWORD PTR [eax+1152]
  01b5a	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01b5d	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01b60	89 8a 80 04 00
	00		 mov	 DWORD PTR [edx+1152], ecx

; 810  : 			lpObj->m_AttackDamageMinRight += iEffectValue;

  01b66	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01b69	8b 88 84 04 00
	00		 mov	 ecx, DWORD PTR [eax+1156]
  01b6f	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01b72	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01b75	89 8a 84 04 00
	00		 mov	 DWORD PTR [edx+1156], ecx

; 811  : 			lpObj->m_MagicDamageMin += iEffectValue;

  01b7b	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01b7e	8b 88 68 04 00
	00		 mov	 ecx, DWORD PTR [eax+1128]
  01b84	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01b87	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01b8a	89 8a 68 04 00
	00		 mov	 DWORD PTR [edx+1128], ecx

; 812  : 			lpObj->m_MagicDamageMax += iEffectValue;

  01b90	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01b93	8b 88 6c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1132]
  01b99	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01b9c	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01b9f	89 8a 6c 04 00
	00		 mov	 DWORD PTR [edx+1132], ecx

; 813  : 			break;

  01ba5	e9 40 04 00 00	 jmp	 $LN19@SetItemEqu
$LN15@SetItemEqu:

; 814  : 
; 815  : 		case ADD_OPTION_LIFE:
; 816  : 			lpObj->AddLife += ( (lpObj->MaxLife + lpObj->AddLife) * iEffectValue ) /100;

  01baa	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01bad	db 80 4c 01 00
	00		 fild	 DWORD PTR [eax+332]
  01bb3	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01bb6	d8 81 00 01 00
	00		 fadd	 DWORD PTR [ecx+256]
  01bbc	da 4d 10	 fimul	 DWORD PTR _iEffectValue$[ebp]
  01bbf	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4059000000000000
  01bc5	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01bc8	da 82 4c 01 00
	00		 fiadd	 DWORD PTR [edx+332]
  01bce	e8 00 00 00 00	 call	 __ftol2_sse
  01bd3	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01bd6	89 81 4c 01 00
	00		 mov	 DWORD PTR [ecx+332], eax

; 817  : 			GCReFillSend(lpObj->m_Index, (lpObj->MaxLife + lpObj->AddLife), -2, 0, (lpObj->iMaxShield + lpObj->iAddShield));

  01bdc	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01bdf	8b 88 58 01 00
	00		 mov	 ecx, DWORD PTR [eax+344]
  01be5	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01be8	03 8a 5c 01 00
	00		 add	 ecx, DWORD PTR [edx+348]
  01bee	51		 push	 ecx
  01bef	6a 00		 push	 0
  01bf1	68 fe 00 00 00	 push	 254			; 000000feH
  01bf6	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01bf9	db 80 4c 01 00
	00		 fild	 DWORD PTR [eax+332]
  01bff	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01c02	d8 81 00 01 00
	00		 fadd	 DWORD PTR [ecx+256]
  01c08	e8 00 00 00 00	 call	 __ftol2_sse
  01c0d	50		 push	 eax
  01c0e	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01c11	8b 02		 mov	 eax, DWORD PTR [edx]
  01c13	50		 push	 eax
  01c14	e8 00 00 00 00	 call	 ?GCReFillSend@@YAXHHEEH@Z ; GCReFillSend
  01c19	83 c4 14	 add	 esp, 20			; 00000014H

; 818  : 			GCReFillSend(lpObj->m_Index, (lpObj->Life), -1, 0, (lpObj->iShield));

  01c1c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01c1f	8b 88 54 01 00
	00		 mov	 ecx, DWORD PTR [eax+340]
  01c25	51		 push	 ecx
  01c26	6a 00		 push	 0
  01c28	68 ff 00 00 00	 push	 255			; 000000ffH
  01c2d	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01c30	d9 82 fc 00 00
	00		 fld	 DWORD PTR [edx+252]
  01c36	e8 00 00 00 00	 call	 __ftol2_sse
  01c3b	50		 push	 eax
  01c3c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01c3f	8b 08		 mov	 ecx, DWORD PTR [eax]
  01c41	51		 push	 ecx
  01c42	e8 00 00 00 00	 call	 ?GCReFillSend@@YAXHHEEH@Z ; GCReFillSend
  01c47	83 c4 14	 add	 esp, 20			; 00000014H

; 819  : 			break;

  01c4a	e9 9b 03 00 00	 jmp	 $LN19@SetItemEqu
$LN14@SetItemEqu:

; 820  : 
; 821  : 		case ADD_OPTION_EXCELLENT_DAMAGE:
; 822  : 			lpObj->m_ExcelentDamage += iEffectValue;

  01c4f	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01c52	8b 88 c0 04 00
	00		 mov	 ecx, DWORD PTR [eax+1216]
  01c58	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01c5b	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01c5e	89 8a c0 04 00
	00		 mov	 DWORD PTR [edx+1216], ecx

; 823  : 			break;

  01c64	e9 81 03 00 00	 jmp	 $LN19@SetItemEqu
$LN13@SetItemEqu:

; 824  : 
; 825  : 		case ADD_OPTION_CRITICAL_DAMAGE:
; 826  : 			lpObj->m_CriticalDamage += iEffectValue;

  01c69	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01c6c	8b 88 bc 04 00
	00		 mov	 ecx, DWORD PTR [eax+1212]
  01c72	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01c75	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01c78	89 8a bc 04 00
	00		 mov	 DWORD PTR [edx+1212], ecx

; 827  : 			break;

  01c7e	e9 67 03 00 00	 jmp	 $LN19@SetItemEqu
$LN12@SetItemEqu:

; 828  : 
; 829  : 		case ADD_OPTION_MANA:
; 830  : 			lpObj->AddMana += ( (lpObj->AddMana + lpObj->MaxMana) * iEffectValue ) / 100;

  01c83	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01c86	db 80 50 01 00
	00		 fild	 DWORD PTR [eax+336]
  01c8c	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01c8f	d8 81 14 01 00
	00		 fadd	 DWORD PTR [ecx+276]
  01c95	da 4d 10	 fimul	 DWORD PTR _iEffectValue$[ebp]
  01c98	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@4059000000000000
  01c9e	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01ca1	da 82 50 01 00
	00		 fiadd	 DWORD PTR [edx+336]
  01ca7	e8 00 00 00 00	 call	 __ftol2_sse
  01cac	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01caf	89 81 50 01 00
	00		 mov	 DWORD PTR [ecx+336], eax

; 831  : 			GCManaSend(lpObj->m_Index, (lpObj->AddMana + lpObj->MaxMana), -2, 0, (lpObj->MaxBP + lpObj->AddBP));

  01cb5	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01cb8	8b 88 2c 01 00
	00		 mov	 ecx, DWORD PTR [eax+300]
  01cbe	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01cc1	03 8a 30 01 00
	00		 add	 ecx, DWORD PTR [edx+304]
  01cc7	51		 push	 ecx
  01cc8	6a 00		 push	 0
  01cca	68 fe 00 00 00	 push	 254			; 000000feH
  01ccf	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01cd2	db 80 50 01 00
	00		 fild	 DWORD PTR [eax+336]
  01cd8	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01cdb	d8 81 14 01 00
	00		 fadd	 DWORD PTR [ecx+276]
  01ce1	e8 00 00 00 00	 call	 __ftol2_sse
  01ce6	50		 push	 eax
  01ce7	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01cea	8b 02		 mov	 eax, DWORD PTR [edx]
  01cec	50		 push	 eax
  01ced	e8 00 00 00 00	 call	 ?GCManaSend@@YAXHHEEH@Z	; GCManaSend
  01cf2	83 c4 14	 add	 esp, 20			; 00000014H

; 832  : 			GCManaSend(lpObj->m_Index, lpObj->Mana, -1, 0, lpObj->BP);

  01cf5	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01cf8	8b 88 28 01 00
	00		 mov	 ecx, DWORD PTR [eax+296]
  01cfe	51		 push	 ecx
  01cff	6a 00		 push	 0
  01d01	68 ff 00 00 00	 push	 255			; 000000ffH
  01d06	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01d09	d9 82 10 01 00
	00		 fld	 DWORD PTR [edx+272]
  01d0f	e8 00 00 00 00	 call	 __ftol2_sse
  01d14	50		 push	 eax
  01d15	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01d18	8b 08		 mov	 ecx, DWORD PTR [eax]
  01d1a	51		 push	 ecx
  01d1b	e8 00 00 00 00	 call	 ?GCManaSend@@YAXHHEEH@Z	; GCManaSend
  01d20	83 c4 14	 add	 esp, 20			; 00000014H

; 833  : 			break;

  01d23	e9 c2 02 00 00	 jmp	 $LN19@SetItemEqu
$LN11@SetItemEqu:

; 834  : 
; 835  : 		case ADD_OPTION_ATTACK_DAMAGE:
; 836  : 			lpObj->m_AttackDamageMaxLeft += iEffectValue;

  01d28	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01d2b	8b 88 78 04 00
	00		 mov	 ecx, DWORD PTR [eax+1144]
  01d31	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01d34	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01d37	89 8a 78 04 00
	00		 mov	 DWORD PTR [edx+1144], ecx

; 837  : 			lpObj->m_AttackDamageMinLeft += iEffectValue;

  01d3d	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01d40	8b 88 7c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1148]
  01d46	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01d49	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01d4c	89 8a 7c 04 00
	00		 mov	 DWORD PTR [edx+1148], ecx

; 838  : 			lpObj->m_AttackDamageMaxRight += iEffectValue;

  01d52	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01d55	8b 88 80 04 00
	00		 mov	 ecx, DWORD PTR [eax+1152]
  01d5b	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01d5e	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01d61	89 8a 80 04 00
	00		 mov	 DWORD PTR [edx+1152], ecx

; 839  : 			lpObj->m_AttackDamageMinRight += iEffectValue;

  01d67	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01d6a	8b 88 84 04 00
	00		 mov	 ecx, DWORD PTR [eax+1156]
  01d70	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01d73	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01d76	89 8a 84 04 00
	00		 mov	 DWORD PTR [edx+1156], ecx

; 840  : 			lpObj->m_MagicDamageMin += iEffectValue;

  01d7c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01d7f	8b 88 68 04 00
	00		 mov	 ecx, DWORD PTR [eax+1128]
  01d85	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01d88	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01d8b	89 8a 68 04 00
	00		 mov	 DWORD PTR [edx+1128], ecx

; 841  : 			lpObj->m_MagicDamageMax += iEffectValue;

  01d91	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01d94	8b 88 6c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1132]
  01d9a	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01d9d	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01da0	89 8a 6c 04 00
	00		 mov	 DWORD PTR [edx+1132], ecx

; 842  : 			break;

  01da6	e9 3f 02 00 00	 jmp	 $LN19@SetItemEqu
$LN10@SetItemEqu:

; 843  : 
; 844  : 		/*case ADD_OPTION_SPEED:
; 845  : 			lpObj->m_AttackSpeed += iEffectValue;
; 846  : 			lpObj->m_MagicSpeed += iEffectValue;
; 847  : 			break;*/
; 848  : 
; 849  : 		case ADD_OPTION_DEFENSE:
; 850  : 			lpObj->m_Defense += iEffectValue * 10 / 20;

  01dab	8b 45 10	 mov	 eax, DWORD PTR _iEffectValue$[ebp]
  01dae	6b c0 0a	 imul	 eax, 10			; 0000000aH
  01db1	99		 cdq
  01db2	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  01db7	f7 f9		 idiv	 ecx
  01db9	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01dbc	03 82 94 04 00
	00		 add	 eax, DWORD PTR [edx+1172]
  01dc2	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01dc5	89 81 94 04 00
	00		 mov	 DWORD PTR [ecx+1172], eax

; 851  : 			break;

  01dcb	e9 1a 02 00 00	 jmp	 $LN19@SetItemEqu
$LN9@SetItemEqu:

; 852  : 
; 853  : 		case ADD_OPTION_STRENGTH:
; 854  : 			lpObj->AddStrength += iEffectValue;

  01dd0	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01dd3	0f bf 88 20 01
	00 00		 movsx	 ecx, WORD PTR [eax+288]
  01dda	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01ddd	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01de0	66 89 8a 20 01
	00 00		 mov	 WORD PTR [edx+288], cx

; 855  : 			break;

  01de7	e9 fe 01 00 00	 jmp	 $LN19@SetItemEqu
$LN8@SetItemEqu:

; 856  : 
; 857  : 		case ADD_OPTION_DEXTERITY:
; 858  : 			lpObj->AddDexterity += iEffectValue;

  01dec	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01def	0f bf 88 22 01
	00 00		 movsx	 ecx, WORD PTR [eax+290]
  01df6	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01df9	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01dfc	66 89 8a 22 01
	00 00		 mov	 WORD PTR [edx+290], cx

; 859  : 			break;

  01e03	e9 e2 01 00 00	 jmp	 $LN19@SetItemEqu
$LN7@SetItemEqu:

; 860  : 
; 861  : 		case ADD_OPTION_VITALITY:
; 862  : 			lpObj->AddVitality += iEffectValue;

  01e08	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01e0b	0f bf 88 24 01
	00 00		 movsx	 ecx, WORD PTR [eax+292]
  01e12	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01e15	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01e18	66 89 8a 24 01
	00 00		 mov	 WORD PTR [edx+292], cx

; 863  : 			break;

  01e1f	e9 c6 01 00 00	 jmp	 $LN19@SetItemEqu
$LN6@SetItemEqu:

; 864  : 
; 865  : 		case ADD_OPTION_ENERGY:
; 866  : 			lpObj->AddEnergy += iEffectValue;

  01e24	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01e27	0f bf 88 26 01
	00 00		 movsx	 ecx, WORD PTR [eax+294]
  01e2e	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01e31	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01e34	66 89 8a 26 01
	00 00		 mov	 WORD PTR [edx+294], cx

; 867  : 			break;

  01e3b	e9 aa 01 00 00	 jmp	 $LN19@SetItemEqu
$LN5@SetItemEqu:

; 868  : 
; 869  : 		case ADD_OPTION_LEADERSHIP:
; 870  : 			lpObj->AddLeadership += iEffectValue;

  01e40	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01e43	0f b7 88 1a 01
	00 00		 movzx	 ecx, WORD PTR [eax+282]
  01e4a	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01e4d	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01e50	66 89 8a 1a 01
	00 00		 mov	 WORD PTR [edx+282], cx

; 871  : 			break;

  01e57	e9 8e 01 00 00	 jmp	 $LN19@SetItemEqu
$LN4@SetItemEqu:

; 872  : 
; 873  : 		case ADD_OPTION_WRATH:
; 874  : 			lpObj->m_AttackDamageMaxLeft += iEffectValue;

  01e5c	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01e5f	8b 88 78 04 00
	00		 mov	 ecx, DWORD PTR [eax+1144]
  01e65	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01e68	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01e6b	89 8a 78 04 00
	00		 mov	 DWORD PTR [edx+1144], ecx

; 875  : 			lpObj->m_AttackDamageMinLeft += iEffectValue;

  01e71	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01e74	8b 88 7c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1148]
  01e7a	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01e7d	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01e80	89 8a 7c 04 00
	00		 mov	 DWORD PTR [edx+1148], ecx

; 876  : 			lpObj->m_AttackDamageMaxRight += iEffectValue;

  01e86	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01e89	8b 88 80 04 00
	00		 mov	 ecx, DWORD PTR [eax+1152]
  01e8f	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01e92	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01e95	89 8a 80 04 00
	00		 mov	 DWORD PTR [edx+1152], ecx

; 877  : 			lpObj->m_AttackDamageMinRight += iEffectValue;

  01e9b	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01e9e	8b 88 84 04 00
	00		 mov	 ecx, DWORD PTR [eax+1156]
  01ea4	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01ea7	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01eaa	89 8a 84 04 00
	00		 mov	 DWORD PTR [edx+1156], ecx

; 878  : 			break;

  01eb0	e9 35 01 00 00	 jmp	 $LN19@SetItemEqu
$LN3@SetItemEqu:

; 879  : 
; 880  : 		case ADD_OPTION_WIZARDRY:
; 881  : 			lpObj->m_MagicDamageMin += iEffectValue;

  01eb5	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01eb8	8b 88 68 04 00
	00		 mov	 ecx, DWORD PTR [eax+1128]
  01ebe	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01ec1	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01ec4	89 8a 68 04 00
	00		 mov	 DWORD PTR [edx+1128], ecx

; 882  : 			lpObj->m_MagicDamageMax += iEffectValue;

  01eca	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01ecd	8b 88 6c 04 00
	00		 mov	 ecx, DWORD PTR [eax+1132]
  01ed3	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01ed6	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01ed9	89 8a 6c 04 00
	00		 mov	 DWORD PTR [edx+1132], ecx

; 883  : 			break;

  01edf	e9 06 01 00 00	 jmp	 $LN19@SetItemEqu
$LN2@SetItemEqu:

; 884  : 
; 885  : 		case ADD_IncreaseIncreaseDamagePercentage:
; 886  : 			lpObj->m_AttackDamageMaxLeft +=  (( lpObj->m_AttackDamageMaxLeft * iEffectValue ) / 100 );

  01ee4	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01ee7	8b 80 78 04 00
	00		 mov	 eax, DWORD PTR [eax+1144]
  01eed	0f af 45 10	 imul	 eax, DWORD PTR _iEffectValue$[ebp]
  01ef1	99		 cdq
  01ef2	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  01ef7	f7 f9		 idiv	 ecx
  01ef9	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01efc	03 82 78 04 00
	00		 add	 eax, DWORD PTR [edx+1144]
  01f02	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01f05	89 81 78 04 00
	00		 mov	 DWORD PTR [ecx+1144], eax

; 887  : 			lpObj->m_AttackDamageMinLeft +=  (( lpObj->m_AttackDamageMinLeft * iEffectValue ) / 100 );

  01f0b	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01f0e	8b 80 7c 04 00
	00		 mov	 eax, DWORD PTR [eax+1148]
  01f14	0f af 45 10	 imul	 eax, DWORD PTR _iEffectValue$[ebp]
  01f18	99		 cdq
  01f19	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  01f1e	f7 f9		 idiv	 ecx
  01f20	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01f23	03 82 7c 04 00
	00		 add	 eax, DWORD PTR [edx+1148]
  01f29	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01f2c	89 81 7c 04 00
	00		 mov	 DWORD PTR [ecx+1148], eax

; 888  : 			lpObj->m_AttackDamageMaxRight += (( lpObj->m_AttackDamageMaxRight* iEffectValue ) / 100 );

  01f32	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01f35	8b 80 80 04 00
	00		 mov	 eax, DWORD PTR [eax+1152]
  01f3b	0f af 45 10	 imul	 eax, DWORD PTR _iEffectValue$[ebp]
  01f3f	99		 cdq
  01f40	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  01f45	f7 f9		 idiv	 ecx
  01f47	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01f4a	03 82 80 04 00
	00		 add	 eax, DWORD PTR [edx+1152]
  01f50	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01f53	89 81 80 04 00
	00		 mov	 DWORD PTR [ecx+1152], eax

; 889  : 			lpObj->m_AttackDamageMinRight += (( lpObj->m_AttackDamageMinRight* iEffectValue ) / 100 );

  01f59	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01f5c	8b 80 84 04 00
	00		 mov	 eax, DWORD PTR [eax+1156]
  01f62	0f af 45 10	 imul	 eax, DWORD PTR _iEffectValue$[ebp]
  01f66	99		 cdq
  01f67	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  01f6c	f7 f9		 idiv	 ecx
  01f6e	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01f71	03 82 84 04 00
	00		 add	 eax, DWORD PTR [edx+1156]
  01f77	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01f7a	89 81 84 04 00
	00		 mov	 DWORD PTR [ecx+1156], eax

; 890  : 	
; 891  : 			lpObj->m_MagicDamageMax += (( gObj->m_MagicDamageMax * iEffectValue ) / 100 );

  01f80	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01f85	8b 80 6c 04 00
	00		 mov	 eax, DWORD PTR [eax+1132]
  01f8b	0f af 45 10	 imul	 eax, DWORD PTR _iEffectValue$[ebp]
  01f8f	99		 cdq
  01f90	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  01f95	f7 f9		 idiv	 ecx
  01f97	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01f9a	03 82 6c 04 00
	00		 add	 eax, DWORD PTR [edx+1132]
  01fa0	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01fa3	89 81 6c 04 00
	00		 mov	 DWORD PTR [ecx+1132], eax

; 892  : 			lpObj->m_MagicDamageMin += (( gObj->m_MagicDamageMin * iEffectValue ) / 100 );

  01fa9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  01fae	8b 80 68 04 00
	00		 mov	 eax, DWORD PTR [eax+1128]
  01fb4	0f af 45 10	 imul	 eax, DWORD PTR _iEffectValue$[ebp]
  01fb8	99		 cdq
  01fb9	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  01fbe	f7 f9		 idiv	 ecx
  01fc0	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01fc3	03 82 68 04 00
	00		 add	 eax, DWORD PTR [edx+1128]
  01fc9	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  01fcc	89 81 68 04 00
	00		 mov	 DWORD PTR [ecx+1128], eax

; 893  : 			break;

  01fd2	eb 16		 jmp	 SHORT $LN19@SetItemEqu
$LN1@SetItemEqu:

; 894  : 
; 895  : 		case ADD_OPTION_MONSTER_DAMAGE_ABSORB:
; 896  : 			lpObj->DamageMinus += iEffectValue;

  01fd4	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  01fd7	0f b6 88 70 01
	00 00		 movzx	 ecx, BYTE PTR [eax+368]
  01fde	03 4d 10	 add	 ecx, DWORD PTR _iEffectValue$[ebp]
  01fe1	8b 55 08	 mov	 edx, DWORD PTR _lpObj$[ebp]
  01fe4	88 8a 70 01 00
	00		 mov	 BYTE PTR [edx+368], cl
$LN19@SetItemEqu:

; 897  : 			break;
; 898  : 	}
; 899  : 
; 900  : 	return true;

  01fea	b0 01		 mov	 al, 1
$LN22@SetItemEqu:

; 901  : }

  01fec	5f		 pop	 edi
  01fed	5e		 pop	 esi
  01fee	5b		 pop	 ebx
  01fef	8b e5		 mov	 esp, ebp
  01ff1	5d		 pop	 ebp
  01ff2	c2 0c 00	 ret	 12			; 0000000cH
  01ff5	8d 49 00	 npad	 3
$LN25@SetItemEqu:
  01ff8	00 00 00 00	 DD	 $LN11@SetItemEqu
  01ffc	00 00 00 00	 DD	 $LN10@SetItemEqu
  02000	00 00 00 00	 DD	 $LN15@SetItemEqu
  02004	00 00 00 00	 DD	 $LN12@SetItemEqu
  02008	00 00 00 00	 DD	 $LN9@SetItemEqu
  0200c	00 00 00 00	 DD	 $LN8@SetItemEqu
  02010	00 00 00 00	 DD	 $LN7@SetItemEqu
  02014	00 00 00 00	 DD	 $LN6@SetItemEqu
  02018	00 00 00 00	 DD	 $LN5@SetItemEqu
  0201c	00 00 00 00	 DD	 $LN4@SetItemEqu
  02020	00 00 00 00	 DD	 $LN3@SetItemEqu
  02024	00 00 00 00	 DD	 $LN16@SetItemEqu
  02028	00 00 00 00	 DD	 $LN1@SetItemEqu
  0202c	00 00 00 00	 DD	 $LN18@SetItemEqu
  02030	00 00 00 00	 DD	 $LN17@SetItemEqu
  02034	00 00 00 00	 DD	 $LN13@SetItemEqu
  02038	00 00 00 00	 DD	 $LN14@SetItemEqu
  0203c	00 00 00 00	 DD	 $LN2@SetItemEqu
  02040	00 00 00 00	 DD	 $LN19@SetItemEqu
$LN24@SetItemEqu:
  02044	00		 DB	 0
  02045	01		 DB	 1
  02046	02		 DB	 2
  02047	03		 DB	 3
  02048	12		 DB	 18			; 00000012H
  02049	12		 DB	 18			; 00000012H
  0204a	12		 DB	 18			; 00000012H
  0204b	04		 DB	 4
  0204c	05		 DB	 5
  0204d	06		 DB	 6
  0204e	07		 DB	 7
  0204f	08		 DB	 8
  02050	09		 DB	 9
  02051	0a		 DB	 10			; 0000000aH
  02052	12		 DB	 18			; 00000012H
  02053	12		 DB	 18			; 00000012H
  02054	12		 DB	 18			; 00000012H
  02055	12		 DB	 18			; 00000012H
  02056	12		 DB	 18			; 00000012H
  02057	12		 DB	 18			; 00000012H
  02058	12		 DB	 18			; 00000012H
  02059	12		 DB	 18			; 00000012H
  0205a	12		 DB	 18			; 00000012H
  0205b	12		 DB	 18			; 00000012H
  0205c	12		 DB	 18			; 00000012H
  0205d	12		 DB	 18			; 00000012H
  0205e	12		 DB	 18			; 00000012H
  0205f	12		 DB	 18			; 00000012H
  02060	12		 DB	 18			; 00000012H
  02061	12		 DB	 18			; 00000012H
  02062	12		 DB	 18			; 00000012H
  02063	12		 DB	 18			; 00000012H
  02064	12		 DB	 18			; 00000012H
  02065	12		 DB	 18			; 00000012H
  02066	12		 DB	 18			; 00000012H
  02067	12		 DB	 18			; 00000012H
  02068	12		 DB	 18			; 00000012H
  02069	12		 DB	 18			; 00000012H
  0206a	12		 DB	 18			; 00000012H
  0206b	12		 DB	 18			; 00000012H
  0206c	12		 DB	 18			; 00000012H
  0206d	12		 DB	 18			; 00000012H
  0206e	12		 DB	 18			; 00000012H
  0206f	12		 DB	 18			; 00000012H
  02070	12		 DB	 18			; 00000012H
  02071	12		 DB	 18			; 00000012H
  02072	12		 DB	 18			; 00000012H
  02073	12		 DB	 18			; 00000012H
  02074	12		 DB	 18			; 00000012H
  02075	0b		 DB	 11			; 0000000bH
  02076	0c		 DB	 12			; 0000000cH
  02077	0d		 DB	 13			; 0000000dH
  02078	0e		 DB	 14			; 0000000eH
  02079	0f		 DB	 15			; 0000000fH
  0207a	10		 DB	 16			; 00000010H
  0207b	12		 DB	 18			; 00000012H
  0207c	12		 DB	 18			; 00000012H
  0207d	12		 DB	 18			; 00000012H
  0207e	12		 DB	 18			; 00000012H
  0207f	12		 DB	 18			; 00000012H
  02080	12		 DB	 18			; 00000012H
  02081	12		 DB	 18			; 00000012H
  02082	11		 DB	 17			; 00000011H
?SetItemEquipment@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ENDP ; CItemAddOption::SetItemEquipment
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ??__Eg_ItemAddOption@@YAXXZ
text$yc	SEGMENT
??__Eg_ItemAddOption@@YAXXZ PROC			; `dynamic initializer for 'g_ItemAddOption'', COMDAT

; 9    : CItemAddOption g_ItemAddOption;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ItemAddOption@@3VCItemAddOption@@A ; g_ItemAddOption
  0000e	e8 00 00 00 00	 call	 ??0CItemAddOption@@QAE@XZ ; CItemAddOption::CItemAddOption
  00013	68 00 00 00 00	 push	 OFFSET ??__Fg_ItemAddOption@@YAXXZ ; `dynamic atexit destructor for 'g_ItemAddOption''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__Eg_ItemAddOption@@YAXXZ ENDP			; `dynamic initializer for 'g_ItemAddOption''
; Function compile flags: /Odtp /ZI
text$yc	ENDS
;	COMDAT ??__Fg_ItemAddOption@@YAXXZ
text$yd	SEGMENT
??__Fg_ItemAddOption@@YAXXZ PROC			; `dynamic atexit destructor for 'g_ItemAddOption'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ItemAddOption@@3VCItemAddOption@@A ; g_ItemAddOption
  0000e	e8 00 00 00 00	 call	 ??1CItemAddOption@@UAE@XZ ; CItemAddOption::~CItemAddOption
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__Fg_ItemAddOption@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_ItemAddOption''
text$yd	ENDS
PUBLIC	?g_ItemAddOption@@3VCItemAddOption@@A		; g_ItemAddOption
_BSS	SEGMENT
?g_ItemAddOption@@3VCItemAddOption@@A DB 0c84H DUP (?)	; g_ItemAddOption
_BSS	ENDS
CRT$XCU	SEGMENT
_g_ItemAddOption$initializer$ DD FLAT:??__Eg_ItemAddOption@@YAXXZ
CRT$XCU	ENDS
END
